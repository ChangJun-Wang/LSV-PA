
src/bool/lucky/luckyFast6.c,1500
void resetPCanonPermArray_6Vars(char* x)resetPCanonPermArray_6Vars21,477
void resetPCanonPermArray(char* x, int nVars)resetPCanonPermArray30,606
 word Abc_allFlip(word x, unsigned* pCanonPhase)Abc_allFlip39,717
unsigned adjustInfoAfterSwap(char* pCanonPerm, unsigned uCanonPhase, int iVar, unsigned info)adjustInfoAfterSwap51,888
word Extra_Truth6SwapAdjacent( word t, int iVar )Extra_Truth6SwapAdjacent73,1470
word Extra_Truth6ChangePhase( word t, int iVar)Extra_Truth6ChangePhase86,2258
word Extra_Truth6MinimumRoundOne( word t, int iVar, char* pCanonPerm, unsigned* pCanonPhase )Extra_Truth6MinimumRoundOne101,2723
word Extra_Truth6MinimumRoundOne_noEBFC( word t, int iVar,  char* pCanonPerm, unsigned* pCanonPhase)Extra_Truth6MinimumRoundOne_noEBFC158,4005
word Extra_Truth6MinimumRoundMany( word t, int* pStore, char* pCanonPerm, unsigned* pCanonPhase )Extra_Truth6MinimumRoundMany176,4563
word Extra_Truth6MinimumRoundMany_noEBFC( word t, int* pStore, char* pCanonPerm, unsigned* pCanonPhase )Extra_Truth6MinimumRoundMany_noEBFC195,5093
word Extra_Truth6MinimumRoundMany1( word t, int* pStore, char* pCanonPerm, unsigned* pCanonPhase )Extra_Truth6MinimumRoundMany1213,5637
word luckyCanonicizer_final_fast_6Vars(word InOut, int* pStore, char* pCanonPerm, unsigned* pCanonPhase)luckyCanonicizer_final_fast_6Vars265,7399
word luckyCanonicizer_final_fast_6Vars1(word InOut, int* pStore, char* pCanonPerm, unsigned* pCanonPhase )luckyCanonicizer_final_fast_6Vars1270,7677

src/bool/lucky/lucky.c,2564
int memCompare(word* x, word*  y, int nVars)memCompare22,459
 int compareWords1 (const void * a, const void * b)compareWords137,852
 void sortAndUnique1(word* a, Abc_TtStore_t* p)sortAndUnique146,1030
int compareWords2 (const void ** x, const void ** y)compareWords262,1552
int compareWords (const void ** a, const void ** b)compareWords73,1759
int compareWords3 (const void ** x, const void ** y)compareWords380,1989
void sortAndUnique(word** a, Abc_TtStore_t* p)sortAndUnique84,2101
     int totalCycles;totalCycles103,2723
     int maxNCycles;maxNCycles104,2745
     int minNCycles;minNCycles105,2766
}cycleCtr;cycleCtr107,2793
cycleCtr* setCycleCtrPtr()setCycleCtrPtr108,2804
void freeCycleCtr(cycleCtr* x)freeCycleCtr116,2982
word** makeArray(Abc_TtStore_t* p)makeArray120,3030
void freeArray(word** a,Abc_TtStore_t* p)freeArray133,3317
word* makeArrayB(word** a, int nFuncs)makeArrayB141,3437
void freeArrayB(word* b)freeArrayB151,3615
void printCCtrInfo(cycleCtr* cCtr, int nFuncs)printCCtrInfo276,7818
int minimalInitialFlip1(word* pInOut, int  nVars)minimalInitialFlip1286,8294
int minimalFlip1(word* pInOut, word* pMinimal, word* PDuplicat, int  nVars) minimalFlip1301,8711
int minimalSwap1(word* pInOut, word* pMinimal, word* PDuplicat, int  nVars) minimalSwap1332,9775
int minimalInitialFlip(word* pInOut, int  nVars, unsigned* p_uCanonPhase)minimalInitialFlip362,10816
int minimalFlip(word* pInOut, word* pMinimal, word* PDuplicat, int  nVars, unsigned* p_uCanonPhase)minimalFlip378,11297
void swapInfoAdjacentVars(int iVar, char * pCanonPerm, unsigned* p_uCanonPhase)swapInfoAdjacentVars414,12500
int minimalSwap(word* pInOut, word* pMinimal, word* PDuplicat, int  nVars, char * pCanonPerm, char * tempArray, unsigned* p_uCanonPhase) minimalSwap475,14464
void luckyCanonicizer(word* pInOut, word* pAux, word* pAux1, int  nVars, char * pCanonPerm, char * tempArray, unsigned* p_uCanonPhase)luckyCanonicizer564,17639
unsigned luckyCanonicizer1_simple(word* pInOut, word* pAux, word* pAux1, int  nVars, char * pCanonPerm, unsigned CanonPhase)luckyCanonicizer1_simple577,18272
void luckyCanonicizer_final(word* pInOut, word* pAux, word* pAux1, int  nVars)luckyCanonicizer_final591,18751
unsigned Kit_TruthSemiCanonicize_new_internal( word * pInOut, int nVars, char * pCanonPerm )Kit_TruthSemiCanonicize_new_internal599,19102
unsigned Kit_TruthSemiCanonicize_new( unsigned * pInOut, unsigned * pAux, int nVars, char * pCanonPerm )Kit_TruthSemiCanonicize_new611,19571
int main () main630,20137

src/bool/lucky/luckyFast16.c,5058
static word SFmask[5][4] = {SFmask22,509
void swapAndFlip(word* pAfter, int nVars, int iVarInPosition, int jVar, char * pCanonPerm, unsigned* pUCanonPhase)swapAndFlip31,1266
int luckyCheck(word* pAfter, word* pBefore, int nVars, char * pCanonPerm, unsigned uCanonPhase)luckyCheck49,1890
void updataInfo(int iQ, int jQ, int iVar,  char * pCanonPerm, unsigned* pCanonPhase)updataInfo76,2814
int firstShiftWithOneBit(word x, int blockSize)firstShiftWithOneBit84,3106
void arrangeQuoters_superFast_lessThen5(word* pInOut, int start, int iQ, int jQ, int kQ, int lQ, int iVar, int nWords, char * pCanonPerm, unsigned* pCanonPhase)arrangeQuoters_superFast_lessThen5101,3762
int minTemp0_fast(word* pInOut, int iVar, int nWords, int* pDifStart)minTemp0_fast131,5447
int minTemp1_fast(word* pInOut, int iVar, int nWords, int* pDifStart)minTemp1_fast157,6297
int minTemp2_fast(word* pInOut, int iVar, int iQ, int jQ, int nWords, int* pDifStart)minTemp2_fast182,7172
int minTemp3_fast(word* pInOut, int iVar, int start, int finish, int iQ, int jQ, int* pDifStart)minTemp3_fast205,7941
void minimalSwapAndFlipIVar_superFast_lessThen5(word* pInOut, int iVar, int nWords, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_lessThen5229,8772
void minimalSwapAndFlipIVar_superFast_lessThen5_noEBFC(word* pInOut, int iVar, int nWords, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_lessThen5_noEBFC265,10998
void arrangeQuoters_superFast_iVar5(unsigned* pInOut, unsigned* temp, int start,  int iQ, int jQ, int kQ, int lQ, char * pCanonPerm, unsigned* pCanonPhase)arrangeQuoters_superFast_iVar5275,11577
int minTemp0_fast_iVar5(unsigned* pInOut, int nWords, int* pDifStart)minTemp0_fast_iVar5302,12642
int minTemp1_fast_iVar5(unsigned* pInOut, int nWords, int* pDifStart)minTemp1_fast_iVar5328,13337
int minTemp2_fast_iVar5(unsigned* pInOut, int iQ, int jQ, int nWords, int* pDifStart)minTemp2_fast_iVar5354,14032
int minTemp3_fast_iVar5(unsigned* pInOut, int start, int finish, int iQ, int jQ, int* pDifStart)minTemp3_fast_iVar5380,14613
void minimalSwapAndFlipIVar_superFast_iVar5(unsigned* pInOut, int nWords, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_iVar5406,15250
void minimalSwapAndFlipIVar_superFast_iVar5_noEBFC(unsigned* pInOut, int nWords, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_iVar5_noEBFC439,17103
void arrangeQuoters_superFast_moreThen5(word* pInOut, word* temp, int start,  int iQ, int jQ, int kQ, int lQ, int iVar, char * pCanonPerm, unsigned* pCanonPhase)arrangeQuoters_superFast_moreThen5451,17683
int minTemp0_fast_moreThen5(word* pInOut, int iVar, int nWords, int* pDifStart)minTemp0_fast_moreThen5481,18946
int minTemp1_fast_moreThen5(word* pInOut, int iVar, int nWords, int* pDifStart)minTemp1_fast_moreThen5514,19911
int minTemp2_fast_moreThen5(word* pInOut, int iVar, int iQ, int jQ, int nWords, int* pDifStart)minTemp2_fast_moreThen5546,20879
int minTemp3_fast_moreThen5(word* pInOut, int iVar, int start, int finish, int iQ, int jQ, int* pDifStart)minTemp3_fast_moreThen5577,21716
void minimalSwapAndFlipIVar_superFast_moreThen5(word* pInOut, int iVar, int nWords, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_moreThen5608,22611
void minimalSwapAndFlipIVar_superFast_moreThen5_noEBFC(word* pInOut, int iVar, int nWords, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_moreThen5_noEBFC643,24640
void minimalInitialFlip_fast_16Vars(word* pInOut, int  nVars, unsigned* pCanonPhase)minimalInitialFlip_fast_16Vars652,25140
int minimalSwapAndFlipIVar_superFast_all(word* pInOut, int nVars, int nWords, int * pStore, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_all665,25595
int minimalSwapAndFlipIVar_superFast_all_noEBFC(word* pInOut, int nVars, int nWords, int * pStore, char * pCanonPerm, unsigned* pCanonPhase)minimalSwapAndFlipIVar_superFast_all_noEBFC705,26811
void luckyCanonicizerS_F_first_16Vars1(word* pInOut, int  nVars, int nWords, int * pStore, char * pCanonPerm, unsigned* pCanonPhase)luckyCanonicizerS_F_first_16Vars1750,28247
void luckyCanonicizerS_F_first_16Vars11(word* pInOut, int  nVars, int nWords, int * pStore, char * pCanonPerm, unsigned* pCanonPhase)luckyCanonicizerS_F_first_16Vars11760,28716
void luckyCanonicizer_final_fast_16Vars(word* pInOut, int  nVars, int nWords, int * pStore, char * pCanonPerm, unsigned* pCanonPhase)luckyCanonicizer_final_fast_16Vars788,29780
void bitReverceOrder(word* x, int  nVars)bitReverceOrder795,30147
void luckyCanonicizer_final_fast_16Vars1(word* pInOut, int  nVars, int nWords, int * pStore, char * pCanonPerm, unsigned* pCanonPhase)luckyCanonicizer_final_fast_16Vars1803,30286
unsigned luckyCanonicizer_final_fast( word * pInOut, int nVars, char * pCanonPerm )luckyCanonicizer_final_fast818,31086
unsigned luckyCanonicizer_final_fast1( word * pInOut, int nVars, char * pCanonPerm)luckyCanonicizer_final_fast1843,31904

src/bool/lucky/luckyRead.c,2216
static inline int     Abc_TruthGetBit( word * p, int i )         { return (int)(p[i>>6] >> (i & 63)) & 1;        }Abc_TruthGetBit23,509
static inline void    Abc_TruthSetBit( word * p, int i )         { p[i>>6] |= (((word)1)<<(i & 63));             }Abc_TruthSetBit24,624
static inline void    Abc_TruthXorBit( word * p, int i )         { p[i>>6] ^= (((word)1)<<(i & 63));             }Abc_TruthXorBit25,739
static inline int     Abc_TruthGetHex( word * p, int k )         { return (int)(p[k>>4] >> ((k<<2) & 63)) & 15;  }Abc_TruthGetHex28,907
static inline void    Abc_TruthSetHex( word * p, int k, int d )  { p[k>>4] |= (((word)d)<<((k<<2) & 63));        }Abc_TruthSetHex29,1022
static inline void    Abc_TruthXorHex( word * p, int k, int d )  { p[k>>4] ^= (((word)d)<<((k<<2) & 63));        }Abc_TruthXorHex30,1137
static inline int  Abc_TruthReadHexDigit( char HexChar )Abc_TruthReadHexDigit33,1279
static inline void Abc_TruthWriteHexDigit( FILE * pFile, int HexDigit )Abc_TruthWriteHexDigit46,1697
static inline void Abc_TruthReadHex( word * pTruth, char * pString, int nVars )Abc_TruthReadHex56,1986
static inline void Abc_TruthWriteHex( FILE * pFile, word * pTruth, int nVars )Abc_TruthWriteHex81,3118
static inline Abc_TtStore_t * Abc_TruthStoreAlloc( int nVars, int nFuncs )Abc_TruthStoreAlloc96,3666
void Abc_TruthStoreFree( Abc_TtStore_t * p )Abc_TruthStoreFree115,4414
static char * Abc_FileRead( char * pFileName )Abc_FileRead123,4550
static void Abc_TruthGetParams( char * pFileName, int * pnVars, int * pnTruths )Abc_TruthGetParams155,5590
static Abc_TtStore_t * Abc_Create_TtSpore (char * pFileInput)Abc_Create_TtSpore200,7102
static void Abc_TruthStoreRead( char * pFileName, Abc_TtStore_t* p )Abc_TruthStoreRead210,7364
static void Abc_TruthStoreWrite( char * pFileName, Abc_TtStore_t * p )Abc_TruthStoreWrite239,8559
static void WriteToFile(char * pFileName, Abc_TtStore_t * p, word* a)WriteToFile257,8989
static void WriteToFile1(char * pFileName, Abc_TtStore_t * p, word** a)WriteToFile1275,9410
static void WriteToFile2(char * pFileName, Abc_TtStore_t * p, word* a)WriteToFile2296,9974
Abc_TtStore_t * setTtStore(char * pFileInput)setTtStore319,10534

src/bool/lucky/luckySimple.c,1058
static swapInfo* setSwapInfoPtr(int varsN)setSwapInfoPtr21,464
static void freeSwapInfoPtr(swapInfo* x)freeSwapInfoPtr40,946
int nextSwap(swapInfo* x)nextSwap47,1052
void fillInSwapArray(permInfo* pi)fillInSwapArray72,1955
int oneBitPosition(int x, int size)oneBitPosition86,2319
void fillInFlipArray(permInfo* pi)fillInFlipArray94,2452
static inline int factorial(int n)factorial106,2728
permInfo* setPermInfoPtr(int var)setPermInfoPtr110,2825
void freePermInfoPtr(permInfo* x)freePermInfoPtr126,3233
static inline void minWord(word* a, word* b, word* minimal, int nVars)minWord132,3332
static inline void minWord3(word* a, word* b, word* minimal, int nVars)minWord3139,3554
static inline void minWord1(word* a, word* minimal, int nVars)minWord1151,3917
void simpleMinimal(word* x, word* pAux,word* minimal, permInfo* pi, int nVars)simpleMinimal156,4078
void simpleMinimalGroups(word* x, word* pAux, word* minimal, int* pGroups, int nGroups, permInfo** pis, int nVars, int fFlipOutput, int fFlipInput)simpleMinimalGroups194,5414

src/bool/lucky/luckySwapIJ.c,309
void swap_ij_case1( word* f,int totalVars, int i, int j)swap_ij_case123,471
void swap_ij_case2( word* f,int totalVars, int i, int j)swap_ij_case247,2504
void swap_ij_case3( word* f,int totalVars, int i, int j)swap_ij_case368,3265
void swap_ij( word* f,int totalVars, int varI, int varJ)swap_ij88,3882

src/bool/lucky/lucky.h,337
#define ABC__bool__lucky__LUCKY_H_ABC__bool__lucky__LUCKY_H_18,430
    int varN;varN25,512
    int* swapArray;swapArray26,526
    int swapCtr;swapCtr27,546
    int totalSwaps;totalSwaps28,563
    int* flipArray;flipArray29,583
    int flipCtr;flipCtr30,603
    int totalFlips; totalFlips31,620
}permInfo;permInfo32,641

src/bool/lucky/luckySwap.c,1401
static word mask0[6] = { ABC_CONST(0x5555555555555555),ABC_CONST(0x3333333333333333), ABC_CONST(0x0F0F0F0F0F0F0F0F),ABC_CONST(0x00FF00FF00FF00FF),ABC_CONST(0x0000FFFF0000FFFF), ABC_CONST(0x00000000FFFFFFFF)};  mask023,466
int Kit_TruthWordNum_64bit( int nVars )  { return nVars <= 6 ? 1 : (1 << (nVars - 6));}Kit_TruthWordNum_64bit36,1129
int Kit_WordCountOnes_64bit(word x)Kit_WordCountOnes_64bit38,1218
int Kit_TruthCountOnes_64bit( word* pIn, int nVars )Kit_TruthCountOnes_64bit49,1569
void Kit_TruthCountOnesInCofs_64bit( word * pTruth, int nVars, int * pStore )Kit_TruthCountOnesInCofs_64bit57,1784
void Kit_TruthChangePhase_64bit( word * pInOut, int nVars, int iVar )Kit_TruthChangePhase_64bit100,4097
void Kit_TruthNot_64bit(word * pIn, int nVars )Kit_TruthNot_64bit130,5008
void Kit_TruthCopy_64bit( word * pOut, word * pIn, int nVars )Kit_TruthCopy_64bit136,5158
void Kit_TruthSwapAdjacentVars_64bit( word * pInOut, int nVars, int iVar )Kit_TruthSwapAdjacentVars_64bit141,5292
unsigned  Kit_TruthSemiCanonicize_Yasha( word* pInOut, int nVars, char * pCanonPerm )Kit_TruthSemiCanonicize_Yasha186,7085
unsigned  Kit_TruthSemiCanonicize_Yasha1( word* pInOut, int nVars, char * pCanonPerm, int * pStore )Kit_TruthSemiCanonicize_Yasha1245,8793
void  Kit_TruthSemiCanonicize_Yasha_simple( word* pInOut, int nVars, int * pStore )Kit_TruthSemiCanonicize_Yasha_simple358,12070

src/bool/lucky/luckyInt.h,1682
#define ABC__bool__lucky__LUCKY_INT_H_ABC__bool__lucky__LUCKY_INT_H_18,437
#define _RUNNING_ABC__RUNNING_ABC_28,651
#define ABC_NAMESPACE_HEADER_STARTABC_NAMESPACE_HEADER_START37,757
#define ABC_NAMESPACE_HEADER_ENDABC_NAMESPACE_HEADER_END38,792
#define ABC_NAMESPACE_IMPL_STARTABC_NAMESPACE_IMPL_START39,825
#define ABC_NAMESPACE_IMPL_ENDABC_NAMESPACE_IMPL_END40,858
typedef unsigned __int64  word;word41,889
#define bool bool42,921
#define false false43,938
#define true true44,954
#define inline inline45,969
#define ABC_ALLOC(ABC_ALLOC46,1023
    int varN;varN51,1137
    int* swapArray;swapArray52,1151
    int swapCtr;swapCtr53,1171
    int totalSwaps;totalSwaps54,1188
    int* flipArray;flipArray55,1208
    int flipCtr;flipCtr56,1228
    int totalFlips; totalFlips57,1245
}permInfo;permInfo58,1266
    int      nVars;nVars67,1334
    int      nWords;nWords68,1354
    int      nFuncs;nFuncs69,1375
    word **  pFuncs;pFuncs70,1396
}Abc_TtStore_t;Abc_TtStore_t71,1417
    int direction; direction75,1452
    int position;position76,1472
} varInfo;varInfo77,1490
    varInfo* posArray;posArray82,1521
    int* realArray;realArray83,1544
    int varN;varN84,1564
    int positionToSwap1;positionToSwap185,1578
    int positionToSwap2;positionToSwap286,1603
} swapInfo;swapInfo87,1628
static inline void TimePrint( char* Message )TimePrint90,1642
static inline int CompareWords( word x, word y)CompareWords99,1888
static inline int       luckyMin( int x, int y ) { return (x < y) ? x : y; }luckyMin108,2024
static inline int       luckyMax( int x, int y ) { return (x < y) ? y : x; }luckyMax109,2101

src/bool/rpo/literal.h,1486
#define ABC__bool__rpo__literal_hABC__bool__rpo__literal_h22,540
    LIT_NONE = 0, // 0: unknownLIT_NONE43,1201
    LIT_AND, // 1: AND associationLIT_AND44,1233
    LIT_OR, // 2: OR associationLIT_OR45,1268
    LIT_XOR // 3: XOR association (not used yet)LIT_XOR46,1301
} Operator_t;Operator_t47,1350
typedef struct Literal_t_ Literal_t;Literal_t50,1366
struct Literal_t_ {Literal_t_52,1404
    unsigned * transition;transition53,1424
    unsigned * function;function54,1451
    Vec_Str_t * expression;expression55,1476
static inline void Lit_TruthPositiveTransition( unsigned * pIn, unsigned * pOut, int nVars, int varIdx )Lit_TruthPositiveTransition75,2136
static inline void Lit_TruthNegativeTransition( unsigned * pIn, unsigned * pOut, int nVars, int varIdx )Lit_TruthNegativeTransition103,3115
static inline Literal_t* Lit_Alloc(unsigned* pTruth, int nVars, int varIdx, char pol) {Lit_Alloc131,4039
static inline Literal_t* Lit_GroupLiterals(Literal_t* lit1, Literal_t* lit2, Operator_t op, int nVars) {Lit_GroupLiterals178,5514
static inline Literal_t* Lit_CreateLiteralConst(unsigned* pTruth, int nVars, int constant) {Lit_CreateLiteralConst237,7450
static inline Literal_t* Lit_Copy(Literal_t* lit, int nVars) {Lit_Copy249,7842
static inline void Lit_PrintTT(unsigned* tt, int nVars) {Lit_PrintTT260,8352
static inline void Lit_PrintExp(Literal_t* lit) {Lit_PrintExp267,8504
static inline void Lit_Free(Literal_t * lit) {Lit_Free283,8862

src/bool/rpo/rpo.c,1145
typedef struct Rpo_Man_t_ Rpo_Man_t;Rpo_Man_t38,917
struct Rpo_Man_t_ {Rpo_Man_t_40,955
    unsigned * target;target41,975
    int nVars;nVars42,998
    Literal_t ** literals;literals44,1014
    int nLits;nLits45,1041
    int nLitsMax;nLitsMax46,1056
    Rpo_LCI_Edge_t* lci;lci48,1075
    int nLCIElems;nLCIElems49,1100
    int thresholdMax;thresholdMax51,1120
int Rpo_CheckANDGroup(Literal_t* lit1, Literal_t* lit2, int nVars) {Rpo_CheckANDGroup71,1640
int Rpo_CheckORGroup(Literal_t* lit1, Literal_t* lit2, int nVars) {Rpo_CheckORGroup106,2770
Rpo_LCI_Edge_t* Rpo_CreateEdge(Operator_t op, int i, int j, int* vertexDegree) {Rpo_CreateEdge121,3302
int Rpo_computeMinEdgeCost(Rpo_LCI_Edge_t** edges, int edgeCount, int* vertexDegree) {Rpo_computeMinEdgeCost132,3600
void Rpo_PrintEdge(Rpo_LCI_Edge_t* edge) {Rpo_PrintEdge159,4505
Literal_t* Rpo_Factorize(unsigned* target, int nVars, int nThreshold, int verbose) {Rpo_Factorize174,4876
Literal_t* Rpo_Recursion(unsigned* target, Literal_t** vecLit, int nLit, int nLitCount, int nVars, int* thresholdCount, int thresholdMax, int verbose) {Rpo_Recursion228,6243

src/bool/rpo/rpo.h,419
#define ABC__bool__rpo__rpo_hABC__bool__rpo__rpo_h22,521
typedef struct Rpo_LCI_Edge_t_ Rpo_LCI_Edge_t;Rpo_LCI_Edge_t36,1042
struct Rpo_LCI_Edge_t_ {Rpo_LCI_Edge_t_38,1090
    unsigned long visited : 1;visited39,1115
    unsigned long connectionType : 2;connectionType40,1146
    unsigned long reserved : 1;reserved41,1184
    unsigned long idx1 : 30;idx142,1216
    unsigned long idx2 : 30;idx243,1245

src/bool/deco/deco.h,6004
#define ABC__aig__deco__deco_hABC__aig__deco__deco_h22,571
typedef struct Dec_Edge_t_ Dec_Edge_t;Dec_Edge_t42,1295
struct Dec_Edge_t_Dec_Edge_t_43,1334
    unsigned          fCompl   :  1;   // the complemented bitfCompl45,1355
    unsigned          Node     : 30;   // the decomposition node pointed by the edgeNode46,1418
typedef struct Dec_Node_t_ Dec_Node_t;Dec_Node_t49,1507
struct Dec_Node_t_Dec_Node_t_50,1546
    Dec_Edge_t        eEdge0;          // the left child of the nodeeEdge052,1567
    Dec_Edge_t        eEdge1;          // the right child of the nodeeEdge153,1636
    union { int       iFunc;           // the literal of the node (AIG)iFunc55,1724
    void *            pFunc; };        // the function of the node (BDD or AIG)pFunc56,1796
    unsigned          Level    : 14;   // the level of this node in the global AIGLevel57,1876
    unsigned          fNodeOr  :  1;   // marks the original OR nodefNodeOr59,1981
    unsigned          fCompl0  :  1;   // marks the original complemented edgefCompl060,2050
    unsigned          fCompl1  :  1;   // marks the original complemented edgefCompl161,2129
    unsigned          nLat0    :  5;   // the number of latches on the first edgenLat063,2226
    unsigned          nLat1    :  5;   // the number of latches on the second edgenLat164,2308
    unsigned          nLat2    :  5;   // the number of latches on the output edgenLat265,2391
typedef struct Dec_Graph_t_ Dec_Graph_t;Dec_Graph_t68,2478
struct Dec_Graph_t_Dec_Graph_t_69,2519
    int               fConst;          // marks the constant 1 graphfConst71,2541
    int               nLeaves;         // the number of leavesnLeaves72,2610
    int               nSize;           // the number of nodes (including the leaves) nSize73,2673
    int               nCap;            // the number of allocated nodesnCap74,2759
    Dec_Node_t *      pNodes;          // the array of leaves and internal nodespNodes75,2831
    Dec_Edge_t        eRoot;           // the pointer to the topmost nodeeRoot76,2912
typedef struct Dec_Man_t_ Dec_Man_t;Dec_Man_t79,2990
struct Dec_Man_t_Dec_Man_t_80,3027
    void *            pMvcMem;         // memory manager for MVC cover (used for factoring)pMvcMem82,3047
    Vec_Int_t *       vCubes;          // storage for cubesvCubes83,3139
    Vec_Int_t *       vLits;           // storage for literals vLits84,3199
    unsigned short *  puCanons;        // canonical formspuCanons86,3324
    char *            pPhases;         // canonical phasespPhases87,3382
    char *            pPerms;          // canonical permutationspPerms88,3441
    unsigned char *   pMap;            // mapping of functions into class numberspMap89,3506
#define Dec_GraphForEachLeaf(Dec_GraphForEachLeaf98,3844
#define Dec_GraphForEachNode(Dec_GraphForEachNode101,4072
static inline Dec_Edge_t Dec_EdgeCreate( int Node, int fCompl )   Dec_EdgeCreate123,5008
static inline unsigned Dec_EdgeToInt( Dec_Edge_t eEdge )   Dec_EdgeToInt140,5435
static inline Dec_Edge_t Dec_IntToEdge( unsigned Edge )   Dec_IntToEdge156,5820
static inline unsigned Dec_EdgeToInt_( Dec_Edge_t m )  { union { Dec_Edge_t x; unsigned y; } v; v.x = m; return v.y;  }Dec_EdgeToInt_172,6209
static inline Dec_Edge_t Dec_IntToEdge_( unsigned m )    { union { Dec_Edge_t x; unsigned y; } v; v.y = m; return v.x;  }Dec_IntToEdge_191,6707
static inline Dec_Graph_t * Dec_GraphCreate( int nLeaves )   Dec_GraphCreate210,7215
static inline Dec_Graph_t * Dec_GraphCreateConst0()   Dec_GraphCreateConst0234,7900
static inline Dec_Graph_t * Dec_GraphCreateConst1()   Dec_GraphCreateConst1255,8406
static inline Dec_Graph_t * Dec_GraphCreateLeaf( int iLeaf, int nLeaves, int fCompl )   Dec_GraphCreateLeaf275,8883
static inline void Dec_GraphFree( Dec_Graph_t * pGraph )   Dec_GraphFree296,9459
static inline int Dec_GraphIsConst( Dec_Graph_t * pGraph )   Dec_GraphIsConst313,9851
static inline int Dec_GraphIsConst0( Dec_Graph_t * pGraph )   Dec_GraphIsConst0329,10216
static inline int Dec_GraphIsConst1( Dec_Graph_t * pGraph )   Dec_GraphIsConst1345,10606
static inline int Dec_GraphIsComplement( Dec_Graph_t * pGraph )   Dec_GraphIsComplement361,10999
static inline void Dec_GraphComplement( Dec_Graph_t * pGraph )   Dec_GraphComplement377,11374
static inline int Dec_GraphLeaveNum( Dec_Graph_t * pGraph )   Dec_GraphLeaveNum394,11740
static inline int Dec_GraphNodeNum( Dec_Graph_t * pGraph )   Dec_GraphNodeNum410,12107
static inline Dec_Node_t * Dec_GraphNode( Dec_Graph_t * pGraph, int i )   Dec_GraphNode426,12484
static inline Dec_Node_t * Dec_GraphNodeLast( Dec_Graph_t * pGraph )   Dec_GraphNodeLast442,12861
static inline int Dec_GraphNodeInt( Dec_Graph_t * pGraph, Dec_Node_t * pNode )   Dec_GraphNodeInt458,13256
static inline int Dec_GraphIsVar( Dec_Graph_t * pGraph )   Dec_GraphIsVar474,13662
static inline int Dec_GraphNodeIsVar( Dec_Graph_t * pGraph, Dec_Node_t * pNode )   Dec_GraphNodeIsVar490,14070
static inline Dec_Node_t * Dec_GraphVar( Dec_Graph_t * pGraph )   Dec_GraphVar506,14506
static inline int Dec_GraphVarInt( Dec_Graph_t * pGraph )   Dec_GraphVarInt523,14954
static inline void Dec_GraphSetRoot( Dec_Graph_t * pGraph, Dec_Edge_t eRoot )   Dec_GraphSetRoot540,15382
static inline Dec_Node_t * Dec_GraphAppendNode( Dec_Graph_t * pGraph )   Dec_GraphAppendNode556,15802
static inline Dec_Edge_t Dec_GraphAddNodeAnd( Dec_Graph_t * pGraph, Dec_Edge_t eEdge0, Dec_Edge_t eEdge1 )Dec_GraphAddNodeAnd580,16450
static inline Dec_Edge_t Dec_GraphAddNodeOr( Dec_Graph_t * pGraph, Dec_Edge_t eEdge0, Dec_Edge_t eEdge1 )Dec_GraphAddNodeOr604,17122
static inline Dec_Edge_t Dec_GraphAddNodeXor( Dec_Graph_t * pGraph, Dec_Edge_t eEdge0, Dec_Edge_t eEdge1, int Type )Dec_GraphAddNodeXor632,17958
static inline Dec_Edge_t Dec_GraphAddNodeMux( Dec_Graph_t * pGraph, Dec_Edge_t eEdgeC, Dec_Edge_t eEdgeT, Dec_Edge_t eEdgeE, int Type )Dec_GraphAddNodeMux673,19183

src/bool/kit/kitFactor.c,1051
#define KIT_FACTOR_MEM_LIMIT KIT_FACTOR_MEM_LIMIT31,831
Kit_Graph_t * Kit_SopFactor( Vec_Int_t * vCover, int fCompl, int nVars, Vec_Int_t * vMemory )Kit_SopFactor55,1874
Kit_Edge_t Kit_SopFactor_rec( Kit_Graph_t * pFForm, Kit_Sop_t * cSop, int nLits, Vec_Int_t * vMemory )Kit_SopFactor_rec108,3557
Kit_Edge_t Kit_SopFactorLF_rec( Kit_Graph_t * pFForm, Kit_Sop_t * cSop, Kit_Sop_t * cSimple, int nLits, Vec_Int_t * vMemory )Kit_SopFactorLF_rec166,5484
Kit_Edge_t Kit_SopFactorTrivialCube_rec( Kit_Graph_t * pFForm, unsigned uCube, int nStart, int nFinish )Kit_SopFactorTrivialCube_rec199,6765
Kit_Edge_t Kit_SopFactorTrivialCube( Kit_Graph_t * pFForm, unsigned uCube, int nLits )Kit_SopFactorTrivialCube247,8214
Kit_Edge_t Kit_SopFactorTrivial_rec( Kit_Graph_t * pFForm, unsigned * pCubes, int nCubes, int nLits )Kit_SopFactorTrivial_rec263,8622
Kit_Edge_t Kit_SopFactorTrivial( Kit_Graph_t * pFForm, Kit_Sop_t * cSop, int nLits )Kit_SopFactorTrivial291,9601
void Kit_FactorTest( unsigned * pTruth, int nVars )Kit_FactorTest308,10049

src/bool/kit/kitIsop.c,819
#define KIT_ISOP_MEM_LIMIT KIT_ISOP_MEM_LIMIT31,861
int Kit_TruthIsop2( unsigned * puTruth0, unsigned * puTruth1, int nVars, Vec_Int_t * vMemory, int fTryBoth, int fReturnTt )Kit_TruthIsop255,1892
int Kit_TruthIsop( unsigned * puTruth, int nVars, Vec_Int_t * vMemory, int fTryBoth )Kit_TruthIsop134,4761
void Kit_TruthIsopPrintCover( Vec_Int_t * vCover, int nVars, int fCompl )Kit_TruthIsopPrintCover183,6598
void Kit_TruthIsopPrint( unsigned * puTruth, int nVars, Vec_Int_t * vCover, int fTryBoth )Kit_TruthIsopPrint207,7346
unsigned * Kit_TruthIsop_rec( unsigned * puOn, unsigned * puOnDc, int nVars, Kit_Sop_t * pcRes, Vec_Int_t * vStore )Kit_TruthIsop_rec224,7832
unsigned Kit_TruthIsop5_rec( unsigned uOn, unsigned uOnDc, int nVars, Kit_Sop_t * pcRes, Vec_Int_t * vStore )Kit_TruthIsop5_rec351,12154

src/bool/kit/kitBdd.c,541
DdNode * Kit_SopToBdd( DdManager * dd, Kit_Sop_t * cSop, int nVars )Kit_SopToBdd51,1335
DdNode * Kit_GraphToBdd( DdManager * dd, Kit_Graph_t * pGraph )Kit_GraphToBdd96,2700
DdNode * Kit_TruthToBdd_rec( DdManager * dd, unsigned * pTruth, int iBit, int nVars, int nVarsTotal, int fMSBonTop )Kit_TruthToBdd_rec146,4442
DdNode * Kit_TruthToBdd( DdManager * dd, unsigned * pTruth, int nVars, int fMSBonTop )Kit_TruthToBdd187,6063
int Kit_SopFactorVerify( Vec_Int_t * vCover, Kit_Graph_t * pFForm, int nVars )Kit_SopFactorVerify203,6501

src/bool/kit/kitAig.c,366
Aig_Obj_t * Kit_GraphToAigInternal( Aig_Man_t * pMan, Kit_Graph_t * pGraph )Kit_GraphToAigInternal46,1292
Aig_Obj_t * Kit_GraphToAig( Aig_Man_t * pMan, Aig_Obj_t ** pFanins, Kit_Graph_t * pGraph )Kit_GraphToAig79,2579
Aig_Obj_t * Kit_TruthToAig( Aig_Man_t * pMan, Aig_Obj_t ** pFanins, unsigned * pTruth, int nVars, Vec_Int_t * vMemory )Kit_TruthToAig101,3181

src/bool/kit/kitCloud.c,1662
typedef struct Kit_Mux_t_ Kit_Mux_t;Kit_Mux_t31,838
struct Kit_Mux_t_Kit_Mux_t_32,875
    unsigned      v  :  5;          // variable v34,895
    unsigned      t  : 12;          // then edget35,944
    unsigned      e  : 12;          // else edgee36,993
    unsigned      c  :  1;          // complemented attr of else edgec37,1042
    unsigned      i  :  1;          // complemented attr of top nodei38,1112
static inline int        Kit_Mux2Int( Kit_Mux_t m )  { union { Kit_Mux_t x; int y; } v; v.x = m; return v.y;  }Kit_Mux2Int41,1185
static inline Kit_Mux_t  Kit_Int2Mux( int m )        { union { Kit_Mux_t x; int y; } v; v.y = m; return v.x;  }Kit_Int2Mux42,1297
CloudNode * Kit_TruthToCloud5_rec( CloudManager * dd, unsigned uTruth, int nVars, int nVarsAll )Kit_TruthToCloud5_rec59,1921
CloudNode * Kit_TruthToCloud_rec( CloudManager * dd, unsigned * pTruth, int nVars, int nVarsAll )Kit_TruthToCloud_rec109,3466
CloudNode * Kit_TruthToCloud( CloudManager * dd, unsigned * pTruth, int nVars )Kit_TruthToCloud148,4784
int Kit_CreateCloud( CloudManager * dd, CloudNode * pFunc, Vec_Int_t * vNodes )Kit_CreateCloud167,5328
int Kit_CreateCloudFromTruth( CloudManager * dd, unsigned * pTruth, int nVars, Vec_Int_t * vNodes )Kit_CreateCloudFromTruth209,6671
unsigned * Kit_CloudToTruth( Vec_Int_t * vNodes, int nVars, Vec_Ptr_t * vStore, int fInv )Kit_CloudToTruth229,7223
unsigned * Kit_TruthCompose( CloudManager * dd, unsigned * pTruth, int nVars, Kit_TruthCompose263,8372
void Kit_TruthCofSupports( Vec_Int_t * vBddDir, Vec_Int_t * vBddInv, int nVars, Vec_Int_t * vMemory, unsigned * puSupps )Kit_TruthCofSupports310,10041

src/bool/kit/kitTruth.c,4591
void Kit_TruthSwapAdjacentVars( unsigned * pOut, unsigned * pIn, int nVars, int iVar )Kit_TruthSwapAdjacentVars46,1407
void Kit_TruthSwapAdjacentVars2( unsigned * pIn, unsigned * pOut, int nVars, int Start )Kit_TruthSwapAdjacentVars2103,3279
void Kit_TruthStretch( unsigned * pOut, unsigned * pIn, int nVars, int nVarsAll, unsigned Phase, int fReturnIn )Kit_TruthStretch166,5516
void Kit_TruthShrink( unsigned * pOut, unsigned * pIn, int nVars, int nVarsAll, unsigned Phase, int fReturnIn )Kit_TruthShrink200,6709
void Kit_TruthPermute( unsigned * pOut, unsigned * pIn, int nVars, char * pPerm, int fReturnIn )Kit_TruthPermute233,7785
int Kit_TruthVarInSupport( unsigned * pTruth, int nVars, int iVar )Kit_TruthVarInSupport270,8796
int Kit_TruthSupportSize( unsigned * pTruth, int nVars )Kit_TruthSupportSize327,10418
unsigned Kit_TruthSupport( unsigned * pTruth, int nVars )Kit_TruthSupport346,10886
void Kit_TruthCofactor0( unsigned * pTruth, int nVars, int iVar )Kit_TruthCofactor0368,11396
int Kit_TruthCofactor0Count( unsigned * pTruth, int nVars, int iVar )Kit_TruthCofactor0Count419,12870
void Kit_TruthCofactor1( unsigned * pTruth, int nVars, int iVar )Kit_TruthCofactor1470,14331
void Kit_TruthCofactor0New( unsigned * pOut, unsigned * pIn, int nVars, int iVar )Kit_TruthCofactor0New521,15805
void Kit_TruthCofactor1New( unsigned * pOut, unsigned * pIn, int nVars, int iVar )Kit_TruthCofactor1New573,17286
int Kit_TruthVarIsVacuous( unsigned * pOnset, unsigned * pOffset, int nVars, int iVar )Kit_TruthVarIsVacuous625,18773
void Kit_TruthExist( unsigned * pTruth, int nVars, int iVar )Kit_TruthExist684,20596
void Kit_TruthExistNew( unsigned * pRes, unsigned * pTruth, int nVars, int iVar )Kit_TruthExistNew738,22184
void Kit_TruthExistSet( unsigned * pRes, unsigned * pTruth, int nVars, unsigned uMask )Kit_TruthExistSet793,23879
void Kit_TruthForall( unsigned * pTruth, int nVars, int iVar )Kit_TruthForall813,24406
void Kit_TruthForallNew( unsigned * pRes, unsigned * pTruth, int nVars, int iVar )Kit_TruthForallNew867,25993
void Kit_TruthUniqueNew( unsigned * pRes, unsigned * pTruth, int nVars, int iVar )Kit_TruthUniqueNew922,27689
int Kit_TruthBooleanDiffCount( unsigned * pTruth, int nVars, int iVar )Kit_TruthBooleanDiffCount977,29406
int Kit_TruthXorCount( unsigned * pTruth0, unsigned * pTruth1, int nVars )Kit_TruthXorCount1028,31017
void Kit_TruthForallSet( unsigned * pRes, unsigned * pTruth, int nVars, unsigned uMask )Kit_TruthForallSet1048,31563
void Kit_TruthMuxVar( unsigned * pOut, unsigned * pCof0, unsigned * pCof1, int nVars, int iVar )Kit_TruthMuxVar1069,32108
void Kit_TruthMuxVarPhase( unsigned * pOut, unsigned * pCof0, unsigned * pCof1, int nVars, int iVar, int fCompl0 )Kit_TruthMuxVarPhase1125,33691
int Kit_TruthVarsSymm( unsigned * pTruth, int nVars, int iVar0, int iVar1, unsigned * pCof0, unsigned * pCof1 )Kit_TruthVarsSymm1187,35394
int Kit_TruthVarsAntiSymm( unsigned * pTruth, int nVars, int iVar0, int iVar1, unsigned * pCof0, unsigned * pCof1 )Kit_TruthVarsAntiSymm1223,36393
void Kit_TruthChangePhase( unsigned * pTruth, int nVars, int iVar )Kit_TruthChangePhase1259,37409
int Kit_TruthMinCofSuppOverlap( unsigned * pTruth, int nVars, int * pVarMin )Kit_TruthMinCofSuppOverlap1315,39048
int Kit_TruthBestCofVar( unsigned * pTruth, int nVars, unsigned * pCof0, unsigned * pCof1 )Kit_TruthBestCofVar1365,40579
void Kit_TruthCountOnesInCofs( unsigned * pTruth, int nVars, int * pStore )Kit_TruthCountOnesInCofs1410,42280
void Kit_TruthCountOnesInCofs0( unsigned * pTruth, int nVars, int * pStore )Kit_TruthCountOnesInCofs01486,45555
void Kit_TruthCountOnesInCofsSlow( unsigned * pTruth, int nVars, int * pStore, unsigned * pAux )Kit_TruthCountOnesInCofsSlow1537,47481
unsigned Kit_TruthHash( unsigned * pIn, int nWords )Kit_TruthHash1560,48141
unsigned Kit_TruthSemiCanonicize( unsigned * pInOut, unsigned * pAux, int nVars, char * pCanonPerm )Kit_TruthSemiCanonicize1657,55134
int Kit_TruthCountMinterms( unsigned * pTruth, int nVars, int * pRes, int * pBytesInit )Kit_TruthCountMinterms1839,60585
void Kit_PrintHexadecimal( FILE * pFile, unsigned Sign[], int nVars )Kit_PrintHexadecimal1939,65902
void Kit_TruthCountMintermsPrecomp()Kit_TruthCountMintermsPrecomp1966,66657
char * Kit_TruthDumpToFile( unsigned * pTruth, int nVars, int nFile )Kit_TruthDumpToFile2004,67997
void Kit_TruthPrintProfile_int( unsigned * pTruth, int nVars )Kit_TruthPrintProfile_int2029,68677
void Kit_TruthPrintProfile( unsigned * pTruth, int nVars )Kit_TruthPrintProfile2203,74451

src/bool/kit/cloud.h,5132
#define ABC__aig__kit__cloud_hABC__aig__kit__cloud_h20,558
#define inline inline35,731
typedef struct cloudManager       CloudManager;CloudManager52,1697
typedef unsigned                  CloudVar;CloudVar53,1745
typedef unsigned                  CloudSign;CloudSign54,1789
typedef struct cloudNode          CloudNode;CloudNode55,1834
typedef struct cloudCacheEntry1   CloudCacheEntry1;CloudCacheEntry156,1879
typedef struct cloudCacheEntry2   CloudCacheEntry2;CloudCacheEntry257,1931
typedef struct cloudCacheEntry3   CloudCacheEntry3;CloudCacheEntry358,1983
    CLOUD_OPER_AND, CLOUD_OPER_AND62,2096
    CLOUD_OPER_XOR, CLOUD_OPER_XOR63,2117
    CLOUD_OPER_BDIFF, CLOUD_OPER_BDIFF64,2138
    CLOUD_OPER_LEQ CLOUD_OPER_LEQ65,2161
} CloudOper;CloudOper66,2181
struct cloudManager            // the fast bdd manager     cloudManager90,2733
    int nVars;                 // the number of variables allocatednVars93,2812
    int bitsNode;              // the number of bits used for the nodebitsNode95,2892
    int bitsCache[4];          // default: bitsNode - CacheSizeRatio[i]bitsCache96,2963
    int shiftUnique;           // 8*sizeof(unsigned) - (bitsNode + 1)shiftUnique98,3049
    int shiftCache[4];         // 8*sizeof(unsigned) -  bitsCache[i]shiftCache99,3119
    int nNodesAlloc;           // 2 ^ (bitsNode + 1)nNodesAlloc101,3202
    int nNodesLimit;           // 2 ^  bitsNodenNodesLimit102,3255
    int nNodesCur;             // the current number of nodes (including const1 and vars)nNodesCur103,3303
    CloudSign nSignCur;nSignCur105,3410
    int nMemUsed;              // memory usage in bytesnMemUsed108,3453
    int nUniqueHits;           // hits in the unique tablenUniqueHits110,3528
    int nUniqueMisses;         // misses in the unique tablenUniqueMisses111,3587
    int nCacheHits;            // hits in the cachesnCacheHits112,3648
    int nCacheMisses;          // misses in the cachesnCacheMisses113,3701
    int nUniqueSteps;nUniqueSteps115,3806
    CloudNode * tUnique;       // the unique table to store BDD nodestUnique118,3843
    CloudNode * pNodeStart;    // the pointer to the first nodepNodeStart121,3935
    CloudNode * pNodeEnd;      // the pointer to the first node out of the tablepNodeEnd122,3999
    CloudNode *  one;          // the one functionone125,4112
    CloudNode *  zero;         // the zero functionzero126,4163
    CloudNode ** vars;         // the elementary variablesvars127,4215
    CloudNode ** ppNodes;ppNodes130,4310
    CloudCacheEntry2 * tCaches[20];    // cachestCaches133,4351
struct cloudNode   // representation of the node in the unique tablecloudNode136,4404
    CloudSign   s;         // signatures138,4475
    CloudVar    v;         // variablev139,4515
    CloudNode * e;         // negative cofactore140,4554
    CloudNode * t;         // positive cofactort141,4602
struct cloudCacheEntry1  // one-argument cachecloudCacheEntry1143,4653
    CloudSign   s;         // signatures145,4702
    CloudNode * a;         // argument 1a146,4742
    CloudNode * r;         // resultr147,4783
struct cloudCacheEntry2  // the two-argument cachecloudCacheEntry2149,4823
    CloudSign   s;         // signatures151,4876
    CloudNode * a;a152,4916
    CloudNode * b;b153,4935
    CloudNode * r;r154,4954
struct cloudCacheEntry3  // the three-argument cachecloudCacheEntry3156,4976
    CloudSign   s;         // signatures158,5031
    CloudNode * a;a159,5071
    CloudNode * b;b160,5090
    CloudNode * c;c161,5109
    CloudNode * r;r162,5128
#define CLOUD_NODE_BITS CLOUD_NODE_BITS167,5166
#define CLOUD_CONST_INDEX CLOUD_CONST_INDEX169,5207
#define CLOUD_MARK_ON CLOUD_MARK_ON170,5267
#define CLOUD_MARK_OFF CLOUD_MARK_OFF171,5327
#define cloudHashBuddy2(cloudHashBuddy2174,5417
#define cloudHashBuddy3(cloudHashBuddy3175,5502
#define DD_P1 DD_P1177,5645
#define DD_P2 DD_P2178,5694
#define DD_P3 DD_P3179,5740
#define DD_P4 DD_P4180,5785
#define cloudHashCudd2(cloudHashCudd2181,5834
#define cloudHashCudd3(cloudHashCudd3182,5960
#define Cloud_Regular(Cloud_Regular185,6165
#define Cloud_Not(Cloud_Not186,6284
#define Cloud_NotCond(Cloud_NotCond187,6389
#define Cloud_IsComplement(Cloud_IsComplement188,6508
#define Cloud_IsConstant(Cloud_IsConstant190,6650
#define cloudIsConstant(cloudIsConstant191,6751
#define Cloud_V(Cloud_V194,6896
#define Cloud_E(Cloud_E195,6957
#define Cloud_T(Cloud_T196,7018
#define cloudV(cloudV198,7145
#define cloudE(cloudE199,7191
#define cloudT(cloudT200,7237
#define cloudNodeMark(cloudNodeMark202,7327
#define cloudNodeUnmark(cloudNodeUnmark203,7396
#define cloudNodeIsMarked(cloudNodeIsMarked204,7466
#define cloudCacheLookup1(cloudCacheLookup1207,7579
#define cloudCacheLookup2(cloudCacheLookup2208,7672
#define cloudCacheLookup3(cloudCacheLookup3209,7782
#define cloudCacheInsert1(cloudCacheInsert1211,7926
#define cloudCacheInsert2(cloudCacheInsert2212,8020
#define cloudCacheInsert3(cloudCacheInsert3213,8130
#define CLOUD_ASSERT(CLOUD_ASSERT216,8354

src/bool/kit/kitHop.c,988
int Kit_GraphToGiaInternal( Gia_Man_t * pMan, Kit_Graph_t * pGraph, int fHash )Kit_GraphToGiaInternal47,1317
int Kit_GraphToGia( Gia_Man_t * pMan, Kit_Graph_t * pGraph, Vec_Int_t * vLeaves, int fHash )Kit_GraphToGia70,2374
int Kit_TruthToGia( Gia_Man_t * pMan, unsigned * pTruth, int nVars, Vec_Int_t * vMemory, Vec_Int_t * vLeaves, int fHash )Kit_TruthToGia80,2766
int Kit_TruthToGia2( Gia_Man_t * pMan, unsigned * pTruth0, unsigned * pTruth1, int nVars, Vec_Int_t * vMemory, Vec_Int_t * vLeaves, int fHash )Kit_TruthToGia2103,3580
Hop_Obj_t * Kit_GraphToHopInternal( Hop_Man_t * pMan, Kit_Graph_t * pGraph )Kit_GraphToHopInternal139,4788
Hop_Obj_t * Kit_GraphToHop( Hop_Man_t * pMan, Kit_Graph_t * pGraph )Kit_GraphToHop160,5802
Hop_Obj_t * Kit_TruthToHop( Hop_Man_t * pMan, unsigned * pTruth, int nVars, Vec_Int_t * vMemory )Kit_TruthToHop170,6110
Hop_Obj_t * Kit_CoverToHop( Hop_Man_t * pMan, Vec_Int_t * vCover, int nVars, Vec_Int_t * vMemory )Kit_CoverToHop205,7165

src/bool/kit/kit.h,17905
#define ABC__aig__kit__kit_hABC__aig__kit__kit_h22,519
typedef struct Kit_Sop_t_ Kit_Sop_t;Kit_Sop_t54,1428
struct Kit_Sop_t_Kit_Sop_t_55,1465
    int               nLits;          // the number of literalsnLits57,1485
    int               nCubes;         // the number of cubesnCubes58,1549
    unsigned *        pCubes;         // the storage for cubespCubes59,1610
typedef struct Kit_Edge_t_ Kit_Edge_t;Kit_Edge_t62,1677
struct Kit_Edge_t_Kit_Edge_t_63,1716
    unsigned          fCompl   :  1;   // the complemented bitfCompl65,1737
    unsigned          Node     : 30;   // the decomposition node pointed by the edgeNode66,1800
typedef struct Kit_Node_t_ Kit_Node_t;Kit_Node_t69,1889
struct Kit_Node_t_Kit_Node_t_70,1928
    Kit_Edge_t        eEdge0;          // the left child of the nodeeEdge072,1949
    Kit_Edge_t        eEdge1;          // the right child of the nodeeEdge173,2018
    union { int       iFunc;           // the function of the node (BDD or AIG)iFunc75,2106
    void *            pFunc; };        // the function of the node (BDD or AIG)pFunc76,2186
    unsigned          Level    : 14;   // the level of this node in the global AIGLevel77,2266
    unsigned          fNodeOr  :  1;   // marks the original OR nodefNodeOr79,2371
    unsigned          fCompl0  :  1;   // marks the original complemented edgefCompl080,2440
    unsigned          fCompl1  :  1;   // marks the original complemented edgefCompl181,2519
    unsigned          nLat0    :  5;   // the number of latches on the first edgenLat083,2616
    unsigned          nLat1    :  5;   // the number of latches on the second edgenLat184,2698
    unsigned          nLat2    :  5;   // the number of latches on the output edgenLat285,2781
typedef struct Kit_Graph_t_ Kit_Graph_t;Kit_Graph_t88,2868
struct Kit_Graph_t_Kit_Graph_t_89,2909
    int               fConst;          // marks the constant 1 graphfConst91,2931
    int               nLeaves;         // the number of leavesnLeaves92,3000
    int               nSize;           // the number of nodes (including the leaves) nSize93,3063
    int               nCap;            // the number of allocated nodesnCap94,3149
    Kit_Node_t *      pNodes;          // the array of leaves and internal nodespNodes95,3221
    Kit_Edge_t        eRoot;           // the pointer to the topmost nodeeRoot96,3302
    KIT_DSD_NONE  = 0,  // 0: unknownKIT_DSD_NONE102,3415
    KIT_DSD_CONST1,     // 1: constant 1KIT_DSD_CONST1103,3453
    KIT_DSD_VAR,        // 2: elementary variableKIT_DSD_VAR104,3494
    KIT_DSD_AND,        // 3: multi-input ANDKIT_DSD_AND105,3544
    KIT_DSD_XOR,        // 4: multi-input XORKIT_DSD_XOR106,3590
    KIT_DSD_PRIME       // 5: arbitrary function of 3+ variablesKIT_DSD_PRIME107,3636
} Kit_Dsd_t;Kit_Dsd_t108,3701
typedef struct Kit_DsdObj_t_ Kit_DsdObj_t;Kit_DsdObj_t111,3727
struct Kit_DsdObj_t_Kit_DsdObj_t_112,3770
    unsigned       Id         : 6;  // the number of this nodeId114,3794
    unsigned       Type       : 3;  // none, const, var, AND, XOR, MUX, PRIMEType115,3857
    unsigned       fMark      : 1;  // finished checking outputfMark116,3935
    unsigned       Offset     : 8;  // offset to the truth tableOffset117,3999
    unsigned       nRefs      : 8;  // offset to the truth tablenRefs118,4064
    unsigned       nFans      : 6;  // the number of fanins of this nodenFans119,4129
    unsigned short pFans[0];        // the fanin literalspFans120,4202
typedef struct Kit_DsdNtk_t_ Kit_DsdNtk_t;Kit_DsdNtk_t124,4279
struct Kit_DsdNtk_t_Kit_DsdNtk_t_125,4322
    unsigned short nVars;           // at most 16 (perhaps 18?)nVars127,4345
    unsigned short nNodesAlloc;     // the number of allocated nodes (at most nVars)nNodesAlloc128,4409
    unsigned short nNodes;          // the number of nodesnNodes129,4494
    unsigned short Root;            // the root of the treeRoot130,4553
    unsigned *     pMem;            // memory for the truth tables (memory manager?)pMem131,4613
    unsigned *     pSupps;          // supports of the nodespSupps132,4698
    Kit_DsdObj_t** pNodes;          // the nodespNodes133,4759
typedef struct Kit_DsdMan_t_ Kit_DsdMan_t;Kit_DsdMan_t137,4827
struct Kit_DsdMan_t_Kit_DsdMan_t_138,4870
    int            nVars;           // the maximum number of variablesnVars140,4893
    int            nWords;          // the number of words in TTsnWords141,4964
    Vec_Ptr_t *    vTtElems;        // elementary truth tablesvTtElems142,5030
    Vec_Ptr_t *    vTtNodes;        // the node truth tablesvTtNodes143,5093
    CloudManager * dd;              // BDD packagedd145,5180
    Vec_Ptr_t *    vTtBdds;         // the node truth tablesvTtBdds146,5231
    Vec_Int_t *    vNodes;          // temporary array for BDD nodesvNodes147,5292
static inline unsigned        Kit_DsdObjOffset( int nFans )          { return (nFans >> 1) + ((nFans & 1) > 0);                    }Kit_DsdObjOffset150,5366
static inline unsigned *      Kit_DsdObjTruth( Kit_DsdObj_t * pObj ) { return pObj->Type == KIT_DSD_PRIME ? (unsigned *)pObj->pFans + pObj->Offset: NULL; }Kit_DsdObjTruth151,5499
static inline int             Kit_DsdNtkObjNum( Kit_DsdNtk_t * pNtk ){ return pNtk->nVars + pNtk->nNodes; }Kit_DsdNtkObjNum152,5655
static inline Kit_DsdObj_t *  Kit_DsdNtkObj( Kit_DsdNtk_t * pNtk, int Id )      { assert( Id >= 0 && Id < pNtk->nVars + pNtk->nNodes ); return Id < pNtk->nVars ? NULL : pNtk->pNodes[Id - pNtk->nVars]; }Kit_DsdNtkObj153,5763
static inline Kit_DsdObj_t *  Kit_DsdNtkRoot( Kit_DsdNtk_t * pNtk )             { return Kit_DsdNtkObj( pNtk, Abc_Lit2Var(pNtk->Root) );                      }Kit_DsdNtkRoot154,5966
static inline int             Kit_DsdLitIsLeaf( Kit_DsdNtk_t * pNtk, int Lit )   { int Id = Abc_Lit2Var(Lit); assert( Id >= 0 && Id < pNtk->nVars + pNtk->nNodes ); return Id < pNtk->nVars; }Kit_DsdLitIsLeaf155,6126
static inline unsigned        Kit_DsdLitSupport( Kit_DsdNtk_t * pNtk, int Lit )  { int Id = Abc_Lit2Var(Lit); assert( Id >= 0 && Id < pNtk->nVars + pNtk->nNodes ); return pNtk->pSupps? (Id < pNtk->nVars? (1 << Id) : pNtk->pSupps[Id - pNtk->nVars]) : 0; }Kit_DsdLitSupport156,6317
#define Kit_DsdNtkForEachObj(Kit_DsdNtkForEachObj158,6573
#define Kit_DsdObjForEachFanin(Kit_DsdObjForEachFanin160,6735
#define Kit_DsdObjForEachFaninReverse(Kit_DsdObjForEachFaninReverse162,6903
#define Kit_PlaForEachCube(Kit_PlaForEachCube165,7077
#define Kit_PlaCubeForEachVar(Kit_PlaCubeForEachVar167,7204
#define KIT_MIN(KIT_MIN174,7571
#define KIT_MAX(KIT_MAX175,7623
#define KIT_INFINITY KIT_INFINITY176,7675
static inline int          Kit_CubeHasLit( unsigned uCube, int i )                        { return(uCube &  (unsigned)(1<<i)) > 0;  }Kit_CubeHasLit178,7715
static inline unsigned     Kit_CubeSetLit( unsigned uCube, int i )                        { return uCube |  (unsigned)(1<<i);       }Kit_CubeSetLit179,7849
static inline unsigned     Kit_CubeXorLit( unsigned uCube, int i )                        { return uCube ^  (unsigned)(1<<i);       }Kit_CubeXorLit180,7983
static inline unsigned     Kit_CubeRemLit( unsigned uCube, int i )                        { return uCube & ~(unsigned)(1<<i);       }Kit_CubeRemLit181,8117
static inline int          Kit_CubeContains( unsigned uLarge, unsigned uSmall )           { return (uLarge & uSmall) == uSmall;     }Kit_CubeContains183,8252
static inline unsigned     Kit_CubeSharp( unsigned uCube, unsigned uMask )                { return uCube & ~uMask;                  }Kit_CubeSharp184,8386
static inline unsigned     Kit_CubeMask( int nVar )                                       { return (~(unsigned)0) >> (32-nVar);     }Kit_CubeMask185,8520
static inline int          Kit_CubeIsMarked( unsigned uCube )                             { return Kit_CubeHasLit( uCube, 31 );     }Kit_CubeIsMarked187,8655
static inline unsigned     Kit_CubeMark( unsigned uCube )                                 { return Kit_CubeSetLit( uCube, 31 );     }Kit_CubeMark188,8789
static inline unsigned     Kit_CubeUnmark( unsigned uCube )                               { return Kit_CubeRemLit( uCube, 31 );     }Kit_CubeUnmark189,8923
static inline int          Kit_SopCubeNum( Kit_Sop_t * cSop )                             { return cSop->nCubes;                    }Kit_SopCubeNum191,9058
static inline unsigned     Kit_SopCube( Kit_Sop_t * cSop, int i )                         { return cSop->pCubes[i];                 }Kit_SopCube192,9192
static inline void         Kit_SopShrink( Kit_Sop_t * cSop, int nCubesNew )               { cSop->nCubes = nCubesNew;               }Kit_SopShrink193,9326
static inline void         Kit_SopPushCube( Kit_Sop_t * cSop, unsigned uCube )            { cSop->pCubes[cSop->nCubes++] = uCube;   }Kit_SopPushCube194,9460
static inline void         Kit_SopWriteCube( Kit_Sop_t * cSop, unsigned uCube, int i )    { cSop->pCubes[i] = uCube;                }Kit_SopWriteCube195,9594
static inline Kit_Edge_t   Kit_EdgeCreate( int Node, int fCompl )                         { Kit_Edge_t eEdge = { (unsigned)fCompl, (unsigned)Node }; return eEdge;  }Kit_EdgeCreate197,9729
static inline unsigned     Kit_EdgeToInt( Kit_Edge_t eEdge )                              { return (eEdge.Node << 1) | eEdge.fCompl;            }Kit_EdgeToInt198,9895
static inline Kit_Edge_t   Kit_IntToEdge( unsigned Edge )                                 { return Kit_EdgeCreate( Edge >> 1, Edge & 1 );       }Kit_IntToEdge199,10041
static inline unsigned     Kit_EdgeToInt_( Kit_Edge_t m )                                 { union { Kit_Edge_t x; unsigned y; } v; v.x = m; return v.y;  }Kit_EdgeToInt_202,10483
static inline Kit_Edge_t   Kit_IntToEdge_( unsigned m )                                   { union { Kit_Edge_t x; unsigned y; } v; v.y = m; return v.x;  }Kit_IntToEdge_203,10638
static inline int          Kit_GraphIsConst( Kit_Graph_t * pGraph )                       { return pGraph->fConst;                              }Kit_GraphIsConst205,10794
static inline int          Kit_GraphIsConst0( Kit_Graph_t * pGraph )                      { return pGraph->fConst && pGraph->eRoot.fCompl;      }Kit_GraphIsConst0206,10940
static inline int          Kit_GraphIsConst1( Kit_Graph_t * pGraph )                      { return pGraph->fConst && !pGraph->eRoot.fCompl;     }Kit_GraphIsConst1207,11086
static inline int          Kit_GraphIsComplement( Kit_Graph_t * pGraph )                  { return pGraph->eRoot.fCompl;                        }Kit_GraphIsComplement208,11232
static inline int          Kit_GraphIsVar( Kit_Graph_t * pGraph )                         { return pGraph->eRoot.Node < (unsigned)pGraph->nLeaves; }Kit_GraphIsVar209,11378
static inline void         Kit_GraphComplement( Kit_Graph_t * pGraph )                    { pGraph->eRoot.fCompl ^= 1;                          }Kit_GraphComplement210,11527
static inline void         Kit_GraphSetRoot( Kit_Graph_t * pGraph, Kit_Edge_t eRoot )     { pGraph->eRoot = eRoot;                              }Kit_GraphSetRoot211,11673
static inline int          Kit_GraphLeaveNum( Kit_Graph_t * pGraph )                      { return pGraph->nLeaves;                             }Kit_GraphLeaveNum212,11819
static inline int          Kit_GraphNodeNum( Kit_Graph_t * pGraph )                       { return pGraph->nSize - pGraph->nLeaves;             }Kit_GraphNodeNum213,11965
static inline Kit_Node_t * Kit_GraphNode( Kit_Graph_t * pGraph, int i )                   { return pGraph->pNodes + i;                          }Kit_GraphNode214,12111
static inline Kit_Node_t * Kit_GraphNodeLast( Kit_Graph_t * pGraph )                      { return pGraph->pNodes + pGraph->nSize - 1;          }Kit_GraphNodeLast215,12257
static inline int          Kit_GraphNodeInt( Kit_Graph_t * pGraph, Kit_Node_t * pNode )   { return pNode - pGraph->pNodes;                      }Kit_GraphNodeInt216,12403
static inline int          Kit_GraphNodeIsVar( Kit_Graph_t * pGraph, Kit_Node_t * pNode ) { return Kit_GraphNodeInt(pGraph,pNode) < pGraph->nLeaves; }Kit_GraphNodeIsVar217,12549
static inline Kit_Node_t * Kit_GraphVar( Kit_Graph_t * pGraph )                           { assert( Kit_GraphIsVar( pGraph ) );    return Kit_GraphNode( pGraph, pGraph->eRoot.Node );      }Kit_GraphVar218,12700
static inline int          Kit_GraphVarInt( Kit_Graph_t * pGraph )                        { assert( Kit_GraphIsVar( pGraph ) );    return Kit_GraphNodeInt( pGraph, Kit_GraphVar(pGraph) ); }Kit_GraphVarInt219,12890
static inline Kit_Node_t * Kit_GraphNodeFanin0( Kit_Graph_t * pGraph, Kit_Node_t * pNode ){ return Kit_GraphNodeIsVar(pGraph, pNode)? NULL : Kit_GraphNode(pGraph, pNode->eEdge0.Node);     }Kit_GraphNodeFanin0220,13080
static inline Kit_Node_t * Kit_GraphNodeFanin1( Kit_Graph_t * pGraph, Kit_Node_t * pNode ){ return Kit_GraphNodeIsVar(pGraph, pNode)? NULL : Kit_GraphNode(pGraph, pNode->eEdge1.Node);     }Kit_GraphNodeFanin1221,13270
static inline int          Kit_GraphRootLevel( Kit_Graph_t * pGraph )                     { return Kit_GraphNode(pGraph, pGraph->eRoot.Node)->Level;                                        }Kit_GraphRootLevel222,13460
static inline int          Kit_SuppIsMinBase( int Supp )                                  { return (Supp & (Supp+1)) == 0;                      }Kit_SuppIsMinBase224,13651
static inline int          Kit_BitWordNum( int nBits )    { return nBits/(8*sizeof(unsigned)) + ((nBits%(8*sizeof(unsigned))) > 0); }Kit_BitWordNum226,13798
static inline int          Kit_TruthWordNum( int nVars )  { return nVars <= 5 ? 1 : (1 << (nVars - 5));                             }Kit_TruthWordNum227,13932
static inline unsigned     Kit_BitMask( int nBits )       { assert( nBits <= 32 ); return ~((~(unsigned)0) << nBits);               }Kit_BitMask228,14066
static inline void         Kit_TruthSetBit( unsigned * p, int Bit )   { p[Bit>>5] |= (1<<(Bit & 31));               }Kit_TruthSetBit230,14201
static inline void         Kit_TruthXorBit( unsigned * p, int Bit )   { p[Bit>>5] ^= (1<<(Bit & 31));               }Kit_TruthXorBit231,14319
static inline int          Kit_TruthHasBit( unsigned * p, int Bit )   { return (p[Bit>>5] & (1<<(Bit & 31))) > 0;   }Kit_TruthHasBit232,14437
static inline int Kit_WordFindFirstBit( unsigned uWord )Kit_WordFindFirstBit234,14556
static inline int Kit_WordHasOneBit( unsigned uWord )Kit_WordHasOneBit242,14728
static inline int Kit_WordCountOnes( unsigned uWord )Kit_WordCountOnes246,14825
static inline int Kit_TruthCountOnes( unsigned * pIn, int nVars )Kit_TruthCountOnes254,15179
static inline int Kit_TruthFindFirstBit( unsigned * pIn, int nVars )Kit_TruthFindFirstBit261,15394
static inline int Kit_TruthFindFirstZero( unsigned * pIn, int nVars )Kit_TruthFindFirstZero269,15623
static inline int Kit_TruthIsEqual( unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthIsEqual277,15855
static inline int Kit_TruthIsEqualWithCare( unsigned * pIn0, unsigned * pIn1, unsigned * pCare, int nVars )Kit_TruthIsEqualWithCare285,16077
static inline int Kit_TruthIsOpposite( unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthIsOpposite293,16351
static inline int Kit_TruthIsEqualWithPhase( unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthIsEqualWithPhase301,16577
static inline int Kit_TruthIsConst0( unsigned * pIn, int nVars )Kit_TruthIsConst0318,17019
static inline int Kit_TruthIsConst1( unsigned * pIn, int nVars )Kit_TruthIsConst1326,17212
static inline int Kit_TruthIsImply( unsigned * pIn1, unsigned * pIn2, int nVars )Kit_TruthIsImply334,17421
static inline int Kit_TruthIsDisjoint( unsigned * pIn1, unsigned * pIn2, int nVars )Kit_TruthIsDisjoint342,17643
static inline int Kit_TruthIsDisjoint3( unsigned * pIn1, unsigned * pIn2, unsigned * pIn3, int nVars )Kit_TruthIsDisjoint3350,17867
static inline void Kit_TruthCopy( unsigned * pOut, unsigned * pIn, int nVars )Kit_TruthCopy358,18119
static inline void Kit_TruthClear( unsigned * pOut, int nVars )Kit_TruthClear364,18294
static inline void Kit_TruthFill( unsigned * pOut, int nVars )Kit_TruthFill370,18449
static inline void Kit_TruthNot( unsigned * pOut, unsigned * pIn, int nVars )Kit_TruthNot376,18614
static inline void Kit_TruthAnd( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthAnd382,18789
static inline void Kit_TruthOr( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthOr388,18992
static inline void Kit_TruthXor( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthXor394,19194
static inline void Kit_TruthSharp( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthSharp400,19397
static inline void Kit_TruthNand( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Kit_TruthNand406,19603
static inline void Kit_TruthAndPhase( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars, int fCompl0, int fCompl1 )Kit_TruthAndPhase412,19810
static inline void Kit_TruthOrPhase( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars, int fCompl0, int fCompl1 )Kit_TruthOrPhase436,20547
static inline void Kit_TruthMux( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, unsigned * pCtrl, int nVars )Kit_TruthMux460,21283
static inline void Kit_TruthMuxPhase( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, unsigned * pCtrl, int nVars, int fComp0 )Kit_TruthMuxPhase466,21531
static inline void Kit_TruthIthVar( unsigned * pTruth, int nVars, int iVar )Kit_TruthIthVar476,21959
#define Kit_SopForEachCube(Kit_SopForEachCube500,22706
#define Kit_CubeForEachLiteral(Kit_CubeForEachLiteral502,22877
#define Kit_GraphForEachLeaf(Kit_GraphForEachLeaf505,23038
#define Kit_GraphForEachNode(Kit_GraphForEachNode507,23227

src/bool/kit/cloud.c,2517
static int CacheOperNum = 4;CacheOperNum26,633
static int CacheLogRatioDefault[4] = {CacheLogRatioDefault29,733
static int CacheSize[4] = {CacheSize37,955
CloudManager * Cloud_Init( int nVars, int nBits )Cloud_Init70,2305
void Cloud_Quit( CloudManager * dd )Cloud_Quit144,4849
void Cloud_Restart( CloudManager * dd )Cloud_Restart166,5360
void Cloud_CacheAllocate( CloudManager * dd, CloudOper oper, int logratio )Cloud_CacheAllocate195,6548
void cloudCacheAllocate( CloudManager * dd, CloudOper oper )cloudCacheAllocate219,7270
CloudNode * Cloud_MakeNode( CloudManager * dd, CloudVar v, CloudNode * t, CloudNode * e )Cloud_MakeNode254,8447
CloudNode * cloudMakeNode( CloudManager * dd, CloudVar v, CloudNode * t, CloudNode * e )cloudMakeNode283,9380
CloudNode * cloudBddAnd( CloudManager * dd, CloudNode * f, CloudNode * g )cloudBddAnd343,11288
static inline CloudNode * cloudBddAnd_gate( CloudManager * dd, CloudNode * f, CloudNode * g )cloudBddAnd_gate470,14003
CloudNode * Cloud_bddAnd( CloudManager * dd, CloudNode * f, CloudNode * g )Cloud_bddAnd489,14477
CloudNode * Cloud_bddOr( CloudManager * dd, CloudNode * f, CloudNode * g )Cloud_bddOr511,15098
CloudNode * Cloud_bddXor( CloudManager * dd, CloudNode * f, CloudNode * g )Cloud_bddXor536,15822
static void cloudClearMark( CloudManager * dd, CloudNode * n )cloudClearMark569,16721
static void cloudSupport( CloudManager * dd, CloudNode * n, int * support )cloudSupport594,17480
CloudNode * Cloud_Support( CloudManager * dd, CloudNode * n )Cloud_Support618,18221
int Cloud_SupportSize( CloudManager * dd, CloudNode * n )Cloud_SupportSize658,19344
static int cloudDagSize( CloudManager * dd, CloudNode * n )cloudDagSize694,20264
int Cloud_DagSize( CloudManager * dd, CloudNode * n )Cloud_DagSize721,20983
static int Cloud_DagCollect_rec( CloudManager * dd, CloudNode * n, int * pCounter )Cloud_DagCollect_rec741,21534
int Cloud_DagCollect( CloudManager * dd, CloudNode * n )Cloud_DagCollect772,22401
int Cloud_SharingSize( CloudManager * dd, CloudNode ** pn, int nn )Cloud_SharingSize796,23119
CloudNode * Cloud_GetOneCube( CloudManager * dd, CloudNode * bFunc )Cloud_GetOneCube817,23672
void Cloud_bddPrint( CloudManager * dd, CloudNode * Func )Cloud_bddPrint866,24916
void Cloud_bddPrintCube( CloudManager * dd, CloudNode * bCube )Cloud_bddPrintCube900,25785
void Cloud_PrintInfo( CloudManager * dd )Cloud_PrintInfo950,26908
void Cloud_PrintHashTable( CloudManager * dd )Cloud_PrintHashTable975,28031

src/bool/kit/kitDsd.c,6410
Kit_DsdMan_t * Kit_DsdManAlloc( int nVars, int nNodes )Kit_DsdManAlloc46,1311
void Kit_DsdManFree( Kit_DsdMan_t * p )Kit_DsdManFree72,2078
Kit_DsdObj_t * Kit_DsdObjAlloc( Kit_DsdNtk_t * pNtk, Kit_Dsd_t Type, int nFans )Kit_DsdObjAlloc93,2549
void Kit_DsdObjFree( Kit_DsdNtk_t * p, Kit_DsdObj_t * pObj )Kit_DsdObjFree125,3589
Kit_DsdNtk_t * Kit_DsdNtkAlloc( int nVars )Kit_DsdNtkAlloc141,3937
void Kit_DsdNtkFree( Kit_DsdNtk_t * pNtk )Kit_DsdNtkFree164,4559
void Kit_DsdPrintHex( FILE * pFile, unsigned * pTruth, int nFans )Kit_DsdPrintHex187,5096
char * Kit_DsdWriteHex( char * pBuff, unsigned * pTruth, int nFans )Kit_DsdWriteHex212,5737
void Kit_DsdPrint2_rec( FILE * pFile, Kit_DsdNtk_t * pNtk, int Id )Kit_DsdPrint2_rec238,6376
void Kit_DsdPrint2( FILE * pFile, Kit_DsdNtk_t * pNtk )Kit_DsdPrint2298,7804
void Kit_DsdPrint_rec( FILE * pFile, Kit_DsdNtk_t * pNtk, int Id )Kit_DsdPrint_rec318,8327
void Kit_DsdPrint( FILE * pFile, Kit_DsdNtk_t * pNtk )Kit_DsdPrint375,9697
char * Kit_DsdWrite_rec( char * pBuff, Kit_DsdNtk_t * pNtk, int Id )Kit_DsdWrite_rec395,10216
void Kit_DsdWrite( char * pBuff, Kit_DsdNtk_t * pNtk )Kit_DsdWrite453,11612
void Kit_DsdPrintExpanded( Kit_DsdNtk_t * pNtk )Kit_DsdPrintExpanded472,12076
void Kit_DsdPrintFromTruth( unsigned * pTruth, int nVars )Kit_DsdPrintFromTruth491,12511
void Kit_DsdPrintFromTruth2( FILE * pFile, unsigned * pTruth, int nVars )Kit_DsdPrintFromTruth2515,13189
void Kit_DsdWriteFromTruth( char * pBuffer, unsigned * pTruth, int nVars )Kit_DsdWriteFromTruth537,13790
unsigned * Kit_DsdTruthComputeNode_rec( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk, int Id )Kit_DsdTruthComputeNode_rec561,14503
unsigned * Kit_DsdTruthCompute( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk )Kit_DsdTruthCompute664,18044
unsigned * Kit_DsdTruthComputeNodeOne_rec( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk, int Id, unsigned uSupp )Kit_DsdTruthComputeNodeOne_rec691,18957
unsigned * Kit_DsdTruthComputeOne( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk, unsigned uSupp )Kit_DsdTruthComputeOne824,23421
unsigned * Kit_DsdTruthComputeNodeTwo_rec( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk, int Id, unsigned uSupp, int iVar, unsigned * pTruthDec )Kit_DsdTruthComputeNodeTwo_rec854,24485
unsigned * Kit_DsdTruthComputeTwo( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk, unsigned uSupp, int iVar, unsigned * pTruthDec )Kit_DsdTruthComputeTwo1025,31244
void Kit_DsdTruth( Kit_DsdNtk_t * pNtk, unsigned * pTruthRes )Kit_DsdTruth1069,32855
void Kit_DsdTruthPartialTwo( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk, unsigned uSupp, int iVar, unsigned * pTruthCo, unsigned * pTruthDec )Kit_DsdTruthPartialTwo1090,33432
void Kit_DsdTruthPartial( Kit_DsdMan_t * p, Kit_DsdNtk_t * pNtk, unsigned * pTruthRes, unsigned uSupp )Kit_DsdTruthPartial1108,34011
int Kit_DsdCountLuts_rec( Kit_DsdNtk_t * pNtk, int nLutSize, int Id, int * pCounter )Kit_DsdCountLuts_rec1144,35273
int Kit_DsdCountLuts( Kit_DsdNtk_t * pNtk, int nLutSize )Kit_DsdCountLuts1188,36679
int Kit_DsdNonDsdSizeMax( Kit_DsdNtk_t * pNtk )Kit_DsdNonDsdSizeMax1212,37333
Kit_DsdObj_t * Kit_DsdNonDsdPrimeMax( Kit_DsdNtk_t * pNtk )Kit_DsdNonDsdPrimeMax1237,37923
unsigned Kit_DsdNonDsdSupports( Kit_DsdNtk_t * pNtk )Kit_DsdNonDsdSupports1265,38606
void Kit_DsdExpandCollectAnd_rec( Kit_DsdNtk_t * p, unsigned iLit, unsigned * piLitsNew, int * nLitsNew )Kit_DsdExpandCollectAnd_rec1292,39272
void Kit_DsdExpandCollectXor_rec( Kit_DsdNtk_t * p, unsigned iLit, unsigned * piLitsNew, int * nLitsNew )Kit_DsdExpandCollectXor_rec1319,40120
int Kit_DsdExpandNode_rec( Kit_DsdNtk_t * pNew, Kit_DsdNtk_t * p, int iLit )Kit_DsdExpandNode_rec1350,41159
Kit_DsdNtk_t * Kit_DsdExpand( Kit_DsdNtk_t * p )Kit_DsdExpand1452,44986
void Kit_DsdCompSort( int pPrios[], unsigned uSupps[], unsigned short * piLits, int nVars, unsigned piLitsRes[] )Kit_DsdCompSort1489,46099
int Kit_DsdShrink_rec( Kit_DsdNtk_t * pNew, Kit_DsdNtk_t * p, int iLit, int pPrios[] )Kit_DsdShrink_rec1544,47805
Kit_DsdNtk_t * Kit_DsdShrink( Kit_DsdNtk_t * p, int pPrios[] )Kit_DsdShrink1634,51389
void Kit_DsdRotate( Kit_DsdNtk_t * p, int pFreqs[] )Kit_DsdRotate1672,52595
unsigned Kit_DsdGetSupports_rec( Kit_DsdNtk_t * p, int iLit )Kit_DsdGetSupports_rec1736,54618
unsigned Kit_DsdGetSupports( Kit_DsdNtk_t * p )Kit_DsdGetSupports1763,55360
int Kit_DsdFindLargeBox_rec( Kit_DsdNtk_t * pNtk, int Id, int Size )Kit_DsdFindLargeBox_rec1798,56309
int Kit_DsdFindLargeBox( Kit_DsdNtk_t * pNtk, int Size )Kit_DsdFindLargeBox1824,57063
int Kit_DsdCountAigNodes_rec( Kit_DsdNtk_t * pNtk, int Id )Kit_DsdCountAigNodes_rec1840,57492
int Kit_DsdCountAigNodes2( Kit_DsdNtk_t * pNtk )Kit_DsdCountAigNodes21880,58689
int Kit_DsdCountAigNodes( Kit_DsdNtk_t * pNtk )Kit_DsdCountAigNodes1896,59105
int Kit_DsdRootNodeHasCommonVars( Kit_DsdObj_t * pObj0, Kit_DsdObj_t * pObj1 )Kit_DsdRootNodeHasCommonVars1924,59904
int Kit_DsdCheckVar4Dec2( Kit_DsdNtk_t * pNtk0, Kit_DsdNtk_t * pNtk1 )Kit_DsdCheckVar4Dec21949,60599
void Kit_DsdDecompose_rec( Kit_DsdNtk_t * pNtk, Kit_DsdObj_t * pObj, unsigned uSupp, unsigned short * pPar, int nDecMux )Kit_DsdDecompose_rec1971,61217
Kit_DsdNtk_t * Kit_DsdDecomposeInt( unsigned * pTruth, int nVars, int nDecMux )Kit_DsdDecomposeInt2267,75346
Kit_DsdNtk_t * Kit_DsdDecompose( unsigned * pTruth, int nVars )Kit_DsdDecompose2315,76798
Kit_DsdNtk_t * Kit_DsdDecomposeExpand( unsigned * pTruth, int nVars )Kit_DsdDecomposeExpand2331,77195
Kit_DsdNtk_t *  Kit_DsdDecomposeMux( unsigned * pTruth, int nVars, int nDecMux )Kit_DsdDecomposeMux2351,77769
int Kit_DsdTestCofs( Kit_DsdNtk_t * pNtk, unsigned * pTruthInit )Kit_DsdTestCofs2388,78810
int Kit_DsdEval( unsigned * pTruth, int nVars, int nLutSize )Kit_DsdEval2457,80776
void Kit_DsdVerify( Kit_DsdNtk_t * pNtk, unsigned * pTruth, int nVars )Kit_DsdVerify2493,81740
void Kit_DsdTest( unsigned * pTruth, int nVars )Kit_DsdTest2515,82371
void Kit_DsdPrecompute4Vars()Kit_DsdPrecompute4Vars2566,83801
int Kit_DsdCofactoringGetVars( Kit_DsdNtk_t ** ppNtk, int nSize, int * pVars )Kit_DsdCofactoringGetVars2633,85692
int Kit_DsdCofactoring( unsigned * pTruth, int nVars, int * pCofVars, int nLimit, int fVerbose )Kit_DsdCofactoring2679,87133
void Kit_DsdPrintCofactors( unsigned * pTruth, int nVars, int nCofLevel, int fVerbose )Kit_DsdPrintCofactors2804,92258
char ** Kit_DsdNpn4ClassNames()Kit_DsdNpn4ClassNames3049,100505

src/bool/kit/kitDec.c,2482
typedef struct Kit_ManDec_t_ Kit_ManDec_t;Kit_ManDec_t31,792
struct Kit_ManDec_t_ Kit_ManDec_t_32,835
    int             nVarsMax;     // the max number of variablesnVarsMax34,859
    int             nWordsMax;    // the max number of wordsnWordsMax35,924
    Vec_Ptr_t *     vTruthVars;   // elementary truth tablesvTruthVars36,985
    Vec_Ptr_t *     vTruthNodes;  // internal truth tablesvTruthNodes37,1046
    int             nVarsIn;      // the current number of variablesnVarsIn39,1128
    Vec_Int_t *     vLutsIn;      // LUT truth tablesvLutsIn40,1197
    Vec_Int_t *     vSuppIn;      // LUT supportsvSuppIn41,1251
    char            ATimeIn[64];  // variable arrival timesATimeIn42,1301
    unsigned *      pTruthIn;     // computed truth tablepTruthIn44,1390
    unsigned *      pTruthOut;    // computed truth tablepTruthOut45,1448
    int             nVarsOut;     // the current number of variablesnVarsOut46,1506
    int             nWordsOut;    // the current number of wordsnWordsOut47,1575
    char            Order[32];    // new vars into old vars after supp minimizationOrder48,1640
    Vec_Int_t *     vLutsOut;     // problem decompositionvLutsOut50,1752
    Vec_Int_t *     vSuppOut;     // problem decompositionvSuppOut51,1811
    char            ATimeOut[64]; // variable arrival timesATimeOut52,1870
static inline int   Kit_DecOuputArrival( int nVars, Vec_Int_t * vLuts, char ATimes[] ) { return ATimes[nVars + Vec_IntSize(vLuts) - 1]; }Kit_DecOuputArrival55,1934
Kit_ManDec_t * Kit_ManDecStart( int nVarsMax )Kit_ManDecStart72,2551
void Kit_ManDecStop( Kit_ManDec_t * p )Kit_ManDecStop101,3444
int Kit_DecComputeOuputArrival( int nVars, Vec_Int_t * vSupps, int LutSize, char ATimesIn[], char ATimesOut[] )Kit_DecComputeOuputArrival126,4066
void Kit_DecComputeTruthOne( int LutSize, unsigned * pTruthLut, int nVars, unsigned * pTruths[], unsigned * pTemp, unsigned * pRes )Kit_DecComputeTruthOne159,5028
void Kit_DecComputeTruth( Kit_ManDec_t * p, int nVars, Vec_Int_t * vSupps, int LutSize, Vec_Int_t * vLuts, unsigned * pRes )Kit_DecComputeTruth188,5902
int Kit_DecComputePattern( int nVars, unsigned * pTruth, int LutSize, int Pattern[] )Kit_DecComputePattern223,7268
int Kit_DecComputeShared_rec( int Pattern[], int Vars[], int nVars, int Shared[], int iVarTry )Kit_DecComputeShared_rec279,8835
int Kit_DecComputeShared( int Pattern[], int LutSize, int Shared[] )Kit_DecComputeShared328,10464

src/bool/kit/kitGraph.c,1883
Kit_Graph_t * Kit_GraphCreate( int nLeaves )   Kit_GraphCreate45,1280
Kit_Graph_t * Kit_GraphCreateConst0()   Kit_GraphCreateConst069,1951
Kit_Graph_t * Kit_GraphCreateConst1()   Kit_GraphCreateConst190,2443
Kit_Graph_t * Kit_GraphCreateLeaf( int iLeaf, int nLeaves, int fCompl )   Kit_GraphCreateLeaf110,2906
void Kit_GraphFree( Kit_Graph_t * pGraph )   Kit_GraphFree131,3468
Kit_Node_t * Kit_GraphAppendNode( Kit_Graph_t * pGraph )   Kit_GraphAppendNode148,3882
Kit_Edge_t Kit_GraphAddNodeAnd( Kit_Graph_t * pGraph, Kit_Edge_t eEdge0, Kit_Edge_t eEdge1 )Kit_GraphAddNodeAnd172,4516
Kit_Edge_t Kit_GraphAddNodeOr( Kit_Graph_t * pGraph, Kit_Edge_t eEdge0, Kit_Edge_t eEdge1 )Kit_GraphAddNodeOr196,5174
Kit_Edge_t Kit_GraphAddNodeXor( Kit_Graph_t * pGraph, Kit_Edge_t eEdge0, Kit_Edge_t eEdge1, int Type )Kit_GraphAddNodeXor224,5996
Kit_Edge_t Kit_GraphAddNodeMux( Kit_Graph_t * pGraph, Kit_Edge_t eEdgeC, Kit_Edge_t eEdgeT, Kit_Edge_t eEdgeE, int Type )Kit_GraphAddNodeMux265,7207
unsigned Kit_GraphToTruth( Kit_Graph_t * pGraph )Kit_GraphToTruth306,8449
Kit_Graph_t * Kit_TruthToGraph( unsigned * pTruth, int nVars, Vec_Int_t * vMemory )Kit_TruthToGraph355,10155
Kit_Graph_t * Kit_TruthToGraph2( unsigned * pTruth0, unsigned * pTruth1, int nVars, Vec_Int_t * vMemory )Kit_TruthToGraph2383,11017
int Kit_GraphLeafDepth_rec( Kit_Graph_t * pGraph, Kit_Node_t * pNode, Kit_Node_t * pLeaf )Kit_GraphLeafDepth_rec411,11920
int Kit_GraphLevelNum_rec( Kit_Graph_t * pGraph, Kit_Node_t * pNode )Kit_GraphLevelNum_rec436,12708
int Kit_TruthStats( unsigned * pTruth, int nVars, Vec_Int_t * vMemory )Kit_TruthStats457,13338
int * Kit_TruthStatsArray( unsigned * pArray, int nVars, int nFuncs )Kit_TruthStatsArray465,13675
int Kit_TruthFindVarNum( char * pFileName )Kit_TruthFindVarNum475,14040
int * Kit_TruthTest( char * pFileName )Kit_TruthTest483,14261

src/bool/kit/kitPerm.c,891
#define inline inline28,613
typedef unsigned __int64 word;word36,915
typedef unsigned short   shot;shot37,946
typedef unsigned char    byte;byte38,977
static shot S[256] =S40,1009
static byte P[256] =P76,3211
void Kit_PermCreateS()Kit_PermCreateS111,5291
void Kit_PermCreateP()Kit_PermCreateP135,5779
static inline void Kit_PermCycleOne( shot * s, byte * b, int v )Kit_PermCycleOne161,6317
static inline void Kit_PermCycleMany( shot * s, byte * b, int V, int v )Kit_PermCycleMany180,6754
void Kit_PermCompute( word * o, word * i, int V )Kit_PermCompute199,7242
void Kit_PermComputeNaive( word * F, int nVars )Kit_PermComputeNaive230,7923
word M ( word f1, word f2, int n)M240,8216
word Tf ( word f, int n)Tf250,8421
#define NFUNCS NFUNCS265,8801
void Kit_PermComputeTest()Kit_PermComputeTest278,9059
void Kit_PermComputeTest_()Kit_PermComputeTest_334,10256

src/bool/kit/kitPla.c,1359
int Kit_PlaIsConst0( char * pSop )Kit_PlaIsConst046,1295
int Kit_PlaIsConst1( char * pSop )Kit_PlaIsConst162,1648
int Kit_PlaIsBuf( char * pSop )Kit_PlaIsBuf78,1999
int Kit_PlaIsInv( char * pSop )Kit_PlaIsInv98,2463
int Kit_PlaGetVarNum( char * pSop )Kit_PlaGetVarNum118,2935
int Kit_PlaGetCubeNum( char * pSop )Kit_PlaGetCubeNum138,3390
int Kit_PlaIsComplement( char * pSop )Kit_PlaIsComplement160,3838
void Kit_PlaComplement( char * pSop )Kit_PlaComplement181,4300
char * Kit_PlaStart( void * p, int nCubes, int nVars )Kit_PlaStart211,5109
char * Kit_PlaCreateFromIsop( void * p, int nVars, Vec_Int_t * vCover )Kit_PlaCreateFromIsop243,5926
void Kit_PlaToIsop( char * pSop, Vec_Int_t * vCover )Kit_PlaToIsop282,7004
char * Kit_PlaStoreSop( void * p, char * pSop )Kit_PlaStoreSop317,7944
char * Kit_PlaFromTruth( void * p, unsigned * pTruth, int nVars, Vec_Int_t * vCover )Kit_PlaFromTruth337,8439
char * Kit_PlaFromIsop( Vec_Str_t * vStr, int nVars, Vec_Int_t * vCover )Kit_PlaFromIsop366,9319
char * Kit_PlaFromTruthNew( unsigned * pTruth, int nVars, Vec_Int_t * vCover, Vec_Str_t * vStr )Kit_PlaFromTruthNew406,10414
ABC_UINT64_T Kit_PlaToTruth6( char * pSop, int nVars )Kit_PlaToTruth6442,11646
void Kit_PlaToTruth( char * pSop, int nVars, Vec_Ptr_t * vVars, unsigned * pTemp, unsigned * pTruth )Kit_PlaToTruth496,13389

src/bool/kit/kitSop.c,1733
void Kit_SopCreate( Kit_Sop_t * cResult, Vec_Int_t * vInput, int nVars, Vec_Int_t * vMemory )Kit_SopCreate45,1251
void Kit_SopCreateInverse( Kit_Sop_t * cResult, Vec_Int_t * vInput, int nLits, Vec_Int_t * vMemory )Kit_SopCreateInverse68,1871
void Kit_SopDup( Kit_Sop_t * cResult, Kit_Sop_t * cSop, Vec_Int_t * vMemory )Kit_SopDup97,2695
void Kit_SopDivideByLiteralQuo( Kit_Sop_t * cSop, int iLit )Kit_SopDivideByLiteralQuo121,3401
void Kit_SopDivideByCube( Kit_Sop_t * cSop, Kit_Sop_t * cDiv, Kit_Sop_t * vQuo, Kit_Sop_t * vRem, Vec_Int_t * vMemory )Kit_SopDivideByCube145,3964
void Kit_SopDivideInternal( Kit_Sop_t * cSop, Kit_Sop_t * cDiv, Kit_Sop_t * vQuo, Kit_Sop_t * vRem, Vec_Int_t * vMemory )Kit_SopDivideInternal178,4928
static inline unsigned Kit_SopCommonCube( Kit_Sop_t * cSop )Kit_SopCommonCube290,8911
void Kit_SopMakeCubeFree( Kit_Sop_t * cSop )Kit_SopMakeCubeFree311,9384
int Kit_SopIsCubeFree( Kit_Sop_t * cSop )Kit_SopIsCubeFree334,9953
void Kit_SopCommonCubeCover( Kit_Sop_t * cResult, Kit_Sop_t * cSop, Vec_Int_t * vMemory )Kit_SopCommonCubeCover350,10334
int Kit_SopAnyLiteral( Kit_Sop_t * cSop, int nLits )Kit_SopAnyLiteral370,10880
int Kit_SopWorstLiteral( Kit_Sop_t * cSop, int nLits )Kit_SopWorstLiteral400,11651
int Kit_SopBestLiteral( Kit_Sop_t * cSop, int nLits, unsigned uMask )Kit_SopBestLiteral454,13001
void Kit_SopDivisorZeroKernel_rec( Kit_Sop_t * cSop, int nLits )Kit_SopDivisorZeroKernel_rec509,14382
int Kit_SopDivisor( Kit_Sop_t * cResult, Kit_Sop_t * cSop, int nLits, Vec_Int_t * vMemory )Kit_SopDivisor534,15190
void Kit_SopBestLiteralCover( Kit_Sop_t * cResult, Kit_Sop_t * cSop, unsigned uCube, int nLits, Vec_Int_t * vMemory )Kit_SopBestLiteralCover560,15913

src/bool/kit/kit_.c,0

src/bool/bdc/bdcSpfd.c,3260
typedef struct Bdc_Nod_t_ Bdc_Nod_t;Bdc_Nod_t32,862
struct Bdc_Nod_t_Bdc_Nod_t_33,899
    unsigned         iFan0g :  8;iFan0g35,919
    unsigned         iFan0n : 12;iFan0n36,953
    unsigned         Type   : 12;  // 0-3 = AND; 4 = XORType37,987
    unsigned         iFan1g :  8;iFan1g39,1045
    unsigned         iFan1n : 12;iFan1n40,1079
    unsigned         Weight : 12;Weight41,1113
    word             Truth;Truth43,1148
static word Truths[6] = {Truths46,1180
static inline int Bdc_CountOnes( word t )Bdc_CountOnes55,1419
static inline int Bdc_CountSpfd( word t, word f )Bdc_CountSpfd65,1985
static inline word Bdc_Cof6( word t, int iVar, int fCof1 )Bdc_Cof674,2234
int Bdc_SpfdAdjCost( word t )Bdc_SpfdAdjCost83,2503
void Bdc_SpfdPrint_rec( Bdc_Nod_t * pNode, int Level, Vec_Ptr_t * vLevels )Bdc_SpfdPrint_rec114,3252
void Bdc_SpfdPrint( Bdc_Nod_t * pNode, int Level, Vec_Ptr_t * vLevels, word Truth )Bdc_SpfdPrint158,4322
void Bdc_SpfdDecompose( word Truth, int nVars, int nCands, int nGatesMax )Bdc_SpfdDecompose178,4926
void Bdc_SpfdDecomposeTest_()Bdc_SpfdDecomposeTest_351,12217
typedef struct Bdc_Ent_t_ Bdc_Ent_t; // 24 bytesBdc_Ent_t399,13640
struct Bdc_Ent_t_Bdc_Ent_t_400,13689
    unsigned         iFan0   : 29;iFan0402,13709
    unsigned         fCompl0 :  1;fCompl0403,13744
    unsigned         fCompl  :  1;fCompl404,13779
    unsigned         fMark0  :  1;fMark0405,13814
    unsigned         iFan1   : 29;iFan1406,13849
    unsigned         fCompl1 :  1;fCompl1407,13884
    unsigned         fExor   :  1;fExor408,13919
    unsigned         fMark1  :  1;fMark1409,13954
    int              iNext;iNext410,13989
    int              iList;iList411,14017
    word             Truth;Truth412,14045
#define BDC_TERM BDC_TERM415,14077
int Bdc_SpfdMark0( Bdc_Ent_t * p, Bdc_Ent_t * pEnt )Bdc_SpfdMark0429,14341
int Bdc_SpfdMark1( Bdc_Ent_t * p, Bdc_Ent_t * pEnt )Bdc_SpfdMark1440,14630
void Bdc_SpfdUnmark0( Bdc_Ent_t * p, Bdc_Ent_t * pEnt )Bdc_SpfdUnmark0451,14919
void Bdc_SpfdUnmark1( Bdc_Ent_t * p, Bdc_Ent_t * pEnt )Bdc_SpfdUnmark1459,15138
int Bdc_SpfdCheckOverlap( Bdc_Ent_t * p, Bdc_Ent_t * pEnt0, Bdc_Ent_t * pEnt1 )Bdc_SpfdCheckOverlap480,15593
int Bdc_SpfdHashValue( word t, int Size )Bdc_SpfdHashValue502,16130
int * Bdc_SpfdHashLookup( Bdc_Ent_t * p, int Size, word t )Bdc_SpfdHashLookup550,17154
Vec_Wrd_t * Bdc_SpfdDecomposeTest__( Vec_Int_t ** pvWeights )Bdc_SpfdDecomposeTest__577,17796
Vec_Wrd_t * Bdc_SpfdReadFiles5( Vec_Int_t ** pvWeights )Bdc_SpfdReadFiles5726,22623
Vec_Wrd_t * Bdc_SpfdReadFiles6( Vec_Int_t ** pvWeights )Bdc_SpfdReadFiles6758,23447
int Bdc_SpfdComputeCost( word f, int i, Vec_Int_t * vWeights )Bdc_SpfdComputeCost787,24246
word Bdc_SpfdFindBest( Vec_Wrd_t * vDivs, Vec_Int_t * vWeights, word F0, word F1, int * pCost )Bdc_SpfdFindBest807,24708
int Bdc_SpfdDecomposeTestOne( word t, Vec_Wrd_t * vDivs, Vec_Int_t * vWeights )Bdc_SpfdDecomposeTestOne872,26549
void Bdc_SpfdDecomposeTest44()Bdc_SpfdDecomposeTest44905,27437
void Bdc_SpfdDecomposeTest3()Bdc_SpfdDecomposeTest31028,30358
void Bdc_SpfdDecomposeTest8()Bdc_SpfdDecomposeTest81080,31748
void Bdc_SpfdDecomposeTest()Bdc_SpfdDecomposeTest1135,33099

src/bool/bdc/bdcInt.h,5596
#define ABC__aig__bdc__bdcInt_hABC__aig__bdc__bdcInt_h22,560
#define BDC_SCALE BDC_SCALE41,1109
    BDC_TYPE_NONE = 0,  // 0:  unknownBDC_TYPE_NONE49,1421
    BDC_TYPE_CONST1,    // 1:  constant 1BDC_TYPE_CONST150,1460
    BDC_TYPE_PI,        // 2:  primary inputBDC_TYPE_PI51,1502
    BDC_TYPE_AND,       // 3:  AND-gateBDC_TYPE_AND52,1547
    BDC_TYPE_OR,        // 4:  OR-gate (temporary)BDC_TYPE_OR53,1587
    BDC_TYPE_XOR,       // 5:  XOR-gateBDC_TYPE_XOR54,1638
    BDC_TYPE_MUX,       // 6:  MUX-gateBDC_TYPE_MUX55,1678
    BDC_TYPE_OTHER      // 7:  unusedBDC_TYPE_OTHER56,1718
} Bdc_Type_t;Bdc_Type_t57,1756
struct Bdc_Fun_t_Bdc_Fun_t_59,1771
    int              Type;         // Const1, PI, AND, XOR, MUXType61,1791
    Bdc_Fun_t *      pFan0;        // fanin of the given nodepFan062,1855
    Bdc_Fun_t *      pFan1;        // fanin of the given nodepFan163,1917
    unsigned         uSupp;        // bit mask of current supportuSupp64,1979
    unsigned *       puFunc;       // the function of the nodepuFunc65,2045
    Bdc_Fun_t *      pNext;        // next function with same supportpNext66,2108
    union { int      iCopy;        // the literal of the node (AIG)iCopy67,2178
    void *           pCopy; };     // the function of the node (BDD or AIG)pCopy68,2246
typedef struct Bdc_Isf_t_ Bdc_Isf_t;Bdc_Isf_t72,2327
struct Bdc_Isf_t_Bdc_Isf_t_73,2364
    unsigned         uSupp;        // the complete support of this componentuSupp75,2384
    unsigned         uUniq;        // the unique variables of this componentuUniq76,2461
    unsigned *       puOn;         // on-setpuOn77,2538
    unsigned *       puOff;        // off-setpuOff78,2583
struct Bdc_Man_t_Bdc_Man_t_81,2633
    Bdc_Par_t *      pPars;        // parameter setpPars84,2680
    int              nVars;        // the number of variablesnVars85,2732
    int              nWords;       // the number of words nWords86,2794
    int              nNodesMax;    // the limit on the number of new nodesnNodesMax87,2853
    int              nDivsLimit;   // the limit on the number of divisorsnDivsLimit88,2928
    Bdc_Fun_t *      pNodes;       // storage for decomposition nodespNodes90,3024
    int              nNodesAlloc;  // the number of nodes allocated  nNodesAlloc91,3094
    int              nNodes;       // the number of all nodes created so farnNodes92,3164
    int              nNodesNew;    // the number of new AND nodes created so farnNodesNew93,3241
    Bdc_Fun_t *      pRoot;        // the root nodepRoot94,3322
    Bdc_Fun_t **     pTable;       // hash table of candidatespTable96,3398
    int              nTableSize;   // hash table size (1 << nVarsMax)nTableSize97,3461
    Vec_Int_t *      vSpots;       // the occupied spots in the tablevSpots98,3531
    Vec_Ptr_t *      vTruths;      // for const 1 and elementary variablesvTruths100,3633
    unsigned *       puTemp1;      // temporary truth tablepuTemp1101,3708
    unsigned *       puTemp2;      // temporary truth tablepuTemp2102,3768
    unsigned *       puTemp3;      // temporary truth tablepuTemp3103,3828
    unsigned *       puTemp4;      // temporary truth tablepuTemp4104,3888
    Bdc_Isf_t * pIsfOL, IsfOL;pIsfOL106,3970
    Bdc_Isf_t * pIsfOL, IsfOL;IsfOL106,3970
    Bdc_Isf_t * pIsfOR, IsfOR;pIsfOR107,4001
    Bdc_Isf_t * pIsfOR, IsfOR;IsfOR107,4001
    Bdc_Isf_t * pIsfAL, IsfAL;pIsfAL108,4032
    Bdc_Isf_t * pIsfAL, IsfAL;IsfAL108,4032
    Bdc_Isf_t * pIsfAR, IsfAR;pIsfAR109,4063
    Bdc_Isf_t * pIsfAR, IsfAR;IsfAR109,4063
    Vec_Int_t *      vMemory;      // memory for internal truth tablesvMemory111,4125
    int              numCalls;numCalls113,4214
    int              numNodes;numNodes114,4245
    int              numMuxes;numMuxes115,4276
    int              numAnds;numAnds116,4307
    int              numOrs;numOrs117,4337
    int              numWeaks;numWeaks118,4366
    int              numReuse;numReuse119,4397
    abctime          timeCache;timeCache121,4443
    abctime          timeCheck;timeCheck122,4475
    abctime          timeMuxes;timeMuxes123,4507
    abctime          timeSupps;timeSupps124,4539
    abctime          timeTotal;timeTotal125,4571
static inline Bdc_Fun_t * Bdc_FunNew( Bdc_Man_t * p )                   { Bdc_Fun_t * pRes; if ( p->nNodes >= p->nNodesAlloc || p->nNodesNew >= p->nNodesMax ) return NULL; pRes = p->pNodes + p->nNodes++; p->nNodesNew++; memset( pRes, 0, sizeof(Bdc_Fun_t) ); return pRes; }Bdc_FunNew128,4607
static inline Bdc_Fun_t * Bdc_FunWithId( Bdc_Man_t * p, int Id )        { assert( Id < p->nNodes ); return p->pNodes + Id; }Bdc_FunWithId129,4880
static inline int         Bdc_FunId( Bdc_Man_t * p, Bdc_Fun_t * pFun )  { return pFun - p->pNodes; }Bdc_FunId130,5005
static inline void        Bdc_IsfStart( Bdc_Man_t * p, Bdc_Isf_t * pF ) { pF->uSupp = 0; pF->uUniq = 0; pF->puOn = Vec_IntFetch( p->vMemory, p->nWords ); pF->puOff = Vec_IntFetch( p->vMemory, p->nWords ); assert( pF->puOff && pF->puOn ); }Bdc_IsfStart131,5106
static inline void        Bdc_IsfClean( Bdc_Isf_t * p )                 { p->uSupp = 0; p->uUniq = 0;                                      }Bdc_IsfClean132,5346
static inline void        Bdc_IsfCopy( Bdc_Isf_t * p, Bdc_Isf_t * q )   { Bdc_Isf_t T = *p; *p = *q; *q = T;                               }Bdc_IsfCopy133,5487
static inline void        Bdc_IsfNot( Bdc_Isf_t * p )                   { unsigned * puT = p->puOn; p->puOn = p->puOff; p->puOff = puT;    }Bdc_IsfNot134,5628

src/bool/bdc/bdc_.c,0

src/bool/bdc/bdcDec.c,1443
void Bdc_SuppMinimize2( Bdc_Man_t * p, Bdc_Isf_t * pIsf )Bdc_SuppMinimize245,1285
void Bdc_SuppMinimize( Bdc_Man_t * p, Bdc_Isf_t * pIsf )Bdc_SuppMinimize87,2733
int Bdc_DecomposeUpdateRight( Bdc_Man_t * p, Bdc_Isf_t * pIsf, Bdc_Isf_t * pIsfL, Bdc_Isf_t * pIsfR, Bdc_Fun_t * pFunc0, Bdc_Type_t Type )Bdc_DecomposeUpdateRight123,3823
static inline int Bdc_DecomposeGetCost( Bdc_Man_t * p, int nLeftVars, int nRightVars )Bdc_DecomposeGetCost186,6526
int Bdc_DecomposeFindInitialVarSet( Bdc_Man_t * p, Bdc_Isf_t * pIsf, Bdc_Isf_t * pIsfL, Bdc_Isf_t * pIsfR )Bdc_DecomposeFindInitialVarSet208,7205
int Bdc_DecomposeWeakOr( Bdc_Man_t * p, Bdc_Isf_t * pIsf, Bdc_Isf_t * pIsfL, Bdc_Isf_t * pIsfR )Bdc_DecomposeWeakOr251,8424
int Bdc_DecomposeOr( Bdc_Man_t * p, Bdc_Isf_t * pIsf, Bdc_Isf_t * pIsfL, Bdc_Isf_t * pIsfR )Bdc_DecomposeOr328,11312
Bdc_Type_t Bdc_DecomposeStep( Bdc_Man_t * p, Bdc_Isf_t * pIsf, Bdc_Isf_t * pIsfL, Bdc_Isf_t * pIsfR )Bdc_DecomposeStep444,16366
int Bdc_DecomposeStepMux( Bdc_Man_t * p, Bdc_Isf_t * pIsf, Bdc_Isf_t * pIsfL, Bdc_Isf_t * pIsfR )Bdc_DecomposeStepMux548,19298
int Bdc_ManNodeVerify( Bdc_Man_t * p, Bdc_Isf_t * pIsf, Bdc_Fun_t * pFunc )Bdc_ManNodeVerify600,21235
Bdc_Fun_t * Bdc_ManCreateGate( Bdc_Man_t * p, Bdc_Fun_t * pFunc0, Bdc_Fun_t * pFunc1, Bdc_Type_t Type )Bdc_ManCreateGate621,21833
Bdc_Fun_t * Bdc_ManDecompose_rec( Bdc_Man_t * p, Bdc_Isf_t * pIsf )Bdc_ManDecompose_rec675,23665

src/bool/bdc/bdc.h,1619
#define ABC__aig__bdc__bdc_hABC__aig__bdc__bdc_h22,551
typedef struct Bdc_Fun_t_ Bdc_Fun_t;Bdc_Fun_t42,1274
typedef struct Bdc_Man_t_ Bdc_Man_t;Bdc_Man_t43,1311
typedef struct Bdc_Par_t_ Bdc_Par_t;Bdc_Par_t44,1348
struct Bdc_Par_t_Bdc_Par_t_45,1385
    int           nVarsMax;      // the maximum supportnVarsMax48,1431
    int           fVerbose;      // enable basic statsfVerbose49,1487
    int           fVeryVerbose;  // enable detailed statsfVeryVerbose50,1542
static inline int         Bdc_IsComplement( Bdc_Fun_t * p )      { return (int)((ABC_PTRUINT_T)p & (ABC_PTRUINT_T)01);              }Bdc_IsComplement54,1655
static inline Bdc_Fun_t * Bdc_Regular( Bdc_Fun_t * p )           { return (Bdc_Fun_t *)((ABC_PTRUINT_T)p & ~(ABC_PTRUINT_T)01);     }Bdc_Regular55,1789
static inline Bdc_Fun_t * Bdc_Not( Bdc_Fun_t * p )               { return (Bdc_Fun_t *)((ABC_PTRUINT_T)p ^  (ABC_PTRUINT_T)01);     }Bdc_Not56,1923
static inline Bdc_Fun_t * Bdc_NotCond( Bdc_Fun_t * p, int c )    { return (Bdc_Fun_t *)((ABC_PTRUINT_T)p ^  (ABC_PTRUINT_T)(c!=0)); }Bdc_NotCond57,2057
static inline int  Bdc_FunObjCopy( Bdc_Fun_t * pObj )     { return Abc_LitNotCond( Bdc_FuncCopyInt(Bdc_Regular(pObj)), Bdc_IsComplement(pObj) );  }Bdc_FunObjCopy84,3629
static inline int  Bdc_FunFanin0Copy( Bdc_Fun_t * pObj )  { return Bdc_FunObjCopy( Bdc_FuncFanin0(pObj) );                                        }Bdc_FunFanin0Copy85,3777
static inline int  Bdc_FunFanin1Copy( Bdc_Fun_t * pObj )  { return Bdc_FunObjCopy( Bdc_FuncFanin1(pObj) );                                        }Bdc_FunFanin1Copy86,3925

src/bool/bdc/bdcTable.c,343
int Bdc_TableCheckContainment( Bdc_Man_t * p, Bdc_Isf_t * pIsf, unsigned * puTruth )Bdc_TableCheckContainment45,1311
Bdc_Fun_t * Bdc_TableLookup( Bdc_Man_t * p, Bdc_Isf_t * pIsf )Bdc_TableLookup62,1800
void Bdc_TableAdd( Bdc_Man_t * p, Bdc_Fun_t * pFunc )Bdc_TableAdd101,3009
void Bdc_TableClear( Bdc_Man_t * p )Bdc_TableClear120,3511

src/bool/bdc/bdcCore.c,1841
Bdc_Fun_t *  Bdc_ManFunc( Bdc_Man_t * p, int i )               { return Bdc_FunWithId(p, i); }Bdc_ManFunc46,1293
Bdc_Fun_t *  Bdc_ManRoot( Bdc_Man_t * p )                      { return p->pRoot;            }Bdc_ManRoot47,1388
int          Bdc_ManNodeNum( Bdc_Man_t * p )                   { return p->nNodes;           }Bdc_ManNodeNum48,1483
int          Bdc_ManAndNum( Bdc_Man_t * p )                    { return p->nNodes-p->nVars-1;}Bdc_ManAndNum49,1578
Bdc_Fun_t *  Bdc_FuncFanin0( Bdc_Fun_t * p )                   { return p->pFan0;            }Bdc_FuncFanin050,1673
Bdc_Fun_t *  Bdc_FuncFanin1( Bdc_Fun_t * p )                   { return p->pFan1;            }Bdc_FuncFanin151,1768
void *       Bdc_FuncCopy( Bdc_Fun_t * p )                     { return p->pCopy;            }Bdc_FuncCopy52,1863
int          Bdc_FuncCopyInt( Bdc_Fun_t * p )                  { return p->iCopy;            }Bdc_FuncCopyInt53,1958
void         Bdc_FuncSetCopy( Bdc_Fun_t * p, void * pCopy )    { p->pCopy = pCopy;           }Bdc_FuncSetCopy54,2053
void         Bdc_FuncSetCopyInt( Bdc_Fun_t * p, int iCopy )    { p->iCopy = iCopy;           }Bdc_FuncSetCopyInt55,2148
Bdc_Man_t * Bdc_ManAlloc( Bdc_Par_t * pPars )Bdc_ManAlloc68,2507
void Bdc_ManFree( Bdc_Man_t * p )Bdc_ManFree113,4062
void Bdc_ManPrepare( Bdc_Man_t * p, Vec_Ptr_t * vDivs )Bdc_ManPrepare147,5125
void Bdc_ManDecPrintSimple( Bdc_Man_t * p )Bdc_ManDecPrintSimple199,6627
void Bdc_ManDecPrint_rec( Bdc_Man_t * p, Bdc_Fun_t * pNode )Bdc_ManDecPrint_rec233,7787
void Bdc_ManDecPrint( Bdc_Man_t * p )Bdc_ManDecPrint260,8820
int Bdc_ManDecompose( Bdc_Man_t * p, unsigned * puFunc, unsigned * puCare, int nVars, Vec_Ptr_t * vDivs, int nNodesMax )Bdc_ManDecompose291,9686
void Bdc_ManDecomposeTest( unsigned uTruth, int nVars )Bdc_ManDecomposeTest343,11275

src/bool/rsb/rsbDec6.c,2139
static inline unsigned Rsb_DecTry0( word c ) Rsb_DecTry045,1249
static inline unsigned Rsb_DecTry1( word c, word f1 ) Rsb_DecTry149,1330
static inline unsigned Rsb_DecTry2( word c, word f1, word f2 ) Rsb_DecTry253,1447
static inline unsigned Rsb_DecTry3( word c, word f1, word f2, word f3 ) Rsb_DecTry357,1581
static inline unsigned Rsb_DecTry4( word c, word f1, word f2, word f3, word f4 ) Rsb_DecTry461,1732
static inline unsigned Rsb_DecTry5( word c, word f1, word f2, word f3, word f4, word f5 ) Rsb_DecTry565,1900
static inline int Rsb_DecTryCex( word * g, int iCexA, int iCexB ) Rsb_DecTryCex81,2321
static inline void Rsb_DecVerifyCex( word * f, word ** g, int nGs, int iCexA, int iCexB ) Rsb_DecVerifyCex85,2453
static inline void Rsb_DecRecordCex( word ** g, int nGs, int iCexA, int iCexB, word * pCexes, int nCexes ) Rsb_DecRecordCex96,2904
static inline word Rsb_DecCofactor( word ** g, int nGs, int w, int iMint ) Rsb_DecCofactor116,3462
unsigned Rsb_DecCheck( int nVars, word * f, word ** g, int nGs, unsigned * pPat, int * pCexA, int * pCexB ) Rsb_DecCheck124,3683
void Rsb_DecPrintTable( word * pCexes, int nGs, int nGsAll, Vec_Int_t * vTries ) Rsb_DecPrintTable196,6310
int Rsb_DecInitCexes( int nVars, word * f, word ** g, int nGs, int nGsAll, word * pCexes, Vec_Int_t * vTries ) Rsb_DecInitCexes292,9000
unsigned Rsb_DecPerformInt( Rsb_Man_t * p, int nVars, word * f, word ** g, int nGs, int nGsAll, int fFindAll ) Rsb_DecPerformInt337,10563
void Rsb_DecPrintFunc( Rsb_Man_t * p, unsigned Truth4, word * f, word ** ppGs, int nGs, int nVarsAll )Rsb_DecPrintFunc516,16695
int Rsb_DecVerify( Rsb_Man_t * p, int nVars, word * f, word ** g, int nGs, unsigned Truth4, word * pTemp1, word * pTemp2 )Rsb_DecVerify560,18178
unsigned Rsb_ManPerform( Rsb_Man_t * p, int nVars, word * f, word ** g, int nGs, int nGsAll, int fVerbose0 ) Rsb_ManPerform612,19963
int Rsb_ManPerformResub6( Rsb_Man_t * p, int nVarsAll, word uTruth, Vec_Wrd_t * vDivTruths, word * puTruth0, word * puTruth1, int fVerbose )Rsb_ManPerformResub6694,22474
void Rsb_ManPerformResub6Test()Rsb_ManPerformResub6Test728,23547

src/bool/rsb/rsb.h,102
#define ABC__bool_Rsb_hABC__bool_Rsb_h22,534
typedef struct Rsb_Man_t_ Rsb_Man_t;Rsb_Man_t39,1248

src/bool/rsb/rsbInt.h,816
#define ABC__bool_RsbInt_hABC__bool_RsbInt_h22,543
struct Rsb_Man_t_Rsb_Man_t_50,1478
    int                nLeafMax;     // the max number of leaves of a cutnLeafMax53,1516
    int                nDivMax;      // the max number of divisors to collectnDivMax54,1590
    int                nDecMax;      // the max number of decompositionsnDecMax55,1668
    int                fVerbose;     // verbosity levelfVerbose56,1741
    Vec_Wrd_t *        vCexes;       // counter-examplesvCexes58,1818
    Vec_Int_t *        vDecPats;     // decomposition patternsvDecPats59,1875
    Vec_Int_t *        vFanins;      // the result of decompositionvFanins60,1938
    Vec_Int_t *        vFaninsOld;   // original faninsvFaninsOld61,2006
    Vec_Int_t *        vTries;       // intermediatevTries62,2062

src/bool/rsb/rsbMan.c,304
Rsb_Man_t * Rsb_ManAlloc( int nLeafMax, int nDivMax, int nDecMax, int fVerbose )Rsb_ManAlloc45,1235
void Rsb_ManFree( Rsb_Man_t * p )Rsb_ManFree63,1821
Vec_Int_t * Rsb_ManGetFanins( Rsb_Man_t * p )Rsb_ManGetFanins84,2270
Vec_Int_t * Rsb_ManGetFaninsOld( Rsb_Man_t * p )Rsb_ManGetFaninsOld88,2343

src/bool/dec/dec.h,6006
#define ABC__opt__dec__dec_hABC__opt__dec__dec_h22,567
typedef struct Dec_Edge_t_ Dec_Edge_t;Dec_Edge_t42,1289
struct Dec_Edge_t_Dec_Edge_t_43,1328
    unsigned          fCompl   :  1;   // the complemented bitfCompl45,1349
    unsigned          Node     : 30;   // the decomposition node pointed by the edgeNode46,1412
typedef struct Dec_Node_t_ Dec_Node_t;Dec_Node_t49,1501
struct Dec_Node_t_Dec_Node_t_50,1540
    Dec_Edge_t        eEdge0;          // the left child of the nodeeEdge052,1561
    Dec_Edge_t        eEdge1;          // the right child of the nodeeEdge153,1630
    union { int       iFunc;           // the literal of the node (AIG)iFunc55,1718
    void *            pFunc; };        // the function of the node (BDD or AIG)pFunc56,1790
    unsigned          Level    : 14;   // the level of this node in the global AIGLevel57,1870
    unsigned          fNodeOr  :  1;   // marks the original OR nodefNodeOr59,1975
    unsigned          fCompl0  :  1;   // marks the original complemented edgefCompl060,2044
    unsigned          fCompl1  :  1;   // marks the original complemented edgefCompl161,2123
    unsigned          nLat0    :  5;   // the number of latches on the first edgenLat063,2220
    unsigned          nLat1    :  5;   // the number of latches on the second edgenLat164,2302
    unsigned          nLat2    :  5;   // the number of latches on the output edgenLat265,2385
typedef struct Dec_Graph_t_ Dec_Graph_t;Dec_Graph_t68,2472
struct Dec_Graph_t_Dec_Graph_t_69,2513
    int               fConst;          // marks the constant 1 graphfConst71,2535
    int               nLeaves;         // the number of leavesnLeaves72,2604
    int               nSize;           // the number of nodes (including the leaves) nSize73,2667
    int               nCap;            // the number of allocated nodesnCap74,2753
    Dec_Node_t *      pNodes;          // the array of leaves and internal nodespNodes75,2825
    Dec_Edge_t        eRoot;           // the pointer to the topmost nodeeRoot76,2906
typedef struct Dec_Man_t_ Dec_Man_t;Dec_Man_t79,2984
struct Dec_Man_t_Dec_Man_t_80,3021
    void *            pMvcMem;         // memory manager for MVC cover (used for factoring)pMvcMem82,3041
    Vec_Int_t *       vCubes;          // storage for cubesvCubes83,3133
    Vec_Int_t *       vLits;           // storage for literals vLits84,3193
    unsigned short *  puCanons;        // canonical formspuCanons86,3318
    char *            pPhases;         // canonical phasespPhases87,3376
    char *            pPerms;          // canonical permutationspPerms88,3435
    unsigned char *   pMap;            // mapping of functions into class numberspMap89,3500
#define Dec_GraphForEachLeaf(Dec_GraphForEachLeaf98,3838
#define Dec_GraphForEachNode(Dec_GraphForEachNode101,4066
static inline Dec_Edge_t Dec_EdgeCreate( int Node, int fCompl )   Dec_EdgeCreate134,5698
static inline unsigned Dec_EdgeToInt( Dec_Edge_t eEdge )   Dec_EdgeToInt151,6125
static inline Dec_Edge_t Dec_IntToEdge( unsigned Edge )   Dec_IntToEdge167,6510
static inline unsigned    Dec_EdgeToInt_( Dec_Edge_t m )  { union { Dec_Edge_t x; unsigned y; } v; v.x = m; return v.y;  }Dec_EdgeToInt_183,6899
static inline Dec_Edge_t  Dec_IntToEdge_( unsigned m )    { union { Dec_Edge_t x; unsigned y; } v; v.y = m; return v.x;  }Dec_IntToEdge_202,7400
static inline Dec_Graph_t * Dec_GraphCreate( int nLeaves )   Dec_GraphCreate221,7909
static inline Dec_Graph_t * Dec_GraphCreateConst0()   Dec_GraphCreateConst0245,8594
static inline Dec_Graph_t * Dec_GraphCreateConst1()   Dec_GraphCreateConst1266,9100
static inline Dec_Graph_t * Dec_GraphCreateLeaf( int iLeaf, int nLeaves, int fCompl )   Dec_GraphCreateLeaf286,9577
static inline void Dec_GraphFree( Dec_Graph_t * pGraph )   Dec_GraphFree307,10153
static inline int Dec_GraphIsConst( Dec_Graph_t * pGraph )   Dec_GraphIsConst324,10545
static inline int Dec_GraphIsConst0( Dec_Graph_t * pGraph )   Dec_GraphIsConst0340,10910
static inline int Dec_GraphIsConst1( Dec_Graph_t * pGraph )   Dec_GraphIsConst1356,11300
static inline int Dec_GraphIsComplement( Dec_Graph_t * pGraph )   Dec_GraphIsComplement372,11693
static inline void Dec_GraphComplement( Dec_Graph_t * pGraph )   Dec_GraphComplement388,12068
static inline int Dec_GraphLeaveNum( Dec_Graph_t * pGraph )   Dec_GraphLeaveNum405,12434
static inline int Dec_GraphNodeNum( Dec_Graph_t * pGraph )   Dec_GraphNodeNum421,12801
static inline Dec_Node_t * Dec_GraphNode( Dec_Graph_t * pGraph, int i )   Dec_GraphNode437,13178
static inline Dec_Node_t * Dec_GraphNodeLast( Dec_Graph_t * pGraph )   Dec_GraphNodeLast453,13555
static inline int Dec_GraphNodeInt( Dec_Graph_t * pGraph, Dec_Node_t * pNode )   Dec_GraphNodeInt469,13950
static inline int Dec_GraphIsVar( Dec_Graph_t * pGraph )   Dec_GraphIsVar485,14356
static inline int Dec_GraphNodeIsVar( Dec_Graph_t * pGraph, Dec_Node_t * pNode )   Dec_GraphNodeIsVar501,14764
static inline Dec_Node_t * Dec_GraphVar( Dec_Graph_t * pGraph )   Dec_GraphVar517,15200
static inline int Dec_GraphVarInt( Dec_Graph_t * pGraph )   Dec_GraphVarInt534,15648
static inline void Dec_GraphSetRoot( Dec_Graph_t * pGraph, Dec_Edge_t eRoot )   Dec_GraphSetRoot551,16076
static inline Dec_Node_t * Dec_GraphAppendNode( Dec_Graph_t * pGraph )   Dec_GraphAppendNode567,16496
static inline Dec_Edge_t Dec_GraphAddNodeAnd( Dec_Graph_t * pGraph, Dec_Edge_t eEdge0, Dec_Edge_t eEdge1 )Dec_GraphAddNodeAnd591,17144
static inline Dec_Edge_t Dec_GraphAddNodeOr( Dec_Graph_t * pGraph, Dec_Edge_t eEdge0, Dec_Edge_t eEdge1 )Dec_GraphAddNodeOr615,17816
static inline Dec_Edge_t Dec_GraphAddNodeXor( Dec_Graph_t * pGraph, Dec_Edge_t eEdge0, Dec_Edge_t eEdge1, int Type )Dec_GraphAddNodeXor643,18652
static inline Dec_Edge_t Dec_GraphAddNodeMux( Dec_Graph_t * pGraph, Dec_Edge_t eEdgeC, Dec_Edge_t eEdgeT, Dec_Edge_t eEdgeE, int Type )Dec_GraphAddNodeMux684,19877

src/bool/dec/decAbc.c,1008
Abc_Obj_t * Dec_GraphToNetwork( Abc_Ntk_t * pNtk, Dec_Graph_t * pGraph )Dec_GraphToNetwork46,1439
Abc_Obj_t * Dec_SopToAig( Abc_Ntk_t * pNtk, char * pSop, Vec_Ptr_t * vFaninAigs )Dec_SopToAig79,2815
Abc_Obj_t * Dec_GraphToAig( Abc_Ntk_t * pNtk, Dec_Graph_t * pFForm, Vec_Ptr_t * vFaninAigs )Dec_GraphToAig104,3495
Abc_Obj_t * Dec_GraphToNetworkNoStrash( Abc_Ntk_t * pNtk, Dec_Graph_t * pGraph )Dec_GraphToNetworkNoStrash127,4217
int Dec_GraphToNetworkCount( Abc_Obj_t * pRoot, Dec_Graph_t * pGraph, int NodeMax, int LevelMax )Dec_GraphToNetworkCount167,6029
void Dec_GraphUpdateNetwork( Abc_Obj_t * pRoot, Dec_Graph_t * pGraph, int fUpdateLevel, int nGain )Dec_GraphUpdateNetwork240,8787
Hop_Obj_t * Dec_GraphToNetworkAig( Hop_Man_t * pMan, Dec_Graph_t * pGraph )Dec_GraphToNetworkAig268,9706
Hop_Obj_t * Dec_GraphFactorSop( Hop_Man_t * pMan, char * pSop )Dec_GraphFactorSop301,11034
Ivy_Obj_t * Dec_GraphToNetworkIvy( Ivy_Man_t * pMan, Dec_Graph_t * pGraph )Dec_GraphToNetworkIvy329,11767

src/bool/dec/decUtil.c,179
DdNode * Dec_GraphDeriveBdd( DdManager * dd, Dec_Graph_t * pGraph )Dec_GraphDeriveBdd50,1317
unsigned Dec_GraphDeriveTruth( Dec_Graph_t * pGraph )Dec_GraphDeriveTruth102,3095

src/bool/dec/decFactor.c,840
Dec_Graph_t * Dec_Factor( char * pSop )Dec_Factor58,2043
Dec_Edge_t Dec_Factor_rec( Dec_Graph_t * pFForm, Mvc_Cover_t * pCover )Dec_Factor_rec108,3545
Dec_Edge_t Dec_FactorLF_rec( Dec_Graph_t * pFForm, Mvc_Cover_t * pCover, Mvc_Cover_t * pSimple )Dec_FactorLF_rec188,5763
Dec_Edge_t Dec_FactorTrivial( Dec_Graph_t * pFForm, Mvc_Cover_t * pCover )Dec_FactorTrivial233,7198
Dec_Edge_t Dec_FactorTrivialCube( Dec_Graph_t * pFForm, Mvc_Cover_t * pCover, Mvc_Cube_t * pCube, Vec_Int_t * vEdgeLits )Dec_FactorTrivialCube262,8133
Dec_Edge_t Dec_FactorTrivialTree_rec( Dec_Graph_t * pFForm, Dec_Edge_t * peNodes, int nNodes, int fNodeOr )Dec_FactorTrivialTree_rec289,9009
Mvc_Cover_t * Dec_ConvertSopToMvc( char * pSop )Dec_ConvertSopToMvc326,10022
int Dec_FactorVerify( char * pSop, Dec_Graph_t * pFForm )Dec_FactorVerify371,11278

src/bool/dec/decMan.c,102
Dec_Man_t * Dec_ManStart()Dec_ManStart45,1287
void Dec_ManStop( Dec_Man_t * p )Dec_ManStop70,1994

src/bool/dec/decPrint.c,782
void Dec_GraphPrint( FILE * pFile, Dec_Graph_t * pGraph, char * pNamesIn[], char * pNameOut )Dec_GraphPrint49,1691
void Dec_GraphPrint2_rec( FILE * pFile, Dec_Graph_t * pGraph, Dec_Node_t * pNode, int fCompl, char * pNamesIn[], int * pPos, int LitSizeMax )Dec_GraphPrint2_rec107,3431
void Dec_GraphPrint_rec( FILE * pFile, Dec_Graph_t * pGraph, Dec_Node_t * pNode, int fCompl, char * pNamesIn[], int * pPos, int LitSizeMax )Dec_GraphPrint_rec171,5541
int Dec_GraphPrintGetLeafName( FILE * pFile, int iLeaf, int fCompl, char * pNamesIn[] )Dec_GraphPrintGetLeafName234,7920
void Dec_GraphPrintUpdatePos( FILE * pFile, int * pPos, int LitSizeMax )Dec_GraphPrintUpdatePos253,8407
int Dec_GraphPrintOutputName( FILE * pFile, char * pNameOut )Dec_GraphPrintOutputName275,8933

src/base/cmd/cmdAuto.c,2268
#define CMD_AUTO_LINE_MAX CMD_AUTO_LINE_MAX47,1091
#define CMD_AUTO_ARG_MAX CMD_AUTO_ARG_MAX48,1160
void Cmd_RunAutoTunerPrintOptions( satoko_opts_t * pOpts )Cmd_RunAutoTunerPrintOptions67,1798
int Cmd_RunAutoTunerEvalSimple( Vec_Ptr_t * vAigs, satoko_opts_t * pOpts )Cmd_RunAutoTunerEvalSimple88,2375
int Cmd_RunAutoTunerEval( Vec_Ptr_t * vAigs, satoko_opts_t * pOpts, int nCores )Cmd_RunAutoTunerEval112,3038
#define CMD_THR_MAX CMD_THR_MAX120,3208
typedef struct Cmd_AutoData_t_Cmd_AutoData_t_121,3232
    Gia_Man_t *     pGia;pGia123,3265
    satoko_opts_t * pOpts;pOpts124,3291
    int             iThread;iThread125,3318
    int             nTimeOut;nTimeOut126,3347
    int             fWorking;fWorking127,3377
    int             Result;Result128,3407
} Cmd_AutoData_t;Cmd_AutoData_t129,3435
void * Cmd_RunAutoTunerEvalWorkerThread( void * pArg )Cmd_RunAutoTunerEvalWorkerThread131,3454
int Cmd_RunAutoTunerEval( Vec_Ptr_t * vAigs, satoko_opts_t * pOpts, int nProcs )Cmd_RunAutoTunerEval151,4048
char * Cmd_DeriveConvertIntoString( int argc, char ** argv )Cmd_DeriveConvertIntoString227,6332
satoko_opts_t * Cmd_DeriveOptionFromSettings( int argc, char ** argv )Cmd_DeriveOptionFromSettings238,6600
void Cmf_CreateOptions_rec( Vec_Wec_t * vPars, int iPar, char Argv[CMD_AUTO_ARG_MAX][20], int Argc, Vec_Ptr_t * vOpts )Cmf_CreateOptions_rec456,14891
Vec_Ptr_t * Cmf_CreateOptions( Vec_Wec_t * vPars )Cmf_CreateOptions506,16711
static inline int Cmf_IsSpace( char p )          { return p == ' ' || p == '\t' || p == '\n' ||  p == '\r'; }Cmf_IsSpace542,17851
static inline int Cmf_IsLowerCaseChar( char p )  { return p >= 'a' && p <= 'z';                             }Cmf_IsLowerCaseChar543,17961
static inline int Cmf_IsUpperCaseChar( char p )  { return p >= 'A' && p <= 'Z';                             }Cmf_IsUpperCaseChar544,18071
static inline int Cmf_IsDigit( char p )          { return (p >= '0' && p <= '9') || p == '.';               }Cmf_IsDigit545,18181
Vec_Wec_t * Cmd_ReadParamChoices( char * pConfig )Cmd_ReadParamChoices547,18292
Vec_Ptr_t * Cmd_ReadFiles( char * pFileList )Cmd_ReadFiles595,20128
void Cmd_RunAutoTuner( char * pConfig, char * pFileList, int nCores )Cmd_RunAutoTuner636,21361

src/base/cmd/cmdPlugin.c,905
char * Abc_GetBinaryName( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_GetBinaryName130,4252
Vec_Str_t * Abc_ManReadFile( char * pFileName )Abc_ManReadFile155,4851
Vec_Int_t * Abc_ManReadBinary( char * pFileName, char * pToken )Abc_ManReadBinary185,5536
int Abc_ManReadInteger( char * pFileName, char * pToken )Abc_ManReadInteger227,6642
int Abc_ManReadStatus( char * pFileName, char * pToken )Abc_ManReadStatus254,7281
Vec_Int_t * Abc_ManExpandCex( Gia_Man_t * pGia, Vec_Int_t * vCex )Abc_ManExpandCex286,8070
static unsigned textToBin(char* text, unsigned long text_sz)textToBin330,9186
Gia_Man_t * Abc_ManReadAig( char * pFileName, char * pToken )Abc_ManReadAig359,10029
int Cmd_CommandAbcPlugIn( Abc_Frame_t * pAbc, int argc, char ** argv )Cmd_CommandAbcPlugIn412,11383
int Cmd_CommandAbcLoadPlugIn( Abc_Frame_t * pAbc, int argc, char ** argv )Cmd_CommandAbcLoadPlugIn631,18335

src/base/cmd/cmdUtils.c,1289
int cmdCheckShellEscape( Abc_Frame_t * pAbc, int argc, char ** argv)cmdCheckShellEscape50,1446
int CmdCommandDispatch( Abc_Frame_t * pAbc, int * pargc, char *** pargv )CmdCommandDispatch93,2548
const char * CmdSplitLine( Abc_Frame_t * pAbc, const char *sCommand, int *argc, char ***argv )CmdSplitLine181,5387
int CmdApplyAlias( Abc_Frame_t * pAbc, int *argcp, char ***argvp, int *loop )CmdApplyAlias267,7506
char * CmdHistorySubstitution( Abc_Frame_t * pAbc, char *line, int *changed )CmdHistorySubstitution390,10963
FILE * CmdFileOpen( Abc_Frame_t * pAbc, char *sFileName, char *sMode, char **pFileNameReal, int silent )CmdFileOpen408,11401
void CmdFreeArgv( int argc, char **argv )CmdFreeArgv485,13882
char ** CmdDupArgv( int argc, char **argv )CmdDupArgv492,14023
char ** CmdAddToArgv( int argc, char ** argv )CmdAddToArgv512,14509
void CmdCommandFree( Abc_Command * pCommand )CmdCommandFree535,15098
void CmdCommandPrint( Abc_Frame_t * pAbc, int fPrintAll, int fDetails )CmdCommandPrint554,15517
int CmdCommandPrintCompare( Abc_Command ** ppC1, Abc_Command ** ppC2 )CmdCommandPrintCompare666,19815
int CmdNamePrintCompare( char ** ppC1, char ** ppC2 )CmdNamePrintCompare706,20849
void CmdPrintTable( st__table * tTable, int fAliases )CmdPrintTable722,21225

src/base/cmd/cmd.h,300
#define ABC__base__cmd__cmd_hABC__base__cmd__cmd_h22,556
typedef struct MvCommand    Abc_Command;  // one commandAbc_Command39,1276
typedef struct MvAlias      Abc_Alias;    // one aliasAbc_Alias40,1333
typedef int (*Cmd_CommandFuncType)(Abc_Frame_t*, int, char**);Cmd_CommandFuncType54,2078

src/base/cmd/cmdLoad.c,324
int CmdCommandLoad( Abc_Frame_t * pAbc, int argc, char ** argv )CmdCommandLoad48,1358
Vec_Ptr_t * CmdCollectFileNames()CmdCollectFileNames113,3082
Vec_Ptr_t * CmdCollectFileNames()CmdCollectFileNames144,3873
void Load_Init( Abc_Frame_t * pAbc )Load_Init163,4172
void Load_End( Abc_Frame_t * pAbc )Load_End198,5065

src/base/cmd/cmd.c,2590
void Cmd_Init( Abc_Frame_t * pAbc )Cmd_Init80,3562
void Cmd_End( Abc_Frame_t * pAbc )Cmd_End130,6307
int CmdCommandTime( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandTime168,7437
int CmdCommandEcho( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandEcho235,8953
int CmdCommandQuit( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandQuit291,10217
int CmdCommandAbcrc( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandAbcrc333,11123
int CmdCommandHistory( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandHistory369,11906
int CmdCommandAlias( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandAlias414,13286
int CmdCommandUnalias( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandUnalias471,14563
int CmdCommandHelp( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandHelp523,15602
int CmdCommandSource( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandSource577,16990
int CmdCommandSetVariable( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandSetVariable760,22380
int CmdCommandUnsetVariable( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandUnsetVariable860,25143
int CmdCommandUndo( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandUndo915,26262
int CmdCommandRecall( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandRecall949,27111
int CmdCommandEmpty( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandEmpty1065,30894
int CmdCommandScanDir( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandScanDir1159,33025
int CmfFindNumber( char * pName )CmfFindNumber1298,37095
void CnfDupFileUnzip( char * pOldName )CnfDupFileUnzip1328,37722
int CmdCommandRenameFiles( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandRenameFiles1354,38459
int CmdCommandLs( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandLs1515,43949
int CmdCommandScrGen( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandScrGen1618,46967
#define unlink unlink1833,54372
int CmdCommandSis( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandSis1847,54657
int CmdCommandMvsis( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandMvsis1989,58901
void Gia_ManGnuplotShow( char * pPlotFileName )Gia_ManGnuplotShow2131,63209
int CmdCommandCapo( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandCapo2198,65266
int CmdCommandStarter( Abc_Frame_t * pAbc, int argc, char ** argv )CmdCommandStarter2382,71539
int CmdCommandAutoTuner( Abc_Frame_t * pAbc, int argc, char ** argv )CmdCommandAutoTuner2467,74537
int CmdCommandVersion( Abc_Frame_t * pAbc, int argc, char **argv )CmdCommandVersion2579,78476

src/base/cmd/cmdApi.c,446
int Cmd_CommandIsDefined( Abc_Frame_t * pAbc, const char * sName )Cmd_CommandIsDefined47,1309
void Cmd_CommandAdd( Abc_Frame_t * pAbc, const char * sGroup, const char * sName, Cmd_CommandFuncType pFunc, int fChanges )Cmd_CommandAdd63,1667
int Cmd_CommandHandleSpecial( Abc_Frame_t * pAbc, const char * sCommand )Cmd_CommandHandleSpecial99,2766
int Cmd_CommandExecute( Abc_Frame_t * pAbc, const char * sCommand )Cmd_CommandExecute193,6163

src/base/cmd/cmdInt.h,655
#define ABC__base__cmd__cmdInt_hABC__base__cmd__cmdInt_h22,565
struct MvCommandMvCommand43,1338
    char *        sName;       // the command name  sName45,1357
    char *        sGroup;      // the group name  sGroup46,1410
    Cmd_CommandFuncType        pFunc;       // the function to execute the commandpFunc47,1461
    int           fChange;     // set to 1 to mark that the network is changedfChange48,1544
struct MvAliasMvAlias51,1627
    char *        sName;       // the alias namesName53,1644
    int           argc;        // the number of alias partsargc54,1693
    char **       argv;        // the alias partsargv55,1753

src/base/cmd/cmdAlias.c,382
void CmdCommandAliasAdd( Abc_Frame_t * pAbc, char * sName, int argc, char ** argv )CmdCommandAliasAdd46,1294
void CmdCommandAliasPrint( Abc_Frame_t * pAbc, Abc_Alias * pAlias )CmdCommandAliasPrint72,2037
char * CmdCommandAliasLookup( Abc_Frame_t * pAbc, char * sCommand )CmdCommandAliasLookup92,2559
void CmdCommandAliasFree( Abc_Alias * pAlias )CmdCommandAliasFree113,3039

src/base/cmd/cmdStarter.c,111
void Cmd_RunStarter( char * pFileName, char * pBinary, char * pCommand, int nCores ) {}Cmd_RunStarter47,1093

src/base/cmd/cmdHist.c,370
#define ABC_USE_HISTORY ABC_USE_HISTORY33,863
void Cmd_HistoryAddCommand(    Abc_Frame_t * p, const char * command )Cmd_HistoryAddCommand50,1344
void Cmd_HistoryRead( Abc_Frame_t * p )Cmd_HistoryRead102,3138
void Cmd_HistoryWrite( Abc_Frame_t * p, int Limit )Cmd_HistoryWrite133,3902
void Cmd_HistoryPrint( Abc_Frame_t * p, int Limit )Cmd_HistoryPrint163,4654

src/base/cmd/cmdFlag.c,290
char * Cmd_FlagReadByName( Abc_Frame_t * pAbc, char * flag )Cmd_FlagReadByName47,1518
void Cmd_FlagUpdateValue( Abc_Frame_t * pAbc, const char * key, char * value )Cmd_FlagUpdateValue65,2015
void Cmd_FlagDeleteByName( Abc_Frame_t * pAbc, const char * key )Cmd_FlagDeleteByName90,2758

src/base/abc/abcBarBuf.c,1469
#define ABC_OBJ_VOID ABC_OBJ_VOID30,781
int Abc_NtkCheckSingleInstance( Abc_Ntk_t * pNtk )Abc_NtkCheckSingleInstance47,1341
int Abc_NtkCollectPiPos_rec( Abc_Obj_t * pNet, Vec_Ptr_t * vLiMaps, Vec_Ptr_t * vLoMaps )Abc_NtkCollectPiPos_rec92,2888
int Abc_NtkCollectPiPos_int( Abc_Obj_t * pBox, Abc_Ntk_t * pNtk, Vec_Ptr_t * vLiMaps, Vec_Ptr_t * vLoMaps )Abc_NtkCollectPiPos_int117,3972
int Abc_NtkCollectPiPos( Abc_Ntk_t * pNtk, Vec_Ptr_t ** pvLiMaps, Vec_Ptr_t ** pvLoMaps )Abc_NtkCollectPiPos147,4933
Abc_Obj_t * Abc_NtkToBarBufs_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNet )Abc_NtkToBarBufs_rec166,5500
Abc_Ntk_t * Abc_NtkToBarBufs( Abc_Ntk_t * pNtk )Abc_NtkToBarBufs180,5973
Abc_Obj_t * Abc_NtkFromBarBufs_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj )Abc_NtkFromBarBufs_rec252,9092
Abc_Ntk_t * Abc_NtkFromBarBufs( Abc_Ntk_t * pNtkBase, Abc_Ntk_t * pNtk )Abc_NtkFromBarBufs263,9446
void Abc_NtkToBarBufsCollect_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vNodes )Abc_NtkToBarBufsCollect_rec340,12996
Vec_Ptr_t * Abc_NtkToBarBufsCollect( Abc_Ntk_t * pNtk )Abc_NtkToBarBufsCollect352,13372
int Abc_NtkCountBarBufs( Abc_Ntk_t * pNtk )Abc_NtkCountBarBufs404,15038
Abc_Ntk_t * Abc_NtkBarBufsToBuffers( Abc_Ntk_t * pNtk )Abc_NtkBarBufsToBuffers424,15522
Abc_Ntk_t * Abc_NtkBarBufsFromBuffers( Abc_Ntk_t * pNtkBase, Abc_Ntk_t * pNtk )Abc_NtkBarBufsFromBuffers462,16959
Abc_Ntk_t * Abc_NtkBarBufsOnOffTest( Abc_Ntk_t * pNtk )Abc_NtkBarBufsOnOffTest498,18257

src/base/abc/abcFunc.c,3338
#define ABC_MAX_CUBES ABC_MAX_CUBES36,930
DdNode * Abc_ConvertSopToBdd( DdManager * dd, char * pSop, DdNode ** pbVars )Abc_ConvertSopToBdd61,1816
int Abc_NtkSopToBdd( Abc_Ntk_t * pNtk )Abc_NtkSopToBdd118,3673
char * Abc_ConvertBddToSop( Mem_Flex_t * pMan, DdManager * dd, DdNode * bFuncOn, DdNode * bFuncOnDc, int nFanins, int fAllPrimes, Vec_Str_t * vCube, int fMode )Abc_ConvertBddToSop214,6956
int Abc_NtkBddToSop( Abc_Ntk_t * pNtk, int fMode, int nCubeLimit )Abc_NtkBddToSop359,11416
void Abc_ConvertZddToSop_rec( DdManager * dd, DdNode * zCover, char * pSop, int nFanins, Vec_Str_t * vCube, int fPhase, int * pnCubes )Abc_ConvertZddToSop_rec464,15016
int Abc_ConvertZddToSop( DdManager * dd, DdNode * zCover, char * pSop, int nFanins, Vec_Str_t * vCube, int fPhase )Abc_ConvertZddToSop501,16190
void Abc_NodeBddToCnf( Abc_Obj_t * pNode, Mem_Flex_t * pMmMan, Vec_Str_t * vCube, int fAllPrimes, char ** ppSop0, char ** ppSop1 )Abc_NodeBddToCnf520,16732
void Abc_NtkLogicMakeDirectSops( Abc_Ntk_t * pNtk )Abc_NtkLogicMakeDirectSops539,17528
void Abc_CountZddCubes_rec( DdManager * dd, DdNode * zCover, int * pnCubes )Abc_CountZddCubes_rec594,19172
int Abc_CountZddCubes( DdManager * dd, DdNode * zCover )Abc_CountZddCubes623,19934
int Abc_NtkAigToBdd( Abc_Ntk_t * pNtk )Abc_NtkAigToBdd641,20371
void Abc_ConvertAigToBdd_rec1( DdManager * dd, Hop_Obj_t * pObj )Abc_ConvertAigToBdd_rec1723,23310
void Abc_ConvertAigToBdd_rec2( DdManager * dd, Hop_Obj_t * pObj )Abc_ConvertAigToBdd_rec2747,24110
DdNode * Abc_ConvertAigToBdd( DdManager * dd, Hop_Obj_t * pRoot )Abc_ConvertAigToBdd771,24857
int  Abc_NtkSopToBdd( Abc_Ntk_t * pNtk ) { return 1; }Abc_NtkSopToBdd790,25467
int  Abc_NtkBddToSop( Abc_Ntk_t * pNtk, int fMode, int nCubeLimit ) { return 1; }Abc_NtkBddToSop791,25522
void Abc_NodeBddToCnf( Abc_Obj_t * pNode, Mem_Flex_t * pMmMan, Vec_Str_t * vCube, int fAllPrimes, char ** ppSop0, char ** ppSop1 ) {}Abc_NodeBddToCnf792,25604
void Abc_NtkLogicMakeDirectSops( Abc_Ntk_t * pNtk ) {}Abc_NtkLogicMakeDirectSops793,25738
int  Abc_NtkAigToBdd( Abc_Ntk_t * pNtk ) { return 1; }Abc_NtkAigToBdd794,25793
int Abc_NtkSopToAig( Abc_Ntk_t * pNtk )Abc_NtkSopToAig809,26143
Hop_Obj_t * Abc_ConvertSopToAigInternal( Hop_Man_t * pMan, char * pSop )Abc_ConvertSopToAigInternal859,27386
Hop_Obj_t * Abc_ConvertSopToAig( Hop_Man_t * pMan, char * pSop )Abc_ConvertSopToAig908,28867
void Abc_ConvertAigToGia_rec1( Gia_Man_t * p, Hop_Obj_t * pObj )Abc_ConvertAigToGia_rec1933,29721
void Abc_ConvertAigToGia_rec2( Hop_Obj_t * pObj )Abc_ConvertAigToGia_rec2944,30192
int Abc_ConvertAigToGia( Gia_Man_t * p, Hop_Obj_t * pRoot )Abc_ConvertAigToGia954,30550
Gia_Man_t * Abc_NtkAigToGia( Abc_Ntk_t * p, int fGiaSimple )Abc_NtkAigToGia975,31101
void Abc_ConvertAigToAig_rec( Abc_Ntk_t * pNtkAig, Hop_Obj_t * pObj )Abc_ConvertAigToAig_rec1059,34266
Abc_Obj_t * Abc_ConvertAigToAig( Abc_Ntk_t * pNtkAig, Abc_Obj_t * pObjOld )Abc_ConvertAigToAig1082,35086
int Abc_NtkMapToSop( Abc_Ntk_t * pNtk )Abc_NtkMapToSop1119,36224
int Abc_NtkSopToBlifMv( Abc_Ntk_t * pNtk )Abc_NtkSopToBlifMv1154,37226
int Abc_NtkToSop( Abc_Ntk_t * pNtk, int fMode, int nCubeLimit )Abc_NtkToSop1170,37560
int Abc_NtkToBdd( Abc_Ntk_t * pNtk )Abc_NtkToBdd1208,38554
int Abc_NtkToAig( Abc_Ntk_t * pNtk )Abc_NtkToAig1242,39337

src/base/abc/abcNames.c,2249
char * Abc_ObjName( Abc_Obj_t * pObj )Abc_ObjName49,1589
char * Abc_ObjAssignName( Abc_Obj_t * pObj, char * pName, char * pSuffix )Abc_ObjAssignName69,2293
char * Abc_ObjNamePrefix( Abc_Obj_t * pObj, char * pPrefix )Abc_ObjNamePrefix86,2754
char * Abc_ObjNameSuffix( Abc_Obj_t * pObj, char * pSuffix )Abc_ObjNameSuffix104,3189
char * Abc_ObjNameDummy( char * pPrefix, int Num, int nDigits )Abc_ObjNameDummy122,3623
void Abc_NtkTrasferNames( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew )Abc_NtkTrasferNames140,4123
void Abc_NtkTrasferNamesNoLatches( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew )Abc_NtkTrasferNamesNoLatches169,5227
Vec_Ptr_t * Abc_NodeGetFaninNames( Abc_Obj_t * pNode )Abc_NodeGetFaninNames200,6466
Vec_Ptr_t * Abc_NodeGetFakeNames( int nNames )Abc_NodeGetFakeNames222,7006
void Abc_NodeFreeNames( Vec_Ptr_t * vNames )Abc_NodeFreeNames258,7769
char ** Abc_NtkCollectCioNames( Abc_Ntk_t * pNtk, int fCollectCos )Abc_NtkCollectCioNames279,8242
int Abc_NodeCompareNames( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_NodeCompareNames310,9007
void Abc_NtkOrderObjsByName( Abc_Ntk_t * pNtk, int fComb )Abc_NtkOrderObjsByName324,9352
Abc_Nam_t * Abc_NtkNameMan( Abc_Ntk_t * p, int fOuts )Abc_NtkNameMan367,11094
int Abc_NodeCompareIndexes( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_NodeCompareIndexes400,12049
void Abc_NtkTransferOrder( Abc_Ntk_t * pNtkOld, Abc_Ntk_t * pNtkNew )Abc_NtkTransferOrder409,12257
int Abc_NodeCompareCiCo( Abc_Ntk_t * pNtkOld, Abc_Ntk_t * pNtkNew )Abc_NodeCompareCiCo460,14439
void Abc_NtkAddDummyPiNames( Abc_Ntk_t * pNtk )Abc_NtkAddDummyPiNames489,15354
void Abc_NtkAddDummyPoNames( Abc_Ntk_t * pNtk )Abc_NtkAddDummyPoNames509,15866
void Abc_NtkAddDummyBoxNames( Abc_Ntk_t * pNtk )Abc_NtkAddDummyBoxNames529,16378
void Abc_NtkShortNames( Abc_Ntk_t * pNtk )Abc_NtkShortNames601,18817
void Abc_NtkRedirectCiCo( Abc_Ntk_t * pNtk )Abc_NtkRedirectCiCo621,19377
void Abc_NtkMoveNames( Abc_Ntk_t * pNtk, Abc_Ntk_t * pOld )Abc_NtkMoveNames645,20276
void Abc_NtkStartNameIds( Abc_Ntk_t * p )Abc_NtkStartNameIds674,21290
void Abc_NtkTransferNameIds( Abc_Ntk_t * p, Abc_Ntk_t * pNew )Abc_NtkTransferNameIds724,23289
void Abc_NtkUpdateNameIds( Abc_Ntk_t * p )Abc_NtkUpdateNameIds756,24447

src/base/abc/abcMinBase.c,2734
int Abc_NtkMinimumBase( Abc_Ntk_t * pNtk )Abc_NtkMinimumBase53,1476
int Abc_NodeMinimumBase( Abc_Obj_t * pNode )Abc_NodeMinimumBase75,2028
int Abc_NtkRemoveDupFanins( Abc_Ntk_t * pNtk )Abc_NtkRemoveDupFanins121,3491
int Abc_NodeRemoveDupFanins_int( Abc_Obj_t * pNode )Abc_NodeRemoveDupFanins_int143,4072
int Abc_NodeRemoveDupFanins( Abc_Obj_t * pNode )Abc_NodeRemoveDupFanins185,5488
void Abc_NodeSupport_rec( DdNode * bFunc, Vec_Str_t * vSupport )Abc_NodeSupport_rec203,5913
void Abc_NodeSupportClear_rec( DdNode * bFunc )Abc_NodeSupportClear_rec224,6528
int Abc_NodeSupport( DdNode * bFunc, Vec_Str_t * vSupport, int nVars )Abc_NodeSupport246,7103
int Abc_NodeCheckDupFanin( Abc_Obj_t * pFanin, Abc_Obj_t * pFanout, int * piFanin )Abc_NodeCheckDupFanin274,7833
int Abc_NodeCollapseSuppSize( Abc_Obj_t * pFanin, Abc_Obj_t * pFanout, Vec_Ptr_t * vFanins )Abc_NodeCollapseSuppSize299,8449
int Abc_ObjFaninNumberNew( Vec_Ptr_t * vFanins, Abc_Obj_t * pFanin )Abc_ObjFaninNumberNew323,9122
int Abc_NodeCollapsePermMap( Abc_Obj_t * pNode, Abc_Obj_t * pSkip, Vec_Ptr_t * vFanins, int * pPerm )Abc_NodeCollapsePermMap344,9650
DdNode * Abc_NodeCollapseFunc( Abc_Obj_t * pFanin, Abc_Obj_t * pFanout, Vec_Ptr_t * vFanins, int * pPermFanin, int * pPermFanout )Abc_NodeCollapseFunc374,10420
int Abc_NodeCollapse( Abc_Obj_t * pFanin, Abc_Obj_t * pFanout, Vec_Ptr_t * vFanins, int * pPermFanin, int * pPermFanout )Abc_NodeCollapse409,12291
int Abc_NtkEliminate( Abc_Ntk_t * pNtk, int nMaxSize, int fReverse, int fVerbose )Abc_NtkEliminate434,13241
int Abc_NodeCountAppearances( Abc_Obj_t * pFanin, Abc_Obj_t * pFanout )Abc_NodeCountAppearances512,16072
int Abc_NodeCountAppearancesAll( Abc_Obj_t * pNode )Abc_NodeCountAppearancesAll519,16409
Hop_Obj_t * Abc_NodeCollapseFunc1( Abc_Obj_t * pFanin, Abc_Obj_t * pFanout, Vec_Ptr_t * vFanins, int * pPermFanin, int * pPermFanout )Abc_NodeCollapseFunc1539,16907
int Abc_NodeCollapse1( Abc_Obj_t * pFanin, Abc_Obj_t * pFanout, Vec_Ptr_t * vFanins, int * pPermFanin, int * pPermFanout )Abc_NodeCollapse1564,18244
int Abc_NodeIsExor( Abc_Obj_t * pNode )Abc_NodeIsExor586,19107
int Abc_NtkEliminate1One( Abc_Ntk_t * pNtk, int ElimValue, int nMaxSize, int fReverse, int fVerbose )Abc_NtkEliminate1One602,19805
int Abc_NtkEliminate1( Abc_Ntk_t * pNtk, int ElimValue, int nMaxSize, int nIterMax, int fReverse, int fVerbose )Abc_NtkEliminate1668,22475
int Abc_ObjCompareByNumber( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_ObjCompareByNumber694,23187
void Abc_ObjSortInReverseOrder( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes )Abc_ObjSortInReverseOrder698,23326
int Abc_NtkEliminateSpecial( Abc_Ntk_t * pNtk, int nMaxSize, int fVerbose )Abc_NtkEliminateSpecial724,24025

src/base/abc/abcSop.c,3655
char * Abc_SopRegister( Mem_Flex_t * pMan, const char * pName )Abc_SopRegister57,1561
char * Abc_SopStart( Mem_Flex_t * pMan, int nCubes, int nVars )Abc_SopStart77,2111
char * Abc_SopCreateConst1( Mem_Flex_t * pMan )Abc_SopCreateConst1108,2887
char * Abc_SopCreateConst0( Mem_Flex_t * pMan )Abc_SopCreateConst0124,3264
char * Abc_SopCreateAnd2( Mem_Flex_t * pMan, int fCompl0, int fCompl1 )Abc_SopCreateAnd2140,3618
char * Abc_SopCreateAnd( Mem_Flex_t * pMan, int nVars, int * pfCompl )Abc_SopCreateAnd163,4172
char * Abc_SopCreateNand( Mem_Flex_t * pMan, int nVars )Abc_SopCreateNand185,4717
char * Abc_SopCreateOr( Mem_Flex_t * pMan, int nVars, int * pfCompl )Abc_SopCreateOr207,5218
char * Abc_SopCreateOrMultiCube( Mem_Flex_t * pMan, int nVars, int * pfCompl )Abc_SopCreateOrMultiCube229,5760
char * Abc_SopCreateNor( Mem_Flex_t * pMan, int nVars )Abc_SopCreateNor254,6346
char * Abc_SopCreateXor( Mem_Flex_t * pMan, int nVars )Abc_SopCreateXor275,6820
char * Abc_SopCreateXorSpecial( Mem_Flex_t * pMan, int nVars )Abc_SopCreateXorSpecial292,7240
char * Abc_SopCreateNxor( Mem_Flex_t * pMan, int nVars )Abc_SopCreateNxor312,7723
char * Abc_SopCreateMux( Mem_Flex_t * pMan )Abc_SopCreateMux330,8210
char * Abc_SopCreateInv( Mem_Flex_t * pMan )Abc_SopCreateInv346,8568
char * Abc_SopCreateBuf( Mem_Flex_t * pMan )Abc_SopCreateBuf362,8917
char * Abc_SopCreateFromTruth( Mem_Flex_t * pMan, int nVars, unsigned * pTruth )Abc_SopCreateFromTruth378,9293
char * Abc_SopCreateFromIsop( Mem_Flex_t * pMan, int nVars, Vec_Int_t * vCover )Abc_SopCreateFromIsop419,10545
char * Abc_SopCreateFromTruthIsop( Mem_Flex_t * pMan, int nVars, word * pTruth, Vec_Int_t * vCover )Abc_SopCreateFromTruthIsop457,11587
void Abc_SopToIsop( char * pSop, Vec_Int_t * vCover )Abc_SopToIsop497,12689
int Abc_SopGetCubeNum( char * pSop )Abc_SopGetCubeNum532,13624
int Abc_SopGetLitNum( char * pSop )Abc_SopGetLitNum554,14118
int Abc_SopGetVarNum( char * pSop )Abc_SopGetVarNum579,14668
int Abc_SopGetPhase( char * pSop )Abc_SopGetPhase599,15113
int Abc_SopGetIthCareLit( char * pSop, int i )Abc_SopGetIthCareLit621,15647
void Abc_SopComplement( char * pSop )Abc_SopComplement643,16130
void Abc_SopComplementVar( char * pSop, int iVar )Abc_SopComplementVar673,16865
int Abc_SopIsComplement( char * pSop )Abc_SopIsComplement698,17433
int Abc_SopIsConst0( char * pSop )Abc_SopIsConst0719,17929
int Abc_SopIsConst1( char * pSop )Abc_SopIsConst1735,18282
int Abc_SopIsBuf( char * pSop )Abc_SopIsBuf751,18635
int Abc_SopIsInv( char * pSop )Abc_SopIsInv771,19098
int Abc_SopIsAndType( char * pSop )Abc_SopIsAndType791,19588
int Abc_SopIsOrType( char * pSop )Abc_SopIsOrType815,20152
int Abc_SopIsExorType( char * pSop )Abc_SopIsExorType845,20854
int Abc_SopCheck( char * pSop, int nFanins )Abc_SopCheck866,21314
char * Abc_SopFromTruthBin( char * pTruth )Abc_SopFromTruthBin922,23065
char * Abc_SopFromTruthHex( char * pTruth )Abc_SopFromTruthHex991,25165
char * Abc_SopEncoderPos( Mem_Flex_t * pMan, int iValue, int nValues )Abc_SopEncoderPos1073,27773
char * Abc_SopEncoderLog( Mem_Flex_t * pMan, int iBit, int nValues )Abc_SopEncoderLog1092,28293
char * Abc_SopDecoderPos( Mem_Flex_t * pMan, int nValues )Abc_SopDecoderPos1136,29561
char * Abc_SopDecoderLog( Mem_Flex_t * pMan, int nValues )Abc_SopDecoderLog1172,30490
word Abc_SopToTruth( char * pSop, int nInputs )Abc_SopToTruth1206,31404
void Abc_SopToTruth7( char * pSop, int nInputs, word r[2] )Abc_SopToTruth71257,32798
void Abc_SopToTruthBig( char * pSop, int nInputs, word ** pVars, word * pCube, word * pRes )Abc_SopToTruthBig1317,34605

src/base/abc/abcAig.c,5104
struct Abc_Aig_t_Abc_Aig_t_52,1929
    Abc_Ntk_t *       pNtkAig;           // the AIG networkpNtkAig54,1949
    Abc_Obj_t *       pConst1;           // the constant 1 object (not a node!)pConst155,2009
    Abc_Obj_t **      pBins;             // the table binspBins56,2089
    int               nBins;             // the size of the tablenBins57,2148
    int               nEntries;          // the total number of entries in the tablenEntries58,2214
    Vec_Ptr_t *       vNodes;            // the temporary array of nodesvNodes59,2299
    Vec_Ptr_t *       vStackReplaceOld;  // the nodes to be replacedvStackReplaceOld60,2372
    Vec_Ptr_t *       vStackReplaceNew;  // the nodes to be used for replacementvStackReplaceNew61,2441
    Vec_Vec_t *       vLevels;           // the nodes to be updatedvLevels62,2522
    Vec_Vec_t *       vLevelsR;          // the nodes to be updatedvLevelsR63,2590
    Vec_Ptr_t *       vAddedCells;       // the added nodesvAddedCells64,2658
    Vec_Ptr_t *       vUpdatedNets;      // the nodes whose fanouts have changedvUpdatedNets65,2718
    int               nStrash0;nStrash067,2800
    int               nStrash1;nStrash168,2832
    int               nStrash5;nStrash569,2864
    int               nStrash2;nStrash270,2896
#define Abc_AigBinForEachEntry(Abc_AigBinForEachEntry74,2994
#define Abc_AigBinForEachEntrySafe(Abc_AigBinForEachEntrySafe78,3220
static unsigned Abc_HashKey2( Abc_Obj_t * p0, Abc_Obj_t * p1, int TableSize ) Abc_HashKey290,3982
Abc_Aig_t * Abc_AigAlloc( Abc_Ntk_t * pNtkAig )Abc_AigAlloc128,5597
void Abc_AigFree( Abc_Aig_t * pMan )Abc_AigFree165,6796
int Abc_AigCleanup( Abc_Aig_t * pMan )Abc_AigCleanup194,7638
int Abc_AigCheck( Abc_Aig_t * pMan )Abc_AigCheck226,8738
int Abc_AigLevel( Abc_Ntk_t * pNtk )Abc_AigLevel292,11183
Abc_Obj_t * Abc_AigAndCreate( Abc_Aig_t * pMan, Abc_Obj_t * p0, Abc_Obj_t * p1 )Abc_AigAndCreate319,11900
Abc_Obj_t * Abc_AigAndCreateFrom( Abc_Aig_t * pMan, Abc_Obj_t * p0, Abc_Obj_t * p1, Abc_Obj_t * pAnd )Abc_AigAndCreateFrom363,13522
Abc_Obj_t * Abc_AigAndLookup( Abc_Aig_t * pMan, Abc_Obj_t * p0, Abc_Obj_t * p1 )Abc_AigAndLookup403,14916
Abc_Obj_t * Abc_AigXorLookup( Abc_Aig_t * pMan, Abc_Obj_t * p0, Abc_Obj_t * p1, int * pType )Abc_AigXorLookup474,17121
Abc_Obj_t * Abc_AigMuxLookup( Abc_Aig_t * pMan, Abc_Obj_t * pC, Abc_Obj_t * pT, Abc_Obj_t * pE, int * pType )Abc_AigMuxLookup508,18342
void Abc_AigAndDelete( Abc_Aig_t * pMan, Abc_Obj_t * pThis )Abc_AigAndDelete542,19515
void Abc_AigResize( Abc_Aig_t * pMan )Abc_AigResize584,20787
void Abc_AigRehash( Abc_Aig_t * pMan )Abc_AigRehash628,22147
Abc_Obj_t * Abc_AigConst1( Abc_Ntk_t * pNtk )Abc_AigConst1683,23696
Abc_Obj_t * Abc_AigAnd( Abc_Aig_t * pMan, Abc_Obj_t * p0, Abc_Obj_t * p1 )Abc_AigAnd700,24137
Abc_Obj_t * Abc_AigOr( Abc_Aig_t * pMan, Abc_Obj_t * p0, Abc_Obj_t * p1 )Abc_AigOr719,24614
Abc_Obj_t * Abc_AigXor( Abc_Aig_t * pMan, Abc_Obj_t * p0, Abc_Obj_t * p1 )Abc_AigXor735,25027
Abc_Obj_t * Abc_AigMux( Abc_Aig_t * pMan, Abc_Obj_t * pC, Abc_Obj_t * p1, Abc_Obj_t * p0 )Abc_AigMux752,25499
Abc_Obj_t * Abc_AigMiter_rec( Abc_Aig_t * pMan, Abc_Obj_t ** ppObjs, int nObjs )Abc_AigMiter_rec768,25945
Abc_Obj_t * Abc_AigMiter( Abc_Aig_t * pMan, Vec_Ptr_t * vPairs, int fImplic )Abc_AigMiter789,26549
Abc_Obj_t * Abc_AigMiter2( Abc_Aig_t * pMan, Vec_Ptr_t * vPairs )Abc_AigMiter2821,27593
void Abc_AigReplace( Abc_Aig_t * pMan, Abc_Obj_t * pOld, Abc_Obj_t * pNew, int fUpdateLevel )Abc_AigReplace850,28349
void Abc_AigReplace_int( Abc_Aig_t * pMan, Abc_Obj_t * pOld, Abc_Obj_t * pNew, int fUpdateLevel )Abc_AigReplace_int883,29418
void Abc_AigDeleteNode( Abc_Aig_t * pMan, Abc_Obj_t * pNode )Abc_AigDeleteNode972,33170
void Abc_AigUpdateLevel_int( Abc_Aig_t * pMan )Abc_AigUpdateLevel_int1046,35939
void Abc_AigUpdateLevelR_int( Abc_Aig_t * pMan )Abc_AigUpdateLevelR_int1102,37923
void Abc_AigRemoveFromLevelStructure( Vec_Vec_t * vStruct, Abc_Obj_t * pNode )Abc_AigRemoveFromLevelStructure1162,40085
void Abc_AigRemoveFromLevelStructureR( Vec_Vec_t * vStruct, Abc_Obj_t * pNode )Abc_AigRemoveFromLevelStructureR1191,40847
int Abc_AigNodeHasComplFanoutEdge( Abc_Obj_t * pNode )Abc_AigNodeHasComplFanoutEdge1224,41741
int Abc_AigNodeHasComplFanoutEdgeTrav( Abc_Obj_t * pNode )Abc_AigNodeHasComplFanoutEdgeTrav1251,42522
void Abc_AigPrintNode( Abc_Obj_t * pNode )Abc_AigPrintNode1279,43214
int Abc_AigNodeIsAcyclic( Abc_Obj_t * pNode, Abc_Obj_t * pRoot )Abc_AigNodeIsAcyclic1313,44299
void Abc_AigCheckFaninOrder( Abc_Aig_t * pMan )Abc_AigCheckFaninOrder1362,45511
void Abc_AigSetNodePhases( Abc_Ntk_t * pNtk )Abc_AigSetNodePhases1389,46371
Vec_Ptr_t * Abc_AigUpdateStart( Abc_Aig_t * pMan, Vec_Ptr_t ** pvUpdatedNets )Abc_AigUpdateStart1420,47358
void Abc_AigUpdateStop( Abc_Aig_t * pMan )Abc_AigUpdateStop1440,47904
void Abc_AigUpdateReset( Abc_Aig_t * pMan )Abc_AigUpdateReset1460,48387
int Abc_AigCountNext( Abc_Aig_t * pMan )Abc_AigCountNext1478,48812
void Abc_NtkHelloWorld( Abc_Ntk_t * pNtk )Abc_NtkHelloWorld1498,49509

src/base/abc/abcLatch.c,1929
int Abc_NtkLatchIsSelfFeed_rec( Abc_Obj_t * pLatch, Abc_Obj_t * pLatchRoot )Abc_NtkLatchIsSelfFeed_rec48,1333
int Abc_NtkLatchIsSelfFeed( Abc_Obj_t * pLatch )Abc_NtkLatchIsSelfFeed71,2009
int Abc_NtkCountSelfFeedLatches( Abc_Ntk_t * pNtk )Abc_NtkCountSelfFeedLatches92,2607
int Abc_NtkRemoveSelfFeedLatches( Abc_Ntk_t * pNtk )Abc_NtkRemoveSelfFeedLatches117,3298
void Abc_NtkLatchPipe( Abc_Ntk_t * pNtk, int nLatches )Abc_NtkLatchPipe148,4176
Vec_Int_t * Abc_NtkCollectLatchValues( Abc_Ntk_t * pNtk )Abc_NtkCollectLatchValues190,5542
char * Abc_NtkCollectLatchValuesStr( Abc_Ntk_t * pNtk )Abc_NtkCollectLatchValuesStr212,6099
void Abc_NtkInsertLatchValues( Abc_Ntk_t * pNtk, Vec_Int_t * vValues )Abc_NtkInsertLatchValues244,6894
Abc_Obj_t * Abc_NtkAddLatch( Abc_Ntk_t * pNtk, Abc_Obj_t * pDriver, Abc_InitType_t Init )Abc_NtkAddLatch263,7453
void Abc_NtkNodeConvertToMux( Abc_Ntk_t * pNtk, Abc_Obj_t * pNodeC, Abc_Obj_t * pNode1, Abc_Obj_t * pNode0, Abc_Obj_t * pMux )Abc_NtkNodeConvertToMux290,8291
void Abc_NtkConvertDcLatches( Abc_Ntk_t * pNtk )Abc_NtkConvertDcLatches319,9530
Vec_Ptr_t * Abc_NtkConverLatchNamesIntoNumbers( Abc_Ntk_t * pNtk )Abc_NtkConverLatchNamesIntoNumbers373,11442
Abc_Ntk_t * Abc_NtkConvertOnehot( Abc_Ntk_t * pNtk )Abc_NtkConvertOnehot426,13087
Aig_Man_t * Abc_NtkRetimeWithClassesAig( Aig_Man_t * pMan, Vec_Int_t * vClasses, Vec_Int_t ** pvClasses, int fVerbose )Abc_NtkRetimeWithClassesAig543,17391
Abc_Ntk_t * Abc_NtkRetimeWithClassesNtk( Abc_Ntk_t * pNtk, Vec_Int_t * vClasses, Vec_Int_t ** pvClasses, int fVerbose )Abc_NtkRetimeWithClassesNtk570,18223
void Abc_NtkTransformBack( Abc_Ntk_t * pNtkOld, Abc_Ntk_t * pNtkNew, Vec_Ptr_t * vControls, Vec_Int_t * vClasses )Abc_NtkTransformBack599,19305
Abc_Ntk_t * Abc_NtkCRetime( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCRetime646,21040
int Abc_NtkVerifyCex( Abc_Ntk_t * pNtk, Abc_Cex_t * p )Abc_NtkVerifyCex731,23925

src/base/abc/abcFanOrder.c,1876
void Abc_NtkOrderFaninsById( Abc_Ntk_t * pNtk )Abc_NtkOrderFaninsById46,1272
void Abc_NtkSopTranspose( char * pSop, int nVars, Vec_Ptr_t * vCubes, Vec_Str_t * vStore )Abc_NtkSopTranspose103,3146
static inline void Vec_StrSelectSortCost( char ** pArray, int nSize, Vec_Int_t * vPerm )Vec_StrSelectSortCost125,3847
void Abc_NtkOrderFaninsBySortingColumns( Abc_Ntk_t * pNtk )Abc_NtkOrderFaninsBySortingColumns142,4402
static inline void Vec_StrSelectSortCost2( char ** pArray, int nSize, Vec_Int_t * vCounts, Vec_Int_t * vPerm )Vec_StrSelectSortCost2213,6766
void Abc_NtkOrderFaninsByLitCount( Abc_Ntk_t * pNtk )Abc_NtkOrderFaninsByLitCount231,7512
void Abc_NtkOrderFaninsByLitCountAndCubeCount( Abc_Ntk_t * pNtk )Abc_NtkOrderFaninsByLitCountAndCubeCount304,10081
void Abc_NodeSplitLarge( Abc_Obj_t * pNode )Abc_NodeSplitLarge397,13390
void Abc_NtkSplitLarge( Abc_Ntk_t * pNtk, int nFaninsMax, int nCubesMax )Abc_NtkSplitLarge419,14295
int Abc_NodeCompareCubes1( char ** pp1, char ** pp2 )Abc_NodeCompareCubes1446,15054
int Abc_NodeCompareCubes2( char ** pp1, char ** pp2 )Abc_NodeCompareCubes2450,15145
void Abc_NodeSortCubes( Abc_Obj_t * pNode, Vec_Ptr_t * vCubes, Vec_Str_t * vStore, int fWeight )Abc_NodeSortCubes466,15523
void Abc_NtkSortCubes( Abc_Ntk_t * pNtk, int fWeight )Abc_NtkSortCubes493,16479
void Abc_NtkSortSops( Abc_Ntk_t * pNtk )Abc_NtkSortSops520,17170
static inline int Abc_CubeContain( char * pCube1, char * pCube2, int nVars )Abc_CubeContain540,17738
int Abc_NodeMakeSCCFree( Abc_Obj_t * pNode )Abc_NodeMakeSCCFree559,18245
void Abc_NodeMakeDist1Free( Abc_Obj_t * pNode )Abc_NodeMakeDist1Free590,19120
void Abc_NodeCheckDist1Free( Abc_Obj_t * pNode )Abc_NodeCheckDist1Free606,19729
int Abc_NodeMakeLegit( Abc_Obj_t * pNode )Abc_NodeMakeLegit623,20211
int Abc_NtkMakeLegit( Abc_Ntk_t * pNtk )Abc_NtkMakeLegit634,20474

src/base/abc/abcNetlist.c,659
Abc_Ntk_t * Abc_NtkToLogic( Abc_Ntk_t * pNtk )Abc_NtkToLogic52,1600
Abc_Ntk_t * Abc_NtkToNetlist( Abc_Ntk_t * pNtk )Abc_NtkToNetlist100,3250
Abc_Ntk_t * Abc_NtkToNetlistBench( Abc_Ntk_t * pNtk )Abc_NtkToNetlistBench125,3958
Abc_Ntk_t * Abc_NtkLogicToNetlist( Abc_Ntk_t * pNtk )Abc_NtkLogicToNetlist150,4785
Abc_Ntk_t * Abc_NtkAigToLogicSop( Abc_Ntk_t * pNtk )Abc_NtkAigToLogicSop252,8578
Abc_Ntk_t * Abc_NtkAigToLogicSopBench( Abc_Ntk_t * pNtk )Abc_NtkAigToLogicSopBench342,11845
Abc_Ntk_t * Abc_NtkAigToLogicSopNand( Abc_Ntk_t * pNtk )Abc_NtkAigToLogicSopNand413,14615
void Abc_NtkAddPoBuffers( Abc_Ntk_t * pNtk )Abc_NtkAddPoBuffers494,17707

src/base/abc/abcShow.c,948
void Abc_NodeShowBddOne( DdManager * dd, DdNode * bFunc )Abc_NodeShowBddOne63,1609
void Abc_NodeShowBdd( Abc_Obj_t * pNode, int fCompl )Abc_NodeShowBdd88,2277
void Abc_NtkShowBdd( Abc_Ntk_t * pNtk, int fCompl )Abc_NtkShowBdd124,3457
void Abc_NodeShowBdd( Abc_Obj_t * pNode, int fCompl ) {}Abc_NodeShowBdd188,5603
void Abc_NtkShowBdd( Abc_Ntk_t * pNtk, int fCompl ) {}Abc_NtkShowBdd189,5660
void Abc_NodeShowCut( Abc_Obj_t * pNode, int nNodeSizeMax, int nConeSizeMax )Abc_NodeShowCut203,6007
void Abc_NtkShow( Abc_Ntk_t * pNtk0, int fGateNames, int fSeq, int fUseReverse )Abc_NtkShow263,7925
void Abc_ShowFile( char * FileNameDot )Abc_ShowFile326,9715
void Abc_ShowGetFileName( char * pName, char * pBuffer )Abc_ShowGetFileName424,12737
void Abc_NtkWriteFlopDependency( Abc_Ntk_t * pNtk, char * pFileName )Abc_NtkWriteFlopDependency448,13384
void Abc_NtkShowFlopDependency( Abc_Ntk_t * pNtk )Abc_NtkShowFlopDependency502,15171

src/base/abc/abcNtk.c,3965
Abc_Ntk_t * Abc_NtkAlloc( Abc_NtkType_t Type, Abc_NtkFunc_t Func, int fUseMemMan )Abc_NtkAlloc53,1430
Abc_Ntk_t * Abc_NtkStartFrom( Abc_Ntk_t * pNtk, Abc_NtkType_t Type, Abc_NtkFunc_t Func )Abc_NtkStartFrom111,3517
Abc_Ntk_t * Abc_NtkStartFromWithLatches( Abc_Ntk_t * pNtk, Abc_NtkType_t Type, Abc_NtkFunc_t Func, int nLatches )Abc_NtkStartFromWithLatches178,6265
Abc_Ntk_t * Abc_NtkStartFromNoLatches( Abc_Ntk_t * pNtk, Abc_NtkType_t Type, Abc_NtkFunc_t Func )Abc_NtkStartFromNoLatches255,9458
void Abc_NtkFinalize( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew )Abc_NtkFinalize309,11293
Abc_Ntk_t * Abc_NtkStartRead( char * pName )Abc_NtkStartRead340,12262
void Abc_NtkFinalizeRead( Abc_Ntk_t * pNtk )Abc_NtkFinalizeRead367,13035
Abc_Ntk_t * Abc_NtkDup( Abc_Ntk_t * pNtk )Abc_NtkDup426,14740
Abc_Ntk_t * Abc_NtkDupDfs( Abc_Ntk_t * pNtk )Abc_NtkDupDfs483,17109
Abc_Ntk_t * Abc_NtkDupDfsNoBarBufs( Abc_Ntk_t * pNtk )Abc_NtkDupDfsNoBarBufs523,18642
Abc_Ntk_t * Abc_NtkRestrashWithLatches( Abc_Ntk_t * pNtk, int nLatches )Abc_NtkRestrashWithLatches579,20596
Abc_Ntk_t * Abc_NtkDupTransformMiter( Abc_Ntk_t * pNtk )Abc_NtkDupTransformMiter614,21768
Abc_Ntk_t * Abc_NtkDouble( Abc_Ntk_t * pNtk )Abc_NtkDouble670,23845
Abc_Ntk_t * Abc_NtkBottom( Abc_Ntk_t * pNtk, int Level )Abc_NtkBottom753,26870
Abc_Ntk_t * Abc_NtkAttachBottom( Abc_Ntk_t * pNtkTop, Abc_Ntk_t * pNtkBottom )Abc_NtkAttachBottom811,28937
Abc_Ntk_t * Abc_NtkCreateCone( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode, char * pNodeName, int fUseAllCis )Abc_NtkCreateCone870,31181
Abc_Ntk_t * Abc_NtkCreateConeArray( Abc_Ntk_t * pNtk, Vec_Ptr_t * vRoots, int fUseAllCis )Abc_NtkCreateConeArray940,33586
void Abc_NtkAppendToCone( Abc_Ntk_t * pNtkNew, Abc_Ntk_t * pNtk, Vec_Ptr_t * vRoots )Abc_NtkAppendToCone1020,36151
Abc_Ntk_t * Abc_NtkCreateMffc( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode, char * pNodeName )Abc_NtkCreateMffc1073,37899
Abc_Ntk_t * Abc_NtkCreateTarget( Abc_Ntk_t * pNtk, Vec_Ptr_t * vRoots, Vec_Int_t * vValues )Abc_NtkCreateTarget1145,40199
Abc_Ntk_t * Abc_NtkCreateFromNode( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode )Abc_NtkCreateFromNode1205,42118
Abc_Ntk_t * Abc_NtkCreateWithNode( char * pSop )Abc_NtkCreateWithNode1243,43457
void Abc_NtkDelete( Abc_Ntk_t * pNtk )Abc_NtkDelete1284,44864
void Abc_NtkFixNonDrivenNets( Abc_Ntk_t * pNtk )Abc_NtkFixNonDrivenNets1416,49156
void Abc_NtkMakeComb( Abc_Ntk_t * pNtk, int fRemoveLatches )Abc_NtkMakeComb1478,50816
void Abc_NtkMakeSeq( Abc_Ntk_t * pNtk, int nLatchesToAdd )Abc_NtkMakeSeq1570,53384
Abc_Ntk_t * Abc_NtkMakeOnePo( Abc_Ntk_t * pNtkInit, int Output, int nRange )Abc_NtkMakeOnePo1646,55502
Abc_Ntk_t * Abc_NtkTrim( Abc_Ntk_t * pNtk )Abc_NtkTrim1710,57361
void Abc_NtkDropSatOutputs( Abc_Ntk_t * pNtk, Vec_Ptr_t * vCexes, int fVerbose )Abc_NtkDropSatOutputs1793,59993
void Abc_NtkDropOneOutput( Abc_Ntk_t * pNtk, int iOutput, int fSkipSweep, int fUseConst1 )Abc_NtkDropOneOutput1828,61212
void Abc_NtkSwapOneOutput( Abc_Ntk_t * pNtk, int iOutput )Abc_NtkSwapOneOutput1858,62129
void Abc_NtkRemovePo( Abc_Ntk_t * pNtk, int iOutput, int fRemoveConst0 )Abc_NtkRemovePo1897,63358
Vec_Int_t * Abc_NtkReadFlopPerm( char * pFileName, int nFlops )Abc_NtkReadFlopPerm1915,63848
void Abc_NtkPermute( Abc_Ntk_t * pNtk, int fInputs, int fOutputs, int fFlops, char * pFlopPermFile )Abc_NtkPermute1962,65168
int Abc_NodeCompareByFanoutCount( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_NodeCompareByFanoutCount2077,69645
void Abc_NtkPermutePiUsingFanout( Abc_Ntk_t * pNtk )Abc_NtkPermutePiUsingFanout2091,70014
void Abc_NtkUnpermute( Abc_Ntk_t * pNtk )Abc_NtkUnpermute2112,70649
Abc_Ntk_t * Abc_NtkNodeDup( Abc_Ntk_t * pNtkInit, int nLimit, int fVerbose )Abc_NtkNodeDup2170,72600
Abc_Ntk_t * Abc_NtkCreateFromSops( char * pName, Vec_Ptr_t * vSops )Abc_NtkCreateFromSops2215,74016
Abc_Ntk_t * Abc_NtkCreateFromGias( char * pName, Vec_Ptr_t * vGias, Gia_Man_t * pMulti )Abc_NtkCreateFromGias2253,75218

src/base/abc/abcLib.c,1009
Abc_Des_t * Abc_DesCreate( char * pName )Abc_DesCreate45,1266
void Abc_DesCleanManPointer( Abc_Des_t * p, void * pMan )Abc_DesCleanManPointer70,1926
void Abc_DesFree( Abc_Des_t * p, Abc_Ntk_t * pNtkSave )Abc_DesFree94,2508
Abc_Des_t * Abc_DesDup( Abc_Des_t * p )Abc_DesDup133,3546
Abc_Des_t * Abc_DesDupBlackboxes( Abc_Des_t * p, Abc_Ntk_t * pNtkSave )Abc_DesDupBlackboxes165,4611
void Abc_DesPrint( Abc_Des_t * p )Abc_DesPrint194,5447
int Abc_DesAddModel( Abc_Des_t * p, Abc_Ntk_t * pNtk )Abc_DesAddModel226,6512
Abc_Ntk_t * Abc_DesFindModelByName( Abc_Des_t * p, char * pName )Abc_DesFindModelByName249,7115
Abc_Ntk_t * Abc_DesDeriveRoot( Abc_Des_t * p )Abc_DesDeriveRoot269,7617
int Abc_DesFindTopLevelModels( Abc_Des_t * p )Abc_DesFindTopLevelModels293,8285
void Abc_NodeStrashUsingNetwork_rec( Abc_Ntk_t * pNtkAig, Abc_Obj_t * pObj )Abc_NodeStrashUsingNetwork_rec339,9568
void Abc_NodeStrashUsingNetwork( Abc_Ntk_t * pNtkAig, Abc_Obj_t * pBox )Abc_NodeStrashUsingNetwork366,10355

src/base/abc/abcHieCec.c,1571
#define Abc_ObjForEachFaninReal(Abc_ObjForEachFaninReal31,832
static inline Abc_Obj_t * Abc_ObjFaninReal( Abc_Obj_t * pObj, int i )    Abc_ObjFaninReal49,1486
void Abc_NtkDfsBoxes_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkDfsBoxes_rec75,2167
Vec_Ptr_t * Abc_NtkDfsBoxes( Abc_Ntk_t * pNtk )Abc_NtkDfsBoxes104,3039
int Abc_NtkDeriveFlatGiaSop( Gia_Man_t * pGia, int * gFanins, char * pSop )Abc_NtkDeriveFlatGiaSop131,3713
void Abc_NtkDeriveFlatGia_rec( Gia_Man_t * pGia, Abc_Ntk_t * pNtk )Abc_NtkDeriveFlatGia_rec181,5198
Gia_Man_t * Abc_NtkDeriveFlatGia( Abc_Ntk_t * pNtk )Abc_NtkDeriveFlatGia259,8218
int Abc_NtkCountAndNodes( Vec_Ptr_t * vOrder )Abc_NtkCountAndNodes300,9441
Gia_Man_t * Abc_NtkDeriveFlatGia2Derive( Abc_Ntk_t * pNtk, Vec_Ptr_t * vOrder )Abc_NtkDeriveFlatGia2Derive332,10236
Gia_Man_t * Abc_NtkDeriveFlatGia2( Abc_Ntk_t * pNtk, Vec_Ptr_t * vModels )Abc_NtkDeriveFlatGia2449,14328
void Abc_NtkCollectHie_rec( Abc_Ntk_t * pNtk, Vec_Ptr_t * vModels )Abc_NtkCollectHie_rec483,15184
Vec_Ptr_t * Abc_NtkCollectHie( Abc_Ntk_t * pNtk )Abc_NtkCollectHie499,15695
int Abc_NtkCountInst_rec( Abc_Ntk_t * pNtk )Abc_NtkCountInst_rec534,16498
void Abc_NtkCountInst( Abc_Ntk_t * pNtk )Abc_NtkCountInst549,16976
double Abc_NtkCountNodes_rec( Abc_Ntk_t * pNtk )Abc_NtkCountNodes_rec578,17674
void Abc_NtkCountNodes( Abc_Ntk_t * pNtk )Abc_NtkCountNodes596,18227
int Abc_NtkCheckRecursive( Abc_Ntk_t * pNtk )Abc_NtkCheckRecursive626,18948
Gia_Man_t * Abc_NtkHieCecTest( char * pFileName, int fVerbose )Abc_NtkHieCecTest664,19941

src/base/abc/abcHieGia.c,1420
void Abc_NodeStrashToGia_rec( Gia_Man_t * pNew, Hop_Obj_t * pObj )Abc_NodeStrashToGia_rec45,1289
int Abc_NodeStrashToGia( Gia_Man_t * pNew, Abc_Obj_t * pNode )Abc_NodeStrashToGia56,1766
void Abc_NtkFlattenHierarchyGia2_rec( Gia_Man_t * pNew, Abc_Ntk_t * pNtk, int * pCounter, Vec_Int_t * vBufs )Abc_NtkFlattenHierarchyGia2_rec89,2967
Gia_Man_t * Abc_NtkFlattenHierarchyGia2( Abc_Ntk_t * pNtk )Abc_NtkFlattenHierarchyGia2134,5096
void Gia_ManPrintBarBufDrivers( Gia_Man_t * p )Gia_ManPrintBarBufDrivers213,7635
static inline void Gia_ManPatchBufDriver( Gia_Man_t * p, int iBuf, int iLit0 )  Gia_ManPatchBufDriver272,9604
Gia_Man_t * Gia_ManSweepHierarchy( Gia_Man_t * p )Gia_ManSweepHierarchy292,10220
int Gia_ManFlattenLogicPrepare( Abc_Ntk_t * pNtk )Gia_ManFlattenLogicPrepare355,12667
int Abc_NtkFlattenHierarchyGia_rec( Gia_Man_t * pNew, Vec_Ptr_t * vSupers, Abc_Obj_t * pObj, Vec_Ptr_t * vBuffers )Abc_NtkFlattenHierarchyGia_rec374,13224
Gia_Man_t * Abc_NtkFlattenHierarchyGia( Abc_Ntk_t * pNtk, Vec_Ptr_t ** pvBuffers, int fVerbose )Abc_NtkFlattenHierarchyGia418,15370
Abc_Obj_t * Gia_ManInsertOne_rec( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNew, Abc_Obj_t * pObj )Gia_ManInsertOne_rec488,17689
void Gia_ManInsertOne( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNew )Gia_ManInsertOne503,18230
void Abc_NtkInsertHierarchyGia( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNew, int fVerbose )Abc_NtkInsertHierarchyGia535,19590

src/base/abc/abcBlifMv.c,1239
void Abc_NtkStartMvVars( Abc_Ntk_t * pNtk ) Abc_NtkStartMvVars49,1333
void Abc_NtkFreeMvVars( Abc_Ntk_t * pNtk ) Abc_NtkFreeMvVars69,1921
void Abc_NtkSetMvVarValues( Abc_Obj_t * pObj, int nValues )Abc_NtkSetMvVarValues87,2357
static inline int Abc_StringGetNumber( char ** ppStr )Abc_StringGetNumber121,3259
int Abc_NodeStrashBlifMv( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj )Abc_NodeStrashBlifMv143,3817
static inline void Abc_NtkConvertAssignName( Abc_Obj_t * pObj, Abc_Obj_t * pNet, int Index )Abc_NtkConvertAssignName363,11431
Abc_Ntk_t * Abc_NtkStrashBlifMv( Abc_Ntk_t * pNtk )Abc_NtkStrashBlifMv383,11978
Abc_Ntk_t * Abc_NtkSkeletonBlifMv( Abc_Ntk_t * pNtk )Abc_NtkSkeletonBlifMv727,24334
Abc_Ntk_t * Abc_NtkInsertBlifMv( Abc_Ntk_t * pNtkBase, Abc_Ntk_t * pNtkLogic )Abc_NtkInsertBlifMv912,31055
int Abc_NtkConvertToBlifMv( Abc_Ntk_t * pNtk )Abc_NtkConvertToBlifMv957,32540
char * Abc_NodeConvertSopToMvSop( int nVars, Vec_Int_t * vSop0, Vec_Int_t * vSop1 )Abc_NodeConvertSopToMvSop1033,34712
int Abc_NodeEvalMvCostInternal( int nVars, int * pVarValues, char * pMvSop ) Abc_NodeEvalMvCostInternal1116,37379
int Abc_NodeEvalMvCost( int nVars, Vec_Int_t * vSop0, Vec_Int_t * vSop1 ) Abc_NodeEvalMvCost1140,38192

src/base/abc/abc_.c,0

src/base/abc/abcHie.c,858
void Abc_NtkFlattenLogicHierarchy2_rec( Abc_Ntk_t * pNtkNew, Abc_Ntk_t * pNtk, int * pCounter )Abc_NtkFlattenLogicHierarchy2_rec46,1412
Abc_Ntk_t * Abc_NtkFlattenLogicHierarchy2( Abc_Ntk_t * pNtk )Abc_NtkFlattenLogicHierarchy2185,6439
void Abc_NtkFlattenLogicHierarchy_rec( Abc_Ntk_t * pNtkNew, Abc_Ntk_t * pNtk, int * pCounter, Vec_Str_t * vPref )Abc_NtkFlattenLogicHierarchy_rec265,9133
int Abc_NtkCompareNames( Abc_Ntk_t ** p1, Abc_Ntk_t ** p2 )Abc_NtkCompareNames415,14557
void Abc_NtkPrintBoxInfo( Abc_Ntk_t * pNtk )Abc_NtkPrintBoxInfo431,14944
Abc_Ntk_t * Abc_NtkFlattenLogicHierarchy( Abc_Ntk_t * pNtk )Abc_NtkFlattenLogicHierarchy514,17817
Abc_Ntk_t * Abc_NtkConvertBlackboxes( Abc_Ntk_t * pNtk )Abc_NtkConvertBlackboxes598,20676
Abc_Ntk_t * Abc_NtkInsertNewLogic( Abc_Ntk_t * pNtkH, Abc_Ntk_t * pNtkL )Abc_NtkInsertNewLogic691,24102

src/base/abc/abcCheck.c,1890
static inline char * Abc_ObjNameNet( Abc_Obj_t * pObj ) { return (Abc_ObjIsNode(pObj) && Abc_NtkIsNetlist(pObj->pNtk)) ? Abc_ObjName(Abc_ObjFanout0(pObj)) : Abc_ObjName(pObj); }Abc_ObjNameNet47,1542
int Abc_NtkCheck( Abc_Ntk_t * pNtk )Abc_NtkCheck64,2211
int Abc_NtkCheckRead( Abc_Ntk_t * pNtk )Abc_NtkCheckRead80,2610
int Abc_NtkDoCheck( Abc_Ntk_t * pNtk )Abc_NtkDoCheck96,3002
int Abc_NtkCheckNames( Abc_Ntk_t * pNtk )Abc_NtkCheckNames241,7467
int Abc_NtkCheckPis( Abc_Ntk_t * pNtk )Abc_NtkCheckPis315,9682
int Abc_NtkCheckPos( Abc_Ntk_t * pNtk )Abc_NtkCheckPos363,11037
int Abc_NtkCheckObj( Abc_Ntk_t * pNtk, Abc_Obj_t * pObj )Abc_NtkCheckObj417,12651
int Abc_NtkCheckNet( Abc_Ntk_t * pNtk, Abc_Obj_t * pNet )Abc_NtkCheckNet496,15387
int Abc_NtkCheckNode( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode )Abc_NtkCheckNode522,16057
int Abc_NtkCheckLatch( Abc_Ntk_t * pNtk, Abc_Obj_t * pLatch )Abc_NtkCheckLatch576,17776
int Abc_NtkComparePis( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fComb )Abc_NtkComparePis642,20225
int Abc_NtkComparePos( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fComb )Abc_NtkComparePos675,21212
int Abc_NtkCompareBoxes( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fComb )Abc_NtkCompareBoxes708,22205
int Abc_NtkCompareSignals( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fOnlyPis, int fComb )Abc_NtkCompareSignals746,23477
int Abc_NtkIsAcyclicHierarchy_rec( Abc_Ntk_t * pNtk )Abc_NtkIsAcyclicHierarchy_rec773,24224
int Abc_NtkIsAcyclicHierarchy( Abc_Ntk_t * pNtk )Abc_NtkIsAcyclicHierarchy814,25285
int Abc_NtkNamesCompare( char ** pName1, char ** pName2 )Abc_NtkNamesCompare843,26145
int Abc_NtkCheckUniqueCiNames( Abc_Ntk_t * pNtk )Abc_NtkCheckUniqueCiNames859,26516
int Abc_NtkCheckUniqueCoNames( Abc_Ntk_t * pNtk )Abc_NtkCheckUniqueCoNames890,27528
int Abc_NtkCheckUniqueCioNames( Abc_Ntk_t * pNtk )Abc_NtkCheckUniqueCioNames924,28647

src/base/abc/abcInt.h,110
#define ABC__base__abc__abcInt_hABC__base__abc__abcInt_h22,541
#define ABC_NUM_STEPS ABC_NUM_STEPS36,1045

src/base/abc/abcObj.c,2659
Abc_Obj_t * Abc_ObjAlloc( Abc_Ntk_t * pNtk, Abc_ObjType_t Type )Abc_ObjAlloc52,1407
void Abc_ObjRecycle( Abc_Obj_t * pObj )Abc_ObjRecycle77,2032
Abc_Obj_t * Abc_NtkCreateObj( Abc_Ntk_t * pNtk, Abc_ObjType_t Type )Abc_NtkCreateObj109,2952
void Abc_NtkDeleteObj( Abc_Obj_t * pObj )Abc_NtkDeleteObj170,4775
void Abc_NtkDeleteObjPo( Abc_Obj_t * pObj )Abc_NtkDeleteObjPo249,7295
void Abc_NtkDeleteObj_rec( Abc_Obj_t * pObj, int fOnlyNodes )Abc_NtkDeleteObj_rec278,8137
void Abc_NtkDeleteAll_rec( Abc_Obj_t * pObj )Abc_NtkDeleteAll_rec315,9227
Abc_Obj_t * Abc_NtkDupObj( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj, int fCopyName )Abc_NtkDupObj342,9982
Abc_Obj_t * Abc_NtkDupBox( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pBox, int fCopyName )Abc_NtkDupBox414,12725
Abc_Obj_t * Abc_NtkCloneObj( Abc_Obj_t * pObj )Abc_NtkCloneObj441,13632
Abc_Obj_t * Abc_NtkFindNode( Abc_Ntk_t * pNtk, char * pName )Abc_NtkFindNode463,14181
Abc_Obj_t * Abc_NtkFindNet( Abc_Ntk_t * pNtk, char * pName )Abc_NtkFindNet514,15761
Abc_Obj_t * Abc_NtkFindCi( Abc_Ntk_t * pNtk, char * pName )Abc_NtkFindCi537,16331
Abc_Obj_t * Abc_NtkFindCo( Abc_Ntk_t * pNtk, char * pName )Abc_NtkFindCo561,16979
Abc_Obj_t * Abc_NtkFindOrCreateNet( Abc_Ntk_t * pNtk, char * pName )Abc_NtkFindOrCreateNet586,17627
Abc_Obj_t * Abc_NtkCreateNodeConst0( Abc_Ntk_t * pNtk )Abc_NtkCreateNodeConst0611,18315
Abc_Obj_t * Abc_NtkCreateNodeConst1( Abc_Ntk_t * pNtk )Abc_NtkCreateNodeConst1642,19379
Abc_Obj_t * Abc_NtkCreateNodeInv( Abc_Ntk_t * pNtk, Abc_Obj_t * pFanin )Abc_NtkCreateNodeInv673,20430
Abc_Obj_t * Abc_NtkCreateNodeBuf( Abc_Ntk_t * pNtk, Abc_Obj_t * pFanin )Abc_NtkCreateNodeBuf705,21509
Abc_Obj_t * Abc_NtkCreateNodeAnd( Abc_Ntk_t * pNtk, Vec_Ptr_t * vFanins )Abc_NtkCreateNodeAnd737,22564
Abc_Obj_t * Abc_NtkCreateNodeOr( Abc_Ntk_t * pNtk, Vec_Ptr_t * vFanins )Abc_NtkCreateNodeOr769,23638
Abc_Obj_t * Abc_NtkCreateNodeExor( Abc_Ntk_t * pNtk, Vec_Ptr_t * vFanins )Abc_NtkCreateNodeExor801,24710
Abc_Obj_t * Abc_NtkCreateNodeMux( Abc_Ntk_t * pNtk, Abc_Obj_t * pNodeC, Abc_Obj_t * pNode1, Abc_Obj_t * pNode0 )Abc_NtkCreateNodeMux833,25789
int Abc_NodeIsConst( Abc_Obj_t * pNode )    Abc_NodeIsConst866,27094
int Abc_NodeIsConst0( Abc_Obj_t * pNode )    Abc_NodeIsConst0883,27562
int Abc_NodeIsConst1( Abc_Obj_t * pNode )    Abc_NodeIsConst1915,28531
int Abc_NodeIsBuf( Abc_Obj_t * pNode )    Abc_NodeIsBuf947,29488
int Abc_NodeIsInv( Abc_Obj_t * pNode )    Abc_NodeIsInv979,30438
void Abc_NodeComplement( Abc_Obj_t * pNode )Abc_NodeComplement1011,31398
void Abc_NodeComplementInput( Abc_Obj_t * pNode, Abc_Obj_t * pFanin )Abc_NodeComplementInput1038,32171

src/base/abc/abcDfs.c,4968
void Abc_NtkDfs_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkDfs_rec46,1296
Vec_Ptr_t * Abc_NtkDfs( Abc_Ntk_t * pNtk, int fCollectAll )Abc_NtkDfs82,2516
Vec_Ptr_t * Abc_NtkDfs2( Abc_Ntk_t * pNtk )Abc_NtkDfs2127,3841
Vec_Ptr_t * Abc_NtkDfsNodes( Abc_Ntk_t * pNtk, Abc_Obj_t ** ppNodes, int nNodes )Abc_NtkDfsNodes151,4532
void Abc_NtkDfsReverse_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkDfsReverse_rec187,5576
Vec_Ptr_t * Abc_NtkDfsReverse( Abc_Ntk_t * pNtk )Abc_NtkDfsReverse221,6669
void Abc_NtkDfsReverseNodes_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkDfsReverseNodes_rec257,7648
Vec_Ptr_t * Abc_NtkDfsReverseNodes( Abc_Ntk_t * pNtk, Abc_Obj_t ** ppNodes, int nNodes )Abc_NtkDfsReverseNodes294,8935
Vec_Ptr_t * Abc_NtkDfsReverseNodesContained( Abc_Ntk_t * pNtk, Abc_Obj_t ** ppNodes, int nNodes )Abc_NtkDfsReverseNodesContained329,10093
void Abc_NtkDfsSeq_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkDfsSeq_rec401,12517
Vec_Ptr_t * Abc_NtkDfsSeq( Abc_Ntk_t * pNtk )Abc_NtkDfsSeq428,13311
void Abc_NtkDfsSeqReverse_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkDfsSeqReverse_rec458,14050
Vec_Ptr_t * Abc_NtkDfsSeqReverse( Abc_Ntk_t * pNtk )Abc_NtkDfsSeqReverse485,14862
void Abc_NtkDfs_iter( Vec_Ptr_t * vStack, Abc_Obj_t * pRoot, Vec_Ptr_t * vNodes )Abc_NtkDfs_iter515,15647
Vec_Ptr_t * Abc_NtkDfsIter( Abc_Ntk_t * pNtk, int fCollectAll )Abc_NtkDfsIter573,17675
Vec_Ptr_t * Abc_NtkDfsIterNodes( Abc_Ntk_t * pNtk, Vec_Ptr_t * vRoots )Abc_NtkDfsIterNodes611,18819
void Abc_NtkDfsHie_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vNodes )Abc_NtkDfsHie_rec638,19563
Vec_Ptr_t * Abc_NtkDfsHie( Abc_Ntk_t * pNtk, int fCollectAll )Abc_NtkDfsHie665,20390
int Abc_NtkIsDfsOrdered( Abc_Ntk_t * pNtk )Abc_NtkIsDfsOrdered698,21240
void Abc_NtkDfsNets_rec( Abc_Obj_t * pNet, Vec_Ptr_t * vNets )Abc_NtkDfsNets_rec736,22398
Vec_Ptr_t * Abc_NtkDfsNets( Abc_Ntk_t * pNtk )Abc_NtkDfsNets750,22852
void Abc_NtkDfsWithBoxes_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkDfsWithBoxes_rec777,23722
Vec_Ptr_t * Abc_NtkDfsWithBoxes( Abc_Ntk_t * pNtk )Abc_NtkDfsWithBoxes799,24421
void Abc_NtkNodeSupport_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkNodeSupport_rec826,25070
Vec_Ptr_t * Abc_NtkSupport( Abc_Ntk_t * pNtk )Abc_NtkSupport859,26066
Vec_Ptr_t * Abc_NtkNodeSupport( Abc_Ntk_t * pNtk, Abc_Obj_t ** ppNodes, int nNodes )Abc_NtkNodeSupport890,26990
void Abc_NtkNodeSupportInt_rec( Abc_Obj_t * pNode, Vec_Int_t * vNodes )Abc_NtkNodeSupportInt_rec918,27837
Vec_Int_t * Abc_NtkNodeSupportInt( Abc_Ntk_t * pNtk, int iCo )Abc_NtkNodeSupportInt940,28587
int Abc_NtkFunctionalIsoGia_rec( Gia_Man_t * pNew, Abc_Obj_t * pNode )Abc_NtkFunctionalIsoGia_rec970,29435
Gia_Man_t * Abc_NtkFunctionalIsoGia( Abc_Ntk_t * pNtk, int iCo1, int iCo2, int fCommon )Abc_NtkFunctionalIsoGia983,30059
int Abc_NtkFunctionalIsoInt( Abc_Ntk_t * pNtk, int iCo1, int iCo2, int fCommon )Abc_NtkFunctionalIsoInt1033,32101
int Abc_NtkFunctionalIso( Abc_Ntk_t * pNtk, int iCo1, int iCo2, int fCommon )Abc_NtkFunctionalIso1048,32595
int Abc_ObjSuppSize_rec( Abc_Obj_t * pObj )Abc_ObjSuppSize_rec1071,33251
int Abc_ObjSuppSize( Abc_Obj_t * pObj )Abc_ObjSuppSize1096,33927
int Abc_NtkSuppSizeTest( Abc_Ntk_t * p )Abc_NtkSuppSizeTest1112,34327
void Abc_NtkSupportSum( Abc_Ntk_t * pNtk )Abc_NtkSupportSum1136,35017
void Abc_AigDfs_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_AigDfs_rec1162,35631
Vec_Ptr_t * Abc_AigDfs( Abc_Ntk_t * pNtk, int fCollectAll, int fCollectCos )Abc_AigDfs1198,36869
Vec_Ptr_t * Abc_AigDfsMap( Abc_Ntk_t * pNtk )Abc_AigDfsMap1238,38087
void Abc_DfsLevelizedTfo_rec( Abc_Obj_t * pNode, Vec_Vec_t * vLevels )Abc_DfsLevelizedTfo_rec1282,39403
Vec_Vec_t * Abc_DfsLevelized( Abc_Obj_t * pNode, int fTfi )Abc_DfsLevelized1313,40318
int Abc_NtkLevel_rec( Abc_Obj_t * pNode )Abc_NtkLevel_rec1347,41226
int Abc_NtkLevelReverse_rec( Abc_Obj_t * pNode )Abc_NtkLevelReverse_rec1385,42347
Vec_Vec_t * Abc_NtkLevelize( Abc_Ntk_t * pNtk )Abc_NtkLevelize1423,43483
int Abc_NtkLevel( Abc_Ntk_t * pNtk )Abc_NtkLevel1449,44143
int Abc_NtkLevelReverse( Abc_Ntk_t * pNtk )Abc_NtkLevelReverse1499,45620
int Abc_NtkIsAcyclic_rec( Abc_Obj_t * pNode )Abc_NtkIsAcyclic_rec1530,46378
int Abc_NtkIsAcyclic( Abc_Ntk_t * pNtk )Abc_NtkIsAcyclic1606,49468
int Abc_NtkIsAcyclicWithBoxes_rec( Abc_Obj_t * pNode )Abc_NtkIsAcyclicWithBoxes_rec1645,50728
int Abc_NtkIsAcyclicWithBoxes( Abc_Ntk_t * pNtk )Abc_NtkIsAcyclicWithBoxes1694,52837
int Abc_NodeSetChoiceLevel_rec( Abc_Obj_t * pNode, int fMaximum )Abc_NodeSetChoiceLevel_rec1754,54806
int Abc_AigSetChoiceLevels( Abc_Ntk_t * pNtk )Abc_AigSetChoiceLevels1795,56413
Vec_Ptr_t * Abc_AigGetLevelizedOrder( Abc_Ntk_t * pNtk, int fCollectCis )Abc_AigGetLevelizedOrder1833,57575
int Abc_ObjSugraphSize( Abc_Obj_t * pObj )Abc_ObjSugraphSize1870,58717
int Abc_NtkPrintSubraphSizes( Abc_Ntk_t * pNtk )Abc_NtkPrintSubraphSizes1891,59226

src/base/abc/abcRefs.c,1296
int Abc_NodeMffcSize( Abc_Obj_t * pNode )Abc_NodeMffcSize48,1430
int Abc_NodeMffcSizeStop( Abc_Obj_t * pNode )Abc_NodeMffcSizeStop74,2215
int Abc_NodeMffcLabelAig( Abc_Obj_t * pNode )Abc_NodeMffcLabelAig100,2981
int Abc_NodeRefDeref( Abc_Obj_t * pNode, int fReference, int fLabel )Abc_NodeRefDeref126,3756
int Abc_NodeRefDerefStop( Abc_Obj_t * pNode, int fReference )Abc_NodeRefDerefStop171,5108
int Abc_NodeDeref_rec( Abc_Obj_t * pNode )Abc_NodeDeref_rec215,6398
int Abc_NodeRef_rec( Abc_Obj_t * pNode )Abc_NodeRef_rec241,7022
void Abc_NodeMffcConeSupp_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vCone, Vec_Ptr_t * vSupp, int fTopmost )Abc_NodeMffcConeSupp_rec266,7630
void Abc_NodeMffcConeSupp( Abc_Obj_t * pNode, Vec_Ptr_t * vCone, Vec_Ptr_t * vSupp )Abc_NodeMffcConeSupp299,8604
void Abc_NodeMffcConeSuppPrint( Abc_Obj_t * pNode )Abc_NodeMffcConeSuppPrint321,9249
int Abc_NodeMffcInside( Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vInside )Abc_NodeMffcInside351,10182
Vec_Ptr_t * Abc_NodeMffcInsideCollect( Abc_Obj_t * pNode )Abc_NodeMffcInsideCollect382,11196
void Abc_NodeMffcLabel_rec( Abc_Obj_t * pNode, int fTopmost, Vec_Ptr_t * vNodes )Abc_NodeMffcLabel_rec408,11914
int Abc_NodeMffcLabel( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NodeMffcLabel439,12867

src/base/abc/abc.h,40795
#define ABC__base__abc__abc_hABC__base__abc__abc_h22,531
    ABC_NTK_NONE = 0,   // 0:  unknownABC_NTK_NONE55,1385
    ABC_NTK_NETLIST,    // 1:  network with PIs/POs, latches, nodes, and netsABC_NTK_NETLIST56,1424
    ABC_NTK_LOGIC,      // 2:  network with PIs/POs, latches, and nodesABC_NTK_LOGIC57,1502
    ABC_NTK_STRASH,     // 3:  structurally hashed AIG (two input AND gates with c-attributes on edges)ABC_NTK_STRASH58,1574
    ABC_NTK_OTHER       // 4:  unusedABC_NTK_OTHER59,1678
} Abc_NtkType_t;Abc_NtkType_t60,1716
    ABC_FUNC_NONE = 0,  // 0:  unknownABC_FUNC_NONE64,1775
    ABC_FUNC_SOP,       // 1:  sum-of-productsABC_FUNC_SOP65,1814
    ABC_FUNC_BDD,       // 2:  binary decision diagramsABC_FUNC_BDD66,1861
    ABC_FUNC_AIG,       // 3:  and-inverter graphsABC_FUNC_AIG67,1917
    ABC_FUNC_MAP,       // 4:  standard cell libraryABC_FUNC_MAP68,1968
    ABC_FUNC_BLIFMV,    // 5:  BLIF-MV node functionsABC_FUNC_BLIFMV69,2021
    ABC_FUNC_BLACKBOX,  // 6:  black box about which nothing is knownABC_FUNC_BLACKBOX70,2075
    ABC_FUNC_OTHER      // 7:  unusedABC_FUNC_OTHER71,2145
} Abc_NtkFunc_t;Abc_NtkFunc_t72,2183
    ABC_OBJ_NONE = 0,   //  0:  unknownABC_OBJ_NONE87,2696
    ABC_OBJ_CONST1,     //  1:  constant 1 node (AIG only)ABC_OBJ_CONST188,2736
    ABC_OBJ_PI,         //  2:  primary input terminalABC_OBJ_PI89,2795
    ABC_OBJ_PO,         //  3:  primary output terminalABC_OBJ_PO90,2850
    ABC_OBJ_BI,         //  4:  box input terminalABC_OBJ_BI91,2906
    ABC_OBJ_BO,         //  5:  box output terminalABC_OBJ_BO92,2957
    ABC_OBJ_NET,        //  6:  netABC_OBJ_NET93,3009
    ABC_OBJ_NODE,       //  7:  nodeABC_OBJ_NODE94,3045
    ABC_OBJ_LATCH,      //  8:  latchABC_OBJ_LATCH95,3082
    ABC_OBJ_WHITEBOX,   //  9:  box with known contentsABC_OBJ_WHITEBOX96,3120
    ABC_OBJ_BLACKBOX,   // 10:  box with unknown contentsABC_OBJ_BLACKBOX97,3176
    ABC_OBJ_NUMBER      // 11:  unusedABC_OBJ_NUMBER98,3234
} Abc_ObjType_t;Abc_ObjType_t99,3273
    ABC_INIT_NONE = 0,  // 0:  unknownABC_INIT_NONE103,3331
    ABC_INIT_ZERO,      // 1:  zeroABC_INIT_ZERO104,3370
    ABC_INIT_ONE,       // 2:  oneABC_INIT_ONE105,3406
    ABC_INIT_DC,        // 3:  don't-careABC_INIT_DC106,3441
    ABC_INIT_OTHER      // 4:  unusedABC_INIT_OTHER107,3483
} Abc_InitType_t;Abc_InitType_t108,3521
typedef struct Abc_Des_t_       Abc_Des_t;Abc_Des_t114,3760
typedef struct Abc_Ntk_t_       Abc_Ntk_t;Abc_Ntk_t115,3803
typedef struct Abc_Obj_t_       Abc_Obj_t;Abc_Obj_t116,3846
typedef struct Abc_Aig_t_       Abc_Aig_t;Abc_Aig_t117,3889
typedef struct Abc_ManTime_t_   Abc_ManTime_t;Abc_ManTime_t118,3932
typedef struct Abc_ManCut_t_    Abc_ManCut_t;Abc_ManCut_t119,3979
typedef struct Abc_Time_t_      Abc_Time_t;Abc_Time_t120,4025
struct Abc_Time_t_Abc_Time_t_122,4070
    float             Rise;Rise124,4091
    float             Fall;Fall125,4119
struct Abc_Obj_t_     // 48/72 bytes (32-bits/64-bits)Abc_Obj_t_128,4151
    Abc_Ntk_t *       pNtk;          // the host networkpNtk130,4208
    Abc_Obj_t *       pNext;         // the next pointer in the hash tablepNext131,4265
    int               Id;            // the object IDId132,4340
    unsigned          Type    :  4;  // the object typeType133,4394
    unsigned          fMarkA  :  1;  // the multipurpose markfMarkA134,4450
    unsigned          fMarkB  :  1;  // the multipurpose markfMarkB135,4512
    unsigned          fMarkC  :  1;  // the multipurpose markfMarkC136,4574
    unsigned          fPhase  :  1;  // the flag to mark the phase of equivalent nodefPhase137,4636
    unsigned          fExor   :  1;  // marks AIG node that is a root of EXORfExor138,4722
    unsigned          fPersist:  1;  // marks the persistant AIG nodefPersist139,4800
    unsigned          fCompl0 :  1;  // complemented attribute of the first fanin in the AIGfCompl0140,4870
    unsigned          fCompl1 :  1;  // complemented attribute of the second fanin in the AIG fCompl1141,4963
    unsigned          Level   : 20;  // the level of the nodeLevel142,5058
    Vec_Int_t         vFanins;       // the array of faninsvFanins143,5120
    Vec_Int_t         vFanouts;      // the array of fanoutsvFanouts144,5180
    union { void *    pData;         // the network specific datapData145,5241
      int             iData; };      // (SOP, BDD, gate, equiv class, etc)iData146,5307
    union { void *    pTemp;         // temporary store for user's datapTemp147,5382
      Abc_Obj_t *     pCopy;         // the copy of this objectpCopy148,5454
      int             iTemp;iTemp149,5518
      float           dTemp; };dTemp150,5547
struct Abc_Ntk_t_ Abc_Ntk_t_153,5583
    Abc_NtkType_t     ntkType;       // type of the networkntkType156,5632
    Abc_NtkFunc_t     ntkFunc;       // functionality of the networkntkFunc157,5692
    char *            pName;         // the network namepName158,5761
    char *            pSpec;         // the name of the spec file if presentpSpec159,5818
    Nm_Man_t *        pManName;      // name manager (stores names of objects)pManName160,5895
    Vec_Ptr_t *       vObjs;         // the array of all objects (net, nodes, latches, etc)vObjs162,6007
    Vec_Ptr_t *       vPis;          // the array of primary inputsvPis163,6099
    Vec_Ptr_t *       vPos;          // the array of primary outputsvPos164,6167
    Vec_Ptr_t *       vCis;          // the array of combinational inputs  (PIs, latches)vCis165,6236
    Vec_Ptr_t *       vCos;          // the array of combinational outputs (POs, asserts, latches)vCos166,6326
    Vec_Ptr_t *       vPios;         // the array of PIOsvPios167,6425
    Vec_Ptr_t *       vBoxes;        // the array of boxesvBoxes168,6483
    Vec_Ptr_t *       vLtlProperties;vLtlProperties169,6542
    int nObjCounts[ABC_OBJ_NUMBER];  // the number of objects by typenObjCounts171,6616
    int               nObjs;         // the number of live objsnObjs172,6686
    int               nConstrs;      // the number of constraintsnConstrs173,6750
    int               nBarBufs;      // the number of barrier buffersnBarBufs174,6816
    int               nBarBufs2;     // the number of barrier buffersnBarBufs2175,6886
    Abc_Ntk_t *       pNetBackup;    // the pointer to the previous backup networkpNetBackup177,7002
    int               iStep;         // the generation number for the given networkiStep178,7085
    Abc_Des_t *       pDesign;       // design (hierarchical networks only)     pDesign180,7186
    Abc_Ntk_t *       pAltView;      // alternative structural view of the networkpAltView181,7267
    int               fHieVisited;   // flag to mark the visited networkfHieVisited182,7350
    int               fHiePath;      // flag to mark the network on the pathfHiePath183,7423
    int               Id;            // model IDId184,7500
    double            dTemp;         // temporary valuedTemp185,7549
    int               nTravIds;      // the unique traversal IDs of nodesnTravIds187,7639
    Vec_Int_t         vTravIds;      // trav IDs of the objectsvTravIds188,7713
    Mem_Fixed_t *     pMmObj;        // memory manager for objectspMmObj189,7777
    Mem_Step_t *      pMmStep;       // memory manager for arrayspMmStep190,7844
    void *            pManFunc;      // functionality manager (AIG manager, BDD manager, or memory manager for SOPs)pManFunc191,7910
    Abc_ManTime_t *   pManTime;      // the timing manager (for mapped networks) stores arrival/required times for all nodespManTime192,8027
    void *            pManCut;       // the cut manager (for AIGs) stores information about the cuts computed for the nodespManCut193,8152
    float             AndGateDelay;  // an average estimated delay of one AND gateAndGateDelay194,8276
    int               LevelMax;      // maximum number of levelsLevelMax195,8359
    Vec_Int_t *       vLevelsR;      // level in the reverse topological order (for AIGs)vLevelsR196,8424
    Vec_Ptr_t *       vSupps;        // CO support informationvSupps197,8514
    int *             pModel;        // counter-example (for miters)pModel198,8577
    Abc_Cex_t *       pSeqModel;     // counter-example (for sequential miters)pSeqModel199,8646
    Vec_Ptr_t *       vSeqModelVec;  // vector of counter-examples (for sequential miters)vSeqModelVec200,8726
    Abc_Ntk_t *       pExdc;         // the EXDC network (if given)pExdc201,8817
    void *            pExcare;       // the EXDC network (if given)pExcare202,8885
    void *            pData;         // miscpData203,8953
    Abc_Ntk_t *       pCopy;         // copy of this networkpCopy204,8998
    void *            pBSMan;        // application managerpBSMan205,9059
    void *            pSCLib;        // SC librarypSCLib206,9119
    Vec_Int_t *       vGates;        // SC library gatesvGates207,9170
    Vec_Int_t *       vPhases;       // fanins phases in the mapped netlistvPhases208,9227
    char *            pWLoadUsed;    // wire load model usedpWLoadUsed209,9303
    float *           pLutTimes;     // arrivals/requireds/slacks using LUT-delay modelpLutTimes210,9364
    Vec_Ptr_t *       vOnehots;      // names of one-hot-encoded registersvOnehots211,9452
    Vec_Int_t *       vObjPerm;      // permutation savedvObjPerm212,9527
    Vec_Int_t *       vTopo;vTopo213,9585
    Vec_Ptr_t *       vAttrs;        // managers of various node attributes (node functionality, global BDDs, etc)vAttrs214,9614
    Vec_Int_t *       vNameIds;      // name IDsvNameIds215,9729
    Vec_Int_t *       vFins;         // obj/type infovFins216,9778
struct Abc_Des_t_ Abc_Des_t_219,9836
    char *            pName;         // the name of the librarypName221,9857
    void *            pManFunc;      // functionality manager for the nodespManFunc222,9921
    Vec_Ptr_t *       vTops;         // the array of top-level modulesvTops223,9997
    Vec_Ptr_t *       vModules;      // the array of modulesvModules224,10068
    st__table *        tModules;      // the table hashing module names into their networkstModules225,10129
    Abc_Des_t *       pLibrary;      // the library used to map this designpLibrary226,10221
    void *            pGenlib;       // the genlib library used to map this designpGenlib227,10297
static inline unsigned    Abc_InfoRandomWord()                       { return ((((unsigned)rand()) << 24) ^ (((unsigned)rand()) << 12) ^ ((unsigned)rand())); } // #define RAND_MAX 0x7fffAbc_InfoRandomWord235,10646
static inline void        Abc_InfoRandom( unsigned * p, int nWords ) { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] = Abc_InfoRandomWord();   } Abc_InfoRandom236,10833
static inline void        Abc_InfoClear( unsigned * p, int nWords )  { memset( p, 0, sizeof(unsigned) * nWords );   } Abc_InfoClear237,10981
static inline void        Abc_InfoFill( unsigned * p, int nWords )   { memset( p, 0xff, sizeof(unsigned) * nWords );} Abc_InfoFill238,11100
static inline void        Abc_InfoNot( unsigned * p, int nWords )    { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] = ~p[i];   } Abc_InfoNot239,11219
static inline int         Abc_InfoIsZero( unsigned * p, int nWords ) { int i; for ( i = nWords - 1; i >= 0; i-- ) if ( p[i] )  return 0; return 1; } Abc_InfoIsZero240,11352
static inline int         Abc_InfoIsOne( unsigned * p, int nWords )  { int i; for ( i = nWords - 1; i >= 0; i-- ) if ( ~p[i] ) return 0; return 1; } Abc_InfoIsOne241,11502
static inline void        Abc_InfoCopy( unsigned * p, unsigned * q, int nWords )   { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i]  = q[i];  } Abc_InfoCopy242,11652
static inline void        Abc_InfoAnd( unsigned * p, unsigned * q, int nWords )    { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] &= q[i];  } Abc_InfoAnd243,11798
static inline void        Abc_InfoOr( unsigned * p, unsigned * q, int nWords )     { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] |= q[i];  } Abc_InfoOr244,11944
static inline void        Abc_InfoXor( unsigned * p, unsigned * q, int nWords )    { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] ^= q[i];  } Abc_InfoXor245,12090
static inline int         Abc_InfoIsOrOne( unsigned * p, unsigned * q, int nWords ){ int i; for ( i = nWords - 1; i >= 0; i-- ) if ( ~(p[i] | q[i]) ) return 0; return 1; } Abc_InfoIsOrOne246,12236
static inline int         Abc_InfoIsOrOne3( unsigned * p, unsigned * q, unsigned * r, int nWords ){ int i; for ( i = nWords - 1; i >= 0; i-- ) if ( ~(p[i] | q[i] | r[i]) ) return 0; return 1; } Abc_InfoIsOrOne3247,12409
static inline int         Abc_NtkIsNetlist( Abc_Ntk_t * pNtk )       { return pNtk->ntkType == ABC_NTK_NETLIST;     }Abc_NtkIsNetlist250,12634
static inline int         Abc_NtkIsLogic( Abc_Ntk_t * pNtk )         { return pNtk->ntkType == ABC_NTK_LOGIC;       }Abc_NtkIsLogic251,12752
static inline int         Abc_NtkIsStrash( Abc_Ntk_t * pNtk )        { return pNtk->ntkType == ABC_NTK_STRASH;      }Abc_NtkIsStrash252,12870
static inline int         Abc_NtkHasSop( Abc_Ntk_t * pNtk )          { return pNtk->ntkFunc == ABC_FUNC_SOP;        }Abc_NtkHasSop254,12989
static inline int         Abc_NtkHasBdd( Abc_Ntk_t * pNtk )          { return pNtk->ntkFunc == ABC_FUNC_BDD;        }Abc_NtkHasBdd255,13107
static inline int         Abc_NtkHasAig( Abc_Ntk_t * pNtk )          { return pNtk->ntkFunc == ABC_FUNC_AIG;        }Abc_NtkHasAig256,13225
static inline int         Abc_NtkHasMapping( Abc_Ntk_t * pNtk )      { return pNtk->ntkFunc == ABC_FUNC_MAP;        }Abc_NtkHasMapping257,13343
static inline int         Abc_NtkHasBlifMv( Abc_Ntk_t * pNtk )       { return pNtk->ntkFunc == ABC_FUNC_BLIFMV;     }Abc_NtkHasBlifMv258,13461
static inline int         Abc_NtkHasBlackbox( Abc_Ntk_t * pNtk )     { return pNtk->ntkFunc == ABC_FUNC_BLACKBOX;   }Abc_NtkHasBlackbox259,13579
static inline int         Abc_NtkIsSopNetlist( Abc_Ntk_t * pNtk )    { return pNtk->ntkFunc == ABC_FUNC_SOP && pNtk->ntkType == ABC_NTK_NETLIST;  }Abc_NtkIsSopNetlist261,13698
static inline int         Abc_NtkIsBddNetlist( Abc_Ntk_t * pNtk )    { return pNtk->ntkFunc == ABC_FUNC_BDD && pNtk->ntkType == ABC_NTK_NETLIST;  }Abc_NtkIsBddNetlist262,13846
static inline int         Abc_NtkIsAigNetlist( Abc_Ntk_t * pNtk )    { return pNtk->ntkFunc == ABC_FUNC_AIG && pNtk->ntkType == ABC_NTK_NETLIST;  }Abc_NtkIsAigNetlist263,13994
static inline int         Abc_NtkIsMappedNetlist( Abc_Ntk_t * pNtk ) { return pNtk->ntkFunc == ABC_FUNC_MAP && pNtk->ntkType == ABC_NTK_NETLIST;  }Abc_NtkIsMappedNetlist264,14142
static inline int         Abc_NtkIsBlifMvNetlist( Abc_Ntk_t * pNtk ) { return pNtk->ntkFunc == ABC_FUNC_BLIFMV && pNtk->ntkType == ABC_NTK_NETLIST;  }Abc_NtkIsBlifMvNetlist265,14290
static inline int         Abc_NtkIsSopLogic( Abc_Ntk_t * pNtk )      { return pNtk->ntkFunc == ABC_FUNC_SOP && pNtk->ntkType == ABC_NTK_LOGIC  ;  }Abc_NtkIsSopLogic266,14441
static inline int         Abc_NtkIsBddLogic( Abc_Ntk_t * pNtk )      { return pNtk->ntkFunc == ABC_FUNC_BDD && pNtk->ntkType == ABC_NTK_LOGIC  ;  }Abc_NtkIsBddLogic267,14589
static inline int         Abc_NtkIsAigLogic( Abc_Ntk_t * pNtk )      { return pNtk->ntkFunc == ABC_FUNC_AIG && pNtk->ntkType == ABC_NTK_LOGIC  ;  }Abc_NtkIsAigLogic268,14737
static inline int         Abc_NtkIsMappedLogic( Abc_Ntk_t * pNtk )   { return pNtk->ntkFunc == ABC_FUNC_MAP && pNtk->ntkType == ABC_NTK_LOGIC  ;  }Abc_NtkIsMappedLogic269,14885
static inline char *      Abc_NtkName( Abc_Ntk_t * pNtk )            { return pNtk->pName;            }Abc_NtkName272,15073
static inline char *      Abc_NtkSpec( Abc_Ntk_t * pNtk )            { return pNtk->pSpec;            }Abc_NtkSpec273,15177
static inline Abc_Ntk_t * Abc_NtkExdc( Abc_Ntk_t * pNtk )            { return pNtk->pExdc;            }Abc_NtkExdc274,15281
static inline Abc_Ntk_t * Abc_NtkBackup( Abc_Ntk_t * pNtk )          { return pNtk->pNetBackup;       }Abc_NtkBackup275,15385
static inline int         Abc_NtkStep  ( Abc_Ntk_t * pNtk )          { return pNtk->iStep;            }Abc_NtkStep276,15489
static inline void        Abc_NtkSetName  ( Abc_Ntk_t * pNtk, char * pName )           { pNtk->pName      = pName;      } Abc_NtkSetName279,15633
static inline void        Abc_NtkSetSpec  ( Abc_Ntk_t * pNtk, char * pName )           { pNtk->pSpec      = pName;      } Abc_NtkSetSpec280,15756
static inline void        Abc_NtkSetBackup( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNetBackup ) { pNtk->pNetBackup = pNetBackup; }Abc_NtkSetBackup281,15879
static inline void        Abc_NtkSetStep  ( Abc_Ntk_t * pNtk, int iStep )              { pNtk->iStep      = iStep;      }Abc_NtkSetStep282,16001
static inline int         Abc_NtkObjNum( Abc_Ntk_t * pNtk )          { return pNtk->nObjs;                        }Abc_NtkObjNum285,16158
static inline int         Abc_NtkObjNumMax( Abc_Ntk_t * pNtk )       { return Vec_PtrSize(pNtk->vObjs);           }Abc_NtkObjNumMax286,16274
static inline int         Abc_NtkPiNum( Abc_Ntk_t * pNtk )           { return Vec_PtrSize(pNtk->vPis);            }Abc_NtkPiNum287,16390
static inline int         Abc_NtkPoNum( Abc_Ntk_t * pNtk )           { return Vec_PtrSize(pNtk->vPos);            }Abc_NtkPoNum288,16506
static inline int         Abc_NtkCiNum( Abc_Ntk_t * pNtk )           { return Vec_PtrSize(pNtk->vCis);            }Abc_NtkCiNum289,16622
static inline int         Abc_NtkCoNum( Abc_Ntk_t * pNtk )           { return Vec_PtrSize(pNtk->vCos);            }Abc_NtkCoNum290,16738
static inline int         Abc_NtkBoxNum( Abc_Ntk_t * pNtk )          { return Vec_PtrSize(pNtk->vBoxes);          }Abc_NtkBoxNum291,16854
static inline int         Abc_NtkBiNum( Abc_Ntk_t * pNtk )           { return pNtk->nObjCounts[ABC_OBJ_BI];       }Abc_NtkBiNum292,16970
static inline int         Abc_NtkBoNum( Abc_Ntk_t * pNtk )           { return pNtk->nObjCounts[ABC_OBJ_BO];       }Abc_NtkBoNum293,17086
static inline int         Abc_NtkNetNum( Abc_Ntk_t * pNtk )          { return pNtk->nObjCounts[ABC_OBJ_NET];      }Abc_NtkNetNum294,17202
static inline int         Abc_NtkNodeNum( Abc_Ntk_t * pNtk )         { return pNtk->nObjCounts[ABC_OBJ_NODE];     }Abc_NtkNodeNum295,17318
static inline int         Abc_NtkLatchNum( Abc_Ntk_t * pNtk )        { return pNtk->nObjCounts[ABC_OBJ_LATCH];    }Abc_NtkLatchNum296,17434
static inline int         Abc_NtkWhiteboxNum( Abc_Ntk_t * pNtk )     { return pNtk->nObjCounts[ABC_OBJ_WHITEBOX]; }Abc_NtkWhiteboxNum297,17550
static inline int         Abc_NtkBlackboxNum( Abc_Ntk_t * pNtk )     { return pNtk->nObjCounts[ABC_OBJ_BLACKBOX]; }Abc_NtkBlackboxNum298,17666
static inline int         Abc_NtkIsComb( Abc_Ntk_t * pNtk )          { return Abc_NtkLatchNum(pNtk) == 0;                   }Abc_NtkIsComb299,17782
static inline int         Abc_NtkHasOnlyLatchBoxes(Abc_Ntk_t * pNtk ){ return Abc_NtkLatchNum(pNtk) == Abc_NtkBoxNum(pNtk); }Abc_NtkHasOnlyLatchBoxes300,17908
static inline int         Abc_NtkConstrNum( Abc_Ntk_t * pNtk )       { return pNtk->nConstrs;                     }Abc_NtkConstrNum301,18034
static inline Abc_Obj_t * Abc_NtkCreatePi( Abc_Ntk_t * pNtk )        { return Abc_NtkCreateObj( pNtk, ABC_OBJ_PI );         }Abc_NtkCreatePi305,18263
static inline Abc_Obj_t * Abc_NtkCreatePo( Abc_Ntk_t * pNtk )        { return Abc_NtkCreateObj( pNtk, ABC_OBJ_PO );         }Abc_NtkCreatePo306,18389
static inline Abc_Obj_t * Abc_NtkCreateBi( Abc_Ntk_t * pNtk )        { return Abc_NtkCreateObj( pNtk, ABC_OBJ_BI );         }Abc_NtkCreateBi307,18515
static inline Abc_Obj_t * Abc_NtkCreateBo( Abc_Ntk_t * pNtk )        { return Abc_NtkCreateObj( pNtk, ABC_OBJ_BO );         }Abc_NtkCreateBo308,18641
static inline Abc_Obj_t * Abc_NtkCreateNet( Abc_Ntk_t * pNtk )       { return Abc_NtkCreateObj( pNtk, ABC_OBJ_NET );        }Abc_NtkCreateNet309,18767
static inline Abc_Obj_t * Abc_NtkCreateNode( Abc_Ntk_t * pNtk )      { return Abc_NtkCreateObj( pNtk, ABC_OBJ_NODE );       }Abc_NtkCreateNode310,18893
static inline Abc_Obj_t * Abc_NtkCreateLatch( Abc_Ntk_t * pNtk )     { return Abc_NtkCreateObj( pNtk, ABC_OBJ_LATCH );      }Abc_NtkCreateLatch311,19019
static inline Abc_Obj_t * Abc_NtkCreateWhitebox( Abc_Ntk_t * pNtk )  { return Abc_NtkCreateObj( pNtk, ABC_OBJ_WHITEBOX );   }Abc_NtkCreateWhitebox312,19145
static inline Abc_Obj_t * Abc_NtkCreateBlackbox( Abc_Ntk_t * pNtk )  { return Abc_NtkCreateObj( pNtk, ABC_OBJ_BLACKBOX );   }Abc_NtkCreateBlackbox313,19271
static inline Abc_Obj_t * Abc_NtkObj( Abc_Ntk_t * pNtk, int i )      { return (Abc_Obj_t *)Vec_PtrEntry( pNtk->vObjs, i );   }Abc_NtkObj316,19417
static inline Abc_Obj_t * Abc_NtkPi( Abc_Ntk_t * pNtk, int i )       { return (Abc_Obj_t *)Vec_PtrEntry( pNtk->vPis, i );    }Abc_NtkPi317,19544
static inline Abc_Obj_t * Abc_NtkPo( Abc_Ntk_t * pNtk, int i )       { return (Abc_Obj_t *)Vec_PtrEntry( pNtk->vPos, i );    }Abc_NtkPo318,19671
static inline Abc_Obj_t * Abc_NtkCi( Abc_Ntk_t * pNtk, int i )       { return (Abc_Obj_t *)Vec_PtrEntry( pNtk->vCis, i );    }Abc_NtkCi319,19798
static inline Abc_Obj_t * Abc_NtkCo( Abc_Ntk_t * pNtk, int i )       { return (Abc_Obj_t *)Vec_PtrEntry( pNtk->vCos, i );    }Abc_NtkCo320,19925
static inline Abc_Obj_t * Abc_NtkBox( Abc_Ntk_t * pNtk, int i )      { return (Abc_Obj_t *)Vec_PtrEntry( pNtk->vBoxes, i );  }Abc_NtkBox321,20052
static inline int         Abc_ObjIsComplement( Abc_Obj_t * p )       { return (int )((ABC_PTRUINT_T)p & (ABC_PTRUINT_T)01);             }Abc_ObjIsComplement324,20231
static inline Abc_Obj_t * Abc_ObjRegular( Abc_Obj_t * p )            { return (Abc_Obj_t *)((ABC_PTRUINT_T)p & ~(ABC_PTRUINT_T)01);     }Abc_ObjRegular325,20369
static inline Abc_Obj_t * Abc_ObjNot( Abc_Obj_t * p )                { return (Abc_Obj_t *)((ABC_PTRUINT_T)p ^  (ABC_PTRUINT_T)01);     }Abc_ObjNot326,20507
static inline Abc_Obj_t * Abc_ObjNotCond( Abc_Obj_t * p, int c )     { return (Abc_Obj_t *)((ABC_PTRUINT_T)p ^  (ABC_PTRUINT_T)(c!=0)); }Abc_ObjNotCond327,20645
static inline unsigned    Abc_ObjType( Abc_Obj_t * pObj )            { return pObj->Type;               }Abc_ObjType330,20822
static inline unsigned    Abc_ObjId( Abc_Obj_t * pObj )              { return pObj->Id;                 }Abc_ObjId331,20928
static inline int         Abc_ObjLevel( Abc_Obj_t * pObj )           { return pObj->Level;              }Abc_ObjLevel332,21034
static inline Vec_Int_t * Abc_ObjFaninVec( Abc_Obj_t * pObj )        { return &pObj->vFanins;           }Abc_ObjFaninVec333,21140
static inline Vec_Int_t * Abc_ObjFanoutVec( Abc_Obj_t * pObj )       { return &pObj->vFanouts;          }Abc_ObjFanoutVec334,21246
static inline Abc_Obj_t * Abc_ObjCopy( Abc_Obj_t * pObj )            { return pObj->pCopy;              }Abc_ObjCopy335,21352
static inline Abc_Ntk_t * Abc_ObjNtk( Abc_Obj_t * pObj )             { return pObj->pNtk;               }Abc_ObjNtk336,21458
static inline Abc_Ntk_t * Abc_ObjModel( Abc_Obj_t * pObj )           { assert( pObj->Type == ABC_OBJ_WHITEBOX ); return (Abc_Ntk_t *)pObj->pData;   }Abc_ObjModel337,21564
static inline void *      Abc_ObjData( Abc_Obj_t * pObj )            { return pObj->pData;              }Abc_ObjData338,21714
static inline Abc_Obj_t * Abc_ObjEquiv( Abc_Obj_t * pObj )           { return (Abc_Obj_t *)pObj->pData; }Abc_ObjEquiv339,21820
static inline Abc_Obj_t * Abc_ObjCopyCond( Abc_Obj_t * pObj )        { return Abc_ObjRegular(pObj)->pCopy? Abc_ObjNotCond(Abc_ObjRegular(pObj)->pCopy, Abc_ObjIsComplement(pObj)) : NULL;  }Abc_ObjCopyCond340,21926
static inline void        Abc_ObjSetLevel( Abc_Obj_t * pObj, int Level )         { pObj->Level =  Level;    } Abc_ObjSetLevel343,22155
static inline void        Abc_ObjSetCopy( Abc_Obj_t * pObj, Abc_Obj_t * pCopy )  { pObj->pCopy =  pCopy;    } Abc_ObjSetCopy344,22266
static inline void        Abc_ObjSetData( Abc_Obj_t * pObj, void * pData )       { pObj->pData =  pData;    } Abc_ObjSetData345,22377
static inline int         Abc_ObjIsNone( Abc_Obj_t * pObj )          { return pObj->Type == ABC_OBJ_NONE;    }Abc_ObjIsNone348,22517
static inline int         Abc_ObjIsPi( Abc_Obj_t * pObj )            { return pObj->Type == ABC_OBJ_PI;      }Abc_ObjIsPi349,22628
static inline int         Abc_ObjIsPo( Abc_Obj_t * pObj )            { return pObj->Type == ABC_OBJ_PO;      }Abc_ObjIsPo350,22739
static inline int         Abc_ObjIsBi( Abc_Obj_t * pObj )            { return pObj->Type == ABC_OBJ_BI;      }Abc_ObjIsBi351,22850
static inline int         Abc_ObjIsBo( Abc_Obj_t * pObj )            { return pObj->Type == ABC_OBJ_BO;      }Abc_ObjIsBo352,22961
static inline int         Abc_ObjIsCi( Abc_Obj_t * pObj )            { return pObj->Type == ABC_OBJ_PI || pObj->Type == ABC_OBJ_BO; }Abc_ObjIsCi353,23072
static inline int         Abc_ObjIsCo( Abc_Obj_t * pObj )            { return pObj->Type == ABC_OBJ_PO || pObj->Type == ABC_OBJ_BI; }Abc_ObjIsCo354,23206
static inline int         Abc_ObjIsTerm( Abc_Obj_t * pObj )          { return Abc_ObjIsCi(pObj) || Abc_ObjIsCo(pObj); }Abc_ObjIsTerm355,23340
static inline int         Abc_ObjIsNet( Abc_Obj_t * pObj )           { return pObj->Type == ABC_OBJ_NET;     }Abc_ObjIsNet356,23460
static inline int         Abc_ObjIsNode( Abc_Obj_t * pObj )          { return pObj->Type == ABC_OBJ_NODE;    }Abc_ObjIsNode357,23571
static inline int         Abc_ObjIsLatch( Abc_Obj_t * pObj )         { return pObj->Type == ABC_OBJ_LATCH;   }Abc_ObjIsLatch358,23682
static inline int         Abc_ObjIsBox( Abc_Obj_t * pObj )           { return pObj->Type == ABC_OBJ_LATCH || pObj->Type == ABC_OBJ_WHITEBOX || pObj->Type == ABC_OBJ_BLACKBOX; }Abc_ObjIsBox359,23793
static inline int         Abc_ObjIsWhitebox( Abc_Obj_t * pObj )      { return pObj->Type == ABC_OBJ_WHITEBOX;}Abc_ObjIsWhitebox360,23970
static inline int         Abc_ObjIsBlackbox( Abc_Obj_t * pObj )      { return pObj->Type == ABC_OBJ_BLACKBOX;}Abc_ObjIsBlackbox361,24081
static inline int         Abc_ObjIsBarBuf( Abc_Obj_t * pObj )        { return Abc_NtkHasMapping(pObj->pNtk) && Abc_ObjIsNode(pObj) && Vec_IntSize(&pObj->vFanins) == 1 && pObj->pData == NULL;  }Abc_ObjIsBarBuf362,24192
static inline void        Abc_ObjBlackboxToWhitebox( Abc_Obj_t * pObj ) { assert( Abc_ObjIsBlackbox(pObj) ); pObj->Type = ABC_OBJ_WHITEBOX; pObj->pNtk->nObjCounts[ABC_OBJ_BLACKBOX]--; pObj->pNtk->nObjCounts[ABC_OBJ_WHITEBOX]++; }Abc_ObjBlackboxToWhitebox363,24386
static inline int         Abc_ObjFaninNum( Abc_Obj_t * pObj )        { return pObj->vFanins.nSize;     }Abc_ObjFaninNum366,24652
static inline int         Abc_ObjFanoutNum( Abc_Obj_t * pObj )       { return pObj->vFanouts.nSize;    }Abc_ObjFanoutNum367,24757
static inline int         Abc_ObjFaninId( Abc_Obj_t * pObj, int i)   { return pObj->vFanins.pArray[i]; }Abc_ObjFaninId368,24862
static inline int         Abc_ObjFaninId0( Abc_Obj_t * pObj )        { return pObj->vFanins.pArray[0]; }Abc_ObjFaninId0369,24967
static inline int         Abc_ObjFaninId1( Abc_Obj_t * pObj )        { return pObj->vFanins.pArray[1]; }Abc_ObjFaninId1370,25072
static inline int         Abc_ObjFanoutEdgeNum( Abc_Obj_t * pObj, Abc_Obj_t * pFanout )  { assert( Abc_NtkHasAig(pObj->pNtk) );  if ( Abc_ObjFaninId0(pFanout) == pObj->Id ) return 0; if ( Abc_ObjFaninId1(pFanout) == pObj->Id ) return 1; assert( 0 ); return -1;  }Abc_ObjFanoutEdgeNum371,25177
static inline Abc_Obj_t * Abc_ObjFanout( Abc_Obj_t * pObj, int i )   { return (Abc_Obj_t *)pObj->pNtk->vObjs->pArray[ pObj->vFanouts.pArray[i] ];  }Abc_ObjFanout372,25441
static inline Abc_Obj_t * Abc_ObjFanout0( Abc_Obj_t * pObj )         { return (Abc_Obj_t *)pObj->pNtk->vObjs->pArray[ pObj->vFanouts.pArray[0] ];  }Abc_ObjFanout0373,25590
static inline Abc_Obj_t * Abc_ObjFanin( Abc_Obj_t * pObj, int i )    { return (Abc_Obj_t *)pObj->pNtk->vObjs->pArray[ pObj->vFanins.pArray[i] ];   }Abc_ObjFanin374,25739
static inline Abc_Obj_t * Abc_ObjFanin0( Abc_Obj_t * pObj )          { return (Abc_Obj_t *)pObj->pNtk->vObjs->pArray[ pObj->vFanins.pArray[0] ];   }Abc_ObjFanin0375,25888
static inline Abc_Obj_t * Abc_ObjFanin1( Abc_Obj_t * pObj )          { return (Abc_Obj_t *)pObj->pNtk->vObjs->pArray[ pObj->vFanins.pArray[1] ];   }Abc_ObjFanin1376,26037
static inline Abc_Obj_t * Abc_ObjFanin0Ntk( Abc_Obj_t * pObj )       { return (Abc_NtkIsNetlist(pObj->pNtk)? Abc_ObjFanin0(pObj)  : pObj);  }Abc_ObjFanin0Ntk377,26186
static inline Abc_Obj_t * Abc_ObjFanout0Ntk( Abc_Obj_t * pObj )      { return (Abc_NtkIsNetlist(pObj->pNtk)? Abc_ObjFanout0(pObj) : pObj);  }Abc_ObjFanout0Ntk378,26328
static inline int         Abc_ObjFaninC0( Abc_Obj_t * pObj )         { return pObj->fCompl0;                                                }Abc_ObjFaninC0379,26470
static inline int         Abc_ObjFaninC1( Abc_Obj_t * pObj )         { return pObj->fCompl1;                                                }Abc_ObjFaninC1380,26612
static inline int         Abc_ObjFaninC( Abc_Obj_t * pObj, int i )   { assert( i >=0 && i < 2 ); return i? pObj->fCompl1 : pObj->fCompl0;   }Abc_ObjFaninC381,26754
static inline void        Abc_ObjSetFaninC( Abc_Obj_t * pObj, int i ){ assert( i >=0 && i < 2 ); if ( i ) pObj->fCompl1 = 1; else pObj->fCompl0 = 1; }Abc_ObjSetFaninC382,26896
static inline void        Abc_ObjXorFaninC( Abc_Obj_t * pObj, int i ){ assert( i >=0 && i < 2 ); if ( i ) pObj->fCompl1^= 1; else pObj->fCompl0^= 1; }Abc_ObjXorFaninC383,27047
static inline Abc_Obj_t * Abc_ObjChild( Abc_Obj_t * pObj, int i )    { return Abc_ObjNotCond( Abc_ObjFanin(pObj,i), Abc_ObjFaninC(pObj,i) );}Abc_ObjChild384,27198
static inline Abc_Obj_t * Abc_ObjChild0( Abc_Obj_t * pObj )          { return Abc_ObjNotCond( Abc_ObjFanin0(pObj), Abc_ObjFaninC0(pObj) );  }Abc_ObjChild0385,27340
static inline Abc_Obj_t * Abc_ObjChild1( Abc_Obj_t * pObj )          { return Abc_ObjNotCond( Abc_ObjFanin1(pObj), Abc_ObjFaninC1(pObj) );  }Abc_ObjChild1386,27482
static inline Abc_Obj_t * Abc_ObjChildCopy( Abc_Obj_t * pObj, int i ){ return Abc_ObjNotCond( Abc_ObjFanin(pObj,i)->pCopy, Abc_ObjFaninC(pObj,i) );  }Abc_ObjChildCopy387,27624
static inline Abc_Obj_t * Abc_ObjChild0Copy( Abc_Obj_t * pObj )      { return Abc_ObjNotCond( Abc_ObjFanin0(pObj)->pCopy, Abc_ObjFaninC0(pObj) );    }Abc_ObjChild0Copy388,27775
static inline Abc_Obj_t * Abc_ObjChild1Copy( Abc_Obj_t * pObj )      { return Abc_ObjNotCond( Abc_ObjFanin1(pObj)->pCopy, Abc_ObjFaninC1(pObj) );    }Abc_ObjChild1Copy389,27926
static inline Abc_Obj_t * Abc_ObjChild0Data( Abc_Obj_t * pObj )      { return Abc_ObjNotCond( (Abc_Obj_t *)Abc_ObjFanin0(pObj)->pData, Abc_ObjFaninC0(pObj) );    }Abc_ObjChild0Data390,28077
static inline Abc_Obj_t * Abc_ObjChild1Data( Abc_Obj_t * pObj )      { return Abc_ObjNotCond( (Abc_Obj_t *)Abc_ObjFanin1(pObj)->pData, Abc_ObjFaninC1(pObj) );    }Abc_ObjChild1Data391,28241
static inline Abc_Obj_t * Abc_ObjFromLit( Abc_Ntk_t * p, int iLit )  { return Abc_ObjNotCond( Abc_NtkObj(p, Abc_Lit2Var(iLit)), Abc_LitIsCompl(iLit) );           }Abc_ObjFromLit392,28405
static inline int         Abc_ObjToLit( Abc_Obj_t * p )              { return Abc_Var2Lit( Abc_ObjId(Abc_ObjRegular(p)), Abc_ObjIsComplement(p) );                }Abc_ObjToLit393,28569
static inline int         Abc_ObjFaninPhase( Abc_Obj_t * p, int i )  { assert(p->pNtk->vPhases); assert( i >= 0 && i < Abc_ObjFaninNum(p) ); return (Vec_IntEntry(p->pNtk->vPhases, Abc_ObjId(p)) >> i) & 1;  } Abc_ObjFaninPhase394,28733
static inline void        Abc_ObjFaninFlipPhase( Abc_Obj_t * p,int i){ assert(p->pNtk->vPhases); assert( i >= 0 && i < Abc_ObjFaninNum(p) ); *Vec_IntEntryP(p->pNtk->vPhases, Abc_ObjId(p)) ^= (1 << i);      } Abc_ObjFaninFlipPhase395,28942
static inline int         Abc_AigNodeIsConst( Abc_Obj_t * pNode )    { assert(Abc_NtkIsStrash(Abc_ObjRegular(pNode)->pNtk));  return Abc_ObjRegular(pNode)->Type == ABC_OBJ_CONST1;       }Abc_AigNodeIsConst398,29183
static inline int         Abc_AigNodeIsAnd( Abc_Obj_t * pNode )      { assert(!Abc_ObjIsComplement(pNode)); assert(Abc_NtkIsStrash(pNode->pNtk)); return Abc_ObjFaninNum(pNode) == 2;                         }Abc_AigNodeIsAnd399,29371
static inline int         Abc_AigNodeIsChoice( Abc_Obj_t * pNode )   { assert(!Abc_ObjIsComplement(pNode)); assert(Abc_NtkIsStrash(pNode->pNtk)); return pNode->pData != NULL && Abc_ObjFanoutNum(pNode) > 0; }Abc_AigNodeIsChoice400,29579
static inline int         Abc_NodeIsPersistant( Abc_Obj_t * pNode )    { assert( Abc_AigNodeIsAnd(pNode) ); return pNode->fPersist; } Abc_NodeIsPersistant403,29817
static inline void        Abc_NodeSetPersistant( Abc_Obj_t * pNode )   { assert( Abc_AigNodeIsAnd(pNode) ); pNode->fPersist = 1;    } Abc_NodeSetPersistant404,29952
static inline void        Abc_NodeClearPersistant( Abc_Obj_t * pNode ) { assert( Abc_AigNodeIsAnd(pNode) ); pNode->fPersist = 0;    } Abc_NodeClearPersistant405,30087
static inline void        Abc_NtkIncrementTravId( Abc_Ntk_t * p )           { if (!p->vTravIds.pArray) Vec_IntFill(&p->vTravIds, Abc_NtkObjNumMax(p)+500, 0); p->nTravIds++; assert(p->nTravIds < (1<<30));  }Abc_NtkIncrementTravId408,30256
static inline int         Abc_NodeTravId( Abc_Obj_t * p )                   { return Vec_IntGetEntry(&Abc_ObjNtk(p)->vTravIds, Abc_ObjId(p));                       }Abc_NodeTravId409,30463
static inline void        Abc_NodeSetTravId( Abc_Obj_t * p, int TravId )    { Vec_IntSetEntry(&Abc_ObjNtk(p)->vTravIds, Abc_ObjId(p), TravId );                     }Abc_NodeSetTravId410,30629
static inline void        Abc_NodeSetTravIdCurrent( Abc_Obj_t * p )         { Abc_NodeSetTravId( p, Abc_ObjNtk(p)->nTravIds );                                      }Abc_NodeSetTravIdCurrent411,30795
static inline void        Abc_NodeSetTravIdPrevious( Abc_Obj_t * p )        { Abc_NodeSetTravId( p, Abc_ObjNtk(p)->nTravIds-1 );                                    }Abc_NodeSetTravIdPrevious412,30961
static inline int         Abc_NodeIsTravIdCurrent( Abc_Obj_t * p )          { return (Abc_NodeTravId(p) == Abc_ObjNtk(p)->nTravIds);                                }Abc_NodeIsTravIdCurrent413,31127
static inline int         Abc_NodeIsTravIdPrevious( Abc_Obj_t * p )         { return (Abc_NodeTravId(p) == Abc_ObjNtk(p)->nTravIds-1);                              }Abc_NodeIsTravIdPrevious414,31293
static inline void        Abc_NodeSetTravIdCurrentId( Abc_Ntk_t * p, int i) { Vec_IntSetEntry(&p->vTravIds, i, p->nTravIds );                                       }Abc_NodeSetTravIdCurrentId415,31459
static inline int         Abc_NodeIsTravIdCurrentId( Abc_Ntk_t * p, int i)  { return (Vec_IntGetEntry(&p->vTravIds, i) == p->nTravIds);                             }Abc_NodeIsTravIdCurrentId416,31625
static inline void        Abc_LatchSetInitNone( Abc_Obj_t * pLatch ) { assert(Abc_ObjIsLatch(pLatch)); pLatch->pData = (void *)ABC_INIT_NONE;                       }Abc_LatchSetInitNone419,31833
static inline void        Abc_LatchSetInit0( Abc_Obj_t * pLatch )    { assert(Abc_ObjIsLatch(pLatch)); pLatch->pData = (void *)ABC_INIT_ZERO;                       }Abc_LatchSetInit0420,31999
static inline void        Abc_LatchSetInit1( Abc_Obj_t * pLatch )    { assert(Abc_ObjIsLatch(pLatch)); pLatch->pData = (void *)ABC_INIT_ONE;                        }Abc_LatchSetInit1421,32165
static inline void        Abc_LatchSetInitDc( Abc_Obj_t * pLatch )   { assert(Abc_ObjIsLatch(pLatch)); pLatch->pData = (void *)ABC_INIT_DC;                         }Abc_LatchSetInitDc422,32331
static inline int         Abc_LatchIsInitNone( Abc_Obj_t * pLatch )  { assert(Abc_ObjIsLatch(pLatch)); return pLatch->pData == (void *)ABC_INIT_NONE;               }Abc_LatchIsInitNone423,32497
static inline int         Abc_LatchIsInit0( Abc_Obj_t * pLatch )     { assert(Abc_ObjIsLatch(pLatch)); return pLatch->pData == (void *)ABC_INIT_ZERO;               }Abc_LatchIsInit0424,32663
static inline int         Abc_LatchIsInit1( Abc_Obj_t * pLatch )     { assert(Abc_ObjIsLatch(pLatch)); return pLatch->pData == (void *)ABC_INIT_ONE;                }Abc_LatchIsInit1425,32829
static inline int         Abc_LatchIsInitDc( Abc_Obj_t * pLatch )    { assert(Abc_ObjIsLatch(pLatch)); return pLatch->pData == (void *)ABC_INIT_DC;                 }Abc_LatchIsInitDc426,32995
static inline int         Abc_LatchInit( Abc_Obj_t * pLatch )        { assert(Abc_ObjIsLatch(pLatch)); return (int)(ABC_PTRINT_T)pLatch->pData;                     }Abc_LatchInit427,33161
static inline void *      Abc_NtkGlobalBdd( Abc_Ntk_t * pNtk )          { return Vec_PtrEntry(pNtk->vAttrs, VEC_ATTR_GLOBAL_BDD);                                   }Abc_NtkGlobalBdd430,33356
static inline void *      Abc_NtkGlobalBddMan( Abc_Ntk_t * pNtk )       { return Vec_AttMan( (Vec_Att_t *)Abc_NtkGlobalBdd(pNtk) );                                 }Abc_NtkGlobalBddMan431,33522
static inline void **     Abc_NtkGlobalBddArray( Abc_Ntk_t * pNtk )     { return Vec_AttArray( (Vec_Att_t *)Abc_NtkGlobalBdd(pNtk) );                               }Abc_NtkGlobalBddArray432,33688
static inline void *      Abc_ObjGlobalBdd( Abc_Obj_t * pObj )          { return Vec_AttEntry( (Vec_Att_t *)Abc_NtkGlobalBdd(pObj->pNtk), pObj->Id );               }Abc_ObjGlobalBdd433,33854
static inline void        Abc_ObjSetGlobalBdd( Abc_Obj_t * pObj, void * bF )   { Vec_AttWriteEntry( (Vec_Att_t *)Abc_NtkGlobalBdd(pObj->pNtk), pObj->Id, bF );      }Abc_ObjSetGlobalBdd434,34020
static inline void *      Abc_NtkMvVar( Abc_Ntk_t * pNtk )              { return Vec_PtrEntry(pNtk->vAttrs, VEC_ATTR_MVVAR);                                        }Abc_NtkMvVar437,34216
static inline void *      Abc_NtkMvVarMan( Abc_Ntk_t * pNtk )           { return Abc_NtkMvVar(pNtk)? Vec_AttMan( (Vec_Att_t *)Abc_NtkMvVar(pNtk) ) : NULL;          }Abc_NtkMvVarMan438,34382
static inline void *      Abc_ObjMvVar( Abc_Obj_t * pObj )              { return Abc_NtkMvVar(pObj->pNtk)? Vec_AttEntry( (Vec_Att_t *)Abc_NtkMvVar(pObj->pNtk), pObj->Id ) : NULL; }Abc_ObjMvVar439,34548
static inline int         Abc_ObjMvVarNum( Abc_Obj_t * pObj )           { return (Abc_NtkMvVar(pObj->pNtk) && Abc_ObjMvVar(pObj))? *((int*)Abc_ObjMvVar(pObj)) : 2; }Abc_ObjMvVarNum440,34729
static inline void        Abc_ObjSetMvVar( Abc_Obj_t * pObj, void * pV) { Vec_AttWriteEntry( (Vec_Att_t *)Abc_NtkMvVar(pObj->pNtk), pObj->Id, pV );                 }Abc_ObjSetMvVar441,34895
#define Abc_NtkForEachObj(Abc_NtkForEachObj448,35308
#define Abc_NtkForEachObjReverse(Abc_NtkForEachObjReverse451,35548
#define Abc_NtkForEachObjVec(Abc_NtkForEachObjVec454,35792
#define Abc_NtkForEachObjVecStart(Abc_NtkForEachObjVecStart457,36037
#define Abc_NtkForEachNet(Abc_NtkForEachNet460,36286
#define Abc_NtkForEachNode(Abc_NtkForEachNode463,36549
#define Abc_NtkForEachNodeNotBarBuf(Abc_NtkForEachNodeNotBarBuf466,36815
#define Abc_NtkForEachNode1(Abc_NtkForEachNode1469,37107
#define Abc_NtkForEachNodeNotBarBuf1(Abc_NtkForEachNodeNotBarBuf1472,37400
#define Abc_NtkForEachNodeReverse(Abc_NtkForEachNodeReverse475,37719
#define Abc_NtkForEachNodeReverse1(Abc_NtkForEachNodeReverse1478,37988
#define Abc_NtkForEachBarBuf(Abc_NtkForEachBarBuf481,38284
#define Abc_NtkForEachGate(Abc_NtkForEachGate484,38552
#define Abc_AigForEachAnd(Abc_AigForEachAnd487,38818
#define Abc_NtkForEachNodeCi(Abc_NtkForEachNodeCi490,39087
#define Abc_NtkForEachNodeCo(Abc_NtkForEachNodeCo493,39380
#define Abc_NtkForEachBox(Abc_NtkForEachBox497,39690
#define Abc_NtkForEachLatch(Abc_NtkForEachLatch499,39888
#define Abc_NtkForEachLatchInput(Abc_NtkForEachLatchInput502,40135
#define Abc_NtkForEachLatchOutput(Abc_NtkForEachLatchOutput505,40453
#define Abc_NtkForEachWhitebox(Abc_NtkForEachWhitebox508,40772
#define Abc_NtkForEachBlackbox(Abc_NtkForEachBlackbox511,41022
#define Abc_NtkForEachPi(Abc_NtkForEachPi515,41294
#define Abc_NtkForEachCi(Abc_NtkForEachCi517,41481
#define Abc_NtkForEachPo(Abc_NtkForEachPo519,41668
#define Abc_NtkForEachCo(Abc_NtkForEachCo521,41855
#define Abc_NtkForEachLiPo(Abc_NtkForEachLiPo523,42042
#define Abc_ObjForEachFanin(Abc_ObjForEachFanin526,42330
#define Abc_ObjForEachFanout(Abc_ObjForEachFanout528,42526
#define Abc_ObjForEachFaninId(Abc_ObjForEachFaninId530,42725
#define Abc_ObjForEachFanoutId(Abc_ObjForEachFanoutId532,42923
#define Abc_CubeForEachVar(Abc_CubeForEachVar535,43146
#define Abc_SopForEachCube(Abc_SopForEachCube537,43322
#define Abc_SopForEachCubePair(Abc_SopForEachCubePair539,43482
typedef struct Odc_Man_t_         Odc_Man_t;Odc_Man_t825,68555

src/base/abc/abcUtil.c,9130
void * Abc_NtkAttrFree( Abc_Ntk_t * pNtk, int Attr, int fFreeMan ) Abc_NtkAttrFree54,1446
void Abc_NtkOrderCisCos( Abc_Ntk_t * pNtk )Abc_NtkOrderCisCos75,2001
int Abc_NtkGetCubeNum( Abc_Ntk_t * pNtk )Abc_NtkGetCubeNum116,3178
int Abc_NtkGetCubePairNum( Abc_Ntk_t * pNtk )Abc_NtkGetCubePairNum142,3803
int Abc_NtkGetLitNum( Abc_Ntk_t * pNtk )Abc_NtkGetLitNum171,4597
int Abc_NtkGetLitFactNum( Abc_Ntk_t * pNtk )Abc_NtkGetLitFactNum195,5171
int Abc_NtkGetMultiRefNum( Abc_Ntk_t * pNtk )Abc_NtkGetMultiRefNum224,5898
int Abc_NtkGetBddNodeNum( Abc_Ntk_t * pNtk )Abc_NtkGetBddNodeNum246,6422
int Abc_NtkGetAigNodeNum( Abc_Ntk_t * pNtk )Abc_NtkGetAigNodeNum275,7105
int Abc_NtkGetClauseNum( Abc_Ntk_t * pNtk )Abc_NtkGetClauseNum302,7798
double Abc_NtkGetMappedArea( Abc_Ntk_t * pNtk )Abc_NtkGetMappedArea346,9090
int Abc_NtkGetExorNum( Abc_Ntk_t * pNtk )Abc_NtkGetExorNum382,10007
int Abc_NtkGetMuxNum( Abc_Ntk_t * pNtk )Abc_NtkGetMuxNum402,10456
int Abc_NtkGetBufNum( Abc_Ntk_t * pNtk )Abc_NtkGetBufNum422,10916
int Abc_NtkGetLargeNodeNum( Abc_Ntk_t * pNtk )Abc_NtkGetLargeNodeNum442,11381
int Abc_NtkGetChoiceNum( Abc_Ntk_t * pNtk )Abc_NtkGetChoiceNum462,11868
int Abc_NtkGetFaninMax( Abc_Ntk_t * pNtk )Abc_NtkGetFaninMax485,12408
int Abc_NtkGetFanoutMax( Abc_Ntk_t * pNtk )Abc_NtkGetFanoutMax496,12681
int Abc_NtkGetTotalFanins( Abc_Ntk_t * pNtk )Abc_NtkGetTotalFanins519,13229
void Abc_NtkCleanCopy( Abc_Ntk_t * pNtk )Abc_NtkCleanCopy539,13702
void Abc_NtkCleanCopy_rec( Abc_Ntk_t * pNtk )Abc_NtkCleanCopy_rec546,13848
void Abc_NtkCleanData( Abc_Ntk_t * pNtk )Abc_NtkCleanData566,14325
void Abc_NtkFillTemp( Abc_Ntk_t * pNtk )Abc_NtkFillTemp585,14743
int Abc_NtkCountCopy( Abc_Ntk_t * pNtk )Abc_NtkCountCopy604,15174
Vec_Ptr_t * Abc_NtkSaveCopy( Abc_Ntk_t * pNtk )Abc_NtkSaveCopy627,15684
void Abc_NtkLoadCopy( Abc_Ntk_t * pNtk, Vec_Ptr_t * vCopies )Abc_NtkLoadCopy649,16228
void Abc_NtkCleanNext( Abc_Ntk_t * pNtk )Abc_NtkCleanNext668,16701
void Abc_NtkCleanNext_rec( Abc_Ntk_t * pNtk )Abc_NtkCleanNext_rec675,16847
void Abc_NtkCleanMarkA( Abc_Ntk_t * pNtk )Abc_NtkCleanMarkA695,17324
void Abc_NtkCleanMarkB( Abc_Ntk_t * pNtk )Abc_NtkCleanMarkB714,17741
void Abc_NtkCleanMarkC( Abc_Ntk_t * pNtk )Abc_NtkCleanMarkC733,18158
void Abc_NtkCleanMarkAB( Abc_Ntk_t * pNtk )Abc_NtkCleanMarkAB752,18575
void Abc_NtkCleanMarkABC( Abc_Ntk_t * pNtk )Abc_NtkCleanMarkABC771,19008
int Abc_NodeFindFanin( Abc_Obj_t * pNode, Abc_Obj_t * pFanin )Abc_NodeFindFanin790,19457
Abc_Obj_t * Abc_NodeFindCoFanout( Abc_Obj_t * pNode )Abc_NodeFindCoFanout811,19946
Abc_Obj_t * Abc_NodeFindNonCoFanout( Abc_Obj_t * pNode )Abc_NodeFindNonCoFanout832,20444
Abc_Obj_t * Abc_NodeHasUniqueCoFanout( Abc_Obj_t * pNode )Abc_NodeHasUniqueCoFanout855,21139
void Abc_NtkFixCoDriverProblem( Abc_Obj_t * pDriver, Abc_Obj_t * pNodeCo, int fDuplicate )Abc_NtkFixCoDriverProblem890,22071
int Abc_NtkLogicHasSimpleCos( Abc_Ntk_t * pNtk )Abc_NtkLogicHasSimpleCos941,23872
int Abc_NtkLogicMakeSimpleCos2( Abc_Ntk_t * pNtk, int fDuplicate )Abc_NtkLogicMakeSimpleCos2986,25570
void Abc_NtkLogicMakeSimpleCosTest( Abc_Ntk_t * pNtk, int fDuplicate )Abc_NtkLogicMakeSimpleCosTest1040,27318
int Abc_NtkLogicMakeSimpleCos( Abc_Ntk_t * pNtk, int fDuplicate )Abc_NtkLogicMakeSimpleCos1079,28539
void Abc_VecObjPushUniqueOrderByLevel( Vec_Ptr_t * p, Abc_Obj_t * pNode )Abc_VecObjPushUniqueOrderByLevel1268,35840
int Abc_NodeIsExorType( Abc_Obj_t * pNode )Abc_NodeIsExorType1299,36639
int Abc_NodeIsMuxType( Abc_Obj_t * pNode )Abc_NodeIsMuxType1341,38193
int Abc_NtkCountMuxes( Abc_Ntk_t * pNtk )Abc_NtkCountMuxes1376,39688
int Abc_NodeIsMuxControlType( Abc_Obj_t * pNode )Abc_NodeIsMuxControlType1397,40185
Abc_Obj_t * Abc_NodeRecognizeMux( Abc_Obj_t * pNode, Abc_Obj_t ** ppNodeT, Abc_Obj_t ** ppNodeE )Abc_NodeRecognizeMux1429,41422
int Abc_NtkPrepareTwoNtks( FILE * pErr, Abc_Ntk_t * pNtk, char ** argv, int argc, Abc_NtkPrepareTwoNtks1521,45298
void Abc_NodeCollectFanins( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NodeCollectFanins1626,48150
void Abc_NodeCollectFanouts( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NodeCollectFanouts1646,48645
Vec_Ptr_t * Abc_NtkCollectLatches( Abc_Ntk_t * pNtk )Abc_NtkCollectLatches1666,49137
int Abc_NodeCompareLevelsIncrease( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_NodeCompareLevelsIncrease1688,49690
int Abc_NodeCompareLevelsDecrease( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_NodeCompareLevelsDecrease1714,50377
Vec_Int_t * Abc_NtkFanoutCounts( Abc_Ntk_t * pNtk )Abc_NtkFanoutCounts1740,51034
Vec_Ptr_t * Abc_NtkCollectObjects( Abc_Ntk_t * pNtk )Abc_NtkCollectObjects1764,51697
Vec_Int_t * Abc_NtkGetCiIds( Abc_Ntk_t * pNtk )Abc_NtkGetCiIds1786,52207
void Abc_NtkReassignIds( Abc_Ntk_t * pNtk )Abc_NtkReassignIds1808,52755
void Abc_NtkDetectMatching( Abc_Ntk_t * pNtk )Abc_NtkDetectMatching1892,55243
int Abc_ObjPointerCompare( void ** pp1, void ** pp2 )Abc_ObjPointerCompare1938,56621
void Abc_NtkTransferCopy( Abc_Ntk_t * pNtk )Abc_NtkTransferCopy1961,57279
static inline int Abc_ObjCrossCutInc( Abc_Obj_t * pObj )Abc_ObjCrossCutInc1982,57824
int Abc_NtkCrossCut_rec( Abc_Obj_t * pObj, int * pnCutSize, int * pnCutSizeMax )Abc_NtkCrossCut_rec2001,58427
int Abc_NtkCrossCut( Abc_Ntk_t * pNtk )Abc_NtkCrossCut2048,59767
void Abc_NtkPrint256()Abc_NtkPrint2562077,60514
static     int * pSupps;pSupps2092,60841
int Abc_NtkCompareConesCompare( int * pNum1, int * pNum2 )Abc_NtkCompareConesCompare2105,61140
void Abc_NtkCompareCones( Abc_Ntk_t * pNtk )Abc_NtkCompareCones2125,61603
void Abc_NtkCompareSupports( Abc_Ntk_t * pNtk )Abc_NtkCompareSupports2207,64290
void Abc_NtkInvertConstraints( Abc_Ntk_t * pNtk )Abc_NtkInvertConstraints2243,65319
void Abc_NtkPrintCiLevels( Abc_Ntk_t * pNtk )Abc_NtkPrintCiLevels2267,65851
int Abc_NtkAddBuffsEval( Abc_Obj_t * pNode, Abc_Obj_t * pFanin )Abc_NtkAddBuffsEval2288,66333
int Abc_NtkAddBuffsEval2( Abc_Obj_t * pNode, Abc_Obj_t * pFanin )Abc_NtkAddBuffsEval22308,66883
Abc_Obj_t * Abc_NtkAddBuffsOne( Vec_Ptr_t * vBuffs, Abc_Obj_t * pFanin, int Level, int nLevelMax )Abc_NtkAddBuffsOne2329,67372
Abc_Ntk_t * Abc_NtkAddBuffsInt( Abc_Ntk_t * pNtkInit, int fReverse, int nImprove, int fVerbose )Abc_NtkAddBuffsInt2345,68029
Abc_Ntk_t * Abc_NtkAddBuffs( Abc_Ntk_t * pNtkInit, int fDirect, int fReverse, int nImprove, int fVerbose )Abc_NtkAddBuffs2455,72122
float Abc_NtkComputeDelay( Abc_Ntk_t * pNtk )Abc_NtkComputeDelay2487,73055
void Abc_NodeSopToCubes( Abc_Obj_t * pNodeOld, Abc_Ntk_t * pNtkNew, int fXor )Abc_NodeSopToCubes2531,74475
Abc_Ntk_t * Abc_NtkSopToCubes( Abc_Ntk_t * pNtk, int fXor )Abc_NtkSopToCubes2587,76620
static inline int  Abc_NtkTopoHasBeg( Abc_Obj_t * p )  { return Vec_IntEntry(p->pNtk->vTopo, 2*Abc_ObjId(p)  );       }Abc_NtkTopoHasBeg2623,77692
static inline int  Abc_NtkTopoHasEnd( Abc_Obj_t * p )  { return Vec_IntEntry(p->pNtk->vTopo, 2*Abc_ObjId(p)+1);       }Abc_NtkTopoHasEnd2624,77812
static inline void Abc_NtkTopoSetBeg( Abc_Obj_t * p )  { Vec_IntWriteEntry(p->pNtk->vTopo, 2*Abc_ObjId(p)  , Vec_IntSize(p->pNtk->vTopo));  }Abc_NtkTopoSetBeg2626,77933
static inline void Abc_NtkTopoSetEnd( Abc_Obj_t * p )  { Vec_IntWriteEntry(p->pNtk->vTopo, 2*Abc_ObjId(p)+1, Vec_IntSize(p->pNtk->vTopo));  }Abc_NtkTopoSetEnd2627,78075
void Abc_NtkReverseTopoOrder_rec( Abc_Obj_t * pObj, int fThisIsPivot )Abc_NtkReverseTopoOrder_rec2629,78218
void Abc_NtkReverseTopoOrder( Abc_Ntk_t * p )Abc_NtkReverseTopoOrder2663,79256
void Abc_NtkReverse_rec( Abc_Obj_t * pObj, Vec_Int_t * vVisited )Abc_NtkReverse_rec2681,79842
void Abc_NtkReverseTopoOrderTest( Abc_Ntk_t * p )Abc_NtkReverseTopoOrderTest2692,80179
Abc_Ntk_t * Abc_NtkFromPla( char ** pPlas, int nInputs, int nOutputs )Abc_NtkFromPla2756,82223
void Abc_NtkFromPlaTest()Abc_NtkFromPlaTest2794,83697
Abc_Ntk_t * Abc_NtkSplitSop( Abc_Ntk_t * pNtk, int nCubesMax, int fVerbose )Abc_NtkSplitSop2813,84213
int Abc_NtkIsTopo( Abc_Ntk_t * pNtk )Abc_NtkIsTopo2887,87003
void Abc_NtkTransferPhases( Abc_Ntk_t * pNtkNew, Abc_Ntk_t * pNtk )Abc_NtkTransferPhases2923,88075
Abc_Ntk_t * Abc_NtkDeriveWithOnePo( Abc_Ntk_t * pNtk, Vec_Int_t * vNodeIds, Vec_Int_t * vNodeValues )Abc_NtkDeriveWithOnePo2947,88915
Abc_Ntk_t * Abc_NtkCreatePropertyMonitor( Abc_Ntk_t * p, Vec_Int_t * vNodeIds, Vec_Int_t * vNodeValues )Abc_NtkCreatePropertyMonitor3028,92302
Abc_Ntk_t * Abc_NtkCreatePropertyMonitorTest( Abc_Ntk_t * p )Abc_NtkCreatePropertyMonitorTest3067,93748
int Abc_GateToType( Abc_Obj_t * pObj )Abc_GateToType3101,94624
Vec_Wec_t * Abc_SopSynthesize( Vec_Ptr_t * vSops )Abc_SopSynthesize3117,95448
Vec_Wec_t * Abc_GiaSynthesize( Vec_Ptr_t * vGias, Gia_Man_t * pMulti )Abc_GiaSynthesize3145,96752
Gia_Man_t * Abc_GiaSynthesizeInter( Gia_Man_t * p )Abc_GiaSynthesizeInter3172,97992
int Abc_NtkClpOneGia_rec( Gia_Man_t * pNew, Abc_Obj_t * pNode )Abc_NtkClpOneGia_rec3196,98735
Gia_Man_t * Abc_NtkStrashToGia( Abc_Ntk_t * pNtk )Abc_NtkStrashToGia3209,99338
Gia_Man_t * Abc_SopSynthesizeOne( char * pSop, int fClp )Abc_SopSynthesizeOne3239,100305

src/base/abc/abcFanio.c,1092
static inline void Vec_IntPushMem( Mem_Step_t * pMemMan, Vec_Int_t * p, int Entry )Vec_IntPushMem45,1253
void Abc_ObjAddFanin( Abc_Obj_t * pObj, Abc_Obj_t * pFanin )Abc_ObjAddFanin84,2304
void Abc_ObjDeleteFanin( Abc_Obj_t * pObj, Abc_Obj_t * pFanin )Abc_ObjDeleteFanin111,3352
void Abc_ObjRemoveFanins( Abc_Obj_t * pObj )Abc_ObjRemoveFanins141,4255
void Abc_ObjPatchFanin( Abc_Obj_t * pObj, Abc_Obj_t * pFaninOld, Abc_Obj_t * pFaninNew )Abc_ObjPatchFanin172,5252
void Abc_ObjPatchFanoutFanin( Abc_Obj_t * pObj, int iObjNew )Abc_ObjPatchFanoutFanin223,7198
Abc_Obj_t * Abc_ObjInsertBetween( Abc_Obj_t * pNodeIn, Abc_Obj_t * pNodeOut, Abc_ObjType_t Type )Abc_ObjInsertBetween251,8001
void Abc_ObjTransferFanout( Abc_Obj_t * pNodeFrom, Abc_Obj_t * pNodeTo )Abc_ObjTransferFanout292,9586
void Abc_ObjReplace( Abc_Obj_t * pNodeOld, Abc_Obj_t * pNodeNew )Abc_ObjReplace325,10792
void Abc_ObjReplaceByConstant( Abc_Obj_t * pNode, int fConst1 )Abc_ObjReplaceByConstant349,11510
int Abc_ObjFanoutFaninNum( Abc_Obj_t * pFanout, Abc_Obj_t * pFanin )Abc_ObjFanoutFaninNum373,12273

src/base/abc/abcHieNew.c,22305
#define AU_MAX_FANINS AU_MAX_FANINS36,927
    AU_OBJ_NONE,           // 0: non-existent objectAU_OBJ_NONE39,978
    AU_OBJ_CONST0,         // 1: constant nodeAU_OBJ_CONST040,1031
    AU_OBJ_PI,             // 2: primary inputAU_OBJ_PI41,1078
    AU_OBJ_PO,             // 3: primary outputAU_OBJ_PO42,1125
    AU_OBJ_FAN,            // 4: box outputAU_OBJ_FAN43,1173
    AU_OBJ_FLOP,           // 5: flip-flopAU_OBJ_FLOP44,1217
    AU_OBJ_BOX,            // 6: boxAU_OBJ_BOX45,1260
    AU_OBJ_NODE,           // 7: logic nodeAU_OBJ_NODE46,1297
    AU_OBJ_VOID            // 8: placeholderAU_OBJ_VOID47,1341
} Au_Type_t;Au_Type_t48,1386
typedef struct Au_Man_t_   Au_Man_t;Au_Man_t51,1401
typedef struct Au_Ntk_t_   Au_Ntk_t;Au_Ntk_t52,1438
typedef struct Au_Obj_t_   Au_Obj_t;Au_Obj_t53,1475
struct Au_Obj_t_ // 16 bytesAu_Obj_t_55,1513
    unsigned               Func    : 30;       // functionalityFunc57,1544
    unsigned               Value   :  2;       // node valueValue58,1608
    unsigned               Type    :  3;       // object typeType59,1669
    unsigned               nFanins : 29;       // fanin count (related to AU_MAX_FANIN_NUM)nFanins60,1731
    int                    Fanins[2];          // fanin literalsFanins61,1823
struct Au_Ntk_t_ Au_Ntk_t_64,1892
    char *                 pName;              // model namepName66,1912
    Au_Man_t *             pMan;               // model managerpMan67,1973
    int                    Id;                 // model IDId68,2037
    Vec_Int_t              vPis;               // primary inputs (CI id -> handle)vPis70,2111
    Vec_Int_t              vPos;               // primary outputs (CI id -> handle)vPos71,2194
    Vec_Int_t              vObjs;              // internal nodes (obj id -> handle)vObjs72,2278
    int                    nObjs[AU_OBJ_VOID]; // counter of objects of each typenObjs73,2362
    Vec_Ptr_t *            vChunks;            // memory pagesvChunks75,2470
    Vec_Ptr_t              vPages;             // memory pagesvPages76,2533
    int                    iHandle;            // currently available IDiHandle77,2596
    int                    nObjsAlloc;         // the total number of objects allocatednObjsAlloc78,2669
    int                    nObjsUsed;          // the number of useful entriesnObjsUsed79,2757
    int                    nTravIds;           // counter of traversal IDsnTravIds81,2861
    Vec_Int_t              vTravIds;           // trav IDs of the objectsvTravIds82,2936
    Vec_Int_t              vCopies;            // object copiesvCopies83,3010
    int                    nHTable;            // hash table sizenHTable85,3100
    int *                  pHTable;            // hash tablepHTable86,3166
    Au_Obj_t *             pConst0;            // constant nodepConst087,3227
    int                    fMark;fMark89,3309
    double                 nBoxes;nBoxes90,3343
    double                 nNodes;nNodes91,3378
    double                 nPorts;nPorts92,3413
    double                 nNodeAnds;nNodeAnds93,3448
    double                 nNodeXors;nNodeXors94,3486
    double                 nNodeMuxs;nNodeMuxs95,3524
struct Au_Man_t_ Au_Man_t_98,3566
    char *                 pName;              // the name of the librarypName100,3586
    Vec_Ptr_t              vNtks;              // the array of modulesvNtks101,3660
    Abc_Nam_t *            pFuncs;             // hashing functions into integerspFuncs102,3731
    int                    nRefs;              // reference counternRefs103,3813
    int                    nGiaObjMax;         // max number of GIA objectsnGiaObjMax105,3899
    double                 nPortsC0;           // const portsnPortsC0106,3975
    double                 nPortsC1;           // const portsnPortsC1107,4037
    double                 nPortsNC;           // non-const portsnPortsNC108,4099
static inline int          Au_Var2Lit( int Var, int fCompl )             { return Var + Var + fCompl;                       }Au_Var2Lit112,4170
static inline int          Au_Lit2Var( int Lit )                         { return Lit >> 1;                                 }Au_Lit2Var113,4296
static inline int          Au_LitIsCompl( int Lit )                      { return Lit & 1;                                  }Au_LitIsCompl114,4422
static inline int          Au_LitNot( int Lit )                          { return Lit ^ 1;                                  }Au_LitNot115,4548
static inline int          Au_LitNotCond( int Lit, int c )               { return Lit ^ (int)(c > 0);                       }Au_LitNotCond116,4674
static inline int          Au_LitRegular( int Lit )                      { return Lit & ~01;                                }Au_LitRegular117,4800
static inline Au_Obj_t *   Au_Regular( Au_Obj_t * p )                    { return (Au_Obj_t *)((ABC_PTRUINT_T)(p) & ~01);   }Au_Regular119,4927
static inline Au_Obj_t *   Au_Not( Au_Obj_t * p )                        { return (Au_Obj_t *)((ABC_PTRUINT_T)(p) ^  01);   }Au_Not120,5053
static inline Au_Obj_t *   Au_NotCond( Au_Obj_t * p, int c )             { return (Au_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c));   }Au_NotCond121,5179
static inline int          Au_IsComplement( Au_Obj_t * p )               { return (int)((ABC_PTRUINT_T)(p) & 01);           }Au_IsComplement122,5305
static inline char *       Au_UtilStrsav( char * s )                     { return s ? strcpy(ABC_ALLOC(char, strlen(s)+1), s) : NULL;             }Au_UtilStrsav124,5433
static inline char *       Au_ManName( Au_Man_t * p )                    { return p->pName;                                                       }Au_ManName126,5582
static inline int          Au_ManNtkNum( Au_Man_t * p )                  { return Vec_PtrSize(&p->vNtks) - 1;                                     }Au_ManNtkNum127,5730
static inline Au_Ntk_t *   Au_ManNtk( Au_Man_t * p, int i )              { return (Au_Ntk_t *)Vec_PtrEntry(&p->vNtks, i);                         }Au_ManNtk128,5878
static inline Au_Ntk_t *   Au_ManNtkRoot( Au_Man_t * p )                 { return Au_ManNtk( p, 1 );                                              }Au_ManNtkRoot129,6026
static inline char *       Au_NtkName( Au_Ntk_t * p )                    { return p->pName;                                                       }Au_NtkName131,6175
static inline Au_Man_t *   Au_NtkMan( Au_Ntk_t * p )                     { return p->pMan;                                                        }Au_NtkMan132,6323
static inline int          Au_NtkPiNum( Au_Ntk_t * p )                   { return p->nObjs[AU_OBJ_PI];                                            } Au_NtkPiNum133,6471
static inline int          Au_NtkPoNum( Au_Ntk_t * p )                   { return p->nObjs[AU_OBJ_PO];                                            } Au_NtkPoNum134,6620
static inline int          Au_NtkFanNum( Au_Ntk_t * p )                  { return p->nObjs[AU_OBJ_FAN];                                           } Au_NtkFanNum135,6769
static inline int          Au_NtkFlopNum( Au_Ntk_t * p )                 { return p->nObjs[AU_OBJ_FLOP];                                          } Au_NtkFlopNum136,6918
static inline int          Au_NtkBoxNum( Au_Ntk_t * p )                  { return p->nObjs[AU_OBJ_BOX];                                           } Au_NtkBoxNum137,7067
static inline int          Au_NtkNodeNum( Au_Ntk_t * p )                 { return p->nObjs[AU_OBJ_NODE];                                          } Au_NtkNodeNum138,7216
static inline int          Au_NtkObjNumMax( Au_Ntk_t * p )               { return (Vec_PtrSize(&p->vPages) - 1) * (1 << 12) + p->iHandle;         } Au_NtkObjNumMax139,7365
static inline int          Au_NtkObjNum( Au_Ntk_t * p )                  { return Vec_IntSize(&p->vObjs);                                         } Au_NtkObjNum140,7514
static inline Au_Obj_t *   Au_NtkObj( Au_Ntk_t * p, int h )              { return (Au_Obj_t *)p->vPages.pArray[h >> 12] + (h & 0xFFF);            }Au_NtkObj141,7663
static inline Au_Obj_t *   Au_NtkPi( Au_Ntk_t * p, int i )               { return Au_NtkObj(p, Vec_IntEntry(&p->vPis, i));                        }Au_NtkPi143,7812
static inline Au_Obj_t *   Au_NtkPo( Au_Ntk_t * p, int i )               { return Au_NtkObj(p, Vec_IntEntry(&p->vPos, i));                        }Au_NtkPo144,7960
static inline Au_Obj_t *   Au_NtkObjI( Au_Ntk_t * p, int i )             { return Au_NtkObj(p, Vec_IntEntry(&p->vObjs, i));                       }Au_NtkObjI145,8108
static inline int          Au_ObjIsNone( Au_Obj_t * p )                  { return p->Type == AU_OBJ_NONE;                                         } Au_ObjIsNone147,8257
static inline int          Au_ObjIsConst0( Au_Obj_t * p )                { return p->Type == AU_OBJ_CONST0;                                       } Au_ObjIsConst0148,8406
static inline int          Au_ObjIsPi( Au_Obj_t * p )                    { return p->Type == AU_OBJ_PI;                                           } Au_ObjIsPi149,8555
static inline int          Au_ObjIsPo( Au_Obj_t * p )                    { return p->Type == AU_OBJ_PO;                                           } Au_ObjIsPo150,8704
static inline int          Au_ObjIsFan( Au_Obj_t * p )                   { return p->Type == AU_OBJ_FAN;                                          } Au_ObjIsFan151,8853
static inline int          Au_ObjIsFlop( Au_Obj_t * p )                  { return p->Type == AU_OBJ_FLOP;                                         } Au_ObjIsFlop152,9002
static inline int          Au_ObjIsBox( Au_Obj_t * p )                   { return p->Type == AU_OBJ_BOX;                                          } Au_ObjIsBox153,9151
static inline int          Au_ObjIsNode( Au_Obj_t * p )                  { return p->Type == AU_OBJ_NODE;                                         }Au_ObjIsNode154,9300
static inline int          Au_ObjIsTerm( Au_Obj_t * p )                  { return p->Type >= AU_OBJ_PI && p->Type <= AU_OBJ_FLOP;                 } Au_ObjIsTerm155,9448
static inline char *       Au_ObjBase( Au_Obj_t * p )                    { return (char *)p - ((ABC_PTRINT_T)p & 0x3FF);                          } Au_ObjBase157,9598
static inline Au_Ntk_t *   Au_ObjNtk( Au_Obj_t * p )                     { return ((Au_Ntk_t **)Au_ObjBase(p))[0];                                } Au_ObjNtk158,9747
static inline int          Au_ObjId( Au_Obj_t * p )                      { return ((int *)Au_ObjBase(p))[2] | (((ABC_PTRINT_T)p & 0x3FF) >> 4);   }Au_ObjId159,9896
static inline int          Au_ObjPioNum( Au_Obj_t * p )                  { assert(Au_ObjIsTerm(p)); return p->Fanins[p->nFanins];                 }Au_ObjPioNum160,10044
static inline int          Au_ObjFunc( Au_Obj_t * p )                    { return p->Func;                                                        }Au_ObjFunc161,10192
static inline Au_Ntk_t *   Au_ObjModel( Au_Obj_t * p )                   { assert(Au_ObjIsFan(p)||Au_ObjIsBox(p)); return Au_ManNtk(Au_NtkMan(Au_ObjNtk(p)), p->Func); }Au_ObjModel162,10340
static inline int          Au_ObjFaninNum( Au_Obj_t * p )                { return p->nFanins;                                                     }Au_ObjFaninNum164,10510
static inline int          Au_ObjFaninId( Au_Obj_t * p, int i )          { assert(i >= 0 && i < (int)p->nFanins && p->Fanins[i]); return Au_Lit2Var(p->Fanins[i]);     }Au_ObjFaninId165,10658
static inline int          Au_ObjFaninId0( Au_Obj_t * p )                { return Au_ObjFaninId(p, 0);                                                                 }Au_ObjFaninId0166,10827
static inline int          Au_ObjFaninId1( Au_Obj_t * p )                { return Au_ObjFaninId(p, 1);                                                                 }Au_ObjFaninId1167,10996
static inline int          Au_ObjFaninId2( Au_Obj_t * p )                { return Au_ObjFaninId(p, 2);                                                                 }Au_ObjFaninId2168,11165
static inline Au_Obj_t *   Au_ObjFanin( Au_Obj_t * p, int i )            { return Au_NtkObj(Au_ObjNtk(p), Au_ObjFaninId(p, i));                                        }Au_ObjFanin169,11334
static inline Au_Obj_t *   Au_ObjFanin0( Au_Obj_t * p )                  { return Au_ObjFanin( p, 0 );                                                                 }Au_ObjFanin0170,11503
static inline Au_Obj_t *   Au_ObjFanin1( Au_Obj_t * p )                  { return Au_ObjFanin( p, 1 );                                                                 }Au_ObjFanin1171,11672
static inline Au_Obj_t *   Au_ObjFanin2( Au_Obj_t * p )                  { return Au_ObjFanin( p, 2 );                                                                 }Au_ObjFanin2172,11841
static inline int          Au_ObjFaninC( Au_Obj_t * p, int i )           { assert(i >= 0 && i < (int)p->nFanins && p->Fanins[i]); return Au_LitIsCompl(p->Fanins[i]);  }Au_ObjFaninC173,12010
static inline int          Au_ObjFaninC0( Au_Obj_t * p )                 { return Au_ObjFaninC(p, 0);                                                                  }Au_ObjFaninC0174,12179
static inline int          Au_ObjFaninC1( Au_Obj_t * p )                 { return Au_ObjFaninC(p, 1);                                                                  }Au_ObjFaninC1175,12348
static inline int          Au_ObjFaninC2( Au_Obj_t * p )                 { return Au_ObjFaninC(p, 2);                                                                  }Au_ObjFaninC2176,12517
static inline int          Au_ObjFaninLit( Au_Obj_t * p, int i )         { assert(i >= 0 && i < (int)p->nFanins && p->Fanins[i]); return p->Fanins[i];                 }Au_ObjFaninLit177,12686
static inline void         Au_ObjSetFanin( Au_Obj_t * p, int i, int f )  { assert(f > 0 && p->Fanins[i] == 0); p->Fanins[i] = Au_Var2Lit(f,0);                         }Au_ObjSetFanin178,12855
static inline void         Au_ObjSetFaninLit( Au_Obj_t * p, int i, int f){ assert(f >= 0 && p->Fanins[i] == 0); p->Fanins[i] = f;                                      }Au_ObjSetFaninLit179,13024
static inline int          Au_BoxFanoutNum( Au_Obj_t * p )               { assert(Au_ObjIsBox(p)); return p->Fanins[p->nFanins];                                       }Au_BoxFanoutNum181,13194
static inline int          Au_BoxFanoutId( Au_Obj_t * p, int i )         { assert(i >= 0 && i < Au_BoxFanoutNum(p)); return p->Fanins[p->nFanins+1+i];                 }Au_BoxFanoutId182,13363
static inline Au_Obj_t *   Au_BoxFanout( Au_Obj_t * p, int i )           { return Au_NtkObj(Au_ObjNtk(p), Au_BoxFanoutId(p, i));                                       }Au_BoxFanout183,13532
static inline int          Au_ObjCopy( Au_Obj_t * p )                    { return Vec_IntEntry( &Au_ObjNtk(p)->vCopies, Au_ObjId(p) );                                 }Au_ObjCopy185,13702
static inline void         Au_ObjSetCopy( Au_Obj_t * p, int c )          { Vec_IntWriteEntry( &Au_ObjNtk(p)->vCopies, Au_ObjId(p), c );                                }Au_ObjSetCopy186,13871
static inline int          Au_ObjFanout( Au_Obj_t * p, int i )           { assert(p->Type == AU_OBJ_BOX && i >= 0 && i < p->Fanins[p->nFanins] && p->Fanins[i]); return p->Fanins[p->nFanins + 1 + i];             }Au_ObjFanout188,14041
static inline void         Au_ObjSetFanout( Au_Obj_t * p, int i, int f ) { assert(p->Type == AU_OBJ_BOX && i >= 0 && i < p->Fanins[p->nFanins] && p->Fanins[i] == 0 && f > 0); p->Fanins[p->nFanins + 1 + i] = f;  }Au_ObjSetFanout189,14254
static inline void         Au_NtkIncrementTravId( Au_Ntk_t * p )            { if (p->vTravIds.pArray == NULL) Vec_IntFill(&p->vTravIds, Au_NtkObjNumMax(p)+500, 0); p->nTravIds++; assert(p->nTravIds < (1<<30));  }Au_NtkIncrementTravId191,14468
static inline void         Au_ObjSetTravIdCurrent( Au_Obj_t * p )           { Vec_IntSetEntry(&Au_ObjNtk(p)->vTravIds, Au_ObjId(p), Au_ObjNtk(p)->nTravIds );                        }Au_ObjSetTravIdCurrent192,14681
static inline void         Au_ObjSetTravIdPrevious( Au_Obj_t * p )          { Vec_IntSetEntry(&Au_ObjNtk(p)->vTravIds, Au_ObjId(p), Au_ObjNtk(p)->nTravIds-1 );                      }Au_ObjSetTravIdPrevious193,14864
static inline int          Au_ObjIsTravIdCurrent( Au_Obj_t * p )            { return (Vec_IntGetEntry(&Au_ObjNtk(p)->vTravIds, Au_ObjId(p)) == Au_ObjNtk(p)->nTravIds);              }Au_ObjIsTravIdCurrent194,15047
static inline int          Au_ObjIsTravIdPrevious( Au_Obj_t * p )           { return (Vec_IntGetEntry(&Au_ObjNtk(p)->vTravIds, Au_ObjId(p)) == Au_ObjNtk(p)->nTravIds-1);            }Au_ObjIsTravIdPrevious195,15230
static inline void         Au_ObjSetTravIdCurrentId( Au_Ntk_t * p, int Id ) { Vec_IntSetEntry(&p->vTravIds, Id, p->nTravIds );                                                       }Au_ObjSetTravIdCurrentId196,15413
static inline int          Au_ObjIsTravIdCurrentId( Au_Ntk_t * p, int Id )  { return (Vec_IntGetEntry(&p->vTravIds, Id) == p->nTravIds);                                             }Au_ObjIsTravIdCurrentId197,15596
#define Au_ManForEachNtk(Au_ManForEachNtk199,15780
#define Au_ManForEachNtkReverse(Au_ManForEachNtkReverse201,15922
#define Au_ObjForEachFaninId(Au_ObjForEachFaninId204,16065
#define Au_BoxForEachFanoutId(Au_BoxForEachFanoutId206,16217
#define Au_ObjForEachFanin(Au_ObjForEachFanin209,16370
#define Au_BoxForEachFanout(Au_BoxForEachFanout211,16520
#define Au_NtkForEachPi(Au_NtkForEachPi214,16671
#define Au_NtkForEachPo(Au_NtkForEachPo216,16811
#define Au_NtkForEachObj(Au_NtkForEachObj218,16951
#define Au_NtkForEachNode(Au_NtkForEachNode220,17093
#define Au_NtkForEachBox(Au_NtkForEachBox222,17271
Au_Ntk_t * Au_NtkAlloc( Au_Man_t * pMan, char * pName )Au_NtkAlloc245,18024
void Au_NtkFree( Au_Ntk_t * p )Au_NtkFree258,18398
int Au_NtkMemUsage( Au_Ntk_t * p )Au_NtkMemUsage271,18735
void Au_NtkPrintStats( Au_Ntk_t * p )Au_NtkPrintStats280,18941
void Au_NtkCleanCopy( Au_Ntk_t * p )Au_NtkCleanCopy297,19726
int Au_NtkNodeNumFunc( Au_Ntk_t * p, int Func )Au_NtkNodeNumFunc301,19823
Au_Man_t * Au_ManAlloc( char * pName )Au_ManAlloc327,20412
void Au_ManFree( Au_Man_t * p )Au_ManFree336,20633
void Au_ManDelete( Au_Man_t * p )Au_ManDelete347,20872
int Au_ManFindNtk( Au_Man_t * p, char * pName )Au_ManFindNtk354,21005
Au_Ntk_t * Au_ManFindNtkP( Au_Man_t * p, char * pName )Au_ManFindNtkP363,21209
void Au_ManAddNtk( Au_Man_t * pMan, Au_Ntk_t * p )Au_ManAddNtk370,21387
int Au_ManMemUsage( Au_Man_t * p )Au_ManMemUsage377,21610
int Au_ManMemUsageUseful( Au_Man_t * p )Au_ManMemUsageUseful385,21779
void Au_ManPrintStats( Au_Man_t * p )Au_ManPrintStats393,21953
void Au_ManReorderModels_rec( Au_Ntk_t * pNtk, Vec_Int_t * vOrder )Au_ManReorderModels_rec409,22535
void Au_ManReorderModels( Au_Man_t * p, Au_Ntk_t * pRoot )Au_ManReorderModels426,22981
void Au_ManCountThings( Au_Man_t * p )Au_ManCountThings492,25244
int Au_NtkCompareNames( Au_Ntk_t ** p1, Au_Ntk_t ** p2 )Au_NtkCompareNames539,27557
void Au_ManPrintBoxInfo( Au_Ntk_t * pNtk )Au_ManPrintBoxInfo543,27673
int Au_NtkCompareSign( Au_Ntk_t ** p1, Au_Ntk_t ** p2 )Au_NtkCompareSign621,30311
void Au_ManPrintBoxInfoSorted( Au_Ntk_t * pNtk )Au_ManPrintBoxInfoSorted628,30536
int Au_NtkCheckRecursive( Au_Ntk_t * pNtk )Au_NtkCheckRecursive660,31400
int Au_ObjSuppSize_rec( Au_Ntk_t * p, int Id )Au_ObjSuppSize_rec688,32140
int Au_ObjSuppSize( Au_Obj_t * pObj )Au_ObjSuppSize703,32610
int Au_NtkSuppSizeTest( Au_Ntk_t * p )Au_NtkSuppSizeTest731,33363
static inline void Au_NtkInsertHeader( Au_Ntk_t * p )Au_NtkInsertHeader753,33949
int Au_NtkAllocObj( Au_Ntk_t * p, int nFanins, int Type )Au_NtkAllocObj761,34309
int Au_NtkCreateConst0( Au_Ntk_t * pNtk )Au_NtkCreateConst0822,36436
int Au_NtkCreatePi( Au_Ntk_t * pNtk )Au_NtkCreatePi826,36535
int Au_NtkCreatePo( Au_Ntk_t * pNtk, int iFanin )Au_NtkCreatePo830,36626
int Au_NtkCreateFan( Au_Ntk_t * pNtk, int iFanin, int iFanout, int iModel )Au_NtkCreateFan837,36825
int Au_NtkCreateNode( Au_Ntk_t * pNtk, Vec_Int_t * vFanins, int iFunc )Au_NtkCreateNode847,37137
int Au_NtkCreateBox( Au_Ntk_t * pNtk, Vec_Int_t * vFanins, int nFanouts, int iModel )Au_NtkCreateBox857,37471
static inline int Au_NtkRemapNum( Vec_Int_t * vNum2Obj, int Num )Au_NtkRemapNum908,39053
static inline void Au_NtkParseCBlifNum( Vec_Int_t * vFanins, char * pToken, Vec_Int_t * vNum2Obj )Au_NtkParseCBlifNum923,39457
Au_Ntk_t * Au_NtkParseCBlif( char * pFileName )Au_NtkParseCBlif959,40504
void Au_NtkDeriveFlatGia_rec( Gia_Man_t * pGia, Au_Ntk_t * p )Au_NtkDeriveFlatGia_rec1131,46094
Gia_Man_t * Au_NtkDeriveFlatGia( Au_Ntk_t * p )Au_NtkDeriveFlatGia1222,49568
#define AU_VAL0 AU_VAL01254,50529
#define AU_VAL1 AU_VAL11255,50549
#define AU_VALX AU_VALX1256,50569
static inline void Au_ObjSetXsim( Au_Obj_t * pObj, int Value )  { pObj->Value = Value;  }Au_ObjSetXsim1258,50590
static inline int  Au_ObjGetXsim( Au_Obj_t * pObj )             { return pObj->Value;   }Au_ObjGetXsim1259,50680
static inline int  Au_XsimInv( int Value )   Au_XsimInv1260,50770
static inline int  Au_XsimAnd( int Value0, int Value1 )   Au_XsimAnd1269,50984
static inline int  Au_XsimXor( int Value0, int Value1 )   Au_XsimXor1278,51270
static inline int  Au_XsimMux( int ValueC, int Value1, int Value0 )   Au_XsimMux1286,51506
static inline int  Au_ObjGetXsimFan0( Au_Obj_t * pObj )       Au_ObjGetXsimFan01298,51854
static inline int  Au_ObjGetXsimFan1( Au_Obj_t * pObj )       Au_ObjGetXsimFan11303,52035
static inline int  Au_ObjGetXsimFan2( Au_Obj_t * pObj )       Au_ObjGetXsimFan21308,52216
void Au_NtkTerSimulate_rec( Au_Ntk_t * p )Au_NtkTerSimulate_rec1325,52676
void Au_NtkTerSimulate( Au_Ntk_t * p )Au_NtkTerSimulate1402,55390
Au_Ntk_t * Au_NtkDerive( Au_Man_t * pMan, Abc_Ntk_t * pNtk, Vec_Ptr_t * vOrder )Au_NtkDerive1441,56686
Gia_Man_t * Au_ManDeriveTest( Abc_Ntk_t * pRoot )Au_ManDeriveTest1486,58370
Gia_Man_t * Abc_NtkHieCecTest2( char * pFileName, char * pModelName, int fVerbose )Abc_NtkHieCecTest21571,60693

src/base/exor/exor.h,3749
#define __EXORMAIN_H____EXORMAIN_H__42,1926
#define BPI BPI58,2402
#define BPIMASK BPIMASK59,2434
#define LOGBPI LOGBPI60,2466
#define MAXVARS MAXVARS63,2539
#define ADDITIONAL_CUBES ADDITIONAL_CUBES66,2626
#define CUBE_PAIR_FACTOR CUBE_PAIR_FACTOR69,2718
#define DIFFERENT DIFFERENT74,2849
#define BIT_COUNT(BIT_COUNT75,2888
#define VarWord(VarWord85,3206
#define VarBit(VarBit86,3252
#define TICKS_TO_SECONDS(TICKS_TO_SECONDS88,3299
typedef enum { MULTI_OUTPUT = 1, SINGLE_NODE, MULTI_NODE  } type;MULTI_OUTPUT94,3591
typedef enum { MULTI_OUTPUT = 1, SINGLE_NODE, MULTI_NODE  } type;SINGLE_NODE94,3591
typedef enum { MULTI_OUTPUT = 1, SINGLE_NODE, MULTI_NODE  } type;MULTI_NODE94,3591
typedef enum { MULTI_OUTPUT = 1, SINGLE_NODE, MULTI_NODE  } type;type94,3591
typedef struct cinfo_tag cinfo_tag97,3688
    int nVarsIn;        // number of input binary variables in the cubesnVarsIn99,3716
    int nVarsOut;       // number of output binary variables in the cubesnVarsOut100,3789
    int nWordsIn;       // number of input words used to represent the covernWordsIn101,3863
    int nWordsOut;      // number of output words used to represent the covernWordsOut102,3940
    int nCubesAlloc;    // the number of allocated cubes nCubesAlloc103,4018
    int nCubesBefore;   // number of cubes before simplificationnCubesBefore104,4076
    int nCubesInUse;    // number of cubes after simplificationnCubesInUse105,4141
    int nCubesFree;     // number of free cubesnCubesFree106,4205
    int nLiteralsBefore;// number of literals beforenLiteralsBefore107,4253
    int nLiteralsAfter; // number of literals afternLiteralsAfter108,4306
    int QCostBefore;    // q-cost beforeQCostBefore109,4358
    int QCostAfter;     // q-cost afterQCostAfter110,4399
    int cIDs;           // the counter of cube IDscIDs111,4439
    int Verbosity;      // verbosity levelVerbosity113,4491
    int Quality;        // qualityQuality114,4534
    int nCubesMax;      // maximum number of cubes in starting covernCubesMax115,4569
    int fUseQCost;      // use q-cost instead of literal countfUseQCost116,4638
    abctime TimeRead;   // reading timeTimeRead118,4702
    abctime TimeStart;  // starting cover computation timeTimeStart119,4742
    abctime TimeMin;    // pure minimization timeTimeMin120,4801
} cinfo;cinfo121,4851
typedef unsigned int  drow;drow124,4913
typedef unsigned char byte;byte125,4941
typedef struct cube cube126,4969
    byte  fMark;        // the flag which is TRUE if the cubes is enabledfMark128,4992
    byte  ID;           // (almost) unique ID of the cubeID129,5066
    short a;            // the number of literalsa130,5124
    short z;            // the number of 1's in the output partz131,5174
    short q;            // user costq132,5238
    drow* pCubeDataIn;  // a pointer to the bit string representing literalspCubeDataIn133,5275
    drow* pCubeDataOut; // a pointer to the bit string representing literalspCubeDataOut134,5352
    struct cube* Prev;  // pointers to the previous/next cubes in the list/ring Prev135,5429
    struct cube* Next;Next136,5510
} Cube;Cube137,5533
typedef enum { VAR_NEG = 1, VAR_POS, VAR_ABS  } varvalue;VAR_NEG182,7039
typedef enum { VAR_NEG = 1, VAR_POS, VAR_ABS  } varvalue;VAR_POS182,7039
typedef enum { VAR_NEG = 1, VAR_POS, VAR_ABS  } varvalue;VAR_ABS182,7039
typedef enum { VAR_NEG = 1, VAR_POS, VAR_ABS  } varvalue;varvalue182,7039
typedef enum { DIST2, DIST3, DIST4 } cubedist;DIST2185,7169
typedef enum { DIST2, DIST3, DIST4 } cubedist;DIST3185,7169
typedef enum { DIST2, DIST3, DIST4 } cubedist;DIST4185,7169
typedef enum { DIST2, DIST3, DIST4 } cubedist;cubedist185,7169

src/base/exor/exor.c,950
cinfo g_CoverInfo;g_CoverInfo58,2735
int GetQCost( int nVars, int nNegs )GetQCost96,3808
void GetQCostTest()GetQCostTest122,4396
int ComputeQCost( Vec_Int_t * vCube )ComputeQCost132,4597
int ComputeQCostBits( Cube * p )ComputeQCostBits139,4804
int ToffoliGateCount( int controls, int lines )ToffoliGateCount154,5191
int ComputeQCostTcount( Vec_Int_t * vCube )ComputeQCostTcount175,5634
int ComputeQCostTcountBits( Cube * p )ComputeQCostTcountBits179,5764
int ReduceEsopCover()ReduceEsopCover203,6369
void AddCubesToStartingCover( Vec_Wec_t * vEsop )AddCubesToStartingCover702,24774
int Exorcism( Vec_Wec_t * vEsop, int nIns, int nOuts, char * pFileNameOut )Exorcism779,27149
int Abc_ExorcismMain( Vec_Wec_t * vEsop, int nIns, int nOuts, char * pFileNameOut, int Quality, int Verbosity, int nCubesMax, int fUseQCost )Abc_ExorcismMain927,32654
Vec_Wec_t * Abc_ExorcismNtk2Esop( Abc_Ntk_t * pNtk )Abc_ExorcismNtk2Esop951,33582

src/base/exor/exorLink.c,2502
#define LARGE_NUM LARGE_NUM49,2169
const int s_ELMax = 4;s_ELMax96,4253
const int s_ELnCubes[4]  = { 4, 12, 32, 80 };s_ELnCubes103,4663
const int s_ELnGroups[4] = { 2,  6, 24, 120 };s_ELnGroups104,4709
enum { vs0, vs1, vsX };vs0108,4882
enum { vs0, vs1, vsX };vs1108,4882
enum { vs0, vs1, vsX };vsX108,4882
static int s_ELCubeRules[3][32][4]  = {s_ELCubeRules114,5109
static int s_ELGroupRules[3][24][4] = { s_ELGroupRules183,8002
static drow s_CubeLitMasks[3][32] = { s_CubeLitMasks236,10011
static drow s_BitMasks[32] = s_BitMasks296,13272
static int fWorking;fWorking313,13976
static int fMinLitGroupsFirst[4] = { 0 /*dist2*/, 0 /*dist3*/, 0 /*dist4*/};fMinLitGroupsFirst316,14064
static int nDist;nDist318,14142
static int nCubes;nCubes319,14160
static int nCubesInGroup;nCubesInGroup320,14179
static int nGroups;nGroups321,14205
static Cube *pCA, *pCB;pCA322,14225
static Cube *pCA, *pCB;pCB322,14225
static int DiffVars[5];DiffVars325,14314
static int* pDiffVars;pDiffVars326,14338
static int nDifferentVars;nDifferentVars327,14361
static int nDiffVarsIn;nDiffVarsIn330,14452
static int DiffVarWords[5];DiffVarWords331,14476
static int DiffVarBits[5];DiffVarBits332,14504
static drow MaskLiterals;MaskLiterals335,14598
static int StartingLiterals;StartingLiterals337,14658
static int CubeLiterals[32];CubeLiterals339,14726
static int BitShift;BitShift340,14755
static int DiffVarValues[4][3];DiffVarValues341,14776
static int Value;Value342,14808
static int GroupCosts[32];GroupCosts345,14890
static int GroupCostBest;GroupCostBest346,14917
static int GroupCostBestNum;GroupCostBestNum347,14943
static int CubeNum;CubeNum349,14973
static int NewZ;NewZ350,14993
static drow Temp;Temp351,15010
static Cube* ELCubes[32];ELCubes354,15060
static drow LastGroup;LastGroup358,15185
static int  GroupOrder[24];GroupOrder360,15209
static drow VisitedGroups;VisitedGroups361,15237
static int  nVisitedGroups;nVisitedGroups362,15264
static drow DammyBitData[(MAXVARS*2)/(sizeof(drow)*8)+(MAXVARS*2)%(sizeof(drow)*8)];DammyBitData366,15415
int ExorLinkCubeIteratorStart( Cube** pGroup, Cube* pC1, Cube* pC2, cubedist Dist )ExorLinkCubeIteratorStart376,15900
int ExorLinkCubeIteratorNext( Cube** pGroup )ExorLinkCubeIteratorNext560,22567
int ExorLinkCubeIteratorPick( Cube** pGroup, int g )ExorLinkCubeIteratorPick682,27047
void ExorLinkCubeIteratorCleanUp( int fTakeLastGroup )ExorLinkCubeIteratorCleanUp710,27815

src/base/exor/exorCubes.c,312
Cube ** s_pCoverMemory;s_pCoverMemory81,3671
Cube * s_CubesFree;s_CubesFree84,3722
int AllocateCover( int nCubes, int nWordsIn, int nWordsOut )AllocateCover90,3948
void DelocateCover()DelocateCover147,5918
void AddToFreeCubes( Cube * p )AddToFreeCubes157,6216
Cube * GetFreeCube()GetFreeCube174,6595

src/base/exor/exorUtil.c,272
int CountLiterals()CountLiterals77,3465
int CountLiteralsCheck()CountLiteralsCheck86,3640
int CountQCost()CountQCost119,4482
void WriteTableIntoFile( FILE * pFile )WriteTableIntoFile135,4888
int WriteResultIntoFile( char * pFileName )WriteResultIntoFile182,6163

src/base/exor/exorBits.c,1378
static unsigned char BitCount8[256] = {BitCount884,3706
static int SparseNumbers[163] = { SparseNumbers95,4301
static unsigned char GroupLiterals[163][4] = {GroupLiterals112,5238
#define FULL16BITS FULL16BITS141,6939
#define MARKNUMBER MARKNUMBER142,6967
static unsigned char BitGroupNumbers[FULL16BITS];BitGroupNumbers144,6992
unsigned char BitCount[FULL16BITS];BitCount145,7042
void PrepareBitSetModule()PrepareBitSetModule151,7299
varvalue GetVar( Cube * pC, int Var )GetVar195,8493
void ExorVar( Cube * pC, int Var, varvalue Val )ExorVar204,8812
static int DiffVarCounter, cVars;DiffVarCounter216,9302
static int DiffVarCounter, cVars;cVars216,9302
static drow Temp1, Temp2, Temp;Temp1217,9336
static drow Temp1, Temp2, Temp;Temp2217,9336
static drow Temp1, Temp2, Temp;Temp217,9336
static drow LastNonZeroWord;LastNonZeroWord218,9368
static int LastNonZeroWordNum;LastNonZeroWordNum219,9397
int GetDistance( Cube * pC1, Cube * pC2 )GetDistance221,9429
int GetDistancePlus( Cube * pC1, Cube * pC2 )GetDistancePlus253,10369
int FindDiffVars( int * pDiffVars, Cube * pC1, Cube * pC2 )FindDiffVars311,12162
void InsertVars( Cube * pC, int * pVars, int nVarsIn, int * pVarValues )InsertVars372,14048
void InsertVarsWithoutClearing( Cube * pC, int * pVars, int nVarsIn, int * pVarValues, int Output )InsertVarsWithoutClearing395,14950

src/base/exor/exorList.c,4598
int s_nPosAlloc;s_nPosAlloc179,7580
int s_nPosMax[3];s_nPosMax181,7638
static Cube* s_List;s_List214,9305
    int fInput;   // 1 if the input was changedfInput221,9515
    Cube* p;      // the pointer to the modified cubep222,9563
    int PrevQa;PrevQa223,9617
    int PrevPa;PrevPa224,9633
    int PrevQq;PrevQq225,9649
    int PrevPq;PrevPq226,9665
    int PrevPz;PrevPz227,9681
    int Var;      // the number of variable that was changedVar228,9697
    int Value;    // the value what was thereValue229,9758
    int PrevID;   // the previous ID of the removed cubePrevID230,9804
} s_ChangeStore;s_ChangeStore231,9861
static int s_fDistEnable2 = 1;s_fDistEnable2237,10093
static int s_fDistEnable3;s_fDistEnable3238,10124
static int s_fDistEnable4;s_fDistEnable4239,10151
static Cube* s_CubeGroup[5];s_CubeGroup242,10245
static int s_fInserted[5];s_fInserted244,10330
int s_fDecreaseLiterals = 0;s_fDecreaseLiterals247,10435
static int s_cEnquequed;s_cEnquequed250,10493
static int s_cAttempts;s_cAttempts251,10518
static int s_cReshapes;s_cReshapes252,10542
static int s_nCubesBefore;s_nCubesBefore255,10613
static cubedist s_Dist;s_Dist257,10688
static int s_Gain;s_Gain260,10732
static int s_GainTotal;s_GainTotal261,10751
static int s_GroupCounter;s_GroupCounter262,10775
static int s_GroupBest;s_GroupBest263,10802
static Cube *s_pC1, *s_pC2;s_pC1264,10826
static Cube *s_pC1, *s_pC2;s_pC2264,10826
int CheckAndInsert( Cube* p )CheckAndInsert270,11075
int IterativelyApplyExorLink2( char fDistEnable )   IterativelyApplyExorLink2277,11184
int IterativelyApplyExorLink3( char fDistEnable )   IterativelyApplyExorLink3405,16266
int IterativelyApplyExorLink4( char fDistEnable )   IterativelyApplyExorLink4524,21247
Cube* s_q;s_q636,25662
int s_Distance;s_Distance637,25673
int s_DiffVarNum;s_DiffVarNum638,25689
int s_DiffVarValueP_old;s_DiffVarValueP_old639,25707
int s_DiffVarValueP_new;s_DiffVarValueP_new640,25732
int s_DiffVarValueQ;s_DiffVarValueQ641,25757
int CheckForCloseCubes( Cube* p, int fAddCube )CheckForCloseCubes643,25779
void UndoRecentChanges()UndoRecentChanges750,29620
int AllocateCubeSets( int nVarsIn, int nVarsOut )AllocateCubeSets792,30917
void DelocateCubeSets()DelocateCubeSets816,31425
void CubeInsert( Cube* p )CubeInsert824,31659
Cube* CubeExtract( Cube* p )CubeExtract843,32007
Cube* s_pCubeLast;s_pCubeLast874,32765
Cube* IterCubeSetStart()IterCubeSetStart880,32990
Cube* IterCubeSetNext()IterCubeSetNext892,33244
    Cube** pC1;      // the pointer to the first cubepC1906,33688
    Cube** pC2;      // the pointer to the second cubepC2907,33742
    byte*  ID1;      // the ID of the first cubeID1908,33797
    byte*  ID2;      // the ID of the second cubeID2909,33846
    int  PosOut;     // extract positionPosOut910,33896
    int  PosIn;      // insert positionPosIn911,33937
    int  PosCur;     // temporary insert positionPosCur912,33977
    int  PosMark;    // the marked positionPosMark913,34027
    int  fEmpty;     // this flag is 1 if there is nothing in the quequefEmpty914,34071
} que;que915,34144
static que s_Que[3];  // Dist-2, Dist-3, Dist-4 quequess_Que917,34152
int GetPosDiff( int PosBeg, int PosEnd )GetPosDiff928,34538
void MarkSet()MarkSet933,34642
void MarkRewind()MarkRewind941,34818
void NewRangeReset()NewRangeReset949,35009
void NewRangeAdd()NewRangeAdd957,35202
void NewRangeInsertCubePair( cubedist Dist, Cube* p1, Cube* p2 )NewRangeInsertCubePair965,35405
void PrintQuequeStats()PrintQuequeStats985,35907
int GetQuequeStats( cubedist Dist )GetQuequeStats998,36289
    int fStarted;    // status of the iterator (1 if working)fStarted1011,36738
    cubedist Dist;   // the currently iterated quequeDist1012,36800
    Cube** ppC1;     // the position where the first cube pointer goesppC11013,36854
    Cube** ppC2;     // the position where the second cube pointer goesppC21014,36925
    int PosStop;     // the stop position (to prevent the iterator fromPosStop1015,36997
    int CutValue;    // the number of literals below which the cubes are not usedCutValue1017,37144
} s_Iter;s_Iter1018,37226
static que* pQ;pQ1020,37237
static Cube *p1, *p2;p11021,37253
static Cube *p1, *p2;p21021,37253
int IteratorCubePairStart( cubedist CubeDist, Cube** ppC1, Cube** ppC2 )IteratorCubePairStart1023,37276
int IteratorCubePairNext()IteratorCubePairNext1073,38708
int AllocateQueques( int nPlaces )AllocateQueques1112,39949
void DelocateQueques()DelocateQueques1139,40725

src/base/ver/verCore.c,5355
    VER_SIG_NONE = 0,VER_SIG_NONE34,886
    VER_SIG_INPUT,VER_SIG_INPUT35,908
    VER_SIG_OUTPUT,VER_SIG_OUTPUT36,927
    VER_SIG_INOUT,VER_SIG_INOUT37,947
    VER_SIG_REG,VER_SIG_REG38,966
    VER_SIG_WIREVER_SIG_WIRE39,983
} Ver_SignalType_t;Ver_SignalType_t40,1000
    VER_GATE_AND = 0,VER_GATE_AND44,1063
    VER_GATE_OR,VER_GATE_OR45,1085
    VER_GATE_XOR,VER_GATE_XOR46,1102
    VER_GATE_BUF,VER_GATE_BUF47,1120
    VER_GATE_NAND,VER_GATE_NAND48,1138
    VER_GATE_NOR,VER_GATE_NOR49,1157
    VER_GATE_XNOR,VER_GATE_XNOR50,1175
    VER_GATE_NOTVER_GATE_NOT51,1194
} Ver_GateType_t;Ver_GateType_t52,1211
static inline int Ver_NtkIsDefined( Abc_Ntk_t * pNtkBox )  { assert( pNtkBox->pName );     return Abc_NtkPiNum(pNtkBox) || Abc_NtkPoNum(pNtkBox);  }Ver_NtkIsDefined77,2624
static inline int Ver_ObjIsConnected( Abc_Obj_t * pObj )   { assert( Abc_ObjIsBox(pObj) ); return Abc_ObjFaninNum(pObj) || Abc_ObjFanoutNum(pObj); }Ver_ObjIsConnected78,2773
int glo_fMapped = 0; // this is bad!glo_fMapped80,2923
typedef struct Ver_Bundle_t_    Ver_Bundle_t;Ver_Bundle_t82,2961
struct Ver_Bundle_t_Ver_Bundle_t_83,3007
    char *          pNameFormal;   // the name of the formal netpNameFormal85,3030
    Vec_Ptr_t *     vNetsActual;   // the vector of actual nets (MSB to LSB)vNetsActual86,3095
Ver_Man_t * Ver_ParseStart( char * pFileName, Abc_Des_t * pGateLib )Ver_ParseStart104,3643
void Ver_ParseStop( Ver_Man_t * p )Ver_ParseStop142,4754
Abc_Des_t * Ver_ParseFile( char * pFileName, Abc_Des_t * pGateLib, int fCheck, int fUseMemMan )Ver_ParseFile165,5291
void Ver_ParseInternal( Ver_Man_t * pMan )Ver_ParseInternal200,6163
void Ver_ParseFreeData( Ver_Man_t * p )Ver_ParseFreeData258,7759
void Ver_ParsePrintErrorMessage( Ver_Man_t * p )Ver_ParsePrintErrorMessage278,8205
Abc_Ntk_t * Ver_ParseFindOrCreateNetwork( Ver_Man_t * pMan, char * pName )Ver_ParseFindOrCreateNetwork301,8927
Abc_Obj_t * Ver_ParseFindNet( Abc_Ntk_t * pNtk, char * pName )Ver_ParseFindNet328,9783
int Ver_ParseConvertNetwork( Ver_Man_t * pMan, Abc_Ntk_t * pNtk, int fMapped )Ver_ParseConvertNetwork351,10473
int Ver_ParseModule( Ver_Man_t * pMan )Ver_ParseModule401,12336
int Ver_ParseLookupSuffix( Ver_Man_t * pMan, char * pWord, int * pnMsb, int * pnLsb )Ver_ParseLookupSuffix563,18262
int Ver_ParseInsertsSuffix( Ver_Man_t * pMan, char * pWord, int nMsb, int nLsb )Ver_ParseInsertsSuffix587,18911
void Ver_ParseRemoveSuffixTable( Ver_Man_t * pMan )Ver_ParseRemoveSuffixTable612,19697
int Ver_ParseSignalPrefix( Ver_Man_t * pMan, char ** ppWord, int * pnMsb, int * pnLsb )Ver_ParseSignalPrefix635,20327
int Ver_ParseSignalSuffix( Ver_Man_t * pMan, char * pWord, int * pnMsb, int * pnLsb )Ver_ParseSignalSuffix699,22021
int Ver_ParseConstant( Ver_Man_t * pMan, char * pWord )Ver_ParseConstant753,23529
int Ver_ParseSignal( Ver_Man_t * pMan, Abc_Ntk_t * pNtk, Ver_SignalType_t SigType )Ver_ParseSignal805,24996
int Ver_ParseAlways( Ver_Man_t * pMan, Abc_Ntk_t * pNtk )Ver_ParseAlways892,27988
int Ver_ParseInitial( Ver_Man_t * pMan, Abc_Ntk_t * pNtk )Ver_ParseInitial991,31008
int Ver_ParseAssign( Ver_Man_t * pMan, Abc_Ntk_t * pNtk )Ver_ParseAssign1087,34124
int Ver_ParseGateStandard( Ver_Man_t * pMan, Abc_Ntk_t * pNtk, Ver_GateType_t GateType )Ver_ParseGateStandard1330,43891
int Ver_ParseFlopStandard( Ver_Man_t * pMan, Abc_Ntk_t * pNtk )Ver_ParseFlopStandard1428,47620
int Ver_FindGateInput( Mio_Gate_t * pGate, char * pName )Ver_FindGateInput1527,50411
int Ver_ParseGate( Ver_Man_t * pMan, Abc_Ntk_t * pNtk, Mio_Gate_t * pGate )Ver_ParseGate1552,51178
int Ver_ParseBox( Ver_Man_t * pMan, Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkBox )Ver_ParseBox1734,57229
void Ver_ParseFreeBundle( Ver_Bundle_t * pBundle )Ver_ParseFreeBundle2055,69656
int Ver_ParseConnectBox( Ver_Man_t * pMan, Abc_Obj_t * pBox )Ver_ParseConnectBox2073,70081
int Ver_ParseConnectDefBoxes( Ver_Man_t * pMan )Ver_ParseConnectDefBoxes2312,79882
Vec_Ptr_t * Ver_ParseCollectUndefBoxes( Ver_Man_t * pMan )Ver_ParseCollectUndefBoxes2358,81308
void Ver_ParseReportUndefBoxes( Ver_Man_t * pMan )Ver_ParseReportUndefBoxes2402,82616
int Ver_ParseCheckNondrivenNets( Vec_Ptr_t * vUndefs )Ver_ParseCheckNondrivenNets2442,83932
int Ver_ParseFormalNetsAreDriven( Abc_Ntk_t * pNtk, char * pNameFormal )Ver_ParseFormalNetsAreDriven2476,85237
Ver_Bundle_t * Ver_ParseGetNondrivenBundle( Abc_Ntk_t * pNtk, int Counter )Ver_ParseGetNondrivenBundle2511,86469
int Ver_ParseDriveFormal( Ver_Man_t * pMan, Abc_Ntk_t * pNtk, Ver_Bundle_t * pBundle0 )Ver_ParseDriveFormal2544,87631
int Ver_ParseDriveInputs( Ver_Man_t * pMan, Vec_Ptr_t * vUndefs )Ver_ParseDriveInputs2618,90481
int Ver_ParseMaxBoxSize( Vec_Ptr_t * vUndefs )Ver_ParseMaxBoxSize2711,94142
void Ver_ParsePrintLog( Ver_Man_t * pMan )Ver_ParsePrintLog2737,94977
int Ver_ParseAttachBoxes( Ver_Man_t * pMan )Ver_ParseAttachBoxes2872,100856
Abc_Obj_t * Ver_ParseCreatePi( Abc_Ntk_t * pNtk, char * pName )Ver_ParseCreatePi2942,102783
Abc_Obj_t * Ver_ParseCreatePo( Abc_Ntk_t * pNtk, char * pName )Ver_ParseCreatePo2967,103475
Abc_Obj_t * Ver_ParseCreateLatch( Abc_Ntk_t * pNtk, Abc_Obj_t * pNetLI, Abc_Obj_t * pNetLO )Ver_ParseCreateLatch2992,104256
Abc_Obj_t * Ver_ParseCreateInv( Abc_Ntk_t * pNtk, Abc_Obj_t * pNet )Ver_ParseCreateInv3023,105161

src/base/ver/verParse.c,145
int Ver_ParseSkipComments( Ver_Man_t * pMan )Ver_ParseSkipComments45,1275
char * Ver_ParseGetName( Ver_Man_t * pMan )Ver_ParseGetName91,2601

src/base/ver/ver.h,1131
#define ABC__base__ver__ver_hABC__base__ver__ver_h22,523
typedef struct Ver_Man_t_       Ver_Man_t;Ver_Man_t45,1293
typedef struct Ver_Stream_t_    Ver_Stream_t;Ver_Stream_t46,1336
struct Ver_Man_t_Ver_Man_t_48,1383
    int             fMapped;       // mapped verilogfMapped51,1430
    int             fUseMemMan;    // allocate memory manager in the networksfUseMemMan52,1483
    int             fCheck;        // checks network for currectnessfCheck53,1561
    char *          pFileName;pFileName55,1655
    Ver_Stream_t *  pReader;pReader56,1686
    int             fNameLast;fNameLast57,1715
    ProgressBar *   pProgress;pProgress58,1746
    Abc_Des_t *     pDesign;pDesign60,1799
    st__table *      tName2Suffix;tName2Suffix61,1828
    FILE *          Output;Output63,1885
    int             fTopLevel;fTopLevel64,1913
    int             fError;fError65,1944
    char            sError[2000];sError66,1972
    Vec_Ptr_t *     vNames;  vNames68,2037
    Vec_Ptr_t *     vStackFn;vStackFn69,2067
    Vec_Int_t *     vStackOp;vStackOp70,2097
    Vec_Int_t *     vPerm;vPerm71,2127

src/base/ver/ver_.c,0

src/base/ver/verWords.c,0

src/base/ver/verStream.c,2546
#define VER_BUFFER_SIZE VER_BUFFER_SIZE30,801
#define VER_OFFSET_SIZE VER_OFFSET_SIZE31,892
#define VER_WORD_SIZE VER_WORD_SIZE32,985
#define VER_MINIMUM(VER_MINIMUM34,1076
struct Ver_Stream_t_Ver_Stream_t_36,1133
    char *           pFileName;     // the input file namepFileName39,1178
    FILE *           pFile;         // the input file pointerpFile40,1237
    iword            nFileSize;     // the total number of bytes in the filenFileSize41,1299
    iword            nFileRead;     // the number of bytes currently read from filenFileRead42,1376
    iword            nLineCounter;  // the counter of lines processednLineCounter43,1460
    iword            nBufferSize;   // the size of the buffernBufferSize45,1565
    char *           pBuffer;       // the bufferpBuffer46,1627
    char *           pBufferCur;    // the current reading positionpBufferCur47,1677
    char *           pBufferEnd;    // the first position not used by currently loaded datapBufferEnd48,1745
    char *           pBufferStop;   // the position where loading new data will be donepBufferStop49,1837
    char             pChars[VER_WORD_SIZE+5]; // temporary storage for a word (plus end-of-string and two parentheses)pChars51,1957
    int              nChars;        // the total number of characters in the wordnChars52,2076
    int              fStop;         // this flag goes high when the end of file is reachedfStop54,2186
Ver_Stream_t * Ver_StreamAlloc( char * pFileName )Ver_StreamAlloc74,2828
void Ver_StreamReload( Ver_Stream_t * p )Ver_StreamReload124,4460
void Ver_StreamFree( Ver_Stream_t * p )Ver_StreamFree157,5696
char * Ver_StreamGetFileName( Ver_Stream_t * p )Ver_StreamGetFileName176,6092
int Ver_StreamGetFileSize( Ver_Stream_t * p )Ver_StreamGetFileSize192,6427
int Ver_StreamGetCurPosition( Ver_Stream_t * p )Ver_StreamGetCurPosition208,6774
int Ver_StreamGetLineNumber( Ver_Stream_t * p )Ver_StreamGetLineNumber224,7165
int Ver_StreamIsOkey( Ver_Stream_t * p )Ver_StreamIsOkey242,7505
char Ver_StreamScanChar( Ver_Stream_t * p )Ver_StreamScanChar258,7830
char Ver_StreamPopChar( Ver_Stream_t * p )Ver_StreamPopChar275,8210
void Ver_StreamSkipChars( Ver_Stream_t * p, char * pCharsToSkip )Ver_StreamSkipChars304,8956
void Ver_StreamSkipToChars( Ver_Stream_t * p, char * pCharsToStop )Ver_StreamSkipToChars349,10338
char * Ver_StreamGetWord( Ver_Stream_t * p, char * pCharsToStop )Ver_StreamGetWord397,11904
void Ver_StreamMove( Ver_Stream_t * p )Ver_StreamMove455,13713

src/base/ver/verFormula.c,1759
#define VER_PARSE_SYM_OPEN VER_PARSE_SYM_OPEN31,858
#define VER_PARSE_SYM_CLOSE VER_PARSE_SYM_CLOSE32,917
#define VER_PARSE_SYM_CONST0 VER_PARSE_SYM_CONST033,976
#define VER_PARSE_SYM_CONST1 VER_PARSE_SYM_CONST134,1026
#define VER_PARSE_SYM_NEGBEF1 VER_PARSE_SYM_NEGBEF135,1076
#define VER_PARSE_SYM_NEGBEF2 VER_PARSE_SYM_NEGBEF236,1144
#define VER_PARSE_SYM_AND VER_PARSE_SYM_AND37,1212
#define VER_PARSE_SYM_OR VER_PARSE_SYM_OR38,1261
#define VER_PARSE_SYM_XOR VER_PARSE_SYM_XOR39,1309
#define VER_PARSE_SYM_MUX1 VER_PARSE_SYM_MUX140,1358
#define VER_PARSE_SYM_MUX2 VER_PARSE_SYM_MUX241,1417
#define VER_PARSE_OPER_NEG VER_PARSE_OPER_NEG44,1540
#define VER_PARSE_OPER_AND VER_PARSE_OPER_AND45,1609
#define VER_PARSE_OPER_XOR VER_PARSE_OPER_XOR46,1658
#define VER_PARSE_OPER_OR VER_PARSE_OPER_OR47,1725
#define VER_PARSE_OPER_EQU VER_PARSE_OPER_EQU48,1773
#define VER_PARSE_OPER_MUX VER_PARSE_OPER_MUX49,1837
#define VER_PARSE_OPER_MARK VER_PARSE_OPER_MARK50,1901
#define VER_PARSE_FLAG_START VER_PARSE_FLAG_START53,2032
#define VER_PARSE_FLAG_VAR VER_PARSE_FLAG_VAR54,2102
#define VER_PARSE_FLAG_OPER VER_PARSE_FLAG_OPER55,2169
#define VER_PARSE_FLAG_ERROR VER_PARSE_FLAG_ERROR56,2243
void * Ver_FormulaParser( char * pFormula, void * pMan, Vec_Ptr_t * vNames, Vec_Ptr_t * vStackFn, Vec_Int_t * vStackOp, char * pErrorMessage )Ver_FormulaParser76,2996
Hop_Obj_t * Ver_FormulaParserTopOper( Hop_Man_t * pMan, Vec_Ptr_t * vStackFn, int Oper )Ver_FormulaParserTopOper342,12969
int Ver_FormulaParserFindVar( char * pString, Vec_Ptr_t * vNames )Ver_FormulaParserFindVar384,14396
void * Ver_FormulaReduction( char * pFormula, void * pMan, Vec_Ptr_t * vNames, char * pErrorMessage )Ver_FormulaReduction435,16153

src/base/abci/abcBmc.c,236
void Abc_NtkBmc( Abc_Ntk_t * pNtk, int nFrames, int fInit, int fVerbose )Abc_NtkBmc50,1474
void Abc_NtkBmcReport( Ivy_Man_t * pMan, Ivy_Man_t * pFrames, Ivy_Man_t * pFraig, Vec_Ptr_t * vMapping, int nFrames )Abc_NtkBmcReport88,2678

src/base/abci/abcRefactor.c,2583
typedef struct Abc_ManRef_t_   Abc_ManRef_t;Abc_ManRef_t32,869
struct Abc_ManRef_t_Abc_ManRef_t_33,914
    int              nNodeSizeMax;      // the limit on the size of the supernodenNodeSizeMax36,970
    int              nConeSizeMax;      // the limit on the size of the containing conenConeSizeMax37,1052
    int              fVerbose;          // the verbosity flagfVerbose38,1140
    Vec_Ptr_t *      vVars;             // truth tablesvVars40,1234
    Vec_Ptr_t *      vFuncs;            // functionsvFuncs41,1290
    Vec_Int_t *      vMemory;           // memoryvMemory42,1343
    Vec_Str_t *      vCube;             // temporaryvCube43,1393
    Vec_Int_t *      vForm;             // temporaryvForm44,1446
    Vec_Ptr_t *      vVisited;          // temporaryvVisited45,1499
    Vec_Ptr_t *      vLeaves;           // temporaryvLeaves46,1552
    int              nLastGain;nLastGain48,1628
    int              nNodesConsidered;nNodesConsidered49,1660
    int              nNodesRefactored;nNodesRefactored50,1699
    int              nNodesGained;nNodesGained51,1738
    int              nNodesBeg;nNodesBeg52,1773
    int              nNodesEnd;nNodesEnd53,1805
    abctime          timeCut;timeCut55,1863
    abctime          timeTru;timeTru56,1893
    abctime          timeDcs;timeDcs57,1923
    abctime          timeSop;timeSop58,1953
    abctime          timeFact;timeFact59,1983
    abctime          timeEval;timeEval60,2014
    abctime          timeRes;timeRes61,2045
    abctime          timeNtk;timeNtk62,2075
    abctime          timeTotal;timeTotal63,2105
word * Abc_NodeConeTruth( Vec_Ptr_t * vVars, Vec_Ptr_t * vFuncs, int nWordsMax, Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vVisited )Abc_NodeConeTruth81,2624
int Abc_NodeConeIsConst0( word * pTruth, int nVars )Abc_NodeConeIsConst0123,4347
int Abc_NodeConeIsConst1( word * pTruth, int nVars )Abc_NodeConeIsConst1131,4548
Dec_Graph_t * Abc_NodeRefactor( Abc_ManRef_t * p, Abc_Obj_t * pNode, Vec_Ptr_t * vFanins, int fUpdateLevel, int fUseZeros, int fUseDcs, int fVerbose )Abc_NodeRefactor152,5027
Abc_ManRef_t * Abc_NtkManRefStart( int nNodeSizeMax, int nConeSizeMax, int fUseDcs, int fVerbose )Abc_NtkManRefStart245,8231
void Abc_NtkManRefStop( Abc_ManRef_t * p )Abc_NtkManRefStop272,9073
void Abc_NtkManRefPrintStats( Abc_ManRef_t * p )Abc_NtkManRefPrintStats293,9559
int Abc_NtkRefactor( Abc_Ntk_t * pNtk, int nNodeSizeMax, int nConeSizeMax, int fUpdateLevel, int fUseZeros, int fUseDcs, int fVerbose )Abc_NtkRefactor326,10954

src/base/abci/abcDebug.c,424
void Abc_NtkAutoDebug( Abc_Ntk_t * pNtk, int (*pFuncError) (Abc_Ntk_t *) )Abc_NtkAutoDebug50,1566
int Abc_NtkCountFaninsTotal( Abc_Ntk_t * pNtk )Abc_NtkCountFaninsTotal116,3876
int Abc_NtkFindGivenFanin( Abc_Ntk_t * pNtk, int Step, Abc_Obj_t ** ppObj, Abc_Obj_t ** ppFanin )Abc_NtkFindGivenFanin145,4683
Abc_Ntk_t * Abc_NtkAutoDebugModify( Abc_Ntk_t * pNtkInit, int Step, int fConst1 )Abc_NtkAutoDebugModify179,5729

src/base/abci/abcMulti.c,1488
Abc_Ntk_t * Abc_NtkMulti( Abc_Ntk_t * pNtk, int nThresh, int nFaninMax, int fCnf, int fMulti, int fSimple, int fFactor )Abc_NtkMulti64,2270
void Abc_NtkMultiInt( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew )Abc_NtkMultiInt130,4390
Abc_Obj_t * Abc_NtkMulti_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNodeOld )Abc_NtkMulti_rec175,5702
DdNode * Abc_NtkMultiDeriveBdd( DdManager * dd, Abc_Obj_t * pNodeOld, Vec_Ptr_t * vFaninsOld )Abc_NtkMultiDeriveBdd222,7033
DdNode * Abc_NtkMultiDeriveBdd_rec( DdManager * dd, Abc_Obj_t * pNode, Vec_Ptr_t * vFanins )Abc_NtkMultiDeriveBdd_rec260,8265
int Abc_NtkMultiLimit_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vCone, int nFaninMax, int fCanStop, int fFirst )Abc_NtkMultiLimit_rec301,9699
int Abc_NtkMultiLimit( Abc_Obj_t * pNode, Vec_Ptr_t * vCone, int nFaninMax )Abc_NtkMultiLimit370,12129
void Abc_NtkMultiSetBounds( Abc_Ntk_t * pNtk, int nThresh, int nFaninMax )Abc_NtkMultiSetBounds388,12717
void Abc_NtkMultiSetBoundsCnf( Abc_Ntk_t * pNtk )Abc_NtkMultiSetBoundsCnf455,14748
void Abc_NtkMultiSetBoundsMulti( Abc_Ntk_t * pNtk, int nThresh )Abc_NtkMultiSetBoundsMulti521,16825
void Abc_NtkMultiSetBoundsSimple( Abc_Ntk_t * pNtk )Abc_NtkMultiSetBoundsSimple567,18233
void Abc_NtkMultiSetBoundsFactor( Abc_Ntk_t * pNtk )Abc_NtkMultiSetBoundsFactor590,18833
void Abc_NtkMultiCone_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vCone )Abc_NtkMultiCone_rec616,19612
void Abc_NtkMultiCone( Abc_Obj_t * pNode, Vec_Ptr_t * vCone )Abc_NtkMultiCone639,20233

src/base/abci/abcBalance.c,1650
Abc_Ntk_t * Abc_NtkBalance( Abc_Ntk_t * pNtk, int fDuplicate, int fSelective, int fUpdateLevel )Abc_NtkBalance53,1991
void Abc_NtkBalancePerform( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkAig, int fDuplicate, int fSelective, int fUpdateLevel )Abc_NtkBalancePerform102,3490
int Abc_NodeBalanceFindLeft( Vec_Ptr_t * vSuper )Abc_NodeBalanceFindLeft154,5546
void Abc_NodeBalancePermute( Abc_Ntk_t * pNtkNew, Vec_Ptr_t * vSuper, int LeftBound )Abc_NodeBalancePermute192,6905
Abc_Obj_t * Abc_NodeBalance_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNodeOld, Vec_Vec_t * vStorage, int Level, int fDuplicate, int fSelective, int fUpdateLevel )Abc_NodeBalance_rec241,8516
Vec_Ptr_t * Abc_NodeBalanceCone( Abc_Obj_t * pNode, Vec_Vec_t * vStorage, int Level, int fDuplicate, int fSelective )Abc_NodeBalanceCone307,11452
int Abc_NodeBalanceCone_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vSuper, int fFirst, int fDuplicate, int fSelective )Abc_NodeBalanceCone_rec345,12908
int Abc_NodeBalanceConeExor_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vSuper, int fFirst )Abc_NodeBalanceConeExor_rec392,14609
Vec_Ptr_t * Abc_NodeBalanceConeExor( Abc_Obj_t * pNode )Abc_NodeBalanceConeExor428,15807
Vec_Ptr_t * Abc_NodeFindCone_rec( Abc_Obj_t * pNode )Abc_NodeFindCone_rec453,16395
void Abc_NtkBalanceAttach( Abc_Ntk_t * pNtk )Abc_NtkBalanceAttach506,18154
void Abc_NtkBalanceDetach( Abc_Ntk_t * pNtk )Abc_NtkBalanceDetach531,18763
int Abc_NtkBalanceLevel_rec( Abc_Obj_t * pNode )Abc_NtkBalanceLevel_rec554,19299
void Abc_NtkBalanceLevel( Abc_Ntk_t * pNtk )Abc_NtkBalanceLevel590,20227
void Abc_NtkMarkCriticalNodes( Abc_Ntk_t * pNtk )Abc_NtkMarkCriticalNodes612,20764

src/base/abci/abcRewrite.c,811
int Abc_NtkRewrite( Abc_Ntk_t * pNtk, int fUpdateLevel, int fUseZeros, int fVerbose, int fVeryVerbose, int fPlaceEnable )Abc_NtkRewrite61,1972
Cut_Man_t * Abc_NtkStartCutManForRewrite( Abc_Ntk_t * pNtk )Abc_NtkStartCutManForRewrite203,6409
void Abc_NodePrintCuts( Abc_Obj_t * pNode )Abc_NodePrintCuts240,7724
void Abc_ManRewritePrintDivs( Vec_Ptr_t * vDivs, int nLeaves )Abc_ManRewritePrintDivs269,8373
void Abc_ManShowCutCone_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vDivs )Abc_ManShowCutCone_rec319,9815
void Abc_ManShowCutCone( Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves )Abc_ManShowCutCone340,10368
void Abc_RwrExpWithCut_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves, int fUseA )Abc_RwrExpWithCut_rec370,11144
void Abc_RwrExpWithCut( Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves )Abc_RwrExpWithCut396,11881

src/base/abci/abcMerge.c,805
void Abc_NtkMarkFanins_rec( Abc_Obj_t * pLut, int nLevMin )Abc_NtkMarkFanins_rec47,1348
void Abc_NtkMarkFanouts_rec( Abc_Obj_t * pLut, int nLevMax, int nFanMax )Abc_NtkMarkFanouts_rec73,2028
void Abc_NtkCollectCircle( Vec_Ptr_t * vStart, Vec_Ptr_t * vNext, int nFanMax )Abc_NtkCollectCircle101,2788
void Abc_NtkCollectNonOverlapCands( Abc_Obj_t * pLut, Vec_Ptr_t * vStart, Vec_Ptr_t * vNext, Vec_Ptr_t * vCands, Nwk_LMPars_t * pPars )Abc_NtkCollectNonOverlapCands142,3981
int Abc_NtkCountTotalFanins( Abc_Obj_t * pLut, Abc_Obj_t * pCand )Abc_NtkCountTotalFanins212,6339
void Abc_NtkCollectOverlapCands( Abc_Obj_t * pLut, Vec_Ptr_t * vCands, Nwk_LMPars_t * pPars )Abc_NtkCollectOverlapCands232,6848
Vec_Int_t * Abc_NtkLutMerge( Abc_Ntk_t * pNtk, Nwk_LMPars_t * pPars )Abc_NtkLutMerge282,8528

src/base/abci/abcFxu.c,492
void Abc_NtkSetDefaultFxParams( Fxu_Data_t * p )Abc_NtkSetDefaultFxParams52,1565
int Abc_NtkFastExtract( Abc_Ntk_t * pNtk, Fxu_Data_t * p )Abc_NtkFastExtract83,2625
int Abc_NtkFxuCheck( Abc_Ntk_t * pNtk )Abc_NtkFxuCheck136,4329
void Abc_NtkFxuCollectInfo( Abc_Ntk_t * pNtk, Fxu_Data_t * p )Abc_NtkFxuCollectInfo169,5152
void Abc_NtkFxuFreeInfo( Fxu_Data_t * p )Abc_NtkFxuFreeInfo207,6394
void Abc_NtkFxuReconstruct( Abc_Ntk_t * pNtk, Fxu_Data_t * p )Abc_NtkFxuReconstruct234,7213

src/base/abci/abcFlop.c,0

src/base/abci/abcNpnSave.c,2744
typedef struct Npn_Obj_t_ Npn_Obj_t;Npn_Obj_t31,837
typedef struct Npn_Man_t_ Npn_Man_t;Npn_Man_t32,874
struct Npn_Obj_t_Npn_Obj_t_34,912
    word         uTruth;      // truth tableuTruth36,932
    int          Count;       // occurrencesCount37,977
    int          iNext;       // next entryiNext38,1022
struct Npn_Man_t_Npn_Man_t_40,1069
    Npn_Obj_t *  pBuffer;     // all NPN entriespBuffer42,1089
    int *        pBins;       // hash tablepBins43,1138
    int          nBins;       // hash table sizenBins44,1182
    int          nBufferSize; // buffer sizenBufferSize45,1231
    int          nEntries;    // entry countnEntries46,1276
static inline Npn_Obj_t * Npn_ManObj( Npn_Man_t * p, int i )                 { assert( i < p->nBufferSize ); return i ? p->pBuffer + i : NULL;  }Npn_ManObj49,1325
static inline int         Npn_ManObjNum( Npn_Man_t * p, Npn_Obj_t * pObj )   { assert( p->pBuffer < pObj );  return pObj - p->pBuffer;          }Npn_ManObjNum50,1471
static word Truth[8] = {Truth52,1618
static Npn_Man_t * pNpnMan = NULL;pNpnMan63,1926
void Npn_TruthPermute_rec( char * pStr, int mid, int end )Npn_TruthPermute_rec80,2416
static inline int Npn_TruthHasVar( word t, int v )Npn_TruthHasVar117,3183
static inline int Npn_TruthSupport( word t )Npn_TruthSupport133,3531
static inline int Npn_TruthSuppSize( word t, int nVars )Npn_TruthSuppSize153,3952
static inline int Npn_TruthIsMinBase( word t )Npn_TruthIsMinBase174,4408
word Npn_TruthPadWord( word uTruth, int nVars )Npn_TruthPadWord191,4765
static inline int Npn_TruthCountOnes( word t )Npn_TruthCountOnes221,5908
static inline word Npn_TruthChangePhase( word t, int v )Npn_TruthChangePhase242,6713
static inline word Npn_TruthSwapAdjacentVars( word t, int v )Npn_TruthSwapAdjacentVars258,7078
static inline word Npn_TruthCanon( word t, int nVars, int * pPhase )Npn_TruthCanon282,8065
static inline int Npn_ManHash( Npn_Man_t * p, word uTruth )Npn_ManHash374,10523
void Npn_ManResize( Npn_Man_t * p )Npn_ManResize391,10964
Npn_Obj_t * Npn_ManAdd( Npn_Man_t * p, word uTruth )Npn_ManAdd437,12354
void Npn_ManRead( Npn_Man_t * p, char * pFileName )Npn_ManRead482,13603
static int Npn_ManCompareEntries( Npn_Obj_t ** pp1, Npn_Obj_t ** pp2 )Npn_ManCompareEntries532,15008
void Npn_ManWrite( Npn_Man_t * p, char * pFileName )Npn_ManWrite552,15481
Npn_Man_t * Npn_ManStart( char * pFileName )Npn_ManStart588,16604
void Npn_ManStop( Npn_Man_t * p )Npn_ManStop631,17853
void Npn_ManClean()Npn_ManClean649,18218
void Npn_ManLoad( char * pFileName )Npn_ManLoad669,18600
void Npn_ManSave( char * pFileName )Npn_ManSave692,19253
void Npn_ManSaveOne( unsigned * puTruth, int nVars )Npn_ManSaveOne714,19819

src/base/abci/abcNpn.c,1374
typedef struct Abc_TtStore_t_  Abc_TtStore_t;Abc_TtStore_t42,1123
struct Abc_TtStore_t_ Abc_TtStore_t_43,1169
    int                nVars;nVars45,1194
    int                nWords;nWords46,1224
    int                nFuncs;nFuncs47,1255
    word **            pFuncs;pFuncs48,1286
static inline int Abc_TruthHashKey( word * pFunc, int nWords, int nTableSize )Abc_TruthHashKey71,2097
static inline int Abc_TruthHashLookup( word ** pFuncs, int iThis, int nWords, int * pTable, int * pNexts, int Key )Abc_TruthHashLookup81,2493
int Abc_TruthNpnCountUnique( Abc_TtStore_t * p )Abc_TruthNpnCountUnique90,2858
int nWords = 0; // unfortunate global variablenWords127,4060
int Abc_TruthCompare( word ** p1, word ** p2 ) { return memcmp(*p1, *p2, sizeof(word) * nWords); }Abc_TruthCompare128,4107
int Abc_TruthNpnCountUniqueSort( Abc_TtStore_t * p )Abc_TruthNpnCountUniqueSort129,4206
void Abc_TruthNpnPrint( char * pCanonPermInit, unsigned uCanonPhase, int nVars )Abc_TruthNpnPrint154,4971
void Abc_TruthNpnPerform( Abc_TtStore_t * p, int NpnType, int fVerbose )Abc_TruthNpnPerform177,5782
void Abc_TruthNpnTest( char * pFileName, int NpnType, int nVarNum, int fDumpRes, int fBinary, int fVerbose )Abc_TruthNpnTest376,13945
int Abc_NpnTest( char * pFileName, int NpnType, int nVarNum, int fDumpRes, int fBinary, int fVerbose )Abc_NpnTest418,15174

src/base/abci/abcAttach.c,982
#define    ATTACH_FULL ATTACH_FULL32,869
#define    ATTACH_MASK(ATTACH_MASK33,921
static char ** s_pPerms = NULL;s_pPerms42,1614
static int s_nPerms;s_nPerms43,1646
int Abc_NtkAttach( Abc_Ntk_t * pNtk )Abc_NtkAttach60,2184
int Abc_NodeAttach( Abc_Obj_t * pNode, Mio_Gate_t ** ppGates, unsigned ** puTruthGates, int nGates, unsigned uTruths[][2] )Abc_NodeAttach173,5709
void Abc_AttachSetupTruthTables( unsigned uTruths[][2] )Abc_AttachSetupTruthTables210,6821
void Abc_AttachComputeTruth( char * pSop, unsigned uTruthsIn[][2], unsigned * uTruthRes )Abc_AttachComputeTruth238,7580
Mio_Gate_t * Abc_AttachFind( Mio_Gate_t ** ppGates, unsigned ** puTruthGates, int nGates, unsigned * uTruthNode, int * Perm )Abc_AttachFind323,10207
int Abc_AttachCompare( unsigned ** puTruthGates, int nGates, unsigned * uTruthNode )Abc_AttachCompare366,11400
void Abc_TruthPermute( char * pPerm, int nVars, unsigned * uTruthNode, unsigned * uTruthPerm )Abc_TruthPermute386,11930

src/base/abci/abcSymm.c,843
void Abc_NtkSymmetries( Abc_Ntk_t * pNtk, int fUseBdds, int fNaive, int fReorder, int fVerbose )Abc_NtkSymmetries59,1819
void Abc_NtkSymmetriesUsingSandS( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkSymmetriesUsingSandS78,2367
void Abc_NtkSymmetriesUsingBdds( Abc_Ntk_t * pNtk, int fNaive, int fReorder, int fVerbose )Abc_NtkSymmetriesUsingBdds96,2927
void Ntk_NetworkSymmsBdd( DdManager * dd, Abc_Ntk_t * pNtk, int fNaive, int fVerbose )Ntk_NetworkSymmsBdd136,4340
void Ntk_NetworkSymmsPrint( Abc_Ntk_t * pNtk, Extra_SymmInfo_t * pSymms )Ntk_NetworkSymmsPrint181,5746
void Ntk_SymTryRandomFlips( word * pFun, word * pNpn, int nVars )Ntk_SymTryRandomFlips253,7667
void Ntk_SymFunDeriveNpn( word * pFun, int nVars, int * pComp )Ntk_SymFunDeriveNpn276,8440
void Ntk_SymFunGenerate( int nVars, int fVerbose )Ntk_SymFunGenerate308,9504

src/base/abci/abcHaig.c,1715
Vec_Ptr_t * Abc_NtkHaigCollectMembers( Hop_Man_t * p )Abc_NtkHaigCollectMembers46,1301
Vec_Ptr_t * Abc_NtkHaigCreateClasses( Vec_Ptr_t * vMembers )Abc_NtkHaigCreateClasses73,1925
int Abc_NtkHaigCountFans( Hop_Man_t * p )Abc_NtkHaigCountFans159,4197
static inline Hop_Obj_t * Hop_ObjReprHop( Hop_Obj_t * pObj )Hop_ObjReprHop186,4808
static inline Hop_Obj_t * Hop_ObjChild0Hop( Hop_Obj_t * pObj ) { return Hop_NotCond( Hop_ObjReprHop(Hop_ObjFanin0(pObj)), Hop_ObjFaninC0(pObj) ); }Hop_ObjChild0Hop208,5370
static inline Hop_Obj_t * Hop_ObjChild1Hop( Hop_Obj_t * pObj ) { return Hop_NotCond( Hop_ObjReprHop(Hop_ObjFanin1(pObj)), Hop_ObjFaninC1(pObj) ); }Hop_ObjChild1Hop209,5518
Hop_Man_t * Abc_NtkHaigReconstruct( Hop_Man_t * p )Abc_NtkHaigReconstruct222,5919
int Abc_NtkHaigCheckTfi_rec( Abc_Obj_t * pNode, Abc_Obj_t * pOld )Abc_NtkHaigCheckTfi_rec276,7647
int Abc_NtkHaigCheckTfi( Abc_Ntk_t * pNtk, Abc_Obj_t * pOld, Abc_Obj_t * pNew )Abc_NtkHaigCheckTfi311,8665
static inline Abc_Obj_t * Hop_ObjChild0Next( Hop_Obj_t * pObj ) { return Abc_ObjNotCond( (Abc_Obj_t *)Hop_ObjFanin0(pObj)->pNext, Hop_ObjFaninC0(pObj) );  }Hop_ObjChild0Next330,9152
static inline Abc_Obj_t * Hop_ObjChild1Next( Hop_Obj_t * pObj ) { return Abc_ObjNotCond( (Abc_Obj_t *)Hop_ObjFanin1(pObj)->pNext, Hop_ObjFaninC1(pObj) );  }Hop_ObjChild1Next331,9309
Abc_Ntk_t * Abc_NtkHaigRecreateAig( Abc_Ntk_t * pNtk, Hop_Man_t * p )Abc_NtkHaigRecreateAig344,9719
void Abc_NtkHaigResetReprsOld( Hop_Man_t * pMan )Abc_NtkHaigResetReprsOld429,12663
int Abc_NtkHaigResetReprs( Hop_Man_t * p )Abc_NtkHaigResetReprs457,13479
Abc_Ntk_t * Abc_NtkHopRemoveLoops( Abc_Ntk_t * pNtk, Hop_Man_t * pMan )Abc_NtkHopRemoveLoops533,15800

src/base/abci/abcUnreach.c,617
int Abc_NtkExtractSequentialDcs( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkExtractSequentialDcs56,1820
DdNode * Abc_NtkTransitionRelation( DdManager * dd, Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkTransitionRelation127,4348
DdNode * Abc_NtkInitStateAndVarMap( DdManager * dd, Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkInitStateAndVarMap190,6619
DdNode * Abc_NtkComputeUnreachable( DdManager * dd, Abc_Ntk_t * pNtk, DdNode * bTrans, DdNode * bInitial, int fVerbose )Abc_NtkComputeUnreachable229,7850
Abc_Ntk_t * Abc_NtkConstructExdc( DdManager * dd, Abc_Ntk_t * pNtk, DdNode * bUnreach )Abc_NtkConstructExdc290,10560

src/base/abci/abcIvy.c,4099
typedef int   Abc_Edge_t;Abc_Edge_t55,2121
static inline Abc_Edge_t   Abc_EdgeCreate( int Id, int fCompl )                { return (Id << 1) | fCompl;             }Abc_EdgeCreate56,2147
static inline int          Abc_EdgeId( Abc_Edge_t Edge )                       { return Edge >> 1;                      }Abc_EdgeId57,2269
static inline int          Abc_EdgeIsComplement( Abc_Edge_t Edge )             { return Edge & 1;                       }Abc_EdgeIsComplement58,2391
static inline Abc_Edge_t   Abc_EdgeRegular( Abc_Edge_t Edge )                  { return (Edge >> 1) << 1;               }Abc_EdgeRegular59,2513
static inline Abc_Edge_t   Abc_EdgeNot( Abc_Edge_t Edge )                      { return Edge ^ 1;                       }Abc_EdgeNot60,2635
static inline Abc_Edge_t   Abc_EdgeNotCond( Abc_Edge_t Edge, int fCond )       { return Edge ^ fCond;                   }Abc_EdgeNotCond61,2757
static inline Abc_Edge_t   Abc_EdgeFromNode( Abc_Obj_t * pNode )               { return Abc_EdgeCreate( Abc_ObjRegular(pNode)->Id, Abc_ObjIsComplement(pNode) );       }Abc_EdgeFromNode62,2879
static inline Abc_Obj_t *  Abc_EdgeToNode( Abc_Ntk_t * p, Abc_Edge_t Edge )    { return Abc_ObjNotCond( Abc_NtkObj(p, Abc_EdgeId(Edge)), Abc_EdgeIsComplement(Edge) ); }Abc_EdgeToNode63,3048
static inline Abc_Obj_t *  Abc_ObjFanin0Ivy( Abc_Ntk_t * p, Ivy_Obj_t * pObj ) { return Abc_ObjNotCond( Abc_EdgeToNode(p, Ivy_ObjFanin0(pObj)->TravId), Ivy_ObjFaninC0(pObj) ); }Abc_ObjFanin0Ivy65,3218
static inline Abc_Obj_t *  Abc_ObjFanin1Ivy( Abc_Ntk_t * p, Ivy_Obj_t * pObj ) { return Abc_ObjNotCond( Abc_EdgeToNode(p, Ivy_ObjFanin1(pObj)->TravId), Ivy_ObjFaninC1(pObj) ); }Abc_ObjFanin1Ivy66,3396
Ivy_Man_t * Abc_NtkIvyBefore( Abc_Ntk_t * pNtk, int fSeq, int fUseDc )Abc_NtkIvyBefore87,4161
Abc_Ntk_t * Abc_NtkIvyAfter( Abc_Ntk_t * pNtk, Ivy_Man_t * pMan, int fSeq, int fHaig )Abc_NtkIvyAfter140,5750
Abc_Ntk_t * Abc_NtkIvyStrash( Abc_Ntk_t * pNtk )Abc_NtkIvyStrash176,6898
Abc_Ntk_t * Abc_NtkIvyHaig( Abc_Ntk_t * pNtk, int nIters, int fUseZeroCost, int fVerbose )Abc_NtkIvyHaig199,7478
void Abc_NtkIvyCuts( Abc_Ntk_t * pNtk, int nInputs )Abc_NtkIvyCuts267,9319
Abc_Ntk_t * Abc_NtkIvyRewrite( Abc_Ntk_t * pNtk, int fUpdateLevel, int fUseZeroCost, int fVerbose )Abc_NtkIvyRewrite288,9841
Abc_Ntk_t * Abc_NtkIvyRewriteSeq( Abc_Ntk_t * pNtk, int fUseZeroCost, int fVerbose )Abc_NtkIvyRewriteSeq314,10609
Abc_Ntk_t * Abc_NtkIvyResyn0( Abc_Ntk_t * pNtk, int fUpdateLevel, int fVerbose )Abc_NtkIvyResyn0342,11426
Abc_Ntk_t * Abc_NtkIvyResyn( Abc_Ntk_t * pNtk, int fUpdateLevel, int fVerbose )Abc_NtkIvyResyn367,12138
Abc_Ntk_t * Abc_NtkIvySat( Abc_Ntk_t * pNtk, int nConfLimit, int fVerbose )Abc_NtkIvySat392,12848
void Abc_NtkTransferPointers( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkAig )Abc_NtkTransferPointers422,13755
Abc_Ntk_t * Abc_NtkIvyFraig( Abc_Ntk_t * pNtk, int nConfLimit, int fDoSparse, int fProve, int fTransfer, int fVerbose )Abc_NtkIvyFraig459,14934
int Abc_NtkIvyProve( Abc_Ntk_t ** ppNtk, void * pPars )Abc_NtkIvyProve502,16311
Abc_Ntk_t * Abc_NtkIvy( Abc_Ntk_t * pNtk )Abc_NtkIvy631,20884
Abc_Ntk_t * Abc_NtkFromIvy( Abc_Ntk_t * pNtkOld, Ivy_Man_t * pMan )Abc_NtkFromIvy744,23899
Abc_Ntk_t * Abc_NtkFromIvySeq( Abc_Ntk_t * pNtkOld, Ivy_Man_t * pMan, int fHaig )Abc_NtkFromIvySeq800,25830
Ivy_Man_t * Abc_NtkToIvy( Abc_Ntk_t * pNtkOld )Abc_NtkToIvy898,29593
void Abc_NtkStrashPerformAig( Abc_Ntk_t * pNtk, Ivy_Man_t * pMan )Abc_NtkStrashPerformAig936,30723
Ivy_Obj_t * Abc_NodeStrashAig( Ivy_Man_t * pMan, Abc_Obj_t * pNode )Abc_NodeStrashAig964,31510
Ivy_Obj_t * Abc_NodeStrashAigSopAig( Ivy_Man_t * pMan, Abc_Obj_t * pNode, char * pSop )Abc_NodeStrashAigSopAig1011,33046
Ivy_Obj_t * Abc_NodeStrashAigExorAig( Ivy_Man_t * pMan, Abc_Obj_t * pNode, char * pSop )Abc_NodeStrashAigExorAig1058,34506
Ivy_Obj_t * Abc_NodeStrashAigFactorAig( Ivy_Man_t * pMan, Abc_Obj_t * pRoot, char * pSop )Abc_NodeStrashAigFactorAig1089,35397
Vec_Int_t * Abc_NtkCollectLatchValuesIvy( Abc_Ntk_t * pNtk, int fUseDcs )Abc_NtkCollectLatchValuesIvy1125,36335

src/base/abci/abcReach.c,623
DdNode * Abc_NtkInitStateVarMap( DdManager * dd, Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkInitStateVarMap51,1386
DdNode ** Abc_NtkCreatePartitions( DdManager * dd, Abc_Ntk_t * pNtk, int fReorder, int fVerbose )Abc_NtkCreatePartitions90,2575
DdNode * Abc_NtkComputeReachable( DdManager * dd, Abc_Ntk_t * pNtk, DdNode ** pbParts, DdNode * bInitial, DdNode * bOutput, int nBddMax, int nIterMax, int fPartition, int fReorder, int fVerbose )Abc_NtkComputeReachable141,4259
void Abc_NtkVerifyUsingBdds( Abc_Ntk_t * pNtk, int nBddMax, int nIterMax, int fPartition, int fReorder, int fVerbose )Abc_NtkVerifyUsingBdds261,9297

src/base/abci/abcReorder.c,168
void Abc_NodeBddReorder( reo_man * p, Abc_Obj_t * pNode )Abc_NodeBddReorder50,1376
void Abc_NtkBddReorder( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkBddReorder82,2461

src/base/abci/abcBidec.c,442
static inline Hop_Obj_t * Bdc_FunCopyHop( Bdc_Fun_t * pObj )  { return Hop_NotCond( (Hop_Obj_t *)Bdc_FuncCopy(Bdc_Regular(pObj)), Bdc_IsComplement(pObj) );  }Bdc_FunCopyHop32,845
Hop_Obj_t * Abc_NodeIfNodeResyn( Bdc_Man_t * p, Hop_Man_t * pHop, Hop_Obj_t * pRoot, int nVars, Vec_Int_t * vTruth, unsigned * puCare, float dProb )Abc_NodeIfNodeResyn49,1502
void Abc_NtkBidecResyn( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkBidecResyn110,3616

src/base/abci/abcUnate.c,306
void Abc_NtkPrintUnate( Abc_Ntk_t * pNtk, int fUseBdds, int fUseNaive, int fVerbose )Abc_NtkPrintUnate53,1503
void Abc_NtkPrintUnateBdd( Abc_Ntk_t * pNtk, int fUseNaive, int fVerbose )Abc_NtkPrintUnateBdd72,2012
void Abc_NtkPrintUnateSat( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkPrintUnateSat162,4862

src/base/abci/abcLog.c,240
void Abc_NtkWriteLogFile( char * pFileName, Abc_Cex_t * pCex, int Status, int nFrames, char * pCommand )Abc_NtkWriteLogFile68,2070
int Abc_NtkReadLogFile( char * pFileName, Abc_Cex_t ** ppCex, int * pnFrames )Abc_NtkReadLogFile132,3928

src/base/abci/abcEco.c,59
void Abc_NtkEco( char * pFileNames[3] )Abc_NtkEco48,1292

src/base/abci/abcDar.c,11208
int Abc_ObjCompareById( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_ObjCompareById61,1681
void Abc_CollectTopOr_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vSuper )Abc_CollectTopOr_rec77,2082
void Abc_CollectTopOr( Abc_Obj_t * pObj, Vec_Ptr_t * vSuper )Abc_CollectTopOr88,2423
Aig_Man_t * Abc_NtkToDarBmc( Abc_Ntk_t * pNtk, Vec_Int_t ** pvMap )Abc_NtkToDarBmc111,3080
Vec_Int_t * Abc_NtkFindDcLatches( Abc_Ntk_t * pNtk )Abc_NtkFindDcLatches207,6480
Aig_Man_t * Abc_NtkToDar( Abc_Ntk_t * pNtk, int fExors, int fRegisters )Abc_NtkToDar233,7192
Aig_Man_t * Abc_NtkToDarChoices( Abc_Ntk_t * pNtk )Abc_NtkToDarChoices355,11962
Abc_Ntk_t * Abc_NtkFromDar( Abc_Ntk_t * pNtkOld, Aig_Man_t * pMan )Abc_NtkFromDar415,14227
Abc_Ntk_t * Abc_NtkFromDarSeqSweep( Abc_Ntk_t * pNtkOld, Aig_Man_t * pMan )Abc_NtkFromDarSeqSweep469,16208
Abc_Ntk_t * Abc_NtkFromAigPhase( Aig_Man_t * pMan )Abc_NtkFromAigPhase591,21561
Hop_Obj_t * Abc_ObjHopFromGia_rec( Hop_Man_t * pHopMan, Gia_Man_t * p, int Id, Vec_Ptr_t * vCopies )Abc_ObjHopFromGia_rec673,24562
Hop_Obj_t * Abc_ObjHopFromGia( Hop_Man_t * pHopMan, Gia_Man_t * p, int GiaId, Vec_Ptr_t * vCopies )Abc_ObjHopFromGia690,25370
Abc_Obj_t * Abc_NtkFromMappedGia_rec( Abc_Ntk_t * pNtkNew, Gia_Man_t * p, int iObj, int fAddInv )Abc_NtkFromMappedGia_rec715,26123
Abc_Ntk_t * Abc_NtkFromMappedGia( Gia_Man_t * p, int fFindEnables, int fUseBuffs )Abc_NtkFromMappedGia737,27207
static inline void Abc_NtkFromCellWrite( Vec_Int_t * vCopyLits, int i, int c, int Id )Abc_NtkFromCellWrite913,35128
static inline Abc_Obj_t * Abc_NtkFromCellRead( Abc_Ntk_t * p, Vec_Int_t * vCopyLits, int i, int c )Abc_NtkFromCellRead917,35278
Abc_Ntk_t * Abc_NtkFromCellMappedGia( Gia_Man_t * p, int fUseBuffs )Abc_NtkFromCellMappedGia935,35966
Abc_Ntk_t * Abc_NtkAfterTrim( Aig_Man_t * pMan, Abc_Ntk_t * pNtkOld )Abc_NtkAfterTrim1088,42584
Abc_Ntk_t * Abc_NtkFromDarChoices( Abc_Ntk_t * pNtkOld, Aig_Man_t * pMan )Abc_NtkFromDarChoices1176,46099
Abc_Ntk_t * Abc_NtkFromDarSeq( Abc_Ntk_t * pNtkOld, Aig_Man_t * pMan )Abc_NtkFromDarSeq1236,48127
Vec_Ptr_t * Abc_NtkCollectCiNames( Abc_Ntk_t * pNtk )Abc_NtkCollectCiNames1310,50789
Vec_Ptr_t * Abc_NtkCollectCoNames( Abc_Ntk_t * pNtk )Abc_NtkCollectCoNames1332,51325
Vec_Int_t * Abc_NtkGetLatchValues( Abc_Ntk_t * pNtk )Abc_NtkGetLatchValues1354,51855
Abc_Ntk_t * Abc_NtkDar( Abc_Ntk_t * pNtk )Abc_NtkDar1385,52676
Abc_Ntk_t * Abc_NtkDarFraig( Abc_Ntk_t * pNtk, int nConfLimit, int fDoSparse, int fProve, int fTransfer, int fSpeculate, int fChoicing, int fVerbose )Abc_NtkDarFraig1424,53675
Abc_Ntk_t * Abc_NtkDarFraigPart( Abc_Ntk_t * pNtk, int nPartSize, int nConfLimit, int nLevelMax, int fVerbose )Abc_NtkDarFraigPart1460,54811
Abc_Ntk_t * Abc_NtkCSweep( Abc_Ntk_t * pNtk, int nCutsMax, int nLeafMax, int fVerbose )Abc_NtkCSweep1485,55573
Abc_Ntk_t * Abc_NtkDRewrite( Abc_Ntk_t * pNtk, Dar_RwrPar_t * pPars )Abc_NtkDRewrite1511,56381
Abc_Ntk_t * Abc_NtkDRefactor( Abc_Ntk_t * pNtk, Dar_RefPar_t * pPars )Abc_NtkDRefactor1555,57527
Abc_Ntk_t * Abc_NtkDC2( Abc_Ntk_t * pNtk, int fBalance, int fUpdateLevel, int fFanout, int fPower, int fVerbose )Abc_NtkDC21592,58507
Abc_Ntk_t * Abc_NtkDChoice( Abc_Ntk_t * pNtk, int fBalance, int fUpdateLevel, int fConstruct, int nConfMax, int nLevelMax, int fVerbose )Abc_NtkDChoice1625,59453
Abc_Ntk_t * Abc_NtkDch( Abc_Ntk_t * pNtk, Dch_Pars_t * pPars )Abc_NtkDch1651,60298
Abc_Ntk_t * Abc_NtkDrwsat( Abc_Ntk_t * pNtk, int fBalance, int fVerbose )Abc_NtkDrwsat1698,61736
Abc_Ntk_t * Abc_NtkConstructFromCnf( Abc_Ntk_t * pNtk, Cnf_Man_t * p, Vec_Ptr_t * vMapped )Abc_NtkConstructFromCnf1731,62607
Abc_Ntk_t * Abc_NtkDarToCnf( Abc_Ntk_t * pNtk, char * pFileName, int fFastAlgo, int fChangePol, int fVerbose )Abc_NtkDarToCnf1803,65402
int Abc_NtkDSat( Abc_Ntk_t * pNtk, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, int nLearnedStart, int nLearnedDelta, int nLearnedPerce, int fAlignPol, int fAndOuts, int fNewSolver, int fVerbose )Abc_NtkDSat1871,67228
int Abc_NtkPartitionedSat( Abc_Ntk_t * pNtk, int nAlgo, int nPartSize, int nConfPart, int nConfTotal, int fAlignPol, int fSynthesize, int fVerbose )Abc_NtkPartitionedSat1896,68187
int Abc_NtkDarCec( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nConfLimit, int fPartition, int fVerbose )Abc_NtkDarCec1921,69203
Abc_Ntk_t * Abc_NtkDarSeqSweep( Abc_Ntk_t * pNtk, Fra_Ssw_t * pPars )Abc_NtkDarSeqSweep2038,72707
void Abc_NtkPrintLatchEquivClasses( Abc_Ntk_t * pNtk, Aig_Man_t * pAig )Abc_NtkPrintLatchEquivClasses2097,74368
Abc_Ntk_t * Abc_NtkDarSeqSweep2( Abc_Ntk_t * pNtk, Ssw_Pars_t * pPars )Abc_NtkDarSeqSweep22187,77032
Abc_Ntk_t * Abc_NtkDarLcorr( Abc_Ntk_t * pNtk, int nFramesP, int nConfMax, int fVerbose )Abc_NtkDarLcorr2230,78087
Abc_Ntk_t * Abc_NtkDarLcorrNew( Abc_Ntk_t * pNtk, int nVarsMax, int nConfMax, int fVerbose )Abc_NtkDarLcorrNew2267,79147
int Abc_NtkDarBmc( Abc_Ntk_t * pNtk, int nStart, int nFrames, int nSizeMax, int nNodeDelta, int nTimeOut, int nBTLimit, int nBTLimitAll, int fRewrite, int fNewAlgo, int fOrDecomp, int nCofFanLit, int fVerbose, int * piFrames, int fUseSatoko )Abc_NtkDarBmc2322,80614
int Abc_NtkDarBmc3( Abc_Ntk_t * pNtk, Saig_ParBmc_t * pPars, int fOrDecomp )Abc_NtkDarBmc32404,83786
int Abc_NtkDarBmcInter_int( Aig_Man_t * pMan, Inter_ManParams_t * pPars, Aig_Man_t ** ppNtkRes )Abc_NtkDarBmcInter_int2510,88064
int Abc_NtkDarBmcInter( Abc_Ntk_t * pNtk, Inter_ManParams_t * pPars, Abc_Ntk_t ** ppNtkRes )Abc_NtkDarBmcInter2619,92217
int Abc_NtkDarDemiter( Abc_Ntk_t * pNtk )Abc_NtkDarDemiter2660,93349
int Abc_NtkDarDemiterNew( Abc_Ntk_t * pNtk )Abc_NtkDarDemiterNew2711,95202
int Abc_NtkDarDemiterDual( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkDarDemiterDual2764,96972
int Abc_NtkDarProve( Abc_Ntk_t * pNtk, Fra_Sec_t * pSecPar, int nBmcFramesMax, int nBmcConfMax )Abc_NtkDarProve2834,99363
int Abc_NtkDarSec( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, Fra_Sec_t * pSecPar )Abc_NtkDarSec2946,103315
int Abc_NtkDarPdr( Abc_Ntk_t * pNtk, Pdr_Par_t * pPars )Abc_NtkDarPdr3034,106292
int Abc_NtkDarAbSec( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nFrames, int fVerbose )Abc_NtkDarAbSec3112,109000
int Abc_NtkDarSimSec( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, Ssw_Pars_t * pPars )Abc_NtkDarSimSec3177,110931
Abc_Ntk_t * Abc_NtkDarMatch( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nDist, int fVerbose )Abc_NtkDarMatch3220,112009
Abc_Ntk_t * Abc_NtkDarLatchSweep( Abc_Ntk_t * pNtk, int fLatchConst, int fLatchEqual, int fSaveNames, int fUseMvSweep, int nFramesSymb, int nFramesSatur, int fVerbose, int fVeryVerbose )Abc_NtkDarLatchSweep3272,113537
Abc_Ntk_t * Abc_NtkDarRetime( Abc_Ntk_t * pNtk, int nStepsMax, int fVerbose )Abc_NtkDarRetime3314,114973
Abc_Ntk_t * Abc_NtkDarRetimeF( Abc_Ntk_t * pNtk, int nStepsMax, int fVerbose )Abc_NtkDarRetimeF3348,115910
Abc_Ntk_t * Abc_NtkDarRetimeMostFwd( Abc_Ntk_t * pNtk, int nMaxIters, int fVerbose )Abc_NtkDarRetimeMostFwd3382,116843
Abc_Ntk_t * Abc_NtkDarRetimeMinArea( Abc_Ntk_t * pNtk, int nMaxIters, int fForwardOnly, int fBackwardOnly, int fInitial, int fVerbose )Abc_NtkDarRetimeMinArea3418,117882
Abc_Ntk_t * Abc_NtkDarRetimeStep( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkDarRetimeStep3449,118931
int Abc_NtkDarSeqSim( Abc_Ntk_t * pNtk, int nFrames, int nWords, int TimeOut, int fNew, int fMiter, int fVerbose, char * pFileSim )Abc_NtkDarSeqSim3513,120640
int Abc_NtkDarSeqSim3( Abc_Ntk_t * pNtk, Ssw_RarPars_t * pPars )Abc_NtkDarSeqSim33611,124147
int Abc_NtkDarClau( Abc_Ntk_t * pNtk, int nFrames, int nPref, int nClauses, int nLutSize, int nLevels, int nCutsMax, int nBatches, int fStepUp, int fBmc, int fRefs, int fTarget, int fVerbose, int fVeryVerbose )Abc_NtkDarClau3662,125923
Abc_Ntk_t * Abc_NtkDarEnlarge( Abc_Ntk_t * pNtk, int nFrames, int fVerbose )Abc_NtkDarEnlarge3697,127328
Abc_Ntk_t * Abc_NtkDarTempor( Abc_Ntk_t * pNtk, int nFrames, int TimeOut, int nConfLimit, int fUseBmc, int fUseTransSigs, int fVerbose, int fVeryVerbose )Abc_NtkDarTempor3722,128003
int Abc_NtkDarInduction( Abc_Ntk_t * pNtk, int nTimeOut, int nFramesMax, int nConfMax, int fUnique, int fUniqueAll, int fGetCex, int fVerbose, int fVeryVerbose )Abc_NtkDarInduction3750,129037
Abc_Ntk_t * Abc_NtkInterOne( Abc_Ntk_t * pNtkOn, Abc_Ntk_t * pNtkOff, int fRelation, int fVerbose )Abc_NtkInterOne3796,130360
Gia_Man_t * Gia_ManInterOne( Gia_Man_t * pNtkOn, Gia_Man_t * pNtkOff, int fVerbose )Gia_ManInterOne3839,131784
void Abc_NtkInterFast( Abc_Ntk_t * pNtkOn, Abc_Ntk_t * pNtkOff, int fVerbose )Abc_NtkInterFast3880,133053
abctime timeCnf;timeCnf3896,133570
abctime timeSat;timeSat3897,133587
abctime timeInt;timeInt3898,133604
Abc_Ntk_t * Abc_NtkInter( Abc_Ntk_t * pNtkOn, Abc_Ntk_t * pNtkOff, int fRelation, int fVerbose )Abc_NtkInter3911,133881
void Abc_NtkPrintSccs( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkPrintSccs3986,136434
int Abc_NtkDarPrintCone( Abc_Ntk_t * pNtk )Abc_NtkDarPrintCone4009,137021
Abc_Ntk_t * Abc_NtkBalanceExor( Abc_Ntk_t * pNtk, int fUpdateLevel, int fVerbose )Abc_NtkBalanceExor4033,137574
Abc_Ntk_t * Abc_NtkPhaseAbstract( Abc_Ntk_t * pNtk, int nFrames, int nPref, int fIgnore, int fPrint, int fVerbose )Abc_NtkPhaseAbstract4067,138543
int Abc_NtkPhaseFrameNum( Abc_Ntk_t * pNtk )Abc_NtkPhaseFrameNum4100,139672
Abc_Ntk_t * Abc_NtkDarSynchOne( Abc_Ntk_t * pNtk, int nWords, int fVerbose )Abc_NtkDarSynchOne4127,140369
Abc_Ntk_t * Abc_NtkDarSynch( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nWords, int fVerbose )Abc_NtkDarSynch4155,141176
Abc_Ntk_t * Abc_NtkDarClockGate( Abc_Ntk_t * pNtk, Abc_Ntk_t * pCare, Cgt_Par_t * pPars )Abc_NtkDarClockGate4192,142251
Abc_Ntk_t * Abc_NtkDarExtWin( Abc_Ntk_t * pNtk, int nObjId, int nDist, int fVerbose )Abc_NtkDarExtWin4230,143205
Abc_Ntk_t * Abc_NtkDarInsWin( Abc_Ntk_t * pNtk, Abc_Ntk_t * pCare, int nObjId, int nDist, int fVerbose )Abc_NtkDarInsWin4287,144858
Abc_Ntk_t * Abc_NtkDarFrames( Abc_Ntk_t * pNtk, int nPrefix, int nFrames, int fInit, int fVerbose )Abc_NtkDarFrames4353,146686
Abc_Ntk_t * Abc_NtkDarCleanupAig( Abc_Ntk_t * pNtk, int fCleanupPis, int fCleanupPos, int fVerbose )Abc_NtkDarCleanupAig4382,147544
int Abc_NtkDarReach( Abc_Ntk_t * pNtk, Saig_ParBbr_t * pPars )Abc_NtkDarReach4419,148776
Abc_Ntk_t * Amap_ManProduceNetwork( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMapping )Amap_ManProduceNetwork4453,149530
Abc_Ntk_t * Abc_NtkDarAmap( Abc_Ntk_t * pNtk, Amap_Par_t * pPars )Abc_NtkDarAmap4513,151767
void Abc_NtkDarConstr( Abc_Ntk_t * pNtk, int nFrames, int nConfs, int nProps, int fStruct, int fOldAlgo, int fVerbose )Abc_NtkDarConstr4558,153008
Abc_Ntk_t * Abc_NtkDarOutdec( Abc_Ntk_t * pNtk, int nLits, int fVerbose )Abc_NtkDarOutdec4583,153756
Abc_Ntk_t * Abc_NtkDarUnfold( Abc_Ntk_t * pNtk, int nFrames, int nConfs, int nProps, int fStruct, int fOldAlgo, int fVerbose )Abc_NtkDarUnfold4613,154621
Abc_Ntk_t * Abc_NtkDarFold( Abc_Ntk_t * pNtk, int fCompl, int fVerbose )Abc_NtkDarFold4646,155659
void Abc_NtkDarConstrProfile( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkDarConstrProfile4674,156480
void Abc_NtkDarTest( Abc_Ntk_t * pNtk, int Num )Abc_NtkDarTest4724,158212
Abc_Ntk_t * Abc_NtkDarTestNtk( Abc_Ntk_t * pNtk )Abc_NtkDarTestNtk4811,160896

src/base/abci/abcBm.c,3324
#define FALSE FALSE37,1267
#define TRUE TRUE38,1283
void getDependencies(Abc_Ntk_t *pNtk, Vec_Int_t** iDep, Vec_Int_t** oDep)getDependencies46,1954
void initMatchList(Abc_Ntk_t *pNtk, Vec_Int_t** iDep, Vec_Int_t** oDep, Vec_Int_t** iMatch, int* iLastItem, Vec_Int_t** oMatch, int* oLastItem, int* iGroup, int* oGroup, int p_equivalence)initMatchList103,3669
void iSortDependencies(Abc_Ntk_t *pNtk, Vec_Int_t** iDep, int* oGroup)iSortDependencies201,6373
void oSortDependencies(Abc_Ntk_t *pNtk, Vec_Int_t** oDep, int* iGroup)oSortDependencies243,7614
int oSplitByDep(Abc_Ntk_t *pNtk, Vec_Int_t** oDep, Vec_Int_t** oMatch, int* oGroup, int* oLastItem, int* iGroup)oSplitByDep285,8836
int iSplitByDep(Abc_Ntk_t *pNtk, Vec_Int_t** iDep, Vec_Int_t** iMatch, int* iGroup, int* iLastItem, int* oGroup)iSplitByDep356,11139
Vec_Ptr_t ** findTopologicalOrder( Abc_Ntk_t * pNtk )findTopologicalOrder422,13325
int * Abc_NtkSimulateOneNode( Abc_Ntk_t * pNtk, int * pModel, int input, Vec_Ptr_t ** topOrder )Abc_NtkSimulateOneNode449,14064
int refineIOBySimulation(Abc_Ntk_t *pNtk, Vec_Int_t** iMatch, int* iLastItem, int * iGroup, Vec_Int_t** iDep, Vec_Int_t** oMatch, int* oLastItem, int * oGroup, Vec_Int_t** oDep, char * vPiValues, int * observability, Vec_Ptr_t ** topOrder)refineIOBySimulation510,15880
Abc_Ntk_t * Abc_NtkMiterBm( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, Vec_Ptr_t * iCurrMatch, Vec_Ptr_t * oCurrMatch )Abc_NtkMiterBm700,22911
int * pValues1__, * pValues2__;pValues1__808,26489
int * pValues1__, * pValues2__;pValues2__808,26489
void Abc_NtkVerifyReportError( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int * pModel, Vec_Int_t * mismatch )Abc_NtkVerifyReportError810,26522
int Abc_NtkMiterSatBm( Abc_Ntk_t * pNtk, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, int fVerbose, ABC_INT64_T * pNumConfs, ABC_INT64_T * pNumInspects)Abc_NtkMiterSatBm871,28786
int Abc_NtkBmSat( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, Vec_Ptr_t * iMatchPairs, Vec_Ptr_t * oMatchPairs, Vec_Int_t * mismatch, int mode)Abc_NtkBmSat967,31847
int checkEquivalence( Abc_Ntk_t * pNtk1, Vec_Int_t* matchedInputs1, Vec_Int_t * matchedOutputs1,checkEquivalence1063,34952
Abc_Ntk_t * computeCofactor(Abc_Ntk_t * pNtk, Vec_Ptr_t ** nodesInLevel, int * bitVector, Vec_Int_t * currInputs)computeCofactor1099,36146
FILE *matchFile;matchFile1183,39711
int matchNonSingletonOutputs(Abc_Ntk_t * pNtk1, Vec_Ptr_t ** nodesInLevel1, Vec_Int_t ** iMatch1, Vec_Int_t ** iDep1, Vec_Int_t * matchedInputs1, int * iGroup1, Vec_Int_t ** oMatch1, int * oGroup1,matchNonSingletonOutputs1185,39729
int match1by1(Abc_Ntk_t * pNtk1, Vec_Ptr_t ** nodesInLevel1, Vec_Int_t ** iMatch1, Vec_Int_t ** iDep1, Vec_Int_t * matchedInputs1, int * iGroup1, Vec_Int_t ** oMatch1, int * oGroup1,match1by11331,45805
float refineBySAT(Abc_Ntk_t * pNtk1, Vec_Int_t ** iMatch1, int * iGroup1, Vec_Int_t ** iDep1, int* iLastItem1, Vec_Int_t ** oMatch1, int * oGroup1, Vec_Int_t ** oDep1, int* oLastItem1, int * observability1,refineBySAT1576,55228
int checkListConsistency(Vec_Int_t ** iMatch1, Vec_Int_t ** oMatch1, Vec_Int_t ** iMatch2, Vec_Int_t ** oMatch2, int iLastItem1, int oLastItem1, int iLastItem2, int oLastItem2)checkListConsistency1758,63391
void bmGateWay( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int p_equivalence )bmGateWay1779,63969

src/base/abci/abcRestruct.c,4943
#define RST_RANDOM_UNSIGNED RST_RANDOM_UNSIGNED39,929
typedef struct Abc_ManRst_t_   Abc_ManRst_t;Abc_ManRst_t41,1039
struct Abc_ManRst_t_Abc_ManRst_t_42,1084
    Abc_Ntk_t *      pNtk;              // the network for restructuringpNtk45,1126
    int              nCutMax;           // the limit on the size of the supernodenCutMax47,1232
    int              fUpdateLevel;      // turns on watching the number of levelsfUpdateLevel48,1314
    int              fUseZeros;         // turns on zero-cost replacementsfUseZeros49,1396
    int              fVerbose;          // the verbosity flagfVerbose50,1471
    DdManager *      dd;                // the BDD managerdd52,1565
    Dsd_Manager_t *  pManDsd;           // the DSD managerpManDsd53,1624
    Vec_Ptr_t *      vVisited;          // temporaryvVisited54,1683
    Vec_Ptr_t *      vLeaves;           // temporaryvLeaves55,1736
    Vec_Ptr_t *      vDecs;             // temporaryvDecs56,1789
    Vec_Ptr_t *      vTemp;             // temporaryvTemp57,1842
    Vec_Int_t *      vSims;             // temporaryvSims58,1895
    Vec_Int_t *      vRands;            // temporaryvRands59,1948
    Vec_Int_t *      vOnes;             // temporaryvOnes60,2001
    Vec_Int_t *      vBinate;           // temporaryvBinate61,2054
    Vec_Int_t *      vTwos;             // temporaryvTwos62,2107
    int              nLastGain;nLastGain64,2183
    int              nCutsConsidered;nCutsConsidered65,2215
    int              nCutsExplored;nCutsExplored66,2253
    int              nNodesConsidered;nNodesConsidered67,2289
    int              nNodesRestructured;nNodesRestructured68,2328
    int              nNodesGained;nNodesGained69,2369
    int              timeCut;timeCut71,2430
    int              timeBdd;timeBdd72,2460
    int              timeDsd;timeDsd73,2490
    int              timeEval;timeEval74,2520
    int              timeRes;timeRes75,2551
    int              timeNtk;timeNtk76,2581
    int              timeTotal;timeTotal77,2611
int Abc_NtkRestructure( Abc_Ntk_t * pNtk, int nCutMax, int fUpdateLevel, int fUseZeros, int fVerbose )Abc_NtkRestructure106,3908
void Abc_RestructNodeDivisors( Abc_ManRst_t * p, Abc_Obj_t * pRoot, int nNodesSaved )Abc_RestructNodeDivisors217,7453
Dec_Graph_t * Abc_NodeRestructure( Abc_ManRst_t * p, Abc_Obj_t * pNode, Cut_Cut_t * pCutList )Abc_NodeRestructure288,9753
Dec_Graph_t * Abc_NodeRestructureCut( Abc_ManRst_t * p, Abc_Obj_t * pRoot, Cut_Cut_t * pCut )Abc_NodeRestructureCut324,10784
void Abc_NodeEdgeDsdPermute( Dec_Graph_t * pGraph, Abc_ManRst_t * pManRst, Vec_Int_t * vEdges, int fExor )Abc_NodeEdgeDsdPermute488,16043
void Abc_NodeEdgeDsdPushOrdered( Dec_Graph_t * pGraph, Vec_Int_t * vEdges, int Edge )Abc_NodeEdgeDsdPushOrdered562,18901
Dec_Edge_t Abc_NodeEvaluateDsd_rec( Dec_Graph_t * pGraph, Abc_ManRst_t * pManRst, Dsd_Node_t * pNodeDsd, int Required, int nNodesSaved, int * pnNodesAdded )Abc_NodeEvaluateDsd_rec590,19760
Dec_Graph_t * Abc_NodeEvaluateDsd( Abc_ManRst_t * pManRst, Dsd_Node_t * pNodeDsd, Abc_Obj_t * pRoot, int Required, int nNodesSaved, int * pnNodesAdded )Abc_NodeEvaluateDsd908,34012
Cut_Man_t * Abc_NtkStartCutManForRestruct( Abc_Ntk_t * pNtk, int nCutMax, int fDag )Abc_NtkStartCutManForRestruct961,35471
Abc_ManRst_t * Abc_NtkManRstStart( int nCutMax, int fUpdateLevel, int fUseZeros, int fVerbose )Abc_NtkManRstStart1000,36935
void Abc_NtkManRstStop( Abc_ManRst_t * p )Abc_NtkManRstStop1045,38363
void Abc_NtkManRstPrintStats( Abc_ManRst_t * p )Abc_NtkManRstPrintStats1072,39030
int Abc_Abc_NodeResubCollectDivs( Abc_ManRst_t * p, Abc_Obj_t * pRoot, Cut_Cut_t * pCut )Abc_Abc_NodeResubCollectDivs1101,39999
int Abc_NodeResubMffc_rec( Abc_Obj_t * pNode )Abc_NodeResubMffc_rec1145,41407
int Abc_NodeResubMffc( Abc_ManRst_t * p, Vec_Ptr_t * vDecs, int nLeaves, Abc_Obj_t * pRoot )Abc_NodeResubMffc1165,41911
void Abc_NodeMffcSimulate( Vec_Ptr_t * vDecs, int nLeaves, Vec_Int_t * vRands, Vec_Int_t * vSims )Abc_NodeMffcSimulate1204,43248
int Abc_NodeCheckFull( Abc_ManRst_t * p, Dec_Graph_t * pGraph )Abc_NodeCheckFull1239,44392
Dec_Graph_t * Abc_NodeMffcConstants( Abc_ManRst_t * p, Vec_Int_t * vSims )Abc_NodeMffcConstants1254,44724
Dec_Graph_t * Abc_NodeMffcSingleVar( Abc_ManRst_t * p, Vec_Int_t * vSims, int nNodes, Vec_Int_t * vOnes )Abc_NodeMffcSingleVar1284,45538
Dec_Graph_t * Abc_NodeMffcSingleNode( Abc_ManRst_t * p, Vec_Int_t * vSims, int nNodes, Vec_Int_t * vOnes )Abc_NodeMffcSingleNode1327,46845
Dec_Graph_t * Abc_NodeMffcDoubleNode( Abc_ManRst_t * p, Vec_Int_t * vSims, int nNodes, Vec_Int_t * vOnes )Abc_NodeMffcDoubleNode1363,48194
Dec_Graph_t * Abc_NodeResubEval( Abc_ManRst_t * p, Abc_Obj_t * pRoot, Cut_Cut_t * pCut )Abc_NodeResubEval1384,48695
Dec_Graph_t * Abc_NodeResubstitute( Abc_ManRst_t * p, Abc_Obj_t * pNode, Cut_Cut_t * pCutList )Abc_NodeResubstitute1465,50860

src/base/abci/abcMfs.c,1102
Vec_Ptr_t * Abc_NtkAssignIDs( Abc_Ntk_t * pNtk )Abc_NtkAssignIDs48,1322
Vec_Ptr_t * Abc_NtkAssignIDs2( Abc_Ntk_t * pNtk )Abc_NtkAssignIDs263,1788
Vec_Int_t * Abc_NtkAssignStarts( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes, int * pnTotal )Abc_NtkAssignStarts94,2640
void Abc_NtkFillTruthStore( word TruthStore[16][1<<10] )Abc_NtkFillTruthStore107,3072
Sfm_Ntk_t * Abc_NtkExtractMfs( Abc_Ntk_t * pNtk, int nFirstFixed )Abc_NtkExtractMfs143,4085
Sfm_Ntk_t * Abc_NtkExtractMfs2( Abc_Ntk_t * pNtk, int iPivot )Abc_NtkExtractMfs2216,7041
void Abc_NtkInsertMfs( Abc_Ntk_t * pNtk, Sfm_Ntk_t * p )Abc_NtkInsertMfs297,9919
int Abc_NtkPerformMfs( Abc_Ntk_t * pNtk, Sfm_Par_t * pPars )Abc_NtkPerformMfs348,11674
Abc_Ntk_t * Abc_NtkUnrollAndDrop( Abc_Ntk_t * p, int nFrames, int nFramesAdd, Vec_Int_t * vFlops, int * piPivot )Abc_NtkUnrollAndDrop398,13095
void Abc_NtkReinsertNodes( Abc_Ntk_t * p, Abc_Ntk_t * pNtk, int iPivot )Abc_NtkReinsertNodes476,15748
int Abc_NtkMfsAfterICheck( Abc_Ntk_t * p, int nFrames, int nFramesAdd, Vec_Int_t * vFlops, Sfm_Par_t * pPars )Abc_NtkMfsAfterICheck528,17451

src/base/abci/abcCollapse.c,2245
int Abc_NodeMinimumBase2( Abc_Obj_t * pNode )Abc_NodeMinimumBase256,1594
int Abc_NtkMinimumBase2( Abc_Ntk_t * pNtk )Abc_NtkMinimumBase291,2783
Abc_Obj_t * Abc_NodeFromGlobalBdds( Abc_Ntk_t * pNtkNew, DdManager * dd, DdNode * bFunc, int fReverse )Abc_NodeFromGlobalBdds121,3615
Abc_Ntk_t * Abc_NtkFromGlobalBdds( Abc_Ntk_t * pNtk, int fReverse )Abc_NtkFromGlobalBdds134,4273
void Abc_NtkDumpVariableOrder( Abc_Ntk_t * pNtk )Abc_NtkDumpVariableOrder198,6951
Abc_Ntk_t * Abc_NtkCollapse( Abc_Ntk_t * pNtk, int fBddSizeMax, int fDualRail, int fReorder, int fReverse, int fDumpOrder, int fVerbose )Abc_NtkCollapse207,7257
int Abc_NtkClpGia_rec( Gia_Man_t * pNew, Abc_Obj_t * pNode )Abc_NtkClpGia_rec562,19697
Gia_Man_t * Abc_NtkClpGia( Abc_Ntk_t * pNtk )Abc_NtkClpGia574,20188
#define Abc_NtkSopForEachCube(Abc_NtkSopForEachCube608,21169
int Abc_NtkCollapseReduce( Vec_Str_t * vSop, Vec_Int_t * vSupp, Vec_Int_t * vClass, Vec_Wec_t * vSupps )Abc_NtkCollapseReduce610,21276
sat_solver * Abc_NtkClpDeriveSatSolver( Cnf_Dat_t * pCnf, int iCoObjId, Vec_Int_t * vSupp, Vec_Int_t * vAnds, Vec_Int_t * vMap, sat_solver ** ppSat1, sat_solver ** ppSat2, sat_solver ** ppSat3 )Abc_NtkClpDeriveSatSolver666,23047
Vec_Str_t * Abc_NtkClpGiaOne( Gia_Man_t * p, int iCo, int nCubeLim, int nBTLimit, int fCanon, int fReverse, Vec_Int_t * vSupp, int fVerbose, Vec_Int_t * vClass, Vec_Wec_t * vSupps )Abc_NtkClpGiaOne728,25736
Vec_Str_t * Abc_NtkClpGiaOne2( Cnf_Dat_t * pCnf, Gia_Man_t * p, int iCo, int nCubeLim, int nBTLimit, int fCanon, int fReverse, Vec_Int_t * vSupp, Vec_Int_t * vMap, int fVerbose, Vec_Int_t * vClass, Vec_Wec_t * vSupps )Abc_NtkClpGiaOne2747,26727
Vec_Ptr_t * Abc_GiaDeriveSops( Abc_Ntk_t * pNtkNew, Gia_Man_t * p, Vec_Wec_t * vSupps, int nCubeLim, int nBTLimit, int nCostMax, int fCanon, int fReverse, int fCnfShared, int fVerbose )Abc_GiaDeriveSops786,29224
Abc_Ntk_t * Abc_NtkFromSopsInt( Abc_Ntk_t * pNtk, int nCubeLim, int nBTLimit, int nCostMax, int fCanon, int fReverse, int fCnfShared, int fVerbose )Abc_NtkFromSopsInt870,32720
Abc_Ntk_t * Abc_NtkCollapseSat( Abc_Ntk_t * pNtk, int nCubeLim, int nBTLimit, int nCostMax, int fCanon, int fReverse, int fCnfShared, int fVerbose )Abc_NtkCollapseSat943,35720

src/base/abci/abcDetect.c,4799
    ABC_FIN_NONE = -100,   //  0:  unknownABC_FIN_NONE36,976
    ABC_FIN_SA0,           //  1:ABC_FIN_SA037,1019
    ABC_FIN_SA1,           //  2:ABC_FIN_SA138,1053
    ABC_FIN_NEG,           //  3:ABC_FIN_NEG39,1087
    ABC_FIN_RDOB_AND,      //  4:ABC_FIN_RDOB_AND40,1121
    ABC_FIN_RDOB_NAND,     //  5:ABC_FIN_RDOB_NAND41,1155
    ABC_FIN_RDOB_OR,       //  6:ABC_FIN_RDOB_OR42,1189
    ABC_FIN_RDOB_NOR,      //  7:ABC_FIN_RDOB_NOR43,1223
    ABC_FIN_RDOB_XOR,      //  8:ABC_FIN_RDOB_XOR44,1257
    ABC_FIN_RDOB_NXOR,     //  9:ABC_FIN_RDOB_NXOR45,1291
    ABC_FIN_RDOB_NOT,      // 10:ABC_FIN_RDOB_NOT46,1325
    ABC_FIN_RDOB_BUFF,     // 11:ABC_FIN_RDOB_BUFF47,1359
    ABC_FIN_RDOB_LAST      // 12:ABC_FIN_RDOB_LAST48,1393
} Abc_FinType_t;Abc_FinType_t49,1427
void Abc_NtkGenFaultList( Abc_Ntk_t * pNtk, char * pFileName, int fStuckAt )Abc_NtkGenFaultList66,1949
int Io_ReadFinTypeMapped( Mio_Library_t * pLib, char * pThis )Io_ReadFinTypeMapped111,3713
int Io_ReadFinType( char * pThis )Io_ReadFinType121,4035
char * Io_WriteFinType( int Type )Io_WriteFinType136,4801
Vec_Int_t * Io_ReadFins( Abc_Ntk_t * pNtk, char * pFileName, int fVerbose )Io_ReadFins164,5893
void Abc_NtkFrameExtend( Abc_Ntk_t * pNtk )Abc_NtkFrameExtend264,9185
int Abc_NtkDetectObjClasses_rec( Abc_Obj_t * pObj, Vec_Int_t * vMap, Hsh_VecMan_t * pHash, Vec_Int_t * vTemp )Abc_NtkDetectObjClasses_rec347,12516
Vec_Wec_t * Abc_NtkDetectObjClasses( Abc_Ntk_t * pNtk, Vec_Int_t * vObjs, Vec_Wec_t ** pvCos )Abc_NtkDetectObjClasses391,14137
void Abc_NtkDetectClassesTest2( Abc_Ntk_t * pNtk, int fVerbose, int fVeryVerbose )Abc_NtkDetectClassesTest2462,17149
void Abc_NtkFinMiterCollect_rec( Abc_Obj_t * pObj, Vec_Int_t * vCis, Vec_Int_t * vNodes )Abc_NtkFinMiterCollect_rec493,18182
void Abc_NtkFinMiterCollect( Abc_Ntk_t * pNtk, Vec_Int_t * vCos, Vec_Int_t * vCis, Vec_Int_t * vNodes )Abc_NtkFinMiterCollect509,18700
void Mio_LibGateSimulate( Mio_Gate_t * pGate, word * ppFaninSims[6], int nWords, word * pObjSim )Mio_LibGateSimulate530,19332
int Mio_LibGateSimulateOne( Mio_Gate_t * pGate, int iBits[6] )Mio_LibGateSimulateOne555,20055
int Mio_LibGateSimulateGia( Gia_Man_t * pGia, Mio_Gate_t * pGate, int iLits[6], Vec_Int_t * vLits )Mio_LibGateSimulateGia576,20620
static inline int Abc_NtkFinSimOneLit( Gia_Man_t * pNew, Abc_Obj_t * pObj, int Type, Vec_Int_t * vMap, int n, Vec_Int_t * vTemp )Abc_NtkFinSimOneLit616,22047
static inline int Abc_NtkFinSimOneBit( Abc_Obj_t * pObj, int Type, Vec_Wrd_t * vSims, int nWords, int iBit )Abc_NtkFinSimOneBit646,23850
static inline void Abc_NtkFinSimOneWord( Abc_Obj_t * pObj, int Type, Vec_Wrd_t * vSims, int nWords )Abc_NtkFinSimOneWord681,25683
static inline int Abc_NtkFinCompareSimTwo( Abc_Ntk_t * pNtk, Vec_Int_t * vCos, Vec_Wrd_t * vSims, int nWords, int i1, int i2 )Abc_NtkFinCompareSimTwo715,27816
Gia_Man_t * Abc_NtkFinMiterToGia( Abc_Ntk_t * pNtk, Vec_Int_t * vTypes, Vec_Int_t * vCos, Vec_Int_t * vCis, Vec_Int_t * vNodes, Abc_NtkFinMiterToGia728,28268
void Abc_NtkFinSimulateOne( Abc_Ntk_t * pNtk, Vec_Int_t * vTypes, Vec_Int_t * vCos, Vec_Int_t * vCis, Vec_Int_t * vNodes, Abc_NtkFinSimulateOne783,30838
Vec_Int_t * Abc_NtkFinCheckPair( Abc_Ntk_t * pNtk, Vec_Int_t * vTypes, Vec_Int_t * vCos, Vec_Int_t * vCis, Vec_Int_t * vNodes, int iObjs[2], int Types[2], Vec_Int_t * vLits )Abc_NtkFinCheckPair893,35263
void Abc_NtkFinLocalSetup( Vec_Int_t * vPairs, Vec_Int_t * vList, Vec_Wec_t * vMap2, Vec_Int_t * vResArray )Abc_NtkFinLocalSetup948,37270
void Abc_NtkFinLocalSetdown( Vec_Int_t * vPairs, Vec_Int_t * vList, Vec_Wec_t * vMap2 )Abc_NtkFinLocalSetdown960,37683
int Abc_NtkFinRefinement( Abc_Ntk_t * pNtk, Vec_Int_t * vTypes, Vec_Int_t * vCos, Vec_Int_t * vCis, Vec_Int_t * vNodes, Abc_NtkFinRefinement970,37987
static inline int Abc_ObjFinGateType( Abc_Obj_t * pNode )Abc_ObjFinGateType1052,41406
int Abc_NtkFinCheckTypesOk( Abc_Ntk_t * pNtk )Abc_NtkFinCheckTypesOk1065,42071
int Abc_NtkFinCheckTypesOk2( Abc_Ntk_t * pNtk )Abc_NtkFinCheckTypesOk21073,42283
Vec_Int_t * Abc_NtkFinComputeTypes( Abc_Ntk_t * pNtk )Abc_NtkFinComputeTypes1091,42928
Vec_Int_t * Abc_NtkFinComputeObjects( Vec_Int_t * vPairs, Vec_Wec_t ** pvMap, int nObjs )Abc_NtkFinComputeObjects1099,43217
Vec_Int_t * Abc_NtkFinCreateList( Vec_Wec_t * vMap, Vec_Int_t * vClass )Abc_NtkFinCreateList1112,43615
int Abc_NtkFinCountPairs( Vec_Wec_t * vClasses )Abc_NtkFinCountPairs1120,43873
Vec_Wec_t * Abc_NtkDetectFinClasses( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkDetectFinClasses1128,44085
void Abc_NtkPrintFinResults( Vec_Wec_t * vClasses )Abc_NtkPrintFinResults1221,47671
void Abc_NtkDetectClassesTest( Abc_Ntk_t * pNtk, int fSeq, int fVerbose, int fVeryVerbose )Abc_NtkDetectClassesTest1241,48195

src/base/abci/abcMiter.c,2750
typedef void (*AddFrameMapping)( Abc_Obj_t*, Abc_Obj_t*, int, void*);AddFrameMapping40,1507
Abc_Ntk_t * Abc_NtkMiter( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fComb, int nPartSize, int fImplic, int fMulti )Abc_NtkMiter59,2411
Abc_Ntk_t * Abc_NtkMiterInt( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fComb, int nPartSize, int fImplic, int fMulti )Abc_NtkMiterInt89,3642
void Abc_NtkMiterPrepare( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, Abc_Ntk_t * pNtkMiter, int fComb, int nPartSize, int fMulti )Abc_NtkMiterPrepare130,4943
void Abc_NtkMiterAddOne( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkMiter )Abc_NtkMiterAddOne234,8413
void Abc_NtkMiterAddCone( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkMiter, Abc_Obj_t * pRoot )Abc_NtkMiterAddCone254,8991
void Abc_NtkMiterFinalize( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, Abc_Ntk_t * pNtkMiter, int fComb, int nPartSize, int fImplic, int fMulti )Abc_NtkMiterFinalize281,9835
Abc_Ntk_t * Abc_NtkMiterAnd( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fOr, int fCompl2 )Abc_NtkMiterAnd387,13615
Abc_Ntk_t * Abc_NtkMiterCofactor( Abc_Ntk_t * pNtk, Vec_Int_t * vPiValues )Abc_NtkMiterCofactor450,15919
Abc_Ntk_t * Abc_NtkMiterForCofactors( Abc_Ntk_t * pNtk, int Out, int In1, int In2 )Abc_NtkMiterForCofactors517,17826
Abc_Ntk_t * Abc_NtkMiterQuantify( Abc_Ntk_t * pNtk, int In, int fExist )Abc_NtkMiterQuantify585,19961
Abc_Ntk_t * Abc_NtkMiterQuantifyPis( Abc_Ntk_t * pNtk )Abc_NtkMiterQuantifyPis648,22106
int Abc_NtkMiterIsConstant( Abc_Ntk_t * pMiter )Abc_NtkMiterIsConstant682,22935
void Abc_NtkMiterReport( Abc_Ntk_t * pMiter )Abc_NtkMiterReport727,24207
Abc_Ntk_t * Abc_NtkFrames( Abc_Ntk_t * pNtk, int nFrames, int fInitial, int fVerbose )Abc_NtkFrames775,25469
void Abc_NtkAddFrame( Abc_Ntk_t * pNtkFrames, Abc_Ntk_t * pNtk, int iFrame )Abc_NtkAddFrame862,28652
Abc_Ntk_t * Abc_NtkFrames2( Abc_Ntk_t * pNtk, int nFrames, int fInitial, AddFrameMapping addFrameMapping, void* arg )Abc_NtkFrames2908,30368
void Abc_NtkAddFrame2( Abc_Ntk_t * pNtkFrames, Abc_Ntk_t * pNtk, int iFrame, Vec_Ptr_t * vNodes, AddFrameMapping addFrameMapping, void* arg )Abc_NtkAddFrame21008,33705
int Abc_NtkDemiter( Abc_Ntk_t * pNtk )Abc_NtkDemiter1086,36499
int Abc_NtkCombinePos( Abc_Ntk_t * pNtk, int fAnd, int fXor )Abc_NtkCombinePos1154,38646
Vec_Ptr_t * Abc_NtkTryNewMiter( char * pFileName0, char * pFileName1 )Abc_NtkTryNewMiter1204,40241
Vec_Ptr_t * Abc_NtkReadNodeNames( Abc_Ntk_t * pNtk, char * pFileName )Abc_NtkReadNodeNames1260,42353
Abc_Obj_t * Abc_NtkSpecialMuxTree_rec( Abc_Ntk_t * pNew, Abc_Obj_t ** pCtrl, int nCtrl, Abc_Obj_t ** pData, int Shift )Abc_NtkSpecialMuxTree_rec1303,43508
Abc_Ntk_t * Abc_NtkSpecialMiter( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes )Abc_NtkSpecialMiter1312,43957

src/base/abci/abcTiming.c,6277
struct Abc_ManTime_t_Abc_ManTime_t_34,884
    Abc_Time_t     tArrDef;tArrDef36,908
    Abc_Time_t     tReqDef;tReqDef37,936
    Vec_Ptr_t  *   vArrs;vArrs38,964
    Vec_Ptr_t  *   vReqs;vReqs39,990
    Abc_Time_t     tInDriveDef;tInDriveDef40,1016
    Abc_Time_t     tOutLoadDef;tOutLoadDef41,1048
    Abc_Time_t *   tInDrive;tInDrive42,1080
    Abc_Time_t *   tOutLoad;tOutLoad43,1109
#define TOLERANCE TOLERANCE46,1142
static inline int          Abc_FloatEqual( float x, float y )     { return fabs(x-y) < TOLERANCE; }Abc_FloatEqual48,1167
static inline Abc_Time_t * Abc_NodeArrival( Abc_Obj_t * pNode )  {  return (Abc_Time_t *)pNode->pNtk->pManTime->vArrs->pArray[pNode->Id];  }Abc_NodeArrival55,1504
static inline Abc_Time_t * Abc_NodeRequired( Abc_Obj_t * pNode ) {  return (Abc_Time_t *)pNode->pNtk->pManTime->vReqs->pArray[pNode->Id];  }Abc_NodeRequired56,1645
Abc_Time_t * Abc_NtkReadDefaultArrival( Abc_Ntk_t * pNtk )Abc_NtkReadDefaultArrival73,2285
Abc_Time_t * Abc_NtkReadDefaultRequired( Abc_Ntk_t * pNtk )Abc_NtkReadDefaultRequired78,2415
Abc_Time_t * Abc_NodeReadArrival( Abc_Obj_t * pNode )Abc_NodeReadArrival83,2546
Abc_Time_t * Abc_NodeReadRequired( Abc_Obj_t * pNode )Abc_NodeReadRequired88,2676
float Abc_NtkReadDefaultArrivalWorst( Abc_Ntk_t * pNtk )Abc_NtkReadDefaultArrivalWorst93,2808
float Abc_NtkReadDefaultRequiredWorst( Abc_Ntk_t * pNtk )Abc_NtkReadDefaultRequiredWorst97,2953
float Abc_NodeReadArrivalAve( Abc_Obj_t * pNode )Abc_NodeReadArrivalAve101,3099
float Abc_NodeReadRequiredAve( Abc_Obj_t * pNode )Abc_NodeReadRequiredAve105,3237
float Abc_NodeReadArrivalWorst( Abc_Obj_t * pNode )Abc_NodeReadArrivalWorst109,3386
float Abc_NodeReadRequiredWorst( Abc_Obj_t * pNode )Abc_NodeReadRequiredWorst113,3529
Abc_Time_t * Abc_NtkReadDefaultInputDrive( Abc_Ntk_t * pNtk )Abc_NtkReadDefaultInputDrive129,3966
Abc_Time_t * Abc_NtkReadDefaultOutputLoad( Abc_Ntk_t * pNtk )Abc_NtkReadDefaultOutputLoad134,4103
Abc_Time_t * Abc_NodeReadInputDrive( Abc_Ntk_t * pNtk, int iPi )Abc_NodeReadInputDrive139,4240
Abc_Time_t * Abc_NodeReadOutputLoad( Abc_Ntk_t * pNtk, int iPo )Abc_NodeReadOutputLoad144,4416
float Abc_NodeReadInputDriveWorst( Abc_Ntk_t * pNtk, int iPi )Abc_NodeReadInputDriveWorst149,4592
float Abc_NodeReadOutputLoadWorst( Abc_Ntk_t * pNtk, int iPo )Abc_NodeReadOutputLoadWorst153,4768
void Abc_NtkTimeSetDefaultArrival( Abc_Ntk_t * pNtk, float Rise, float Fall )Abc_NtkTimeSetDefaultArrival171,5386
void Abc_NtkTimeSetDefaultRequired( Abc_Ntk_t * pNtk, float Rise, float Fall )Abc_NtkTimeSetDefaultRequired182,5818
void Abc_NtkTimeSetArrival( Abc_Ntk_t * pNtk, int ObjId, float Rise, float Fall )Abc_NtkTimeSetArrival205,6529
void Abc_NtkTimeSetRequired( Abc_Ntk_t * pNtk, int ObjId, float Rise, float Fall )Abc_NtkTimeSetRequired218,6964
void Abc_NtkTimeSetDefaultInputDrive( Abc_Ntk_t * pNtk, float Rise, float Fall )Abc_NtkTimeSetDefaultInputDrive243,7682
void Abc_NtkTimeSetDefaultOutputLoad( Abc_Ntk_t * pNtk, float Rise, float Fall )Abc_NtkTimeSetDefaultOutputLoad259,8295
void Abc_NtkTimeSetInputDrive( Abc_Ntk_t * pNtk, int PiNum, float Rise, float Fall )Abc_NtkTimeSetInputDrive287,9179
void Abc_NtkTimeSetOutputLoad( Abc_Ntk_t * pNtk, int PoNum, float Rise, float Fall )Abc_NtkTimeSetOutputLoad306,9913
void Abc_NtkTimeInitialize( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkOld )Abc_NtkTimeInitialize337,10939
void Abc_NtkTimeScale( Abc_Ntk_t * pNtk, float Scale )Abc_NtkTimeScale376,12457
void Abc_NtkTimePrepare( Abc_Ntk_t * pNtk )Abc_NtkTimePrepare418,13588
Abc_ManTime_t * Abc_ManTimeStart( Abc_Ntk_t * pNtk )Abc_ManTimeStart472,15092
void Abc_ManTimeStop( Abc_ManTime_t * p )Abc_ManTimeStop507,16383
void Abc_ManTimeDup( Abc_Ntk_t * pNtkOld, Abc_Ntk_t * pNtkNew )Abc_ManTimeDup533,17117
void Abc_NtkTimePrint( Abc_Ntk_t * pNtk )Abc_NtkTimePrint587,19371
void Abc_ManTimeExpand( Abc_ManTime_t * p, int nSize, int fProgressive )Abc_ManTimeExpand622,20581
void Abc_NtkSetNodeLevelsArrival( Abc_Ntk_t * pNtkOld )Abc_NtkSetNodeLevelsArrival680,22208
Abc_Time_t * Abc_NtkGetCiArrivalTimes( Abc_Ntk_t * pNtk )Abc_NtkGetCiArrivalTimes708,23069
Abc_Time_t * Abc_NtkGetCoRequiredTimes( Abc_Ntk_t * pNtk )Abc_NtkGetCoRequiredTimes721,23416
float * Abc_NtkGetCiArrivalFloats( Abc_Ntk_t * pNtk )Abc_NtkGetCiArrivalFloats747,24056
float * Abc_NtkGetCoRequiredFloats( Abc_Ntk_t * pNtk )Abc_NtkGetCoRequiredFloats760,24397
Vec_Int_t * Abc_NtkDelayTraceSlackStart( Abc_Ntk_t * pNtk )Abc_NtkDelayTraceSlackStart786,24980
static inline float Abc_NtkDelayTraceSlack( Vec_Int_t * vSlacks, Abc_Obj_t * pObj, int iFanin )Abc_NtkDelayTraceSlack814,25809
static inline void Abc_NtkDelayTraceSetSlack( Vec_Int_t * vSlacks, Abc_Obj_t * pObj, int iFanin, float Num )Abc_NtkDelayTraceSetSlack818,26011
int Abc_NtkDelayTraceCritPath_rec( Vec_Int_t * vSlacks, Abc_Obj_t * pNode, Abc_Obj_t * pLeaf, Vec_Int_t * vBest )Abc_NtkDelayTraceCritPath_rec834,26518
void Abc_NtkDelayTraceCritPathCollect_rec( Vec_Int_t * vSlacks, Abc_Obj_t * pNode, Vec_Int_t * vBest, Vec_Ptr_t * vPath )Abc_NtkDelayTraceCritPathCollect_rec874,27901
void Abc_NodeDelayTraceArrival( Abc_Obj_t * pNode, Vec_Int_t * vSlacks )Abc_NodeDelayTraceArrival897,28590
float Abc_NtkDelayTrace( Abc_Ntk_t * pNtk, Abc_Obj_t * pOut, Abc_Obj_t * pIn, int fPrint )Abc_NtkDelayTrace989,32302
int Abc_ObjLevelNew( Abc_Obj_t * pObj )Abc_ObjLevelNew1128,37980
int Abc_ObjReverseLevelNew( Abc_Obj_t * pObj )Abc_ObjReverseLevelNew1148,38525
int Abc_ObjRequiredLevel( Abc_Obj_t * pObj )Abc_ObjRequiredLevel1172,39212
int Abc_ObjReverseLevel( Abc_Obj_t * pObj )Abc_ObjReverseLevel1191,39755
void Abc_ObjSetReverseLevel( Abc_Obj_t * pObj, int LevelR )Abc_ObjSetReverseLevel1211,40343
void Abc_NtkStartReverseLevels( Abc_Ntk_t * pNtk, int nMaxLevelIncrease )Abc_NtkStartReverseLevels1232,41069
void Abc_NtkStopReverseLevels( Abc_Ntk_t * pNtk )Abc_NtkStopReverseLevels1260,41993
void Abc_NtkUpdateLevel( Abc_Obj_t * pObjNew, Vec_Vec_t * vLevels )Abc_NtkUpdateLevel1280,42440
void Abc_NtkUpdateReverseLevel( Abc_Obj_t * pObjNew, Vec_Vec_t * vLevels )Abc_NtkUpdateReverseLevel1332,44245
void Abc_NtkUpdate( Abc_Obj_t * pObj, Abc_Obj_t * pObjNew, Vec_Vec_t * vLevels )Abc_NtkUpdate1381,45982

src/base/abci/abcQuant.c,562
void Abc_NtkSynthesize( Abc_Ntk_t ** ppNtk, int fMoreEffort )Abc_NtkSynthesize45,1275
int Abc_NtkQuantify( Abc_Ntk_t * pNtk, int fUniv, int iVar, int fVerbose )Abc_NtkQuantify83,2403
Abc_Ntk_t * Abc_NtkTransRel( Abc_Ntk_t * pNtk, int fInputs, int fVerbose )Abc_NtkTransRel159,5030
Abc_Ntk_t * Abc_NtkInitialState( Abc_Ntk_t * pNtk )Abc_NtkInitialState261,8737
Abc_Ntk_t * Abc_NtkSwapVariables( Abc_Ntk_t * pNtk )Abc_NtkSwapVariables289,9633
Abc_Ntk_t * Abc_NtkReachability( Abc_Ntk_t * pNtkRel, int nIters, int fVerbose )Abc_NtkReachability326,10826

src/base/abci/abcScorr.c,1445
typedef struct Tst_Dat_t_ Tst_Dat_t;Tst_Dat_t36,966
struct Tst_Dat_t_Tst_Dat_t_37,1003
    Abc_Ntk_t * pNetlist;pNetlist39,1023
    Aig_Man_t * pAig;pAig40,1049
    Gia_Man_t * pGia;pGia41,1071
    Vec_Int_t * vId2Name;vId2Name42,1093
    char *      pFileNameOut;pFileNameOut43,1119
    int         fFlopOnly;fFlopOnly44,1149
    int         fFfNdOnly;fFfNdOnly45,1176
    int         fDumpBmc;      fDumpBmc46,1203
Vec_Int_t * Abc_NtkMapGiaIntoNameId( Abc_Ntk_t * pNetlist, Aig_Man_t * pAig, Gia_Man_t * pGia )Abc_NtkMapGiaIntoNameId64,1693
char * Abc_NtkTestScorrGetName( Abc_Ntk_t * pNetlist, Vec_Int_t * vId2Name, int Id )Abc_NtkTestScorrGetName130,3982
int Abc_NtkTestScorrWriteEquivPair( Abc_Ntk_t * pNetlist, Vec_Int_t * vId2Name, int Id1, int Id2, FILE * pFile, int fPol )Abc_NtkTestScorrWriteEquivPair153,4657
int Abc_NtkTestScorrWriteEquivConst( Abc_Ntk_t * pNetlist, Vec_Int_t * vId2Name, int Id1, FILE * pFile, int fPol )Abc_NtkTestScorrWriteEquivConst174,5305
char * Abc_NtkBmcFileName( char * pName )Abc_NtkBmcFileName194,5857
int Abc_NtkTestScorrWriteEquivGia( Tst_Dat_t * pData )Abc_NtkTestScorrWriteEquivGia214,6354
int Abc_NtkTestScorrWriteEquivAig( Tst_Dat_t * pData )Abc_NtkTestScorrWriteEquivAig267,8108
Abc_Ntk_t * Abc_NtkTestScorr( char * pFileNameIn, char * pFileNameOut, int nStepsMax, int nBTLimit, int fNewAlgo, int fFlopOnly, int fFfNdOnly, int fVerbose )Abc_NtkTestScorr318,9832

src/base/abci/abcSaucy.c,16517
#define REFINE_BY_SIM_1 REFINE_BY_SIM_133,910
#define REFINE_BY_SIM_2 REFINE_BY_SIM_234,940
#define BACKTRACK_BY_SAT BACKTRACK_BY_SAT35,970
#define SELECT_DYNAMICALLY SELECT_DYNAMICALLY36,1000
int NUM_SIM1_ITERATION;NUM_SIM1_ITERATION39,1088
int NUM_SIM2_ITERATION;NUM_SIM2_ITERATION40,1112
#define CLAUSE_DECAY CLAUSE_DECAY43,1161
#define MAX_LEARNTS MAX_LEARNTS44,1186
struct saucy_stats {saucy_stats57,1463
    double grpsize_base;grpsize_base58,1484
    int grpsize_exp;grpsize_exp59,1509
    int levels;levels60,1530
    int nodes;nodes61,1546
    int bads;bads62,1561
    int gens;gens63,1575
    int support;support64,1589
struct saucy_graph {saucy_graph67,1610
    int n;n68,1631
    int e;e69,1642
    int *adj;adj70,1653
    int *edg;edg71,1667
struct coloring {coloring74,1685
    int *lab;        /* Labelling of objects */lab75,1703
    int *unlab;      /* Inverse of lab */unlab76,1751
    int *cfront;     /* Pointer to front of cells */cfront77,1793
    int *clen;       /* Length of cells (defined for cfront's) */clen78,1846
struct sim_result {sim_result81,1916
    int *inVec;inVec82,1936
    int *outVec;outVec83,1952
    int inVecSignature;inVecSignature84,1969
    int outVecOnes; outVecOnes85,1993
    double activity;activity86,2014
struct saucy {saucy89,2039
    int n;           /* Size of domain */n91,2075
    int *adj;        /* Neighbors of k: edg[adj[k]]..edg[adj[k+1]] */adj92,2117
    int *edg;        /* Actual neighbor data */edg93,2187
    int *dadj;       /* Fanin neighbor indices, for digraphs */dadj94,2235
    int *dedg;       /* Fanin neighbor data, for digraphs */    dedg95,2299
    struct coloring left, right;left98,2389
    struct coloring left, right;right98,2389
    int *nextnon;    /* Forward next-nonsingleton pointers */ nextnon99,2422
    int *prevnon;    /* Backward next-nonsingleton pointers */prevnon100,2485
    char *indmark;   /* Induce marks */indmark103,2580
    int *ninduce;    /* Nonsingletons that might induce refinement */ninduce104,2620
    int *sinduce;    /* Singletons that might induce refinement */sinduce105,2690
    int nninduce;    /* Size of ninduce stack */nninduce106,2757
    int nsinduce;    /* Size of sinduce stack */nsinduce107,2806
    int *clist;      /* List of cells marked for refining */clist110,2891
    int csize;       /* Number of cells in clist */csize111,2952
    char *stuff;     /* Bit vector, but one char per bit */stuff114,3037
    int *ccount;     /* Number of connections to refining cell */ccount115,3097
    int *bucket;     /* Workspace */bucket116,3163
    int *count;      /* Num vertices with same adj count to ref cell */count117,3200
    int *junk;       /* More workspace */junk118,3272
    int *gamma;      /* Working permutation */gamma119,3314
    int *conncnts;   /* Connection counts for cell fronts */conncnts120,3361
    int lev;         /* Current search tree level */lev123,3445
    int anc;         /* Level of greatest common ancestor with zeta */anc124,3498
    int *anctar;     /* Copy of target cell at anc */anctar125,3569
    int kanctar;     /* Location within anctar to iterate from */kanctar126,3623
    int *start;      /* Location of target at each level */start127,3689
    int indmin;      /* Used for group size computation */indmin128,3749
    int match;       /* Have we not diverged from previous left? */match129,3808
    int *theta;      /* Running approximation of orbit partition */theta132,3911
    int *thsize;     /* Size of cells in theta, defined for mcrs */thsize133,3979
    int *thnext;     /* Next rep in list (circular list) */thnext134,4047
    int *thprev;     /* Previous rep in list */thprev135,4107
    int *threp;      /* First rep for a given cell front */threp136,4155
    int *thfront;    /* The cell front associated with this rep */thfront137,4215
    int *splitvar;   /* The actual value of the splits on the left-most branch */splitvar140,4314
    int *splitwho;   /* List of where splits occurred */splitwho141,4396
    int *splitfrom;  /* List of cells which were split */splitfrom142,4453
    int *splitlev;   /* Where splitwho/from begins for each level */splitlev143,4511
    int nsplits;     /* Number of splits at this point */nsplits144,4580
    char *diffmark;  /* Marked for diff labels */diffmark147,4683
    int *diffs;      /* List of diff labels */diffs148,4733
    int *difflev;    /* How many labels diffed at each level */difflev149,4780
    int ndiffs;      /* Current number of diffs */ndiffs150,4844
    int *undifflev;  /* How many diff labels fixed at each level */undifflev151,4895
    int nundiffs;    /* Current number of diffs in singletons (fixed) */nundiffs152,4963
    int *unsupp;     /* Inverted diff array */unsupp153,5036
    int *specmin;    /* Speculated mappings */specmin154,5083
    int *pairs;      /* Not-undiffed diffs that can make two-cycles */pairs155,5130
    int *unpairs;    /* Indices into pairs */unpairs156,5201
    int npairs;      /* Number of such pairs */npairs157,5247
    int *diffnons;   /* Diffs that haven't been undiffed */diffnons158,5295
    int *undiffnons; /* Inverse of that */undiffnons159,5355
    int ndiffnons;   /* Number of such diffs */ndiffnons160,5398
    int (*split)(struct saucy *, struct coloring *, int, int);split163,5479
    int (*is_automorphism)(struct saucy *);is_automorphism164,5542
    int (*ref_singleton)(struct saucy *, struct coloring *, int);ref_singleton165,5586
    int (*ref_nonsingle)(struct saucy *, struct coloring *, int);ref_nonsingle166,5652
    void (*select_decomposition)(struct saucy *, int *, int *, int *);select_decomposition167,5718
    struct saucy_stats *stats;stats170,5822
    Abc_Ntk_t * pNtk;pNtk173,5905
    Abc_Ntk_t * pNtk_permuted;pNtk_permuted174,5927
    int * depAdj;depAdj175,5958
    int * depEdg;depEdg176,5976
    Vec_Int_t ** iDep, ** oDep;iDep177,5994
    Vec_Int_t ** iDep, ** oDep;oDep177,5994
    Vec_Int_t ** obs, ** ctrl;  obs178,6026
    Vec_Int_t ** obs, ** ctrl;  ctrl178,6026
    Vec_Ptr_t ** topOrder;topOrder179,6059
    Vec_Ptr_t * randomVectorArray_sim1;randomVectorArray_sim1180,6086
    int * randomVectorSplit_sim1;randomVectorSplit_sim1181,6126
    Vec_Ptr_t * randomVectorArray_sim2;randomVectorArray_sim2182,6160
    int * randomVectorSplit_sim2;randomVectorSplit_sim2183,6200
    char * marks;marks184,6234
    int * pModel;pModel185,6252
    Vec_Ptr_t * satCounterExamples;satCounterExamples186,6270
    double activityInc;activityInc187,6306
    int fBooleanMatching;fBooleanMatching189,6331
    int fPrintTree;fPrintTree190,6357
    int fLookForSwaps;fLookForSwaps191,6377
    FILE * gFile;gFile192,6400
    int (*refineBySim1)(struct saucy *, struct coloring *);refineBySim1194,6423
    int (*refineBySim2)(struct saucy *, struct coloring *);refineBySim2195,6483
    int (*print_automorphism)(FILE *f, int n, const int *gamma, int nsupp, const int *support, char * marks, Abc_Ntk_t * pNtk);print_automorphism196,6543
static int  *ints(int n) { return ABC_ALLOC(int, n); }ints199,6675
static int  *zeros(int n) { return ABC_CALLOC(int, n); }zeros200,6730
static char *bits(int n) { return ABC_CALLOC(char, n); }bits201,6787
print_automorphism_ntk(FILE *f, int n, const int *gamma, int nsupp, const int *support, char * marks, Abc_Ntk_t * pNtk)print_automorphism_ntk220,8290
print_automorphism_ntk2(FILE *f, int n, const int *gamma, int nsupp, const int *support, char * marks, Abc_Ntk_t * pNtk)print_automorphism_ntk2255,9137
print_automorphism_quiet(FILE *f, int n, const int *gamma, int nsupp, const int *support, char * marks, Abc_Ntk_t * pNtk)print_automorphism_quiet289,9930
array_find_min(const int *a, int n)array_find_min295,10085
swap(int *a, int x, int y)swap305,10275
sift_up(int *a, int k)sift_up313,10372
sift_down(int *a, int n)sift_down329,10601
heap_sort(int *a, int n)heap_sort346,10884
insertion_sort(int *a, int n)insertion_sort360,11087
partition(int *a, int n, int m)partition373,11307
log_base2(int n)log_base2389,11574
median(int a, int b, int c)median400,11692
introsort_loop(int *a, int n, int lim)introsort_loop415,11934
introsort(int *a, int n)introsort431,12243
do_find_min(struct coloring *c, int t)do_find_min438,12354
find_min(struct saucy *s, int t)find_min444,12468
set_label(struct coloring *c, int index, int value)set_label450,12556
swap_labels(struct coloring *c, int a, int b)swap_labels457,12681
move_to_back(struct saucy *s, struct coloring *c, int k)move_to_back465,12827
data_mark(struct saucy *s, struct coloring *c, int k)data_mark479,13211
data_count(struct saucy *s, struct coloring *c, int k)data_count488,13407
check_mapping(struct saucy *s, const int *adj, const int *edg, int k)check_mapping497,13628
add_conterexample(struct saucy *s, struct sim_result * cex)add_conterexample521,14164
is_undirected_automorphism(struct saucy *s)is_undirected_automorphism549,14914
is_directed_automorphism(struct saucy *s)is_directed_automorphism578,15660
add_induce(struct saucy *s, struct coloring *c, int who)add_induce591,15940
fix_fronts(struct coloring *c, int cf, int ff)fix_fronts603,16169
array_indirect_sort(int *a, const int *b, int n)array_indirect_sort612,16343
at_terminal(struct saucy *s)at_terminal635,16828
add_diffnon(struct saucy *s, int k)add_diffnon641,16905
remove_diffnon(struct saucy *s, int k)remove_diffnon651,17119
add_diff(struct saucy *s, int k)add_diff665,17373
is_a_pair(struct saucy *s, int k)is_a_pair675,17545
in_cell_range(struct coloring *c, int ff, int cf)in_cell_range681,17627
add_pair(struct saucy *s, int k)add_pair688,17758
eat_pair(struct saucy *s, int k)eat_pair697,17911
pick_all_the_pairs(struct saucy *s)pick_all_the_pairs707,18095
clear_undiffnons(struct saucy *s)clear_undiffnons717,18260
fix_diff_singleton(struct saucy *s, int cf)fix_diff_singleton726,18415
fix_diff_subtract(struct saucy *s, int cf, const int *a, const int *b)fix_diff_subtract759,19205
fix_diffs(struct saucy *s, int cf, int ff)fix_diffs782,19732
split_color(struct coloring *c, int cf, int ff)split_color799,20228
split_common(struct saucy *s, struct coloring *c, int cf, int ff)split_common814,20492
split_left(struct saucy *s, struct coloring *c, int cf, int ff)split_left828,20769
split_init(struct saucy *s, struct coloring *c, int cf, int ff)split_init843,21073
split_other(struct saucy *s, struct coloring *c, int cf, int ff)split_other864,21591
print_partition(struct coloring *left, struct coloring *right, int n, Abc_Ntk_t * pNtk, int fNames)print_partition886,22062
refine_cell(struct saucy *s, struct coloring *c,refine_cell926,23283
maybe_split(struct saucy *s, struct coloring *c, int cf, int ff)maybe_split955,24078
ref_single_cell(struct saucy *s, struct coloring *c, int cf)ref_single_cell961,24209
ref_singleton(struct saucy *s, struct coloring *c,ref_singleton968,24381
ref_singleton_directed(struct saucy *s, struct coloring *c, int cf)ref_singleton_directed983,24764
ref_singleton_undirected(struct saucy *s, struct coloring *c, int cf)ref_singleton_undirected990,24953
ref_nonsingle_cell(struct saucy *s, struct coloring *c, int cf)ref_nonsingle_cell996,25091
ref_nonsingle(struct saucy *s, struct coloring *c,ref_nonsingle1053,26582
ref_nonsingle_directed(struct saucy *s, struct coloring *c, int cf)ref_nonsingle_directed1089,27509
ref_nonsingle_undirected(struct saucy *s, struct coloring *c, int cf)ref_nonsingle_undirected1096,27698
clear_refine(struct saucy *s)clear_refine1102,27837
refine(struct saucy *s, struct coloring *c)refine1115,28099
refineByDepGraph(struct saucy *s, struct coloring *c) refineByDepGraph1149,28855
backtrackBysatCounterExamples(struct saucy *s, struct coloring *c)backtrackBysatCounterExamples1158,29001
refineBySim1_init(struct saucy *s, struct coloring *c) refineBySim1_init1208,30613
refineBySim1_left(struct saucy *s, struct coloring *c) refineBySim1_left1262,32017
refineBySim1_other(struct saucy *s, struct coloring *c) refineBySim1_other1320,33614
refineBySim2_init(struct saucy *s, struct coloring *c) refineBySim2_init1368,34812
refineBySim2_left(struct saucy *s, struct coloring *c) refineBySim2_left1408,35876
refineBySim2_other(struct saucy *s, struct coloring *c) refineBySim2_other1452,37123
check_OPP_only_has_swaps(struct saucy *s, struct coloring *c)check_OPP_only_has_swaps1503,38417
check_OPP_for_Boolean_matching(struct saucy *s, struct coloring *c)check_OPP_for_Boolean_matching1539,39495
double_check_OPP_isomorphism(struct saucy *s, struct coloring * c)double_check_OPP_isomorphism1582,40635
descend(struct saucy *s, struct coloring *c, int target, int min)descend1625,41940
select_smallest_max_connected_cell(struct saucy *s, int start, int end)select_smallest_max_connected_cell1666,43252
descend_leftmost(struct saucy *s)descend_leftmost1700,44448
zeta_fixed(struct saucy *s)zeta_fixed1730,45549
select_dynamically(struct saucy *s, int *target, int *lmin, int *rmin)select_dynamically1736,45631
select_statically(struct saucy *s, int *target, int *lmin, int *rmin)select_statically1788,47148
descend_left(struct saucy *s)descend_left1803,47560
find_representative(int k, int *theta)find_representative1848,49079
update_theta(struct saucy *s)update_theta1863,49395
theta_prune(struct saucy *s)theta_prune1889,50012
orbit_prune(struct saucy *s)orbit_prune1906,50413
note_anctar_reps(struct saucy *s)note_anctar_reps1934,51050
multiply_index(struct saucy *s, int k)multiply_index1972,52086
backtrack_leftmost(struct saucy *s)backtrack_leftmost1981,52272
backtrack_other(struct saucy *s)backtrack_other2003,52719
rewind_coloring(struct saucy *s, struct coloring *c, int lev)rewind_coloring2037,53441
rewind_simulation_vectors(struct saucy *s, int lev)rewind_simulation_vectors2049,53751
do_backtrack(struct saucy *s)do_backtrack2062,54360
backtrack_loop(struct saucy *s)backtrack_loop2096,55216
backtrack(struct saucy *s)backtrack2109,55484
backtrack_bad(struct saucy *s)backtrack_bad2125,55805
prepare_permutation_ntk(struct saucy *s) prepare_permutation_ntk2155,56681
prepare_permutation(struct saucy *s)prepare_permutation2197,58249
unprepare_permutation_ntk(struct saucy *s) unprepare_permutation_ntk2209,58518
unprepare_permutation(struct saucy *s)  unprepare_permutation2236,59442
do_search(struct saucy *s)do_search2246,59638
saucy_search(saucy_search2311,61839
saucy_free(struct saucy *s)saucy_free2489,66995
saucy_alloc(Abc_Ntk_t * pNtk)saucy_alloc2574,69509
print_stats(FILE *f, struct saucy_stats stats )print_stats2673,72461
getVertexName(Abc_Ntk_t *pNtk, int v)getVertexName2692,73237
findTopologicalOrder( Abc_Ntk_t * pNtk )findTopologicalOrder2706,73566
getDependencies(Abc_Ntk_t *pNtk, Vec_Int_t** iDep, Vec_Int_t** oDep)getDependencies2733,74309
getDependenciesDummy(Abc_Ntk_t *pNtk, Vec_Int_t** iDep, Vec_Int_t** oDep)getDependenciesDummy2791,76024
buildDepGraph(Abc_Ntk_t *pNtk, Vec_Int_t ** iDep, Vec_Int_t ** oDep)buildDepGraph2806,76488
assignRandomBitsToCells(Abc_Ntk_t * pNtk, struct coloring *c)assignRandomBitsToCells2852,77772
generateProperInputVector( Abc_Ntk_t * pNtk, struct coloring *c, Vec_Int_t * randomVector )generateProperInputVector2866,78105
ifInputVectorsAreConsistent( struct saucy * s, int * leftVec, int * rightVec )ifInputVectorsAreConsistent2896,78868
ifOutputVectorsAreConsistent( struct saucy * s, int * leftVec, int * rightVec )ifOutputVectorsAreConsistent2928,79860
buildSim1Graph( Abc_Ntk_t * pNtk, struct coloring *c, Vec_Int_t * randVec, Vec_Int_t ** iDep, Vec_Int_t ** oDep )buildSim1Graph2948,80437
buildSim2Graph( Abc_Ntk_t * pNtk, struct coloring *c, Vec_Int_t * randVec, Vec_Int_t ** iDep, Vec_Int_t ** oDep, Vec_Ptr_t ** topOrder, Vec_Int_t ** obs,  Vec_Int_t ** ctrl )buildSim2Graph3015,82180
bumpActivity( struct saucy * s, struct sim_result * cex )bumpActivity3095,84630
reduceDB( struct saucy * s )reduceDB3111,85059
analyzeConflict( Abc_Ntk_t * pNtk, int * pModel, int fVerbose )analyzeConflict3139,86102
Abc_NtkCecSat_saucy( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int * pModel )Abc_NtkCecSat_saucy3177,87079
void saucyGateWay( Abc_Ntk_t * pNtkOrig, Abc_Obj_t * pNodePo, FILE * gFile, int fBooleanMatching, saucyGateWay3246,89146

src/base/abci/abc.c,48182
void Abc_FrameReplaceCex( Abc_Frame_t * pAbc, Abc_Cex_t ** ppCex )Abc_FrameReplaceCex593,46116
void Abc_FrameReplaceCexVec( Abc_Frame_t * pAbc, Vec_Ptr_t ** pvCexVec )Abc_FrameReplaceCexVec618,46631
void Abc_FrameReplacePoEquivs( Abc_Frame_t * pAbc, Vec_Ptr_t ** pvPoEquivs )Abc_FrameReplacePoEquivs640,47119
void Abc_FrameReplacePoStatuses( Abc_Frame_t * pAbc, Vec_Int_t ** pvStatuses )Abc_FrameReplacePoStatuses659,47559
Vec_Int_t * Abc_FrameDeriveStatusArray( Vec_Ptr_t * vCexes )Abc_FrameDeriveStatusArray678,48038
Vec_Int_t * Abc_FrameDeriveStatusArray2( Vec_Ptr_t * vCexes )Abc_FrameDeriveStatusArray2692,48516
void Abc_FrameClearDesign()Abc_FrameClearDesign723,49420
void Abc_FrameUpdateGia( Abc_Frame_t * pAbc, Gia_Man_t * pNew )Abc_FrameUpdateGia738,49672
Gia_Man_t * Abc_FrameGetGia( Abc_Frame_t * pAbc )Abc_FrameGetGia778,50869
void Abc_Init( Abc_Frame_t * pAbc )Abc_Init801,51312
void Abc_End( Abc_Frame_t * pAbc )Abc_End1327,95464
int Abc_CommandPrintStats( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintStats1373,96498
int Abc_CommandPrintExdc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintExdc1496,100498
int Abc_CommandPrintIo( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintIo1583,102888
int Abc_CommandPrintLatch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintLatch1652,104641
int Abc_CommandPrintFanio( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintFanio1706,105968
int Abc_CommandPrintMffc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintMffc1786,108539
int Abc_CommandPrintFactor( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintFactor1833,109597
int Abc_CommandPrintLevel( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintLevel1910,111557
int Abc_CommandPrintSupport( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintSupport1999,113934
int Abc_CommandPrintMint( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintMint2084,116241
int Abc_CommandPrintSymms( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintSymms2146,117978
int Abc_CommandPrintUnate( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintUnate2226,120296
int Abc_CommandPrintAuto( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintAuto2293,122174
int Abc_CommandPrintKMap( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintKMap2370,124335
int Abc_CommandPrintGates( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintGates2458,126718
int Abc_CommandPrintSharing( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintSharing2522,128415
int Abc_CommandPrintXCut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintXCut2574,129683
int Abc_CommandPrintDsd( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintDsd2626,130930
int Abc_CommandPrintCone( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintCone2748,135038
int Abc_CommandPrintMiter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintMiter2803,136363
int Abc_CommandPrintStatus( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintStatus2858,137616
int Abc_CommandPrintDelay( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPrintDelay2997,142264
int Abc_CommandShow( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandShow3081,145023
int Abc_CommandShowBdd( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandShowBdd3157,147307
int Abc_CommandShowCut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandShowCut3256,150360
int Abc_CommandCollapse( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCollapse3354,153354
int Abc_CommandSatClp( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSatClp3487,157505
int Abc_CommandStrash( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandStrash3612,161647
int Abc_CommandBalance( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBalance3693,163894
int Abc_CommandMuxStruct( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMuxStruct3798,166895
int Abc_CommandMulti( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMulti3866,168608
int Abc_CommandRenode( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRenode3980,172344
int Abc_CommandCleanup( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCleanup4149,178077
int Abc_CommandSweep( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSweep4237,180524
int Abc_CommandFastExtract( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFastExtract4301,182176
static int Abc_CommandFxch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFxch4478,189281
int Abc_CommandEliminate( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandEliminate4572,192162
int Abc_CommandDisjoint( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDisjoint4705,196830
int Abc_CommandSparsify( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSparsify4825,200787
int Abc_CommandLutpack( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandLutpack4905,203217
int Abc_CommandLutmin( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandLutmin5053,208947
int Abc_CommandMfs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMfs5254,215591
int Abc_CommandMfs2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMfs25422,222058
int Abc_CommandMfs3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMfs35654,231284
int Abc_CommandMfse( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMfse5935,243308
int Abc_CommandLogicPush( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandLogicPush6084,249119
int Abc_CommandTrace( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTrace6153,251233
int Abc_CommandGlitch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandGlitch6217,252939
int Abc_CommandSpeedup( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSpeedup6299,255594
int Abc_CommandPowerdown( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPowerdown6406,259085
int Abc_CommandAddBuffs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAddBuffs6514,262706
int Abc_CommandMerge( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMerge6605,265410
int Abc_CommandTestDec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestDec6741,270807
int Abc_CommandTestNpn( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestNpn6834,274552
int Abc_CommandTestRPO(Abc_Frame_t * pAbc, int argc, char ** argv) {Abc_CommandTestRPO6941,279102
int Abc_CommandTestTruth( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestTruth7017,282054
int Abc_CommandRunEco( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRunEco7064,283271
int Abc_CommandRunGen( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRunGen7147,286593
int Abc_CommandRunSim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRunSim7195,287906
int Abc_CommandRunTest( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRunTest7336,293530
int Abc_CommandRewrite( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRewrite7390,295140
int Abc_CommandRefactor( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRefactor7493,297965
int Abc_CommandRestructure( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRestructure7617,301873
int Abc_CommandResubstitute( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandResubstitute7715,304858
int Abc_CommandRr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRr7854,309415
int Abc_CommandCascade( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCascade7951,312397
int Abc_CommandExtract( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExtract8049,315451
int Abc_CommandVarMin( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandVarMin8130,317884
int Abc_CommandFaultClasses( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFaultClasses8214,320614
int Abc_CommandExact( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExact8291,323411
int Abc_CommandBmsStart( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBmsStart8466,329604
int Abc_CommandBmsStop( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBmsStop8544,332210
int Abc_CommandBmsPs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBmsPs8600,333707
int Abc_CommandMajExact( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMajExact8649,334908
int Abc_CommandTwoExact( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTwoExact8750,338711
int Abc_CommandLutExact( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandLutExact8874,343656
int Abc_CommandAllExact( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAllExact9012,348787
int Abc_CommandTestExact( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestExact9197,355481
int Abc_CommandMajGen( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMajGen9246,356834
int Abc_CommandLogic( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandLogic9302,358566
int Abc_CommandComb( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandComb9362,359945
int Abc_CommandMiter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMiter9446,362393
int Abc_CommandMiter2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMiter29589,366911
int Abc_CommandDemiter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDemiter9659,368836
int Abc_CommandOrPos( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandOrPos9757,371378
int Abc_CommandAndPos( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAndPos9851,374221
int Abc_CommandZeroPo( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandZeroPo9924,375981
int Abc_CommandSwapPos( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSwapPos10010,378543
int Abc_CommandRemovePo( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRemovePo10085,380566
int Abc_CommandDropSat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDropSat10166,382905
int Abc_CommandAddPi( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAddPi10241,385193
int Abc_CommandAppend( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAppend10293,386413
int Abc_CommandPutOnTop( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPutOnTop10376,388681
int Abc_CommandFrames( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFrames10475,391486
int Abc_CommandDFrames( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDFrames10562,393929
int Abc_CommandSop( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSop10672,397180
int Abc_CommandBdd( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBdd10744,399262
int Abc_CommandAig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAig10812,401065
int Abc_CommandReorder( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandReorder10869,402378
int Abc_CommandBidec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBidec10927,403825
int Abc_CommandOrder( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandOrder10985,405269
int Abc_CommandMuxes( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMuxes11068,407656
int Abc_CommandCubes( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCubes11155,410081
int Abc_CommandExpand( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExpand11221,411816
int Abc_CommandSplitSop( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSplitSop11304,414299
int Abc_CommandExtSeqDcs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExtSeqDcs11381,416496
int Abc_CommandReach( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandReach11447,418209
int Abc_CommandCone( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCone11580,423029
int Abc_CommandNode( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandNode11733,427858
int Abc_CommandCof( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCof11808,429709
int Abc_CommandTopmost( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTopmost11884,431676
int Abc_CommandBottommost( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBottommost11964,433804
int Abc_CommandTopAnd( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTopAnd12044,435947
int Abc_CommandTrim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTrim12125,438045
int Abc_CommandShortNames( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandShortNames12192,439801
int Abc_CommandMoveNames( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMoveNames12235,440768
int Abc_CommandExdcFree( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExdcFree12312,443163
int Abc_CommandExdcGet( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExdcGet12368,444412
int Abc_CommandExdcSet( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExdcSet12421,445625
int Abc_CommandCareSet( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCareSet12505,447727
int Abc_CommandCut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCut12589,449852
int Abc_CommandScut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandScut12768,456747
int Abc_CommandEspresso( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandEspresso12868,460175
int Abc_CommandGen( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandGen12932,461810
int Abc_CommandGenFsm( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandGenFsm13141,468835
int Abc_CommandCover( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCover13275,473485
int Abc_CommandInter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInter13387,476812
int Abc_CommandDouble( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDouble13484,480739
int Abc_CommandBb2Wb( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBb2Wb13562,482812
int Abc_CommandOutdec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandOutdec13617,484607
int Abc_CommandNodeDup( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandNodeDup13693,486819
int Abc_CommandTestColor( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestColor13769,488950
int Abc_CommandTest( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTest13787,489313
int Abc_CommandQuaVar( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandQuaVar14031,496708
int Abc_CommandQuaRel( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandQuaRel14118,499295
int Abc_CommandQuaReach( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandQuaReach14213,502062
int Abc_CommandSenseInput( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSenseInput14311,505042
int Abc_CommandIStrash( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIStrash14398,507603
int Abc_CommandICut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandICut14457,509043
int Abc_CommandIRewrite( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIRewrite14520,510721
int Abc_CommandDRewrite( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDRewrite14593,512825
int Abc_CommandDRefactor( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDRefactor14701,516447
int Abc_CommandDc2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDc214822,520585
int Abc_CommandDChoice( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDChoice14906,523064
int Abc_CommandDch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDch15011,526507
int Abc_CommandDrwsat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDrwsat15138,531039
int Abc_CommandIRewriteSeq( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIRewriteSeq15206,532854
int Abc_CommandIResyn( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIResyn15279,534934
int Abc_CommandISat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandISat15347,536782
int Abc_CommandIFraig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIFraig15430,539163
int Abc_CommandDFraig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDFraig15550,543142
int Abc_CommandCSweep( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCSweep15647,546237
int Abc_CommandIProve( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIProve15749,549182
int Abc_CommandQbf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandQbf16071,560479
int Abc_CommandNpnLoad( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandNpnLoad16177,563673
int Abc_CommandNpnSave( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandNpnSave16217,564651
int Abc_CommandSendAig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSendAig16258,565621
int Abc_CommandSendStatus( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSendStatus16337,567898
int Abc_CommandBackup( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBackup16384,569108
int Abc_CommandRestore( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRestore16417,569907
int Abc_CommandMinisat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMinisat16461,570913
int Abc_CommandMinisimp( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMinisimp16471,571163
int Abc_CommandFraig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFraig16494,571637
int Abc_CommandFraigTrust( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFraigTrust16674,578324
int Abc_CommandFraigStore( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFraigStore16734,579804
int Abc_CommandFraigRestore( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFraigRestore16790,581101
int Abc_CommandFraigClean( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFraigClean16883,584094
int Abc_CommandFraigSweep( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFraigSweep16926,585158
int Abc_CommandFraigDress( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFraigDress17008,587394
int Abc_CommandDumpEquiv( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDumpEquiv17092,590141
int Abc_CommandRecStart3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRecStart317179,593808
int Abc_CommandRecStop3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRecStop317295,597642
int Abc_CommandRecPs3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRecPs317336,598576
int Abc_CommandRecAdd3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRecAdd317380,599607
int Abc_CommandRecDump3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRecDump317432,600838
int Abc_CommandRecMerge3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRecMerge317516,603054
int Abc_CommandMap( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMap17597,605235
int Abc_CommandAmap( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAmap17839,613846
int Abc_CommandPhaseMap( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPhaseMap18018,620051
int Abc_CommandUnmap( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandUnmap18072,621424
int Abc_CommandAttach( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAttach18126,622654
int Abc_CommandSuperChoice( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSuperChoice18182,623896
int Abc_CommandSuperChoiceLut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSuperChoiceLut18245,625513
int Abc_CommandTimeScale( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTimeScale18345,628575
int Abc_CommandIf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIf18706,639463
int Abc_CommandIfif( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIfif19276,661202
int Abc_CommandDsdSave( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDsdSave19401,665723
int Abc_CommandDsdLoad( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDsdLoad19470,667571
int Abc_CommandDsdFree( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDsdFree19551,669822
int Abc_CommandDsdPs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDsdPs19607,671160
int Abc_CommandDsdMatch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDsdMatch19699,674273
int Abc_CommandDsdMerge( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDsdMerge19810,678331
int Abc_CommandDsdFilter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDsdFilter19881,680336
int Abc_CommandInit( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInit19991,684789
int Abc_CommandZero( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandZero20156,689849
int Abc_CommandUndc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandUndc20221,691337
int Abc_CommandOneHot( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandOneHot20311,693927
int Abc_CommandPipe( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPipe20374,695491
int Abc_CommandSeq( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSeq20440,697220
int Abc_CommandUnseq( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandUnseq20507,698753
int Abc_CommandRetime( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRetime20578,700499
int Abc_CommandDRetime( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDRetime20741,706035
int Abc_CommandFlowRetime( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFlowRetime20880,710748
int Abc_CommandCRetime( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCRetime21030,715663
int Abc_CommandSeqFpga( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSeqFpga21099,717425
int Abc_CommandSeqMap( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSeqMap21222,720909
int Abc_CommandSeqSweep( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSeqSweep21346,724396
int Abc_CommandSeqSweep2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSeqSweep221540,731168
int Abc_CommandTestSeqSweep( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestSeqSweep21829,742329
int Abc_CommandTestScorr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestScorr21993,748482
int Abc_CommandLcorr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandLcorr22103,752432
int Abc_CommandSeqCleanup( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSeqCleanup22231,756323
int Abc_CommandCycle( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCycle22350,760370
int Abc_CommandXsim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandXsim22442,763257
int Abc_CommandSim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSim22529,765785
int Abc_CommandSim3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSim322673,770742
int Abc_CommandDarPhase( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDarPhase22902,779839
int Abc_CommandSynch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSynch23051,784747
int Abc_CommandClockGate( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandClockGate23163,788778
int Abc_CommandExtWin( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandExtWin23324,794468
int Abc_CommandInsWin( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInsWin23423,797318
int Abc_CommandSymFun( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSymFun23537,800717
int Abc_CommandPermute( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPermute23638,804265
int Abc_CommandUnpermute( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandUnpermute23743,807656
int Abc_CommandCubeEnum( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCubeEnum23792,808874
int Abc_CommandPathEnum( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPathEnum23842,810315
int Abc_CommandFunEnum( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFunEnum23899,812076
int Abc_CommandCec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCec24035,817077
int Abc_CommandDCec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDCec24209,823098
int Abc_CommandDSec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDSec24366,828442
int Abc_CommandDProve( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDProve24506,833615
int Abc_CommandAbSec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbSec24769,844575
int Abc_CommandSimSec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSimSec24876,848234
int Abc_CommandMatch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMatch25001,852693
int Abc_CommandSat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSat25114,856471
int Abc_CommandDSat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDSat25241,860391
int Abc_CommandXSat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandXSat25457,868124
int Abc_CommandSatoko( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSatoko25595,872651
int Abc_CommandAbc9Satoko( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Satoko25685,877055
int Abc_CommandAbc9Sat3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Sat325761,879546
int Abc_CommandPSat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPSat25829,881596
int Abc_CommandProve( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandProve25988,887051
int Abc_CommandDebug( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDebug26164,893571
int Abc_CommandEco( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandEco26215,894829
int Abc_CommandBmc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBmc26259,895932
int Abc_CommandBmc2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBmc226442,902355
int Abc_CommandBmc3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBmc326643,909385
int Abc_CommandBmcInter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBmcInter26941,921754
int Abc_CommandIndcut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIndcut27177,931180
int Abc_CommandEnlarge( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandEnlarge27368,937894
int Abc_CommandTempor( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTempor27451,940263
int Abc_CommandInduction( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInduction27597,945492
int Abc_CommandConstr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandConstr27738,950271
int Abc_CommandUnfold( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandUnfold27925,956896
int Abc_CommandFold( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFold28080,962018
int Abc_CommandBm( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBm28161,964412
int Abc_CommandBm2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBm228241,967192
int Abc_CommandSaucy( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandSaucy28351,971276
int Abc_CommandTestCex( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTestCex28504,977010
int Abc_CommandPdr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPdr28607,980697
int Abc_CommandReconcile( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandReconcile28905,994178
int Abc_CommandCexSave( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCexSave29018,998016
int Abc_CommandCexLoad( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCexLoad29059,998973
int Abc_CommandCexCut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCexCut29104,1000012
int Abc_CommandCexMerge( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCexMerge29228,1004011
int Abc_CommandCexMin( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCexMin29321,1006822
int Abc_CommandDualRail( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandDualRail29432,1010834
int Abc_CommandBlockPo( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBlockPo29549,1014865
int Abc_CommandIso( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandIso29633,1017294
int Abc_CommandTraceStart( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTraceStart29707,1019324
int Abc_CommandTraceCheck( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTraceCheck29762,1020529
static inline int Abc_NtkCompareWithBest( Abc_Ntk_t * pBest, Abc_Ntk_t * p, Abc_NtkCompareWithBest29823,1021908
int Abc_CommandAbcSave( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbcSave29863,1023407
int Abc_CommandAbcLoad( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbcLoad29918,1024934
int Abc_CommandAbc9Read( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Read29960,1025969
int Abc_CommandAbc9ReadBlif( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReadBlif30065,1029463
int Abc_CommandAbc9ReadCBlif( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReadCBlif30135,1031546
int Abc_CommandAbc9ReadStg( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReadStg30215,1034016
int Abc_CommandAbc9ReadVer( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReadVer30288,1036119
int Abc_CommandAbc9Get( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Get30364,1038332
int Abc_CommandAbc9Put( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Put30478,1042401
static inline int Gia_ManCompareWithBest( Gia_Man_t * pBest, Gia_Man_t * p, int * pnBestLuts, int * pnBestEdges, int * pnBestLevels, int fArea )Gia_ManCompareWithBest30629,1048028
int Abc_CommandAbc9Save( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Save30662,1049238
int Abc_CommandAbc9Save2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Save230715,1050681
int Abc_CommandAbc9SaveAig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SaveAig30768,1052132
int Abc_CommandAbc9Load( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Load30816,1053442
int Abc_CommandAbc9Load2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Load230859,1054565
int Abc_CommandAbc9LoadAig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9LoadAig30906,1055778
int Abc_CommandAbc9WriteVer( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9WriteVer30948,1056800
int Abc_CommandAbc9Write( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Write31029,1059229
int Abc_CommandAbc9WriteLut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9WriteLut31123,1062198
int Abc_CommandAbc9Ps( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Ps31185,1063907
int Abc_CommandAbc9PFan( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9PFan31293,1067726
int Abc_CommandAbc9PSig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9PSig31346,1069154
int Abc_CommandAbc9Status( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Status31396,1070451
int Abc_CommandAbc9MuxProfile( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9MuxProfile31436,1071369
int Abc_CommandAbc9MuxPos( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9MuxPos31522,1074283
int Abc_CommandAbc9MuxStr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9MuxStr31569,1075517
int Abc_CommandAbc9PrintTruth( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9PrintTruth31617,1076733
int Abc_CommandAbc9Unate( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Unate31704,1079598
int Abc_CommandAbc9Rex2Gia( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Rex2Gia31753,1081045
int Abc_CommandAbc9RexWalk( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9RexWalk31818,1083449
int Abc_CommandAbc9Show( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Show31887,1085652
int Abc_CommandAbc9SetRegNum( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SetRegNum31952,1087551
int Abc_CommandAbc9Strash( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Strash32014,1089421
int Abc_CommandAbc9Topand( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Topand32157,1094735
int Abc_CommandAbc9Add1Hot( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Add1Hot32208,1096110
int Abc_CommandAbc9Cof( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Cof32254,1097312
int Abc_CommandAbc9Trim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Trim32340,1100016
int Abc_CommandAbc9Dfs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Dfs32421,1102529
int Abc_CommandAbc9Sim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Sim32495,1104619
int Abc_CommandAbc9Sim3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Sim332631,1109560
int Abc_CommandAbc9MLGen( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9MLGen32784,1115243
int Abc_CommandAbc9MLTest( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9MLTest32882,1118593
int Abc_CommandAbc9ReadSim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReadSim32954,1120837
int Abc_CommandAbc9WriteSim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9WriteSim33056,1124516
int Abc_CommandAbc9PrintSim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9PrintSim33133,1126969
int Abc_CommandAbc9GenSim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9GenSim33188,1128485
int Abc_CommandAbc9SimRsb( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SimRsb33307,1132686
int Abc_CommandAbc9Resim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Resim33374,1134712
int Abc_CommandAbc9SpecI( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SpecI33439,1136808
int Abc_CommandAbc9Equiv( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Equiv33523,1139576
int Abc_CommandAbc9Equiv2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Equiv233641,1143881
int Abc_CommandAbc9Equiv3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Equiv333784,1149039
int Abc_CommandAbc9Semi( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Semi33954,1155455
int Abc_CommandAbc9Times( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Times34093,1160606
int Abc_CommandAbc9Frames( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Frames34151,1162293
int Abc_CommandAbc9Retime( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Retime34260,1166104
int Abc_CommandAbc9Enable( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Enable34325,1167968
int Abc_CommandAbc9Dc2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Dc234380,1169439
int Abc_CommandAbc9Dsd( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Dsd34431,1170847
int Abc_CommandAbc9Bidec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Bidec34483,1172314
int Abc_CommandAbc9Shrink( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Shrink34539,1173879
int Abc_CommandAbc9Fx( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Fx34616,1176320
int Abc_CommandAbc9Balance( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Balance34708,1179574
int Abc_CommandAbc9BalanceLut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9BalanceLut34794,1182418
int Abc_CommandAbc9Resub( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Resub34895,1186019
int Abc_CommandAbc9Syn2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Syn234993,1189546
int Abc_CommandAbc9Synch2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Synch235086,1192697
int Abc_CommandAbc9Syn3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Syn335206,1197086
int Abc_CommandAbc9Syn4( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Syn435257,1198487
int Abc_CommandAbc9False( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9False35308,1199888
int Abc_CommandAbc9Miter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Miter35386,1202482
int Abc_CommandAbc9Miter2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Miter235545,1207851
int Abc_CommandAbc9Append( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Append35624,1210289
int Abc_CommandAbc9Scl( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Scl35702,1212475
int Abc_CommandAbc9Lcorr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Lcorr35778,1214827
int Abc_CommandAbc9Scorr( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Scorr35889,1218779
int Abc_CommandAbc9Choice( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Choice36020,1223712
int Abc_CommandAbc9Sat( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Sat36082,1225659
int Abc_CommandAbc9SatEnum( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SatEnum36214,1230739
int Abc_CommandAbc9Fraig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Fraig36281,1232936
int Abc_CommandAbc9CFraig( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9CFraig36439,1239141
int Abc_CommandAbc9Srm( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Srm36519,1241982
int Abc_CommandAbc9Srm2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Srm236625,1245635
int Abc_CommandAbc9Filter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Filter36722,1248933
int Abc_CommandAbc9Reduce( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Reduce36804,1251741
int Abc_CommandAbc9EquivMark( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9EquivMark36867,1253576
int Abc_CommandAbc9EquivFilter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9EquivFilter36932,1256001
int Abc_CommandAbc9Cec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Cec36978,1257400
int Abc_CommandAbc9Verify( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Verify37215,1266127
int Abc_CommandAbc9Sweep( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Sweep37294,1268897
int Abc_CommandAbc9Force( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Force37391,1272189
int Abc_CommandAbc9Embed( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Embed37455,1274152
int Abc_CommandAbc9Sopb( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Sopb37555,1277720
int Abc_CommandAbc9Dsdb( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Dsdb37656,1281131
int Abc_CommandAbc9Flow( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Flow37780,1285545
int Abc_CommandAbc9Flow2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Flow237861,1288352
int Abc_CommandAbc9Flow3( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Flow337947,1291397
int Abc_CommandAbc9If( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9If38043,1294794
int Abc_CommandAbc9Iff( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Iff38636,1317675
int Abc_CommandAbc9Iiff( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Iiff38691,1319229
int Abc_CommandAbc9If2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9If238785,1322419
int Abc_CommandAbc9Jf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Jf38965,1328854
int Abc_CommandAbc9Kf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Kf39125,1334884
int Abc_CommandAbc9Lf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Lf39291,1341476
int Abc_CommandAbc9Mf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Mf39536,1351249
int Abc_CommandAbc9Nf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Nf39737,1359138
int Abc_CommandAbc9Of( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Of39953,1368026
int Abc_CommandAbc9Pack( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Pack40184,1377244
int Abc_CommandAbc9Edge( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Edge40282,1380629
int Abc_CommandAbc9SatLut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SatLut40434,1386485
int Abc_CommandAbc9Unmap( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Unmap40555,1391115
int Abc_CommandAbc9Struct( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Struct40604,1392474
int Abc_CommandAbc9Trace( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Trace40662,1394048
int Abc_CommandAbc9Speedup( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Speedup40721,1395701
int Abc_CommandAbc9Era( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Era40817,1398938
int Abc_CommandAbc9Dch( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Dch40907,1402076
int Abc_CommandAbc9Rpm( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Rpm41042,1406996
int Abc_CommandAbc9BackReach( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9BackReach41122,1409583
int Abc_CommandAbc9Posplit( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Posplit41214,1412687
int Abc_CommandAbc9Permute( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Permute41282,1414801
int Abc_CommandAbc9ReachM( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReachM41331,1416052
int Abc_CommandAbc9ReachP( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReachP41510,1423094
int Abc_CommandAbc9ReachN( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReachN41660,1428881
int Abc_CommandAbc9ReachY( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ReachY41790,1433732
int Abc_CommandAbc9Undo( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Undo41947,1439530
int Abc_CommandAbc9Mesh( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Mesh41995,1440671
int Abc_CommandAbc9Iso( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Iso42104,1444233
int Abc_CommandAbc9IsoNpn( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9IsoNpn42190,1447315
int Abc_CommandAbc9IsoSt( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9IsoSt42257,1449393
int Abc_CommandAbc9Compare( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Compare42324,1451461
int Abc_CommandAbc9CexInfo( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9CexInfo42382,1453176
int Abc_CommandAbc9Cycle( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Cycle42435,1454614
int Abc_CommandAbc9Cone( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Cone42499,1456647
int Abc_CommandAbc9Slice( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Slice42671,1462909
int Abc_CommandAbc9PoPart( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9PoPart42729,1464641
int Abc_CommandAbc9PoPart2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9PoPart242800,1467192
int Abc_CommandAbc9GroupProve( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9GroupProve42902,1470976
int Abc_CommandAbc9MultiProve( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9MultiProve42977,1473539
int Abc_CommandAbc9SplitProve( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SplitProve43109,1478631
int Abc_CommandAbc9Bmc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Bmc43219,1482826
int Abc_CommandAbc9SBmc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SBmc43360,1488570
int Abc_CommandAbc9ChainBmc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ChainBmc43507,1494713
int Abc_CommandAbc9BCore( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9BCore43593,1497642
int Abc_CommandAbc9ICheck( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ICheck43722,1502220
int Abc_CommandAbc9SatTest( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SatTest43820,1505808
int Abc_CommandAbc9FFTest( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9FFTest43869,1507211
int Abc_CommandAbc9Qbf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Qbf44165,1520424
int Abc_CommandAbc9QVar( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9QVar44304,1525317
int Abc_CommandAbc9GenQbf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9GenQbf44384,1527886
int Abc_CommandAbc9HomoQbf( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9HomoQbf44504,1531889
int Abc_CommandAbc9SatFx( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SatFx44573,1534003
int Abc_CommandAbc9SatClp( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9SatClp44653,1536564
int Abc_CommandAbc9Inse( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Inse44734,1539143
int Abc_CommandAbc9Maxi( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Maxi44829,1542495
int Abc_CommandAbc9Bmci( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Bmci44921,1545734
int Abc_CommandAbc9PoXsim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9PoXsim45016,1549034
int Abc_CommandAbc9Demiter( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Demiter45079,1550985
int Abc_CommandAbc9Fadds( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Fadds45178,1554393
int Abc_CommandAbc9ATree( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9ATree45320,1560081
int Abc_CommandAbc9Polyn( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Polyn45379,1562019
int Abc_CommandAbc9Acec( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Acec45486,1566532
int Abc_CommandAbc9Anorm( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Anorm45700,1574514
int Abc_CommandAbc9Decla( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Decla45750,1575904
int Abc_CommandAbc9Esop( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Esop45801,1577285
int Abc_CommandAbc9Exorcism( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Exorcism45848,1578576
int Abc_CommandAbc9Mfs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Mfs45992,1583474
int Abc_CommandAbc9Mfsd( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Mfsd46169,1590587
int Abc_CommandAbc9DeepSyn( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9DeepSyn46340,1597637
int Abc_CommandAbc9CexCut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9CexCut46450,1601715
int Abc_CommandAbc9CexMerge( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9CexMerge46466,1602026
int Abc_CommandAbc9CexMin( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9CexMin46559,1604824
int Abc_CommandAbc9AbsCreate( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9AbsCreate46654,1607967
int Abc_CommandAbc9AbsDerive( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9AbsDerive46726,1610032
int Abc_CommandAbc9AbsRefine( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9AbsRefine46782,1611545
int Abc_CommandAbc9GlaDerive( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9GlaDerive46864,1614116
int Abc_CommandAbc9GlaRefine( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9GlaRefine46930,1615984
int Abc_CommandAbc9GlaShrink( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9GlaShrink47017,1618900
int Abc_CommandAbc9Gla( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Gla47108,1621850
int Abc_CommandAbc9Vta( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Vta47415,1634456
int Abc_CommandAbc9Vta2Gla( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Vta2Gla47617,1642310
int Abc_CommandAbc9Gla2Vta( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Gla2Vta47668,1643778
int Abc_CommandAbc9Fla2Gla( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Fla2Gla47737,1645983
int Abc_CommandAbc9Gla2Fla( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Gla2Fla47788,1647435
int Abc_CommandAbc9Gen( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Gen47840,1648888
int Abc_CommandAbc9Cfs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Cfs47978,1653904
int Abc_CommandAbc9Test( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbc9Test48104,1658453

src/base/abci/abcCascade.c,2978
#define BDD_FUNC_MAX BDD_FUNC_MAX36,913
DdNode * Abc_ResBuildBdd( Abc_Ntk_t * pNtk, DdManager * dd )Abc_ResBuildBdd56,1590
void Abc_ResStartPart( int nInputs, unsigned uParts[], int nParts )Abc_ResStartPart118,3919
void Abc_ResStartPart2( int nInputs, unsigned uParts[], int nParts )Abc_ResStartPart2149,4726
int Abc_ResCheckUnique( char Pats[], int nPats, int pat )Abc_ResCheckUnique172,5339
int Abc_ResCheckNonStrict( char Pattern[], int nVars, int nBits )Abc_ResCheckNonStrict192,5797
int Abc_ResCofCount( DdManager * dd, DdNode * bFunc, unsigned uMask, int * pCheck )Abc_ResCofCount238,7058
int Abc_ResCost( DdManager * dd, DdNode * bFunc, unsigned uMask, int * pnCofs, int * pCheck )Abc_ResCost296,8790
int Abc_ResMigrate( DdManager * dd, DdNode * bFunc, int nInputs, unsigned uParts[], int iPart1, int iPart2 )Abc_ResMigrate315,9413
void Abc_ResPrint( DdManager * dd, DdNode * bFunc, int nInputs, unsigned uParts[], int nParts )Abc_ResPrint360,11015
void Abc_ResPrintAllCofs( DdManager * dd, DdNode * bFunc, int nInputs, int nCofMax )Abc_ResPrintAllCofs385,11816
void Abc_ResSwapRandom( DdManager * dd, DdNode * bFunc, int nInputs, unsigned uParts[], int nParts, int nTimes )Abc_ResSwapRandom414,12734
void Abc_ResPartition( DdManager * dd, DdNode * bFunc, int nInputs )Abc_ResPartition455,13900
void Abc_ResPartitionTest( Abc_Ntk_t * pNtk )Abc_ResPartitionTest558,17696
int Abc_NtkBddCofCount( DdManager * dd, DdNode * bFunc, DdNode ** pbVars, int nVars )Abc_NtkBddCofCount586,18369
void Abc_NtkExploreCofs2( DdManager * dd, DdNode * bFunc, DdNode ** pbVars, int nIns, int nLutSize )Abc_NtkExploreCofs2618,19377
void Abc_NtkExploreCofs( DdManager * dd, DdNode * bFunc, DdNode ** pbVars, int nIns, int nLutSize )Abc_NtkExploreCofs637,20034
DdNode * Abc_NtkBddFindAddConst( DdManager * dd, DdNode * bFunc, int nOuts )Abc_NtkBddFindAddConst691,21603
DdNode * Abc_NtkBddToAdd_rec( DdManager * dd, DdNode * bFunc, int nOuts, stmm_table * tTable, int fCompl )Abc_NtkBddToAdd_rec733,22696
DdNode * Abc_NtkBddToAdd( DdManager * dd, DdNode * bFunc, int nOuts )Abc_NtkBddToAdd765,23908
DdNode * Abc_NtkAddToBdd_rec( DdManager * dd, DdNode * aFunc, int nIns, int nOuts, stmm_table * tTable )Abc_NtkAddToBdd_rec790,24687
DdNode * Abc_NtkAddToBdd( DdManager * dd, DdNode * aFunc, int nIns, int nOuts )Abc_NtkAddToBdd823,25843
DdNode * Abc_NtkBddDecCharFunc( DdManager * dd, DdNode ** pFuncs, int nOuts, int Mask, int nBits )Abc_NtkBddDecCharFunc848,26601
DdNode * Abc_NtkBddDecTry( reo_man * pReo, DdManager * dd, DdNode ** pFuncs, int nIns, int nOuts, int Mask, int nBits )Abc_NtkBddDecTry880,27606
DdNode * Abc_NtkBddDecInt( reo_man * pReo, DdManager * dd, DdNode ** pFuncs, int nIns, int nOuts )Abc_NtkBddDecInt924,29009
Abc_Ntk_t * Abc_NtkCreateFromCharFunc( Abc_Ntk_t * pNtk, DdManager * dd, DdNode * bFunc )Abc_NtkCreateFromCharFunc954,29818
Abc_Ntk_t * Abc_NtkBddDec( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkBddDec999,31429

src/base/abci/abcRenode.c,912
static reo_man * s_pReo       = NULL;s_pReo45,1251
static DdManager * s_pDd      = NULL;s_pDd46,1289
static Vec_Int_t * s_vMemory  = NULL;s_vMemory47,1327
static Vec_Int_t * s_vMemory2 = NULL;s_vMemory248,1365
static int nDsdCounter = 0;nDsdCounter50,1404
Abc_Ntk_t * Abc_NtkRenode( Abc_Ntk_t * pNtk, int nFaninMax, int nCubeMax, int nFlowIters, int nAreaIters, int fArea, int fUseBdds, int fUseSops, int fUseCnfs, int fUseMv, int fVerbose )Abc_NtkRenode67,1927
int Abc_NtkRenodeEvalAig( If_Man_t * p, If_Cut_t * pCut )Abc_NtkRenodeEvalAig169,4836
int Abc_NtkRenodeEvalBdd( If_Man_t * p, If_Cut_t * pCut )Abc_NtkRenodeEvalBdd199,5753
int Abc_NtkRenodeEvalSop( If_Man_t * p, If_Cut_t * pCut )Abc_NtkRenodeEvalSop229,6791
int Abc_NtkRenodeEvalCnf( If_Man_t * p, If_Cut_t * pCut )Abc_NtkRenodeEvalCnf253,7483
int Abc_NtkRenodeEvalMv( If_Man_t * p, If_Cut_t * pCut )Abc_NtkRenodeEvalMv288,8749

src/base/abci/abcLut.c,2887
#define LARGE_LEVEL LARGE_LEVEL26,588
#define SCL_LUT_MAX SCL_LUT_MAX32,837
#define SCL_VARS_MAX SCL_VARS_MAX33,894
#define SCL_NODE_MAX SCL_NODE_MAX34,962
typedef struct Abc_ManScl_t_ Abc_ManScl_t;Abc_ManScl_t36,1027
struct Abc_ManScl_t_Abc_ManScl_t_37,1070
    int                nLutSize;    // the LUT sizenLutSize40,1109
    int                nCutSizeMax; // the max number of leaves of the conenCutSizeMax41,1161
    int                nNodesMax;   // the max number of divisors in the conenNodesMax42,1237
    int                nWords;      // the number of machine words in sim infonWords43,1315
    Vec_Ptr_t *        vLeaves;     // leaves of the cutvLeaves45,1439
    Vec_Ptr_t *        vVolume;     // volume of the cutvVolume46,1496
    int                pBSet[SCL_VARS_MAX]; // bound setpBSet47,1553
    unsigned *         uTruth;      // truth table of the coneuTruth49,1655
    unsigned **        uVars;       // elementary truth tablesuVars51,1756
    unsigned **        uSims;       // truth tables of the nodesuSims52,1819
    unsigned **        uCofs;       // truth tables of the cofactorsuCofs53,1884
static Vec_Ptr_t * s_pLeaves = NULL;s_pLeaves56,1957
int Abc_NtkSuperChoiceLut( Abc_Ntk_t * pNtk, int nLutSize, int nCutSizeMax, int fVerbose )Abc_NtkSuperChoiceLut81,2916
void Abc_NodeLutMap( Cut_Man_t * pManCuts, Abc_Obj_t * pObj )Abc_NodeLutMap210,6994
Cut_Man_t * Abc_NtkStartCutManForScl( Abc_Ntk_t * pNtk, int nLutSize )Abc_NtkStartCutManForScl249,8211
Abc_ManScl_t * Abc_ManSclStart( int nLutSize, int nCutSizeMax, int nNodesMax )Abc_ManSclStart286,9529
void Abc_ManSclStop( Abc_ManScl_t * p )Abc_ManSclStop323,10787
unsigned * Abc_NodeSuperChoiceTruth( Abc_ManScl_t * pManScl )Abc_NodeSuperChoiceTruth344,11232
void Abc_NodeSuperChoiceCollect2_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vVolume )Abc_NodeSuperChoiceCollect2_rec391,12898
void Abc_NodeSuperChoiceCollect2( Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vVolume )Abc_NodeSuperChoiceCollect2413,13527
void Abc_NodeSuperChoiceCollect_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vVolume )Abc_NodeSuperChoiceCollect_rec438,14264
void Abc_NodeSuperChoiceCollect( Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vVolume )Abc_NodeSuperChoiceCollect465,15061
void Abc_NodeLeavesRemove( Vec_Ptr_t * vLeaves, unsigned uPhase, int nVars )Abc_NodeLeavesRemove493,15941
int Abc_NodeGetLevel( Abc_Obj_t * pObj )Abc_NodeGetLevel512,16440
Abc_Obj_t * Abc_NodeSuperChoiceLut( Abc_ManScl_t * p, Abc_Obj_t * pObj )Abc_NodeSuperChoiceLut533,16935
int Abc_NodeCompareLevelsInc( int * pp1, int * pp2 )Abc_NodeCompareLevelsInc601,19375
void Abc_NodeDecomposeSort( Abc_Obj_t ** pLeaves, int nVars, int * pBSet, int nLutSize )Abc_NodeDecomposeSort624,20001
int Abc_NodeDecomposeStep( Abc_ManScl_t * p )Abc_NodeDecomposeStep665,21103

src/base/abci/abcCas.c,110
Abc_Ntk_t * Abc_NtkCascade( Abc_Ntk_t * pNtk, int nLutSize, int fCheck, int fVerbose )Abc_NtkCascade60,1796

src/base/abci/abcQbf.c,628
void Abc_NtkQbf( Abc_Ntk_t * pNtk, int nPars, int nItersMax, int fDumpCnf, int fVerbose )Abc_NtkQbf64,2429
void Abc_NtkModelToVector( Abc_Ntk_t * pNtk, Vec_Int_t * vPiValues )Abc_NtkModelToVector229,8017
void Abc_NtkVectorClearPars( Vec_Int_t * vPiValues, int nPars )Abc_NtkVectorClearPars248,8492
void Abc_NtkVectorClearVars( Abc_Ntk_t * pNtk, Vec_Int_t * vPiValues, int nPars )Abc_NtkVectorClearVars266,8904
void Abc_NtkVectorPrintPars( Vec_Int_t * vPiValues, int nPars )Abc_NtkVectorPrintPars284,9351
void Abc_NtkVectorPrintVars( Abc_Ntk_t * pNtk, Vec_Int_t * vPiValues, int nPars )Abc_NtkVectorPrintVars302,9767

src/base/abci/abcMeasure.c,874
void Abc_NtkPrintMeasures( unsigned * pTruth, int nVars )Abc_NtkPrintMeasures46,1235
void Abc_Ntk4VarObjPrint_rec( Abc_Obj_t * pObj )Abc_Ntk4VarObjPrint_rec110,3255
unsigned Abc_Ntk4VarObj( Vec_Ptr_t * vNodes )Abc_Ntk4VarObj144,3995
void Abc_Ntk4VarTable( Abc_Ntk_t * pNtk )Abc_Ntk4VarTable173,4750
int Abc_NtkPrintOneDecompCheckCofList( unsigned * uCofs, int nCofs )Abc_NtkPrintOneDecompCheckCofList276,8819
int Abc_NtkPrintOneDecompCheck( unsigned * uCofs, int nCofs, unsigned uMask )Abc_NtkPrintOneDecompCheck307,9498
void Abc_NtkPrintOneDecomp_rec( unsigned * uCofs, int nCofs, int nVars, unsigned uMask, int * pBestSize, unsigned * puBestMask )Abc_NtkPrintOneDecomp_rec348,10544
void Abc_NtkPrintOneDecomp( unsigned * pTruth, int nVars )Abc_NtkPrintOneDecomp388,11654
void Abc_NtkPrintOneDec( unsigned * pTruth, int nVars )Abc_NtkPrintOneDec430,12784

src/base/abci/abcGen.c,2145
void Abc_WriteFullAdder( FILE * pFile )Abc_WriteFullAdder45,1293
void Abc_WriteAdder( FILE * pFile, int nVars )Abc_WriteAdder86,2624
void Abc_GenAdder( char * pFileName, int nVars )Abc_GenAdder119,3881
void Abc_WriteMulti( FILE * pFile, int nVars )Abc_WriteMulti140,4410
void Abc_GenMulti( char * pFileName, int nVars )Abc_GenMulti183,6171
void Abc_WriteComp( FILE * pFile )Abc_WriteComp204,6692
void Abc_WriteLayer( FILE * pFile, int nVars, int fSkip1 )Abc_WriteLayer217,7094
void Abc_GenSorter( char * pFileName, int nVars )Abc_GenSorter259,8196
void Abc_WriteCell( FILE * pFile )Abc_WriteCell330,10370
void Abc_GenMesh( char * pFileName, int nVars )Abc_GenMesh364,11368
void Abc_WriteKLut( FILE * pFile, int nLutSize )Abc_WriteKLut435,13488
void Abc_GenFpga( char * pFileName, int nLutSize, int nLuts, int nVars )Abc_GenFpga483,14921
void Abc_GenOneHot( char * pFileName, int nVars )Abc_GenOneHot601,18873
void Abc_GenOneHotIntervals( char * pFileName, int nPis, int nRegs, Vec_Ptr_t * vOnehots )Abc_GenOneHotIntervals642,20268
void Abc_GenRandom( char * pFileName, int nPis )Abc_GenRandom703,22319
void Abc_GenFsmCond( Vec_Str_t * vCond, int nPis, int Prob )Abc_GenFsmCond752,23861
void Abc_GenFsm( char * pFileName, int nPis, int nPos, int nStates, int nLines, int ProbI, int ProbO )Abc_GenFsm768,24274
void Abc_AdderTree( FILE * pFile, int nArgs, int nBits )Abc_AdderTree836,26561
void Abc_GenAdderTree( char * pFileName, int nArgs, int nBits )Abc_GenAdderTree866,27874
int Abc_GenSignedBoothPP( Gia_Man_t * p, int a, int b, int c, int d, int e )Abc_GenSignedBoothPP886,28436
Gia_Man_t * Abc_GenSignedBoothPPTest( int nArgA, int nArgB )Abc_GenSignedBoothPPTest908,29095
Gia_Man_t * Abc_GenSignedBooth( int nArgN, int nArgM )Abc_GenSignedBooth977,31039
Mini_Aig_t * Abc_GenSignedBoothMini( int nArgN, int nArgM )Abc_GenSignedBoothMini1034,32957
void Abc_WriteBoothPartialProducts( FILE * pFile, int nVars )Abc_WriteBoothPartialProducts1055,33472
void Abc_WriteBooth( FILE * pFile, int nVars )Abc_WriteBooth1091,34990
void Abc_GenBooth( char * pFileName, int nVars )Abc_GenBooth1132,36528

src/base/abci/abcProve.c,479
int Abc_NtkMiterProve( Abc_Ntk_t ** ppNtk, void * pPars )Abc_NtkMiterProve62,2202
Abc_Ntk_t * Abc_NtkMiterFraig( Abc_Ntk_t * pNtk, int nBTLimit, ABC_INT64_T nInspLimit, int * pRetValue, int * pNumFails, ABC_INT64_T * pNumConfs, ABC_INT64_T * pNumInspects )Abc_NtkMiterFraig250,10095
void Abc_NtkMiterPrint( Abc_Ntk_t * pNtk, char * pString, abctime clk, int fVerbose )Abc_NtkMiterPrint316,12560
Abc_Ntk_t * Abc_NtkMiterRwsat( Abc_Ntk_t * pNtk )Abc_NtkMiterRwsat337,13141

src/base/abci/abcRunGen.c,79
void Acb_NtkRunGen( char * pFileNames[2], int fVerbose )Acb_NtkRunGen45,1280

src/base/abci/abcVerify.c,1577
void Abc_NtkCecSat( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nConfLimit, int nInsLimit )Abc_NtkCecSat56,1750
void Abc_NtkCecFraig( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nSeconds, int fVerbose )Abc_NtkCecFraig123,3880
void Abc_NtkCecFraigPart( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nSeconds, int nPartSize, int fVerbose )Abc_NtkCecFraigPart255,8363
void Abc_NtkCecFraigPartAuto( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nSeconds, int fVerbose )Abc_NtkCecFraigPartAuto367,12058
void Abc_NtkSecSat( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nConfLimit, int nInsLimit, int nFrames )Abc_NtkSecSat490,16396
int Abc_NtkSecFraig( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nSeconds, int nFrames, int fVerbose )Abc_NtkSecFraig572,18827
int * Abc_NtkVerifyGetCleanModel( Abc_Ntk_t * pNtk, int nFrames )Abc_NtkVerifyGetCleanModel672,21903
int * Abc_NtkVerifySimulatePattern( Abc_Ntk_t * pNtk, int * pModel )Abc_NtkVerifySimulatePattern690,22416
void Abc_NtkVerifyReportError( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int * pModel )Abc_NtkVerifyReportError740,23988
void Abc_NtkGetSeqPoSupp( Abc_Ntk_t * pNtk, int iFrame, int iNumPo )Abc_NtkGetSeqPoSupp812,26438
void Abc_NtkVerifyReportErrorSeq( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int * pModel, int nFrames )Abc_NtkVerifyReportErrorSeq857,27956
void Abc_NtkSimulteBuggyMiter( Abc_Ntk_t * pNtk )Abc_NtkSimulteBuggyMiter1018,33259
int Abc_NtkIsTrueCex( Abc_Ntk_t * pNtk, Abc_Cex_t * pCex )Abc_NtkIsTrueCex1065,34734
int Abc_NtkIsValidCex( Abc_Ntk_t * pNtk, Abc_Cex_t * pCex )Abc_NtkIsValidCex1097,35545

src/base/abci/abcRr.c,3849
typedef struct Abc_RRMan_t_ Abc_RRMan_t;Abc_RRMan_t32,832
struct Abc_RRMan_t_Abc_RRMan_t_33,873
    Abc_Ntk_t *      pNtk;             // the networkpNtk36,917
    int              nFaninLevels;     // the number of fanin levelsnFaninLevels37,971
    int              nFanoutLevels;    // the number of fanout levelsnFanoutLevels38,1040
    Abc_Obj_t *      pNode;            // the nodepNode40,1139
    Abc_Obj_t *      pFanin;           // the faninpFanin41,1190
    Abc_Obj_t *      pFanout;          // the fanoutpFanout42,1242
    Vec_Ptr_t *      vFaninLeaves;     // the leaves of the fanin conevFaninLeaves44,1325
    Vec_Ptr_t *      vFanoutRoots;     // the roots of the fanout conevFanoutRoots45,1396
    Vec_Ptr_t *      vLeaves;          // the leaves of the windowvLeaves47,1485
    Vec_Ptr_t *      vCone;            // the internal nodes of the windowvCone48,1552
    Vec_Ptr_t *      vRoots;           // the roots of the windowvRoots49,1627
    Abc_Ntk_t *      pWnd;             // the window derived for the edgepWnd50,1693
    Abc_Ntk_t *      pMiter;           // the miter derived from the windowpMiter52,1785
    Prove_Params_t * pParams;          // the miter proving parameterspParams53,1861
    int              nNodesOld;        // the old number of nodesnNodesOld55,1961
    int              nLevelsOld;       // the old number of levelsnLevelsOld56,2027
    int              nEdgesTried;      // the number of nodes triednEdgesTried57,2094
    int              nEdgesRemoved;    // the number of nodes provednEdgesRemoved58,2162
    abctime          timeWindow;       // the time to construct the windowtimeWindow59,2231
    abctime          timeMiter;        // the time to construct the mitertimeMiter60,2306
    abctime          timeProve;        // the time to prove the mitertimeProve61,2380
    abctime          timeUpdate;       // the network update timetimeUpdate62,2450
    abctime          timeTotal;        // the total runtimetimeTotal63,2516
int Abc_NtkRR( Abc_Ntk_t * pNtk, int nFaninLevels, int nFanoutLevels, int fUseFanouts, int fVerbose )Abc_NtkRR98,4191
Abc_RRMan_t * Abc_RRManStart()Abc_RRManStart248,8893
void Abc_RRManStop( Abc_RRMan_t * p )Abc_RRManStop275,9823
void Abc_RRManPrintStats( Abc_RRMan_t * p )Abc_RRManPrintStats298,10363
void Abc_RRManClean( Abc_RRMan_t * p )Abc_RRManClean325,11450
int Abc_NtkRRProve( Abc_RRMan_t * p )Abc_NtkRRProve352,12156
int Abc_NtkRRUpdate( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode, Abc_Obj_t * pFanin, Abc_Obj_t * pFanout )Abc_NtkRRUpdate385,13291
int Abc_NtkRRWindow( Abc_RRMan_t * p )Abc_NtkRRWindow429,15053
int Abc_NtkRRTfi_int( Vec_Ptr_t * vLeaves, int LevelLimit )Abc_NtkRRTfi_int492,17474
int Abc_NtkRRTfo_int( Vec_Ptr_t * vLeaves, Vec_Ptr_t * vRoots, int LevelLimit, Abc_Obj_t * pEdgeFanin, Abc_Obj_t * pEdgeFanout )Abc_NtkRRTfo_int544,19014
int Abc_NtkRRTfo_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vRoots, int LevelLimit )Abc_NtkRRTfo_rec609,21161
void Abc_NtkRRTfi_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vCone, int LevelLimit )Abc_NtkRRTfi_rec642,22188
Abc_Ntk_t * Abc_NtkWindow( Abc_Ntk_t * pNtk, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vCone, Vec_Ptr_t * vRoots )Abc_NtkWindow676,23233
void Abc_NtkRRSimulateStart( Abc_Ntk_t * pNtk )Abc_NtkRRSimulateStart729,25103
void Abc_NtkRRSimulateStop( Abc_Ntk_t * pNtk )Abc_NtkRRSimulateStop760,26096
Vec_Str_t * Abc_NtkRRSimulate( Abc_Ntk_t * pNtk )Abc_NtkRRSimulate789,26802
void Sim_TraverseNodes_rec( Abc_Obj_t * pRoot, Vec_Str_t * vTargets, Vec_Ptr_t * vNodes )Sim_TraverseNodes_rec869,29438
void Sim_CollectNodes_rec( Abc_Obj_t * pRoot, Vec_Ptr_t * vField )Sim_CollectNodes_rec899,30302
void Sim_SimulateCollected( Vec_Str_t * vTargets, Vec_Ptr_t * vNodes, Vec_Ptr_t * vField )Sim_SimulateCollected926,31049

src/base/abci/abcFx.c,5150
typedef struct Fx_Man_t_ Fx_Man_t;Fx_Man_t86,4645
struct Fx_Man_t_Fx_Man_t_87,4680
    Vec_Wec_t *     vCubes;     // cube -> litvCubes90,4718
    int             LitCountMax;// max size of divisor to extractLitCountMax91,4765
    int             fCanonDivs; // use only AND/XOR/MUXfCanonDivs92,4831
    Vec_Wec_t *     vLits;      // lit -> cubevLits94,4908
    Vec_Int_t *     vCounts;    // literal counts (currently not used)vCounts95,4955
    Hsh_VecMan_t *  pHash;      // hash table for normalized divisorspHash96,5026
    Vec_Flt_t *     vWeights;   // divisor weightsvWeights97,5096
    Vec_Que_t *     vPrio;      // priority queue for divisors by weightvPrio98,5147
    Vec_Int_t *     vVarCube;   // mapping ObjId into its first cubevVarCube99,5220
    Vec_Int_t *     vLevels;    // variable levelsvLevels100,5289
    Vec_Int_t *     vCubesS;    // single cubes for the given divisorvCubesS102,5419
    Vec_Int_t *     vCubesD;    // cube pairs for the given divisorvCubesD103,5489
    Vec_Int_t *     vCompls;    // complemented attribute of each cube pairvCompls104,5557
    Vec_Int_t *     vCubeFree;  // cube-free divisorvCubeFree105,5633
    Vec_Int_t *     vDiv;       // selected divisorvDiv106,5686
    Vec_Int_t *     vSCC;       // single cubes containment cubesvSCC107,5738
    abctime         timeStart;  // starting timetimeStart109,5823
    int             nVars;      // original problem variablesnVars110,5872
    int             nLits;      // the number of SOP literalsnLits111,5934
    int             nDivs;      // the number of extracted divisorsnDivs112,5996
    int             nCompls;    // the number of complementsnCompls113,6064
    int             nPairsS;    // number of lit pairsnPairsS114,6125
    int             nPairsD;    // number of cube pairsnPairsD115,6180
    int             nDivsS;     // single cube divisorsnDivsS116,6236
    int             nDivMux[3]; // 0 = mux, 1 = compl mux, 2 = no muxnDivMux117,6292
static inline int Fx_ManGetFirstVarCube( Fx_Man_t * p, Vec_Int_t * vCube ) { return Vec_IntEntry( p->vVarCube, Vec_IntEntry(vCube, 0) ); }Fx_ManGetFirstVarCube120,6366
#define Fx_ManForEachCubeVec(Fx_ManForEachCubeVec122,6506
Vec_Wec_t * Abc_NtkFxRetrieve( Abc_Ntk_t * pNtk )Abc_NtkFxRetrieve140,7178
void Abc_NtkFxInsert( Abc_Ntk_t * pNtk, Vec_Wec_t * vCubes )Abc_NtkFxInsert183,8511
int Abc_NtkFxCheck( Abc_Ntk_t * pNtk )Abc_NtkFxCheck283,12252
int Abc_NtkFxPerform( Abc_Ntk_t * pNtk, int nNewNodesMax, int LitCountMax, int fCanonDivs, int fVerbose, int fVeryVerbose )Abc_NtkFxPerform306,12783
Fx_Man_t * Fx_ManStart( Vec_Wec_t * vCubes )Fx_ManStart348,14186
void Fx_ManStop( Fx_Man_t * p )Fx_ManStop362,14590
static inline int Fx_ManComputeLevelDiv( Fx_Man_t * p, Vec_Int_t * vCubeFree )Fx_ManComputeLevelDiv393,15360
static inline int Fx_ManComputeLevelCube( Fx_Man_t * p, Vec_Int_t * vCube )Fx_ManComputeLevelCube400,15646
void Fx_ManComputeLevel( Fx_Man_t * p )Fx_ManComputeLevel407,15901
static inline void Fx_PrintDivArray( Vec_Int_t * vDiv )Fx_PrintDivArray437,16728
static inline void Fx_PrintDiv( Fx_Man_t * p, int iDiv )Fx_PrintDiv448,17074
static void Fx_PrintDivisors( Fx_Man_t * p )Fx_PrintDivisors461,17591
static void Fx_PrintStats( Fx_Man_t * p, abctime clk )Fx_PrintStats467,17748
static int Fx_ManDivNormalize( Vec_Int_t * vCubeFree ) // return 1 if complementedFx_ManDivNormalize491,18626
int Fx_ManDivFindCubeFree( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vCubeFree, int * fWarning )Fx_ManDivFindCubeFree571,21576
static inline void Fx_ManDivFindPivots( Vec_Int_t * vDiv, int * pLit0, int * pLit1 )Fx_ManDivFindPivots646,24172
static inline int Fx_ManDivRemoveLits( Vec_Int_t * vCube, Vec_Int_t * vDiv, int fCompl )Fx_ManDivRemoveLits667,24663
static inline void Fx_ManDivAddLits( Vec_Int_t * vCube, Vec_Int_t * vCube2, Vec_Int_t * vDiv )Fx_ManDivAddLits679,25142
void Fx_ManCreateLiterals( Fx_Man_t * p, int nVars )Fx_ManCreateLiterals712,26154
int Fx_ManCubeSingleCubeDivisors( Fx_Man_t * p, Vec_Int_t * vPivot, int fRemove, int fUpdate )Fx_ManCubeSingleCubeDivisors748,27584
void Fx_ManCubeDoubleCubeDivisors( Fx_Man_t * p, int iFirst, Vec_Int_t * vPivot, int fRemove, int fUpdate, int * fWarning )Fx_ManCubeDoubleCubeDivisors788,28994
void Fx_ManCreateDivisors( Fx_Man_t * p )Fx_ManCreateDivisors852,31414
static inline void Fx_ManCompressCubes( Vec_Wec_t * vCubes, Vec_Int_t * vLit2Cube )Fx_ManCompressCubes888,32610
static inline int Fx_ManGetCubeVar( Vec_Wec_t * vCubes, int iCube )  { return Vec_IntEntry( Vec_WecEntry(vCubes, iCube), 0 );      }Fx_ManGetCubeVar909,33185
void Fx_ManFindCommonPairs( Vec_Wec_t * vCubes, Vec_Int_t * vPart0, Vec_Int_t * vPart1, Vec_Int_t * vPairs, Vec_Int_t * vCompls, Vec_Int_t * vDiv, Vec_Int_t * vCubeFree, int * fWarning )Fx_ManFindCommonPairs910,33318
void Fx_ManUpdate( Fx_Man_t * p, int iDiv, int * fWarning )Fx_ManUpdate965,35360
int Fx_FastExtract( Vec_Wec_t * vCubes, int ObjIdMax, int nNewNodesMax, int LitCountMax, int fCanonDivs, int fVerbose, int fVeryVerbose )Fx_FastExtract1163,43910

src/base/abci/abcCut.c,1458
void Abc_NtkCutsSubtractFanunt( Abc_Ntk_t * pNtk )Abc_NtkCutsSubtractFanunt54,1576
void Abc_NtkCutsAddFanunt( Abc_Ntk_t * pNtk )Abc_NtkCutsAddFanunt89,2508
Cut_Man_t * Abc_NtkCuts( Abc_Ntk_t * pNtk, Cut_Params_t * pParams )Abc_NtkCuts122,3369
void Abc_NtkCutsOracle( Abc_Ntk_t * pNtk, Cut_Oracle_t * p )Abc_NtkCutsOracle228,7058
Cut_Man_t * Abc_NtkSeqCuts( Abc_Ntk_t * pNtk, Cut_Params_t * pParams )Abc_NtkSeqCuts287,8855
int Abc_NtkComputeArea( Abc_Ntk_t * pNtk, Cut_Man_t * p )Abc_NtkComputeArea391,12104
void * Abc_NodeGetCutsRecursive( void * p, Abc_Obj_t * pObj, int fDag, int fTree )Abc_NodeGetCutsRecursive412,12623
void * Abc_NodeGetCuts( void * p, Abc_Obj_t * pObj, int fDag, int fTree )Abc_NodeGetCuts433,13258
void Abc_NodeGetCutsSeq( void * p, Abc_Obj_t * pObj, int fTriv )Abc_NodeGetCutsSeq487,15352
void * Abc_NodeReadCuts( void * p, Abc_Obj_t * pObj )Abc_NodeReadCuts511,16100
void Abc_NodeFreeCuts( void * p, Abc_Obj_t * pObj )Abc_NodeFreeCuts527,16489
void Abc_NtkPrintCuts( void * p, Abc_Ntk_t * pNtk, int fSeq )Abc_NtkPrintCuts543,16864
void Abc_NtkPrintCuts_( void * p, Abc_Ntk_t * pNtk, int fSeq )Abc_NtkPrintCuts_568,17509
Vec_Int_t * Abc_NtkGetNodeAttributes( Abc_Ntk_t * pNtk ) Abc_NtkGetNodeAttributes589,18111
int Abc_NtkSubDagSize_rec( Abc_Obj_t * pObj, Vec_Int_t * vAttrs ) Abc_NtkSubDagSize_rec648,20112
Vec_Int_t * Abc_NtkGetNodeAttributes2( Abc_Ntk_t * pNtk ) Abc_NtkGetNodeAttributes2673,20836

src/base/abci/abciUnfold2.c,188
int Abc_CommandUnfold2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandUnfold213,220
int Abc_CommandFold2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandFold2124,3809

src/base/abci/fahout_cut.c,805
void Abc_NtkMarkFanins_rec( Abc_Obj_t * pLut, int nLevMin )Abc_NtkMarkFanins_rec47,1348
void Abc_NtkMarkFanouts_rec( Abc_Obj_t * pLut, int nLevMax, int nFanMax )Abc_NtkMarkFanouts_rec73,2028
void Abc_NtkCollectCircle( Vec_Ptr_t * vStart, Vec_Ptr_t * vNext, int nFanMax )Abc_NtkCollectCircle101,2788
void Abc_NtkCollectNonOverlapCands( Abc_Obj_t * pLut, Vec_Ptr_t * vStart, Vec_Ptr_t * vNext, Vec_Ptr_t * vCands, Nwk_LMPars_t * pPars )Abc_NtkCollectNonOverlapCands142,3981
int Abc_NtkCountTotalFanins( Abc_Obj_t * pLut, Abc_Obj_t * pCand )Abc_NtkCountTotalFanins212,6339
void Abc_NtkCollectOverlapCands( Abc_Obj_t * pLut, Vec_Ptr_t * vCands, Nwk_LMPars_t * pPars )Abc_NtkCollectOverlapCands232,6848
Vec_Int_t * Abc_NtkLutMerge( Abc_Ntk_t * pNtk, Nwk_LMPars_t * pPars )Abc_NtkLutMerge282,8528

src/base/abci/abcOdc.c,10542
#define ABC_DC_MAX_NODES ABC_DC_MAX_NODES30,809
typedef unsigned short Odc_Lit_t;Odc_Lit_t32,845
typedef struct Odc_Obj_t_ Odc_Obj_t;     // 16 bytesOdc_Obj_t34,880
struct Odc_Obj_t_Odc_Obj_t_35,933
    Odc_Lit_t               iFan0;       // first faniniFan037,953
    Odc_Lit_t               iFan1;       // second faniniFan138,1009
    Odc_Lit_t               iNext;       // next node in the hash tableiNext39,1066
    unsigned short          TravId;      // the traversal IDTravId40,1138
    unsigned                uData;       // the computed datauData41,1199
    unsigned                uMask;       // the variable mask uMask42,1261
struct Odc_Man_t_Odc_Man_t_45,1328
    int                     nVarsMax;    // the max number of cut variablesnVarsMax48,1377
    int                     nLevels;     // the number of ODC levelsnLevels49,1453
    int                     fVerbose;    // the verbosiness flagfVerbose50,1522
    int                     fVeryVerbose;// the verbosiness flag to print per-node statsfVeryVerbose51,1587
    int                     nPercCutoff; // cutoff percentagenPercCutoff52,1676
    Abc_Obj_t *             pNode;       // the node for windowingpNode55,1756
    Vec_Ptr_t *             vLeaves;     // the number of the cutvLeaves56,1823
    Vec_Ptr_t *             vRoots;      // the roots of the cutvRoots57,1889
    Vec_Ptr_t *             vBranches;   // additional inputs vBranches58,1954
    int                     nPis;        // number of PIs (nVarsMax + 32)nPis62,2061
    int                     nObjs;       // number of objects (Const1, PIs, ANDs)nObjs63,2135
    int                     nObjsAlloc;  // number of objects allocatednObjsAlloc64,2217
    Odc_Obj_t *             pObjs;       // objects pObjs65,2289
    Odc_Lit_t               iRoot;       // the root objectiRoot66,2342
    unsigned short          nTravIds;    // the number of travIDsnTravIds67,2402
    Odc_Lit_t *             pTable;      // hash tablepTable69,2494
    int                     nTableSize;  // hash table sizenTableSize70,2549
    Vec_Int_t *             vUsedSpots;  // the used spotsvUsedSpots71,2609
    int                     nBits;       // the number of bitsnBits74,2689
    int                     nWords;      // the number of words nWords75,2752
    Vec_Ptr_t *             vTruths;     // truth tables for each nodevTruths76,2817
    Vec_Ptr_t *             vTruthsElem; // elementary truth tables for the PIsvTruthsElem77,2888
    unsigned *              puTruth;     // the place where the resulting truth table doespuTruth78,2968
    int                     nWins;       // the number of windows processednWins81,3078
    int                     nWinsEmpty;  // the number of empty windowsnWinsEmpty82,3154
    int                     nSimsEmpty;  // the number of empty simulation infosnSimsEmpty83,3226
    int                     nQuantsOver; // the number of quantification overflowsnQuantsOver84,3307
    int                     nWinsFinish; // the number of windows that finishednWinsFinish85,3390
    int                     nTotalDcs;   // total percentage of DCsnTotalDcs86,3470
    abctime                 timeClean;   // windowingtimeClean89,3554
    abctime                 timeWin;     // windowingtimeWin90,3608
    abctime                 timeMiter;   // computing the mitertimeMiter91,3662
    abctime                 timeSim;     // simulationtimeSim92,3726
    abctime                 timeQuant;   // quantificationtimeQuant93,3781
    abctime                 timeTruth;   // truth tabletimeTruth94,3840
    abctime                 timeTotal;   // useful runtimetimeTotal95,3896
    abctime                 timeAbort;   // aborted runtimetimeAbort96,3955
static inline int           Odc_PiNum( Odc_Man_t * p )                     { return p->nPis;                       }Odc_PiNum101,4053
static inline int           Odc_NodeNum( Odc_Man_t * p )                   { return p->nObjs - p->nPis - 1;        }Odc_NodeNum102,4170
static inline int           Odc_ObjNum( Odc_Man_t * p )                    { return p->nObjs;                      }Odc_ObjNum103,4287
static inline int           Odc_IsComplement( Odc_Lit_t Lit )              { return Lit &  (Odc_Lit_t)1;           }Odc_IsComplement106,4443
static inline Odc_Lit_t     Odc_Regular( Odc_Lit_t Lit )                   { return Lit & ~(Odc_Lit_t)1;           }Odc_Regular107,4560
static inline Odc_Lit_t     Odc_Not( Odc_Lit_t Lit )                       { return Lit ^  (Odc_Lit_t)1;           }Odc_Not108,4677
static inline Odc_Lit_t     Odc_NotCond( Odc_Lit_t Lit, int c )            { return Lit ^  (Odc_Lit_t)(c!=0);      }Odc_NotCond109,4794
static inline Odc_Lit_t     Odc_Const0()                                   { return 1;                             }Odc_Const0112,4936
static inline Odc_Lit_t     Odc_Const1()                                   { return 0;                             }Odc_Const1113,5053
static inline Odc_Lit_t     Odc_Var( Odc_Man_t * p, int i )                { assert( i >= 0 && i < p->nPis ); return (i+1) << 1;  }Odc_Var114,5170
static inline int           Odc_IsConst( Odc_Lit_t Lit )                   { return Lit <  (Odc_Lit_t)2;           }Odc_IsConst115,5302
static inline int           Odc_IsTerm( Odc_Man_t * p, Odc_Lit_t Lit )     { return (int)(Lit>>1) <= p->nPis;      }Odc_IsTerm116,5419
static inline Odc_Obj_t *   Odc_ObjNew( Odc_Man_t * p )                    { assert( p->nObjs < p->nObjsAlloc ); return p->pObjs + p->nObjs++;        }Odc_ObjNew119,5567
static inline Odc_Lit_t     Odc_Obj2Lit( Odc_Man_t * p, Odc_Obj_t * pObj ) { assert( pObj ); return (pObj - p->pObjs) << 1;                           }Odc_Obj2Lit120,5719
static inline Odc_Obj_t *   Odc_Lit2Obj( Odc_Man_t * p, Odc_Lit_t Lit )    { assert( !(Lit & 1) && (int)(Lit>>1) < p->nObjs ); return p->pObjs + (Lit>>1); }Odc_Lit2Obj121,5871
static inline Odc_Lit_t     Odc_ObjChild0( Odc_Obj_t * pObj )              { return pObj->iFan0;                   }Odc_ObjChild0124,6061
static inline Odc_Lit_t     Odc_ObjChild1( Odc_Obj_t * pObj )              { return pObj->iFan1;                   }Odc_ObjChild1125,6178
static inline Odc_Lit_t     Odc_ObjFanin0( Odc_Obj_t * pObj )              { return Odc_Regular(pObj->iFan0);      }Odc_ObjFanin0126,6295
static inline Odc_Lit_t     Odc_ObjFanin1( Odc_Obj_t * pObj )              { return Odc_Regular(pObj->iFan1);      }Odc_ObjFanin1127,6412
static inline int           Odc_ObjFaninC0( Odc_Obj_t * pObj )             { return Odc_IsComplement(pObj->iFan0); }Odc_ObjFaninC0128,6529
static inline int           Odc_ObjFaninC1( Odc_Obj_t * pObj )             { return Odc_IsComplement(pObj->iFan1); }Odc_ObjFaninC1129,6646
static inline void          Odc_ManIncrementTravId( Odc_Man_t * p )                         { p->nTravIds++;                                    }Odc_ManIncrementTravId132,6781
static inline void          Odc_ObjSetTravIdCurrent( Odc_Man_t * p, Odc_Obj_t * pObj )      { pObj->TravId = p->nTravIds;                       }Odc_ObjSetTravIdCurrent133,6927
static inline int           Odc_ObjIsTravIdCurrent( Odc_Man_t * p, Odc_Obj_t * pObj )       { return (int )((int)pObj->TravId == p->nTravIds);  }Odc_ObjIsTravIdCurrent134,7073
static inline unsigned *    Odc_ObjTruth( Odc_Man_t * p, Odc_Lit_t Lit )   { assert( !(Lit & 1) ); return (unsigned *) Vec_PtrEntry(p->vTruths, Lit >> 1);  }Odc_ObjTruth137,7236
#define Odc_ForEachPi(Odc_ForEachPi140,7409
#define Odc_ForEachAnd(Odc_ForEachAnd142,7569
Odc_Man_t * Abc_NtkDontCareAlloc( int nVarsMax, int nLevels, int fVerbose, int fVeryVerbose )Abc_NtkDontCareAlloc162,8360
void Abc_NtkDontCareClear( Odc_Man_t * p )Abc_NtkDontCareClear242,10862
void Abc_NtkDontCareFree( Odc_Man_t * p )Abc_NtkDontCareFree274,11707
void Abc_NtkDontCareWinSweepLeafTfo_rec( Abc_Obj_t * pObj, int nLevelLimit, Abc_Obj_t * pNode )Abc_NtkDontCareWinSweepLeafTfo_rec315,13120
void Abc_NtkDontCareWinSweepLeafTfo( Odc_Man_t * p )Abc_NtkDontCareWinSweepLeafTfo344,14040
void Abc_NtkDontCareWinCollectRoots_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vRoots )Abc_NtkDontCareWinCollectRoots_rec364,14594
void Abc_NtkDontCareWinCollectRoots( Odc_Man_t * p )Abc_NtkDontCareWinCollectRoots397,15648
int Abc_NtkDontCareWinAddMissing_rec( Odc_Man_t * p, Abc_Obj_t * pObj )Abc_NtkDontCareWinAddMissing_rec418,16243
int Abc_NtkDontCareWinAddMissing( Odc_Man_t * p )Abc_NtkDontCareWinAddMissing450,17251
int Abc_NtkDontCareWindow( Odc_Man_t * p )Abc_NtkDontCareWindow477,17999
static inline unsigned Odc_HashKey( Odc_Lit_t iFan0, Odc_Lit_t iFan1, int TableSize ) Odc_HashKey512,18931
static inline Odc_Lit_t * Odc_HashLookup( Odc_Man_t * p, Odc_Lit_t iFan0, Odc_Lit_t iFan1 )Odc_HashLookup533,19512
static inline Odc_Lit_t Odc_And( Odc_Man_t * p, Odc_Lit_t iFan0, Odc_Lit_t iFan1 )Odc_And565,20494
static inline Odc_Lit_t Odc_Or( Odc_Man_t * p, Odc_Lit_t iFan0, Odc_Lit_t iFan1 )Odc_Or613,21916
static inline Odc_Lit_t Odc_Xor( Odc_Man_t * p, Odc_Lit_t iFan0, Odc_Lit_t iFan1 )Odc_Xor629,22315
void * Abc_NtkDontCareTransfer_rec( Odc_Man_t * p, Abc_Obj_t * pNode, Abc_Obj_t * pPivot )Abc_NtkDontCareTransfer_rec649,22777
int Abc_NtkDontCareTransfer( Odc_Man_t * p )Abc_NtkDontCareTransfer688,24394
unsigned Abc_NtkDontCareCofactors_rec( Odc_Man_t * p, Odc_Lit_t Lit, unsigned uMask )Abc_NtkDontCareCofactors_rec738,25960
int Abc_NtkDontCareQuantify( Odc_Man_t * p )Abc_NtkDontCareQuantify781,27613
void Abc_NtkDontCareSimulateSetElem2( Odc_Man_t * p )Abc_NtkDontCareSimulateSetElem2818,28759
void Abc_NtkDontCareSimulateSetElem( Odc_Man_t * p )Abc_NtkDontCareSimulateSetElem843,29388
void Abc_NtkDontCareSimulateSetRand( Odc_Man_t * p )Abc_NtkDontCareSimulateSetRand866,29975
int Abc_NtkDontCareCountMintsWord( Odc_Man_t * p, unsigned * puTruth )Abc_NtkDontCareCountMintsWord892,30591
void Abc_NtkDontCareTruthOne( Odc_Man_t * p, Odc_Lit_t Lit )Abc_NtkDontCareTruthOne912,31051
void Abc_NtkDontCareSimulate_rec( Odc_Man_t * p, Odc_Lit_t Lit )Abc_NtkDontCareSimulate_rec952,32333
int Abc_NtkDontCareSimulate( Odc_Man_t * p, unsigned * puTruth )Abc_NtkDontCareSimulate982,33229
int Abc_NtkDontCareSimulateBefore( Odc_Man_t * p, unsigned * puTruth )Abc_NtkDontCareSimulateBefore1003,33936
int Abc_NtkDontCareCompute( Odc_Man_t * p, Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves, unsigned * puTruth )Abc_NtkDontCareCompute1033,34860

src/base/abci/abcSpeedup.c,2399
static inline float Abc_ObjArrival( Abc_Obj_t * pNode )                 { return pNode->pNtk->pLutTimes[3*pNode->Id+0]; }Abc_ObjArrival33,867
static inline float Abc_ObjRequired( Abc_Obj_t * pNode )                { return pNode->pNtk->pLutTimes[3*pNode->Id+1]; }Abc_ObjRequired34,989
static inline float Abc_ObjSlack( Abc_Obj_t * pNode )                   { return pNode->pNtk->pLutTimes[3*pNode->Id+2]; }Abc_ObjSlack35,1111
static inline void  Abc_ObjSetArrival( Abc_Obj_t * pNode, float Time )  { pNode->pNtk->pLutTimes[3*pNode->Id+0] = Time; }Abc_ObjSetArrival37,1234
static inline void  Abc_ObjSetRequired( Abc_Obj_t * pNode, float Time ) { pNode->pNtk->pLutTimes[3*pNode->Id+1] = Time; }Abc_ObjSetRequired38,1356
static inline void  Abc_ObjSetSlack( Abc_Obj_t * pNode, float Time )    { pNode->pNtk->pLutTimes[3*pNode->Id+2] = Time; }Abc_ObjSetSlack39,1478
void Abc_NtkDelayTraceSortPins( Abc_Obj_t * pNode, int * pPinPerm, float * pPinDelays )Abc_NtkDelayTraceSortPins56,2104
float Abc_NtkDelayTraceLut( Abc_Ntk_t * pNtk, int fUseLutLib )Abc_NtkDelayTraceLut100,3490
void Abc_NtkDelayTracePrint( Abc_Ntk_t * pNtk, int fUseLutLib, int fVerbose )Abc_NtkDelayTracePrint244,8730
int Abc_AigCheckTfi_rec( Abc_Obj_t * pNode, Abc_Obj_t * pOld )Abc_AigCheckTfi_rec297,10555
int Abc_AigCheckTfi( Abc_Obj_t * pNew, Abc_Obj_t * pOld )Abc_AigCheckTfi330,11473
int Abc_NtkSpeedupNode_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkSpeedupNode_rec349,11975
void Abc_NtkSpeedupNode( Abc_Ntk_t * pNtk, Abc_Ntk_t * pAig, Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vTimes )Abc_NtkSpeedupNode376,12716
unsigned Abc_NtkDelayTraceTCEdges( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode, float tDelta, int fUseLutLib )Abc_NtkDelayTraceTCEdges466,15779
Abc_Ntk_t * Abc_NtkSpeedup( Abc_Ntk_t * pNtk, int fUseLutLib, int Percentage, int Degree, int fVerbose, int fVeryVerbose )Abc_NtkSpeedup512,17297
Vec_Int_t * Abc_NtkPowerEstimate( Abc_Ntk_t * pNtk, int fProbOne )Abc_NtkPowerEstimate669,23489
void Abc_NtkPowerPrint( Abc_Ntk_t * pNtk, Vec_Int_t * vProbs )Abc_NtkPowerPrint716,25178
unsigned Abc_NtkPowerCriticalEdges( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode, float Limit, Vec_Int_t * vProbs )Abc_NtkPowerCriticalEdges788,27255
Abc_Ntk_t * Abc_NtkPowerdown( Abc_Ntk_t * pNtk, int fUseLutLib, int Percentage, int Degree, int fVerbose, int fVeryVerbose )Abc_NtkPowerdown811,27907

src/base/abci/abcMap.c,2683
Abc_Ntk_t * Abc_NtkMap( Abc_Ntk_t * pNtk, double DelayTarget, double AreaMulti, double DelayMulti, float LogFan, float Slew, float Gain, int nGatesMin, int fRecovery, int fSwitching, int fSkipFanout, int fUseProfile, int fUseBuffs, int fVerbose )Abc_NtkMap61,2249
Map_Time_t * Abc_NtkMapCopyCiArrival( Abc_Ntk_t * pNtk, Abc_Time_t * ppTimes )Abc_NtkMapCopyCiArrival193,7307
Map_Time_t * Abc_NtkMapCopyCoRequired( Abc_Ntk_t * pNtk, Abc_Time_t * ppTimes )Abc_NtkMapCopyCoRequired207,7706
Map_Time_t * Abc_NtkMapCopyCiArrivalCon( Abc_Ntk_t * pNtk )Abc_NtkMapCopyCiArrivalCon233,8371
Map_Time_t * Abc_NtkMapCopyCoRequiredCon( Abc_Ntk_t * pNtk )Abc_NtkMapCopyCoRequiredCon241,8657
Map_Man_t * Abc_NtkToMap( Abc_Ntk_t * pNtk, double DelayTarget, int fRecovery, float * pSwitching, int fVerbose )Abc_NtkToMap261,9210
Abc_Obj_t * Abc_NodeFromMapSuper_rec( Abc_Ntk_t * pNtkNew, Map_Node_t * pNodeMap, Map_Super_t * pSuper, Abc_Obj_t * pNodePis[], int nNodePis )Abc_NodeFromMapSuper_rec355,12949
Abc_Obj_t * Abc_NodeFromMapPhase_rec( Abc_Ntk_t * pNtkNew, Map_Node_t * pNodeMap, int fPhase )Abc_NodeFromMapPhase_rec399,14672
Abc_Obj_t * Abc_NodeFromMap_rec( Abc_Ntk_t * pNtkNew, Map_Node_t * pNodeMap, int fPhase )Abc_NodeFromMap_rec436,16045
Abc_Ntk_t * Abc_NtkFromMap( Map_Man_t * pMan, Abc_Ntk_t * pNtk, int fUseBuffs )Abc_NtkFromMap471,17394
Abc_Ntk_t * Abc_NtkSuperChoice( Abc_Ntk_t * pNtk )Abc_NtkSuperChoice531,19692
Abc_Ntk_t * Abc_NtkFromMapSuperChoice( Map_Man_t * pMan, Abc_Ntk_t * pNtk )Abc_NtkFromMapSuperChoice596,21395
void Abc_NodeSuperChoice( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode )Abc_NodeSuperChoice669,23901
void Abc_NodeFromMapCutPhase( Abc_Ntk_t * pNtkNew, Map_Cut_t * pCut, int fPhase )Abc_NodeFromMapCutPhase694,24587
Abc_Obj_t * Abc_NodeFromMapSuperChoice_rec( Abc_Ntk_t * pNtkNew, Map_Super_t * pSuper, Abc_Obj_t * pNodePis[], int nNodePis )Abc_NodeFromMapSuperChoice_rec735,25753
Abc_Obj_t * Abc_NtkFetchTwinNode( Abc_Obj_t * pNode )Abc_NtkFetchTwinNode791,27794
Vec_Int_t * Abc_NtkWriteMiniMapping( Abc_Ntk_t * pNtk )Abc_NtkWriteMiniMapping821,28772
void Abc_NtkPrintMiniMapping( int * pArray )Abc_NtkPrintMiniMapping885,31147
int * Abc_NtkOutputMiniMapping( Abc_Frame_t * pAbc )Abc_NtkOutputMiniMapping926,32446
void Abc_NtkTestMiniMapping( Abc_Ntk_t * p )Abc_NtkTestMiniMapping960,33516
void Abc_NtkSetCiArrivalTime( Abc_Frame_t * pAbc, int iCi, float Rise, float Fall )Abc_NtkSetCiArrivalTime980,34070
void Abc_NtkSetCoRequiredTime( Abc_Frame_t * pAbc, int iCo, float Rise, float Fall )Abc_NtkSetCoRequiredTime1004,34767
void Abc_NtkSetAndGateDelay( Abc_Frame_t * pAbc, float Delay )Abc_NtkSetAndGateDelay1040,35731

src/base/abci/abcXsim.c,1156
#define XVS0 XVS030,811
#define XVS1 XVS131,840
#define XVSX XVSX32,868
static inline void Abc_ObjSetXsim( Abc_Obj_t * pObj, int Value )  { pObj->pCopy = (Abc_Obj_t *)(ABC_PTRINT_T)Value;  }Abc_ObjSetXsim34,896
static inline int  Abc_ObjGetXsim( Abc_Obj_t * pObj )             { return (int)(ABC_PTRINT_T)pObj->pCopy;           }Abc_ObjGetXsim35,1015
static inline int  Abc_XsimInv( int Value )   Abc_XsimInv36,1134
static inline int  Abc_XsimAnd( int Value0, int Value1 )   Abc_XsimAnd45,1331
static inline int  Abc_XsimRand2()   Abc_XsimRand254,1591
static inline int  Abc_XsimRand3()   Abc_XsimRand359,1723
static inline int  Abc_ObjGetXsimFanin0( Abc_Obj_t * pObj )       Abc_ObjGetXsimFanin068,1921
static inline int  Abc_ObjGetXsimFanin1( Abc_Obj_t * pObj )       Abc_ObjGetXsimFanin174,2130
static inline void Abc_XsimPrint( FILE * pFile, int Value )   Abc_XsimPrint80,2339
void Abc_NtkXValueSimulate( Abc_Ntk_t * pNtk, int nFrames, int fXInputs, int fXState, int fVerbose )Abc_NtkXValueSimulate111,3148
void Abc_NtkCycleInitState( Abc_Ntk_t * pNtk, int nFrames, int fUseXval, int fVerbose )Abc_NtkCycleInitState192,5861

src/base/abci/abcPart.c,4708
typedef struct Supp_Man_t_     Supp_Man_t;Supp_Man_t32,843
struct Supp_Man_t_Supp_Man_t_33,886
    int              nChunkSize;    // the size of one chunk of memory (~1 MB)nChunkSize35,907
    int              nStepSize;     // the step size in saving memory (~64 bytes)nStepSize36,986
    char *           pFreeBuf;      // the pointer to free memorypFreeBuf37,1068
    int              nFreeSize;     // the size of remaining free memorynFreeSize38,1134
    Vec_Ptr_t *      vMemory;       // the memory allocatedvMemory39,1207
    Vec_Ptr_t *      vFree;         // the vector of free pieces of memoryvFree40,1267
typedef struct Supp_One_t_     Supp_One_t;Supp_One_t43,1346
struct Supp_One_t_Supp_One_t_44,1389
    int              nRefs;         // the number of referencesnRefs46,1410
    int              nOuts;         // the number of outputsnOuts47,1474
    int              nOutsAlloc;    // the array sizenOutsAlloc48,1535
    int              pOuts[0];      // the array of outputspOuts49,1589
static inline int    Supp_SizeType( int nSize, int nStepSize )     { return nSize / nStepSize + ((nSize % nStepSize) > 0); }Supp_SizeType52,1653
static inline char * Supp_OneNext( char * pPart )                  { return *((char **)pPart);                             }Supp_OneNext53,1778
static inline void   Supp_OneSetNext( char * pPart, char * pNext ) { *((char **)pPart) = pNext;                            }Supp_OneSetNext54,1903
Supp_Man_t * Supp_ManStart( int nChunkSize, int nStepSize )Supp_ManStart71,2508
void Supp_ManStop( Supp_Man_t * p )Supp_ManStop94,3089
char * Supp_ManFetch( Supp_Man_t * p, int nSize )Supp_ManFetch116,3604
void Supp_ManRecycle( Supp_Man_t * p, char * pMemory, int nSize )Supp_ManRecycle153,4649
static inline Supp_One_t * Supp_ManFetchEntry( Supp_Man_t * p, int nWords, int nRefs )Supp_ManFetchEntry173,5230
static inline void Supp_ManRecycleEntry( Supp_Man_t * p, Supp_One_t * pEntry )Supp_ManRecycleEntry194,5811
Supp_One_t * Supp_ManMergeEntry( Supp_Man_t * pMan, Supp_One_t * p1, Supp_One_t * p2, int nRefs )Supp_ManMergeEntry212,6349
Vec_Int_t * Supp_ManTransferEntry( Supp_One_t * p )Supp_ManTransferEntry251,7469
Vec_Ptr_t * Abc_NtkDfsNatural( Abc_Ntk_t * pNtk )Abc_NtkDfsNatural272,7983
Vec_Ptr_t * Abc_NtkComputeSupportsSmart( Abc_Ntk_t * pNtk )Abc_NtkComputeSupportsSmart318,9422
Vec_Ptr_t * Abc_NtkComputeSupportsNaive( Abc_Ntk_t * pNtk )Abc_NtkComputeSupportsNaive417,12869
unsigned * Abc_NtkSuppCharStart( Vec_Int_t * vOne, int nPis )Abc_NtkSuppCharStart466,14376
void Abc_NtkSuppCharAdd( unsigned * pBuffer, Vec_Int_t * vOne, int nPis )Abc_NtkSuppCharAdd492,15042
int Abc_NtkSuppCharCommon( unsigned * pBuffer, Vec_Int_t * vOne )Abc_NtkSuppCharCommon513,15564
int Abc_NtkPartitionSmartFindPart( Vec_Ptr_t * vPartSuppsAll, Vec_Ptr_t * vPartsAll, Vec_Ptr_t * vPartSuppsChar, int nSuppSizeLimit, Vec_Int_t * vOne )Abc_NtkPartitionSmartFindPart532,16037
void Abc_NtkPartitionPrint( Abc_Ntk_t * pNtk, Vec_Ptr_t * vPartsAll, Vec_Ptr_t * vPartSuppsAll )Abc_NtkPartitionPrint621,19015
void Abc_NtkPartitionCompact( Vec_Ptr_t * vPartsAll, Vec_Ptr_t * vPartSuppsAll, int nSuppSizeLimit )Abc_NtkPartitionCompact650,19883
Vec_Ptr_t * Abc_NtkPartitionSmart( Abc_Ntk_t * pNtk, int nSuppSizeLimit, int fVerbose )Abc_NtkPartitionSmart722,22177
Vec_Ptr_t * Abc_NtkPartitionNaive( Abc_Ntk_t * pNtk, int nPartSize )Abc_NtkPartitionNaive854,26755
void Abc_NtkConvertCos( Abc_Ntk_t * pNtk, Vec_Int_t * vOuts, Vec_Ptr_t * vOutsPtr )Abc_NtkConvertCos877,27457
Abc_Obj_t * Abc_NtkPartStitchFindRepr_rec( Vec_Ptr_t * vEquiv, Abc_Obj_t * pObj )Abc_NtkPartStitchFindRepr_rec896,27963
static inline Abc_Obj_t * Abc_NtkPartStitchCopy0( Vec_Ptr_t * vEquiv, Abc_Obj_t * pObj )Abc_NtkPartStitchCopy0916,28528
static inline Abc_Obj_t * Abc_NtkPartStitchCopy1( Vec_Ptr_t * vEquiv, Abc_Obj_t * pObj )Abc_NtkPartStitchCopy1922,28839
static inline Hop_Obj_t * Hop_ObjChild0Next( Abc_Obj_t * pObj ) { return Hop_NotCond( (Hop_Obj_t *)Abc_ObjFanin0(pObj)->pNext, Abc_ObjFaninC0(pObj) ); }Hop_ObjChild0Next940,29385
static inline Hop_Obj_t * Hop_ObjChild1Next( Abc_Obj_t * pObj ) { return Hop_NotCond( (Hop_Obj_t *)Abc_ObjFanin1(pObj)->pNext, Abc_ObjFaninC1(pObj) ); }Hop_ObjChild1Next941,29538
Hop_Man_t * Abc_NtkPartStartHop( Abc_Ntk_t * pNtk )Abc_NtkPartStartHop955,29980
Abc_Ntk_t * Abc_NtkPartStitchChoices( Abc_Ntk_t * pNtk, Vec_Ptr_t * vParts )Abc_NtkPartStitchChoices1000,31428
Abc_Ntk_t * Abc_NtkFraigPartitioned( Vec_Ptr_t * vStore, void * pParams )Abc_NtkFraigPartitioned1098,34897
void Abc_NtkFraigPartitionedTime( Abc_Ntk_t * pNtk, void * pParams )Abc_NtkFraigPartitionedTime1160,37163

src/base/abci/abcRec3.c,6790
#define LMS_VAR_MAX LMS_VAR_MAX31,784
#define LMS_MAX_WORD LMS_MAX_WORD32,831
typedef struct Lms_Man_t_ Lms_Man_t;Lms_Man_t48,1440
struct Lms_Man_t_Lms_Man_t_49,1477
    int               nVars;        // the number of variablesnVars52,1515
    int               nWords;       // the number of TT wordsnWords53,1578
    int               nCuts;        // the max number of cuts to usenCuts54,1640
    int               fFuncOnly;    // record only functionsfFuncOnly55,1709
    int               fLibConstr;   // this manager is used for library constructionfLibConstr56,1770
    Gia_Man_t *       pGia;         // the recordpGia58,1901
    Vec_Mem_t *       vTtMem;       // truth table memory and hash tablevTtMem59,1951
    Vec_Int_t *       vTruthIds;    // truth table IDs of each POvTruthIds61,2099
    Vec_Int_t *       vTruthPo;     // first PO where this canonicized truth table was seenvTruthPo63,2253
    Vec_Wrd_t *       vDelays;      // pin-to-pin delays of each POvDelays64,2345
    Vec_Str_t *       vAreas;       // number of AND gates in each POvAreas65,2413
    Vec_Int_t *       vFreqs;       // subgraph usage frequenciesvFreqs66,2483
    Vec_Int_t *       vTruthFreqs;  // truth table usage frequenciesvTruthFreqs67,2549
    Vec_Ptr_t *       vNodes;       // the temporary nodesvNodes69,2637
    Vec_Ptr_t *       vLabelsP;     // temporary storage for HOP node labelsvLabelsP70,2696
    Vec_Int_t *       vLabels;      // temporary storage for AIG node labelsvLabels71,2773
    Vec_Str_t *       vSupps;       // used temporarily by TT dumpingvSupps72,2850
    word              pTemp1[LMS_MAX_WORD]; // copy of the truth tablepTemp173,2920
    word              pTemp2[LMS_MAX_WORD]; // copy of the truth tablepTemp274,2991
    int               nTried;nTried76,3081
    int               nFilterSize;nFilterSize77,3111
    int               nFilterRedund;nFilterRedund78,3146
    int               nFilterVolume;nFilterVolume79,3183
    int               nFilterTruth;nFilterTruth80,3220
    int               nFilterError;nFilterError81,3256
    int               nFilterSame;nFilterSame82,3292
    int               nAdded;nAdded83,3327
    int               nAddedFuncs;nAddedFuncs84,3357
    int               nHoleInTheWall;nHoleInTheWall85,3392
    abctime           timeTruth;timeTruth87,3445
    abctime           timeCanon;timeCanon88,3478
    abctime           timeBuild;timeBuild89,3511
    abctime           timeCheck;timeCheck90,3544
    abctime           timeInsert;timeInsert91,3577
    abctime           timeOther;timeOther92,3611
    abctime           timeTotal;timeTotal93,3644
static Lms_Man_t * s_pMan3 = NULL;s_pMan396,3681
static inline int  Lms_DelayGet( word D, int v )           { assert(v >= 0 && v < LMS_VAR_MAX); return (int)((D >> (v << 2)) & 0xF);                             }Lms_DelayGet113,4206
static inline void Lms_DelaySet( word * pD, int v, int d ) { assert(v >= 0 && v < LMS_VAR_MAX); assert(d >= 0 && d < LMS_VAR_MAX); *pD |= ((word)d << (v << 2)); }Lms_DelaySet114,4369
static inline word Lms_DelayInit( int v )                  { assert(v >= 0 && v < LMS_VAR_MAX); return (word)1 << (v << 2);                                      }Lms_DelayInit115,4532
static inline word Lms_DelayMax( word D1, word D2, int nVars )Lms_DelayMax116,4695
static inline word Lms_DelayDecrement( word D1, int nVars )Lms_DelayDecrement125,4978
static inline int Lms_DelayEqual( word D1, word D2, int nVars ) // returns 1 if D1 has the same delays than D2Lms_DelayEqual134,5212
static inline int Lms_DelayDom( word D1, word D2, int nVars ) // returns 1 if D1 has the same or smaller delays than D2Lms_DelayDom142,5466
static inline void Lms_DelayPrint( word D, int nVars )Lms_DelayPrint150,5728
Vec_Wrd_t * Lms_GiaDelays( Gia_Man_t * p )Lms_GiaDelays158,5934
void Lms_ObjAreaMark_rec( Gia_Obj_t * pObj )Lms_ObjAreaMark_rec183,6981
int  Lms_ObjAreaUnmark_rec( Gia_Obj_t * pObj )Lms_ObjAreaUnmark_rec191,7209
int Lms_ObjArea( Gia_Obj_t * pObj )Lms_ObjArea199,7468
Vec_Str_t * Lms_GiaAreas( Gia_Man_t * p )Lms_GiaAreas205,7621
Vec_Str_t * Lms_GiaSuppSizes( Gia_Man_t * p )Lms_GiaSuppSizes215,7937
void Lms_GiaProfilesPrint( Gia_Man_t * p )Lms_GiaProfilesPrint240,8888
void Lms_GiaPrintSubgraph_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Lms_GiaPrintSubgraph_rec271,9669
void Lms_GiaPrintSubgraph( Gia_Man_t * p, Gia_Obj_t * pObj )Lms_GiaPrintSubgraph281,9997
Lms_Man_t * Lms_ManStart( Gia_Man_t * pGia, int nVars, int nCuts, int fFuncOnly, int fVerbose )Lms_ManStart305,10586
void Lms_ManStop( Lms_Man_t * p )Lms_ManStop363,12645
void Lms_ManPrepare( Lms_Man_t * p )Lms_ManPrepare384,13281
void Lms_ManPrintFuncStats( Lms_Man_t * p )Lms_ManPrintFuncStats405,14187
void Lms_ManPrintFreqStats( Lms_Man_t * p )Lms_ManPrintFreqStats430,15082
void Lms_ManPrint( Lms_Man_t * p )Lms_ManPrint524,18313
void Abc_NtkRecLibMerge3( Gia_Man_t * pLib )Abc_NtkRecLibMerge3567,21073
int Abc_NtkRecAddCut3( If_Man_t * pIfMan, If_Obj_t * pRoot, If_Cut_t * pCut )Abc_NtkRecAddCut3691,25502
void Abc_NtkRecAdd3( Abc_Ntk_t * pNtk, int fUseSOPB )Abc_NtkRecAdd3833,30144
static inline int If_CutComputeDelay( If_Man_t * p, If_Cut_t * pCut, char * pCanonPerm, word DelayProfile )If_CutComputeDelay890,31890
static inline int If_CutFindBestStruct( If_Man_t * pIfMan, If_Cut_t * pCut, char * pCanonPerm, unsigned * puCanonPhase, int * pBestPo )If_CutFindBestStruct903,32387
int If_CutDelayRecCost3( If_Man_t * pIfMan, If_Cut_t * pCut, If_Obj_t * pObj )If_CutDelayRecCost31004,36230
Hop_Obj_t * Abc_RecToHop3( Hop_Man_t * pMan, If_Man_t * pIfMan, If_Cut_t * pCut, If_Obj_t * pIfObj )Abc_RecToHop31031,37201
int Abc_RecToGia3( Gia_Man_t * pMan, If_Man_t * pIfMan, If_Cut_t * pCut, Vec_Int_t * vLeaves, int fHash )Abc_RecToGia31105,40345
Vec_Int_t * Lms_GiaCountTruths( Lms_Man_t * p )Lms_GiaCountTruths1191,44086
Vec_Int_t * Lms_GiaCollectUsefulCos( Lms_Man_t * p )Lms_GiaCollectUsefulCos1201,44411
Vec_Int_t * Lms_GiaFindNonRedundantCos( Lms_Man_t * p )Lms_GiaFindNonRedundantCos1232,45502
void Lms_GiaNormalize( Lms_Man_t * p )Lms_GiaNormalize1277,46864
int Abc_NtkRecTruthCompare( int * p1, int * p2 ) Abc_NtkRecTruthCompare1328,48506
void Abc_NtkRecDumpTt3( char * pFileName, int fBinary )Abc_NtkRecDumpTt31335,48823
int Abc_NtkRecInputNum3()Abc_NtkRecInputNum31391,50538
int Abc_NtkRecIsRunning3()Abc_NtkRecIsRunning31395,50608
Gia_Man_t * Abc_NtkRecGetGia3()Abc_NtkRecGetGia31399,50667
void Abc_NtkRecPs3(int fPrintLib)Abc_NtkRecPs31411,51298
void Abc_NtkRecStart3( Gia_Man_t * p, int nVars, int nCuts, int fFuncOnly, int fVerbose )Abc_NtkRecStart31415,51365
void Abc_NtkRecStop3()Abc_NtkRecStop31421,51559

src/base/abci/abcExact.c,19929
static word s_Truths8[32] = {s_Truths847,1308
static word s_Truths8Neg[32] = {s_Truths8Neg58,2365
static int Abc_TtIsSubsetWithMask( word * pSmall, word * pLarge, word * pMask, int nWords )Abc_TtIsSubsetWithMask69,3425
static int Abc_TtCofsOppositeWithMask( word * pTruth, word * pMask, int nWords, int iVar )Abc_TtCofsOppositeWithMask78,3684
static int Abc_TtIsTopDecomposable( word * pTruth, word * pMask, int nWords, int iVar )Abc_TtIsTopDecomposable102,4544
static int Abc_TtIsStairDecomposable( word * pTruth, int nWords, int * pVars, int nSize, int * pStairFunc )Abc_TtIsStairDecomposable117,5280
static inline void Abc_DebugPrint( const char* str, int fCond )Abc_DebugPrint159,6446
static inline void Abc_DebugPrintInt( const char* fmt, int n, int fCond )Abc_DebugPrintInt168,6599
static inline void Abc_DebugPrintIntInt( const char* fmt, int n1, int n2, int fCond )Abc_DebugPrintIntInt177,6759
static inline void Abc_DebugErase( int n, int fCond )Abc_DebugErase186,6936
#define ABC_EXACT_SOL_NVARS ABC_EXACT_SOL_NVARS203,7293
#define ABC_EXACT_SOL_NFUNC ABC_EXACT_SOL_NFUNC204,7324
#define ABC_EXACT_SOL_NGATES ABC_EXACT_SOL_NGATES205,7355
#define ANSI_COLOR_RED ANSI_COLOR_RED207,7387
#define ANSI_COLOR_GREEN ANSI_COLOR_GREEN208,7425
#define ANSI_COLOR_YELLOW ANSI_COLOR_YELLOW209,7463
#define ANSI_COLOR_BLUE ANSI_COLOR_BLUE210,7501
#define ANSI_COLOR_MAGENTA ANSI_COLOR_MAGENTA211,7539
#define ANSI_COLOR_CYAN ANSI_COLOR_CYAN212,7577
#define ANSI_COLOR_RESET ANSI_COLOR_RESET213,7615
typedef struct Ses_Man_t_ Ses_Man_t;Ses_Man_t215,7653
struct Ses_Man_t_Ses_Man_t_216,7690
    sat_solver * pSat;                  /* SAT solver */pSat218,7710
    word *       pSpec;                 /* specification */pSpec220,7768
    int          bSpecInv;              /* remembers whether spec was inverted for normalization */bSpecInv221,7828
    int          nSpecVars;             /* number of variables in specification */nSpecVars222,7928
    int          nSpecFunc;             /* number of functions to synthesize */nSpecFunc223,8011
    int          nSpecWords;            /* number of words for function */nSpecWords224,8091
    int          nRows;                 /* number of rows in the specification (without 0) */nRows225,8166
    int          nMaxDepth;             /* maximum depth (-1 if depth is not constrained) */nMaxDepth226,8260
    int          nMaxDepthTmp;          /* temporary copy to modify nMaxDepth temporarily */nMaxDepthTmp227,8353
    int *        pArrTimeProfile;       /* arrival times of inputs (NULL if arrival times are ignored) */pArrTimeProfile228,8446
    int          pArrTimeProfileTmp[8]; /* temporary copy to modify pArrTimeProfile temporarily */pArrTimeProfileTmp229,8552
    int          nArrTimeDelta;         /* delta to the original arrival times (arrival times are normalized to have 0 as minimum element) */nArrTimeDelta230,8651
    int          nArrTimeMax;           /* maximum normalized arrival time */nArrTimeMax231,8793
    int          nBTLimit;              /* conflict limit */nBTLimit232,8871
    int          fMakeAIG;              /* create AIG instead of general network */fMakeAIG233,8932
    int          fVerbose;              /* be verbose */fVerbose234,9016
    int          fVeryVerbose;          /* be very verbose */fVeryVerbose235,9073
    int          fExtractVerbose;       /* be verbose about solution extraction */fExtractVerbose236,9135
    int          fSatVerbose;           /* be verbose about SAT solving */fSatVerbose237,9218
    int          fReasonVerbose;        /* be verbose about give-up reasons */fReasonVerbose238,9293
    word         pTtValues[4];          /* truth table values to assign */pTtValues239,9372
    Vec_Int_t *  vPolar;                /* variables with positive polarity */vPolar240,9447
    Vec_Int_t *  vAssump;               /* assumptions */vAssump241,9526
    int          nRandRowAssigns;       /* number of random row assignments to initialize CEGAR */nRandRowAssigns242,9584
    int          fKeepRowAssigns;       /* if 1, keep counter examples in CEGAR for next number of gates */fKeepRowAssigns243,9683
    int          nGates;                /* number of gates */nGates245,9792
    int          nStartGates;           /* number of gates to start search (-1), i.e., to start from 1 gate, one needs to specify 0 */nStartGates246,9854
    int          nMaxGates;             /* maximum number of gates given max. delay and arrival times */nMaxGates247,9989
    int          fDecStructure;         /* set to 1 or higher if nSpecFunc = 1 and f = x_i OP g(X \ {x_i}), otherwise 0 (determined when solving) */fDecStructure248,10094
    int          pDecVars;              /* mask of variables that can be decomposed at top-level */pDecVars249,10243
    Vec_Int_t *  vStairDecVars;         /* list of stair decomposable variables */vStairDecVars250,10343
    int          pStairDecFunc[8];      /* list of stair decomposable functions */pStairDecFunc251,10426
    word         pTtObjs[100];          /* temporary truth tables */pTtObjs252,10509
    int          nSimVars;              /* number of simulation vars x(i, t) */nSimVars254,10579
    int          nOutputVars;           /* number of output variables g(h, i) */nOutputVars255,10659
    int          nGateVars;             /* number of gate variables f(i, p, q) */nGateVars256,10740
    int          nSelectVars;           /* number of select variables s(i, j, k) */nSelectVars257,10822
    int          nDepthVars;            /* number of depth variables d(i, j) */nDepthVars258,10906
    int          nSimOffset;            /* offset where gate variables start */nSimOffset260,10987
    int          nOutputOffset;         /* offset where output variables start */nOutputOffset261,11067
    int          nGateOffset;           /* offset where gate variables start */nGateOffset262,11149
    int          nSelectOffset;         /* offset where select variables start */nSelectOffset263,11229
    int          nDepthOffset;          /* offset where depth variables start */nDepthOffset264,11311
    int          fHitResLimit;          /* SAT solver gave up due to resource limit */fHitResLimit266,11393
    abctime      timeSat;               /* SAT runtime */timeSat268,11481
    abctime      timeSatSat;            /* SAT runtime (sat instance) */timeSatSat269,11539
    abctime      timeSatUnsat;          /* SAT runtime (unsat instance) */timeSatUnsat270,11612
    abctime      timeSatUndef;          /* SAT runtime (undef instance) */timeSatUndef271,11687
    abctime      timeInstance;          /* creating instance runtime */timeInstance272,11762
    abctime      timeTotal;             /* all runtime */timeTotal273,11834
    int          nSatCalls;             /* number of SAT calls */nSatCalls275,11893
    int          nUnsatCalls;           /* number of UNSAT calls */nUnsatCalls276,11959
    int          nUndefCalls;           /* number of UNDEF calls */nUndefCalls277,12027
    int          nDebugOffset;          /* for debug printing */nDebugOffset279,12096
typedef struct Ses_TimesEntry_t_ Ses_TimesEntry_t;Ses_TimesEntry_t293,12676
struct Ses_TimesEntry_t_Ses_TimesEntry_t_294,12727
    int                pArrTimeProfile[8]; /* normalized arrival time profile */pArrTimeProfile296,12754
    int                fResLimit;          /* solution found after resource limit */fResLimit297,12835
    Ses_TimesEntry_t * next;               /* linked list pointer */next298,12920
    char *             pNetwork;           /* pointer to char array representation of optimum network */pNetwork299,12989
typedef struct Ses_TruthEntry_t_ Ses_TruthEntry_t;Ses_TruthEntry_t302,13098
struct Ses_TruthEntry_t_Ses_TruthEntry_t_303,13149
    word               pTruth[4]; /* truth table for comparison */pTruth305,13176
    int                nVars;     /* number of variables */nVars306,13243
    Ses_TruthEntry_t * next;      /* linked list pointer */next307,13303
    Ses_TimesEntry_t * head;      /* pointer to head of sub list with arrival times */head308,13363
#define SES_STORE_TABLE_SIZE SES_STORE_TABLE_SIZE311,13454
typedef struct Ses_Store_t_ Ses_Store_t;Ses_Store_t312,13488
struct Ses_Store_t_Ses_Store_t_313,13529
    int                fMakeAIG;                       /* create AIG instead of general network */fMakeAIG315,13551
    int                fVerbose;                       /* be verbose */fVerbose316,13650
    int                fVeryVerbose;                   /* be very verbose */fVeryVerbose317,13722
    int                nBTLimit;                       /* conflict limit */nBTLimit318,13799
    int                nEntriesCount;                  /* number of entries */nEntriesCount319,13875
    int                nValidEntriesCount;             /* number of entries with network */nValidEntriesCount320,13954
    Ses_TruthEntry_t * pEntries[SES_STORE_TABLE_SIZE]; /* hash table for truth table entries */pEntries321,14046
    sat_solver       * pSat;                           /* own SAT solver instance to reuse when calling exact algorithm */pSat322,14142
    FILE             * pDebugEntries;                  /* debug unsynth. (rl) entries */pDebugEntries323,14265
    char             * szDBName;                       /* if given, database is written every time a new entry is added */szDBName324,14354
    unsigned long      nCutCount;                      /* number of cuts investigated */nCutCount327,14499
    unsigned long      pCutCount[9];                   /* -> per cut size */pCutCount328,14588
    unsigned long      nUnsynthesizedImp;              /* number of cuts which couldn't be optimized at all, opt. stopped because of imp. constraints */nUnsynthesizedImp329,14665
    unsigned long      pUnsynthesizedImp[9];           /* -> per cut size */pUnsynthesizedImp330,14818
    unsigned long      nUnsynthesizedRL;               /* number of cuts which couldn't be optimized at all, opt. stopped because of resource limits */nUnsynthesizedRL331,14895
    unsigned long      pUnsynthesizedRL[9];            /* -> per cut size */pUnsynthesizedRL332,15047
    unsigned long      nSynthesizedTrivial;            /* number of cuts which could be synthesized trivially (n < 2) */nSynthesizedTrivial333,15124
    unsigned long      pSynthesizedTrivial[9];         /* -> per cut size */pSynthesizedTrivial334,15245
    unsigned long      nSynthesizedImp;                /* number of cuts which could be synthesized, opt. stopped because of imp. constraints */nSynthesizedImp335,15322
    unsigned long      pSynthesizedImp[9];             /* -> per cut size */pSynthesizedImp336,15467
    unsigned long      nSynthesizedRL;                 /* number of cuts which could be synthesized, opt. stopped because of resource limits */nSynthesizedRL337,15544
    unsigned long      pSynthesizedRL[9];              /* -> per cut size */pSynthesizedRL338,15688
    unsigned long      nCacheHits;                     /* number of cache hits */nCacheHits339,15765
    unsigned long      pCacheHits[9];                  /* -> per cut size */pCacheHits340,15847
    unsigned long      nSatCalls;                      /* number of total SAT calls */nSatCalls342,15925
    unsigned long      nUnsatCalls;                    /* number of total UNSAT calls */nUnsatCalls343,16012
    unsigned long      nUndefCalls;                    /* number of total UNDEF calls */nUndefCalls344,16101
    abctime            timeExact;                      /* Exact synthesis runtime */timeExact346,16191
    abctime            timeSat;                        /* SAT runtime */timeSat347,16276
    abctime            timeSatSat;                     /* SAT runtime (sat instance) */timeSatSat348,16349
    abctime            timeSatUnsat;                   /* SAT runtime (unsat instance) */timeSatUnsat349,16437
    abctime            timeSatUndef;                   /* SAT runtime (undef instance) */timeSatUndef350,16527
    abctime            timeInstance;                   /* creating instance runtime */timeInstance351,16617
    abctime            timeTotal;                      /* all runtime */timeTotal352,16704
static Ses_Store_t * s_pSesStore = NULL;s_pSesStore355,16781
static int Abc_NormalizeArrivalTimes( int * pArrTimeProfile, int nVars, int * maxNormalized )Abc_NormalizeArrivalTimes361,17043
static inline Ses_Store_t * Ses_StoreAlloc( int nBTLimit, int fMakeAIG, int fVerbose )Ses_StoreAlloc385,17535
static inline void Ses_StoreClean( Ses_Store_t * pStore )Ses_StoreClean398,17932
static inline int Ses_StoreTableHash( word * pTruth, int nVars )Ses_StoreTableHash432,18846
static inline int Ses_StoreTruthEqual( Ses_TruthEntry_t * pEntry, word * pTruth, int nVars )Ses_StoreTruthEqual442,19156
static inline void Ses_StoreTruthCopy( Ses_TruthEntry_t * pEntry, word * pTruthSrc, int nVars )Ses_StoreTruthCopy455,19452
static inline int Ses_StoreTimesEqual( int * pTimes1, int * pTimes2, int nVars )Ses_StoreTimesEqual463,19684
static inline void Ses_StoreTimesCopy( int * pTimesDest, int * pTimesSrc, int nVars )Ses_StoreTimesCopy472,19891
static inline void Ses_StorePrintEntry( Ses_TruthEntry_t * pEntry, Ses_TimesEntry_t * pTiEntry )Ses_StorePrintEntry479,20065
static inline void Ses_StorePrintDebugEntry( Ses_Store_t * pStore, word * pTruth, int nVars, int * pNormalArrTime, int nMaxDepth, char * pSol, int nStartGates )Ses_StorePrintDebugEntry492,20452
static void Abc_ExactNormalizeArrivalTimesForNetwork( int nVars, int * pArrTimeProfile, char * pSol )Abc_ExactNormalizeArrivalTimesForNetwork510,21284
static void Ses_StoreWrite( Ses_Store_t * pStore, const char * pFilename, int fSynthImp, int fSynthRL, int fUnsynthImp, int fUnsynthRL )Ses_StoreWrite564,23045
int Ses_StoreAddEntry( Ses_Store_t * pStore, word * pTruth, int nVars, int * pArrTimeProfile, char * pSol, int fResLimit )Ses_StoreAddEntry629,25676
int Ses_StoreGetEntrySimple( Ses_Store_t * pStore, word * pTruth, int nVars, int * pArrTimeProfile, char ** pSol )Ses_StoreGetEntrySimple728,28291
int Ses_StoreGetEntry( Ses_Store_t * pStore, word * pTruth, int nVars, int * pArrTimeProfile, char ** pSol )Ses_StoreGetEntry768,29202
static void Ses_StoreRead( Ses_Store_t * pStore, const char * pFilename, int fSynthImp, int fSynthRL, int fUnsynthImp, int fUnsynthRL )Ses_StoreRead819,30555
static inline void Ses_ManComputeTopDec( Ses_Man_t * pSes )Ses_ManComputeTopDec880,32562
static inline Ses_Man_t * Ses_ManAlloc( word * pTruth, int nVars, int nFunc, int nMaxDepth, int * pArrTimeProfile, int fMakeAIG, int nBTLimit, int fVerbose )Ses_ManAlloc892,32893
static inline void Ses_ManCleanLight( Ses_Man_t * pSes )Ses_ManCleanLight937,34368
static inline void Ses_ManClean( Ses_Man_t * pSes )Ses_ManClean956,34919
static inline int Ses_ManSimVar( Ses_Man_t * pSes, int i, int t )Ses_ManSimVar968,35269
static inline int Ses_ManOutputVar( Ses_Man_t * pSes, int h, int i )Ses_ManOutputVar976,35455
static inline int Ses_ManGateVar( Ses_Man_t * pSes, int i, int p, int q )Ses_ManGateVar984,35652
static inline int Ses_ManSelectVar( Ses_Man_t * pSes, int i, int j, int k )Ses_ManSelectVar994,35895
static inline int Ses_ManDepthVar( Ses_Man_t * pSes, int i, int j )Ses_ManDepthVar1010,36321
static word * Ses_ManDeriveTruth( Ses_Man_t * pSes, char * pSol, int fInvert )Ses_ManDeriveTruth1023,36757
static void Ses_ManCreateVars( Ses_Man_t * pSes, int nGates )Ses_ManCreateVars1069,38256
static inline void Ses_ManGateCannotHaveChild( Ses_Man_t * pSes, int i, int j )Ses_ManGateCannotHaveChild1118,40492
static inline void Ses_ManCreateMainClause( Ses_Man_t * pSes, int t, int i, int j, int k, int a, int b, int c )Ses_ManCreateMainClause1128,40853
static int inline Ses_ManCreateTruthTableClause( Ses_Man_t * pSes, int t )Ses_ManCreateTruthTableClause1157,41742
static int Ses_ManCreateClauses( Ses_Man_t * pSes )Ses_ManCreateClauses1194,43206
static int Ses_ManCreateDepthClauses( Ses_Man_t * pSes )Ses_ManCreateDepthClauses1488,57338
static inline double Sat_Wrd2Dbl( word w )  { return (double)(unsigned)(w&0x3FFFFFFF) + (double)(1<<30)*(unsigned)(w>>30); }Sat_Wrd2Dbl1566,60506
static inline int Ses_ManSolve( Ses_Man_t * pSes )Ses_ManSolve1568,60632
static char * Ses_ManExtractSolution( Ses_Man_t * pSes )Ses_ManExtractSolution1639,63413
static Abc_Ntk_t * Ses_ManExtractNtk( char const * pSol )Ses_ManExtractNtk1757,67906
static Gia_Man_t * Ses_ManExtractGia( char const * pSol )Ses_ManExtractGia1826,70247
static void Ses_ManPrintRuntime( Ses_Man_t * pSes )Ses_ManPrintRuntime1905,72721
static inline void Ses_ManPrintFuncs( Ses_Man_t * pSes )Ses_ManPrintFuncs1916,73212
static inline void Ses_ManPrintVars( Ses_Man_t * pSes )Ses_ManPrintVars1941,73928
static void Ses_ManComputeMaxGates( Ses_Man_t * pSes )Ses_ManComputeMaxGates1978,75274
static int Ses_CheckDepthConsistency( Ses_Man_t * pSes )Ses_CheckDepthConsistency2004,76066
static int Ses_CheckGatesConsistency( Ses_Man_t * pSes, int nGates )Ses_CheckGatesConsistency2118,80420
static void Abc_ExactCopyDepthAndArrivalTimes( int nVars, int nDepthFrom, int * nDepthTo, int * pTimesFrom, int * pTimesTo )Abc_ExactCopyDepthAndArrivalTimes2154,81703
static void Ses_ManStoreDepthAndArrivalTimes( Ses_Man_t * pSes )Ses_ManStoreDepthAndArrivalTimes2163,81944
static void Ses_ManRestoreDepthAndArrivalTimes( Ses_Man_t * pSes )Ses_ManRestoreDepthAndArrivalTimes2169,82200
static void Abc_ExactAdjustDepthAndArrivalTimes( int nVars, int nGates, int nDepthFrom, int * nDepthTo, int * pTimesFrom, int * pTimesTo, int nTimesMax )Abc_ExactAdjustDepthAndArrivalTimes2175,82458
static void Ses_AdjustDepthAndArrivalTimes( Ses_Man_t * pSes, int nGates )Ses_AdjustDepthAndArrivalTimes2184,82821
static int Ses_ManFindNetworkExact( Ses_Man_t * pSes, int nGates )Ses_ManFindNetworkExact2190,83129
static int Ses_ManFindNetworkExactCEGAR( Ses_Man_t * pSes, int nGates, char ** pSol )Ses_ManFindNetworkExactCEGAR2239,84447
static char * Ses_ManFindMinimumSizeBottomUp( Ses_Man_t * pSes )Ses_ManFindMinimumSizeBottomUp2283,85889
static char * Ses_ManFindMinimumSizeTopDown( Ses_Man_t * pSes, int nMinGates )Ses_ManFindMinimumSizeTopDown2323,86989
static char * Ses_ManFindMinimumSize( Ses_Man_t * pSes )Ses_ManFindMinimumSize2357,87737
Abc_Ntk_t * Abc_NtkFindExact( word * pTruth, int nVars, int nFunc, int nMaxDepth, int * pArrTimeProfile, int nBTLimit, int nStartGates, int fVerbose )Abc_NtkFindExact2414,89334
Gia_Man_t * Gia_ManFindExact( word * pTruth, int nVars, int nFunc, int nMaxDepth, int * pArrTimeProfile, int nBTLimit, int nStartGates, int fVerbose )Gia_ManFindExact2450,90235
Abc_Ntk_t * Abc_NtkFromTruthTable( word * pTruth, int nVars )Abc_NtkFromTruthTable2494,91377
void Abc_ExactTestSingleOutput( int fVerbose )Abc_ExactTestSingleOutput2509,91739
void Abc_ExactTestSingleOutputAIG( int fVerbose )Abc_ExactTestSingleOutputAIG2547,93006
void Abc_ExactTest( int fVerbose )Abc_ExactTest2589,94357
int Abc_ExactIsRunning()Abc_ExactIsRunning2605,94891
int Abc_ExactInputNum()Abc_ExactInputNum2611,95111
void Abc_ExactStart( int nBTLimit, int fMakeAIG, int fVerbose, int fVeryVerbose, const char * pFilename )Abc_ExactStart2616,95182
void Abc_ExactStop( const char * pFilename )Abc_ExactStop2638,95913
void Abc_ExactStats()Abc_ExactStats2652,96323
int Abc_ExactDelayCost( word * pTruth, int nVars, int * pArrTimeProfile, char * pPerm, int * Cost, int AigLevel )Abc_ExactDelayCost2716,100369
Abc_Obj_t * Abc_ExactBuildNode( word * pTruth, int nVars, int * pArrTimeProfile, Abc_Obj_t ** pFanins, Abc_Ntk_t * pNtk )Abc_ExactBuildNode2894,106177
void Abc_ExactStoreTest( int fVerbose )Abc_ExactStoreTest2978,108845

src/base/abci/abcFraig.c,1571
Abc_Ntk_t * Abc_NtkFraig( Abc_Ntk_t * pNtk, void * pParams, int fAllNodes, int fExdc )Abc_NtkFraig58,2171
void * Abc_NtkToFraig( Abc_Ntk_t * pNtk, void * pParams, int fAllNodes, int fExdc )Abc_NtkToFraig103,3594
Fraig_Node_t * Abc_NtkToFraigExdc( Fraig_Man_t * pMan, Abc_Ntk_t * pNtkMain, Abc_Ntk_t * pNtkExdc )Abc_NtkToFraigExdc164,5687
void Abc_NtkFraigRemapUsingExdc( Fraig_Man_t * pMan, Abc_Ntk_t * pNtk )Abc_NtkFraigRemapUsingExdc212,7381
Abc_Ntk_t * Abc_NtkFromFraig( Fraig_Man_t * pMan, Abc_Ntk_t * pNtk )Abc_NtkFromFraig279,9725
Abc_Obj_t * Abc_NodeFromFraig_rec( Abc_Ntk_t * pNtkNew, Fraig_Node_t * pNodeFraig )Abc_NodeFromFraig_rec316,11013
Abc_Ntk_t * Abc_NtkFromFraig2( Fraig_Man_t * pMan, Abc_Ntk_t * pNtk )Abc_NtkFromFraig2379,13637
void Abc_NtkFromFraig2_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode, Vec_Ptr_t * vNodeReprs )Abc_NtkFromFraig2_rec448,15950
Abc_Ntk_t * Abc_NtkFraigTrust( Abc_Ntk_t * pNtk )Abc_NtkFraigTrust485,17198
int Abc_NtkFraigTrustCheck( Abc_Ntk_t * pNtk )Abc_NtkFraigTrustCheck531,18511
void Abc_NtkFraigTrustOne( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew )Abc_NtkFraigTrustOne559,19212
Abc_Obj_t * Abc_NodeFraigTrust( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode )Abc_NodeFraigTrust601,20507
int Abc_NtkFraigStore( Abc_Ntk_t * pNtkAdd )Abc_NtkFraigStore654,22387
Abc_Ntk_t * Abc_NtkFraigRestore( int nPatsRand, int nPatsDyna, int nBTLimit )Abc_NtkFraigRestore698,23877
void Abc_NtkFraigStoreClean()Abc_NtkFraigStoreClean766,26710
void Abc_NtkFraigStoreCheck( Abc_Ntk_t * pFraig )Abc_NtkFraigStoreCheck788,27228

src/base/abci/abcNtbdd.c,1390
Abc_Ntk_t * Abc_NtkDeriveFromBdd( void * dd0, void * bFunc, char * pNamePo, Vec_Ptr_t * vNamesPi )Abc_NtkDeriveFromBdd63,2380
Abc_Ntk_t * Abc_NtkBddToMuxes( Abc_Ntk_t * pNtk, int fGlobal, int Limit )Abc_NtkBddToMuxes132,4903
void Abc_NtkBddToMuxesPerform( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew )Abc_NtkBddToMuxesPerform170,5868
Abc_Obj_t * Abc_NodeBddToMuxes( Abc_Obj_t * pNodeOld, Abc_Ntk_t * pNtkNew )Abc_NodeBddToMuxes205,6930
Abc_Obj_t * Abc_NodeBddToMuxes_rec( DdManager * dd, DdNode * bFunc, Abc_Ntk_t * pNtkNew, st__table * tBdd2Node )Abc_NodeBddToMuxes_rec236,8043
int Abc_NtkBddToMuxesPerformGlo( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew, int Limit )Abc_NtkBddToMuxesPerformGlo268,9324
void * Abc_NtkBuildGlobalBdds( Abc_Ntk_t * pNtk, int nBddSizeMax, int fDropInternal, int fReorder, int fReverse, int fVerbose )Abc_NtkBuildGlobalBdds315,10831
DdNode * Abc_NodeGlobalBdds_rec( DdManager * dd, Abc_Obj_t * pNode, int nBddSizeMax, int fDropInternal, ProgressBar * pProgress, int * pCounter, int fVerbose )Abc_NodeGlobalBdds_rec430,14744
void * Abc_NtkFreeGlobalBdds( Abc_Ntk_t * pNtk, int fFreeMan ) Abc_NtkFreeGlobalBdds542,19418
int Abc_NtkSizeOfGlobalBdds( Abc_Ntk_t * pNtk ) Abc_NtkSizeOfGlobalBdds558,19840
double Abc_NtkSpacePercentage( Abc_Obj_t * pNode )Abc_NtkSpacePercentage583,20584
void Abc_NtkBddImplicationTest()Abc_NtkBddImplicationTest634,22076

src/base/abci/abcIf.c,2063
void If_ManComputeSwitching( If_Man_t * pIfMan )If_ManComputeSwitching59,1976
Abc_Ntk_t * Abc_NtkIf( Abc_Ntk_t * pNtk, If_Par_t * pPars )Abc_NtkIf107,3660
static inline If_Obj_t * Abc_ObjIfCopy( Abc_Obj_t * pNode ) { return (If_Obj_t *)pNode->pCopy; } Abc_ObjIfCopy208,6854
If_Man_t * Abc_NtkToIf( Abc_Ntk_t * pNtk, If_Par_t * pPars )Abc_NtkToIf209,6952
static inline void Abc_MapBoxSetPrevNext( Vec_Ptr_t * vDrivers, Vec_Int_t * vMapIn, Vec_Int_t * vMapOut, int Id )Abc_MapBoxSetPrevNext281,9730
static inline int Abc_MapBox2Next( Vec_Ptr_t * vDrivers, Vec_Int_t * vMapIn, Vec_Int_t * vMapOut, int Id )Abc_MapBox2Next289,10122
static inline int Abc_MapBox2Prev( Vec_Ptr_t * vDrivers, Vec_Int_t * vMapIn, Vec_Int_t * vMapOut, int Id )Abc_MapBox2Prev294,10368
Abc_Ntk_t * Abc_NtkFromIf( If_Man_t * pIfMan, Abc_Ntk_t * pNtk )Abc_NtkFromIf311,10930
Hop_Obj_t * Abc_NodeBuildFromMiniInt( Hop_Man_t * pMan, Vec_Int_t * vAig, int nLeaves )Abc_NodeBuildFromMiniInt378,13675
Hop_Obj_t * Abc_NodeBuildFromMini( Hop_Man_t * pMan, If_Man_t * p, If_Cut_t * pCut, int fUseDsd )Abc_NodeBuildFromMini414,15230
Abc_Obj_t * Abc_NodeFromIf_rec( Abc_Ntk_t * pNtkNew, If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vCover )Abc_NodeFromIf_rec436,15869
Hop_Obj_t * Abc_NodeIfToHop_rec( Hop_Man_t * pHopMan, If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited )Abc_NodeIfToHop_rec558,21600
Hop_Obj_t * Abc_NodeIfToHop2_rec( Hop_Man_t * pHopMan, If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited )Abc_NodeIfToHop2_rec591,22765
Hop_Obj_t * Abc_NodeIfToHop( Hop_Man_t * pHopMan, If_Man_t * pIfMan, If_Obj_t * pIfObj )Abc_NodeIfToHop638,24390
int Abc_ObjCompareFlow( Abc_Obj_t ** ppNode0, Abc_Obj_t ** ppNode1 )Abc_ObjCompareFlow678,25634
void Abc_NtkFindGoodOrder_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_NtkFindGoodOrder_rec700,26243
Vec_Ptr_t * Abc_NtkFindGoodOrder( Abc_Ntk_t * pNtk )Abc_NtkFindGoodOrder728,27131
void Abc_NtkMarkMux( Abc_Obj_t * pDriver, Abc_Obj_t ** ppNode1, Abc_Obj_t ** ppNode2 )Abc_NtkMarkMux786,29186

src/base/abci/abcResub.c,6434
#define ABC_RS_DIV1_MAX ABC_RS_DIV1_MAX31,813
#define ABC_RS_DIV2_MAX ABC_RS_DIV2_MAX32,888
typedef struct Abc_ManRes_t_ Abc_ManRes_t;Abc_ManRes_t34,974
struct Abc_ManRes_t_Abc_ManRes_t_35,1017
    int                nLeavesMax; // the max number of leaves in the conenLeavesMax38,1056
    int                nDivsMax;   // the max number of divisors in the conenDivsMax39,1131
    Abc_Obj_t *        pRoot;      // the root of the conepRoot41,1242
    int                nLeaves;    // the number of leavesnLeaves42,1301
    int                nDivs;      // the number of all divisor (including leaves)nDivs43,1360
    int                nMffc;      // the size of MFFCnMffc44,1443
    int                nLastGain;  // the gain the number of nodesnLastGain45,1498
    Vec_Ptr_t *        vDivs;      // the divisorsvDivs46,1565
    int                nBits;      // the number of simulation bitsnBits48,1661
    int                nWords;     // the number of unsigneds for siminfonWords49,1729
    Vec_Ptr_t        * vSims;      // simulation infovSims50,1803
    unsigned         * pInfo;      // pointer to simulation infopInfo51,1857
    unsigned *         pCareSet;pCareSet53,1955
    Vec_Ptr_t        * vDivs1UP;   // the single-node unate divisorsvDivs1UP55,2020
    Vec_Ptr_t        * vDivs1UN;   // the single-node unate divisorsvDivs1UN56,2089
    Vec_Ptr_t        * vDivs1B;    // the single-node binate divisorsvDivs1B57,2158
    Vec_Ptr_t        * vDivs2UP0;  // the double-node unate divisorsvDivs2UP058,2228
    Vec_Ptr_t        * vDivs2UP1;  // the double-node unate divisorsvDivs2UP159,2297
    Vec_Ptr_t        * vDivs2UN0;  // the double-node unate divisorsvDivs2UN060,2366
    Vec_Ptr_t        * vDivs2UN1;  // the double-node unate divisorsvDivs2UN161,2435
    Vec_Ptr_t        * vTemp;      // temporary array of nodesvTemp63,2522
    abctime            timeCut;timeCut65,2611
    abctime            timeTruth;timeTruth66,2643
    abctime            timeRes;timeRes67,2677
    abctime            timeDiv;timeDiv68,2709
    abctime            timeMffc;timeMffc69,2741
    abctime            timeSim;timeSim70,2774
    abctime            timeRes1;timeRes171,2806
    abctime            timeResD;timeResD72,2839
    abctime            timeRes2;timeRes273,2872
    abctime            timeRes3;timeRes374,2905
    abctime            timeNtk;timeNtk75,2938
    abctime            timeTotal;timeTotal76,2970
    int                nUsedNodeC;nUsedNodeC78,3034
    int                nUsedNode0;nUsedNode079,3069
    int                nUsedNode1Or;nUsedNode1Or80,3104
    int                nUsedNode1And;nUsedNode1And81,3141
    int                nUsedNode2Or;nUsedNode2Or82,3179
    int                nUsedNode2And;nUsedNode2And83,3216
    int                nUsedNode2OrAnd;nUsedNode2OrAnd84,3254
    int                nUsedNode2AndOr;nUsedNode2AndOr85,3294
    int                nUsedNode3OrAnd;nUsedNode3OrAnd86,3334
    int                nUsedNode3AndOr;nUsedNode3AndOr87,3374
    int                nUsedNodeTotal;nUsedNodeTotal88,3414
    int                nTotalDivs;nTotalDivs89,3453
    int                nTotalLeaves;nTotalLeaves90,3488
    int                nTotalGain;nTotalGain91,3525
    int                nNodesBeg;nNodesBeg92,3560
    int                nNodesEnd;nNodesEnd93,3594
int Abc_NtkResubstitute( Abc_Ntk_t * pNtk, int nCutMax, int nStepsMax, int nLevelsOdc, int fUpdateLevel, int fVerbose, int fVeryVerbose )Abc_NtkResubstitute137,5675
Abc_ManRes_t * Abc_ManResubStart( int nLeavesMax, int nDivsMax )Abc_ManResubStart287,10637
void Abc_ManResubStop( Abc_ManRes_t * p )Abc_ManResubStop340,12473
void Abc_ManResubPrint( Abc_ManRes_t * p )Abc_ManResubPrint367,13113
void Abc_ManResubCollectDivs_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vInternal )Abc_ManResubCollectDivs_rec408,15690
int Abc_ManResubCollectDivs( Abc_ManRes_t * p, Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves, int Required )Abc_ManResubCollectDivs433,16394
void Abc_ManResubPrintDivs( Abc_ManRes_t * p, Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves )Abc_ManResubPrintDivs518,19321
void Abc_ManResubSimulate( Vec_Ptr_t * vDivs, int nLeaves, Vec_Ptr_t * vSims, int nLeavesMax, int nWords )Abc_ManResubSimulate568,20797
Dec_Graph_t * Abc_ManResubQuit0( Abc_Obj_t * pRoot, Abc_Obj_t * pObj )Abc_ManResubQuit0625,22702
Dec_Graph_t * Abc_ManResubQuit1( Abc_Obj_t * pRoot, Abc_Obj_t * pObj0, Abc_Obj_t * pObj1, int fOrGate )Abc_ManResubQuit1649,23311
Dec_Graph_t * Abc_ManResubQuit21( Abc_Obj_t * pRoot, Abc_Obj_t * pObj0, Abc_Obj_t * pObj1, Abc_Obj_t * pObj2, int fOrGate )Abc_ManResubQuit21680,24407
Dec_Graph_t * Abc_ManResubQuit2( Abc_Obj_t * pRoot, Abc_Obj_t * pObj0, Abc_Obj_t * pObj1, Abc_Obj_t * pObj2, int fOrGate )Abc_ManResubQuit2721,25961
Dec_Graph_t * Abc_ManResubQuit3( Abc_Obj_t * pRoot, Abc_Obj_t * pObj0, Abc_Obj_t * pObj1, Abc_Obj_t * pObj2, Abc_Obj_t * pObj3, int fOrGate )Abc_ManResubQuit3766,27744
void Abc_ManResubDivsS( Abc_ManRes_t * p, int Required )Abc_ManResubDivsS837,30735
void Abc_ManResubDivsD( Abc_ManRes_t * p, int Required )Abc_ManResubDivsD913,33069
Dec_Graph_t * Abc_ManResubQuit( Abc_ManRes_t * p )Abc_ManResubQuit1035,37972
Dec_Graph_t * Abc_ManResubDivs0( Abc_ManRes_t * p )Abc_ManResubDivs01066,38721
Dec_Graph_t * Abc_ManResubDivs1( Abc_ManRes_t * p, int Required )Abc_ManResubDivs11096,39537
Dec_Graph_t * Abc_ManResubDivs12( Abc_ManRes_t * p, int Required )Abc_ManResubDivs121200,43589
Dec_Graph_t * Abc_ManResubDivs2( Abc_ManRes_t * p, int Required )Abc_ManResubDivs21408,54615
Dec_Graph_t * Abc_ManResubDivs3( Abc_ManRes_t * p, int Required )Abc_ManResubDivs31586,62731
void Abc_ManResubCleanup( Abc_ManRes_t * p )Abc_ManResubCleanup1845,74986
Dec_Graph_t * Abc_ManResubEval( Abc_ManRes_t * p, Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves, int nSteps, int fUpdateLevel, int fVerbose )Abc_ManResubEval1866,75506
int Abc_CutVolumeCheck_rec( Abc_Obj_t * pObj )Abc_CutVolumeCheck_rec1993,78728
int Abc_CutVolumeCheck( Abc_Obj_t * pNode, Vec_Ptr_t * vLeaves )Abc_CutVolumeCheck2018,79519
void Abc_CutFactor_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vLeaves )Abc_CutFactor_rec2041,80171
Vec_Ptr_t * Abc_CutFactor( Abc_Obj_t * pNode )Abc_CutFactor2068,81034
Vec_Ptr_t * Abc_CutFactorLarge( Abc_Obj_t * pNode, int nLeavesMax )Abc_CutFactorLarge2098,82087

src/base/abci/abcReconv.c,2973
struct Abc_ManCut_t_Abc_ManCut_t_34,867
    int              nNodeSizeMax;  // the limit on the size of the supernodenNodeSizeMax37,923
    int              nConeSizeMax;  // the limit on the size of the containing conenConeSizeMax38,1001
    int              nNodeFanStop;  // the limit on the size of the supernodenNodeFanStop39,1085
    int              nConeFanStop;  // the limit on the size of the containing conenConeFanStop40,1163
    Vec_Ptr_t *      vNodeLeaves;   // fanins of the collapsed node (the cut)vNodeLeaves42,1274
    Vec_Ptr_t *      vConeLeaves;   // fanins of the containing conevConeLeaves43,1352
    Vec_Ptr_t *      vVisited;      // the visited nodesvVisited44,1421
    Vec_Vec_t *      vLevels;       // the data structure to compute TFO nodesvLevels45,1478
    Vec_Ptr_t *      vNodesTfo;     // the nodes in the TFO of the cutvNodesTfo46,1557
static inline void Abc_NodesMark( Vec_Ptr_t * vVisited )Abc_NodesMark68,2419
static inline void Abc_NodesUnmark( Vec_Ptr_t * vVisited )Abc_NodesUnmark87,2856
static inline void Abc_NodesUnmarkB( Vec_Ptr_t * vVisited )Abc_NodesUnmarkB106,3295
static inline int Abc_NodeGetLeafCostOne( Abc_Obj_t * pNode, int nFaninLimit )Abc_NodeGetLeafCostOne126,3910
static inline int Abc_NodeGetLeafCostTwo( Abc_Obj_t * pNode, int nFaninLimit, Abc_NodeGetLeafCostTwo158,5037
Vec_Ptr_t * Abc_NodeFindCut( Abc_ManCut_t * p, Abc_Obj_t * pRoot, int fContain )Abc_NodeFindCut256,8018
int Abc_NodeBuildCutLevelOne_int( Vec_Ptr_t * vVisited, Vec_Ptr_t * vLeaves, int nSizeLimit, int nFaninLimit )Abc_NodeBuildCutLevelOne_int319,10304
int Abc_NodeBuildCutLevelTwo_int( Vec_Ptr_t * vVisited, Vec_Ptr_t * vLeaves, int nFaninLimit )Abc_NodeBuildCutLevelTwo_int392,12881
void Abc_NodeConeCollect( Abc_Obj_t ** ppRoots, int nRoots, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vVisited, int fIncludeFanins )Abc_NodeConeCollect444,14326
void Abc_NodeConeMarkCollect_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vVisited )Abc_NodeConeMarkCollect_rec475,15241
DdNode * Abc_NodeConeBdd( DdManager * dd, DdNode ** pbVars, Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vVisited )Abc_NodeConeBdd503,15989
DdNode * Abc_NodeConeDcs( DdManager * dd, DdNode ** pbVarsX, DdNode ** pbVarsY, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vRoots, Vec_Ptr_t * vVisited )Abc_NodeConeDcs542,17452
Abc_ManCut_t * Abc_NtkManCutStart( int nNodeSizeMax, int nConeSizeMax, int nNodeFanStop, int nConeFanStop )Abc_NtkManCutStart595,19679
void Abc_NtkManCutStop( Abc_ManCut_t * p )Abc_NtkManCutStop623,20531
Vec_Ptr_t * Abc_NtkManCutReadCutLarge( Abc_ManCut_t * p )Abc_NtkManCutReadCutLarge644,21032
Vec_Ptr_t * Abc_NtkManCutReadCutSmall( Abc_ManCut_t * p )Abc_NtkManCutReadCutSmall660,21387
Vec_Ptr_t * Abc_NtkManCutReadVisited( Abc_ManCut_t * p )Abc_NtkManCutReadVisited676,21742
Vec_Ptr_t * Abc_NodeCollectTfoCands( Abc_ManCut_t * p, Abc_Obj_t * pRoot, Vec_Ptr_t * vLeaves, int LevelMax )Abc_NodeCollectTfoCands699,22534

src/base/abci/abcTim.c,1471
#define TIM_TEST_BOX_RATIO TIM_TEST_BOX_RATIO34,925
static inline int Abc_NodeIsWhiteBox( Abc_Obj_t * pObj )  { assert( Abc_ObjIsNode(pObj) ); return Abc_ObjId(pObj) % TIM_TEST_BOX_RATIO == 0 && Abc_ObjFaninNum(pObj) > 0 && Abc_ObjFaninNum(pObj) < 10; }Abc_NodeIsWhiteBox37,1022
void Abc_NtkTestTimNodeStrash_rec( Gia_Man_t * pGia, Hop_Obj_t * pObj )Abc_NtkTestTimNodeStrash_rec54,1740
int Abc_NtkTestTimNodeStrash( Gia_Man_t * pGia, Abc_Obj_t * pNode )Abc_NtkTestTimNodeStrash65,2232
void Abc_NtkTestTimCollectCone_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vNodes )Abc_NtkTestTimCollectCone_rec192,6288
Vec_Ptr_t * Abc_NtkTestTimCollectCone( Abc_Ntk_t * pNtk, Abc_Obj_t * pObj )Abc_NtkTestTimCollectCone206,6714
Vec_Flt_t * Abc_NtkTestCreateArrivals( int nInputs )Abc_NtkTestCreateArrivals241,7617
Vec_Flt_t * Abc_NtkTestCreateRequired( int nOutputs )Abc_NtkTestCreateRequired250,7827
Gia_Man_t * Abc_NtkTestTimDeriveGia( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkTestTimDeriveGia271,8331
Gia_Man_t * Abc_NtkTestTimPerformSynthesis( Gia_Man_t * p, int fChoices )Abc_NtkTestTimPerformSynthesis413,13036
void Gia_ManVerifyChoices( Gia_Man_t * p )Gia_ManVerifyChoices443,13771
void Gia_ManReverseClasses( Gia_Man_t * p, int fNowIncreasing )Gia_ManReverseClasses492,15422
void Abc_NtkTestTimByWritingFile( Gia_Man_t * pGia, char * pFileName )Abc_NtkTestTimByWritingFile552,17295
void Abc_NtkTestTim( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkTestTim596,18362

src/base/abci/abcFpgaFast.c,834
static inline void        Abc_ObjSetIvy2Abc( Ivy_Man_t * p, int IvyId, Abc_Obj_t * pObjAbc ) {  assert(Vec_PtrEntry((Vec_Ptr_t *)p->pCopy, IvyId) == NULL); assert(!Abc_ObjIsComplement(pObjAbc)); Vec_PtrWriteEntry( (Vec_Ptr_t *)p->pCopy, IvyId, pObjAbc );  }Abc_ObjSetIvy2Abc36,1086
static inline Abc_Obj_t * Abc_ObjGetIvy2Abc( Ivy_Man_t * p, int IvyId )                      {  return (Abc_Obj_t *)Vec_PtrEntry( (Vec_Ptr_t *)p->pCopy, IvyId );         }Abc_ObjGetIvy2Abc37,1344
Abc_Ntk_t * Abc_NtkFpgaFast( Abc_Ntk_t * pNtk, int nLutSize, int fRecovery, int fVerbose )Abc_NtkFpgaFast58,2318
Abc_Ntk_t * Ivy_ManFpgaToAbc( Abc_Ntk_t * pNtk, Ivy_Man_t * pMan )Ivy_ManFpgaToAbc93,3401
Abc_Obj_t * Ivy_ManToAbcFast_rec( Abc_Ntk_t * pNtkNew, Ivy_Man_t * pMan, Ivy_Obj_t * pObjIvy, Vec_Int_t * vNodes )Ivy_ManToAbcFast_rec152,5494

src/base/abci/abcPrint.c,4091
abctime s_MappingTime = 0;s_MappingTime47,1096
int s_MappingMem = 0;s_MappingMem48,1123
abctime s_ResubTime = 0;s_ResubTime49,1145
abctime s_ResynTime = 0;s_ResynTime50,1170
int Abc_NtkCompareAndSaveBest( Abc_Ntk_t * pNtk )Abc_NtkCompareAndSaveBest69,1927
double Abc_NtkMemory( Abc_Ntk_t * p )Abc_NtkMemory135,4393
float Abc_NtkMfsTotalSwitching( Abc_Ntk_t * pNtk )Abc_NtkMfsTotalSwitching163,5248
float Abc_NtkGetArea( Abc_Ntk_t * pNtk )Abc_NtkGetArea210,7005
void Abc_NtkPrintStats( Abc_Ntk_t * pNtk, int fFactored, int fSaveBest, int fDumpResult, int fUseLutLib, int fPrintMuxes, int fPower, int fGlitch, int fSkipBuf, int fSkipSmall, int fPrintMem )Abc_NtkPrintStats238,7726
void Abc_NtkPrintIo( FILE * pFile, Abc_Ntk_t * pNtk, int fPrintFlops )Abc_NtkPrintIo472,16734
void Abc_NtkPrintLatch( FILE * pFile, Abc_Ntk_t * pNtk )Abc_NtkPrintLatch509,17890
void Abc_NtkFaninFanoutCounters( Abc_Ntk_t * pNtk, Vec_Int_t * vFan, Vec_Int_t * vFon, Vec_Int_t * vFanR, Vec_Int_t * vFonR )Abc_NtkFaninFanoutCounters582,20116
void Abc_NtkInputOutputCounters( Abc_Ntk_t * pNtk, Vec_Int_t * vFan, Vec_Int_t * vFon, Vec_Int_t * vFanR, Vec_Int_t * vFonR )Abc_NtkInputOutputCounters606,21062
Vec_Int_t * Abc_NtkCollectCoSupps( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCollectCoSupps632,22137
Vec_Int_t * Abc_NtkCollectCiSupps( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCollectCiSupps662,23360
void Abc_NtkInOutSupportCounters( Abc_Ntk_t * pNtk, Vec_Int_t * vFan, Vec_Int_t * vFon, Vec_Int_t * vFanR, Vec_Int_t * vFonR )Abc_NtkInOutSupportCounters698,24784
Vec_Int_t * Abc_NtkCollectCoCones( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCollectCoCones726,25850
Vec_Int_t * Abc_NtkCollectCiCones( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCollectCiCones755,27000
void Abc_NtkInOutConeCounters( Abc_Ntk_t * pNtk, Vec_Int_t * vFan, Vec_Int_t * vFon, Vec_Int_t * vFanR, Vec_Int_t * vFonR )Abc_NtkInOutConeCounters784,28149
void Abc_NtkPrintDistribInternal( FILE * pFile, Abc_Ntk_t * pNtk, char * pFanins, char * pFanouts, char * pNode, char * pFanin, char * pFanout, Abc_NtkPrintDistribInternal812,29212
void Abc_NtkPrintFanio( FILE * pFile, Abc_Ntk_t * pNtk, int fUseFanio, int fUsePio, int fUseSupp, int fUseCone )Abc_NtkPrintFanio849,30854
void Abc_NtkPrintFanioNew( FILE * pFile, Abc_Ntk_t * pNtk, int fMffc )Abc_NtkPrintFanioNew894,32545
void Abc_NodePrintFanio( FILE * pFile, Abc_Obj_t * pNode )Abc_NodePrintFanio1021,37214
void Abc_NtkPrintMffc( FILE * pFile, Abc_Ntk_t * pNtk )Abc_NtkPrintMffc1053,38094
void Abc_NtkPrintFactor( FILE * pFile, Abc_Ntk_t * pNtk, int fUseRealNames )Abc_NtkPrintFactor1074,38641
void Abc_NodePrintFactor( FILE * pFile, Abc_Obj_t * pNode, int fUseRealNames )Abc_NodePrintFactor1094,39153
void Abc_NtkPrintLevel( FILE * pFile, Abc_Ntk_t * pNtk, int fProfile, int fListNodes, int fVerbose )Abc_NtkPrintLevel1135,40252
void Abc_NodePrintLevel( FILE * pFile, Abc_Obj_t * pNode )Abc_NodePrintLevel1254,44034
void Abc_NodePrintKMap( Abc_Obj_t * pNode, int fUseRealNames )Abc_NodePrintKMap1297,45195
void Abc_NtkPrintGates( Abc_Ntk_t * pNtk, int fUseLibrary, int fUpdateProfile )Abc_NtkPrintGates1325,46080
void Abc_NtkPrintSharing( Abc_Ntk_t * pNtk )Abc_NtkPrintSharing1459,51359
int Abc_NtkCountPis( Vec_Ptr_t * vSupp )Abc_NtkCountPis1508,52866
void Abc_NtkPrintStrSupports( Abc_Ntk_t * pNtk, int fMatrix )Abc_NtkPrintStrSupports1516,53070
void Abc_ObjPrint( FILE * pFile, Abc_Obj_t * pObj )Abc_ObjPrint1570,54588
void Abc_NtkPrintMiter( Abc_Ntk_t * pNtk )Abc_NtkPrintMiter1646,56779
void Abc_NtkPrintPoEquivs( Abc_Ntk_t * pNtk )Abc_NtkPrintPoEquivs1709,58659
typedef struct Gli_Man_t_ Gli_Man_t;Gli_Man_t1741,59704
float Abc_NtkMfsTotalGlitchingLut( Abc_Ntk_t * pNtk, int nPats, int Prob, int fVerbose )Abc_NtkMfsTotalGlitchingLut1764,60633
float Abc_NtkMfsTotalGlitching( Abc_Ntk_t * pNtk, int nPats, int Prob, int fVerbose )Abc_NtkMfsTotalGlitching1838,63344
void Abc_Show6VarFunc( word F0, word F1 )Abc_Show6VarFunc1903,65667
void Abc_NtkShow6VarFunc( char * pF0, char * pF1 )Abc_NtkShow6VarFunc1985,67811

src/base/abci/abcSweep.c,2009
int Abc_NtkFraigSweep( Abc_Ntk_t * pNtk, int fUseInv, int fExdc, int fVerbose, int fVeryVerbose )Abc_NtkFraigSweep62,2334
void Abc_NtkFraigSweepUsingExdc( Fraig_Man_t * pMan, Abc_Ntk_t * pNtk )Abc_NtkFraigSweepUsingExdc149,4853
stmm_table * Abc_NtkFraigEquiv( Abc_Ntk_t * pNtk, int fUseInv, int fVerbose, int fVeryVerbose )Abc_NtkFraigEquiv190,6316
void Abc_NtkFraigTransform( Abc_Ntk_t * pNtk, stmm_table * tEquiv, int fUseInv, int fVerbose )Abc_NtkFraigTransform277,9301
void Abc_NtkFraigMergeClassMapped( Abc_Ntk_t * pNtk, Abc_Obj_t * pChain, int fUseInv, int fVerbose )Abc_NtkFraigMergeClassMapped309,10215
void Abc_NtkFraigMergeClass( Abc_Ntk_t * pNtk, Abc_Obj_t * pChain, int fUseInv, int fVerbose )Abc_NtkFraigMergeClass391,13132
int Abc_NodeDroppingCost( Abc_Obj_t * pNode )Abc_NodeDroppingCost458,15157
int Abc_NtkCleanup( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCleanup478,15520
int Abc_NtkCleanupNodes( Abc_Ntk_t * pNtk, Vec_Ptr_t * vRoots, int fVerbose )Abc_NtkCleanupNodes503,16213
int Abc_NtkReduceNodes( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes )Abc_NtkReduceNodes537,17351
void Abc_NodeConstantInput( Abc_Obj_t * pNode, Abc_Obj_t * pFanin, int fConst0 )Abc_NodeConstantInput578,18391
int Abc_NtkSweep( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkSweep606,19411
int Abc_NtkSweep( Abc_Ntk_t * pNtk, int fVerbose ) { return 1; }Abc_NtkSweep692,22336
int Abc_NodeRemoveNonCurrentObjects( Abc_Ntk_t * pNtk )Abc_NodeRemoveNonCurrentObjects708,22694
void Abc_NtkSetTravId_rec( Abc_Obj_t * pObj )Abc_NtkSetTravId_rec748,23714
int Abc_NtkCheckConstant_rec( Abc_Obj_t * pObj )Abc_NtkCheckConstant_rec768,24277
int Abc_NtkLatchSweep( Abc_Ntk_t * pNtk )Abc_NtkLatchSweep812,25560
int Abc_NtkReplaceAutonomousLogic( Abc_Ntk_t * pNtk )Abc_NtkReplaceAutonomousLogic862,27223
int Abc_NtkCleanupSeq( Abc_Ntk_t * pNtk, int fLatchSweep, int fAutoSweep, int fVerbose )Abc_NtkCleanupSeq919,29169
int Abc_NtkSweepBufsInvs( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkSweepBufsInvs969,30796

src/base/abci/abcPlace.c,678
AbstractCell *abstractCells = NULL;abstractCells33,845
ConcreteCell *cells = NULL;cells34,881
ConcreteNet *nets = NULL;nets35,909
int nAllocSize = 0;nAllocSize36,935
static inline void Abc_PlaceCreateCell( Abc_Obj_t * pObj, int fAnd )Abc_PlaceCreateCell53,1429
static inline void Abc_PlaceUpdateNet( Abc_Obj_t * pObj )Abc_PlaceUpdateNet75,1995
float Abc_PlaceEvaluateCut( Abc_Obj_t * pRoot, Vec_Ptr_t * vFanins )Abc_PlaceEvaluateCut103,2885
void Abc_PlaceUpdate( Vec_Ptr_t * vAddedCells, Vec_Ptr_t * vUpdatedNets )Abc_PlaceUpdate126,3395
void Abc_PlaceBegin( Abc_Ntk_t * pNtk )Abc_PlaceBegin178,4935
void Abc_PlaceEnd( Abc_Ntk_t * pNtk )Abc_PlaceEnd241,6558

src/base/abci/abcSat.c,1952
static int nMuxes;nMuxes39,1117
int Abc_NtkMiterSat( Abc_Ntk_t * pNtk, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, int fVerbose, ABC_INT64_T * pNumConfs, ABC_INT64_T * pNumInspects )Abc_NtkMiterSat56,1698
Vec_Int_t * Abc_NtkGetCiSatVarNums( Abc_Ntk_t * pNtk )Abc_NtkGetCiSatVarNums157,4800
int Abc_NtkClauseTriv( sat_solver * pSat, Abc_Obj_t * pNode, Vec_Int_t * vVars )Abc_NtkClauseTriv181,5343
int Abc_NtkClauseTop( sat_solver * pSat, Vec_Ptr_t * vNodes, Vec_Int_t * vVars )Abc_NtkClauseTop201,6117
int Abc_NtkClauseAnd( sat_solver * pSat, Abc_Obj_t * pNode, Vec_Ptr_t * vSuper, Vec_Int_t * vVars )Abc_NtkClauseAnd224,6986
int Abc_NtkClauseMux( sat_solver * pSat, Abc_Obj_t * pNode, Abc_Obj_t * pNodeC, Abc_Obj_t * pNodeT, Abc_Obj_t * pNodeE, Vec_Int_t * vVars )Abc_NtkClauseMux288,9359
int Abc_NtkCollectSupergate_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vSuper, int fFirst, int fStopAtMux )Abc_NtkCollectSupergate_rec373,12531
void Abc_NtkCollectSupergate( Abc_Obj_t * pNode, int fStopAtMux, Vec_Ptr_t * vNodes )Abc_NtkCollectSupergate420,14284
int Abc_NtkNodeFactor( Abc_Obj_t * pObj, int nLevelMax )Abc_NtkNodeFactor449,15253
int Abc_NtkMiterSatCreateInt( sat_solver * pSat, Abc_Ntk_t * pNtk )Abc_NtkMiterSatCreateInt469,15852
void * Abc_NtkMiterSatCreate( Abc_Ntk_t * pNtk, int fAllPrimes )Abc_NtkMiterSatCreate632,20865
int Abc_NodeAddClauses( sat_solver * pSat, char * pSop0, char * pSop1, Abc_Obj_t * pNode, Vec_Int_t * vVars )Abc_NodeAddClauses676,22077
int Abc_NodeAddClausesTop( sat_solver * pSat, Abc_Obj_t * pNode, Vec_Int_t * vVars )Abc_NodeAddClausesTop767,24828
sat_solver * Abc_NtkMiterSatCreateLogic( Abc_Ntk_t * pNtk, int fAllPrimes )Abc_NtkMiterSatCreateLogic840,26999
sat_solver * Abc_NtkMiterSatCreateLogic( Abc_Ntk_t * pNtk, int fAllPrimes ) { return NULL; }Abc_NtkMiterSatCreateLogic898,28489
void Abc_NtkWriteSorterCnf( char * pFileName, int nVars, int nQueens )Abc_NtkWriteSorterCnf913,28882

src/base/abci/abcEspresso.c,424
void Abc_NtkEspresso( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkEspresso51,1627
void Abc_NodeEspresso( Abc_Obj_t * pNode )Abc_NodeEspresso83,2478
pset_family Abc_SopToEspresso( char * pSop )Abc_SopToEspresso114,3449
char * Abc_SopFromEspresso( Extra_MmFlex_t * pMan, pset_family Cover )Abc_SopFromEspresso170,4828
pset_family Abc_EspressoMinimize( pset_family pOnset, pset_family pDcset )Abc_EspressoMinimize210,5728

src/base/abci/abcIfMux.c,455
static inline int Abc_NtkFuncCof0( int t, int v )Abc_NtkFuncCof046,1279
static inline int Abc_NtkFuncCof1( int t, int v )Abc_NtkFuncCof163,1689
static inline int Abc_NtkFuncHasVar( int t, int v )Abc_NtkFuncHasVar80,2099
static inline int Abc_NtkFuncSuppSize( int t )Abc_NtkFuncSuppSize97,2502
void Abc_NtkCutCostMuxPrecompute()Abc_NtkCutCostMuxPrecompute113,2930
int Abc_NtkCutCostMux( If_Man_t * p, If_Cut_t * pCut )Abc_NtkCutCostMux148,4053

src/base/abci/abcExtract.c,2158
#define SHARE_NUM SHARE_NUM29,786
typedef struct Abc_ShaMan_t_ Abc_ShaMan_t;Abc_ShaMan_t31,807
struct Abc_ShaMan_t_ Abc_ShaMan_t_32,850
    int             nMultiSize;nMultiSize34,874
    int             fVerbose;fVerbose35,906
    Abc_Ntk_t *     pNtk;pNtk36,936
    Vec_Ptr_t *     vBuckets;vBuckets37,962
    Vec_Int_t *     vObj2Lit;vObj2Lit38,992
    int             nStartCols;nStartCols39,1022
    int             nCountGates;nCountGates40,1054
    int             nFoundGates;nFoundGates41,1087
static inline word  Abc_NtkSharePack( int Lev, int Id )  { return (((word)Lev) << 32) | Id; }Abc_NtkSharePack44,1124
static inline int   Abc_NtkShareUnpackLev( word Num )    { return (Num >> 32);              }Abc_NtkShareUnpackLev45,1218
static inline int   Abc_NtkShareUnpackId( word Num )     { return Num & 0xFFFFFFFF;         }Abc_NtkShareUnpackId46,1312
Abc_ShaMan_t * Abc_ShaManStart( Abc_Ntk_t * pNtk )Abc_ShaManStart64,1887
void Abc_ShaManStop( Abc_ShaMan_t * p )Abc_ShaManStop72,2083
Vec_Wrd_t * Abc_NtkShareSuperXor( Abc_Obj_t * pObj, int * pfCompl, int * pCounter )Abc_NtkShareSuperXor95,2625
Vec_Wrd_t * Abc_NtkShareSuperAnd( Abc_Obj_t * pObj, int * pCounter )Abc_NtkShareSuperAnd159,4928
void Abc_NtkTraverseSupersXor_rec( Abc_ShaMan_t * p, Abc_Obj_t * pObj, Vec_Ptr_t * vInputs )Abc_NtkTraverseSupersXor_rec237,7670
void Abc_NtkTraverseSupersAnd_rec( Abc_ShaMan_t * p, Abc_Obj_t * pObj, Vec_Ptr_t * vInputs )Abc_NtkTraverseSupersAnd_rec279,9311
void Abc_NtkTraverseSupers( Abc_ShaMan_t * p, int fAnd )Abc_NtkTraverseSupers313,10612
void Abc_NtkSharePrint( Abc_ShaMan_t * p )Abc_NtkSharePrint367,12284
void Abc_NtkDumpBlif( Abc_Ntk_t * p )Abc_NtkDumpBlif422,13938
void Abc_NtkShareFindBestMatch( Vec_Ptr_t * vBuckets, Vec_Int_t ** pvInput, Vec_Int_t ** pvInput2 )Abc_NtkShareFindBestMatch474,15373
void Abc_NtkShareOptimize( Abc_ShaMan_t * p, int fAnd )Abc_NtkShareOptimize533,17262
Abc_Ntk_t * Abc_NtkUpdateNetwork( Abc_ShaMan_t * p, int fAnd )Abc_NtkUpdateNetwork597,19616
Abc_Ntk_t * Abc_NtkShareXor( Abc_Ntk_t * pNtk, int nMultiSize, int fAnd, int fVerbose )Abc_NtkShareXor720,23661

src/base/abci/abcRpo.c,2017
typedef struct Rpo_TtStore_t_ Rpo_TtStore_t;Rpo_TtStore_t30,691
struct Rpo_TtStore_t_ {Rpo_TtStore_t_32,737
    int nVars;nVars33,761
    int nWords;nWords34,776
    int nFuncs;nFuncs35,792
    word ** pFuncs;pFuncs36,808
static inline int Abc_TruthGetBit(word * p, int i) {Abc_TruthGetBit42,885
static inline void Abc_TruthSetBit(word * p, int i) {Abc_TruthSetBit46,987
static inline void Abc_TruthXorBit(word * p, int i) {Abc_TruthXorBit50,1087
static inline int Abc_TruthGetHex(word * p, int k) {Abc_TruthGetHex56,1240
static inline void Abc_TruthSetHex(word * p, int k, int d) {Abc_TruthSetHex60,1350
static inline void Abc_TruthXorHex(word * p, int k, int d) {Abc_TruthXorHex64,1464
static inline int Abc_TruthReadHexDigit(char HexChar) {Abc_TruthReadHexDigit74,1825
static inline void Abc_TruthWriteHexDigit(FILE * pFile, int HexDigit) {Abc_TruthWriteHexDigit87,2233
static void Abc_TruthReadHex(word * pTruth, char * pString, int nVars) {Abc_TruthReadHex97,2515
static void Abc_TruthWriteHex(FILE * pFile, word * pTruth, int nVars) {Abc_TruthWriteHex121,3626
static Rpo_TtStore_t * Abc_TruthStoreAlloc(int nVars, int nFuncs) {Abc_TruthStoreAlloc144,4219
static Rpo_TtStore_t * Abc_TruthStoreAlloc2(int nVars, int nFuncs, word * pBuffer) {Abc_TruthStoreAlloc2162,4965
static void Abc_TtStoreFree(Rpo_TtStore_t * p, int nVarNum) {Abc_TtStoreFree179,5605
static void Abc_TruthStoreRead(char * pFileName, Rpo_TtStore_t * p) {Abc_TruthStoreRead237,7061
static void Abc_TtStoreWrite(char * pFileName, Rpo_TtStore_t * p, int fBinary) {Abc_TtStoreWrite273,8348
static Rpo_TtStore_t * Abc_TtStoreLoad(char * pFileName, int nVarNum) {Abc_TtStoreLoad301,9189
void Abc_TruthRpoPerform(Rpo_TtStore_t * p, int nThreshold, int fVerbose) {Abc_TruthRpoPerform345,10762
void Abc_TruthRpoTest(char * pFileName, int nVarNum, int nThreshold, int fVerbose) {Abc_TruthRpoTest394,12130
int Abc_RpoTest(char * pFileName, int nVarNum,int nThreshold, int fVerbose) {Abc_RpoTest425,13017

src/base/abci/abcLutmin.c,1922
int Abc_ObjCheckAbsorb( Abc_Obj_t * pObj, Abc_Obj_t * pPivot, int nLutSize, Vec_Ptr_t * vFanins )Abc_ObjCheckAbsorb57,1606
void Abc_NtkCheckAbsorb( Abc_Ntk_t * pNtk, int nLutSize )Abc_NtkCheckAbsorb88,2507
Abc_Obj_t * Abc_NtkBddMux21( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pFanins[] )Abc_NtkBddMux21128,3876
Abc_Obj_t * Abc_NtkBddMux411( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pFanins[] )Abc_NtkBddMux411155,4772
Abc_Obj_t * Abc_NtkBddMux412( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pFanins[] )Abc_NtkBddMux412188,6042
Abc_Obj_t * Abc_NtkBddMux412a( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pFanins[] )Abc_NtkBddMux412a229,7732
Abc_Obj_t * Abc_NtkBddMux413( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pFanins[] )Abc_NtkBddMux413269,9305
DdNode * Abc_NtkBddCofactors_rec( DdManager * dd, DdNode * bNode, int iCof, int iLevel, int nLevels )Abc_NtkBddCofactors_rec298,10161
Vec_Ptr_t * Abc_NtkBddCofactors( DdManager * dd, DdNode * bNode, int Level )Abc_NtkBddCofactors334,11243
static int Vec_PtrSortCompare( void ** pp1, void ** pp2 )Vec_PtrSortCompare356,11854
Abc_Obj_t * Abc_NtkCreateCofLut( Abc_Ntk_t * pNtkNew, DdManager * dd, DdNode * bCof, Abc_Obj_t * pNode, int Level )Abc_NtkCreateCofLut376,12275
Abc_Obj_t * Abc_NtkBddCurtis( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode, Vec_Ptr_t * vCofs, Vec_Ptr_t * vUniq )Abc_NtkBddCurtis421,13644
Abc_Obj_t * Abc_NtkBddFindCofactor( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode, int nLutSize )Abc_NtkBddFindCofactor501,16954
Abc_Obj_t * Abc_NtkBddDecompose( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode, int nLutSize, int fVerbose )Abc_NtkBddDecompose587,20252
void Abc_NtkLutminConstruct( Abc_Ntk_t * pNtkClp, Abc_Ntk_t * pNtkDec, int nLutSize, int fVerbose )Abc_NtkLutminConstruct659,22884
Abc_Ntk_t * Abc_NtkLutminInt( Abc_Ntk_t * pNtk, int nLutSize, int fVerbose )Abc_NtkLutminInt690,23777
Abc_Ntk_t * Abc_NtkLutmin( Abc_Ntk_t * pNtkInit, int nLutSize, int fVerbose )Abc_NtkLutmin721,24884

src/base/abci/abcDress3.c,1020
void Abc_ConvertHopToGia_rec1( Gia_Man_t * p, Hop_Obj_t * pObj )Abc_ConvertHopToGia_rec147,1348
void Abc_ConvertHopToGia_rec2( Hop_Obj_t * pObj )Abc_ConvertHopToGia_rec258,1816
int Abc_ConvertHopToGia( Gia_Man_t * p, Hop_Obj_t * pRoot )Abc_ConvertHopToGia68,2174
void Abc_NtkAigToGiaOne( Gia_Man_t * p, Abc_Ntk_t * pNtk, Vec_Int_t * vMap )Abc_NtkAigToGiaOne89,2714
Gia_Man_t * Abc_NtkAigToGiaTwo( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fByName )Abc_NtkAigToGiaTwo120,3930
static inline void Abc_NtkCollectAddOne( int iNtk, int iObj, int iGiaLit, Gia_Man_t * pGia, Vec_Int_t * vGia2Cla, Vec_Int_t * vNexts[2] )Abc_NtkCollectAddOne204,7206
Vec_Int_t * Abc_NtkCollectEquivClasses( Abc_Ntk_t * pNtks[2], Gia_Man_t * pGia )Abc_NtkCollectEquivClasses213,7760
void Abc_NtkDumpEquivFile( char * pFileName, Vec_Int_t * vClasses, Abc_Ntk_t * pNtks[2] )Abc_NtkDumpEquivFile258,9483
void Abc_NtkDumpEquiv( Abc_Ntk_t * pNtks[2], char * pFileName, int nConfs, int fByName, int fVerbose )Abc_NtkDumpEquiv289,10687

src/base/abci/abcDarUnfold2.c,249
Abc_Ntk_t * Abc_NtkDarUnfold2( Abc_Ntk_t * pNtk, int nFrames, int nConfs, int nProps, int fStruct, int fOldAlgo, int fVerbose )Abc_NtkDarUnfold213,355
Abc_Ntk_t * Abc_NtkDarFold2( Abc_Ntk_t * pNtk, int fCompl, int fVerboseAbc_NtkDarFold251,1574

src/base/abci/abcOrder.c,335
void Abc_NtkFindCiOrder( Abc_Ntk_t * pNtk, int fReverse, int fVerbose )Abc_NtkFindCiOrder47,1379
void Abc_NtkImplementCiOrder( Abc_Ntk_t * pNtk, char * pFileName, int fReverse, int fVerbose )Abc_NtkImplementCiOrder66,1862
void Abc_NtkChangeCiOrder( Abc_Ntk_t * pNtk, Vec_Ptr_t * vSupp, int fReverse )Abc_NtkChangeCiOrder108,3140

src/base/abci/abcIfif.c,1514
#define IFIF_MAX_LEAVES IFIF_MAX_LEAVES30,818
typedef struct Abc_IffObj_t_       Abc_IffObj_t;Abc_IffObj_t33,846
struct Abc_IffObj_t_ Abc_IffObj_t_34,895
    float            Delay[IFIF_MAX_LEAVES+1];     // separate delayDelay36,919
typedef struct Abc_IffMan_t_       Abc_IffMan_t;Abc_IffMan_t41,1073
struct Abc_IffMan_t_ Abc_IffMan_t_42,1122
    Abc_Ntk_t *      pNtk;pNtk44,1146
    Ifif_Par_t *     pPars;pPars45,1173
    int              nObjs;nObjs47,1222
    Abc_IffObj_t *   pObjs;pObjs48,1250
static inline Abc_IffObj_t *  Abc_IffObj( Abc_IffMan_t * p, int i )                             { assert( i >= 0 && i < p->nObjs ); return p->pObjs + i;   }Abc_IffObj51,1282
static inline float           Abc_IffDelay( Abc_IffMan_t * p, Abc_Obj_t * pObj, int fDelay1 )   { return Abc_IffObj(p, Abc_ObjId(pObj))->Delay[fDelay1];   }Abc_IffDelay52,1439
Abc_IffMan_t * Abc_NtkIfifStart( Abc_Ntk_t * pNtk, Ifif_Par_t * pPars )Abc_NtkIfifStart69,2051
void Abc_NtkIfifStop( Abc_IffMan_t * p )Abc_NtkIfifStop80,2380
void Abc_ObjSortByDelay( Abc_IffMan_t * p, Abc_Obj_t * pObj, int fDelay1, Abc_Obj_t ** ppNodes )Abc_ObjSortByDelay98,2775
float Abc_ObjDelay0( Abc_IffMan_t * p, Abc_Obj_t * pObj )Abc_ObjDelay0134,4046
float Abc_ObjDelay1( Abc_IffMan_t * p, Abc_Obj_t * pObj )Abc_ObjDelay1156,4696
float Abc_ObjDelayDegree( Abc_IffMan_t * p, Abc_Obj_t * pObj, int d )Abc_ObjDelayDegree227,7334
void Abc_NtkPerformIfif( Abc_Ntk_t * pNtk, Ifif_Par_t * pPars )Abc_NtkPerformIfif255,8211

src/base/abci/abcDsd.c,1480
Abc_Ntk_t * Abc_NtkDsdGlobal( Abc_Ntk_t * pNtk, int fVerbose, int fPrint, int fShort )Abc_NtkDsdGlobal65,2462
Abc_Ntk_t * Abc_NtkDsdInternal( Abc_Ntk_t * pNtk, int fVerbose, int fPrint, int fShort )Abc_NtkDsdInternal103,3638
void Abc_NtkDsdConstruct( Dsd_Manager_t * pManDsd, Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew )Abc_NtkDsdConstruct169,5823
Abc_Obj_t * Abc_NtkDsdConstructNode( Dsd_Manager_t * pManDsd, Dsd_Node_t * pNodeDsd, Abc_Ntk_t * pNtkNew, int * pCounters )Abc_NtkDsdConstructNode217,7507
int Abc_NtkDsdLocal( Abc_Ntk_t * pNtk, int fVerbose, int fRecursive )Abc_NtkDsdLocal321,10634
Vec_Ptr_t * Abc_NtkCollectNodesForDsd( Abc_Ntk_t * pNtk )Abc_NtkCollectNodesForDsd375,12222
void Abc_NodeDecompDsdAndMux( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes, Dsd_Manager_t * pManDsd, int fRecursive, int * pCounters )Abc_NodeDecompDsdAndMux400,12799
int Abc_NodeIsForDsd( Abc_Obj_t * pNode )Abc_NodeIsForDsd485,16169
int Abc_NodeFindMuxVar( DdManager * dd, DdNode * bFunc, int nVars )Abc_NodeFindMuxVar524,17196
DdNode * Extra_bddComputeSum( DdManager * dd, DdNode ** pbCubes, int nCubes )Extra_bddComputeSum576,18698
DdNode * Abc_NtkSparsifyInternalOne( DdManager * ddNew, DdNode * bFunc, int nFanins, int nPerc )Abc_NtkSparsifyInternalOne601,19368
Abc_Ntk_t * Abc_NtkSparsifyInternal( Abc_Ntk_t * pNtk, int nPerc, int fVerbose )Abc_NtkSparsifyInternal616,20016
Abc_Ntk_t * Abc_NtkSparsify( Abc_Ntk_t * pNtk, int nPerc, int fVerbose )Abc_NtkSparsify679,22817

src/base/abci/abcSense.c,323
Abc_Obj_t * Abc_NtkSensitivityMiter_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode )Abc_NtkSensitivityMiter_rec46,1285
Abc_Ntk_t * Abc_NtkSensitivityMiter( Abc_Ntk_t * pNtk, int iVar )Abc_NtkSensitivityMiter67,2001
Vec_Int_t * Abc_NtkSensitivity( Abc_Ntk_t * pNtk, int nConfLim, int fVerbose )Abc_NtkSensitivity160,5514

src/base/abci/abcDress2.c,1530
int Abc_ObjEquivId2ObjId( int EquivId ) { return  EquivId >> 2;      }Abc_ObjEquivId2ObjId56,2061
int Abc_ObjEquivId2Polar( int EquivId ) { return (EquivId >> 1) & 1; }Abc_ObjEquivId2Polar57,2132
int Abc_ObjEquivId2NtkId( int EquivId ) { return  EquivId       & 1; }Abc_ObjEquivId2NtkId58,2203
Aig_Man_t * Aig_ManCreateDualOutputMiter( Aig_Man_t * p1, Aig_Man_t * p2 )Aig_ManCreateDualOutputMiter82,3147
void Abc_NtkDressMapSetPolarity( Abc_Ntk_t * pNtk )Abc_NtkDressMapSetPolarity123,4575
Vec_Int_t * Abc_NtkDressMapClasses( Aig_Man_t * pMiter, Abc_Ntk_t * pNtk )Abc_NtkDressMapClasses146,5296
Vec_Int_t * Abc_ObjDressClass( Vec_Ptr_t * vRes, Vec_Int_t * vClass2Num, int Class )Abc_ObjDressClass182,6775
int Abc_ObjDressMakeId( Abc_Ntk_t * pNtk, int ObjId, int iNtk )Abc_ObjDressMakeId209,7736
Vec_Ptr_t * Abc_NtkDressMapIds( Aig_Man_t * pMiter, Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2 )Abc_NtkDressMapIds225,8189
Vec_Ptr_t * Abc_NtkDressComputeEquivs( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nConflictLimit, int fVerbose )Abc_NtkDressComputeEquivs290,11138
void Abc_NtkDressPrintEquivs( Vec_Ptr_t * vRes )Abc_NtkDressPrintEquivs333,12571
void Abc_NtkDressPrintStats( Vec_Ptr_t * vRes, int nNodes0, int nNodes1, abctime Time )Abc_NtkDressPrintStats361,13360
void Abc_NtkDress2Transfer( Abc_Ntk_t * pNtk0, Abc_Ntk_t * pNtk1, Vec_Ptr_t * vRes, int fVerbose )Abc_NtkDress2Transfer418,15974
void Abc_NtkDress2( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int nConflictLimit, int fVerbose )Abc_NtkDress2483,18011

src/base/abci/abcMffc.c,3153
void Abc_MffcDeref_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Abc_MffcDeref_rec44,1300
void Abc_MffcRef_rec( Abc_Obj_t * pNode )Abc_MffcRef_rec71,1957
void Abc_MffcCollectNodes( Abc_Obj_t ** pNodes, int nNodes, Vec_Ptr_t * vNodes )Abc_MffcCollectNodes95,2496
void Abc_MffcCollectLeaves( Vec_Ptr_t * vNodes, Vec_Ptr_t * vLeaves )Abc_MffcCollectLeaves116,3039
Vec_Ptr_t * Abc_NktMffcMarkRoots( Abc_Ntk_t * pNtk, int fSkipPis )Abc_NktMffcMarkRoots149,4024
void Abc_NktMffcCollectFanout_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vFanouts )Abc_NktMffcCollectFanout_rec203,5654
void Abc_NktMffcCollectFanout( Abc_Obj_t ** pNodes, int nNodes, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vFanouts )Abc_NktMffcCollectFanout235,6473
Abc_Obj_t * Abc_NktMffcGrowOne( Abc_Ntk_t * pNtk, Abc_Obj_t ** ppObjs, int nObjs, Vec_Ptr_t * vNodes, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vFanouts )Abc_NktMffcGrowOne265,7409
Vec_Ptr_t * Abc_NktMffcGrowRoots( Abc_Ntk_t * pNtk, Vec_Ptr_t * vRoots )Abc_NktMffcGrowRoots306,8892
Vec_Ptr_t * Abc_NktMffcGrowRootsAgain( Abc_Ntk_t * pNtk, Vec_Ptr_t * vRoots, Vec_Ptr_t * vRoots1 )Abc_NktMffcGrowRootsAgain343,10100
void Abc_NktMffcPrint( char * pFileName, Abc_Obj_t ** pNodes, int nNodes, Vec_Ptr_t * vNodes, Vec_Ptr_t * vLeaves )Abc_NktMffcPrint386,11411
void Abc_NktMffcPrintInt( char * pFileName, Abc_Ntk_t * pNtk, Vec_Int_t * vRoots, Vec_Int_t * vNodes, Vec_Int_t * vLeaves )Abc_NktMffcPrintInt427,12741
void Abc_NktMffcTest( Abc_Ntk_t * pNtk )Abc_NktMffcTest468,14055
void Abc_NktMffcTestSuper( Abc_Ntk_t * pNtk )Abc_NktMffcTestSuper542,16581
void Abc_NktMffCollectLeafRoot( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vRoots )Abc_NktMffCollectLeafRoot691,22157
void Abc_NktMffCollectLeafRootInt( Abc_Ntk_t * pNtk, Vec_Int_t * vNodes, Vec_Int_t * vLeaves, Vec_Int_t * vRoots )Abc_NktMffCollectLeafRootInt736,23475
void Abc_NktMffcTestIdeaOne( Abc_Ntk_t * pNtk, Abc_Obj_t * pObj )Abc_NktMffcTestIdeaOne785,24850
void Abc_NktMffcTestIdea( Abc_Ntk_t * pNtk )Abc_NktMffcTestIdea868,27899
Vec_Ptr_t * Abc_NktMffcDerive( Abc_Ntk_t * pNtk, Vec_Ptr_t ** pvFanins, Vec_Ptr_t ** pvFanouts, Vec_Ptr_t ** pvVolumes )Abc_NktMffcDerive892,28423
void Abc_NktMffcFree( Vec_Ptr_t * vRoots, Vec_Ptr_t * vFanins, Vec_Ptr_t * vFanouts, Vec_Ptr_t * vVolumes )Abc_NktMffcFree954,30714
double Abc_NktMffcCostTwo( Vec_Int_t * vSupp1, Vec_Int_t * vSupp2, int Volume, int Limit )Abc_NktMffcCostTwo982,31541
Vec_Int_t * Abc_NktMffcSupport( Vec_Ptr_t * vThis, Vec_Ptr_t * vFanins )Abc_NktMffcSupport1002,32240
Abc_Obj_t * Abc_NktMffcFindBest( Abc_Ntk_t * pNtk, Vec_Int_t * vMarks, Vec_Int_t * vIns, Vec_Ptr_t * vFanins, Vec_Ptr_t * vFanouts, Vec_Ptr_t * vVolumes, int Limit )Abc_NktMffcFindBest1028,32961
Vec_Int_t * Abc_NktMffcSaveOne( Vec_Ptr_t * vThis, Vec_Ptr_t * vVolumes )Abc_NktMffcSaveOne1077,34671
int Abc_NodeCompareVolumeDecrease( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_NodeCompareVolumeDecrease1103,35418
Vec_Ptr_t * Abc_NktMffcServer( Abc_Ntk_t * pNtk, int nInMax, int nOutMax )Abc_NktMffcServer1130,36185
void Abc_NktMffcServerTest( Abc_Ntk_t * pNtk )Abc_NktMffcServerTest1204,38982

src/base/abci/abcStrash.c,1742
Abc_Ntk_t * Abc_NtkRestrash( Abc_Ntk_t * pNtk, int fCleanup )Abc_NtkRestrash49,1566
void Abc_NtkRestrashRandom_rec( Abc_Ntk_t * pNtk, Abc_Obj_t * pObj )Abc_NtkRestrashRandom_rec106,3828
Abc_Ntk_t * Abc_NtkRestrashRandom( Abc_Ntk_t * pNtk )Abc_NtkRestrashRandom138,4887
Abc_Ntk_t * Abc_NtkRestrashZero( Abc_Ntk_t * pNtk, int fCleanup )Abc_NtkRestrashZero181,6437
Abc_Ntk_t * Abc_NtkStrash( Abc_Ntk_t * pNtk, int fAllNodes, int fCleanup, int fRecord )Abc_NtkStrash265,9823
int Abc_NtkAppend( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2, int fAddPos )Abc_NtkAppend320,11975
void Abc_NtkStrashPerform( Abc_Ntk_t * pNtkOld, Abc_Ntk_t * pNtkNew, int fAllNodes, int fRecord )Abc_NtkStrashPerform413,15335
void Abc_NodeStrash_rec( Abc_Aig_t * pMan, Hop_Obj_t * pObj )Abc_NodeStrash_rec445,16360
Abc_Obj_t * Abc_NodeStrash( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNodeOld, int fRecord )Abc_NodeStrash468,17139
Abc_Obj_t * Abc_NtkTopmost_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode, int LevelCut )Abc_NtkTopmost_rec525,19340
Abc_Ntk_t * Abc_NtkTopmost( Abc_Ntk_t * pNtk, int nLevels )Abc_NtkTopmost548,20165
Abc_Obj_t * Abc_NtkBottommost_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pNode, int LevelCut )Abc_NtkBottommost_rec594,21677
Abc_Ntk_t * Abc_NtkBottommost( Abc_Ntk_t * pNtk, int nLevels )Abc_NtkBottommost617,22473
static int Vec_CompareNodeIds( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Vec_CompareNodeIds663,23936
Vec_Ptr_t * Abc_NodeGetSuper( Abc_Obj_t * pNode )Abc_NodeGetSuper683,24453
Abc_Ntk_t * Abc_NtkTopAnd( Abc_Ntk_t * pNtk )Abc_NtkTopAnd730,26013
void Abc_NtkWriteAig( Abc_Ntk_t * pNtk, char * pFileName )Abc_NtkWriteAig787,28230
Abc_Ntk_t * Abc_NtkPutOnTop( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtk2 )Abc_NtkPutOnTop861,30825

src/base/abci/abcFpga.c,484
Abc_Ntk_t * Abc_NtkFpga( Abc_Ntk_t * pNtk, float DelayTarget, int fRecovery, int fSwitching, int fLatchPaths, int fVerbose )Abc_NtkFpga54,1675
Fpga_Man_t * Abc_NtkToFpga( Abc_Ntk_t * pNtk, int fRecovery, float * pSwitching, int fLatchPaths, int fVerbose )Abc_NtkToFpga126,3819
Abc_Ntk_t * Abc_NtkFromFpga( Fpga_Man_t * pMan, Abc_Ntk_t * pNtk )Abc_NtkFromFpga206,6760
Abc_Obj_t * Abc_NodeFromFpga_rec( Abc_Ntk_t * pNtkNew, Fpga_Node_t * pNodeFpga )Abc_NodeFromFpga_rec256,8716

src/base/abci/abcAuto.c,459
void Abc_NtkAutoPrint( Abc_Ntk_t * pNtk, int Output, int fNaive, int fVerbose )Abc_NtkAutoPrint54,1641
void Abc_NtkAutoPrintAll( DdManager * dd, int nInputs, DdNode * pbOutputs[], int nOutputs, char * pInputNames[], char * pOutputNames[], int fNaive )Abc_NtkAutoPrintAll124,3982
void Abc_NtkAutoPrintOne( DdManager * dd, int nInputs, DdNode * pbOutputs[], int Output, char * pInputNames[], char * pOutputNames[], int fNaive )Abc_NtkAutoPrintOne219,7127

src/base/abci/abcMini.c,866
Abc_Obj_t * Abc_NodeFanin0Copy( Abc_Ntk_t * pNtk, Vec_Int_t * vCopies, Mini_Aig_t * p, int Id )Abc_NodeFanin0Copy48,1370
Abc_Obj_t * Abc_NodeFanin1Copy( Abc_Ntk_t * pNtk, Vec_Int_t * vCopies, Mini_Aig_t * p, int Id )Abc_NodeFanin1Copy54,1653
Abc_Ntk_t * Abc_NtkFromMiniAig( Mini_Aig_t * p )Abc_NtkFromMiniAig60,1936
int Abc_NodeFanin0Copy2( Abc_Obj_t * pObj )Abc_NodeFanin0Copy2115,3933
int Abc_NodeFanin1Copy2( Abc_Obj_t * pObj )Abc_NodeFanin1Copy2119,4060
Mini_Aig_t * Abc_NtkToMiniAig( Abc_Ntk_t * pNtk )Abc_NtkToMiniAig123,4187
void Abc_NtkInputMiniAig( Abc_Frame_t * pAbc, void * p )Abc_NtkInputMiniAig159,5322
void * Abc_NtkOutputMiniAig( Abc_Frame_t * pAbc )Abc_NtkOutputMiniAig168,5637
void Abc_NtkSetFlopNum( Abc_Frame_t * pAbc, int nFlops )Abc_NtkSetFlopNum178,5986
void Abc_NtkMiniAigTest( Abc_Ntk_t * pNtk )Abc_NtkMiniAigTest201,6663

src/base/abci/abcDress.c,313
void Abc_NtkDress( Abc_Ntk_t * pNtkLogic, char * pFileName, int fVerbose )Abc_NtkDress51,1638
stmm_table * Abc_NtkDressDeriveMapping( Abc_Ntk_t * pNtk )Abc_NtkDressDeriveMapping130,4235
void Abc_NtkDressTransferNames( Abc_Ntk_t * pNtk, stmm_table * tMapping, int fVerbose )Abc_NtkDressTransferNames163,5258

src/base/abci/abcDec.c,2817
typedef struct Abc_TtStore_t_  Abc_TtStore_t;Abc_TtStore_t45,1152
struct Abc_TtStore_t_ Abc_TtStore_t_46,1198
    int               nVars;nVars48,1223
    int               nWords;nWords49,1252
    int               nFuncs;nFuncs50,1282
    word **           pFuncs;pFuncs51,1312
static inline int     Abc_TruthGetBit( word * p, int i )         { return (int)(p[i>>6] >> (i & 63)) & 1;        }Abc_TruthGetBit55,1397
static inline void    Abc_TruthSetBit( word * p, int i )         { p[i>>6] |= (((word)1)<<(i & 63));             }Abc_TruthSetBit56,1512
static inline void    Abc_TruthXorBit( word * p, int i )         { p[i>>6] ^= (((word)1)<<(i & 63));             }Abc_TruthXorBit57,1627
static inline int     Abc_TruthGetHex( word * p, int k )         { return (int)(p[k>>4] >> ((k<<2) & 63)) & 15;  }Abc_TruthGetHex60,1795
static inline void    Abc_TruthSetHex( word * p, int k, int d )  { p[k>>4] |= (((word)d)<<((k<<2) & 63));        }Abc_TruthSetHex61,1910
static inline void    Abc_TruthXorHex( word * p, int k, int d )  { p[k>>4] ^= (((word)d)<<((k<<2) & 63));        }Abc_TruthXorHex62,2025
static inline int  Abc_TruthReadHexDigit( char HexChar )Abc_TruthReadHexDigit69,2387
static inline void Abc_TruthWriteHexDigit( FILE * pFile, int HexDigit )Abc_TruthWriteHexDigit82,2805
void Abc_TruthReadHex( word * pTruth, char * pString, int nVars )Abc_TruthReadHex92,3094
void Abc_TruthWriteHex( FILE * pFile, word * pTruth, int nVars )Abc_TruthWriteHex117,4212
Abc_TtStore_t * Abc_TruthStoreAlloc( int nVars, int nFuncs )Abc_TruthStoreAlloc141,4808
Abc_TtStore_t * Abc_TruthStoreAlloc2( int nVars, int nFuncs, word * pBuffer )Abc_TruthStoreAlloc2159,5548
void Abc_TtStoreFree( Abc_TtStore_t * p, int nVarNum )Abc_TtStoreFree176,6183
int Abc_FileSize( char * pFileName )Abc_FileSize195,6600
char * Abc_FileRead( char * pFileName )Abc_FileRead223,7244
void Abc_TruthGetParams( char * pFileName, int * pnVars, int * pnTruths )Abc_TruthGetParams263,8498
void Abc_TruthStoreRead( char * pFileName, Abc_TtStore_t * p )Abc_TruthStoreRead321,10292
void Abc_TtStoreWrite( char * pFileName, Abc_TtStore_t * p, int fBinary )Abc_TtStoreWrite359,11591
Abc_TtStore_t * Abc_TtStoreLoad( char * pFileName, int nVarNum )Abc_TtStoreLoad396,12639
void Abc_TtStoreLoadSave( char * pFileName )Abc_TtStoreLoadSave442,14134
void Abc_TtStoreLoadSaveBin( char * pFileName )Abc_TtStoreLoadSaveBin472,14978
void Abc_TtStoreTest( char * pFileName )Abc_TtStoreTest520,16631
void Abc_TruthDecPerform( Abc_TtStore_t * p, int DecType, int fVerbose )Abc_TruthDecPerform550,17419
void Abc_TruthDecTest( char * pFileName, int DecType, int nVarNum, int fVerbose )Abc_TruthDecTest696,22302
int Abc_DecTest( char * pFileName, int DecType, int nVarNum, int fVerbose )Abc_DecTest724,23033

src/base/abci/abcMv.c,958
typedef struct Mv_Man_t_ Mv_Man_t;Mv_Man_t36,866
struct Mv_Man_t_Mv_Man_t_37,901
    int         nInputs;          // the number of 4-valued input variablesnInputs39,920
    int         nFuncs;           // the number of 4-valued functionsnFuncs40,996
    DdManager * dd;               // representation of functionsdd41,1066
    DdNode *    bValues[15][4];   // representation of i-setsbValues42,1131
    DdNode *    bValueDcs[15][4]; // representation of i-sets don't-caresbValueDcs43,1193
    DdNode *    bFuncs[15];       // representation of functionsbFuncs44,1267
void Abc_MvExperiment()Abc_MvExperiment68,2054
void Abc_MvPrintStats( Mv_Man_t * p )Abc_MvPrintStats102,2885
DdNode * Abc_MvReadCube( DdManager * dd, char * pLine, int nVars )Abc_MvReadCube126,3534
void Abc_MvRead( Mv_Man_t * p )Abc_MvRead158,4406
void Abc_MvDeref( Mv_Man_t * p )Abc_MvDeref269,8484
void Abc_MvDecompose( Mv_Man_t * p )Abc_MvDecompose295,9042

src/base/io/ioWriteBlifMv.c,827
void Io_WriteBlifMv( Abc_Ntk_t * pNtk, char * FileName )Io_WriteBlifMv58,2068
void Io_NtkWriteBlifMv( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteBlifMv100,3262
void Io_NtkWriteBlifMvOne( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteBlifMvOne125,3958
void Io_NtkWriteBlifMvPis( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteBlifMvPis213,6483
void Io_NtkWriteBlifMvPos( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteBlifMvPos253,7533
void Io_NtkWriteBlifMvLatch( FILE * pFile, Abc_Obj_t * pLatch )Io_NtkWriteBlifMvLatch293,8580
void Io_NtkWriteBlifMvSubckt( FILE * pFile, Abc_Obj_t * pNode )Io_NtkWriteBlifMvSubckt321,9447
void Io_NtkWriteBlifMvNode( FILE * pFile, Abc_Obj_t * pNode )Io_NtkWriteBlifMvNode364,10919
void Io_NtkWriteBlifMvNodeFanins( FILE * pFile, Abc_Obj_t * pNode )Io_NtkWriteBlifMvNodeFanins427,12634

src/base/io/ioReadBblif.c,491
Abc_Ntk_t * Bbl_ManToAbc( Bbl_Man_t * p )Bbl_ManToAbc55,1909
void Bbl_ManDfs_rec( Bbl_Obj_t * pObj, Vec_Ptr_t * vNodes )Bbl_ManDfs_rec103,3521
Vec_Ptr_t * Bbl_ManDfs( Bbl_Man_t * p )Bbl_ManDfs128,4252
Abc_Ntk_t * Bbl_ManToAig( Bbl_Man_t * p )Bbl_ManToAig156,5224
void Bbl_ManVerify( Abc_Ntk_t * pNtk1, Abc_Ntk_t * pNtk2 )Bbl_ManVerify243,8148
void Bbl_ManTest( Abc_Ntk_t * pNtk )Bbl_ManTest267,8867
Abc_Ntk_t * Io_ReadBblif( char * pFileName, int fCheck )Io_ReadBblif324,10264

src/base/io/ioReadPlaMo.c,3753
typedef struct Mop_Man_t_ Mop_Man_t;Mop_Man_t30,832
struct Mop_Man_t_Mop_Man_t_31,869
    int              nIns;nIns33,889
    int              nOuts;nOuts34,916
    int              nWordsIn;nWordsIn35,944
    int              nWordsOut;nWordsOut36,975
    Vec_Wrd_t *      vWordsIn;vWordsIn37,1007
    Vec_Wrd_t *      vWordsOut;vWordsOut38,1038
    Vec_Int_t *      vCubes; vCubes39,1070
    Vec_Int_t *      vFree;vFree40,1100
static inline int    Mop_ManIsSopSymb( char c ) {  return c == '0' || c == '1' || c == '-'; }Mop_ManIsSopSymb43,1132
static inline int    Mop_ManIsSpace( char c )   {  return c == ' ' || c == '\t' || c == '\n' || c == '\v' || c == '\f' || c == '\r'; }Mop_ManIsSpace44,1226
static inline word * Mop_ManCubeIn( Mop_Man_t * p, int i )  { return Vec_WrdEntryP(p->vWordsIn,   p->nWordsIn  * i); }Mop_ManCubeIn46,1362
static inline word * Mop_ManCubeOut( Mop_Man_t * p, int i ) { return Vec_WrdEntryP(p->vWordsOut,  p->nWordsOut * i); }Mop_ManCubeOut47,1481
Mop_Man_t * Mop_ManAlloc( int nIns, int nOuts, int nCubes )Mop_ManAlloc64,2055
void Mop_ManStop( Mop_Man_t * p )Mop_ManStop77,2568
char * Mop_ManLoadFile( char * pFileName )Mop_ManLoadFile97,3023
int Mop_ManReadParams( char * pBuffer, int * pnIns, int * pnOuts )Mop_ManReadParams134,3970
Mop_Man_t * Mop_ManRead( char * pFileName )Mop_ManRead147,4376
void Mop_ManPrintOne( Mop_Man_t * p, int iCube )Mop_ManPrintOne207,6331
void Mop_ManPrint( Mop_Man_t * p )Mop_ManPrint220,6756
static inline int Mop_ManCountOnes( word * pCube, int nWords )Mop_ManCountOnes241,7219
static inline int Mop_ManCountOutputLits( Mop_Man_t * p )Mop_ManCountOutputLits248,7407
static inline Vec_Wec_t * Mop_ManCreateGroups( Mop_Man_t * p )Mop_ManCreateGroups255,7649
static inline int Mop_ManUnCreateGroups( Mop_Man_t * p, Vec_Wec_t * vGroups )Mop_ManUnCreateGroups263,7947
static inline int Mop_ManCheckContain( word * pBig, word * pSmall, int nWords )Mop_ManCheckContain275,8373
static inline void Mop_ManRemoveEmpty( Mop_Man_t * p )Mop_ManRemoveEmpty283,8589
Vec_Int_t * Mop_ManCollectStats( Mop_Man_t * p )Mop_ManCollectStats309,9302
static inline int Mop_ManFindDiffVar( word * pCube1, word * pCube2, int nWords )Mop_ManFindDiffVar336,10104
static inline int Mop_ManCheckDist1( word * pCube1, word * pCube2, int nWords )Mop_ManCheckDist1350,10486
static inline void Map_ManGroupCompact( Vec_Int_t * vGroup )Map_ManGroupCompact372,11213
int Mop_ManRemoveIdentical( Mop_Man_t * p, Vec_Int_t * vGroup )Mop_ManRemoveIdentical381,11526
Vec_Int_t * Mop_ManCompatiblePairs( Vec_Int_t * vPairs, int nObjs )Mop_ManCompatiblePairs409,12508
Vec_Int_t * Mop_ManFindDist1Pairs( Mop_Man_t * p, Vec_Int_t * vGroup )Mop_ManFindDist1Pairs461,14646
int Mop_ManMergeDist1Pairs( Mop_Man_t * p, Vec_Int_t * vGroup, Vec_Int_t * vGroupPrev, Vec_Int_t * vStats, int nLimit )Mop_ManMergeDist1Pairs482,15463
int Mop_ManMergeDist1Pairs2( Mop_Man_t * p, Vec_Int_t * vGroup, Vec_Int_t * vGroupPrev )Mop_ManMergeDist1Pairs2535,17624
int Mop_ManMergeDist1All( Mop_Man_t * p, Vec_Wec_t * vGroups, Vec_Int_t * vStats, int nLimit )Mop_ManMergeDist1All583,19609
int Mop_ManMergeContainTwo( Mop_Man_t * p, Vec_Int_t * vGroup, Vec_Int_t * vGroup2 )Mop_ManMergeContainTwo606,20439
int Mop_ManMergeContainAll( Mop_Man_t * p, Vec_Wec_t * vGroups )Mop_ManMergeContainAll637,21584
void Mop_ManReduce2( Mop_Man_t * p )Mop_ManReduce2649,21971
void Mop_ManReduce( Mop_Man_t * p )Mop_ManReduce686,23389
Vec_Wec_t * Mop_ManCubeCount( Mop_Man_t * p )Mop_ManCubeCount721,24619
Abc_Ntk_t * Mop_ManDerive( Mop_Man_t * p, char * pFileName )Mop_ManDerive735,25024
Abc_Ntk_t * Mop_ManTest( char * pFileName, int fMerge, int fVerbose )Mop_ManTest788,26877

src/base/io/ioInt.h,61
#define ABC__base__io__ioInt_hABC__base__io__ioInt_h22,538

src/base/io/ioWriteSmv.c,457
static char *cleanUNSAFE( const char *s )cleanUNSAFE45,1576
static int hasPrefix(const char *needle, const char *haystack)hasPrefix55,1803
int Io_WriteSmv( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteSmv71,2199
int Io_WriteSmvOne( FILE * pFile, Abc_Ntk_t * pNtk )Io_WriteSmvOne110,3395
int Io_WriteSmvOneNode( FILE * pFile, Abc_Obj_t * pNode )Io_WriteSmvOneNode202,6276
int Io_WriteSmvCheckNames( Abc_Ntk_t * pNtk )Io_WriteSmvCheckNames247,7808

src/base/io/ioWriteBench.c,624
int Io_WriteBench( Abc_Ntk_t * pNtk, const char * pFileName )Io_WriteBench53,1650
int Io_WriteBenchOne( FILE * pFile, Abc_Ntk_t * pNtk )Io_WriteBenchOne92,2867
int Io_WriteBenchOneNode( FILE * pFile, Abc_Obj_t * pNode )Io_WriteBenchOneNode130,4041
int Io_WriteBenchLut( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteBenchLut175,5499
int Io_WriteBenchLutOne( FILE * pFile, Abc_Ntk_t * pNtk )Io_WriteBenchLutOne214,6719
int Io_WriteBenchLutOneNode( FILE * pFile, Abc_Obj_t * pNode, Vec_Int_t * vTruth )Io_WriteBenchLutOneNode255,8044
int Io_WriteBenchCheckNames( Abc_Ntk_t * pNtk )Io_WriteBenchCheckNames322,10140

src/base/io/ioReadAiger.c,639
static inline unsigned Io_ReadAigerDecode( char ** ppPos )Io_ReadAigerDecode56,1744
Vec_Int_t * Io_WriteDecodeLiterals( char ** ppPos, int nEntries )Io_WriteDecodeLiterals79,2274
typedef struct buflist {buflist112,3181
  char buf[1<<20];buf113,3206
  int nBuf;nBuf114,3225
  struct buflist * next;next115,3237
} buflist;buflist116,3262
static char * Ioa_ReadLoadFileBz2Aig( char * pFileName, int * pFileSize )Ioa_ReadLoadFileBz2Aig118,3274
static char * Ioa_ReadLoadFileGzAig( char * pFileName, int * pFileSize )Ioa_ReadLoadFileGzAig199,5806
Abc_Ntk_t * Io_ReadAiger( char * pFileName, int fCheck )Io_ReadAiger234,7006

src/base/io/ioReadVerilog.c,82
Abc_Ntk_t * Io_ReadVerilog( char * pFileName, int fCheck )Io_ReadVerilog48,1439

src/base/io/ioWriteBblif.c,149
Bbl_Man_t * Bbl_ManFromAbc( Abc_Ntk_t * pNtk )Bbl_ManFromAbc54,1847
void Io_WriteBblif( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteBblif99,3456

src/base/io/ioWriteDot.c,539
void Io_WriteDot( Abc_Ntk_t * pNtk, char * FileName )Io_WriteDot51,1551
void Io_WriteDotNtk( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes, Vec_Ptr_t * vNodesShow, char * pFileName, int fGateNames, int fUseReverse )Io_WriteDotNtk71,2118
void Io_WriteDotSeq( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes, Vec_Ptr_t * vNodesShow, char * pFileName, int fGateNames, int fUseReverse )Io_WriteDotSeq434,14858
char * Abc_NtkPrintSop( char * pSop ) Abc_NtkPrintSop803,27630
int Abc_NtkCountLogicNodes( Vec_Ptr_t * vNodes )Abc_NtkCountLogicNodes833,28244

src/base/io/ioReadPla.c,1472
static inline void Io_ReadPlaPrintCube( word * p, int nVars )Io_ReadPlaPrintCube48,1430
static inline int Io_ReadPlaDistance1( word * p, word * q, int nWords )Io_ReadPlaDistance167,1911
static inline int Io_ReadPlaConsensus( word * p, word * q, int nWords, int * piVar )Io_ReadPlaConsensus85,2533
void Io_ReadPlaMarkIdentical( word ** pCs, int nCubes, int nWords, Vec_Bit_t * vMarks )Io_ReadPlaMarkIdentical116,3374
void Io_ReadPlaMarkContained( word ** pCs, int nCubes, int nWords, Vec_Bit_t * vMarks )Io_ReadPlaMarkContained127,3824
int Io_ReadPlaRemoveMarked( word ** pCs, int nCubes, int nWords, Vec_Bit_t * vMarks )Io_ReadPlaRemoveMarked145,4515
int Io_ReadPlaMergeDistance1( word ** pCs, int nCubes, int nWords, Vec_Bit_t * vMarks )Io_ReadPlaMergeDistance1158,4862
int Io_ReadPlaSelfSubsumption( word ** pCs, int nCubes, int nWords, Vec_Bit_t * vMarks )Io_ReadPlaSelfSubsumption177,5587
word ** Io_ReadPlaCubeSetup( Vec_Str_t * vSop )Io_ReadPlaCubeSetup240,7957
void Io_ReadPlaCubeSetdown( Vec_Str_t * vSop, word ** pCs, int nCubes, int nVars )Io_ReadPlaCubeSetdown263,8721
void Io_ReadPlaCubePreprocess( Vec_Str_t * vSop, int iCover, int fVerbose )Io_ReadPlaCubePreprocess275,9100
Abc_Ntk_t * Io_ReadPla( char * pFileName, int fZeros, int fBoth, int fOnDc, int fSkipPrepro, int fCheck )Io_ReadPla329,10796
Abc_Ntk_t * Io_ReadPlaNetwork( Extra_FileReader_t * p, int fZeros, int fBoth, int fOnDc, int fSkipPrepro )Io_ReadPlaNetwork366,11819

src/base/io/ioWriteList.c,340
void Io_WriteList( Abc_Ntk_t * pNtk, char * pFileName, int fUseHost )Io_WriteList102,3951
void Io_WriteListEdge( FILE * pFile, Abc_Obj_t * pObj )Io_WriteListEdge155,5362
void Io_WriteListHost( FILE * pFile, Abc_Ntk_t * pNtk )Io_WriteListHost184,6260
void Io_WriteCellNet( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteCellNet221,7245

src/base/io/ioAbc.h,1061
#define ABC__base__io__ioAbc_hABC__base__io__ioAbc_h22,538
    IO_FILE_NONE = 0, IO_FILE_NONE48,1391
    IO_FILE_AIGER,      IO_FILE_AIGER49,1414
    IO_FILE_BAF,      IO_FILE_BAF50,1439
    IO_FILE_BBLIF,      IO_FILE_BBLIF51,1462
    IO_FILE_BLIF,      IO_FILE_BLIF52,1487
    IO_FILE_BLIFMV,      IO_FILE_BLIFMV53,1511
    IO_FILE_BENCH,      IO_FILE_BENCH54,1537
    IO_FILE_BOOK,IO_FILE_BOOK55,1562
    IO_FILE_CNF,      IO_FILE_CNF56,1580
    IO_FILE_DOT,      IO_FILE_DOT57,1603
    IO_FILE_EDIF,      IO_FILE_EDIF58,1626
    IO_FILE_EQN,      IO_FILE_EQN59,1650
    IO_FILE_GML,      IO_FILE_GML60,1673
    IO_FILE_JSON,      IO_FILE_JSON61,1696
    IO_FILE_LIST,      IO_FILE_LIST62,1720
    IO_FILE_PLA,      IO_FILE_PLA63,1744
    IO_FILE_MOPLA,      IO_FILE_MOPLA64,1767
    IO_FILE_SMV,      IO_FILE_SMV65,1792
    IO_FILE_VERILOG,    IO_FILE_VERILOG66,1815
    IO_FILE_UNKNOWN       IO_FILE_UNKNOWN67,1840
} Io_FileType_t;Io_FileType_t68,1867
#define  IO_WRITE_LINE_LENGTH IO_WRITE_LINE_LENGTH74,2105

src/base/io/ioReadBench.c,251
Abc_Ntk_t * Io_ReadBench( char * pFileName, int fCheck )Io_ReadBench47,1352
Abc_Ntk_t * Io_ReadBenchNetwork( Extra_FileReader_t * p )Io_ReadBenchNetwork84,2233
void Io_ReadBenchInit( Abc_Ntk_t * pNtk, char * pFileName )Io_ReadBenchInit336,13773

src/base/io/ioWriteBaf.c,75
void Io_WriteBaf( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteBaf84,3326

src/base/io/ioWriteCnf.c,241
static Abc_Ntk_t * s_pNtk = NULL;s_pNtk31,838
int Io_WriteCnf( Abc_Ntk_t * pNtk, char * pFileName, int fAllPrimes )Io_WriteCnf48,1383
void Io_WriteCnfOutputPiMapping( FILE * pFile, int incrementVars )Io_WriteCnfOutputPiMapping100,3066

src/base/io/ioJson.c,1699
static inline int         Json_EntryIsName( int Fan )                     { return Abc_LitIsCompl(Fan);                                                       }Json_EntryIsName33,868
static inline char *      Json_EntryName( Abc_Nam_t * pStrs, int Fan )    { assert(Json_EntryIsName(Fan));  return Abc_NamStr( pStrs, Abc_Lit2Var(Fan) );     }Json_EntryName34,1028
static inline Vec_Int_t * Json_EntryNode( Vec_Wec_t * vObjs, int Fan )    { assert(!Json_EntryIsName(Fan)); return Vec_WecEntry( vObjs, Abc_Lit2Var(Fan) );   }Json_EntryNode35,1188
char * Nnc_LayerType2Str( char * pStr )Nnc_LayerType2Str52,1814
void Json_Extract_rec( FILE * pFile, Abc_Nam_t * pStr, Vec_Wec_t * vObjs, Vec_Int_t * vArray, int fWrite, int * pCount )Json_Extract_rec77,2535
void Json_Extract( char * pFileName, Abc_Nam_t * pStr, Vec_Wec_t * vObjs )Json_Extract151,5572
static inline int Json_CharIsSpace( char c )   Json_CharIsSpace177,6257
static inline char * Json_SkipSpaces( char * pCur )Json_SkipSpaces181,6387
static inline char * Json_SkipNonSpaces( char * pCur )Json_SkipNonSpaces187,6518
static inline int Json_TokenCompare( char * pCur, char * pNext, char ** ppCur2, char ** ppNext2 )Json_TokenCompare193,6653
void Json_Write_rec( FILE * pFile, Abc_Nam_t * pStr, Vec_Wec_t * vObjs, Vec_Int_t * vArray, int Level, int fAddComma, int fSpaces )Json_Write_rec221,7339
void Json_Write( char * pFileName, Abc_Nam_t * pStr, Vec_Wec_t * vObjs )Json_Write269,9486
char * Json_ReadPreprocess( char * pIn, int nFileSize )Json_ReadPreprocess292,10073
Vec_Wec_t * Json_Read( char * pFileName, Abc_Nam_t ** ppStrs )Json_Read307,10509
void Json_ReadTest( char * pFileName )Json_ReadTest397,13231

src/base/io/ioWriteGml.c,75
void Io_WriteGml( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteGml46,1379

src/base/io/ioWriteEqn.c,399
void Io_WriteEqn( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteEqn50,1558
void Io_NtkWriteEqnOne( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteEqnOne88,2605
void Io_NtkWriteEqnCis( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteEqnCis135,3969
void Io_NtkWriteEqnCos( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteEqnCos175,5014
int Io_NtkWriteEqnCheck( Abc_Ntk_t * pNtk )Io_NtkWriteEqnCheck215,6068

src/base/io/ioReadEqn.c,432
Abc_Ntk_t * Io_ReadEqn( char * pFileName, int fCheck )Io_ReadEqn50,1593
Abc_Ntk_t * Io_ReadEqnNetwork( Extra_FileReader_t * p )Io_ReadEqnNetwork87,2459
void Io_ReadEqnStrCompact( char * pStr )Io_ReadEqnStrCompact186,6100
int Io_ReadEqnStrFind( Vec_Ptr_t * vTokens, char * pName )Io_ReadEqnStrFind206,6619
void Io_ReadEqnStrCutAt( char * pStr, char * pStop, int fUniqueOnly, Vec_Ptr_t * vTokens )Io_ReadEqnStrCutAt227,7127

src/base/io/ioReadDsd.c,320
char * Io_ReadDsdFindEnd( char * pCur )Io_ReadDsdFindEnd45,1263
int Io_ReadDsdStrSplit( char * pCur, char * pParts[], int * pTypeXor )Io_ReadDsdStrSplit73,1849
Abc_Obj_t * Io_ReadDsd_rec( Abc_Ntk_t * pNtk, char * pCur, char * pSop )Io_ReadDsd_rec144,3773
Abc_Ntk_t * Io_ReadDsd( char * pForm )Io_ReadDsd232,6287

src/base/io/ioWriteAiger.c,1520
#define vsnprintf vsnprintf39,904
static unsigned Io_ObjMakeLit( int Var, int fCompl )                 { return (Var << 1) | fCompl;                   }Io_ObjMakeLit146,5615
static unsigned Io_ObjAigerNum( Abc_Obj_t * pObj )                   { return (unsigned)(ABC_PTRINT_T)pObj->pCopy;  }Io_ObjAigerNum147,5734
static void     Io_ObjSetAigerNum( Abc_Obj_t * pObj, unsigned Num )  { pObj->pCopy = (Abc_Obj_t *)(ABC_PTRINT_T)Num;     }Io_ObjSetAigerNum148,5852
int Io_WriteAigerEncode( unsigned char * pBuffer, int Pos, unsigned x )Io_WriteAigerEncode166,6617
Vec_Int_t * Io_WriteAigerLiterals( Abc_Ntk_t * pNtk )Io_WriteAigerLiterals193,7195
Vec_Str_t * Io_WriteEncodeLiterals( Vec_Int_t * vLits )Io_WriteEncodeLiterals223,8093
void Io_WriteAiger_old( Abc_Ntk_t * pNtk, char * pFileName, int fWriteSymbols, int fCompact )Io_WriteAiger_old269,9551
void Io_WriteAigerGz( Abc_Ntk_t * pNtk, char * pFileName, int fWriteSymbols )Io_WriteAigerGz436,15803
typedef struct bz2file {bz2file580,21397
  FILE   * f;f581,21422
  BZFILE * b;b582,21436
  char   * buf;buf583,21450
  int      nBytes;nBytes584,21466
  int      nBytesMax;nBytesMax585,21485
} bz2file;bz2file586,21507
int fprintfBz2Aig( bz2file * b, char * fmt, ... ) {fprintfBz2Aig588,21519
void Io_WriteAiger( Abc_Ntk_t * pNtk, char * pFileName, int fWriteSymbols, int fCompact, int fUnique )Io_WriteAiger635,22834
void Io_WriteAigerCex( Abc_Cex_t * pCex, Abc_Ntk_t * pNtk, void * pG, char * pFileName )Io_WriteAigerCex880,31295

src/base/io/ioWriteBlif.c,2359
void Io_WriteBlifLogic( Abc_Ntk_t * pNtk, char * FileName, int fWriteLatches )Io_WriteBlifLogic59,2116
void Io_WriteBlif( Abc_Ntk_t * pNtk, char * FileName, int fWriteLatches, int fBb2Wb, int fSeq )Io_WriteBlif84,2785
void Io_NtkWrite( FILE * pFile, Abc_Ntk_t * pNtk, int fWriteLatches, int fBb2Wb, int fSeq )Io_NtkWrite127,4165
void Io_NtkWriteConvertedBox( FILE * pFile, Abc_Ntk_t * pNtk, int fSeq )Io_NtkWriteConvertedBox158,5045
void Io_NtkWriteOne( FILE * pFile, Abc_Ntk_t * pNtk, int fWriteLatches, int fBb2Wb, int fSeq )Io_NtkWriteOne199,6212
void Io_NtkWritePis( FILE * pFile, Abc_Ntk_t * pNtk, int fWriteLatches )Io_NtkWritePis274,8371
void Io_NtkWritePos( FILE * pFile, Abc_Ntk_t * pNtk, int fWriteLatches )Io_NtkWritePos336,10193
void Io_NtkWriteSubckt( FILE * pFile, Abc_Obj_t * pNode )Io_NtkWriteSubckt398,12011
void Io_NtkWriteLatch( FILE * pFile, Abc_Obj_t * pLatch )Io_NtkWriteLatch433,13128
void Io_NtkWriteNodeFanins( FILE * pFile, Abc_Obj_t * pNode )Io_NtkWriteNodeFanins459,13882
void Io_NtkWriteSubcktFanins( FILE * pFile, Abc_Obj_t * pNode )Io_NtkWriteSubcktFanins513,15375
int Io_NtkWriteNodeGate( FILE * pFile, Abc_Obj_t * pNode, int Length )Io_NtkWriteNodeGate576,17138
int Io_NtkWriteNode( FILE * pFile, Abc_Obj_t * pNode, int Length )Io_NtkWriteNode612,18466
int Io_NtkWriteNodeSubckt( FILE * pFile, Abc_Obj_t * pNode, int Length )Io_NtkWriteNodeSubckt654,19605
void Io_WriteTimingInfo( FILE * pFile, Abc_Ntk_t * pNtk )Io_WriteTimingInfo674,20089
void Abc_NtkConvertBb2Wb( char * pFileNameIn, char * pFileNameOut, int fSeq, int fVerbose )Abc_NtkConvertBb2Wb749,23051
char * Io_NtkDeriveSop( Mem_Flex_t * pMem, word uTruth, int nVars, Vec_Int_t * vCover )Io_NtkDeriveSop796,24227
void Io_NtkWriteNodeInt( FILE * pFile, Abc_Obj_t * pNode, Vec_Int_t * vCover )Io_NtkWriteNodeInt826,25172
void Io_NtkWriteNodeIntStruct( FILE * pFile, Abc_Obj_t * pNode, Vec_Int_t * vCover, char * pStr )Io_NtkWriteNodeIntStruct972,30591
void Io_NtkWriteModelIntStruct( FILE * pFile, Abc_Obj_t * pNode, Vec_Int_t * vCover, char * pStr )Io_NtkWriteModelIntStruct1136,37145
void Io_WriteBlifInt( Abc_Ntk_t * pNtk, char * FileName, char * pLutStruct, int fUseHie )Io_WriteBlifInt1312,43735
void Io_WriteBlifSpecial( Abc_Ntk_t * pNtk, char * FileName, char * pLutStruct, int fUseHie )Io_WriteBlifSpecial1385,45977

src/base/io/ioReadBlifAig.c,5403
    IO_BLIF_INIT_NONE = 0,  // 0:  unknownIO_BLIF_INIT_NONE33,886
    IO_BLIF_INIT_ZERO,      // 1:  zeroIO_BLIF_INIT_ZERO34,929
    IO_BLIF_INIT_ONE,       // 2:  oneIO_BLIF_INIT_ONE35,969
    IO_BLIF_INIT_DC         // 3:  don't-careIO_BLIF_INIT_DC36,1008
} Io_BlifInit_t;Io_BlifInit_t37,1054
typedef struct Io_BlifObj_t_ Io_BlifObj_t;  // parsing objectIo_BlifObj_t39,1072
struct Io_BlifObj_t_Io_BlifObj_t_40,1134
    unsigned             fPi    :  1;  // the object is a primary inputfPi42,1157
    unsigned             fPo    :  1;  // the object is a primary outputfPo43,1229
    unsigned             fLi    :  1;  // the object is a latch inputfLi44,1302
    unsigned             fLo    :  1;  // the object is a latch outputfLo45,1372
    unsigned             fDef   :  1;  // the object is defined as a table (node, PO, LI)fDef46,1443
    unsigned             fLoop  :  1;  // flag for loop detectionfLoop47,1533
    unsigned             Init   :  2;  // the latch initial stateInit48,1599
    unsigned             Offset : 24;  // temporary numberOffset49,1665
    char *               pName;        // the name of this objectpName50,1724
    void *               pEquiv;       // the AIG node representing this line    pEquiv51,1790
    Io_BlifObj_t *       pNext;        // the next obj in the hash tablepNext52,1872
typedef struct Io_BlifMan_t_ Io_BlifMan_t;  // parsing managerIo_BlifMan_t55,1949
struct Io_BlifMan_t_Io_BlifMan_t_56,2012
    char *               pFileName;    // the name of the filepFileName59,2066
    char *               pBuffer;      // the begining of the file bufferpBuffer60,2129
    Vec_Ptr_t *          vLines;       // the line beginningsvLines61,2203
    Io_BlifObj_t *       pObjects;     // the storage for objectspObjects63,2290
    int                  nObjects;     // the number of objects allocatednObjects64,2356
    int                  iObjNext;     // the next free objectiObjNext65,2430
    char *               pModel;       // .model linepModel67,2511
    Vec_Ptr_t *          vInputs;      // .inputs linesvInputs68,2565
    Vec_Ptr_t *          vOutputs;     // .outputs linesvOutputs69,2621
    Vec_Ptr_t *          vLatches;     // .latches linesvLatches70,2678
    Vec_Ptr_t *          vNames;       // .names linesvNames71,2735
    Vec_Ptr_t *          vPis;         // the PI structuresvPis73,2813
    Vec_Ptr_t *          vPos;         // the PO structuresvPos74,2873
    Vec_Ptr_t *          vLis;         // the LI structuresvLis75,2933
    Vec_Ptr_t *          vLos;         // the LO structuresvLos76,2993
    Io_BlifObj_t **      pTable;       // the hash tablepTable78,3090
    int                  nTableSize;   // the hash table sizenTableSize79,3147
    Abc_Ntk_t *          pAig;         // the network under constructionpAig81,3240
    Vec_Ptr_t *          vTokens;      // the current tokensvTokens82,3313
    char                 sError[512];  // the error string generated during parsingsError83,3374
    int                  nTablesRead;  // the number of processed tablesnTablesRead85,3477
    int                  nTablesLeft;  // the number of dangling tablesnTablesLeft86,3550
static int               Io_BlifCharIsSpace( char s ) { return s == ' ' || s == '\t' || s == '\r' || s == '\n';  }Io_BlifCharIsSpace101,4393
Abc_Ntk_t * Io_ReadBlifAsAig( char * pFileName, int fCheck )Io_ReadBlifAsAig118,5010
static Io_BlifMan_t * Io_BlifAlloc()Io_BlifAlloc173,6383
static void Io_BlifFree( Io_BlifMan_t * p )Io_BlifFree202,7198
static unsigned Io_BlifHashString( char * pName, int TableSize ) Io_BlifHashString234,8010
static Io_BlifObj_t ** Io_BlifHashLookup( Io_BlifMan_t * p, char * pName )Io_BlifHashLookup257,8606
static Io_BlifObj_t * Io_BlifHashFindOrAdd( Io_BlifMan_t * p, char * pName )Io_BlifHashFindOrAdd277,9188
static void Io_BlifCollectTokens( Vec_Ptr_t * vTokens, char * pInput, char * pOutput )Io_BlifCollectTokens302,9790
static void Io_BlifSplitIntoTokens( Vec_Ptr_t * vTokens, char * pLine, char Stop )Io_BlifSplitIntoTokens326,10352
static int Io_BlifGetLine( Io_BlifMan_t * p, char * pToken )Io_BlifGetLine348,10947
static int Io_BlifEstimatePiNum( Io_BlifMan_t * p )Io_BlifEstimatePiNum369,11439
static int Io_BlifEstimateAndNum( Io_BlifMan_t * p )Io_BlifEstimateAndNum400,12173
static char * Io_BlifLoadFile( char * pFileName )Io_BlifLoadFile431,12981
static void Io_BlifReadPreparse( Io_BlifMan_t * p )Io_BlifReadPreparse478,14363
static Abc_Ntk_t * Io_BlifParse( Io_BlifMan_t * p )Io_BlifParse567,17219
static int Io_BlifParseModel( Io_BlifMan_t * p, char * pLine )Io_BlifParseModel611,18464
static int Io_BlifParseInputs( Io_BlifMan_t * p, char * pLine )Io_BlifParseInputs637,19225
static int Io_BlifParseOutputs( Io_BlifMan_t * p, char * pLine )Io_BlifParseOutputs670,20136
static int Io_BlifParseLatch( Io_BlifMan_t * p, char * pLine )Io_BlifParseLatch700,21022
static int Io_BlifParseNames( Io_BlifMan_t * p, char * pLine )Io_BlifParseNames763,23039
static Abc_Obj_t * Io_BlifParseTable( Io_BlifMan_t * p, char * pTable, Vec_Ptr_t * vFanins )Io_BlifParseTable805,24294
static Abc_Obj_t * Io_BlifParseConstruct_rec( Io_BlifMan_t * p, char * pName )Io_BlifParseConstruct_rec886,27562
static int Io_BlifParseConstruct( Io_BlifMan_t * p )Io_BlifParseConstruct944,29397

src/base/io/ioReadBaf.c,74
Abc_Ntk_t * Io_ReadBaf( char * pFileName, int fCheck )Io_ReadBaf45,1280

src/base/io/io.c,4809
void Io_Init( Abc_Frame_t * pAbc )Io_Init99,4983
void Io_End( Abc_Frame_t * pAbc )Io_End162,8941
int IoCommandRead( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandRead177,9214
int IoCommandReadAiger( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadAiger305,13977
int IoCommandReadBaf( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadBaf360,15561
int IoCommandReadBblif( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadBblif415,17120
int IoCommandReadBlif( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadBlif470,18682
int IoCommandReadBlifMv( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadBlifMv562,21644
int IoCommandReadBench( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadBench618,23292
int IoCommandReadDsd( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadDsd673,24846
int IoCommandReadEdif( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadEdif735,27106
int IoCommandReadEqn( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadEqn790,28683
int IoCommandReadFins( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadFins845,30234
int IoCommandReadInit( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadInit901,31871
int IoCommandReadPla( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadPla969,33705
int IoCommandReadPlaMo( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadPlaMo1051,36484
int IoCommandReadTruth( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadTruth1105,38218
int IoCommandReadVerilog( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadVerilog1190,40741
int IoCommandReadStatus( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadStatus1255,42757
int IoCommandReadGig( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadGig1311,44236
int IoCommandReadJson( Abc_Frame_t * pAbc, int argc, char ** argv )IoCommandReadJson1368,45656
int IoCommandWrite( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWrite1430,47196
int IoCommandWriteHie( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteHie1494,49127
int IoCommandWriteAiger( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteAiger1551,50943
int IoCommandWriteAigerCex( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteAigerCex1641,53930
int IoCommandWriteBaf( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteBaf1687,55196
int IoCommandWriteBblif( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteBblif1735,56452
int IoCommandWriteBlif( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteBlif1783,57723
int IoCommandWriteBlifMv( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteBlifMv1859,60349
int IoCommandWriteBench( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteBench1907,61617
int IoCommandWriteBook( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteBook1972,63437
int IoCommandWriteCellNet( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteCellNet2015,64675
int IoCommandWriteCnf( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteCnf2071,66205
int IoCommandWriteCnf2( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteCnf22163,69305
int IoCommandWriteDot( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteDot2279,73969
int Abc_NtkCheckSpecialPi( Abc_Ntk_t * pNtk )Abc_NtkCheckSpecialPi2322,75059
void Abc_NtkDumpOneCexSpecial( FILE * pFile, Abc_Ntk_t * pNtk, Abc_Cex_t * pCex )Abc_NtkDumpOneCexSpecial2342,75510
void Abc_NtkDumpOneCex( FILE * pFile, Abc_Ntk_t * pNtk, Abc_Cex_t * pCex, Abc_NtkDumpOneCex2368,76782
int IoCommandWriteCex( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteCex2493,82608
int IoCommandWriteEqn( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteEqn2672,89045
int IoCommandWriteGml( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteGml2720,90298
int IoCommandWriteList( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteList2768,91554
int IoCommandWritePla( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWritePla2832,93263
int IoCommandWriteVerilog( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteVerilog2907,95678
int IoCommandWriteSortCnf( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteSortCnf2968,97483
int IoCommandWriteTruth( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteTruth3038,99799
int IoCommandWriteTruths( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteTruths3143,102885
int IoCommandWriteStatus( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteStatus3231,105494
int IoCommandWriteSmv( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteSmv3274,106723
int IoCommandWriteJson( Abc_Frame_t * pAbc, int argc, char **argv )IoCommandWriteJson3322,107975

src/base/io/ioWritePla.c,1131
int Io_WritePlaOne( FILE * pFile, Abc_Ntk_t * pNtk )Io_WritePlaOne49,1358
int Io_WritePla( Abc_Ntk_t * pNtk, char * pFileName )Io_WritePla171,5306
int Io_WriteMoPlaOneInt( FILE * pFile, Abc_Ntk_t * pNtk, DdManager * dd, Vec_Ptr_t * vFuncs )Io_WriteMoPlaOneInt210,6319
int Io_WriteMoPlaOneIntMinterms( FILE * pFile, Abc_Ntk_t * pNtk, DdManager * dd, Vec_Ptr_t * vFuncs )Io_WriteMoPlaOneIntMinterms331,10459
int Io_WriteMoPlaOne( FILE * pFile, Abc_Ntk_t * pNtk )Io_WriteMoPlaOne384,12114
int Io_WriteMoPla( Abc_Ntk_t * pNtk, char * pFileName )Io_WriteMoPla427,13343
int Io_WriteMoPlaOneIntMintermsM( FILE * pFile, Abc_Ntk_t * pNtk, DdManager * dd, DdNode * bFunc, int nMints )Io_WriteMoPlaOneIntMintermsM461,14214
int Io_WriteMoPlaOneM( FILE * pFile, Abc_Ntk_t * pNtk, int nMints )Io_WriteMoPlaOneM504,15712
int Io_WriteMoPlaM( Abc_Ntk_t * pNtk, char * pFileName, int nMints )Io_WriteMoPlaM557,17708
int Io_WriteMoPla( Abc_Ntk_t * pNtk, char * pFileName )              { return 1; }Io_WriteMoPla576,18223
int Io_WriteMoPlaM( Abc_Ntk_t * pNtk, char * pFileName, int nMints ) { return 1; }Io_WriteMoPlaM577,18306

src/base/io/ioReadEdif.c,160
Abc_Ntk_t * Io_ReadEdif( char * pFileName, int fCheck )Io_ReadEdif47,1397
Abc_Ntk_t * Io_ReadEdifNetwork( Extra_FileReader_t * p )Io_ReadEdifNetwork86,2346

src/base/io/ioUtil.c,1611
Io_FileType_t Io_ReadFileType( char * pFileName )Io_ReadFileType46,1306
Abc_Ntk_t * Io_ReadNetlist( char * pFileName, Io_FileType_t FileType, int fCheck )Io_ReadNetlist98,2779
Vec_Ptr_t *temporaryLtlStore( Abc_Ntk_t *pNtk )temporaryLtlStore188,5849
void updateLtlStoreOfNtk( Abc_Ntk_t *pNtk, Vec_Ptr_t *tempLtlStore )updateLtlStoreOfNtk217,6597
Abc_Ntk_t * Io_Read( char * pFileName, Io_FileType_t FileType, int fCheck, int fBarBufs )Io_Read238,7118
void Io_Write( Abc_Ntk_t * pNtk, char * pFileName, Io_FileType_t FileType )Io_Write317,9423
void Io_WriteHie( Abc_Ntk_t * pNtk, char * pBaseName, char * pFileName )Io_WriteHie483,14365
Abc_Obj_t * Io_ReadCreatePi( Abc_Ntk_t * pNtk, char * pName )Io_ReadCreatePi616,18879
Abc_Obj_t * Io_ReadCreatePo( Abc_Ntk_t * pNtk, char * pName )Io_ReadCreatePo641,19561
Abc_Obj_t * Io_ReadCreateLatch( Abc_Ntk_t * pNtk, char * pNetLI, char * pNetLO )Io_ReadCreateLatch666,20343
Abc_Obj_t * Io_ReadCreateResetLatch( Abc_Ntk_t * pNtk, int fBlifMv )Io_ReadCreateResetLatch699,21326
Abc_Obj_t * Io_ReadCreateNode( Abc_Ntk_t * pNtk, char * pNameOut, char * pNamesIn[], int nInputs )Io_ReadCreateNode731,22491
Abc_Obj_t * Io_ReadCreateConst( Abc_Ntk_t * pNtk, char * pName, int fConst1 )Io_ReadCreateConst760,23335
Abc_Obj_t * Io_ReadCreateInv( Abc_Ntk_t * pNtk, char * pNameIn, char * pNameOut )Io_ReadCreateInv780,23964
Abc_Obj_t * Io_ReadCreateBuf( Abc_Ntk_t * pNtk, char * pNameIn, char * pNameOut )Io_ReadCreateBuf801,24625
FILE * Io_FileOpen( const char * FileName, const char * PathVar, const char * Mode, int fVerbose )Io_FileOpen825,25431

src/base/io/ioWriteVerilog.c,964
void Io_WriteVerilog( Abc_Ntk_t * pNtk, char * pFileName, int fOnlyAnds )Io_WriteVerilog57,2001
void Io_WriteVerilogInt( FILE * pFile, Abc_Ntk_t * pNtk, int fOnlyAnds )Io_WriteVerilogInt115,3640
void Io_WriteVerilogPis( FILE * pFile, Abc_Ntk_t * pNtk, int Start )Io_WriteVerilogPis186,6045
void Io_WriteVerilogPos( FILE * pFile, Abc_Ntk_t * pNtk, int Start )Io_WriteVerilogPos225,7192
void Io_WriteVerilogWires( FILE * pFile, Abc_Ntk_t * pNtk, int Start )Io_WriteVerilogWires288,8988
void Io_WriteVerilogRegs( FILE * pFile, Abc_Ntk_t * pNtk, int Start )Io_WriteVerilogRegs396,12861
void Io_WriteVerilogLatches( FILE * pFile, Abc_Ntk_t * pNtk )Io_WriteVerilogLatches441,14162
void Io_WriteVerilogObjects( FILE * pFile, Abc_Ntk_t * pNtk, int fOnlyAnds )Io_WriteVerilogObjects486,15925
int Io_WriteVerilogWiresCount( Abc_Ntk_t * pNtk )Io_WriteVerilogWiresCount590,20495
char * Io_WriteVerilogGetName( char * pName )Io_WriteVerilogGetName631,21587

src/base/io/ioWriteBook.c,2091
#define    NODES NODES29,654
#define    PL PL30,679
#define coreHeight coreHeight31,701
#define termWidth termWidth32,722
#define termHeight termHeight33,743
static inline double Abc_Rint( double x )   { return (double)(int)x;  }Abc_Rint58,2325
void Io_WriteBookLogic( Abc_Ntk_t * pNtk, char * FileName )Io_WriteBookLogic75,2912
void Io_WriteBook( Abc_Ntk_t * pNtk, char * FileName )Io_WriteBook100,3541
unsigned Io_NtkWriteNodes( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteNodes184,6130
void Io_NtkWritePiPoNodes( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWritePiPoNodes233,7658
void Io_NtkWriteLatchNode( FILE * pFile, Abc_Obj_t * pLatch, int NodesOrPl )Io_NtkWriteLatchNode266,8509
unsigned Io_NtkWriteIntNode( FILE * pFile, Abc_Obj_t * pNode, int NodesOrPl )Io_NtkWriteIntNode289,9190
unsigned Io_NtkWriteNodeGate( FILE * pFile, Abc_Obj_t * pNode )Io_NtkWriteNodeGate379,11634
void Io_NtkWriteNets( FILE * pFile, Abc_Ntk_t * pNtk )Io_NtkWriteNets403,12435
void Io_NtkWriteIntNet( FILE * pFile, Abc_Obj_t * pNet )Io_NtkWriteIntNet441,13533
void Io_NtkBuildLayout( FILE * pFileScl, FILE * pFilePl, Abc_Ntk_t * pNtk, double aspectRatio, double whiteSpace, unsigned coreCellArea )Io_NtkBuildLayout519,16272
void Io_NtkWriteScl( FILE * pFile, unsigned numCoreRows, double layoutWidth )Io_NtkWriteScl558,18105
void Io_NtkWritePl( FILE * pFile, Abc_Ntk_t * pNtk, unsigned numTerms, double layoutWidth, double layoutHeight )Io_NtkWritePl598,19574
Vec_Ptr_t * Io_NtkOrderingPads( Abc_Ntk_t * pNtk, Vec_Ptr_t * vTerms )Io_NtkOrderingPads723,24294
Abc_Obj_t * Io_NtkBfsPads( Abc_Ntk_t * pNtk, Abc_Obj_t * pTerm, unsigned numTerms, int * pOrdered )Io_NtkBfsPads779,25987
int Abc_NodeIsNand2( Abc_Obj_t * pNode )Abc_NodeIsNand2849,28164
int Abc_NodeIsNor2( Abc_Obj_t * pNode )Abc_NodeIsNor2877,29016
int Abc_NodeIsAnd2( Abc_Obj_t * pNode )Abc_NodeIsAnd2901,29612
int Abc_NodeIsOr2( Abc_Obj_t * pNode )Abc_NodeIsOr2927,30333
int Abc_NodeIsXor2( Abc_Obj_t * pNode )Abc_NodeIsXor2955,31112
int Abc_NodeIsXnor2( Abc_Obj_t * pNode )Abc_NodeIsXnor2979,31763

src/base/io/ioReadBlifMv.c,7793
#define IO_BLIFMV_MAXVALUES IO_BLIFMV_MAXVALUES33,912
typedef struct Io_MvVar_t_ Io_MvVar_t; // parsing varIo_MvVar_t36,973
typedef struct Io_MvMod_t_ Io_MvMod_t; // parsing modelIo_MvMod_t37,1027
typedef struct Io_MvMan_t_ Io_MvMan_t; // parsing managerIo_MvMan_t38,1083
Vec_Ptr_t *vGlobalLtlArray;vGlobalLtlArray40,1142
struct Io_MvVar_t_Io_MvVar_t_42,1171
    int                  nValues;      // the number of values nValues44,1192
    char **              pNames;       // the value namespNames45,1256
struct Io_MvMod_t_Io_MvMod_t_48,1318
    char *               pName;        // .model linepName51,1357
    Vec_Ptr_t *          vInputs;      // .inputs linesvInputs52,1411
    Vec_Ptr_t *          vOutputs;     // .outputs linesvOutputs53,1467
    Vec_Ptr_t *          vLatches;     // .latch linesvLatches54,1524
    Vec_Ptr_t *          vFlops;       // .flop linesvFlops55,1579
    Vec_Ptr_t *          vResets;      // .reset linesvResets56,1633
    Vec_Ptr_t *          vNames;       // .names linesvNames57,1688
    Vec_Ptr_t *          vSubckts;     // .subckt linesvSubckts58,1743
    Vec_Ptr_t *          vShorts;      // .short linesvShorts59,1799
    Vec_Ptr_t *          vOnehots;     // .onehot linesvOnehots60,1854
    Vec_Ptr_t *          vMvs;         // .mv linesvMvs61,1910
    Vec_Ptr_t *          vConstrs;     // .constraint linesvConstrs62,1962
    Vec_Ptr_t *             vLtlProperties;vLtlProperties63,2022
    int                  fBlackBox;    // indicates blackbox modelfBlackBox64,2066
    Abc_Ntk_t *          pNtk;   pNtk66,2162
    Abc_Obj_t *          pResetLatch; pResetLatch67,2196
    Io_MvMan_t *         pMan;         pMan69,2261
struct Io_MvMan_t_Io_MvMan_t_72,2305
    int                  fBlifMv;      // the file is BLIF-MVfBlifMv75,2357
    int                  fUseReset;    // the reset circuitry is addedfUseReset76,2419
    char *               pFileName;    // the name of the filepFileName77,2490
    char *               pBuffer;      // the contents of the filepBuffer78,2553
    Vec_Ptr_t *          vLines;       // the line beginningsvLines79,2620
    Abc_Des_t *          pDesign;      // the design under constructionpDesign81,2712
    int                  nNDnodes;     // the counter of ND nodesnNDnodes82,2784
    Vec_Ptr_t *          vModels;      // vector of modelsvModels84,2889
    Io_MvMod_t *         pLatest;      // the current modelpLatest85,2948
    Vec_Ptr_t *          vTokens;      // the current tokensvTokens87,3039
    Vec_Ptr_t *          vTokens2;     // the current tokensvTokens288,3100
    Vec_Str_t *          vFunc;        // the local functionvFunc89,3161
    char                 sError[512];  // the error string generated during parsingsError91,3245
    int                  nTablesRead;  // the number of processed tablesnTablesRead93,3348
    int                  nTablesLeft;  // the number of dangling tablesnTablesLeft94,3421
static int               Io_MvCharIsSpace( char s )  { return s == ' ' || s == '\t' || s == '\r' || s == '\n';  }Io_MvCharIsSpace122,5167
static int               Io_MvCharIsMvSymb( char s ) { return s == '(' || s == ')' || s == '{' || s == '}' || s == '-' || s == ',' || s == '!';  }Io_MvCharIsMvSymb123,5281
Abc_Ntk_t * Io_ReadBlifMv( char * pFileName, int fBlifMv, int fCheck )Io_ReadBlifMv142,5997
static Io_MvMan_t * Io_MvAlloc()Io_MvAlloc269,9878
static void Io_MvFree( Io_MvMan_t * p )Io_MvFree293,10488
static Io_MvMod_t * Io_MvModAlloc()Io_MvModAlloc326,11306
static void Io_MvModFree( Io_MvMod_t * p )Io_MvModFree357,12216
static int Io_MvCountChars( char * pLine, char Char )Io_MvCountChars389,12975
static char * Io_MvFindArrow( char * pLine )Io_MvFindArrow410,13449
static void Io_MvCollectTokens( Vec_Ptr_t * vTokens, char * pInput, char * pOutput )Io_MvCollectTokens434,13979
static void Io_MvSplitIntoTokens( Vec_Ptr_t * vTokens, char * pLine, char Stop )Io_MvSplitIntoTokens458,14539
static void Io_MvSplitIntoTokensMv( Vec_Ptr_t * vTokens, char * pLine )Io_MvSplitIntoTokensMv480,15120
static void Io_MvSplitIntoTokensAndClear( Vec_Ptr_t * vTokens, char * pLine, char Stop, char Char )Io_MvSplitIntoTokensAndClear502,15682
static int Io_MvGetLine( Io_MvMan_t * p, char * pToken )Io_MvGetLine524,16307
typedef struct buflist {buflist545,16793
  char buf[1<<20];buf546,16818
  int nBuf;nBuf547,16837
  struct buflist * next;next548,16849
} buflist;buflist549,16874
char * Io_MvLoadFileBz2( char * pFileName, int * pnFileSize )Io_MvLoadFileBz2551,16886
static char * Io_MvLoadFileGz( char * pFileName, int * pnFileSize )Io_MvLoadFileGz631,19413
static char * Io_MvLoadFile( char * pFileName )Io_MvLoadFile665,20631
static void Io_MvReadPreparse( Io_MvMan_t * p )Io_MvReadPreparse716,22241
static int Io_MvReadInterfaces( Io_MvMan_t * p )Io_MvReadInterfaces846,26917
static Abc_Des_t * Io_MvParse( Io_MvMan_t * p )Io_MvParse903,28913
static int Io_MvParseLineModel( Io_MvMod_t * p, char * pLine )Io_MvParseLineModel1047,34988
static int Io_MvParseLineInputs( Io_MvMod_t * p, char * pLine )Io_MvParseLineInputs1090,36464
static int Io_MvParseLineOutputs( Io_MvMod_t * p, char * pLine )Io_MvParseLineOutputs1114,37110
static int Io_MvParseLineConstrs( Io_MvMod_t * p, char * pLine )Io_MvParseLineConstrs1138,37758
static int Io_MvParseLineLtlProperty( Io_MvMod_t * p, char * pLine )Io_MvParseLineLtlProperty1162,38414
static int Io_MvParseLineLatch( Io_MvMod_t * p, char * pLine )Io_MvParseLineLatch1205,39634
static int Io_MvParseLineFlop( Io_MvMod_t * p, char * pLine )Io_MvParseLineFlop1273,42120
static int Io_MvParseLineSubckt( Io_MvMod_t * p, char * pLine )Io_MvParseLineSubckt1348,44504
static Vec_Int_t * Io_MvParseLineOnehot( Io_MvMod_t * p, char * pLine )Io_MvParseLineOnehot1483,49194
static int Io_MvParseLineMv( Io_MvMod_t * p, char * pLine )Io_MvParseLineMv1541,51295
static int Io_MvWriteValues( Abc_Obj_t * pNode, Vec_Str_t * vFunc )Io_MvWriteValues1627,54540
static int Io_MvParseLiteralMv( Io_MvMod_t * p, Abc_Obj_t * pNode, char * pToken, Vec_Str_t * vFunc, int iLit )Io_MvParseLiteralMv1657,55332
static char * Io_MvParseTableMv( Io_MvMod_t * p, Abc_Obj_t * pNode, Vec_Ptr_t * vTokens2, int nInputs, int nOutputs, int iOut )Io_MvParseTableMv1738,58051
static Abc_Obj_t * Io_MvParseAddResetCircuit( Io_MvMod_t * p, char * pName )Io_MvParseAddResetCircuit1792,59797
static int Io_MvParseLineNamesMvOne( Io_MvMod_t * p, Vec_Ptr_t * vTokens, Vec_Ptr_t * vTokens2, int nInputs, int nOutputs, int iOut, int fReset )Io_MvParseLineNamesMvOne1846,61734
static int Io_MvParseLineNamesMv( Io_MvMod_t * p, char * pLine, int fReset )Io_MvParseLineNamesMv1904,63896
static char * Io_MvParseTableBlif( Io_MvMod_t * p, char * pTable, int nFanins )Io_MvParseTableBlif1999,67359
static int Io_MvParseLineNamesBlif( Io_MvMod_t * p, char * pLine )Io_MvParseLineNamesBlif2073,70183
static int Io_MvParseLineShortBlif( Io_MvMod_t * p, char * pLine )Io_MvParseLineShortBlif2121,71729
Io_MvVar_t * Abc_NtkMvVarDup( Abc_Ntk_t * pNtk, Io_MvVar_t * pVar )Abc_NtkMvVarDup2181,73802
static char * Io_ReadBlifCleanName( char * pName )Io_ReadBlifCleanName2215,74810
static int Io_MvParseLineGateBlif( Io_MvMod_t * p, Vec_Ptr_t * vTokens )Io_MvParseLineGateBlif2236,75264
static inline void Abc_MapBoxSetPrevNext( Vec_Ptr_t * vDrivers, Vec_Int_t * vMapIn, Vec_Int_t * vMapOut, int Id )Abc_MapBoxSetPrevNext2351,79217
static inline int Abc_MapBox2Next( Vec_Ptr_t * vDrivers, Vec_Int_t * vMapIn, Vec_Int_t * vMapOut, int Id )Abc_MapBox2Next2359,79639
static inline int Abc_MapBox2Prev( Vec_Ptr_t * vDrivers, Vec_Int_t * vMapIn, Vec_Int_t * vMapOut, int Id )Abc_MapBox2Prev2364,79900

src/base/io/ioReadBlif.c,5508
typedef struct Io_ReadBlif_t_        Io_ReadBlif_t;   // all reading infoIo_ReadBlif_t32,845
struct Io_ReadBlif_t_Io_ReadBlif_t_33,919
    char *               pFileName;    // the name of the filepFileName36,974
    Extra_FileReader_t * pReader;      // the input file readerpReader37,1037
    Abc_Ntk_t *          pNtkMaster;   // the primary networkpNtkMaster39,1132
    Abc_Ntk_t *          pNtkCur;      // the primary networkpNtkCur40,1194
    int                  LineCur;      // the line currently parsedLineCur41,1256
    Vec_Ptr_t *          vTokens;      // the current tokensvTokens43,1360
    Vec_Ptr_t *          vNewTokens;   // the temporary storage for the tokensvNewTokens44,1421
    Vec_Str_t *          vCubes;       // the temporary storage for the tokensvCubes45,1500
    Vec_Int_t *          vInArrs;      // input arrivalvInArrs47,1605
    Vec_Int_t *          vOutReqs;     // output requiredvOutReqs48,1661
    Vec_Int_t *          vInDrives;    // input drivevInDrives49,1719
    Vec_Int_t *          vOutLoads;    // output loadvOutLoads50,1773
    float                DefInArrRise; // input arrival defaultDefInArrRise51,1827
    float                DefInArrFall; // input arrival defaultDefInArrFall52,1891
    float                DefOutReqRise;// output required defaultDefOutReqRise53,1955
    float                DefOutReqFall;// output required defaultDefOutReqFall54,2021
    float                DefInDriRise; // input drive defaultDefInDriRise55,2087
    float                DefInDriFall; // input drive defaultDefInDriFall56,2149
    float                DefOutLoadRise;// output load defaultDefOutLoadRise57,2211
    float                DefOutLoadFall;// output load defaultDefOutLoadFall58,2274
    int                  fHaveDefInArr;  // provided in the filefHaveDefInArr59,2337
    int                  fHaveDefOutReq; // provided in the filefHaveDefOutReq60,2402
    int                  fHaveDefInDri;  // provided in the filefHaveDefInDri61,2467
    int                  fHaveDefOutLoad;// provided in the filefHaveDefOutLoad62,2532
    FILE *               Output;       // the output streamOutput64,2622
    char                 sError[1000]; // the error string generated during parsingsError65,2682
    int                  fError;       // set to 1 when error occursfError66,2766
Abc_Ntk_t * Io_ReadBlif( char * pFileName, int fCheck )Io_ReadBlif110,5192
Abc_Ntk_t * Io_ReadBlifNetwork( Io_ReadBlif_t * p )Io_ReadBlifNetwork152,6236
Abc_Ntk_t * Io_ReadBlifNetworkOne( Io_ReadBlif_t * p )Io_ReadBlifNetworkOne234,8812
int Io_ReadBlifNetworkInputs( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkInputs355,13918
int Io_ReadBlifNetworkOutputs( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkOutputs374,14363
int Io_ReadBlifNetworkLatch( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkLatch393,14809
int Io_ReadBlifNetworkNames( Io_ReadBlif_t * p, Vec_Ptr_t ** pvTokens )Io_ReadBlifNetworkNames441,16343
int Io_ReadBlifReorderFormalNames( Vec_Ptr_t * vTokens, Mio_Gate_t * pGate, Mio_Gate_t * pTwin )Io_ReadBlifReorderFormalNames558,20322
int Io_ReadBlifNetworkGate( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkGate677,24560
int Io_ReadBlifNetworkSubcircuit( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkSubcircuit784,28099
char * Io_ReadBlifCleanName( char * pName )Io_ReadBlifCleanName826,29419
int Io_ReadBlifNetworkInputArrival( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkInputArrival847,29866
int Io_ReadBlifNetworkOutputRequired( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkOutputRequired898,31781
int Io_ReadBlifNetworkDefaultInputArrival( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkDefaultInputArrival949,33712
int Io_ReadBlifNetworkDefaultOutputRequired( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkDefaultOutputRequired991,35183
int Io_ReadFindCiId( Abc_Ntk_t * pNtk, Abc_Obj_t * pObj )Io_ReadFindCiId1034,36667
int Io_ReadBlifNetworkInputDrive( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkInputDrive1043,36868
int Io_ReadFindCoId( Abc_Ntk_t * pNtk, Abc_Obj_t * pObj )Io_ReadFindCoId1094,38888
int Io_ReadBlifNetworkOutputLoad( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkOutputLoad1103,39089
int Io_ReadBlifNetworkDefaultInputDrive( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkDefaultInputDrive1154,41111
int Io_ReadBlifNetworkDefaultOutputLoad( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkDefaultOutputLoad1196,42577
int Io_ReadBlifNetworkAndGateDelay( Io_ReadBlif_t * p, Vec_Ptr_t * vTokens )Io_ReadBlifNetworkAndGateDelay1238,44049
void Io_ReadBlifPrintErrorMessage( Io_ReadBlif_t * p )Io_ReadBlifPrintErrorMessage1276,45343
Vec_Ptr_t * Io_ReadBlifGetTokens( Io_ReadBlif_t * p )Io_ReadBlifGetTokens1296,45980
Io_ReadBlif_t * Io_ReadBlifFile( char * pFileName )Io_ReadBlifFile1367,48238
void Io_ReadBlifFree( Io_ReadBlif_t * p )Io_ReadBlifFree1404,49226
int Io_ReadBlifNetworkConnectBoxesOneBox( Io_ReadBlif_t * p, Abc_Obj_t * pBox, stmm_table * tName2Model )Io_ReadBlifNetworkConnectBoxesOneBox1428,49776
int Io_ReadBlifNetworkConnectBoxesOne( Io_ReadBlif_t * p, Abc_Ntk_t * pNtk, stmm_table * tName2Model )Io_ReadBlifNetworkConnectBoxesOne1588,55469
int Io_ReadBlifCreateTiming( Io_ReadBlif_t * p, Abc_Ntk_t * pNtk )Io_ReadBlifCreateTiming1611,56084

src/base/bac/bacWriteSmt.c,0

src/base/bac/bacReadBlif.c,4041
    PRS_BLIF_NONE = 0, // 0:   unusedPRS_BLIF_NONE32,835
    PRS_BLIF_MODEL,    // 1:   .modelPRS_BLIF_MODEL33,873
    PRS_BLIF_INOUTS,   // 2:   .inoutsPRS_BLIF_INOUTS34,911
    PRS_BLIF_INPUTS,   // 3:   .inputsPRS_BLIF_INPUTS35,950
    PRS_BLIF_OUTPUTS,  // 4:   .outputsPRS_BLIF_OUTPUTS36,989
    PRS_BLIF_NAMES,    // 5:   .namesPRS_BLIF_NAMES37,1029
    PRS_BLIF_SUBCKT,   // 6:   .subcktPRS_BLIF_SUBCKT38,1067
    PRS_BLIF_GATE,     // 7:   .gatePRS_BLIF_GATE39,1106
    PRS_BLIF_LATCH,    // 8:   .latchPRS_BLIF_LATCH40,1143
    PRS_BLIF_SHORT,    // 9:   .shortPRS_BLIF_SHORT41,1181
    PRS_BLIF_END,      // 10:  .endPRS_BLIF_END42,1219
    PRS_BLIF_UNKNOWN   // 11:  unknownPRS_BLIF_UNKNOWN43,1255
} Bac_BlifType_t;Bac_BlifType_t44,1294
static const char * s_BlifTypes[PRS_BLIF_UNKNOWN+1] = {s_BlifTypes46,1313
static inline void Psr_NtkAddBlifDirectives( Psr_Man_t * p )Psr_NtkAddBlifDirectives61,1835
static inline int  Psr_CharIsSpace( char c )                { return c == ' ' || c == '\t' || c == '\r';              }Psr_CharIsSpace85,2543
static inline int  Psr_CharIsStop( char c )                 { return c == '#' || c == '\\' || c == '\n' || c == '=';  }Psr_CharIsStop86,2663
static inline int  Psr_CharIsLit( char c )                  { return c == '0' || c == '1'  || c == '-';               }Psr_CharIsLit87,2783
static inline int  Psr_ManIsSpace( Psr_Man_t * p )          { return Psr_CharIsSpace(*p->pCur);                       }Psr_ManIsSpace89,2904
static inline int  Psr_ManIsStop( Psr_Man_t * p )           { return Psr_CharIsStop(*p->pCur);                        }Psr_ManIsStop90,3024
static inline int  Psr_ManIsLit( Psr_Man_t * p )            { return Psr_CharIsLit(*p->pCur);                         }Psr_ManIsLit91,3144
static inline int  Psr_ManIsChar( Psr_Man_t * p, char c )   { return *p->pCur == c;                                   }Psr_ManIsChar93,3265
static inline int  Psr_ManIsChar2( Psr_Man_t * p, char c )  { return *p->pCur++ == c;                                 }Psr_ManIsChar294,3385
static inline void Psr_ManSkip( Psr_Man_t * p )             { p->pCur++;                                              }Psr_ManSkip96,3506
static inline char Psr_ManSkip2( Psr_Man_t * p )            { return *p->pCur++;                                      }Psr_ManSkip297,3626
static inline void Psr_ManSkipToChar( Psr_Man_t * p, char c )  Psr_ManSkipToChar111,3996
static inline void Psr_ManSkipSpaces( Psr_Man_t * p )Psr_ManSkipSpaces116,4125
static inline int Psr_ManReadName( Psr_Man_t * p )Psr_ManReadName134,4555
static inline int Psr_ManReadList( Psr_Man_t * p, Vec_Int_t * vOrder, int Type )Psr_ManReadList147,4926
static inline int Psr_ManReadList2( Psr_Man_t * p )Psr_ManReadList2159,5338
static inline int Psr_ManReadList3( Psr_Man_t * p )Psr_ManReadList3168,5656
static inline int Psr_ManReadCube( Psr_Man_t * p )Psr_ManReadCube199,6799
static inline void Psr_ManSaveCover( Psr_Man_t * p )Psr_ManSaveCover222,7758
static inline int Psr_ManReadInouts( Psr_Man_t * p )Psr_ManReadInouts256,8838
static inline int Psr_ManReadInputs( Psr_Man_t * p )Psr_ManReadInputs262,9024
static inline int Psr_ManReadOutputs( Psr_Man_t * p )Psr_ManReadOutputs268,9210
static inline int Psr_ManReadNode( Psr_Man_t * p )Psr_ManReadNode274,9398
static inline int Psr_ManReadBox( Psr_Man_t * p, int fGate )Psr_ManReadBox281,9605
static inline int Psr_ManReadLatch( Psr_Man_t * p )Psr_ManReadLatch291,9965
static inline int Psr_ManReadShort( Psr_Man_t * p )Psr_ManReadShort312,10724
static inline int Psr_ManReadModel( Psr_Man_t * p )Psr_ManReadModel328,11452
static inline int Psr_ManReadEnd( Psr_Man_t * p )Psr_ManReadEnd339,11988
static inline int Psr_ManReadDirective( Psr_Man_t * p )Psr_ManReadDirective349,12424
static inline int Psr_ManReadLines( Psr_Man_t * p )Psr_ManReadLines380,13559
Vec_Ptr_t * Psr_ManReadBlif( char * pFileName )Psr_ManReadBlif406,14131
void Psr_ManReadBlifTest()Psr_ManReadBlifTest431,14718

src/base/bac/bac.c,0

src/base/bac/bacLib.c,0

src/base/bac/bacPrsBuild.c,750
int Psr_ManIsMapped( Psr_Ntk_t * pNtk )Psr_ManIsMapped47,1334
int Psr_NtkCountObjects( Psr_Ntk_t * pNtk )Psr_NtkCountObjects74,2032
void Psr_ManRemapOne( Vec_Int_t * vSigs, Psr_Ntk_t * pNtkBox, Vec_Int_t * vMap )Psr_ManRemapOne95,2549
void Psr_ManRemapGate( Vec_Int_t * vSigs )Psr_ManRemapGate122,3552
void Psr_ManRemapBoxes( Bac_Man_t * pNew, Vec_Ptr_t * vDes, Psr_Ntk_t * pNtk, Vec_Int_t * vMap )Psr_ManRemapBoxes128,3715
void Psr_ManCleanMap( Psr_Ntk_t * pNtk, Vec_Int_t * vMap )Psr_ManCleanMap144,4362
void Psr_ManBuildNtk( Bac_Ntk_t * pNew, Vec_Ptr_t * vDes, Psr_Ntk_t * pNtk, Vec_Int_t * vMap, Vec_Int_t * vBoxes )Psr_ManBuildNtk157,4854
Bac_Man_t * Psr_ManBuildCba( char * pFileName, Vec_Ptr_t * vDes )Psr_ManBuildCba328,12391

src/base/bac/bacReadVer.c,4881
    PRS_VER_NONE = 0,  // 0:  unusedPRS_VER_NONE32,836
    PRS_VER_INPUT,     // 1:  inputPRS_VER_INPUT33,873
    PRS_VER_OUTPUT,    // 2:  outputPRS_VER_OUTPUT34,909
    PRS_VER_INOUT,     // 3:  inoutPRS_VER_INOUT35,946
    PRS_VER_WIRE,      // 4:  wirePRS_VER_WIRE36,982
    PRS_VER_MODULE,    // 5:  modulePRS_VER_MODULE37,1017
    PRS_VER_ASSIGN,    // 6:  assignPRS_VER_ASSIGN38,1054
    PRS_VER_REG,       // 7:  regPRS_VER_REG39,1091
    PRS_VER_ALWAYS,    // 8:  alwaysPRS_VER_ALWAYS40,1125
    PRS_VER_DEFPARAM,  // 9:  alwaysPRS_VER_DEFPARAM41,1162
    PRS_VER_BEGIN,     // 10: beginPRS_VER_BEGIN42,1199
    PRS_VER_END,       // 11: endPRS_VER_END43,1235
    PRS_VER_ENDMODULE, // 12: endmodulePRS_VER_ENDMODULE44,1269
    PRS_VER_UNKNOWN    // 13: unknownPRS_VER_UNKNOWN45,1309
} Bac_VerType_t;Bac_VerType_t46,1347
static const char * s_VerTypes[PRS_VER_UNKNOWN+1] = {s_VerTypes48,1365
static inline void Psr_NtkAddVerilogDirectives( Psr_Man_t * p )Psr_NtkAddVerilogDirectives65,1937
static inline int Psr_CharIsSpace( char c )   { return (c == ' ' || c == '\t' || c == '\r' || c == '\n');                           }Psr_CharIsSpace75,2201
static inline int Psr_CharIsDigit( char c )   { return (c >= '0' && c <= '9');                                                      }Psr_CharIsDigit76,2335
static inline int Psr_CharIsDigitB( char c )  { return (c == '0' || c == '1'  || c == 'x' || c == 'z');                             }Psr_CharIsDigitB77,2469
static inline int Psr_CharIsDigitH( char c )  { return (c >= '0' && c <= '9') || (c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f');  }Psr_CharIsDigitH78,2603
static inline int Psr_CharIsChar( char c )    { return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');                            }Psr_CharIsChar79,2737
static inline int Psr_CharIsSymb1( char c )   { return Psr_CharIsChar(c) || c == '_';                                               }Psr_CharIsSymb180,2871
static inline int Psr_CharIsSymb2( char c )   { return Psr_CharIsSymb1(c) || Psr_CharIsDigit(c) || c == '$';                        }Psr_CharIsSymb281,3005
static inline int Psr_ManIsChar( Psr_Man_t * p, char c )    { return p->pCur[0] == c;                        }Psr_ManIsChar83,3140
static inline int Psr_ManIsChar1( Psr_Man_t * p, char c )   { return p->pCur[1] == c;                        }Psr_ManIsChar184,3251
static inline int Psr_ManIsDigit( Psr_Man_t * p )           { return Psr_CharIsDigit(*p->pCur);              }Psr_ManIsDigit85,3362
static const char * s_VerilogModules[100] = s_VerilogModules104,3965
static const char * s_KnownModules[100] = s_KnownModules123,4500
static inline int Psr_ManIsVerilogModule( Psr_Man_t * p, char * pName )Psr_ManIsVerilogModule180,6120
static inline int Psr_ManIsKnownModule( Psr_Man_t * p, char * pName )Psr_ManIsKnownModule189,6384
static inline int Psr_ManUtilSkipComments( Psr_Man_t * p )Psr_ManUtilSkipComments212,6929
static inline int Psr_ManUtilSkipName( Psr_Man_t * p )Psr_ManUtilSkipName230,7479
static inline int Psr_ManUtilSkipSpaces( Psr_Man_t * p )Psr_ManUtilSkipSpaces241,7776
static inline int Psr_ManUtilSkipUntil( Psr_Man_t * p, char c )Psr_ManUtilSkipUntil255,8250
static inline int Psr_ManUtilSkipUntilWord( Psr_Man_t * p, char * pWord )Psr_ManUtilSkipUntilWord270,8637
static inline int Psr_ManReadName( Psr_Man_t * p )Psr_ManReadName289,9085
static inline int Psr_ManReadNameList( Psr_Man_t * p, Vec_Int_t * vTemp, char LastSymb )Psr_ManReadNameList308,9582
static inline int Psr_ManReadConstant( Psr_Man_t * p )Psr_ManReadConstant326,10347
static inline int Psr_ManReadRange( Psr_Man_t * p )Psr_ManReadRange375,11785
static inline int Psr_ManReadConcat( Psr_Man_t * p, Vec_Int_t * vTemp2 )Psr_ManReadConcat399,13104
static inline int Psr_ManReadSignal( Psr_Man_t * p )Psr_ManReadSignal414,13731
int Psr_ManReadSignalList( Psr_Man_t * p, Vec_Int_t * vTemp, char LastSymb, int fAddForm )Psr_ManReadSignalList450,15404
static inline int Psr_ManReadSignalList2( Psr_Man_t * p, Vec_Int_t * vTemp )Psr_ManReadSignalList2466,15991
static inline int Psr_ManReadDeclaration( Psr_Man_t * p, int Type )Psr_ManReadDeclaration506,17649
static inline int Psr_ManReadAssign( Psr_Man_t * p )Psr_ManReadAssign524,18705
static inline int Psr_ManReadInstance( Psr_Man_t * p, int Func )Psr_ManReadInstance618,22249
static inline int Psr_ManReadArguments( Psr_Man_t * p )Psr_ManReadArguments654,23806
static inline int Psr_ManReadModule( Psr_Man_t * p )Psr_ManReadModule697,25856
static inline int Psr_ManReadDesign( Psr_Man_t * p )Psr_ManReadDesign775,29325
void Psr_ManPrintModules( Psr_Man_t * p )Psr_ManPrintModules806,30075
Vec_Ptr_t * Psr_ManReadVerilog( char * pFileName )Psr_ManReadVerilog834,30919
void Psr_ManReadVerilogTest( char * pFileName )Psr_ManReadVerilogTest849,31314

src/base/bac/bacOper.c,346
int Bac_BoxCreate( Bac_Ntk_t * p, Bac_ObjType_t Type, Vec_Int_t * vFanins, int nInA, int nInB, int nOuts )Bac_BoxCreate44,1236
int Bac_ObjClpWide( Bac_Ntk_t * p, int iBox )Bac_ObjClpWide127,5046
int Bac_ObjClpArith( Bac_Ntk_t * p, int iBox )Bac_ObjClpArith212,7795
int Bac_ObjClpMemory( Bac_Ntk_t * p, int iBox )Bac_ObjClpMemory330,11121

src/base/bac/bacNtk.c,2027
typedef struct Bac_Pair_t_ Bac_Pair_t;Bac_Pair_t29,781
struct Bac_Pair_t_Bac_Pair_t_30,820
    Bac_ObjType_t Type;Type32,841
    char *        pName;pName33,865
    char *        pSymb;pSymb34,890
static const char * s_Pref = "ABC_";s_Pref36,918
static Bac_Pair_t s_Types[BAC_BOX_UNKNOWN] =s_Types37,955
static inline int Bac_GetTypeId( Bac_ObjType_t Type )Bac_GetTypeId123,4408
void Bac_ManSetupTypes( char ** pNames, char ** pSymbs )Bac_ManSetupTypes131,4597
char * Bac_NtkGenerateName( Bac_Ntk_t * p, Bac_ObjType_t Type, Vec_Int_t * vBits )Bac_NtkGenerateName142,4877
Bac_ObjType_t Bac_NameToType( char * pName )Bac_NameToType161,5494
Vec_Int_t * Bac_NameToRanges( char * pName )Bac_NameToRanges172,5842
void Bac_NtkUpdateFanout( Bac_Ntk_t * p, int iOld, int iNew )Bac_NtkUpdateFanout215,7118
void Bac_NtkDeriveFanout( Bac_Ntk_t * p )Bac_NtkDeriveFanout241,7791
void Bac_ManDeriveFanout( Bac_Man_t * p )Bac_ManDeriveFanout258,8327
int Bac_ManAssignInternTwo( Bac_Ntk_t * p, int iNum, int nDigits, char * pPref, Vec_Int_t * vMap )Bac_ManAssignInternTwo276,8735
int Bac_ManAssignCountNames( Bac_Ntk_t * p )Bac_ManAssignCountNames290,9253
void Bac_ManAssignInternWordNamesNtk( Bac_Ntk_t * p, Vec_Int_t * vMap )Bac_ManAssignInternWordNamesNtk302,9605
void Bac_ManAssignInternWordNames( Bac_Man_t * p )Bac_ManAssignInternWordNames392,13077
int Bac_ManClpObjNum_rec( Bac_Ntk_t * p )Bac_ManClpObjNum_rec414,13676
int Bac_ManClpObjNum( Bac_Man_t * p )Bac_ManClpObjNum423,13988
void Bac_NtkDfs_rec( Bac_Ntk_t * p, int iObj, Vec_Int_t * vBoxes )Bac_NtkDfs_rec442,14473
Vec_Int_t * Bac_NtkDfs( Bac_Ntk_t * p )Bac_NtkDfs458,14970
int Bac_NtkDfsUserBoxes_rec( Bac_Ntk_t * p, int iObj, Vec_Int_t * vBoxes )Bac_NtkDfsUserBoxes_rec481,15612
int Bac_NtkDfsUserBoxes( Bac_Ntk_t * p )Bac_NtkDfsUserBoxes498,16235
void Bac_NtkCollapse_rec( Bac_Ntk_t * pNew, Bac_Ntk_t * p, Vec_Int_t * vSigs )Bac_NtkCollapse_rec523,16869
Bac_Man_t * Bac_ManCollapse( Bac_Man_t * p )Bac_ManCollapse567,18667

src/base/bac/bacBac.c,971
int BacManReadBacLine( Vec_Str_t * vOut, int * pPos, char * pBuffer, char * pLimit )BacManReadBacLine45,1239
int BacManReadBacNameAndNums( char * pBuffer, int * Num1, int * Num2, int * Num3, int * Num4 )BacManReadBacNameAndNums53,1489
void Bac_ManReadBacVecStr( Vec_Str_t * vOut, int * pPos, Vec_Str_t * p, int nSize )Bac_ManReadBacVecStr88,2385
void Bac_ManReadBacVecInt( Vec_Str_t * vOut, int * pPos, Vec_Int_t * p, int nSize )Bac_ManReadBacVecInt95,2636
void Bac_ManReadBacNtk( Vec_Str_t * vOut, int * pPos, Bac_Ntk_t * pNtk )Bac_ManReadBacNtk102,2891
Bac_Man_t * Bac_ManReadBacInt( Vec_Str_t * vOut )Bac_ManReadBacInt142,4382
Bac_Man_t * Bac_ManReadBac( char * pFileName )Bac_ManReadBac181,5658
void Bac_ManWriteBacNtk( Vec_Str_t * vOut, Bac_Ntk_t * pNtk )Bac_ManWriteBacNtk226,6815
void Bac_ManWriteBacInt( Vec_Str_t * vOut, Bac_Man_t * p )Bac_ManWriteBacInt254,7765
void Bac_ManWriteBac( char * pFileName, Bac_Man_t * p )Bac_ManWriteBac272,8477

src/base/bac/bacPtr.c,2981
    PTR_GATE_NONE = 0,PTR_GATE_NONE57,2593
    PTR_GATE_C0,         // Const0TPTR_GATE_C058,2616
    PTR_GATE_C1,         // Const1T   PTR_GATE_C159,2652
    PTR_GATE_BUF,        // BufT  PTR_GATE_BUF60,2691
    PTR_GATE_INV,        // InvT  PTR_GATE_INV61,2726
    PTR_GATE_AND,        // AndT  PTR_GATE_AND62,2761
    PTR_GATE_NAND,       // NandT PTR_GATE_NAND63,2796
    PTR_GATE_OR,         // OrT   PTR_GATE_OR64,2831
    PTR_GATE_NOR,        // NorT  PTR_GATE_NOR65,2866
    PTR_GATE_XOR,        // XorT  PTR_GATE_XOR66,2901
    PTR_GATE_XNOR,       // XnorT PTR_GATE_XNOR67,2936
    PTR_GATE_UNKNOWNPTR_GATE_UNKNOWN68,2971
} Ptr_ObjType_t; Ptr_ObjType_t69,2992
void Bac_PtrFreeNtk( Vec_Ptr_t * vNtk )Bac_PtrFreeNtk86,3474
void Bac_PtrFree( Vec_Ptr_t * vDes )Bac_PtrFree98,3947
int Bac_PtrMemoryArray( Vec_Ptr_t * vArray )Bac_PtrMemoryArray118,4421
int Bac_PtrMemoryArrayArray( Vec_Ptr_t * vArrayArray )Bac_PtrMemoryArrayArray122,4509
int Bac_PtrMemoryNtk( Vec_Ptr_t * vNtk )Bac_PtrMemoryNtk129,4739
int Bac_PtrMemory( Vec_Ptr_t * vDes )Bac_PtrMemory138,5144
void Bac_PtrDumpSignalsBlif( FILE * pFile, Vec_Ptr_t * vSigs, int fSkipLastComma )Bac_PtrDumpSignalsBlif157,5637
void Bac_PtrDumpBoxBlif( FILE * pFile, Vec_Ptr_t * vBox )Bac_PtrDumpBoxBlif163,5837
void Bac_PtrDumpBoxesBlif( FILE * pFile, Vec_Ptr_t * vBoxes )Bac_PtrDumpBoxesBlif173,6283
void Bac_PtrDumpModuleBlif( FILE * pFile, Vec_Ptr_t * vNtk )Bac_PtrDumpModuleBlif179,6477
void Bac_PtrDumpBlif( char * pFileName, Vec_Ptr_t * vDes )Bac_PtrDumpBlif192,7082
void Bac_PtrDumpSignalsVerilog( FILE * pFile, Vec_Ptr_t * vSigs, int fAlwaysComma )Bac_PtrDumpSignalsVerilog219,7870
void Bac_PtrDumpBoxVerilog( FILE * pFile, Vec_Ptr_t * vBox )Bac_PtrDumpBoxVerilog225,8128
void Bac_PtrDumpBoxesVerilog( FILE * pFile, Vec_Ptr_t * vBoxes )Bac_PtrDumpBoxesVerilog234,8583
void Bac_PtrDumpModuleVerilog( FILE * pFile, Vec_Ptr_t * vNtk )Bac_PtrDumpModuleVerilog240,8783
void Bac_PtrDumpVerilog( char * pFileName, Vec_Ptr_t * vDes )Bac_PtrDumpVerilog256,9605
void Bac_ManCollectGateNameOne( Mio_Library_t * pLib, Ptr_ObjType_t Type, word Truth, Vec_Ptr_t * vGateNames )Bac_ManCollectGateNameOne284,10410
Vec_Ptr_t * Bac_ManCollectGateNamesByTruth( Mio_Library_t * pLib )Bac_ManCollectGateNamesByTruth290,10690
void Bac_PtrUpdateBox( Vec_Ptr_t * vBox, Vec_Ptr_t * vGatesNames )Bac_PtrUpdateBox322,12253
Vec_Ptr_t * Bac_PtrTransformSigs( Vec_Ptr_t * vSig )Bac_PtrTransformSigs371,14426
Vec_Ptr_t * Bac_PtrTransformBox( Vec_Ptr_t * vBox, Vec_Ptr_t * vGatesNames )Bac_PtrTransformBox379,14690
Vec_Ptr_t * Bac_PtrTransformBoxes( Vec_Ptr_t * vBoxes, Vec_Ptr_t * vGatesNames )Bac_PtrTransformBoxes389,15048
Vec_Ptr_t * Bac_PtrTransformNtk( Vec_Ptr_t * vNtk, Vec_Ptr_t * vGatesNames )Bac_PtrTransformNtk397,15369
Vec_Ptr_t * Bac_PtrTransformTest( Vec_Ptr_t * vDes )Bac_PtrTransformTest411,16050
void Bac_PtrTransformTestTest()Bac_PtrTransformTestTest452,17302

src/base/bac/bacPrs.h,8430
#define ABC__base__prs__prs_hABC__base__prs__prs_h22,546
    BAC_PRS_NAME = 0,        // 0:  name/variableBAC_PRS_NAME40,1141
    BAC_PRS_SLICE,           // 1:  sliceBAC_PRS_SLICE41,1191
    BAC_PRS_CONST,           // 2:  constantBAC_PRS_CONST42,1233
    BAC_PRS_CONCAT,          // 3:  concatentationBAC_PRS_CONCAT43,1278
} Psr_ManType_t; Psr_ManType_t44,1329
typedef struct Psr_Ntk_t_ Psr_Ntk_t;Psr_Ntk_t51,1579
struct Psr_Ntk_t_Psr_Ntk_t_52,1616
    int          iModuleName;iModuleName55,1656
    unsigned     fMapped : 1;fMapped56,1686
    unsigned     fSlices : 1;fSlices57,1716
    unsigned     fHasC0s : 1;fHasC0s58,1746
    unsigned     fHasC1s : 1;fHasC1s59,1776
    unsigned     fHasCXs : 1;fHasCXs60,1806
    unsigned     fHasCZs : 1;fHasCZs61,1836
    Abc_Nam_t *  pStrs;pStrs62,1866
    Vec_Int_t    vOrder;     // order of signalsvOrder64,1907
    Vec_Int_t    vInouts;    // inouts vInouts66,1976
    Vec_Int_t    vInputs;    // inputs vInputs67,2016
    Vec_Int_t    vOutputs;   // outputsvOutputs68,2056
    Vec_Int_t    vWires;     // wires  vWires69,2096
    Vec_Int_t    vInoutsR;   // inouts vInoutsR71,2157
    Vec_Int_t    vInputsR;   // inputs vInputsR72,2197
    Vec_Int_t    vOutputsR;  // outputsvOutputsR73,2237
    Vec_Int_t    vWiresR;    // wires  vWiresR74,2277
    Vec_Int_t    vSlices;    // NameId + RangeIdvSlices76,2354
    Vec_Int_t    vConcats;   // array of NameId/SliceId/ConstIdvConcats77,2403
    Vec_Int_t    vBoxes;     // ModuleId + InstId + array of pairs {FormNameId, ActSignalId(NameId/SliceId/ConstId/ConcatId)}vBoxes78,2467
    Vec_Int_t    vObjs;      // box handlesvObjs79,2593
typedef struct Psr_Man_t_ Psr_Man_t;Psr_Man_t83,2651
struct Psr_Man_t_Psr_Man_t_84,2688
    char *       pName;       // file namepName87,2726
    char *       pBuffer;     // file contentspBuffer88,2769
    char *       pLimit;      // end of filepLimit89,2816
    char *       pCur;        // current positionpCur90,2861
    Abc_Nam_t *  pStrs;       // string managerpStrs91,2911
    Psr_Ntk_t *  pNtk;        // current networkpNtk92,2959
    Vec_Ptr_t *  vNtks;       // input networksvNtks93,3008
    Vec_Str_t    vCover;      // one SOP covervCover95,3078
    Vec_Int_t    vTemp;       // array of tokensvTemp96,3125
    Vec_Int_t    vTemp2;      // array of tokensvTemp297,3174
    Vec_Int_t    vKnown;vKnown99,3241
    Vec_Int_t    vFailed;vFailed100,3266
    Vec_Int_t    vSucceeded;vSucceeded101,3292
    int          fUsingTemp2; // vTemp2 is in usefUsingTemp2103,3343
    char ErrorStr[1000];      // errorErrorStr104,3393
static inline Psr_Ntk_t * Psr_ManNtk( Vec_Ptr_t * vPrs, int i )        { return i >= 0 && i < Vec_PtrSize(vPrs) ? (Psr_Ntk_t *)Vec_PtrEntry(vPrs, i) : NULL; }Psr_ManNtk107,3436
static inline Psr_Ntk_t * Psr_ManRoot( Vec_Ptr_t * vPrs )              { return Psr_ManNtk(vPrs, 0);                             }Psr_ManRoot108,3595
static inline Abc_Nam_t * Psr_ManNameMan( Vec_Ptr_t * vPrs )           { return Psr_ManRoot(vPrs)->pStrs;                        }Psr_ManNameMan109,3726
static inline int         Psr_NtkId( Psr_Ntk_t * p )                   { return p->iModuleName;                                  }Psr_NtkId111,3858
static inline int         Psr_NtkPioNum( Psr_Ntk_t * p )               { return Vec_IntSize(&p->vInouts);                        }Psr_NtkPioNum112,3989
static inline int         Psr_NtkPiNum( Psr_Ntk_t * p )                { return Vec_IntSize(&p->vInputs);                        }Psr_NtkPiNum113,4120
static inline int         Psr_NtkPoNum( Psr_Ntk_t * p )                { return Vec_IntSize(&p->vOutputs);                       }Psr_NtkPoNum114,4251
static inline int         Psr_NtkBoxNum( Psr_Ntk_t * p )               { return Vec_IntSize(&p->vObjs);                          }Psr_NtkBoxNum115,4382
static inline int         Psr_NtkObjNum( Psr_Ntk_t * p )               { return Psr_NtkPioNum(p) + Psr_NtkPiNum(p) + Psr_NtkPoNum(p) + Psr_NtkBoxNum(p); }Psr_NtkObjNum116,4513
static inline char *      Psr_NtkStr( Psr_Ntk_t * p, int h )           { return Abc_NamStr(p->pStrs, h);                         }Psr_NtkStr117,4668
static inline char *      Psr_NtkName( Psr_Ntk_t * p )                 { return Psr_NtkStr(p, Psr_NtkId(p));                     }Psr_NtkName118,4799
static inline int         Psr_NtkSigName( Psr_Ntk_t * p, int i )       { if (!p->fSlices) return i; assert(Abc_Lit2Att2(i) == BAC_PRS_NAME); return Abc_Lit2Var2(i); }Psr_NtkSigName119,4930
static inline int         Psr_SliceName( Psr_Ntk_t * p, int h )        { return Vec_IntEntry(&p->vSlices, h);                    }Psr_SliceName121,5098
static inline int         Psr_SliceRange( Psr_Ntk_t * p, int h )       { return Vec_IntEntry(&p->vSlices, h+1);                  }Psr_SliceRange122,5229
static inline int         Psr_CatSize( Psr_Ntk_t * p, int h )          { return Vec_IntEntry(&p->vConcats, h);                   }Psr_CatSize124,5361
static inline int *       Psr_CatArray( Psr_Ntk_t * p, int h )         { return Vec_IntEntryP(&p->vConcats, h+1);                }Psr_CatArray125,5492
static inline Vec_Int_t * Psr_CatSignals( Psr_Ntk_t * p, int h )       { static Vec_Int_t V; V.nSize = V.nCap = Psr_CatSize(p, h); V.pArray = Psr_CatArray(p, h); return &V; }Psr_CatSignals126,5623
static inline int         Psr_BoxHand( Psr_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vObjs, i);                      }Psr_BoxHand128,5799
static inline int         Psr_BoxSize( Psr_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vBoxes, Psr_BoxHand(p, i))-2;   }Psr_BoxSize129,5930
static inline int         Psr_BoxIONum( Psr_Ntk_t * p, int i )         { return Psr_BoxSize(p, i) / 2;                           }Psr_BoxIONum130,6061
static inline int         Psr_BoxNtk( Psr_Ntk_t * p, int i )           { return Vec_IntEntry(&p->vBoxes, Psr_BoxHand(p, i)+1);   }Psr_BoxNtk131,6192
static inline void        Psr_BoxSetNtk( Psr_Ntk_t * p, int i, int m ) { Vec_IntWriteEntry(&p->vBoxes, Psr_BoxHand(p, i)+1, m);  }Psr_BoxSetNtk132,6323
static inline int         Psr_BoxName( Psr_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vBoxes, Psr_BoxHand(p, i)+2);   }Psr_BoxName133,6454
static inline int         Psr_BoxIsNode( Psr_Ntk_t * p, int i )        { return!Vec_IntEntry(&p->vBoxes, Psr_BoxHand(p, i)+3);   } // no formal namesPsr_BoxIsNode134,6585
static inline int *       Psr_BoxArray( Psr_Ntk_t * p, int i )         { return Vec_IntEntryP(&p->vBoxes, Psr_BoxHand(p, i)+3);  }Psr_BoxArray135,6735
static inline Vec_Int_t * Psr_BoxSignals( Psr_Ntk_t * p, int i )       { static Vec_Int_t V; V.nSize = V.nCap = Psr_BoxSize(p, i); V.pArray = Psr_BoxArray(p, i); return &V; }Psr_BoxSignals136,6866
#define Psr_ManForEachNameVec(Psr_ManForEachNameVec138,7042
#define Psr_NtkForEachPio(Psr_NtkForEachPio141,7204
#define Psr_NtkForEachPi(Psr_NtkForEachPi143,7349
#define Psr_NtkForEachPo(Psr_NtkForEachPo145,7493
#define Psr_NtkForEachBox(Psr_NtkForEachBox147,7638
static inline int Psr_ManErrorSet( Psr_Man_t * p, char * pError, int Value )Psr_ManErrorSet155,8018
static inline void Psr_ManErrorClear( Psr_Man_t * p )Psr_ManErrorClear162,8213
static inline int Psr_ManErrorPrint( Psr_Man_t * p )Psr_ManErrorPrint167,8321
static inline void Psr_ManInitializeNtk( Psr_Man_t * p, int iName, int fSlices )Psr_ManInitializeNtk178,8630
static inline void Psr_ManFinalizeNtk( Psr_Man_t * p )Psr_ManFinalizeNtk187,8937
static inline int Psr_NtkAddSlice( Psr_Ntk_t * p, int Name, int Range )Psr_NtkAddSlice194,9084
static inline int Psr_NtkAddConcat( Psr_Ntk_t * p, Vec_Int_t * vTemp )Psr_NtkAddConcat200,9268
static inline void Psr_NtkAddBox( Psr_Ntk_t * p, int ModName, int InstName, Vec_Int_t * vTemp )Psr_NtkAddBox211,9618
static inline char * Psr_ManLoadFile( char * pFileName, char ** ppLimit )Psr_ManLoadFile228,10150
static inline Psr_Man_t * Psr_ManAlloc( char * pFileName )Psr_ManAlloc254,10982
static inline void Psr_NtkFree( Psr_Ntk_t * p )Psr_NtkFree271,11432
static inline void Psr_ManVecFree( Vec_Ptr_t * vPrs )Psr_ManVecFree291,11988
static inline void Psr_ManFree( Psr_Man_t * p )Psr_ManFree299,12184
static inline int Psr_NtkMemory( Psr_Ntk_t * p )Psr_NtkMemory316,12607
static inline int Psr_ManMemory( Vec_Ptr_t * vPrs )Psr_ManMemory333,13218

src/base/bac/bacWriteVer.c,2389
static void Psr_ManWriteVerilogConcat( FILE * pFile, Psr_Ntk_t * p, int Con )Psr_ManWriteVerilogConcat47,1345
static void Psr_ManWriteVerilogSignal( FILE * pFile, Psr_Ntk_t * p, int Sig )Psr_ManWriteVerilogSignal55,1727
void Psr_ManWriteVerilogArray( FILE * pFile, Psr_Ntk_t * p, Vec_Int_t * vSigs, int Start, int Stop, int fOdd )Psr_ManWriteVerilogArray67,2286
static void Psr_ManWriteVerilogArray2( FILE * pFile, Psr_Ntk_t * p, Vec_Int_t * vSigs )Psr_ManWriteVerilogArray279,2695
static void Psr_ManWriteVerilogMux( FILE * pFile, Psr_Ntk_t * p, Vec_Int_t * vSigs )Psr_ManWriteVerilogMux92,3175
static void Psr_ManWriteVerilogBoxes( FILE * pFile, Psr_Ntk_t * p )Psr_ManWriteVerilogBoxes108,3737
static void Psr_ManWriteVerilogIos( FILE * pFile, Psr_Ntk_t * p, int SigType )Psr_ManWriteVerilogIos134,4818
static void Psr_ManWriteVerilogIoOrder( FILE * pFile, Psr_Ntk_t * p, Vec_Int_t * vOrder )Psr_ManWriteVerilogIoOrder145,5435
static void Psr_ManWriteVerilogNtk( FILE * pFile, Psr_Ntk_t * p )Psr_ManWriteVerilogNtk151,5692
void Psr_ManWriteVerilog( char * pFileName, Vec_Ptr_t * vPrs )Psr_ManWriteVerilog166,6190
static inline int Bac_ObjGetRange( Bac_Ntk_t * p, int iObj )Bac_ObjGetRange195,7049
static inline void Bac_ManWriteVar( Bac_Ntk_t * p, int RealName )Bac_ManWriteVar208,7572
static inline void Bac_ManWriteRange( Bac_Ntk_t * p, int Beg, int End )Bac_ManWriteRange212,7708
static inline void Bac_ManWriteConstBit( Bac_Ntk_t * p, int iObj, int fHead )Bac_ManWriteConstBit224,8035
static inline int Bac_ManFindRealNameId( Bac_Ntk_t * p, int iObj )Bac_ManFindRealNameId241,8576
static inline int Bac_ManFindRealIndex( Bac_Ntk_t * p, int iObj )Bac_ManFindRealIndex252,9066
static inline void Bac_ManWriteSig( Bac_Ntk_t * p, int iObj )Bac_ManWriteSig264,9577
static inline void Bac_ManWriteConcat( Bac_Ntk_t * p, int iStart, int nObjs )Bac_ManWriteConcat283,10171
static inline void Bac_ManWriteGate( Bac_Ntk_t * p, int iObj )Bac_ManWriteGate394,14500
static inline void Bac_ManWriteAssign( Bac_Ntk_t * p, int iObj )Bac_ManWriteAssign423,15685
void Bac_ManWriteVerilogBoxes( Bac_Ntk_t * p, int fUseAssign )Bac_ManWriteVerilogBoxes472,17500
void Bac_ManWriteVerilogNtk( Bac_Ntk_t * p, int fUseAssign )Bac_ManWriteVerilogNtk581,21885
void Bac_ManWriteVerilog( char * pFileName, Bac_Man_t * p, int fUseAssign )Bac_ManWriteVerilog660,24983

src/base/bac/bacPtrAbc.c,1807
char * Ptr_HopToType( Abc_Obj_t * pObj )Ptr_HopToType47,1361
char * Ptr_AbcObjName( Abc_Obj_t * pObj )Ptr_AbcObjName94,3410
static int Ptr_CheckArray( Vec_Ptr_t * vArray )Ptr_CheckArray105,3762
Vec_Ptr_t * Ptr_AbcDeriveNode( Abc_Obj_t * pObj )Ptr_AbcDeriveNode110,3885
Vec_Ptr_t * Ptr_AbcDeriveBox( Abc_Obj_t * pObj )Ptr_AbcDeriveBox132,4705
Vec_Ptr_t * Ptr_AbcDeriveBoxes( Abc_Ntk_t * pNtk )Ptr_AbcDeriveBoxes153,5456
Vec_Ptr_t * Ptr_AbcDeriveInputs( Abc_Ntk_t * pNtk )Ptr_AbcDeriveInputs165,5878
Vec_Ptr_t * Ptr_AbcDeriveOutputs( Abc_Ntk_t * pNtk )Ptr_AbcDeriveOutputs174,6173
Vec_Ptr_t * Ptr_AbcDeriveNtk( Abc_Ntk_t * pNtk )Ptr_AbcDeriveNtk183,6469
Vec_Ptr_t * Ptr_AbcDeriveDes( Abc_Ntk_t * pNtk )Ptr_AbcDeriveDes194,6869
void Ptr_ManExperiment( Abc_Ntk_t * pNtk )Ptr_ManExperiment217,7511
static inline int Ptr_NameToType( char * pSop )Ptr_NameToType241,8319
int Ptr_ManCountNtk( Vec_Ptr_t * vNtk )Ptr_ManCountNtk255,9004
int Bac_BoxCountOutputs( Bac_Ntk_t * pNtk, char * pBoxNtk )Bac_BoxCountOutputs269,9568
int Bac_NtkDeriveFromPtr( Bac_Ntk_t * pNtk, Vec_Ptr_t * vNtk, Vec_Int_t * vMap, Vec_Int_t * vBox2Id )Bac_NtkDeriveFromPtr276,9807
Bac_Man_t * Bac_PtrTransformToCba( Vec_Ptr_t * vDes )Bac_PtrTransformToCba355,13856
Vec_Ptr_t * Bac_NtkTransformToPtrBox( Bac_Ntk_t * p, int iBox )Bac_NtkTransformToPtrBox398,15305
Vec_Ptr_t * Bac_NtkTransformToPtrBoxes( Bac_Ntk_t * p )Bac_NtkTransformToPtrBoxes420,16317
Vec_Ptr_t * Bac_NtkTransformToPtrInputs( Bac_Ntk_t * p )Bac_NtkTransformToPtrInputs430,16612
Vec_Ptr_t * Bac_NtkTransformToPtrOutputs( Bac_Ntk_t * p )Bac_NtkTransformToPtrOutputs439,16900
Vec_Ptr_t * Bac_NtkTransformToPtr( Bac_Ntk_t * p )Bac_NtkTransformToPtr448,17189
Vec_Ptr_t * Bac_PtrDeriveFromCba( Bac_Man_t * p )Bac_PtrDeriveFromCba459,17601

src/base/bac/bacBlast.c,1707
void Bac_ManPrepareGates( Bac_Man_t * p )Bac_ManPrepareGates48,1354
void Bac_ManUndoGates( Bac_Man_t * p )Bac_ManUndoGates64,1944
int Bac_ManAddBarbuf( Gia_Man_t * pNew, int iRes, Bac_Man_t * p, int iLNtk, int iLObj, int iRNtk, int iRObj, Vec_Int_t * vMap )Bac_ManAddBarbuf87,2454
int Bac_ManExtract_rec( Gia_Man_t * pNew, Bac_Ntk_t * p, int i, int fBuffers, Vec_Int_t * vMap )Bac_ManExtract_rec109,3578
Gia_Man_t * Bac_ManExtract( Bac_Man_t * p, int fBuffers, int fVerbose )Bac_ManExtract216,8595
void Bac_ManMarkNodesGia( Bac_Man_t * p, Gia_Man_t * pGia )Bac_ManMarkNodesGia277,10315
void Bac_ManRemapBarbufs( Bac_Man_t * pNew, Bac_Man_t * p )Bac_ManRemapBarbufs301,11062
void Bac_NtkCreateAndConnectBuffer( Gia_Man_t * pGia, Gia_Obj_t * pObj, Bac_Ntk_t * p, int iTerm )Bac_NtkCreateAndConnectBuffer321,11923
void Bac_NtkInsertGia( Bac_Man_t * p, Gia_Man_t * pGia )Bac_NtkInsertGia336,12452
Bac_Man_t * Bac_ManInsertGia( Bac_Man_t * p, Gia_Man_t * pGia )Bac_ManInsertGia399,14950
Bac_Man_t * Bac_ManBlastTest( Bac_Man_t * p )Bac_ManBlastTest420,15460
static inline int Abc_NodeIsSeriousGate( Abc_Obj_t * p )Abc_NodeIsSeriousGate439,15939
void Bac_ManMarkNodesAbc( Bac_Man_t * p, Abc_Ntk_t * pNtk )Bac_ManMarkNodesAbc443,16078
void Bac_NtkCreateOrConnectFanin( Abc_Obj_t * pFanin, Bac_Ntk_t * p, int iTerm )Bac_NtkCreateOrConnectFanin469,16981
void Bac_NtkPrepareLibrary( Bac_Man_t * p, Mio_Library_t * pLib )Bac_NtkPrepareLibrary490,17879
int Bac_NtkBuildLibrary( Bac_Man_t * p )Bac_NtkBuildLibrary509,18782
void Bac_NtkInsertNtk( Bac_Man_t * p, Abc_Ntk_t * pNtk )Bac_NtkInsertNtk520,19116
void * Bac_ManInsertAbc( Bac_Man_t * p, void * pAbc )Bac_ManInsertAbc570,21346

src/base/bac/bacPrsTrans.c,856
typedef struct Bac_Trip_t_ Bac_Trip_t;Bac_Trip_t30,827
struct Bac_Trip_t_Bac_Trip_t_31,866
    Bac_ObjType_t Type;Type33,887
    char *        pName;pName34,911
    char *        pCode;pCode35,936
    char *        pSigs[6];pSigs36,961
static inline int Psr_ManRangeSizeName( Psr_Ntk_t * p, int Name )Psr_ManRangeSizeName139,8545
static inline int Psr_ManRangeSizeRange( Psr_Ntk_t * p, int Range )Psr_ManRangeSizeRange143,8629
static inline int Psr_ManRangeSizeConst( Psr_Ntk_t * p, int Const )Psr_ManRangeSizeConst157,9026
static inline int Psr_ManRangeSizeConcat( Psr_Ntk_t * p, int Con )Psr_ManRangeSizeConcat161,9139
static inline int Psr_ManRangeSizeSignal( Psr_Ntk_t * p, int Sig )Psr_ManRangeSizeSignal167,9424
int Psr_ManRangeSizeArray( Psr_Ntk_t * p, Vec_Int_t * vSlices, int Start, int Stop )Psr_ManRangeSizeArray182,9975

src/base/bac/bac.h,33210
#define ABC__base__bac__bac_hABC__base__bac__bac_h22,542
    BAC_OBJ_NONE = 0,  // 0:  unusedBAC_OBJ_NONE44,1384
    BAC_OBJ_PI,        // 1:  inputBAC_OBJ_PI45,1421
    BAC_OBJ_PO,        // 2:  outputBAC_OBJ_PO46,1457
    BAC_OBJ_BI,        // 3:  box inputBAC_OBJ_BI47,1494
    BAC_OBJ_BO,        // 4:  box outputBAC_OBJ_BO48,1534
    BAC_OBJ_BOX,       // 5:  boxBAC_OBJ_BOX49,1575
    BAC_BOX_CF,   BAC_BOX_CF51,1610
    BAC_BOX_CT,   BAC_BOX_CT52,1629
    BAC_BOX_CX,   BAC_BOX_CX53,1648
    BAC_BOX_CZ,   BAC_BOX_CZ54,1667
    BAC_BOX_BUF,  BAC_BOX_BUF55,1686
    BAC_BOX_INV,  BAC_BOX_INV56,1705
    BAC_BOX_AND,  BAC_BOX_AND57,1724
    BAC_BOX_NAND, BAC_BOX_NAND58,1743
    BAC_BOX_OR,   BAC_BOX_OR59,1762
    BAC_BOX_NOR,  BAC_BOX_NOR60,1781
    BAC_BOX_XOR,  BAC_BOX_XOR61,1800
    BAC_BOX_XNOR, BAC_BOX_XNOR62,1819
    BAC_BOX_SHARP,BAC_BOX_SHARP63,1838
    BAC_BOX_SHARPL,BAC_BOX_SHARPL64,1857
    BAC_BOX_MUX,  BAC_BOX_MUX65,1877
    BAC_BOX_MAJ,  BAC_BOX_MAJ66,1896
    BAC_BOX_RAND,BAC_BOX_RAND68,1916
    BAC_BOX_RNAND,BAC_BOX_RNAND69,1934
    BAC_BOX_ROR,BAC_BOX_ROR70,1953
    BAC_BOX_RNOR,BAC_BOX_RNOR71,1970
    BAC_BOX_RXOR,BAC_BOX_RXOR72,1988
    BAC_BOX_RXNOR,BAC_BOX_RXNOR73,2006
    BAC_BOX_LAND,BAC_BOX_LAND75,2026
    BAC_BOX_LNAND,BAC_BOX_LNAND76,2044
    BAC_BOX_LOR,BAC_BOX_LOR77,2063
    BAC_BOX_LNOR,BAC_BOX_LNOR78,2080
    BAC_BOX_LXOR,BAC_BOX_LXOR79,2098
    BAC_BOX_LXNOR,BAC_BOX_LXNOR80,2116
    BAC_BOX_NMUX,  BAC_BOX_NMUX82,2136
    BAC_BOX_SEL,BAC_BOX_SEL83,2156
    BAC_BOX_PSEL,BAC_BOX_PSEL84,2173
    BAC_BOX_ENC,BAC_BOX_ENC85,2191
    BAC_BOX_PENC,BAC_BOX_PENC86,2208
    BAC_BOX_DEC,BAC_BOX_DEC87,2226
    BAC_BOX_EDEC,BAC_BOX_EDEC88,2243
    BAC_BOX_ADD,BAC_BOX_ADD90,2262
    BAC_BOX_SUB,BAC_BOX_SUB91,2279
    BAC_BOX_MUL,BAC_BOX_MUL92,2296
    BAC_BOX_DIV,BAC_BOX_DIV93,2313
    BAC_BOX_MOD,BAC_BOX_MOD94,2330
    BAC_BOX_REM,BAC_BOX_REM95,2347
    BAC_BOX_POW,BAC_BOX_POW96,2364
    BAC_BOX_MIN,BAC_BOX_MIN97,2381
    BAC_BOX_ABS,BAC_BOX_ABS98,2398
    BAC_BOX_LTHAN,BAC_BOX_LTHAN100,2416
    BAC_BOX_LETHAN,BAC_BOX_LETHAN101,2435
    BAC_BOX_METHAN,BAC_BOX_METHAN102,2455
    BAC_BOX_MTHAN,BAC_BOX_MTHAN103,2475
    BAC_BOX_EQU,BAC_BOX_EQU104,2494
    BAC_BOX_NEQU,BAC_BOX_NEQU105,2511
    BAC_BOX_SHIL,BAC_BOX_SHIL107,2530
    BAC_BOX_SHIR,BAC_BOX_SHIR108,2548
    BAC_BOX_ROTL,BAC_BOX_ROTL109,2566
    BAC_BOX_ROTR,BAC_BOX_ROTR110,2584
    BAC_BOX_GATE,  BAC_BOX_GATE112,2603
    BAC_BOX_LUT,  BAC_BOX_LUT113,2623
    BAC_BOX_ASSIGN,  BAC_BOX_ASSIGN114,2642
    BAC_BOX_TRI,BAC_BOX_TRI116,2665
    BAC_BOX_RAM,BAC_BOX_RAM117,2682
    BAC_BOX_RAMR,BAC_BOX_RAMR118,2699
    BAC_BOX_RAMW,BAC_BOX_RAMW119,2717
    BAC_BOX_RAMWC,BAC_BOX_RAMWC120,2735
    BAC_BOX_RAMBOX,BAC_BOX_RAMBOX121,2754
    BAC_BOX_LATCH,BAC_BOX_LATCH123,2775
    BAC_BOX_LATCHRS,BAC_BOX_LATCHRS124,2794
    BAC_BOX_DFF,BAC_BOX_DFF125,2815
    BAC_BOX_DFFRS,BAC_BOX_DFFRS126,2832
    BAC_BOX_UNKNOWN   // 67BAC_BOX_UNKNOWN128,2852
} Bac_ObjType_t; Bac_ObjType_t129,2880
    BAC_NAME_BIN = 0,        // 0:  binary variableBAC_NAME_BIN134,2930
    BAC_NAME_WORD,           // 1:  first bit of word-level variableBAC_NAME_WORD135,2982
    BAC_NAME_INFO,           // 2:  first bit of special variableBAC_NAME_INFO136,3051
    BAC_NAME_INDEX,          // 3:  index of word-level variableBAC_NAME_INDEX137,3117
} Bac_NameType_t; Bac_NameType_t138,3182
typedef struct Bac_Ntk_t_ Bac_Ntk_t;Bac_Ntk_t141,3203
typedef struct Bac_Man_t_ Bac_Man_t;Bac_Man_t142,3240
struct Bac_Ntk_t_Bac_Ntk_t_145,3289
    Bac_Man_t *  pDesign;  // designpDesign147,3309
    int          NameId;   // name IDNameId148,3346
    int          iCopy;    // copy moduleiCopy149,3384
    int          iBoxNtk;  // instance network IDiBoxNtk150,3426
    int          iBoxObj;  // instance object IDiBoxObj151,3476
    int          Count;    // object counterCount152,3525
    int          Mark;     // visit mark Mark153,3570
    Vec_Int_t    vInputs;  // inputs vInputs155,3629
    Vec_Int_t    vOutputs; // outputsvOutputs156,3667
    Vec_Int_t    vInfo;    // input/output/wire infovInfo157,3705
    Vec_Str_t    vType;    // types     vType159,3783
    Vec_Int_t    vFanin;   // faninvFanin160,3824
    Vec_Int_t    vIndex;   // indexvIndex161,3860
    Vec_Int_t    vName;    // original NameId or InstIdvName162,3896
    Vec_Int_t    vFanout;  // fanoutvFanout163,3952
    Vec_Int_t    vCopy;    // copyvCopy164,3989
    Vec_Int_t    vArray;vArray166,4037
    Vec_Int_t    vArray2;vArray2167,4062
struct Bac_Man_t_Bac_Man_t_171,4102
    char *       pName;    // design namepName174,4142
    char *       pSpec;    // spec file namepSpec175,4184
    Abc_Nam_t *  pStrs;    // string managerpStrs176,4229
    Abc_Nam_t *  pMods;    // module name managerpMods177,4274
    int          iRoot;    // root networkiRoot179,4345
    int          nNtks;    // number of current networksnNtks180,4388
    Bac_Ntk_t *  pNtks;    // networkspNtks181,4445
    Vec_Str_t *  vOut;     vOut183,4501
    Vec_Str_t *  vOut2;     vOut2184,4529
    Vec_Int_t    vBuf2RootNtk;vBuf2RootNtk185,4558
    Vec_Int_t    vBuf2RootObj;vBuf2RootObj186,4589
    Vec_Int_t    vBuf2LeafNtk;vBuf2LeafNtk187,4620
    Vec_Int_t    vBuf2LeafObj;vBuf2LeafObj188,4651
    void *       pMioLib;pMioLib189,4682
    void **      ppGraphs;ppGraphs190,4708
    int          ElemGates[4];ElemGates191,4735
    char *       pPrimNames[BAC_BOX_UNKNOWN];pPrimNames192,4766
    char *       pPrimSymbs[BAC_BOX_UNKNOWN];pPrimSymbs193,4812
static inline char *         Bac_ManName( Bac_Man_t * p )                    { return p->pName;                                                                            }Bac_ManName196,4862
static inline char *         Bac_ManSpec( Bac_Man_t * p )                    { return p->pSpec;                                                                            }Bac_ManSpec197,5035
static inline int            Bac_ManNtkNum( Bac_Man_t * p )                  { return p->nNtks;                                                                            }Bac_ManNtkNum198,5208
static inline int            Bac_ManPrimNum( Bac_Man_t * p )                 { return Abc_NamObjNumMax(p->pMods) - Bac_ManNtkNum(p);                                       }Bac_ManPrimNum199,5381
static inline int            Bac_ManNtkIsOk( Bac_Man_t * p, int i )          { return i > 0 && i <= Bac_ManNtkNum(p);                                                      }Bac_ManNtkIsOk200,5554
static inline Bac_Ntk_t *    Bac_ManNtk( Bac_Man_t * p, int i )              { return Bac_ManNtkIsOk(p, i) ? p->pNtks + i : NULL;                                          }Bac_ManNtk201,5727
static inline int            Bac_ManNtkFindId( Bac_Man_t * p, char * pName ) { return Abc_NamStrFind(p->pMods, pName);                                                     }Bac_ManNtkFindId202,5900
static inline Bac_Ntk_t *    Bac_ManNtkFind( Bac_Man_t * p, char * pName )   { return Bac_ManNtk( p, Bac_ManNtkFindId(p, pName) );                                         }Bac_ManNtkFind203,6073
static inline Bac_Ntk_t *    Bac_ManRoot( Bac_Man_t * p )                    { return Bac_ManNtk(p, p->iRoot);                                                             }Bac_ManRoot204,6246
static inline char *         Bac_ManStr( Bac_Man_t * p, int i )              { return Abc_NamStr(p->pStrs, i);                                                             }Bac_ManStr205,6419
static inline int            Bac_ManStrId( Bac_Man_t * p, char * pStr )      { return Abc_NamStrFind(p->pStrs, pStr);                                                      }Bac_ManStrId206,6592
static inline char *         Bac_ManPrimName( Bac_Man_t * p, Bac_ObjType_t Type ) { return p->pPrimNames[Type];                                                            }Bac_ManPrimName207,6765
static inline char *         Bac_ManPrimSymb( Bac_Man_t * p, Bac_ObjType_t Type ) { return p->pPrimSymbs[Type];                                                            }Bac_ManPrimSymb208,6938
static inline int            Bac_NtkId( Bac_Ntk_t * p )                      { int i = p - p->pDesign->pNtks; assert(Bac_ManNtkIsOk(p->pDesign, i)); return i;             }Bac_NtkId210,7112
static inline Bac_Man_t *    Bac_NtkMan( Bac_Ntk_t * p )                     { return p->pDesign;                                                                          }Bac_NtkMan211,7285
static inline int            Bac_NtkNameId( Bac_Ntk_t * p )                  { return p->NameId;                                                                           }Bac_NtkNameId212,7458
static inline char *         Bac_NtkName( Bac_Ntk_t * p )                    { return Bac_ManStr(p->pDesign, Bac_NtkNameId(p));                                            }Bac_NtkName213,7631
static inline int            Bac_NtkCopy( Bac_Ntk_t * p )                    { return p->iCopy;                                                                            }Bac_NtkCopy214,7804
static inline Bac_Ntk_t *    Bac_NtkCopyNtk(Bac_Man_t * pNew, Bac_Ntk_t * p) { return Bac_ManNtk(pNew, Bac_NtkCopy(p));                                                    }Bac_NtkCopyNtk215,7977
static inline void           Bac_NtkSetCopy( Bac_Ntk_t * p, int i )          { assert(p->iCopy == -1); p->iCopy = i;                                                       }Bac_NtkSetCopy216,8150
static inline int            Bac_NtkObjNum( Bac_Ntk_t * p )                  { return Vec_StrSize(&p->vType);                                                              }Bac_NtkObjNum218,8324
static inline int            Bac_NtkObjNumAlloc( Bac_Ntk_t * p )             { return Vec_StrCap(&p->vType);                                                               }Bac_NtkObjNumAlloc219,8497
static inline int            Bac_NtkPiNum( Bac_Ntk_t * p )                   { return Vec_IntSize(&p->vInputs);                                                            }Bac_NtkPiNum220,8670
static inline int            Bac_NtkPoNum( Bac_Ntk_t * p )                   { return Vec_IntSize(&p->vOutputs);                                                           }Bac_NtkPoNum221,8843
static inline int            Bac_NtkPioNum( Bac_Ntk_t * p )                  { return Bac_NtkPiNum(p) + Bac_NtkPoNum(p);                                                   }Bac_NtkPioNum222,9016
static inline int            Bac_NtkPiNumAlloc( Bac_Ntk_t * p )              { return Vec_IntCap(&p->vInputs);                                                             }Bac_NtkPiNumAlloc223,9189
static inline int            Bac_NtkPoNumAlloc( Bac_Ntk_t * p )              { return Vec_IntCap(&p->vOutputs);                                                            }Bac_NtkPoNumAlloc224,9362
static inline int            Bac_NtkBiNum( Bac_Ntk_t * p )                   { return Vec_StrCountEntryLit(&p->vType, (char)BAC_OBJ_BI);                                   }Bac_NtkBiNum225,9535
static inline int            Bac_NtkBoNum( Bac_Ntk_t * p )                   { return Vec_StrCountEntryLit(&p->vType, (char)BAC_OBJ_BO);                                   }Bac_NtkBoNum226,9708
static inline int            Bac_NtkCiNum( Bac_Ntk_t * p )                   { return Bac_NtkPiNum(p) + Bac_NtkBoNum(p);                                                   }Bac_NtkCiNum227,9881
static inline int            Bac_NtkCoNum( Bac_Ntk_t * p )                   { return Bac_NtkPoNum(p) + Bac_NtkBiNum(p);                                                   }Bac_NtkCoNum228,10054
static inline int            Bac_NtkBoxNum( Bac_Ntk_t * p )                  { return Bac_NtkObjNum(p) - Vec_StrCountSmallerLit(&p->vType, (char)BAC_OBJ_BOX);             }Bac_NtkBoxNum229,10227
static inline int            Bac_NtkPrimNum( Bac_Ntk_t * p )                 { return Vec_StrCountLargerLit(&p->vType, (char)BAC_OBJ_BOX);                                 }Bac_NtkPrimNum230,10400
static inline int            Bac_NtkUserNum( Bac_Ntk_t * p )                 { return Vec_StrCountEntryLit(&p->vType, (char)BAC_OBJ_BOX);                                  }Bac_NtkUserNum231,10573
static inline int            Bac_NtkPi( Bac_Ntk_t * p, int i )               { return Vec_IntEntry(&p->vInputs, i);                                                        }Bac_NtkPi233,10748
static inline int            Bac_NtkPo( Bac_Ntk_t * p, int i )               { return Vec_IntEntry(&p->vOutputs, i);                                                       }Bac_NtkPo234,10921
static inline char *         Bac_NtkStr( Bac_Ntk_t * p, int i )              { return Bac_ManStr(p->pDesign, i);                                                           }Bac_NtkStr235,11094
static inline Bac_Ntk_t *    Bac_NtkHostNtk( Bac_Ntk_t * p )                 { return p->iBoxNtk > 0 ? Bac_ManNtk(p->pDesign, p->iBoxNtk) : NULL;                          }Bac_NtkHostNtk236,11267
static inline int            Bac_NtkHostObj( Bac_Ntk_t * p )                 { return p->iBoxObj;                                                                          }Bac_NtkHostObj237,11440
static inline void           Bac_NtkSetHost( Bac_Ntk_t * p, int n, int i )   { assert(p->iBoxNtk == -1); p->iBoxNtk = n; p->iBoxObj = i;                                   }Bac_NtkSetHost238,11613
static inline int            Bac_InfoRange( int Beg, int End )               { return End > Beg ? End - Beg + 1 : Beg - End + 1;                                           }Bac_InfoRange240,11787
static inline int            Bac_NtkInfoNum( Bac_Ntk_t * p )                 { return Vec_IntSize(&p->vInfo)/3;                                                            }Bac_NtkInfoNum241,11960
static inline int            Bac_NtkInfoNumAlloc( Bac_Ntk_t * p )            { return Vec_IntCap(&p->vInfo)/3;                                                             }Bac_NtkInfoNumAlloc242,12133
static inline int            Bac_NtkInfoType( Bac_Ntk_t * p, int i )         { return Abc_Lit2Att2(Vec_IntEntry(&p->vInfo, 3*i));                                          }Bac_NtkInfoType243,12306
static inline int            Bac_NtkInfoName( Bac_Ntk_t * p, int i )         { return Abc_Lit2Var2(Vec_IntEntry(&p->vInfo, 3*i));                                          }Bac_NtkInfoName244,12479
static inline int            Bac_NtkInfoBeg( Bac_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vInfo, 3*i+1);                                                      }Bac_NtkInfoBeg245,12652
static inline int            Bac_NtkInfoEnd( Bac_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vInfo, 3*i+2);                                                      }Bac_NtkInfoEnd246,12825
static inline int            Bac_NtkInfoRange( Bac_Ntk_t * p, int i )        { int* a = Vec_IntEntryP(&p->vInfo, 3*i); return a[1]>=0 ? Bac_InfoRange( a[1], a[2] ) : 1;   }Bac_NtkInfoRange247,12998
static inline int            Bac_NtkInfoIndex( Bac_Ntk_t * p, int i, int j ) { int* a = Vec_IntEntryP(&p->vInfo, 3*i); assert(a[1]>=0); return a[1]<a[2] ? a[1]+j : a[1]-j;}Bac_NtkInfoIndex248,13171
static inline void           Bac_NtkAddInfo( Bac_Ntk_t * p,int i,int b,int e){ Vec_IntPush(&p->vInfo, i); Vec_IntPushTwo(&p->vInfo, b, e);                                 }Bac_NtkAddInfo249,13344
static inline void           Bac_NtkSetInfoName( Bac_Ntk_t * p, int i, int n){ Vec_IntWriteEntry( &p->vInfo, 3*i, n );                                                     }Bac_NtkSetInfoName250,13517
static inline void           Bac_NtkStartNames( Bac_Ntk_t * p )              { assert(Bac_NtkObjNumAlloc(p)); Vec_IntFill(&p->vName,   Bac_NtkObjNumAlloc(p),  0);         }Bac_NtkStartNames252,13691
static inline void           Bac_NtkStartFanouts( Bac_Ntk_t * p )            { assert(Bac_NtkObjNumAlloc(p)); Vec_IntFill(&p->vFanout, Bac_NtkObjNumAlloc(p),  0);         }Bac_NtkStartFanouts253,13864
static inline void           Bac_NtkStartCopies( Bac_Ntk_t * p )             { assert(Bac_NtkObjNumAlloc(p)); Vec_IntFill(&p->vCopy,   Bac_NtkObjNumAlloc(p), -1);         }Bac_NtkStartCopies254,14037
static inline void           Bac_NtkFreeNames( Bac_Ntk_t * p )               { Vec_IntErase(&p->vName);                                                                    }Bac_NtkFreeNames255,14210
static inline void           Bac_NtkFreeFanouts( Bac_Ntk_t * p )             { Vec_IntErase(&p->vFanout);                                                                  }Bac_NtkFreeFanouts256,14383
static inline void           Bac_NtkFreeCopies( Bac_Ntk_t * p )              { Vec_IntErase(&p->vCopy);                                                                    }Bac_NtkFreeCopies257,14556
static inline int            Bac_NtkHasNames( Bac_Ntk_t * p )                { return p->vName.pArray != NULL;                                                             }Bac_NtkHasNames258,14729
static inline int            Bac_NtkHasFanouts( Bac_Ntk_t * p )              { return p->vFanout.pArray != NULL;                                                           }Bac_NtkHasFanouts259,14902
static inline int            Bac_NtkHasCopies( Bac_Ntk_t * p )               { return p->vCopy.pArray != NULL;                                                             }Bac_NtkHasCopies260,15075
static inline int            Bac_TypeIsBox( Bac_ObjType_t Type )             { return Type >= BAC_OBJ_BOX && Type < BAC_BOX_UNKNOWN;                                       }Bac_TypeIsBox262,15249
static inline Bac_NameType_t Bac_NameType( int n )                           { assert( n ); return (Bac_NameType_t)Abc_Lit2Att2( n );                                      }Bac_NameType263,15422
static inline int            Bac_CharIsDigit( char c )                       { return c >= '0' && c <= '9'; }Bac_CharIsDigit264,15595
static inline Bac_ObjType_t  Bac_ObjType( Bac_Ntk_t * p, int i )             { return (Bac_ObjType_t)Abc_Lit2Var((int)(unsigned char)Vec_StrEntry(&p->vType, i));          }Bac_ObjType266,15706
static inline int            Bac_ObjIsPi( Bac_Ntk_t * p, int i )             { return Bac_ObjType(p, i) == BAC_OBJ_PI;                                                     }Bac_ObjIsPi267,15879
static inline int            Bac_ObjIsPo( Bac_Ntk_t * p, int i )             { return Bac_ObjType(p, i) == BAC_OBJ_PO;                                                     }Bac_ObjIsPo268,16052
static inline int            Bac_ObjIsPio( Bac_Ntk_t * p, int i )            { return Bac_ObjIsPi(p, i) || Bac_ObjIsPo(p, i);                                              }Bac_ObjIsPio269,16225
static inline int            Bac_ObjIsBi( Bac_Ntk_t * p, int i )             { return Bac_ObjType(p, i) == BAC_OBJ_BI;                                                     }Bac_ObjIsBi270,16398
static inline int            Bac_ObjIsBo( Bac_Ntk_t * p, int i )             { return Bac_ObjType(p, i) == BAC_OBJ_BO;                                                     }Bac_ObjIsBo271,16571
static inline int            Bac_ObjIsBio( Bac_Ntk_t * p, int i )            { return Bac_ObjIsBi(p, i) || Bac_ObjIsBo(p, i);                                              }Bac_ObjIsBio272,16744
static inline int            Bac_ObjIsBox( Bac_Ntk_t * p, int i )            { return Bac_TypeIsBox(Bac_ObjType(p, i));                                                    }Bac_ObjIsBox273,16917
static inline int            Bac_ObjIsBoxUser( Bac_Ntk_t * p, int i )        { return Bac_ObjType(p, i) == BAC_OBJ_BOX;                                                    }Bac_ObjIsBoxUser274,17090
static inline int            Bac_ObjIsBoxPrim( Bac_Ntk_t * p, int i )        { return Bac_ObjIsBox(p, i) && !Bac_ObjIsBoxUser(p, i);                                       }Bac_ObjIsBoxPrim275,17263
static inline int            Bac_ObjIsGate( Bac_Ntk_t * p, int i )           { return Bac_ObjType(p, i) == BAC_BOX_GATE;                                                   }Bac_ObjIsGate276,17436
static inline int            Bac_ObjIsCi( Bac_Ntk_t * p, int i )             { return Bac_ObjIsPi(p, i) || Bac_ObjIsBo(p, i);                                              }Bac_ObjIsCi277,17609
static inline int            Bac_ObjIsCo( Bac_Ntk_t * p, int i )             { return Bac_ObjIsPo(p, i) || Bac_ObjIsBi(p, i);                                              }Bac_ObjIsCo278,17782
static inline int            Bac_ObjIsCio( Bac_Ntk_t * p, int i )            { return Bac_ObjType(p, i) < BAC_OBJ_BOX;                                                     }Bac_ObjIsCio279,17955
static inline int            Bac_ObjIsConst( Bac_Ntk_t * p, int i )          { return Bac_ObjType(p, i) >= BAC_BOX_CF && Bac_ObjType(p, i) <= BAC_BOX_CZ;                  }Bac_ObjIsConst280,18128
static inline int            Bac_ObjIsConstBin( Bac_Ntk_t * p, int i )       { return Bac_ObjType(p, i) == BAC_BOX_CF || Bac_ObjType(p, i) == BAC_BOX_CT;                  }Bac_ObjIsConstBin281,18301
static inline int            Bac_ObjBit( Bac_Ntk_t * p, int i )              { assert(!Bac_ObjIsBox(p, i)); return Abc_LitIsCompl((int)Vec_StrEntry(&p->vType, i));        }Bac_ObjBit283,18475
static inline void           Bac_ObjSetBit( Bac_Ntk_t * p, int i )           { char *q = Vec_StrArray(&p->vType); assert(!Bac_ObjIsBox(p, i)); q[i] = (char)Abc_LitNot((int)q[i]); }Bac_ObjSetBit284,18648
static inline int            Bac_ObjFanin( Bac_Ntk_t * p, int i )            { assert(Bac_ObjIsCo(p, i)); return Vec_IntEntry(&p->vFanin, i);                              }Bac_ObjFanin285,18829
static inline int            Bac_ObjIndex( Bac_Ntk_t * p, int i )            { assert(Bac_ObjIsCio(p, i)); return Vec_IntEntry(&p->vIndex, i);                             }Bac_ObjIndex286,19002
static inline int            Bac_ObjNameInt( Bac_Ntk_t * p, int i )          { assert(!Bac_ObjIsCo(p, i)); return Vec_IntEntry(&p->vName, i);                              }Bac_ObjNameInt287,19175
static inline int            Bac_ObjName( Bac_Ntk_t * p, int i )             { return Bac_ObjIsCo(p, i) ? Bac_ObjNameInt(p, Bac_ObjFanin(p,i)) : Bac_ObjNameInt(p, i);     }Bac_ObjName288,19348
static inline Bac_NameType_t Bac_ObjNameType( Bac_Ntk_t * p, int i )         { return Bac_NameType( Bac_ObjName(p, i) );                                                   }Bac_ObjNameType289,19521
static inline int            Bac_ObjNameId( Bac_Ntk_t * p, int i )           { return Abc_Lit2Var2( Bac_ObjName(p, i) );                                                   }Bac_ObjNameId290,19694
static inline char *         Bac_ObjNameStr( Bac_Ntk_t * p, int i )          { assert(Bac_ObjNameType(p, i) <= BAC_NAME_WORD); return Bac_NtkStr(p, Bac_ObjNameId(p, i));  }Bac_ObjNameStr291,19867
static inline int            Bac_ObjCopy( Bac_Ntk_t * p, int i )             { return Vec_IntEntry(&p->vCopy, i);                                                          }Bac_ObjCopy292,20040
static inline int            Bac_ObjFanout( Bac_Ntk_t * p, int i )           { assert(Bac_ObjIsCi(p, i)); return Vec_IntEntry(&p->vFanout, i);                             }Bac_ObjFanout293,20213
static inline int            Bac_ObjNextFanout( Bac_Ntk_t * p, int i )       { assert(Bac_ObjIsCo(p, i)); return Vec_IntEntry(&p->vFanout, i);                             }Bac_ObjNextFanout294,20386
static inline void           Bac_ObjSetFanout( Bac_Ntk_t * p, int i, int x ) { assert(Bac_ObjIsCi(p, i)); Vec_IntSetEntry(&p->vFanout, i, x);                              }Bac_ObjSetFanout295,20559
static inline void           Bac_ObjSetNextFanout( Bac_Ntk_t * p,int i,int x){ assert(Bac_ObjIsCo(p, i)); Vec_IntSetEntry(&p->vFanout, i, x);                              }Bac_ObjSetNextFanout296,20732
static inline void           Bac_ObjCleanFanin( Bac_Ntk_t * p, int i )       { assert(Bac_ObjFanin(p, i) >= 0 && Bac_ObjIsCo(p, i)); Vec_IntSetEntry( &p->vFanin, i, -1);  }Bac_ObjCleanFanin297,20905
static inline void           Bac_ObjSetFanin( Bac_Ntk_t * p, int i, int x )  { assert(Bac_ObjFanin(p, i) == -1 && Bac_ObjIsCo(p, i)); Vec_IntSetEntry( &p->vFanin, i, x);  }Bac_ObjSetFanin298,21078
static inline void           Bac_ObjSetIndex( Bac_Ntk_t * p, int i, int x )  { assert(Bac_ObjIndex(p, i) == -1); Vec_IntSetEntry( &p->vIndex, i, x );                      }Bac_ObjSetIndex299,21251
static inline void           Bac_ObjSetName( Bac_Ntk_t * p, int i, int x )   { assert(Bac_ObjName(p, i) == 0 && !Bac_ObjIsCo(p, i)); Vec_IntSetEntry( &p->vName, i, x );   }Bac_ObjSetName300,21424
static inline void           Bac_ObjSetCopy( Bac_Ntk_t * p, int i, int x )   { assert(Bac_ObjCopy(p, i) == -1);  Vec_IntSetEntry( &p->vCopy,  i, x );                      }Bac_ObjSetCopy301,21597
static inline int            Bac_ObjGetConst( Bac_Ntk_t * p, int i )         { assert(Bac_ObjIsCi(p, i)); return Bac_ObjIsBo(p, i) && Bac_ObjIsConst(p, i-1) ? Bac_ObjType(p, i-1) : 0;              }Bac_ObjGetConst302,21770
static inline int            Bac_BoxBiNum( Bac_Ntk_t * p, int i )            { int s = i-1; assert(Bac_ObjIsBox(p, i)); while (--i >= 0               && Bac_ObjIsBi(p, i)) {} return s - i;  }Bac_BoxBiNum304,21970
static inline int            Bac_BoxBoNum( Bac_Ntk_t * p, int i )            { int s = i+1; assert(Bac_ObjIsBox(p, i)); while (++i < Bac_NtkObjNum(p) && Bac_ObjIsBo(p, i)) {} return i - s;  }Bac_BoxBoNum305,22162
static inline int            Bac_BoxSize( Bac_Ntk_t * p, int i )             { return 1 + Bac_BoxBiNum(p, i) + Bac_BoxBoNum(p, i);                                         }Bac_BoxSize306,22354
static inline int            Bac_BoxBi( Bac_Ntk_t * p, int b, int i )        { assert(Bac_ObjIsBox(p, b)); return b - 1 - i;                                               }Bac_BoxBi307,22527
static inline int            Bac_BoxBo( Bac_Ntk_t * p, int b, int i )        { assert(Bac_ObjIsBox(p, b)); return b + 1 + i;                                               }Bac_BoxBo308,22700
static inline int            Bac_BoxBoBox( Bac_Ntk_t * p, int i )            { assert(Bac_ObjIsBo(p, i)); return i - 1 - Bac_ObjIndex(p, i);                               }Bac_BoxBoBox310,23048
static inline int            Bac_BoxFanin( Bac_Ntk_t * p, int b, int i )     { return Bac_ObjFanin(p, Bac_BoxBi(p, b, i));                                                 }Bac_BoxFanin311,23221
static inline int            Bac_BoxFaninBox( Bac_Ntk_t * p, int b, int i )  { return Bac_BoxBoBox(p, Bac_BoxFanin(p, b, i));                                              }Bac_BoxFaninBox312,23394
static inline int            Bac_BoxBiRange( Bac_Ntk_t * p, int i )          { int s = i; assert(Bac_ObjIsBi(p, i) && !Bac_ObjBit(p, i)); while (--i >= 0               && Bac_ObjIsBi(p, i) && Bac_ObjBit(p, i)) {} return s - i;  }Bac_BoxBiRange313,23567
static inline int            Bac_BoxBoRange( Bac_Ntk_t * p, int i )          { int s = i; assert(Bac_ObjIsBo(p, i) && !Bac_ObjBit(p, i)); while (++i < Bac_NtkObjNum(p) && Bac_ObjIsBo(p, i) && Bac_ObjBit(p, i)) {} return i - s;  }Bac_BoxBoRange314,23797
static inline int            Bac_ObjPiRange( Bac_Ntk_t * p, int i )          { int s = i; assert(Bac_ObjIsPi(p, i) && !Bac_ObjBit(p, i)); while (++i < Bac_NtkObjNum(p) && Bac_ObjIsPi(p, i) && Bac_ObjBit(p, i)) {} return i - s;  }Bac_ObjPiRange315,24027
static inline int            Bac_BoxNtkId( Bac_Ntk_t * p, int i )            { assert(Bac_ObjIsBox(p, i)); return Vec_IntEntry(&p->vFanin, i);                             }Bac_BoxNtkId317,24258
static inline void           Bac_BoxSetNtkId( Bac_Ntk_t * p, int i, int x )  { assert(Bac_ObjIsBox(p, i)&&Bac_ManNtkIsOk(p->pDesign, x));Vec_IntSetEntry(&p->vFanin, i, x);}Bac_BoxSetNtkId318,24431
static inline int            Bac_BoxBoNtkId( Bac_Ntk_t * p, int i )          { assert(Bac_ObjIsBo(p, i)); return Bac_BoxNtkId(p, Bac_BoxBoBox(p, i));                      }Bac_BoxBoNtkId320,24779
static inline Bac_Ntk_t *    Bac_BoxNtk( Bac_Ntk_t * p, int i )              { return Bac_ManNtk( p->pDesign, Bac_BoxNtkId(p, i) );                                        }Bac_BoxNtk321,24952
static inline Bac_Ntk_t *    Bac_BoxBoNtk( Bac_Ntk_t * p, int i )            { return Bac_ManNtk( p->pDesign, Bac_BoxBoNtkId(p, i) );                                      }Bac_BoxBoNtk323,25300
static inline char *         Bac_BoxNtkName( Bac_Ntk_t * p, int i )          { return Abc_NamStr( p->pDesign->pMods, Bac_BoxNtkId(p, i) );                                 }Bac_BoxNtkName324,25473
#define Bac_ManForEachNtk(Bac_ManForEachNtk334,26087
#define Bac_NtkForEachPi(Bac_NtkForEachPi337,26249
#define Bac_NtkForEachPo(Bac_NtkForEachPo339,26408
#define Bac_NtkForEachPoDriver(Bac_NtkForEachPoDriver341,26567
#define Bac_NtkForEachPiMain(Bac_NtkForEachPiMain344,26744
#define Bac_NtkForEachPoMain(Bac_NtkForEachPoMain346,26938
#define Bac_NtkForEachObj(Bac_NtkForEachObj349,27133
#define Bac_NtkForEachObjType(Bac_NtkForEachObjType351,27257
#define Bac_NtkForEachBox(Bac_NtkForEachBox354,27440
#define Bac_NtkForEachBoxUser(Bac_NtkForEachBoxUser356,27598
#define Bac_NtkForEachBoxPrim(Bac_NtkForEachBoxPrim358,27760
#define Bac_NtkForEachCi(Bac_NtkForEachCi361,27923
#define Bac_NtkForEachCo(Bac_NtkForEachCo363,28080
#define Bac_NtkForEachCio(Bac_NtkForEachCio365,28237
#define Bac_NtkForEachBi(Bac_NtkForEachBi368,28395
#define Bac_NtkForEachBo(Bac_NtkForEachBo370,28551
#define Bac_NtkForEachBio(Bac_NtkForEachBio372,28707
#define Bac_BoxForEachBi(Bac_BoxForEachBi375,28865
#define Bac_BoxForEachBo(Bac_BoxForEachBo377,29028
#define Bac_BoxForEachBiReverse(Bac_BoxForEachBiReverse379,29205
#define Bac_BoxForEachBiMain(Bac_BoxForEachBiMain382,29377
#define Bac_BoxForEachBoMain(Bac_BoxForEachBoMain384,29591
#define Bac_BoxForEachFanin(Bac_BoxForEachFanin387,29806
#define Bac_BoxForEachFaninBox(Bac_BoxForEachFaninBox389,30002
#define Bac_ObjForEachFanout(Bac_ObjForEachFanout392,30202
#define Bac_BoxForEachFanoutBox(Bac_BoxForEachFanoutBox394,30356
static inline int Bac_ObjAlloc( Bac_Ntk_t * p, Bac_ObjType_t Type, int Fanin )Bac_ObjAlloc412,31072
static inline int Bac_ObjDup( Bac_Ntk_t * pNew, Bac_Ntk_t * p, int i )Bac_ObjDup424,31498
static inline int Bac_BoxAlloc( Bac_Ntk_t * p, Bac_ObjType_t Type, int nIns, int nOuts, int iNtk )Bac_BoxAlloc432,31861
static inline int Bac_BoxDup( Bac_Ntk_t * pNew, Bac_Ntk_t * p, int iBox )Bac_BoxDup442,32198
static inline void Bac_BoxDelete( Bac_Ntk_t * p, int iBox )Bac_BoxDelete456,32783
static inline void Bac_BoxReplace( Bac_Ntk_t * p, int iBox, int * pArray, int nSize )Bac_BoxReplace470,33268
static inline Vec_Int_t * Bac_BoxCollectRanges( Bac_Ntk_t * p, int iBox )Bac_BoxCollectRanges480,33608
static inline void Vec_StrPrint( Vec_Str_t * p, int fInt )Vec_StrPrint511,34509
static inline void Bac_NtkAlloc( Bac_Ntk_t * pNew, int NameId, int nIns, int nOuts, int nObjs )Bac_NtkAlloc533,35012
static inline void Bac_NtkDup( Bac_Ntk_t * pNew, Bac_Ntk_t * p )Bac_NtkDup554,35808
static inline void Bac_NtkDupUserBoxes( Bac_Ntk_t * pNew, Bac_Ntk_t * p )Bac_NtkDupUserBoxes575,36667
static inline void Bac_NtkMoveNames( Bac_Ntk_t * pNew, Bac_Ntk_t * p )Bac_NtkMoveNames594,37480
static inline void Bac_NtkFree( Bac_Ntk_t * p )Bac_NtkFree617,38520
static inline int Bac_NtkMemory( Bac_Ntk_t * p )Bac_NtkMemory631,38949
static inline void Bac_NtkPrintStats( Bac_Ntk_t * p )Bac_NtkPrintStats645,39449
static inline void Bac_NtkDeriveIndex( Bac_Ntk_t * p )Bac_NtkDeriveIndex657,39887
static inline void Bac_NtkPrint( Bac_Ntk_t * p )Bac_NtkPrint673,40396
static inline Bac_Man_t * Bac_ManAlloc( char * pFileName, int nNtks )Bac_ManAlloc719,41825
static inline Bac_Man_t * Bac_ManStart( Bac_Man_t * p, int nNtks )Bac_ManStart736,42489
static inline Bac_Man_t * Bac_ManDup( Bac_Man_t * p )Bac_ManDup751,43018
static inline Bac_Man_t * Bac_ManDupUserBoxes( Bac_Man_t * p )Bac_ManDupUserBoxes764,43556
static inline void Bac_ManMoveNames( Bac_Man_t * pNew, Bac_Man_t * p )Bac_ManMoveNames777,44112
static inline void Bac_ManFree( Bac_Man_t * p )Bac_ManFree785,44316
static inline int Bac_ManMemory( Bac_Man_t * p )Bac_ManMemory801,44771
static inline int Bac_ManObjNum( Bac_Man_t * p )Bac_ManObjNum815,45165
static inline int Bac_ManNodeNum( Bac_Man_t * p )Bac_ManNodeNum822,45350
static inline int Bac_ManBoxNum_rec( Bac_Ntk_t * p )Bac_ManBoxNum_rec829,45538
static inline int Bac_ManBoxNum( Bac_Man_t * p )Bac_ManBoxNum838,45831
static inline void Bac_ManPrintStats( Bac_Man_t * p, int nModules, int fVerbose )Bac_ManPrintStats845,46023
static inline Bac_ObjType_t Ptr_SopToType( char * pSop )Ptr_SopToType881,47032
static inline char * Ptr_SopToTypeName( char * pSop )Ptr_SopToTypeName901,48052
static inline char * Ptr_TypeToName( Bac_ObjType_t Type )Ptr_TypeToName921,49091
static inline char * Ptr_TypeToSop( Bac_ObjType_t Type )Ptr_TypeToSop942,49958

src/base/bac/bacReadSmt.c,0

src/base/bac/bacWriteBlif.c,1004
static void Psr_ManWriteBlifArray( FILE * pFile, Psr_Ntk_t * p, Vec_Int_t * vFanins )Psr_ManWriteBlifArray47,1347
static void Psr_ManWriteBlifLines( FILE * pFile, Psr_Ntk_t * p )Psr_ManWriteBlifLines54,1586
static void Psr_ManWriteBlifNtk( FILE * pFile, Psr_Ntk_t * p )Psr_ManWriteBlifNtk87,2815
void Psr_ManWriteBlif( char * pFileName, Vec_Ptr_t * vPrs )Psr_ManWriteBlif103,3393
void Bac_ManWriteBlifGate( FILE * pFile, Bac_Ntk_t * p, Mio_Gate_t * pGate, Vec_Int_t * vFanins, int iObj )Bac_ManWriteBlifGate131,4172
void Bac_ManWriteBlifArray( FILE * pFile, Bac_Ntk_t * p, Vec_Int_t * vFanins, int iObj )Bac_ManWriteBlifArray139,4556
void Bac_ManWriteBlifArray2( FILE * pFile, Bac_Ntk_t * p, int iObj )Bac_ManWriteBlifArray2148,4881
void Bac_ManWriteBlifLines( FILE * pFile, Bac_Ntk_t * p )Bac_ManWriteBlifLines158,5348
void Bac_ManWriteBlifNtk( FILE * pFile, Bac_Ntk_t * p )Bac_ManWriteBlifNtk192,6766
void Bac_ManWriteBlif( char * pFileName, Bac_Man_t * p )Bac_ManWriteBlif205,7232

src/base/bac/bacCom.c,1469
static inline Bac_Man_t * Bac_AbcGetMan( Abc_Frame_t * pAbc )                       { return (Bac_Man_t *)pAbc->pAbcBac;                        }Bac_AbcGetMan41,1496
static inline void        Bac_AbcFreeMan( Abc_Frame_t * pAbc )                      { if ( pAbc->pAbcBac ) Bac_ManFree(Bac_AbcGetMan(pAbc));    }Bac_AbcFreeMan42,1642
static inline void        Bac_AbcUpdateMan( Abc_Frame_t * pAbc, Bac_Man_t * p )     { Bac_AbcFreeMan(pAbc); pAbc->pAbcBac = p;                  }Bac_AbcUpdateMan43,1788
void Abc_FrameImportPtr( Vec_Ptr_t * vPtr )Abc_FrameImportPtr60,2416
Vec_Ptr_t * Abc_FrameExportPtr()Abc_FrameExportPtr73,2774
void Bac_Init( Abc_Frame_t * pAbc )Bac_Init102,3477
void Bac_End( Abc_Frame_t * pAbc )Bac_End125,4447
int Bac_CommandRead( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandRead142,4749
int Bac_CommandWrite( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandWrite256,8418
int Bac_CommandPs( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandPs346,11186
int Bac_CommandPut( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandPut402,12833
int Bac_CommandGet( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandGet457,14388
int Bac_CommandClp( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandClp523,16258
int Bac_CommandCec( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandCec568,17463
int Bac_CommandTest( Abc_Frame_t * pAbc, int argc, char ** argv )Bac_CommandTest682,21000

src/base/acb/acbCom.c,0

src/base/acb/acbAig.c,0

src/base/acb/acbFunc.c,9024
    ACB_NONE = 0,  // 0:  unusedACB_NONE39,1047
    ACB_MODULE,    // 1:  "module"ACB_MODULE40,1080
    ACB_ENDMODULE, // 2:  "endmodule"ACB_ENDMODULE41,1115
    ACB_INPUT,     // 3:  "input"ACB_INPUT42,1153
    ACB_OUTPUT,    // 4:  "output"ACB_OUTPUT43,1187
    ACB_WIRE,      // 5:  "wire"ACB_WIRE44,1222
    ACB_BUF,       // 6:  "buf"ACB_BUF45,1255
    ACB_NOT,       // 7:  "not"ACB_NOT46,1287
    ACB_AND,       // 8:  "and"ACB_AND47,1319
    ACB_NAND,      // 9:  "nand"ACB_NAND48,1351
    ACB_OR,        // 10: "or"ACB_OR49,1384
    ACB_NOR,       // 11: "nor"ACB_NOR50,1415
    ACB_XOR,       // 12: "xor"ACB_XOR51,1447
    ACB_XNOR,      // 13: "xnor"ACB_XNOR52,1479
    ACB_MUX,       // 14: "_HMUX"ACB_MUX53,1512
    ACB_DC,        // 15: "_DC"ACB_DC54,1546
    ACB_UNUSED     // 14: unusedACB_UNUSED55,1578
} Acb_KeyWords_t; Acb_KeyWords_t56,1611
static inline char * Acb_Num2Name( int i )Acb_Num2Name58,1631
static inline int Acb_Type2Oper( int i )Acb_Type2Oper78,2224
static inline char * Acb_Oper2Name( int i )Acb_Oper2Name94,2749
char * pLibStr[25] = {pLibStr128,3977
char * pLibStr2[25] = {pLibStr2148,5367
void Acb_IntallLibrary( int f2Ins )Acb_IntallLibrary160,6118
Abc_Nam_t * Acb_VerilogStartNames()Acb_VerilogStartNames189,7076
void Acb_VerilogRemoveComments ( char * pBuffer )Acb_VerilogRemoveComments200,7380
Vec_Int_t * Acb_VerilogSimpleLex( char * pFileName, Abc_Nam_t * pNames )Acb_VerilogSimpleLex208,7626
int Acb_WireIsTarget( int Token, Abc_Nam_t * pNames )Acb_WireIsTarget240,8723
void * Acb_VerilogSimpleParse( Vec_Int_t * vBuffer, Abc_Nam_t * pNames )Acb_VerilogSimpleParse245,8871
Vec_Int_t * Acb_ReadWeightMap( char * pFileName, Abc_Nam_t * pNames )Acb_ReadWeightMap340,12861
Acb_Ntk_t * Acb_VerilogSimpleRead( char * pFileName, char * pFileNameW )Acb_VerilogSimpleRead377,13989
void Acb_VerilogSimpleWrite( Acb_Ntk_t * p, char * pFileName )Acb_VerilogSimpleWrite415,15358
int Acb_NtkFindRoots_rec( Acb_Ntk_t * p, int iObj, Vec_Bit_t * vBlock )Acb_NtkFindRoots_rec490,17995
Vec_Int_t * Acb_NtkFindRoots( Acb_Ntk_t * p, Vec_Int_t * vTargets, Vec_Bit_t ** pvBlock )Acb_NtkFindRoots504,18497
void Acb_NtkFindSupp_rec( Acb_Ntk_t * p, int iObj, Vec_Int_t * vSupp )Acb_NtkFindSupp_rec544,19700
Vec_Int_t * Acb_NtkFindSupp( Acb_Ntk_t * p, Vec_Int_t * vRoots )Acb_NtkFindSupp555,20069
int Acb_NtkFindDivs_rec( Acb_Ntk_t * p, int iObj )Acb_NtkFindDivs_rec578,20703
Vec_Int_t * Acb_NtkFindDivsCis( Acb_Ntk_t * p, Vec_Int_t * vSupp )Acb_NtkFindDivsCis592,21135
Vec_Int_t * Acb_NtkFindDivs( Acb_Ntk_t * p, Vec_Int_t * vSupp, Vec_Bit_t * vBlock, int fVerbose )Acb_NtkFindDivs604,21546
void Acb_NtkFindNodes_rec( Acb_Ntk_t * p, int iObj, Vec_Int_t * vNodes )Acb_NtkFindNodes_rec665,23784
Vec_Int_t * Acb_NtkFindNodes( Acb_Ntk_t * p, Vec_Int_t * vRoots, Vec_Int_t * vDivs )Acb_NtkFindNodes677,24173
int Acb_ObjToGia( Gia_Man_t * pNew, Acb_Ntk_t * p, int iObj, Vec_Int_t * vTemp )Acb_ObjToGia701,24851
Gia_Man_t * Acb_NtkToGia( Acb_Ntk_t * p, Vec_Int_t * vSupp, Vec_Int_t * vNodes, Vec_Int_t * vRoots, Vec_Int_t * vDivs, Vec_Int_t * vTargets )Acb_NtkToGia745,26413
Gia_Man_t * Acb_CreateMiter( Gia_Man_t * pF, Gia_Man_t * pG )Acb_CreateMiter791,28143
#define NWORDS NWORDS836,29672
void Vec_IntPermute( Vec_Int_t * p )Vec_IntPermute838,29692
void Vec_IntPermute2( Vec_Int_t * p )Vec_IntPermute2850,29957
void Acb_PrintPatterns( Vec_Wrd_t * vPats, int nPats, Vec_Int_t * vWeights )Acb_PrintPatterns865,30307
Vec_Int_t * Acb_DeriveWeights( Vec_Int_t * vDivs, Acb_Ntk_t * pNtkF )Acb_DeriveWeights906,31475
int Acb_ComputeSuppCost( Vec_Int_t * vSupp, Vec_Int_t * vWeights, int iFirstDiv )Acb_ComputeSuppCost914,31765
Vec_Int_t * Acb_FindSupportStart( sat_solver * pSat, int iFirstDiv, Vec_Int_t * vWeights, Vec_Wrd_t ** pvPats, int * piPats )Acb_FindSupportStart921,32013
int Acb_FindArgMaxUnderMask( Vec_Wrd_t * vPats, word Mask[NWORDS], Vec_Int_t * vWeights, int nPats )Acb_FindArgMaxUnderMask967,33471
int Acb_FindArgMaxUnderMask2( Vec_Wrd_t * vPats, word Mask[NWORDS], Vec_Int_t * vWeights, int nPats )Acb_FindArgMaxUnderMask2987,34246
Vec_Int_t * Acb_FindSupportNext( sat_solver * pSat, int iFirstDiv, Vec_Int_t * vWeights, Vec_Wrd_t * vPats, int * pnPats )Acb_FindSupportNext1019,35271
Vec_Int_t * Acb_FindSupportMinOne( sat_solver * pSat, int iFirstDiv, Vec_Wrd_t * vPats, int * pnPats, Vec_Int_t * vSupp, int iVar )Acb_FindSupportMinOne1059,36809
Vec_Int_t * Acb_FindSupportMin( sat_solver * pSat, int iFirstDiv, Vec_Wrd_t * vPats, int * pnPats, Vec_Int_t * vSuppStart )Acb_FindSupportMin1085,37705
void Acb_FindReplace( sat_solver * pSat, int iFirstDiv, Vec_Int_t * vWeights, Vec_Wrd_t * vPats, int nPats, Vec_Int_t * vSupp )Acb_FindReplace1098,38188
Vec_Int_t * Acb_FindSupport( sat_solver * pSat, int iFirstDiv, Vec_Int_t * vWeights, Vec_Int_t * vSuppStart, int TimeOut )Acb_FindSupport1146,40259
Vec_Int_t * Acb_DerivePatchSupport( Cnf_Dat_t * pCnf, int iTar, int nTargets, int nCoDivs, Vec_Int_t * vDivs, Acb_Ntk_t * pNtkF, Vec_Int_t * vSuppOld, int TimeOut )Acb_DerivePatchSupport1207,42330
static inline int satoko_add_xor( satoko_t * pSat, int iVarA, int iVarB, int iVarC, int fCompl )satoko_add_xor1369,49192
Vec_Int_t * Acb_DerivePatchSupportS( Cnf_Dat_t * pCnf, int nCiTars, int nCoDivs, Vec_Int_t * vDivs, Acb_Ntk_t * pNtkF, Vec_Int_t * vSuppOld, int TimeOut )Acb_DerivePatchSupportS1400,50121
char * Acb_EnumerateSatAssigns( sat_solver * pSat, int PivotVar, int FreeVar, Vec_Int_t * vDivVars, Vec_Int_t * vTempLits, Vec_Str_t * vTempSop )Acb_EnumerateSatAssigns1542,55422
char * Acb_DeriveOnePatchFunction( Cnf_Dat_t * pCnf, int iTar, int nTargets, int nCoDivs, Vec_Int_t * vUsed, int fCisOnly )Acb_DeriveOnePatchFunction1725,62998
int Acb_CheckMiter( Cnf_Dat_t * pCnf )Acb_CheckMiter1775,64822
void Acb_CollectIntNodes_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Acb_CollectIntNodes_rec1805,65724
void Acb_CollectIntNodes( Gia_Man_t * p, Vec_Int_t * vNodes0, Vec_Int_t * vNodes1 )Acb_CollectIntNodes1815,66116
Gia_Man_t * Acb_UpdateMiter( Gia_Man_t * pM, Gia_Man_t * pOne, int iTar, int nTargets, Vec_Int_t * vUsed, int fCisOnly )Acb_UpdateMiter1831,66712
Vec_Str_t * Acb_GenerateInstance( Acb_Ntk_t * p, Vec_Int_t * vDivs, Vec_Int_t * vUsed, Vec_Int_t * vTars )Acb_GenerateInstance1899,69283
Vec_Ptr_t * Acb_GenerateSignalNames( Acb_Ntk_t * p, Vec_Int_t * vDivs, Vec_Int_t * vUsed, int nNodes, Vec_Int_t * vTars, Vec_Wec_t * vGates )Acb_GenerateSignalNames1912,69881
Vec_Int_t * Acb_GetUsedDivs( Vec_Int_t * vDivs, Vec_Int_t * vUsed )Acb_GetUsedDivs1937,71097
Vec_Ptr_t * Acb_SignalNames( Acb_Ntk_t * p, Vec_Int_t * vObjs )Acb_SignalNames1945,71351
Vec_Str_t * Acb_GeneratePatch( Acb_Ntk_t * p, Vec_Int_t * vDivs, Vec_Int_t * vUsed, Vec_Ptr_t * vSops, Vec_Ptr_t * vGias, Vec_Int_t * vTars )Acb_GeneratePatch1953,71614
Vec_Str_t * Acb_GenerateInstance2( Vec_Ptr_t * vIns, Vec_Ptr_t * vOuts )Acb_GenerateInstance22077,78052
Vec_Ptr_t * Acb_GenerateSignalNames2( Vec_Wec_t * vGates, Vec_Ptr_t * vIns, Vec_Ptr_t * vOuts )Acb_GenerateSignalNames22090,78564
Vec_Str_t * Acb_GeneratePatch2( Gia_Man_t * pGia, Vec_Ptr_t * vIns, Vec_Ptr_t * vOuts )Acb_GeneratePatch22116,79689
void Acb_GenerateFile2( Gia_Man_t * pGia, Vec_Ptr_t * vIns, Vec_Ptr_t * vOuts, char * pFileName, char * pFileNameOut, int fSkipMffc )Acb_GenerateFile22182,82411
void Acb_GenerateFilePatch( Vec_Str_t * p, char * pFileNamePatch )Acb_GenerateFilePatch2213,83829
void Acb_GenerateFileOut( Vec_Str_t * vPatchLine, char * pFileNameF, char * pFileNameOut, Vec_Str_t * vPatch )Acb_GenerateFileOut2221,84050
void Acb_PrintPatch( Acb_Ntk_t * pNtkF, Vec_Int_t * vDivs, Vec_Int_t * vUsed, abctime clk )Acb_PrintPatch2253,85079
Gia_Man_t * Acb_NtkEcoSynthesize( Gia_Man_t * p )Acb_NtkEcoSynthesize2278,85899
Cnf_Dat_t * Acb_NtkDeriveMiterCnf( Gia_Man_t * p, int iTar, int nTars, int fVerbose )Acb_NtkDeriveMiterCnf2317,86950
Gia_Man_t * Gia_ManInterOneInt( Gia_Man_t * pCof1, Gia_Man_t * pCof0, int Depth )Gia_ManInterOneInt2364,88925
Gia_Man_t * Acb_NtkDeriveMiterCnfInter2( Gia_Man_t * p, int iTar, int nTars )Acb_NtkDeriveMiterCnfInter22428,91475
Gia_Man_t * Acb_NtkDeriveMiterCnfInter( Gia_Man_t * p, int iTar, int nTars )Acb_NtkDeriveMiterCnfInter2469,92997
char * Acb_RemapOneFunction( char * pStr, Vec_Int_t * vSupp, Vec_Int_t * vMap, int nVars )Acb_RemapOneFunction2503,93967
Vec_Ptr_t * Acb_TransformPatchFunctions( Vec_Ptr_t * vSops, Vec_Wec_t * vSupps, Vec_Int_t ** pvUsed, int nDivs )Acb_TransformPatchFunctions2526,94842
int Acb_NtkEcoPerform( Acb_Ntk_t * pNtkF, Acb_Ntk_t * pNtkG, char * pFileName[4], int fCisOnly, int fInputs, int fCheck, int fVerbose, int fVeryVerbose )Acb_NtkEcoPerform2586,96895
void Acb_NtkTestRun2( char * pFileNames[3], int fVerbose )Acb_NtkTestRun22809,104603
void Acb_NtkRunEco( char * pFileNames[4], int fCheck, int fRandom, int fInputs, int fVerbose, int fVeryVerbose )Acb_NtkRunEco2829,105191

src/base/acb/acbPar.h,1359
#define ABC__base__acb__acbPar_hABC__base__acb__acbPar_h22,547
typedef struct Acb_Par_t_ Acb_Par_t;Acb_Par_t38,1270
struct Acb_Par_t_Acb_Par_t_39,1307
    int             nLutSize;      // LUT sizenLutSize41,1327
    int             nTfoLevMax;    // the maximum fanout levelsnTfoLevMax42,1374
    int             nTfiLevMax;    // the maximum fanin levelsnTfiLevMax43,1438
    int             nFanoutMax;    // the maximum number of fanoutsnFanoutMax44,1501
    int             nWinNodeMax;   // the maximum number of nodes in the windownWinNodeMax45,1569
    int             nGrowthLevel;  // the maximum allowed growth in levelnGrowthLevel46,1649
    int             nBTLimit;      // the maximum number of conflicts in one SAT runnBTLimit47,1723
    int             nNodesMax;     // the maximum number of nodes to trynNodesMax48,1808
    int             fUseAshen;     // user Ashenhurst decompositionfUseAshen49,1881
    int             iNodeOne;      // one particular node to tryiNodeOne50,1949
    int             fArea;         // performs optimization for areafArea51,2014
    int             fMoreEffort;   // performs high-affort minimizationfMoreEffort52,2083
    int             fVerbose;      // enable basic statsfVerbose53,2155
    int             fVeryVerbose;  // enable detailed statsfVeryVerbose54,2212

src/base/acb/acbMfs.c,7027
static inline int Acb_ObjIsDelayCriticalFanin( Acb_Ntk_t * p, int i, int f )  { return !Acb_ObjIsCi(p, f) && Acb_ObjLevelR(p, i) + Acb_ObjLevelD(p, f) == p->LevelMax; }Acb_ObjIsDelayCriticalFanin34,922
static inline int Acb_ObjIsAreaCritical( Acb_Ntk_t * p, int f )               { return !Acb_ObjIsCi(p, f) && Acb_ObjFanoutNum(p, f) == 1;                              }Acb_ObjIsAreaCritical35,1091
static inline int Acb_ObjIsCritical( Acb_Ntk_t * p, int i, int f, int fDel )  { return fDel ? Acb_ObjIsDelayCriticalFanin(p, i, f) : Acb_ObjIsAreaCritical(p, f);      }Acb_ObjIsCritical36,1260
int Acb_DeriveCnfFromTruth( word Truth, int nVars, Vec_Int_t * vCover, Vec_Str_t * vCnf )Acb_DeriveCnfFromTruth53,1919
void Acb_DeriveCnfForWindowOne( Acb_Ntk_t * p, int iObj )Acb_DeriveCnfForWindowOne93,3292
Vec_Wec_t * Acb_DeriveCnfForWindow( Acb_Ntk_t * p, Vec_Int_t * vWin, int PivotVar )Acb_DeriveCnfForWindow104,3844
void Acb_TranslateCnf( Vec_Int_t * vClas, Vec_Int_t * vLits, Vec_Str_t * vCnf, Vec_Int_t * vSatVars, int iPivotVar )Acb_TranslateCnf139,5152
int Acb_NtkCountRoots( Vec_Int_t * vWinObjs, int PivotVar )Acb_NtkCountRoots155,5663
void Acb_DeriveCnfForNode( Acb_Ntk_t * p, int iObj, sat_solver * pSat, int OutVar )Acb_DeriveCnfForNode162,5888
Cnf_Dat_t * Acb_NtkWindow2Cnf( Acb_Ntk_t * p, Vec_Int_t * vWinObjs, int Pivot )Acb_NtkWindow2Cnf190,6946
void Acb_NtkWindowUndo( Acb_Ntk_t * p, Vec_Int_t * vWin )Acb_NtkWindowUndo277,11036
int Acb_NtkWindow2Solver( sat_solver * pSat, Cnf_Dat_t * pCnf, Vec_Int_t * vFlip, int PivotVar, int nDivs, int nTimes )Acb_NtkWindow2Solver298,11599
word Acb_ComputeFunction( sat_solver * pSat, int PivotVar, int FreeVar, Vec_Int_t * vDivVars, int fCompl )Acb_ComputeFunction347,13495
void Acb_NtkPrintVec( Acb_Ntk_t * p, Vec_Int_t * vVec, char * pName )Acb_NtkPrintVec428,16338
void Acb_NtkPrintVec2( Acb_Ntk_t * p, Vec_Int_t * vVec, char * pName )Acb_NtkPrintVec2436,16554
void Acb_NtkPrintVecWin( Acb_Ntk_t * p, Vec_Int_t * vVec, char * pName )Acb_NtkPrintVecWin444,16779
void Acb_NtkDivisors_rec( Acb_Ntk_t * p, int iObj, int nTfiLevMin, Vec_Int_t * vDivs )Acb_NtkDivisors_rec464,17292
Vec_Int_t * Acb_NtkDivisors( Acb_Ntk_t * p, int Pivot, int nTfiLevMin, int fDelay )Acb_NtkDivisors476,17764
void Acb_ObjMarkTfo_rec( Acb_Ntk_t * p, int iObj, int nTfoLevMax, int nFanMax, Vec_Int_t * vMarked )Acb_ObjMarkTfo_rec531,19775
Vec_Int_t * Acb_ObjMarkTfo( Acb_Ntk_t * p, Vec_Int_t * vDivs, int Pivot, int nTfoLevMax, int nFanMax )Acb_ObjMarkTfo542,20212
void Acb_ObjMarkTfo2( Acb_Ntk_t * p, Vec_Int_t * vMarked )Acb_ObjMarkTfo2553,20614
int Acb_ObjLabelTfo_rec( Acb_Ntk_t * p, int iObj, int nTfoLevMax, int nFanMax, int fFirst )Acb_ObjLabelTfo_rec572,21157
int Acb_ObjLabelTfo( Acb_Ntk_t * p, int Root, int nTfoLevMax, int nFanMax, int fDelay )Acb_ObjLabelTfo595,22181
void Acb_ObjDeriveTfo_rec( Acb_Ntk_t * p, int iObj, Vec_Int_t * vTfo, Vec_Int_t * vRoots, int fFirst )Acb_ObjDeriveTfo_rec615,22795
void Acb_ObjDeriveTfo( Acb_Ntk_t * p, int Pivot, int nTfoLevMax, int nFanMax, Vec_Int_t ** pvTfo, Vec_Int_t ** pvRoots, int fDelay )Acb_ObjDeriveTfo632,23383
Vec_Int_t * Acb_NtkCollectTfoSideInputs( Acb_Ntk_t * p, int Pivot, Vec_Int_t * vTfo )Acb_NtkCollectTfoSideInputs660,24347
void Acb_NtkCollectNewTfi1_rec( Acb_Ntk_t * p, int iObj, Vec_Int_t * vTfiNew )Acb_NtkCollectNewTfi1_rec687,25224
void Acb_NtkCollectNewTfi2_rec( Acb_Ntk_t * p, int iObj, Vec_Int_t * vTfiNew )Acb_NtkCollectNewTfi2_rec698,25600
Vec_Int_t * Acb_NtkCollectNewTfi( Acb_Ntk_t * p, int Pivot, Vec_Int_t * vDivs, Vec_Int_t * vSide, int * pnDivs )Acb_NtkCollectNewTfi709,26027
Vec_Int_t * Acb_NtkCollectWindow( Acb_Ntk_t * p, int Pivot, Vec_Int_t * vTfi, Vec_Int_t * vTfo, Vec_Int_t * vRoots )Acb_NtkCollectWindow747,27155
Vec_Int_t * Acb_NtkWindow( Acb_Ntk_t * p, int Pivot, int nTfiLevs, int nTfoLevs, int nFanMax, int fDelay, int * pnDivs )Acb_NtkWindow789,28461
static inline void Vec_IntVars2Vars( Vec_Int_t * p, int Shift )Vec_IntVars2Vars838,30262
static inline void Vec_IntVars2Lits( Vec_Int_t * p, int Shift, int fCompl )Vec_IntVars2Lits844,30409
static inline void Vec_IntLits2Vars( Vec_Int_t * p, int Shift )Vec_IntLits2Vars850,30605
static inline void Vec_IntRemap( Vec_Int_t * p, Vec_Int_t * vMap )Vec_IntRemap856,30781
static inline void Acb_WinPrint( Acb_Ntk_t * p, Vec_Int_t * vWin, int Pivot, int nDivs )Acb_WinPrint863,30958
static inline void Acb_NtkOrderByRefCount( Acb_Ntk_t * p, Vec_Int_t * vSupp )Acb_NtkOrderByRefCount879,31441
static inline void Acb_NtkRemapIntoSatVariables( Acb_Ntk_t * p, Vec_Int_t * vSupp )Acb_NtkRemapIntoSatVariables893,31890
int Acb_NtkFindSupp1( Acb_Ntk_t * p, int Pivot, sat_solver * pSat, int nVars, int nDivs, Vec_Int_t * vWin, Vec_Int_t * vSupp )Acb_NtkFindSupp1914,32398
static int StrCount = 0;StrCount933,33289
int Acb_NtkFindSupp2( Acb_Ntk_t * p, int Pivot, sat_solver * pSat, int nVars, int nDivs, Vec_Int_t * vWin, Vec_Int_t * vSupp, int nLutSize, int fDelay )Acb_NtkFindSupp2935,33315
int Acb_NtkFindSupp3( Acb_Ntk_t * p, int Pivot, sat_solver * pSat, int nVars, int nDivs, Vec_Int_t * vWin, Vec_Int_t * vSupp, int nLutSize, int fDelay )Acb_NtkFindSupp31007,36785
typedef struct Acb_Mfs_t_ Acb_Mfs_t;Acb_Mfs_t1154,43028
struct Acb_Mfs_t_Acb_Mfs_t_1155,43065
    Acb_Ntk_t *     pNtk;        // networkpNtk1157,43085
    Acb_Par_t *     pPars;       // parameterspPars1158,43129
    sat_solver *    pSat[3];     // SAT solverspSat1159,43176
    Vec_Int_t *     vSupp;       // supportvSupp1160,43224
    Vec_Int_t *     vFlip;       // supportvFlip1161,43268
    Vec_Int_t *     vValues;     // supportvValues1162,43312
    int             nNodes;      // nodesnNodes1163,43356
    int             nWins;       // windowsnWins1164,43398
    int             nWinsAll;    // windowsnWinsAll1165,43442
    int             nDivsAll;    // windowsnDivsAll1166,43486
    int             nChanges[8]; // changesnChanges1167,43530
    int             nOvers;      // overflowsnOvers1168,43574
    int             nTwoNodes;   // two nodesnTwoNodes1169,43620
    abctime         timeTotal;timeTotal1170,43666
    abctime         timeCnf;timeCnf1171,43697
    abctime         timeSol;timeSol1172,43726
    abctime         timeWin;timeWin1173,43755
    abctime         timeSat;timeSat1174,43784
    abctime         timeSatU;timeSatU1175,43813
    abctime         timeSatS;timeSatS1176,43843
Acb_Mfs_t * Acb_MfsStart( Acb_Ntk_t * pNtk, Acb_Par_t * pPars )Acb_MfsStart1178,43876
void Acb_MfsStop( Acb_Mfs_t * p )Acb_MfsStop1192,44323
static inline int Acb_NtkObjMffcEstimate( Acb_Ntk_t * pNtk, int iObj )Acb_NtkObjMffcEstimate1202,44580
void Acb_NtkOptNodeAnalyze( Acb_Mfs_t * p, int PivotVar, int nDivs, int nValues, int * pValues, Vec_Int_t * vSupp )Acb_NtkOptNodeAnalyze1227,45305
int Acb_NtkOptNode( Acb_Mfs_t * p, int Pivot )Acb_NtkOptNode1295,47407
void Acb_NtkOpt( Acb_Ntk_t * pNtk, Acb_Par_t * pPars )Acb_NtkOpt1576,59054

src/base/acb/acbTest.c,1769
static int fForceZero = 0;fForceZero34,903
void Gia_ManSimTry( Gia_Man_t * pF, Gia_Man_t * pG )Gia_ManSimTry51,1385
void Gia_ManDualNot( Gia_Man_t * p, int LitA[2], int LitZ[2] )Gia_ManDualNot144,4833
void Gia_ManDualXor2( Gia_Man_t * p, int LitA[2], int LitB[2], int LitZ[2] )Gia_ManDualXor2152,5138
void Gia_ManDualXorN( Gia_Man_t * p, int * pLits, int n, int LitZ[2] )Gia_ManDualXorN159,5418
void Gia_ManDualAnd2( Gia_Man_t * p, int LitA[2], int LitB[2], int LitZ[2] )Gia_ManDualAnd2171,5788
void Gia_ManDualAndN( Gia_Man_t * p, int * pLits, int n, int LitZ[2] )Gia_ManDualAndN183,6544
void Gia_ManDualDc( Gia_Man_t * p, int LitC[2], int LitD[2], int LitZ[2] )Gia_ManDualDc205,7217
void Gia_ManDualMux( Gia_Man_t * p, int LitC[2], int LitT[2], int LitE[2], int LitZ[2] )Gia_ManDualMux213,7549
int Gia_ManDualCompare( Gia_Man_t * p, int LitF[2], int LitS[2] )Gia_ManDualCompare238,8758
void Acb_ObjToGiaDual( Gia_Man_t * pNew, Acb_Ntk_t * p, int iObj, Vec_Int_t * vTemp, Vec_Int_t * vCopies, int pRes[2] )Acb_ObjToGiaDual257,9251
Gia_Man_t * Acb_NtkGiaDeriveDual( Acb_Ntk_t * p )Acb_NtkGiaDeriveDual344,12427
Gia_Man_t * Acb_NtkGiaDeriveMiter( Gia_Man_t * pOne, Gia_Man_t * pTwo, int Type )Acb_NtkGiaDeriveMiter395,13913
void Acb_OutputFile( char * pFileName, Acb_Ntk_t * pNtkF, int * pModel )Acb_OutputFile467,16588
int * Acb_NtkSolve( Gia_Man_t * p )Acb_NtkSolve494,17305
void Acb_NtkPrintCecStats( Acb_Ntk_t * pNtk )Acb_NtkPrintCecStats530,18431
void Acb_NtkUpdateCiOrder( Acb_Ntk_t * pNtkF, Acb_Ntk_t * pNtkG )Acb_NtkUpdateCiOrder558,19217
int Acb_NtkCheckPiOrder( Acb_Ntk_t * pNtkF, Acb_Ntk_t * pNtkG )Acb_NtkCheckPiOrder579,20106
void Acb_NtkRunTest( char * pFileNames[4], int fFancy, int fVerbose )Acb_NtkRunTest610,21071

src/base/acb/acbPush.c,1426
void Acb_ObjPushToFanout( Acb_Ntk_t * p, int iObj, int iFaninIndex, int iFanout )Acb_ObjPushToFanout45,1305
void Acb_ObjPushToFanin( Acb_Ntk_t * p, int iObj, int iFaninIndex2, int iFanin )Acb_ObjPushToFanin95,3567
static inline int Acb_ObjFindNodeFanout( Acb_Ntk_t * p, int iObj )Acb_ObjFindNodeFanout143,5682
int Acb_ObjSuppMin_int( Acb_Ntk_t * p, int iObj )Acb_ObjSuppMin_int151,5905
void Acb_ObjSuppMin( Acb_Ntk_t * p, int iObj )Acb_ObjSuppMin166,6390
void Acb_ObjRemoveDup( Acb_Ntk_t * p, int iObj, int i, int j )Acb_ObjRemoveDup170,6484
int Acb_ObjRemoveDupFanins_int( Acb_Ntk_t * p, int iObj )Acb_ObjRemoveDupFanins_int183,7140
void Acb_ObjRemoveDupFanins( Acb_Ntk_t * p, int iObj )Acb_ObjRemoveDupFanins196,7487
void Acb_ObjRemoveConst( Acb_Ntk_t * p, int iObj )Acb_ObjRemoveConst201,7635
void Acb_ObjRemoveBufInv( Acb_Ntk_t * p, int iObj )Acb_ObjRemoveBufInv220,8438
static inline int Acb_ObjFindFaninPushableIndex( Acb_Ntk_t * p, int iObj, int iFanIndex )Acb_ObjFindFaninPushableIndex265,9916
static inline int Acb_ObjFindFanoutPushableIndex( Acb_Ntk_t * p, int iObj )Acb_ObjFindFanoutPushableIndex273,10235
int Acb_ObjPushToFanins( Acb_Ntk_t * p, int iObj, int nLutSize )Acb_ObjPushToFanins281,10512
void Acb_NtkPushLogic( Acb_Ntk_t * p, int nLutSize, int fVerbose )Acb_NtkPushLogic325,11984
void Acb_NtkPushLogic2( Acb_Ntk_t * p, int nLutSize, int fVerbose )Acb_NtkPushLogic2355,12972

src/base/acb/acbUtil.c,5607
void Acb_ObjCollectTfi_rec( Acb_Ntk_t * p, int iObj, int fTerm )Acb_ObjCollectTfi_rec48,1335
Vec_Int_t * Acb_ObjCollectTfi( Acb_Ntk_t * p, int iObj, int fTerm )Acb_ObjCollectTfi59,1694
Vec_Int_t * Acb_ObjCollectTfiVec( Acb_Ntk_t * p, Vec_Int_t * vObjs )Acb_ObjCollectTfiVec75,2155
void Acb_ObjCollectTfo_rec( Acb_Ntk_t * p, int iObj, int fTerm )Acb_ObjCollectTfo_rec85,2417
Vec_Int_t * Acb_ObjCollectTfo( Acb_Ntk_t * p, int iObj, int fTerm )Acb_ObjCollectTfo96,2758
Vec_Int_t * Acb_ObjCollectTfoVec( Acb_Ntk_t * p, Vec_Int_t * vObjs )Acb_ObjCollectTfoVec108,3095
int Acb_NtkIsPiBuffers( Acb_Ntk_t * p, int iObj )Acb_NtkIsPiBuffers131,3702
int Acb_NtkCountPiBuffers( Acb_Ntk_t * p, Vec_Int_t * vObjs )Acb_NtkCountPiBuffers139,3927
int Acb_NtkCountPoDrivers( Acb_Ntk_t * p, Vec_Int_t * vObjs )Acb_NtkCountPoDrivers146,4129
int Acb_NtkNodeDeref_rec( Vec_Int_t * vRefs, Acb_Ntk_t * p, int iObj )Acb_NtkNodeDeref_rec174,4894
int Acb_NtkNodeRef_rec( Vec_Int_t * vRefs, Acb_Ntk_t * p, int iObj )Acb_NtkNodeRef_rec188,5359
void Acb_NtkCollectDeref_rec( Vec_Int_t * vRefs, Acb_Ntk_t * p, int iObj, Vec_Int_t * vRes )Acb_NtkCollectDeref_rec213,6058
Vec_Int_t * Acb_NtkCollectMffc( Acb_Ntk_t * p, Vec_Int_t * vObjsRefed, Vec_Int_t * vObjsDerefed )Acb_NtkCollectMffc227,6539
Vec_Int_t * Acb_NamesToIds( Acb_Ntk_t * pNtk, Vec_Int_t * vNamesInv, Vec_Ptr_t * vNames )Acb_NamesToIds252,7447
int Acb_NtkCollectMfsGates( char * pFileName, Vec_Ptr_t * vNamesRefed, Vec_Ptr_t * vNamesDerefed, int nGates[5] )Acb_NtkCollectMfsGates268,8014
Vec_Ptr_t * Acb_NtkReturnMfsGates( char * pFileName, Vec_Ptr_t * vNodes )Acb_NtkReturnMfsGates303,9381
int Acb_ObjComputeLevelD( Acb_Ntk_t * p, int iObj )Acb_ObjComputeLevelD333,10422
int Acb_NtkComputeLevelD( Acb_Ntk_t * p, Vec_Int_t * vTfo )Acb_NtkComputeLevelD340,10713
int Acb_ObjComputeLevelR( Acb_Ntk_t * p, int iObj )Acb_ObjComputeLevelR354,11199
int Acb_NtkComputeLevelR( Acb_Ntk_t * p, Vec_Int_t * vTfi )Acb_NtkComputeLevelR361,11470
void Acb_NtkUpdateLevelD( Acb_Ntk_t * p, int Pivot )Acb_NtkUpdateLevelD376,11951
int Acb_ObjSlack( Acb_Ntk_t * p, int iObj )Acb_ObjSlack393,12390
int Acb_ObjComputePathD( Acb_Ntk_t * p, int iObj )Acb_ObjComputePathD400,12631
int Acb_NtkComputePathsD( Acb_Ntk_t * p, Vec_Int_t * vTfo, int fReverse )Acb_NtkComputePathsD409,12952
int Acb_ObjComputePathR( Acb_Ntk_t * p, int iObj )Acb_ObjComputePathR447,14105
int Acb_NtkComputePathsR( Acb_Ntk_t * p, Vec_Int_t * vTfi, int fReverse )Acb_NtkComputePathsR456,14407
void Acb_NtkPrintPaths( Acb_Ntk_t * p )Acb_NtkPrintPaths494,15567
int Acb_NtkComputePaths( Acb_Ntk_t * p )Acb_NtkComputePaths509,16070
void Abc_NtkComputePaths( Abc_Ntk_t * p )Abc_NtkComputePaths523,16507
void Acb_ObjUpdatePriority( Acb_Ntk_t * p, int iObj )Acb_ObjUpdatePriority546,17087
void Acb_NtkUpdateTiming( Acb_Ntk_t * p, int iObj )Acb_NtkUpdateTiming570,17826
void Acb_NtkPrintNode( Acb_Ntk_t * p, int iObj )Acb_NtkPrintNode628,19664
int Acb_NtkCreateNode( Acb_Ntk_t * p, word uTruth, Vec_Int_t * vSupp )Acb_NtkCreateNode636,19968
void Acb_NtkResetNode( Acb_Ntk_t * p, int Pivot, word uTruth, Vec_Int_t * vSupp )Acb_NtkResetNode645,20292
void Acb_NtkSaveSupport( Acb_Ntk_t * p, int iObj )Acb_NtkSaveSupport674,21367
void Acb_NtkUpdateNode( Acb_Ntk_t * p, int Pivot, word uTruth, Vec_Int_t * vSupp )Acb_NtkUpdateNode681,21591
void Acb_NtkFindNodes2_rec( Acb_Ntk_t * p, int iObj, Vec_Int_t * vNodes )Acb_NtkFindNodes2_rec709,22419
Vec_Int_t * Acb_NtkFindNodes2( Acb_Ntk_t * p )Acb_NtkFindNodes2721,22810
int Acb_ObjToGia2( Gia_Man_t * pNew, int fUseBuf, Acb_Ntk_t * p, int iObj, Vec_Int_t * vTemp, int fUseXors )Acb_ObjToGia2730,23076
Gia_Man_t * Acb_NtkToGia2( Acb_Ntk_t * p, int fUseBuf, int fUseXors, Vec_Int_t * vTargets, int nTargets )Acb_NtkToGia2775,24799
Vec_Int_t * Acb_NtkCollectCopies( Acb_Ntk_t * p, Gia_Man_t * pGia, Vec_Ptr_t ** pvNodesR, Vec_Bit_t ** pvPolar )Acb_NtkCollectCopies817,26251
Vec_Int_t * Acb_NtkCollectUser( Acb_Ntk_t * p, Vec_Ptr_t * vUser )Acb_NtkCollectUser853,28057
int Acb_NtkExtract( char * pFileName0, char * pFileName1, int fUseXors, int fVerbose, Acb_NtkExtract886,29167
Vec_Int_t * Abc_NtkCollectCopies( Abc_Ntk_t * p, Gia_Man_t * pGia, Vec_Ptr_t ** pvNodesR, Vec_Bit_t ** pvPolar )Abc_NtkCollectCopies922,30590
int Abc_ObjToGia2( Gia_Man_t * pNew, Abc_Ntk_t * p, Abc_Obj_t * pObj, Vec_Int_t * vTemp, int fUseXors )Abc_ObjToGia2956,32153
Gia_Man_t * Abc_NtkToGia2( Abc_Ntk_t * p, int fUseXors )Abc_NtkToGia2975,32926
int Abc_NtkExtract( char * pFileName0, char * pFileName1, int fUseXors, int fVerbose, Abc_NtkExtract1000,33822
Vec_Int_t * Acb_NtkPlaces( char * pFileName, Vec_Ptr_t * vNames )Acb_NtkPlaces1035,35107
void Acb_NtkInsert( char * pFileNameIn, char * pFileNameOut, Vec_Ptr_t * vNames, int fNumber, int fSkipMffc )Acb_NtkInsert1076,36450
void Acb_Ntk4CollectAdd( Acb_Ntk_t * pNtk, int iObj, Vec_Int_t * vRes, Vec_Int_t * vDists, int Dist )Acb_Ntk4CollectAdd1165,39193
void Acb_Ntk4CollectRing( Acb_Ntk_t * pNtk, Vec_Int_t * vStart, Vec_Int_t * vRes, Vec_Int_t * vDists )Acb_Ntk4CollectRing1172,39434
void Acb_Ntk4DumpWeightsInt( Acb_Ntk_t * pNtk, Vec_Int_t * vObjs, char * pFileName )Acb_Ntk4DumpWeightsInt1184,40021
void Acb_Ntk4DumpWeights( char * pFileNameIn, Vec_Ptr_t * vObjNames, char * pFileName )Acb_Ntk4DumpWeights1245,41885
void Acb_NtkRunSim( char * pFileName[4], int nWords, int nBeam, int LevL, int LevU, int fOrder, int fFancy, int fUseBuf, int fRandom, int fUseWeights, int fInputs, int fSkipMffc, int fVerbose, int fVeryVerbose )Acb_NtkRunSim1273,42740

src/base/acb/acb.c,0

src/base/acb/acbAbc.c,625
Acb_Ntk_t * Acb_NtkFromAbc2( Abc_Ntk_t * p )Acb_NtkFromAbc247,1292
Acb_Ntk_t * Acb_NtkFromAbc( Abc_Ntk_t * p )Acb_NtkFromAbc73,2554
Abc_Ntk_t * Acb_NtkToAbc( Abc_Ntk_t * pNtk, Acb_Ntk_t * p )Acb_NtkToAbc119,4351
Acb_Ntk_t * Acb_NtkFromNdr( char * pFileName, void * pModule, Abc_Nam_t * pNames, Vec_Int_t * vWeights, int nNameIdMax )Acb_NtkFromNdr164,5976
void Acb_ParSetDefault( Acb_Par_t * pPars )Acb_ParSetDefault246,9352
Abc_Ntk_t * Abc_NtkOptMfse( Abc_Ntk_t * pNtk, Acb_Par_t * pPars )Abc_NtkOptMfse276,10614
Abc_Ntk_t * Abc_NtkOptPush( Abc_Ntk_t * pNtk, int nLutSize, int fVerbose )Abc_NtkOptPush298,11170

src/base/acb/acbSets.c,49
void Acb_DataReadTest()Acb_DataReadTest44,1235

src/base/acb/acbSets.h,67
#define ABC__base__acb__acbSets_hABC__base__acb__acbSets_h22,551

src/base/acb/acb.h,48237
#define ABC__base__acb__acb_hABC__base__acb__acb_h22,538
typedef struct Acb_Aig_t_ Acb_Aig_t;Acb_Aig_t46,1438
typedef struct Acb_Ntk_t_ Acb_Ntk_t;Acb_Ntk_t47,1475
typedef struct Acb_Man_t_ Acb_Man_t;Acb_Man_t48,1512
struct Acb_Ntk_t_Acb_Ntk_t_51,1561
    Acb_Man_t *     pDesign;    // designpDesign53,1581
    int             Id;         // network IDId54,1623
    int             NameId;     // name ID NameId55,1669
    int             iCopy;      // copy moduleiCopy56,1713
    unsigned        Mark : 1;   // visit mark Mark57,1760
    unsigned        fComb: 1;   // the network is combinationalfComb58,1807
    unsigned        fSeq : 1;   // the network is sequentialfSeq59,1871
    Vec_Int_t       vCis;       // inputs vCis61,1949
    Vec_Int_t       vCos;       // outputsvCos62,1992
    Vec_Int_t       vOrder;     // ordervOrder63,2035
    Vec_Int_t       vSeq;       // sequential objectsvSeq64,2076
    int             nRegs;      // flop countnRegs65,2130
    int             nFaninMax;  // default fanin countnFaninMax66,2176
    int             nObjTravs;  // trav IDnObjTravs67,2231
    int             LevelMax;   // max levelLevelMax68,2274
    int             nPaths;     // the number of pathsnPaths69,2319
    Vec_Str_t       vObjType;   // type     vObjType71,2390
    Vec_Int_t       vObjFans;   // fanin offsetsvObjFans72,2435
    Vec_Int_t       vFanSto;    // fanin storagevFanSto73,2484
    Vec_Int_t       vObjCopy;   // copyvObjCopy75,2549
    Vec_Int_t       vObjFunc;   // functionvObjFunc76,2589
    Vec_Int_t       vObjWeight; // weightvObjWeight77,2633
    Vec_Wrd_t       vObjTruth;  // functionvObjTruth78,2675
    Vec_Int_t       vObjName;   // namevObjName79,2719
    Vec_Int_t       vObjRange;  // rangevObjRange80,2759
    Vec_Int_t       vObjTrav;   // trav IDvObjTrav81,2800
    Vec_Int_t       vObjBits;   // obj mapping into AIG nodesvObjBits82,2843
    Vec_Int_t       vObjAttr;   // attribute offsetvObjAttr83,2905
    Vec_Int_t       vAttrSto;   // attribute storagevAttrSto84,2957
    Vec_Int_t       vNtkObjs;   // instancesvNtkObjs85,3010
    Vec_Int_t       vTargets;   // targetsvTargets86,3055
    Vec_Int_t       vLevelD;    // levelvLevelD87,3098
    Vec_Int_t       vLevelR;    // levelvLevelR88,3139
    Vec_Int_t       vPathD;     // pathvPathD89,3180
    Vec_Int_t       vPathR;     // pathvPathR90,3220
    Vec_Flt_t       vCounts;    // priority countsvCounts91,3260
    Vec_Wec_t       vFanouts;   // fanoutsvFanouts92,3311
    Vec_Wec_t       vCnfs;      // CNFvCnfs93,3354
    Vec_Str_t       vCnf;       // CNFvCnf94,3393
    Vec_Int_t       vSuppOld;   // previous supportvSuppOld95,3432
    Vec_Que_t *     vQue;       // temporaryvQue97,3497
    Vec_Int_t       vCover;     // temporaryvCover98,3542
    Vec_Int_t       vArray0;    // temporaryvArray099,3587
    Vec_Int_t       vArray1;    // temporaryvArray1100,3632
    Vec_Int_t       vArray2;    // temporaryvArray2101,3677
struct Acb_Man_t_Acb_Man_t_105,3736
    char *          pName;      // design namepName107,3756
    char *          pSpec;      // spec file namepSpec108,3803
    Abc_Nam_t *     pStrs;      // string managerpStrs109,3853
    Abc_Nam_t *     pFuns;      // constant managerpFuns110,3903
    Abc_Nam_t *     pMods;      // module name managerpMods111,3955
    Hash_IntMan_t * vHash;      // variable rangesvHash112,4010
    Vec_Int_t       vNameMap;   // mapping namesvNameMap113,4061
    Vec_Int_t       vNameMap2;  // mapping namesvNameMap2114,4110
    Vec_Int_t       vUsed;      // used map entriesvUsed115,4159
    Vec_Int_t       vUsed2;     // used map entriesvUsed2116,4211
    char *          pTypeNames[ABC_OPER_LAST];pTypeNames117,4263
    int             nObjs[ABC_OPER_LAST]; // counter of objects of each typenObjs118,4310
    int             nAnds[ABC_OPER_LAST]; // counter of AND gates after blastingnAnds119,4387
    int             iRoot;      // root networkiRoot121,4489
    Vec_Ptr_t       vNtks;      // networksvNtks122,4537
    int             nOpens;nOpens124,4598
    Vec_Str_t       vOut;     vOut125,4626
    Vec_Str_t       vOut2;     vOut2126,4657
    void *          pMioLib;pMioLib127,4689
static inline char *         Acb_ManName( Acb_Man_t * p )                    { return p->pName;                                                                            }Acb_ManName134,4942
static inline char *         Acb_ManSpec( Acb_Man_t * p )                    { return p->pSpec;                                                                            }Acb_ManSpec135,5115
static inline int            Acb_ManNtkNum( Acb_Man_t * p )                  { return Vec_PtrSize(&p->vNtks)-1;                                                            }Acb_ManNtkNum136,5288
static inline int            Acb_ManNtkIsOk( Acb_Man_t * p, int i )          { return i > 0 && i <= Acb_ManNtkNum(p);                                                      }Acb_ManNtkIsOk137,5461
static inline Acb_Ntk_t *    Acb_ManNtk( Acb_Man_t * p, int i )              { return Acb_ManNtkIsOk(p, i) ? (Acb_Ntk_t *)Vec_PtrEntry(&p->vNtks, i) : NULL;               }Acb_ManNtk138,5634
static inline int            Acb_ManNtkFindId( Acb_Man_t * p, char * pName ) { return Abc_NamStrFind(p->pMods, pName);                                                     }Acb_ManNtkFindId139,5807
static inline Acb_Ntk_t *    Acb_ManNtkFind( Acb_Man_t * p, char * pName )   { return Acb_ManNtk( p, Acb_ManNtkFindId(p, pName) );                                         }Acb_ManNtkFind140,5980
static inline Acb_Ntk_t *    Acb_ManRoot( Acb_Man_t * p )                    { return Acb_ManNtk(p, p->iRoot);                                                             }Acb_ManRoot141,6153
static inline char *         Acb_ManStr( Acb_Man_t * p, int i )              { return Abc_NamStr(p->pStrs, i);                                                             }Acb_ManStr142,6326
static inline int            Acb_ManStrId( Acb_Man_t * p, char * pStr )      { return Abc_NamStrFind(p->pStrs, pStr);                                                      }Acb_ManStrId143,6499
static inline int            Acb_ManNameIdMax( Acb_Man_t * p )               { return Abc_NamObjNumMax(p->pStrs) + 1;                                                      }Acb_ManNameIdMax144,6672
static inline char *         Acb_ManConst( Acb_Man_t * p, int i )            { return Abc_NamStr(p->pFuns, i);                                                             }Acb_ManConst145,6845
static inline int            Acb_ManConstId( Acb_Man_t * p, char * pStr )    { return Abc_NamStrFind(p->pFuns, pStr);                                                      }Acb_ManConstId146,7018
static inline int            Acb_ManConstIdMax( Acb_Man_t * p )              { return Abc_NamObjNumMax(p->pFuns) + 1;                                                      }Acb_ManConstIdMax147,7191
static inline Acb_Man_t *    Acb_NtkMan( Acb_Ntk_t * p )                     { return p->pDesign;                                                                          }Acb_NtkMan149,7365
static inline Acb_Ntk_t *    Acb_NtkNtk( Acb_Ntk_t * p, int i )              { return Acb_ManNtk(p->pDesign, i);                                                           }Acb_NtkNtk150,7538
static inline int            Acb_NtkId( Acb_Ntk_t * p )                      { return p->Id;                                                                               }Acb_NtkId151,7711
static inline int            Acb_NtkCi( Acb_Ntk_t * p, int i )               { return Vec_IntEntry(&p->vCis, i);                                                           }Acb_NtkCi152,7884
static inline int            Acb_NtkCo( Acb_Ntk_t * p, int i )               { return Vec_IntEntry(&p->vCos, i);                                                           }Acb_NtkCo153,8057
static inline int            Acb_NtkCioOrder( Acb_Ntk_t * p, int i )         { return Vec_IntEntry(&p->vOrder, i);                                                         }Acb_NtkCioOrder154,8230
static inline int            Acb_NtkBoxSeq( Acb_Ntk_t * p, int i )           { return Vec_IntEntry(&p->vSeq, i);                                                           }Acb_NtkBoxSeq155,8403
static inline Abc_Nam_t *    Acb_NtkNam( Acb_Ntk_t * p )                     { return p->pDesign->pStrs;                                                                   }Acb_NtkNam156,8576
static inline char *         Acb_NtkStr( Acb_Ntk_t * p, int i )              { return Acb_ManStr(p->pDesign, i);                                                           }Acb_NtkStr157,8749
static inline int            Acb_NtkStrId( Acb_Ntk_t * p, char * pName )     { return Acb_ManStrId(p->pDesign, pName);                                                     }Acb_NtkStrId158,8922
static inline char *         Acb_NtkConst( Acb_Ntk_t * p, int i )            { return Acb_ManConst(p->pDesign, i);                                                         }Acb_NtkConst159,9095
static inline char *         Acb_NtkSop( Acb_Ntk_t * p, int i )              { return Acb_ManConst(p->pDesign, i);                                                         }Acb_NtkSop160,9268
static inline int            Acb_NtkNameId( Acb_Ntk_t * p )                  { return p->NameId;                                                                           }Acb_NtkNameId161,9441
static inline char *         Acb_NtkName( Acb_Ntk_t * p )                    { return Acb_NtkStr(p, p->NameId);                                                            }Acb_NtkName162,9614
static inline char *         Acb_NtkTypeName( Acb_Ntk_t * p, int Type )      { return p->pDesign->pTypeNames[Type];                                                        }Acb_NtkTypeName163,9787
static inline int            Acb_NtkCopy( Acb_Ntk_t * p )                    { return p->iCopy;                                                                            }Acb_NtkCopy164,9960
static inline Acb_Ntk_t *    Acb_NtkCopyNtk(Acb_Man_t * pNew, Acb_Ntk_t * p) { return Acb_ManNtk(pNew, Acb_NtkCopy(p));                                                    }Acb_NtkCopyNtk165,10133
static inline void           Acb_NtkSetCopy( Acb_Ntk_t * p, int i )          { assert(p->iCopy == 0); p->iCopy = i;                                                        }Acb_NtkSetCopy166,10306
static inline int            Acb_NtkHashRange( Acb_Ntk_t * p, int l, int r ) { return Hash_Int2ManInsert( p->pDesign->vHash, l, r, 0 );                                    }Acb_NtkHashRange167,10479
static inline int            Acb_NtkRangeLeft( Acb_Ntk_t * p, int h )        { return h ? Hash_IntObjData0( p->pDesign->vHash, h ) : 0;                                    }Acb_NtkRangeLeft168,10652
static inline int            Acb_NtkRangeRight( Acb_Ntk_t * p, int h )       { return h ? Hash_IntObjData1( p->pDesign->vHash, h ) : 0;                                    }Acb_NtkRangeRight169,10825
static inline int            Acb_NtkRangeSize( Acb_Ntk_t * p, int h )        { int l = Acb_NtkRangeLeft(p, h), r = Acb_NtkRangeRight(p, h); return 1 + (l > r ? l-r : r-l);}Acb_NtkRangeSize170,10998
static inline int            Acb_NtkCiNum( Acb_Ntk_t * p )                   { return Vec_IntSize(&p->vCis);                                                               }Acb_NtkCiNum172,11172
static inline int            Acb_NtkCoNum( Acb_Ntk_t * p )                   { return Vec_IntSize(&p->vCos);                                                               }Acb_NtkCoNum173,11345
static inline int            Acb_NtkCioNum( Acb_Ntk_t * p )                  { return Acb_NtkCiNum(p) + Acb_NtkCoNum(p);                                                   }Acb_NtkCioNum174,11518
static inline int            Acb_NtkCiNumAlloc( Acb_Ntk_t * p )              { return Vec_IntCap(&p->vCis);                                                                }Acb_NtkCiNumAlloc175,11691
static inline int            Acb_NtkCoNumAlloc( Acb_Ntk_t * p )              { return Vec_IntCap(&p->vCos);                                                                }Acb_NtkCoNumAlloc176,11864
static inline int            Acb_NtkRegNum( Acb_Ntk_t * p )                  { return p->nRegs;                                                                            }Acb_NtkRegNum177,12037
static inline void           Acb_NtkSetRegNum( Acb_Ntk_t * p, int nRegs )    { p->nRegs = nRegs;                                                                           }Acb_NtkSetRegNum178,12210
static inline int            Acb_NtkPiNum( Acb_Ntk_t * p )                   { return Acb_NtkCiNum(p) - Acb_NtkRegNum(p);                                                  }Acb_NtkPiNum179,12383
static inline int            Acb_NtkPoNum( Acb_Ntk_t * p )                   { return Acb_NtkCoNum(p) - Acb_NtkRegNum(p);                                                  }Acb_NtkPoNum180,12556
static inline int            Acb_NtkCioOrderNum( Acb_Ntk_t * p )             { return Vec_IntSize(&p->vOrder);                                                             }Acb_NtkCioOrderNum181,12729
static inline int            Acb_NtkObjNumAlloc( Acb_Ntk_t * p )             { return Vec_StrCap(&p->vObjType)-1;                                                          }Acb_NtkObjNumAlloc182,12902
static inline int            Acb_NtkObjNum( Acb_Ntk_t * p )                  { return Vec_StrSize(&p->vObjType)-1;                                                         }Acb_NtkObjNum183,13075
static inline int            Acb_NtkObjNumMax( Acb_Ntk_t * p )               { return Vec_StrSize(&p->vObjType);                                                           }Acb_NtkObjNumMax184,13248
static inline int            Acb_NtkTypeNum( Acb_Ntk_t * p, int Type )       { return Vec_StrCountEntry(&p->vObjType, (char)Type);                                         }Acb_NtkTypeNum185,13421
static inline int            Acb_NtkBoxNum( Acb_Ntk_t * p )                  { return Acb_NtkTypeNum(p, ABC_OPER_BOX);                                                     }Acb_NtkBoxNum186,13594
static inline int            Acb_NtkNodeNum( Acb_Ntk_t * p )                 { return Vec_StrCountLarger(&p->vObjType, (char)ABC_OPER_BOX);                                }Acb_NtkNodeNum187,13767
static inline int            Acb_NtkSeqNum( Acb_Ntk_t * p )                  { return Vec_IntSize(&p->vSeq);                                                               }Acb_NtkSeqNum188,13940
static inline void           Acb_NtkCleanObjCopies( Acb_Ntk_t * p )          { Vec_IntFill(&p->vObjCopy,  Vec_StrCap(&p->vObjType), -1);                                   }Acb_NtkCleanObjCopies190,14114
static inline void           Acb_NtkCleanObjFuncs( Acb_Ntk_t * p )           { Vec_IntFill(&p->vObjFunc,  Vec_StrCap(&p->vObjType), -1);                                   }Acb_NtkCleanObjFuncs191,14287
static inline void           Acb_NtkCleanObjWeights( Acb_Ntk_t * p )         { Vec_IntFill(&p->vObjWeight,Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjWeights192,14460
static inline void           Acb_NtkCleanObjTruths( Acb_Ntk_t * p )          { Vec_WrdFill(&p->vObjTruth, Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjTruths193,14633
static inline void           Acb_NtkCleanObjNames( Acb_Ntk_t * p )           { Vec_IntFill(&p->vObjName,  Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjNames194,14806
static inline void           Acb_NtkCleanObjRanges( Acb_Ntk_t * p )          { Vec_IntFill(&p->vObjRange, Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjRanges195,14979
static inline void           Acb_NtkCleanObjTravs( Acb_Ntk_t * p )           { Vec_IntFill(&p->vObjTrav,  Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjTravs196,15152
static inline void           Acb_NtkCleanObjAttrs( Acb_Ntk_t * p )           { Vec_IntFill(&p->vObjAttr,  Vec_StrCap(&p->vObjType),  0); Vec_IntFill(&p->vAttrSto, 1, -1); }Acb_NtkCleanObjAttrs197,15325
static inline void           Acb_NtkCleanObjLevelD( Acb_Ntk_t * p )          { Vec_IntFill(&p->vLevelD,   Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjLevelD198,15498
static inline void           Acb_NtkCleanObjLevelR( Acb_Ntk_t * p )          { Vec_IntFill(&p->vLevelR,   Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjLevelR199,15671
static inline void           Acb_NtkCleanObjPathD( Acb_Ntk_t * p )           { Vec_IntFill(&p->vPathD,    Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjPathD200,15844
static inline void           Acb_NtkCleanObjPathR( Acb_Ntk_t * p )           { Vec_IntFill(&p->vPathR,    Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjPathR201,16017
static inline void           Acb_NtkCleanObjCounts( Acb_Ntk_t * p )          { Vec_FltFill(&p->vCounts,   Vec_StrCap(&p->vObjType),  0);                                   }Acb_NtkCleanObjCounts202,16190
static inline void           Acb_NtkCleanObjFanout( Acb_Ntk_t * p )          { Vec_WecInit(&p->vFanouts,  Vec_StrCap(&p->vObjType)    );                                   }Acb_NtkCleanObjFanout203,16363
static inline void           Acb_NtkCleanObjCnfs( Acb_Ntk_t * p )            { Vec_WecInit(&p->vCnfs,     Vec_StrCap(&p->vObjType)    );                                   }Acb_NtkCleanObjCnfs204,16536
static inline int            Acb_NtkHasObjCopies( Acb_Ntk_t * p )            { return Vec_IntSize(&p->vObjCopy)  > 0;                                                      }Acb_NtkHasObjCopies206,16710
static inline int            Acb_NtkHasObjFuncs( Acb_Ntk_t * p )             { return Vec_IntSize(&p->vObjFunc)  > 0;                                                      }Acb_NtkHasObjFuncs207,16883
static inline int            Acb_NtkHasObjWeights( Acb_Ntk_t * p )           { return Vec_IntSize(&p->vObjWeight)> 0;                                                      }Acb_NtkHasObjWeights208,17056
static inline int            Acb_NtkHasObjTruths( Acb_Ntk_t * p )            { return Vec_WrdSize(&p->vObjTruth) > 0;                                                      }Acb_NtkHasObjTruths209,17229
static inline int            Acb_NtkHasObjNames( Acb_Ntk_t * p )             { return Vec_IntSize(&p->vObjName)  > 0;                                                      }Acb_NtkHasObjNames210,17402
static inline int            Acb_NtkHasObjRanges( Acb_Ntk_t * p )            { return Vec_IntSize(&p->vObjRange) > 0;                                                      }Acb_NtkHasObjRanges211,17575
static inline int            Acb_NtkHasObjTravs( Acb_Ntk_t * p )             { return Vec_IntSize(&p->vObjTrav)  > 0;                                                      }Acb_NtkHasObjTravs212,17748
static inline int            Acb_NtkHasObjAttrs( Acb_Ntk_t * p )             { return Vec_IntSize(&p->vObjAttr)  > 0;                                                      }Acb_NtkHasObjAttrs213,17921
static inline int            Acb_NtkHasObjLevelD( Acb_Ntk_t * p )            { return Vec_IntSize(&p->vLevelD)   > 0;                                                      }Acb_NtkHasObjLevelD214,18094
static inline int            Acb_NtkHasObjLevelR( Acb_Ntk_t * p )            { return Vec_IntSize(&p->vLevelR)   > 0;                                                      }Acb_NtkHasObjLevelR215,18267
static inline int            Acb_NtkHasObjPathD( Acb_Ntk_t * p )             { return Vec_IntSize(&p->vPathD)    > 0;                                                      }Acb_NtkHasObjPathD216,18440
static inline int            Acb_NtkHasObjPathR( Acb_Ntk_t * p )             { return Vec_IntSize(&p->vPathR)    > 0;                                                      }Acb_NtkHasObjPathR217,18613
static inline int            Acb_NtkHasObjCounts( Acb_Ntk_t * p )            { return Vec_FltSize(&p->vCounts)   > 0;                                                      }Acb_NtkHasObjCounts218,18786
static inline int            Acb_NtkHasObjFanout( Acb_Ntk_t * p )            { return Vec_WecSize(&p->vFanouts)  > 0;                                                      }Acb_NtkHasObjFanout219,18959
static inline int            Acb_NtkHasObjCnfs( Acb_Ntk_t * p )              { return Vec_WecSize(&p->vCnfs)     > 0;                                                      }Acb_NtkHasObjCnfs220,19132
static inline void           Acb_NtkFreeObjCopies( Acb_Ntk_t * p )           { Vec_IntErase(&p->vObjCopy);                                                                 }Acb_NtkFreeObjCopies222,19306
static inline void           Acb_NtkFreeObjFuncs( Acb_Ntk_t * p )            { Vec_IntErase(&p->vObjFunc);                                                                 }Acb_NtkFreeObjFuncs223,19479
static inline void           Acb_NtkFreeObjWeights( Acb_Ntk_t * p )          { Vec_IntErase(&p->vObjWeight);                                                               }Acb_NtkFreeObjWeights224,19652
static inline void           Acb_NtkFreeObjTruths( Acb_Ntk_t * p )           { Vec_WrdErase(&p->vObjTruth);                                                                }Acb_NtkFreeObjTruths225,19825
static inline void           Acb_NtkFreeObjNames( Acb_Ntk_t * p )            { Vec_IntErase(&p->vObjName);                                                                 }Acb_NtkFreeObjNames226,19998
static inline void           Acb_NtkFreeObjRanges( Acb_Ntk_t * p )           { Vec_IntErase(&p->vObjRange);                                                                }Acb_NtkFreeObjRanges227,20171
static inline void           Acb_NtkFreeObjTravs( Acb_Ntk_t * p )            { Vec_IntErase(&p->vObjTrav);                                                                 }Acb_NtkFreeObjTravs228,20344
static inline void           Acb_NtkFreeObjAttrs( Acb_Ntk_t * p )            { Vec_IntErase(&p->vObjAttr);                                                                 }Acb_NtkFreeObjAttrs229,20517
static inline void           Acb_NtkFreeObjLevelD( Acb_Ntk_t * p )           { Vec_IntErase(&p->vLevelD);                                                                  }Acb_NtkFreeObjLevelD230,20690
static inline void           Acb_NtkFreeObjLevelR( Acb_Ntk_t * p )           { Vec_IntErase(&p->vLevelR);                                                                  }Acb_NtkFreeObjLevelR231,20863
static inline void           Acb_NtkFreeObjPathD( Acb_Ntk_t * p )            { Vec_IntErase(&p->vPathD);                                                                   }Acb_NtkFreeObjPathD232,21036
static inline void           Acb_NtkFreeObjPathR( Acb_Ntk_t * p )            { Vec_IntErase(&p->vPathR);                                                                   }Acb_NtkFreeObjPathR233,21209
static inline void           Acb_NtkFreeObjCounts( Acb_Ntk_t * p )           { Vec_FltErase(&p->vCounts);                                                                  }Acb_NtkFreeObjCounts234,21382
static inline void           Acb_NtkFreeObjFanout( Acb_Ntk_t * p )           { Vec_WecErase(&p->vFanouts);                                                                 }Acb_NtkFreeObjFanout235,21555
static inline void           Acb_NtkFreeObjCnfs( Acb_Ntk_t * p )             { Vec_WecErase(&p->vCnfs);                                                                    }Acb_NtkFreeObjCnfs236,21728
static inline Acb_ObjType_t  Acb_ObjType( Acb_Ntk_t * p, int i )                     { assert(i>0); return (Acb_ObjType_t)(int)(unsigned char)Vec_StrEntry(&p->vObjType, i);                }Acb_ObjType238,21902
static inline void           Acb_ObjCleanType( Acb_Ntk_t * p, int i )                { assert(i>0); Vec_StrWriteEntry( &p->vObjType, i, (char)ABC_OPER_NONE );                              }Acb_ObjCleanType239,22092
static inline int            Acb_TypeIsSeq( Acb_ObjType_t Type )                     { return Type >= ABC_OPER_RAM && Type <= ABC_OPER_DFFLAST;                                             }Acb_TypeIsSeq240,22282
static inline int            Acb_TypeIsUnary( Acb_ObjType_t Type )                   { return Type == ABC_OPER_BIT_BUF || Type == ABC_OPER_BIT_INV || Type == ABC_OPER_LOGIC_NOT || Type == ABC_OPER_ARI_MIN || Type == ABC_OPER_ARI_SQRT || Type == ABC_OPER_ARI_ABS || (Type >= ABC_OPER_RED_AND && Type <= ABC_OPER_RED_NXOR);  }Acb_TypeIsUnary241,22472
static inline int            Acb_TypeIsMux( Acb_ObjType_t Type )                     { return Type == ABC_OPER_BIT_MUX || Type == ABC_OPER_SEL_NMUX || Type == ABC_OPER_SEL_SEL || Type == ABC_OPER_SEL_PSEL;  }Acb_TypeIsMux242,22797
static inline int            Acb_ObjIsCi( Acb_Ntk_t * p, int i )                     { return Acb_ObjType(p, i) == ABC_OPER_CI;                                                             }Acb_ObjIsCi244,23007
static inline int            Acb_ObjIsCo( Acb_Ntk_t * p, int i )                     { return Acb_ObjType(p, i) == ABC_OPER_CO;                                                             }Acb_ObjIsCo245,23197
static inline int            Acb_ObjIsCio( Acb_Ntk_t * p, int i )                    { return Acb_ObjIsCi(p, i) || Acb_ObjIsCo(p, i);                                                       }Acb_ObjIsCio246,23387
static inline int            Acb_ObjIsFon( Acb_Ntk_t * p, int i )                    { return Acb_ObjType(p, i) == ABC_OPER_FON;                                                            }Acb_ObjIsFon247,23577
static inline int            Acb_ObjIsBox( Acb_Ntk_t * p, int i )                    { return Acb_ObjType(p, i) == ABC_OPER_BOX;                                                            }Acb_ObjIsBox248,23767
static inline int            Acb_ObjIsGate( Acb_Ntk_t * p, int i )                   { return Acb_ObjType(p, i) == ABC_OPER_GATE;                                                           }Acb_ObjIsGate249,23957
static inline int            Acb_ObjIsSlice( Acb_Ntk_t * p, int i )                  { return Acb_ObjType(p, i) == ABC_OPER_SLICE;                                                          }Acb_ObjIsSlice250,24147
static inline int            Acb_ObjIsConcat( Acb_Ntk_t * p, int i )                 { return Acb_ObjType(p, i) == ABC_OPER_CONCAT;                                                         }Acb_ObjIsConcat251,24337
static inline int            Acb_ObjIsUnary( Acb_Ntk_t * p, int i )                  { return Acb_TypeIsUnary(Acb_ObjType(p, i));                                                           }Acb_ObjIsUnary252,24527
static inline int            Acb_ObjFanOffset( Acb_Ntk_t * p, int i )                { assert(i>0); return Vec_IntEntry(&p->vObjFans, i);                                                   }Acb_ObjFanOffset254,24719
static inline int *          Acb_ObjFanins( Acb_Ntk_t * p, int i )                   { return Vec_IntEntryP(&p->vFanSto, Acb_ObjFanOffset(p, i));                                           }Acb_ObjFanins255,24909
static inline int            Acb_ObjFanin( Acb_Ntk_t * p, int i, int k )             { return Acb_ObjFanins(p, i)[k+1];                                                                     }Acb_ObjFanin256,25099
static inline int            Acb_ObjFaninNum( Acb_Ntk_t * p, int i )                 { return Acb_ObjFanins(p, i)[0];                                                                       }Acb_ObjFaninNum257,25289
static inline int            Acb_ObjFanoutNum( Acb_Ntk_t * p, int i )                { return Vec_IntSize( Vec_WecEntry(&p->vFanouts, i) );                                                 }Acb_ObjFanoutNum258,25479
static inline Vec_Int_t *    Acb_ObjFanoutVec( Acb_Ntk_t * p, int i )                { assert(i>0); return Vec_WecEntry( &p->vFanouts, i );                                                 }Acb_ObjFanoutVec259,25669
static inline int            Acb_ObjFanout( Acb_Ntk_t * p, int i, int k )            { return Vec_IntEntry( Acb_ObjFanoutVec(p, i), k );                                                    }Acb_ObjFanout260,25859
static inline int            Acb_ObjFanin0( Acb_Ntk_t * p, int i )                   { return Acb_ObjFanins(p, i)[1];                                                                       }Acb_ObjFanin0261,26049
static inline int            Acb_ObjCioId( Acb_Ntk_t * p, int i )                    { return Acb_ObjFanins(p, i)[2];                                                                       }Acb_ObjCioId262,26239
static inline int            Acb_ObjCopy( Acb_Ntk_t * p, int i )                     { assert(i>0); assert( Acb_NtkHasObjCopies(p) ); return Vec_IntEntry(&p->vObjCopy, i);                 }Acb_ObjCopy264,26431
static inline int            Acb_ObjFunc( Acb_Ntk_t * p, int i )                     { assert(i>0); assert( Acb_NtkHasObjFuncs(p) );  return Vec_IntEntry(&p->vObjFunc, i);                 }Acb_ObjFunc265,26621
static inline int            Acb_ObjWeight( Acb_Ntk_t * p, int i )                   { assert(i>0); assert( Acb_NtkHasObjWeights(p) );return Vec_IntEntry(&p->vObjWeight, i);               }Acb_ObjWeight266,26811
static inline word           Acb_ObjTruth( Acb_Ntk_t * p, int i )                    { assert(i>0); assert( Acb_NtkHasObjTruths(p) ); return Vec_WrdEntry(&p->vObjTruth, i);                }Acb_ObjTruth267,27001
static inline word *         Acb_ObjTruthP( Acb_Ntk_t * p, int i )                   { assert(i>0); assert( Acb_NtkHasObjTruths(p) ); return Vec_WrdEntryP(&p->vObjTruth, i);               }Acb_ObjTruthP268,27191
static inline int            Acb_ObjName( Acb_Ntk_t * p, int i )                     { assert(i>0); assert( Acb_NtkHasObjNames(p) );  return Vec_IntEntry(&p->vObjName, i);                 }Acb_ObjName269,27381
static inline char *         Acb_ObjNameStr( Acb_Ntk_t * p, int i )                  { assert(i>0); return Acb_NtkStr(p, Acb_ObjName(p, i));                                                }Acb_ObjNameStr270,27571
static inline int            Acb_ObjAttr( Acb_Ntk_t * p, int i )                     { assert(i>=0); return Acb_NtkHasObjAttrs(p) ? Vec_IntEntry(&p->vObjAttr, i) : 0;                      }Acb_ObjAttr271,27761
static inline int            Acb_ObjAttrSize( Acb_Ntk_t * p, int i )                 { assert(i>=0); return Acb_ObjAttr(p, i) ? Vec_IntEntry(&p->vAttrSto, Acb_ObjAttr(p, i)) : 0;          }Acb_ObjAttrSize272,27951
static inline int *          Acb_ObjAttrArray( Acb_Ntk_t * p, int i )                { assert(i>=0); return Acb_ObjAttr(p, i) ? Vec_IntEntryP(&p->vAttrSto, Acb_ObjAttr(p, i)+1) : NULL;    }Acb_ObjAttrArray273,28141
static inline int            Acb_ObjAttrValue( Acb_Ntk_t * p, int i, int x )         { int k, s = Acb_ObjAttrSize(p, i), * a = Acb_ObjAttrArray(p, i); for ( k = 0; k < s; k += 2)  if (a[k] == x) return a[k+1]; return 0; }Acb_ObjAttrValue274,28331
static inline int            Acb_ObjLevelD( Acb_Ntk_t * p, int i )                   { assert(i>0); return Vec_IntEntry(&p->vLevelD, i);                                                    }Acb_ObjLevelD275,28553
static inline int            Acb_ObjLevelR( Acb_Ntk_t * p, int i )                   { assert(i>0); return Vec_IntEntry(&p->vLevelR, i);                                                    }Acb_ObjLevelR276,28743
static inline int            Acb_ObjPathD( Acb_Ntk_t * p, int i )                    { assert(i>0); return Vec_IntEntry(&p->vPathD, i);                                                     }Acb_ObjPathD277,28933
static inline int            Acb_ObjPathR( Acb_Ntk_t * p, int i )                    { assert(i>0); return Vec_IntEntry(&p->vPathR, i);                                                     }Acb_ObjPathR278,29123
static inline float          Acb_ObjCounts( Acb_Ntk_t * p, int i )                   { assert(i>0); return Vec_FltEntry(&p->vCounts, i);                                                    }Acb_ObjCounts279,29313
static inline Vec_Str_t *    Acb_ObjCnfs( Acb_Ntk_t * p, int i )                     { assert(i>0); return (Vec_Str_t *)Vec_WecEntry(&p->vCnfs, i);                                         }Acb_ObjCnfs280,29503
static inline void           Acb_ObjSetCopy( Acb_Ntk_t * p, int i, int x )           { assert(Acb_ObjCopy(p, i) == -1); Vec_IntWriteEntry( &p->vObjCopy, i, x );                            }Acb_ObjSetCopy282,29694
static inline void           Acb_ObjSetFunc( Acb_Ntk_t * p, int i, int x )           { assert(Acb_ObjFunc(p, i) == -1); Vec_IntWriteEntry( &p->vObjFunc, i, x );                            }Acb_ObjSetFunc283,29884
static inline void           Acb_ObjSetWeight( Acb_Ntk_t * p, int i, int x )         { assert(Acb_ObjWeight(p, i)== 0); Vec_IntWriteEntry( &p->vObjWeight, i, x );                          }Acb_ObjSetWeight284,30074
static inline void           Acb_ObjSetTruth( Acb_Ntk_t * p, int i, word x )         { assert(Acb_ObjTruth(p, i) == 0); Vec_WrdWriteEntry( &p->vObjTruth, i, x );                           }Acb_ObjSetTruth285,30264
static inline void           Acb_ObjSetName( Acb_Ntk_t * p, int i, int x )           { assert(Acb_ObjName(p, i) ==  0); Vec_IntWriteEntry( &p->vObjName, i, x );                            }Acb_ObjSetName286,30454
static inline void           Acb_ObjSetAttrs( Acb_Ntk_t * p, int i, int * a, int s ) { assert(Acb_ObjAttr(p, i) == 0); if ( !a ) return; Vec_IntWriteEntry(&p->vObjAttr, i, Vec_IntSize(&p->vAttrSto)); Vec_IntPush(&p->vAttrSto, s); Vec_IntPushArray(&p->vAttrSto, a, s);  }Acb_ObjSetAttrs287,30644
static inline int            Acb_ObjSetLevelD( Acb_Ntk_t * p, int i, int x )         { Vec_IntWriteEntry( &p->vLevelD, i, x );  return x;                                                   }Acb_ObjSetLevelD288,30915
static inline int            Acb_ObjSetLevelR( Acb_Ntk_t * p, int i, int x )         { Vec_IntWriteEntry( &p->vLevelR, i, x );  return x;                                                   }Acb_ObjSetLevelR289,31105
static inline int            Acb_ObjSetPathD( Acb_Ntk_t * p, int i, int x )          { Vec_IntWriteEntry( &p->vPathD, i, x );   return x;                                                   }Acb_ObjSetPathD290,31295
static inline int            Acb_ObjSetPathR( Acb_Ntk_t * p, int i, int x )          { Vec_IntWriteEntry( &p->vPathR, i, x );   return x;                                                   }Acb_ObjSetPathR291,31485
static inline float          Acb_ObjSetCounts( Acb_Ntk_t * p, int i, float x )       { Vec_FltWriteEntry( &p->vCounts, i, x );   return x;                                                  }Acb_ObjSetCounts292,31675
static inline int            Acb_ObjUpdateLevelD( Acb_Ntk_t * p, int i, int x )      { Vec_IntUpdateEntry( &p->vLevelD, i, x );  return x;                                                  }Acb_ObjUpdateLevelD293,31865
static inline int            Acb_ObjUpdateLevelR( Acb_Ntk_t * p, int i, int x )      { Vec_IntUpdateEntry( &p->vLevelR, i, x );  return x;                                                  }Acb_ObjUpdateLevelR294,32055
static inline int            Acb_ObjAddToPathD( Acb_Ntk_t * p, int i, int x )        { Vec_IntAddToEntry( &p->vPathD, i, x );   return x;                                                   }Acb_ObjAddToPathD295,32245
static inline int            Acb_ObjAddToPathR( Acb_Ntk_t * p, int i, int x )        { Vec_IntAddToEntry( &p->vPathR, i, x );   return x;                                                   }Acb_ObjAddToPathR296,32435
static inline int            Acb_ObjNtkId( Acb_Ntk_t * p, int i )                    { assert(i>0); return Acb_ObjIsBox(p, i) ? Acb_ObjFanin(p, i, Acb_ObjFaninNum(p, i)) : 0;              }Acb_ObjNtkId298,32626
static inline Acb_Ntk_t *    Acb_ObjNtk( Acb_Ntk_t * p, int i )                      { assert(i>0); return Acb_NtkNtk(p, Acb_ObjNtkId(p, i));                                               }Acb_ObjNtk299,32816
static inline int            Acb_ObjIsSeq( Acb_Ntk_t * p, int i )                    { assert(i>0); return Acb_ObjIsBox(p, i) ? Acb_ObjNtk(p, i)->fSeq : Acb_TypeIsSeq(Acb_ObjType(p, i));  }Acb_ObjIsSeq300,33006
static inline int            Acb_ObjRangeId( Acb_Ntk_t * p, int i )                  { return Acb_NtkHasObjRanges(p) ? Vec_IntEntry(&p->vObjRange, i) : 0;                                  }Acb_ObjRangeId302,33197
static inline int            Acb_ObjRange( Acb_Ntk_t * p, int i )                    { return Abc_Lit2Var( Acb_ObjRangeId(p, i) );                                                          }Acb_ObjRange303,33387
static inline int            Acb_ObjLeft( Acb_Ntk_t * p, int i )                     { return Acb_NtkRangeLeft(p, Acb_ObjRange(p, i));                                                      }Acb_ObjLeft304,33577
static inline int            Acb_ObjRight( Acb_Ntk_t * p, int i )                    { return Acb_NtkRangeRight(p, Acb_ObjRange(p, i));                                                     }Acb_ObjRight305,33767
static inline int            Acb_ObjSigned( Acb_Ntk_t * p, int i )                   { return Abc_LitIsCompl(Acb_ObjRangeId(p, i));                                                         }Acb_ObjSigned306,33957
static inline int            Acb_ObjRangeSize( Acb_Ntk_t * p, int i )                { return Acb_NtkRangeSize(p, Acb_ObjRange(p, i));                                                      }Acb_ObjRangeSize307,34147
static inline void           Acb_ObjSetRangeSign( Acb_Ntk_t * p, int i, int x )      { assert(Acb_NtkHasObjRanges(p));  Vec_IntWriteEntry(&p->vObjRange, i, x);                             }Acb_ObjSetRangeSign308,34337
static inline void           Acb_ObjSetRange( Acb_Ntk_t * p, int i, int x )          { assert(Acb_NtkHasObjRanges(p));  Vec_IntWriteEntry(&p->vObjRange, i, Abc_Var2Lit(x,0));              }Acb_ObjSetRange309,34527
static inline void           Acb_ObjHashRange( Acb_Ntk_t * p, int i, int l, int r )  { Acb_ObjSetRange( p, i, Acb_NtkHashRange(p, l, r) );                                                  }Acb_ObjHashRange310,34717
static inline int            Acb_ObjRangeSign( Acb_Ntk_t * p, int i )                { return Abc_Var2Lit( Acb_ObjRangeSize(p, i), Acb_ObjSigned(p, i) );                                   }Acb_ObjRangeSign311,34907
static inline int            Acb_ObjTravId( Acb_Ntk_t * p, int i )                   { return Vec_IntEntry(&p->vObjTrav, i);                                                                }Acb_ObjTravId313,35098
static inline int            Acb_ObjTravIdDiff( Acb_Ntk_t * p, int i )               { return p->nObjTravs - Vec_IntEntry(&p->vObjTrav, i);                                                 }Acb_ObjTravIdDiff314,35288
static inline int            Acb_ObjIsTravIdCur( Acb_Ntk_t * p, int i )              { return Acb_ObjTravId(p, i) == p->nObjTravs;                                                          }Acb_ObjIsTravIdCur315,35478
static inline int            Acb_ObjIsTravIdPrev( Acb_Ntk_t * p, int i )             { return Acb_ObjTravId(p, i) == p->nObjTravs-1;                                                        }Acb_ObjIsTravIdPrev316,35668
static inline int            Acb_ObjIsTravIdDiff( Acb_Ntk_t * p, int i, int d )      { return Acb_ObjTravId(p, i) == p->nObjTravs-d;                                                        }Acb_ObjIsTravIdDiff317,35858
static inline int            Acb_ObjSetTravIdCur( Acb_Ntk_t * p, int i )             { int r = Acb_ObjIsTravIdCur(p, i);  Vec_IntWriteEntry(&p->vObjTrav, i, p->nObjTravs);   return r;     }Acb_ObjSetTravIdCur318,36048
static inline int            Acb_ObjSetTravIdPrev( Acb_Ntk_t * p, int i )            { int r = Acb_ObjIsTravIdPrev(p, i); Vec_IntWriteEntry(&p->vObjTrav, i, p->nObjTravs-1); return r;     }Acb_ObjSetTravIdPrev319,36238
static inline int            Acb_ObjSetTravIdDiff( Acb_Ntk_t * p, int i, int d )     { int r = Acb_ObjTravIdDiff(p, i);   Vec_IntWriteEntry(&p->vObjTrav, i, p->nObjTravs-d); return r;     }Acb_ObjSetTravIdDiff320,36428
static inline int            Acb_NtkTravId( Acb_Ntk_t * p )                          { return p->nObjTravs;                                                                                 }Acb_NtkTravId321,36618
static inline void           Acb_NtkIncTravId( Acb_Ntk_t * p )                       { if ( !Acb_NtkHasObjTravs(p) ) Acb_NtkCleanObjTravs(p); p->nObjTravs++;                               }Acb_NtkIncTravId322,36808
#define Acb_ManForEachNtk(Acb_ManForEachNtk328,37219
#define Acb_NtkForEachPi(Acb_NtkForEachPi331,37381
#define Acb_NtkForEachPo(Acb_NtkForEachPo333,37540
#define Acb_NtkForEachCi(Acb_NtkForEachCi336,37700
#define Acb_NtkForEachCo(Acb_NtkForEachCo338,37859
#define Acb_NtkForEachCoDriver(Acb_NtkForEachCoDriver340,38018
#define Acb_NtkForEachCoAndDriver(Acb_NtkForEachCoAndDriver342,38197
#define Acb_NtkForEachCiVec(Acb_NtkForEachCiVec345,38405
#define Acb_NtkForEachCoVec(Acb_NtkForEachCoVec347,38585
#define Acb_NtkForEachCoDriverVec(Acb_NtkForEachCoDriverVec349,38765
#define Acb_NtkForEachBoxSeq(Acb_NtkForEachBoxSeq352,38966
#define Acb_NtkForEachCioOrder(Acb_NtkForEachCioOrder354,39130
#define Acb_NtkForEachObj(Acb_NtkForEachObj358,39303
#define Acb_NtkForEachObjReverse(Acb_NtkForEachObjReverse360,39470
#define Acb_NtkForEachNode(Acb_NtkForEachNode362,39639
#define Acb_NtkForEachNodeSupp(Acb_NtkForEachNodeSupp364,39828
#define Acb_NtkForEachNodeReverse(Acb_NtkForEachNodeReverse366,40055
#define Acb_NtkForEachObjType(Acb_NtkForEachObjType368,40246
#define Acb_NtkForEachBox(Acb_NtkForEachBox370,40434
#define Acb_ObjForEachFanin(Acb_ObjForEachFanin373,40600
#define Acb_ObjForEachFaninFast(Acb_ObjForEachFaninFast375,40773
#define Acb_ObjForEachFanout(Acb_ObjForEachFanout378,40955
#define Acb_ObjForEachFon(Acb_ObjForEachFon381,41145
static inline int Acb_ObjFonNum( Acb_Ntk_t * p, int iObj )Acb_ObjFonNum399,41806
static inline int Acb_ObjWhatFanin( Acb_Ntk_t * p, int iObj, int iFaninGiven )Acb_ObjWhatFanin408,42015
static inline void Acb_ObjAddFanin( Acb_Ntk_t * p, int iObj, int iFanin )Acb_ObjAddFanin416,42261
static inline void Acb_ObjDeleteFaninIndex( Acb_Ntk_t * p, int iObj, int iFaninIndex )Acb_ObjDeleteFaninIndex423,42500
static inline void Acb_ObjDeleteFanin( Acb_Ntk_t * p, int iObj, int iFanin )Acb_ObjDeleteFanin431,42788
static inline void Acb_ObjAddFanins( Acb_Ntk_t * p, int iObj, Vec_Int_t * vFanins )Acb_ObjAddFanins438,43079
static inline void Acb_ObjSetNtkId( Acb_Ntk_t * p, int iObj, int iNtk ) // should be called after fanins are addedAcb_ObjSetNtkId445,43303
static inline void Acb_ObjRemoveFanins( Acb_Ntk_t * p, int iObj )Acb_ObjRemoveFanins451,43553
static inline int Acb_ObjAlloc( Acb_Ntk_t * p, Acb_ObjType_t Type, int nFans, int nFons )Acb_ObjAlloc461,43803
static inline int Acb_ObjDup( Acb_Ntk_t * pNew, Acb_Ntk_t * p, int i )Acb_ObjDup509,45968
static inline void Acb_ObjDelete( Acb_Ntk_t * p, int iObj )Acb_ObjDelete515,46194
static inline void Acb_ObjAddFaninFanoutOne( Acb_Ntk_t * p, int iObj, int iFanin )Acb_ObjAddFaninFanoutOne524,46423
static inline void Acb_ObjAddFaninFanout( Acb_Ntk_t * p, int iObj )Acb_ObjAddFaninFanout529,46611
static inline void Acb_ObjRemoveFaninFanoutOne( Acb_Ntk_t * p, int iObj, int iFanin )Acb_ObjRemoveFaninFanoutOne535,46838
static inline void Acb_ObjRemoveFaninFanout( Acb_Ntk_t * p, int iObj )Acb_ObjRemoveFaninFanout541,47073
static inline void Acb_ObjPatchFanin( Acb_Ntk_t * p, int iObj, int iFanin, int iFaninNew )Acb_ObjPatchFanin550,47360
static inline void Acb_NtkCreateFanout( Acb_Ntk_t * p )Acb_NtkCreateFanout563,47885
static inline Acb_Ntk_t *  Acb_NtkAlloc( Acb_Man_t * p, int NameId, int nCis, int nCos, int nObjs )Acb_NtkAlloc582,48315
static inline void Acb_NtkFree( Acb_Ntk_t * p )Acb_NtkFree596,48977
static inline int Acb_NtkNewStrId( Acb_Ntk_t * pNtk, const char * format, ...  )Acb_NtkNewStrId637,50298
static inline int Acb_ManNewConstId( Acb_Ntk_t * p, Vec_Str_t * vBits ) Acb_ManNewConstId654,50986
static inline int Acb_ManNewConstZero( Acb_Ntk_t * p, int nBits ) Acb_ManNewConstZero660,51276
static inline void Acb_NtkAdd( Acb_Man_t * p, Acb_Ntk_t * pNtk )Acb_NtkAdd666,51529
static inline void Acb_NtkUpdate( Acb_Man_t * p, Acb_Ntk_t * pNtk )Acb_NtkUpdate674,51834
static inline Vec_Int_t * Acb_NtkCollect( Acb_Ntk_t * p )Acb_NtkCollect685,52212
static inline Acb_Ntk_t * Acb_NtkDup( Acb_Man_t * pMan, Acb_Ntk_t * p, Vec_Int_t * vObjs )Acb_NtkDup693,52433
static inline Acb_Ntk_t * Acb_NtkDupOrder( Acb_Man_t * pMan, Acb_Ntk_t * p, Vec_Int_t*(* pFuncOrder)(Acb_Ntk_t*) )Acb_NtkDupOrder713,53232
static inline void Acb_NtkDupAttrs( Acb_Ntk_t * pNew, Acb_Ntk_t * p )Acb_NtkDupAttrs724,53608
static inline int Acb_NtkMemory( Acb_Ntk_t * p )Acb_NtkMemory742,54746
static inline void Acb_NtkPrintStats( Acb_Ntk_t * p )Acb_NtkPrintStats775,56040
static inline void Acb_NtkPrint( Acb_Ntk_t * p )Acb_NtkPrint789,56630
static inline Acb_Man_t * Acb_ManAlloc( char * pFileName, int nNtks, Abc_Nam_t * pStrs, Abc_Nam_t * pFuns, Abc_Nam_t * pMods, Hash_IntMan_t * vHash )Acb_ManAlloc816,57364
static inline void Acb_ManDupTypeNames( Acb_Man_t * pNew, Acb_Man_t * p )Acb_ManDupTypeNames839,58400
static inline Acb_Man_t * Acb_ManDup( Acb_Man_t * p, Vec_Int_t*(* pFuncOrder)(Acb_Ntk_t*) )Acb_ManDup843,58556
static inline void Acb_ManFree( Acb_Man_t * p )Acb_ManFree860,59340
static inline int Acb_ManGetMap( Acb_Man_t * p, int i )Acb_ManGetMap880,59907
static inline void Acb_ManSetMap( Acb_Man_t * p, int i, int x )Acb_ManSetMap884,60012
static inline void Acb_ManUnsetMap( Acb_Man_t * p, int i )Acb_ManUnsetMap890,60209
static inline void Acb_ManCleanMap( Acb_Man_t * p )Acb_ManCleanMap894,60315
static inline int  Acb_NtkGetMap( Acb_Ntk_t * p, int i )          { return Acb_ManGetMap(p->pDesign, i); }Acb_NtkGetMap901,60520
static inline void Acb_NtkSetMap( Acb_Ntk_t * p, int i, int x )   { Acb_ManSetMap(p->pDesign, i, x);     }Acb_NtkSetMap902,60627
static inline void Acb_NtkUnsetMap( Acb_Ntk_t * p, int i )        { Acb_ManUnsetMap(p->pDesign, i);      }Acb_NtkUnsetMap903,60734
static inline void Acb_NtkCleanMap( Acb_Ntk_t * p )               { Acb_ManCleanMap(p->pDesign);         }Acb_NtkCleanMap904,60841
static inline int Acb_ManGetMap2( Acb_Man_t * p, int i )Acb_ManGetMap2906,60949
static inline void Acb_ManSetMap2( Acb_Man_t * p, int i, int x )Acb_ManSetMap2910,61056
static inline void Acb_ManUnsetMap2( Acb_Man_t * p, int i )Acb_ManUnsetMap2916,61257
static inline void Acb_ManCleanMap2( Acb_Man_t * p )Acb_ManCleanMap2920,61365
static inline int  Acb_NtkGetMap2( Acb_Ntk_t * p, int i )          { return Acb_ManGetMap2(p->pDesign, i); }Acb_NtkGetMap2927,61574
static inline void Acb_NtkSetMap2( Acb_Ntk_t * p, int i, int x )   { Acb_ManSetMap2(p->pDesign, i, x);     }Acb_NtkSetMap2928,61683
static inline void Acb_NtkUnsetMap2( Acb_Ntk_t * p, int i )        { Acb_ManUnsetMap2(p->pDesign, i);      }Acb_NtkUnsetMap2929,61792
static inline void Acb_NtkCleanMap2( Acb_Ntk_t * p )               { Acb_ManCleanMap2(p->pDesign);         }Acb_NtkCleanMap2930,61901
static inline int Acb_ManMemory( Acb_Man_t * p )Acb_ManMemory932,62011
static inline int Acb_ManObjNum( Acb_Man_t * p )Acb_ManObjNum950,62664
static inline int Acb_ManBoxNum( Acb_Man_t * p )Acb_ManBoxNum957,62849
static inline void Acb_ManBoxNumRec_rec( Acb_Ntk_t * p, int * pCountP, int * pCountU )Acb_ManBoxNumRec_rec964,63036
static inline void Acb_ManBoxNumRec( Acb_Man_t * p, int * pnPrims, int * pnUsers )Acb_ManBoxNumRec982,63581
static inline void Acb_ManPrintStats( Acb_Man_t * p, int nModules, int fVerbose )Acb_ManPrintStats993,64013

src/base/test/test.c,108
void Test_Init( Abc_Frame_t * pAbc )Test_Init45,1177
void Test_End( Abc_Frame_t * pAbc )Test_End60,1453

src/base/wln/wlnRetime.c,3790
typedef struct Wln_Ret_t_ Wln_Ret_t;Wln_Ret_t30,792
struct Wln_Ret_t_ Wln_Ret_t_31,829
    Wln_Ntk_t *       pNtk;         // static netlistpNtk33,850
    Vec_Int_t         vFanins;      // fanins and edge placesvFanins34,904
    Vec_Int_t         vFanouts;     // fanouts and edge placesvFanouts35,966
    Vec_Int_t         vEdgeLinks;   // edge linksvEdgeLinks36,1029
    Vec_Int_t         vFfClasses;   // flop classesvFfClasses37,1079
    Vec_Int_t         vNodeDelays;  // object delaysvNodeDelays38,1131
    Vec_Int_t         vPathDelays;  // delays from sources to sinksvPathDelays39,1184
    Vec_Int_t         vSources;     // critical sourcesvSources40,1252
    Vec_Int_t         vSinks;       // critical sinksvSinks41,1308
    Vec_Int_t         vFront;       // retiming frontiervFront42,1362
    Vec_Int_t         vMoves;       // retiming moves (paired with delay)vMoves43,1419
    int               nClasses;     // the number of flop classesnClasses44,1493
    int               DelayMax;     // critical delay at any timeDelayMax45,1559
static inline int *   Wln_RetFanins( Wln_Ret_t * p, int i )  { return Vec_IntEntryP( &p->vFanins,  Vec_IntEntry(&p->vFanins, i) );  }Wln_RetFanins48,1629
static inline int *   Wln_RetFanouts( Wln_Ret_t * p, int i ) { return Vec_IntEntryP( &p->vFanouts, Vec_IntEntry(&p->vFanouts, i) ); }Wln_RetFanouts49,1763
#define Wln_RetForEachFanin(Wln_RetForEachFanin51,1898
#define Wln_RetForEachFanout(Wln_RetForEachFanout56,2242
void Wln_RetPrintObj( Wln_Ret_t * p, int iObj )Wln_RetPrintObj76,3015
void Wln_RetPrint( Wln_Ret_t * p, int fVerbose )Wln_RetPrint92,3658
int Wln_RetComputeFfClasses( Wln_Ntk_t * pNtk, Vec_Int_t * vClasses )Wln_RetComputeFfClasses130,4821
Wln_Ret_t * Wln_RetAlloc( Wln_Ntk_t * pNtk )Wln_RetAlloc149,5511
void Wln_RetFree( Wln_Ret_t * p )Wln_RetFree201,7623
int Wln_RetMemUsage( Wln_Ret_t * p )Wln_RetMemUsage215,8043
void Wln_RetMarkChanges_rec( Wln_Ret_t * p, int iObj )Wln_RetMarkChanges_rec242,8719
void Wln_RetMarkChanges( Wln_Ret_t * p, Vec_Int_t * vFront )Wln_RetMarkChanges252,9045
int Wln_RetPropDelay_rec( Wln_Ret_t * p, int iObj )Wln_RetPropDelay_rec267,9444
int Wln_RetPropDelay( Wln_Ret_t * p )Wln_RetPropDelay285,10015
void Wln_RetFindSources_rec( Wln_Ret_t * p, int iObj )Wln_RetFindSources_rec312,10735
void Wln_RetFindSources( Wln_Ret_t * p )Wln_RetFindSources324,11273
int * Wln_RetHeadToTail( Wln_Ret_t * p, int * pHead )Wln_RetHeadToTail347,11818
static inline int Wln_RetCheckForwardOne( Wln_Ret_t * p, int iObj )Wln_RetCheckForwardOne357,12062
int Wln_RetCheckForward( Wln_Ret_t * p, Vec_Int_t * vSet )Wln_RetCheckForward375,12666
static inline int Wln_RetCheckBackwardOne( Wln_Ret_t * p, int iObj )Wln_RetCheckBackwardOne384,12874
int Wln_RetCheckBackward( Wln_Ret_t * p, Vec_Int_t * vSet )Wln_RetCheckBackward403,13515
int Wln_RetRemoveOneFanin( Wln_Ret_t * p, int iObj )Wln_RetRemoveOneFanin424,13973
int Wln_RetRemoveOneFanout( Wln_Ret_t * p, int iObj )Wln_RetRemoveOneFanout441,14544
void Wln_RetInsertOneFanin( Wln_Ret_t * p, int iObj, int iFlop )Wln_RetInsertOneFanin457,15048
void Wln_RetInsertOneFanout( Wln_Ret_t * p, int iObj, int iFlop )Wln_RetInsertOneFanout471,15524
void Wln_RetRetimeForward( Wln_Ret_t * p, Vec_Int_t * vSet )Wln_RetRetimeForward484,15943
void Wln_RetRetimeBackward( Wln_Ret_t * p, Vec_Int_t * vSet )Wln_RetRetimeBackward495,16234
void Wln_RetAddToMoves( Wln_Ret_t * p, Vec_Int_t * vSet, int Delay, int fForward, int nMoves, int fSkipSimple, int fVerbose )Wln_RetAddToMoves506,16526
void Wln_NtkRetimeCreateDelayInfo( Wln_Ntk_t * pNtk )Wln_NtkRetimeCreateDelayInfo543,17892
Vec_Int_t * Wln_NtkRetime( Wln_Ntk_t * pNtk, int fSkipSimple, int fVerbose )Wln_NtkRetime574,19314

src/base/wln/wlnObj.c,903
char * Wln_ObjName( Wln_Ntk_t * p, int iObj )Wln_ObjName45,1251
char * Wln_ObjConstString( Wln_Ntk_t * p, int iObj )Wln_ObjConstString53,1534
void Wln_ObjUpdateType( Wln_Ntk_t * p, int iObj, int Type )Wln_ObjUpdateType58,1718
void Wln_ObjSetConst( Wln_Ntk_t * p, int iObj, int NameId )Wln_ObjSetConst65,1945
void Wln_ObjSetSlice( Wln_Ntk_t * p, int iObj, int SliceId )Wln_ObjSetSlice70,2091
void Wln_ObjAddFanin( Wln_Ntk_t * p, int iObj, int i )        Wln_ObjAddFanin75,2239
int Wln_ObjAddFanins( Wln_Ntk_t * p, int iObj, Vec_Int_t * vFanins )Wln_ObjAddFanins98,2967
int Wln_ObjAlloc( Wln_Ntk_t * p, int Type, int Signed, int End, int Beg )Wln_ObjAlloc105,3166
int Wln_ObjClone( Wln_Ntk_t * pNew, Wln_Ntk_t * p, int iObj )Wln_ObjClone125,4108
int Wln_ObjCreateCo( Wln_Ntk_t * p, int iFanin )Wln_ObjCreateCo129,4307
void Wln_ObjPrint( Wln_Ntk_t * p, int iObj )Wln_ObjPrint136,4505

src/base/wln/wlnNdr.c,744
void * Wln_NtkToNdr( Wln_Ntk_t * p )Wln_NtkToNdr45,1280
void Wln_WriteNdr( Wln_Ntk_t * p, char * pFileName )Wln_WriteNdr81,2644
void Wln_NtkToNdrTest( Wln_Ntk_t * p )Wln_NtkToNdrTest88,2879
int Ndr_ObjGetRange( Ndr_Data_t * p, int Obj, int * End, int * Beg )Ndr_ObjGetRange120,3651
void Ndr_NtkPrintObjects( Wln_Ntk_t * pNtk )Ndr_NtkPrintObjects134,4048
void Wln_NtkCheckIntegrity( void * pData )Wln_NtkCheckIntegrity153,4637
Wln_Ntk_t * Wln_NtkFromNdr( void * pData, int fDump )Wln_NtkFromNdr182,5911
Wln_Ntk_t * Wln_ReadNdr( char * pFileName )Wln_ReadNdr298,10890
void Wln_ReadNdrTest()Wln_ReadNdrTest308,11247
void Wln_NtkRetimeTest( char * pFileName, int fSkipSimple, int fDump, int fVerbose )Wln_NtkRetimeTest317,11578

src/base/wln/wlnMem.c,0

src/base/wln/wlnWriteVer.c,513
void Wln_WriteTableOne( FILE * pFile, int nFans, int nOuts, word * pTable, int Id )Wln_WriteTableOne45,1229
void Wln_WriteTables( FILE * pFile, Wln_Ntk_t * p )Wln_WriteTables64,2160
void Wln_WriteAddPos( Wln_Ntk_t * p )Wln_WriteAddPos97,3204
void Wln_WriteVerIntVec( FILE * pFile, Wln_Ntk_t * p, Vec_Int_t * vVec, int Start )Wln_WriteVerIntVec117,3607
void Wln_WriteVerInt( FILE * pFile, Wln_Ntk_t * p )Wln_WriteVerInt140,4375
void Wln_WriteVer( Wln_Ntk_t * p, char * pFileName )Wln_WriteVer478,22621

src/base/wln/wlnWlc.c,392
char * Wln_ConstFromBits( int * pBits, int nBits )Wln_ConstFromBits47,1292
char * Wln_ConstFromStr( char * pBits, int nBits )Wln_ConstFromStr57,1625
int Wln_TrasformNameId( Wln_Ntk_t * pNew, Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wln_TrasformNameId67,1921
Wln_Ntk_t * Wln_NtkFromWlc( Wlc_Ntk_t * p )Wln_NtkFromWlc71,2093
void Wln_NtkFromWlcTest( Wlc_Ntk_t * p )Wln_NtkFromWlcTest196,7522

src/base/wln/wln.h,18140
#define ABC__base__wln__wln_hABC__base__wln__wln_h22,523
typedef struct Wln_Vec_t_  Wln_Vec_t;Wln_Vec_t46,1427
struct Wln_Vec_t_ Wln_Vec_t_47,1465
    int                    nCap;nCap49,1486
    int                    nSize;nSize50,1519
    union { int            Array[2];  Array51,1553
            int *          pArray[1]; };pArray52,1592
typedef struct Wln_Ntk_t_  Wln_Ntk_t;Wln_Ntk_t55,1637
struct Wln_Ntk_t_ Wln_Ntk_t_56,1675
    char *                 pName;                // model namepName58,1696
    char *                 pSpec;                // input file namepSpec59,1759
    int                    fSmtLib;              // derived from SMT-LIBfSmtLib60,1827
    Vec_Int_t              vCis;                 // combinational inputsvCis61,1900
    Vec_Int_t              vCos;                 // combinational outputsvCos62,1973
    Vec_Int_t              vFfs;                 // flopsvFfs63,2047
    Vec_Int_t              vTypes;               // object types   vTypes64,2105
    Wln_Vec_t *            vFanins;              // object fanins (exceptions: const, select)vFanins65,2173
    Vec_Int_t              vRanges;              // object rangesvRanges66,2267
    Hash_IntMan_t *        pRanges;              // object rangespRanges67,2333
    Vec_Int_t              vNameIds;             // object name IDsvNameIds68,2399
    Vec_Int_t              vInstIds;             // object name IDsvInstIds69,2467
    Abc_Nam_t *            pManName;             // object namespManName70,2535
    Vec_Str_t              vSigns;               // object signednessvSigns71,2600
    int                    nTravIds;             // counter of traversal IDsnTravIds72,2670
    Vec_Int_t              vTravIds;             // trav IDs of the objectsvTravIds73,2747
    Vec_Int_t              vCopies;              // object first bitsvCopies74,2823
    Vec_Int_t              vBits;                // object mapping into AIG nodesvBits75,2893
    Vec_Int_t              vLevels;              // object levelsvLevels76,2975
    Vec_Int_t              vRefs;                // object reference countersvRefs77,3041
    Vec_Int_t              vFanout;              // static fanoutvFanout78,3119
    Vec_Int_t              vFaninAttrs;          // static fanin attributesvFaninAttrs79,3185
    Vec_Int_t              vFaninLists;          // static fanin attributesvFaninLists80,3261
    Vec_Ptr_t *            vTables;              // tablesvTables81,3337
    int                    nObjs[ABC_OPER_LAST]; // counter of objects of each typenObjs82,3396
    int                    nAnds[ABC_OPER_LAST]; // counter of AND gates after blastingnAnds83,3480
static inline int          Wln_NtkObjNum( Wln_Ntk_t * p )                        { return Vec_IntSize(&p->vTypes);                                            }Wln_NtkObjNum86,3572
static inline int          Wln_NtkCiNum( Wln_Ntk_t * p )                         { return Vec_IntSize(&p->vCis);                                              }Wln_NtkCiNum87,3732
static inline int          Wln_NtkCoNum( Wln_Ntk_t * p )                         { return Vec_IntSize(&p->vCos);                                              }Wln_NtkCoNum88,3892
static inline int          Wln_NtkFfNum( Wln_Ntk_t * p )                         { return Vec_IntSize(&p->vFfs);                                              }Wln_NtkFfNum89,4052
static inline int          Wln_NtkPiNum( Wln_Ntk_t * p )                         { return Wln_NtkCiNum(p) - Wln_NtkFfNum(p);                                  }Wln_NtkPiNum90,4212
static inline int          Wln_NtkPoNum( Wln_Ntk_t * p )                         { return Wln_NtkCoNum(p) - Wln_NtkFfNum(p);                                  }Wln_NtkPoNum91,4372
static inline int          Wln_NtkCi( Wln_Ntk_t * p, int i )                     { return Vec_IntEntry(&p->vCis, i);                                          }Wln_NtkCi93,4533
static inline int          Wln_NtkCo( Wln_Ntk_t * p, int i )                     { return Vec_IntEntry(&p->vCos, i);                                          }Wln_NtkCo94,4693
static inline int          Wln_NtkFf( Wln_Ntk_t * p, int i )                     { return Vec_IntEntry(&p->vFfs, i);                                          }Wln_NtkFf95,4853
static inline int          Wln_ObjType( Wln_Ntk_t * p, int i )                   { return Vec_IntEntry(&p->vTypes, i);                                        }Wln_ObjType97,5014
static inline int          Wln_ObjIsNone( Wln_Ntk_t * p, int i )                 { return Wln_ObjType(p, i) == ABC_OPER_NONE;                                 }Wln_ObjIsNone98,5174
static inline int          Wln_ObjIsCi( Wln_Ntk_t * p, int i )                   { return Wln_ObjType(p, i) == ABC_OPER_CI;                                   }Wln_ObjIsCi99,5334
static inline int          Wln_ObjIsCo( Wln_Ntk_t * p, int i )                   { return Wln_ObjType(p, i) == ABC_OPER_CO;                                   }Wln_ObjIsCo100,5494
static inline int          Wln_ObjIsCio( Wln_Ntk_t * p, int i )                  { return Wln_ObjType(p, i) == ABC_OPER_CI || Wln_ObjType(p, i)==ABC_OPER_CO; }Wln_ObjIsCio101,5654
static inline int          Wln_ObjIsFon( Wln_Ntk_t * p, int i )                  { return Wln_ObjType(p, i) == ABC_OPER_FON;                                  }Wln_ObjIsFon102,5814
static inline int          Wln_ObjIsFf( Wln_Ntk_t * p, int i )                   { return Wln_ObjType(p, i) == ABC_OPER_DFFRSE;                               }Wln_ObjIsFf103,5974
static inline int          Wln_ObjIsConst( Wln_Ntk_t * p, int i )                { return Wln_ObjType(p, i) == ABC_OPER_CONST;                                }Wln_ObjIsConst104,6134
static inline int          Wln_ObjIsSlice( Wln_Ntk_t * p, int i )                { return Wln_ObjType(p, i) == ABC_OPER_SLICE;                                }Wln_ObjIsSlice105,6294
static inline int          Wln_ObjIsRotate( Wln_Ntk_t * p, int i )               { return Wln_ObjType(p, i) == ABC_OPER_SHIFT_ROTL || Wln_ObjType(p, i) == ABC_OPER_SHIFT_ROTR; }Wln_ObjIsRotate106,6454
static inline int          Wln_ObjIsTable( Wln_Ntk_t * p, int i )                { return Wln_ObjType(p, i) == ABC_OPER_TABLE;                                }Wln_ObjIsTable107,6632
static inline int          Wln_ObjFaninNum( Wln_Ntk_t * p, int i )               { return p->vFanins[i].nSize;                                                }Wln_ObjFaninNum109,6793
static inline int *        Wln_ObjFanins( Wln_Ntk_t * p, int i )                 { return Wln_ObjFaninNum(p, i) > 2 ? p->vFanins[i].pArray[0]    : p->vFanins[i].Array;    }Wln_ObjFanins110,6953
static inline int          Wln_ObjFanin( Wln_Ntk_t * p, int i, int f )           { return Wln_ObjFaninNum(p, i) > 2 ? p->vFanins[i].pArray[0][f] : p->vFanins[i].Array[f]; }Wln_ObjFanin111,7126
static inline void         Wln_ObjSetFanin( Wln_Ntk_t * p, int i, int f, int v ) { Wln_ObjFanins( p, i )[f] = v;                                              }Wln_ObjSetFanin112,7299
static inline int          Wln_ObjFanin0( Wln_Ntk_t * p, int i )                 { return Wln_ObjFanin( p, i, 0 );                                            }Wln_ObjFanin0113,7459
static inline int          Wln_ObjFanin1( Wln_Ntk_t * p, int i )                 { return Wln_ObjFanin( p, i, 1 );                                            }Wln_ObjFanin1114,7619
static inline int          Wln_ObjFanin2( Wln_Ntk_t * p, int i )                 { return Wln_ObjFanin( p, i, 2 );                                            }Wln_ObjFanin2115,7779
static inline int          Wln_ObjRangeId( Wln_Ntk_t * p, int i )                { return Vec_IntEntry( &p->vRanges, i );                                     }Wln_ObjRangeId117,7940
static inline int          Wln_ObjRangeEnd( Wln_Ntk_t * p, int i )               { return Hash_IntObjData0( p->pRanges, Wln_ObjRangeId(p, i) );               }Wln_ObjRangeEnd118,8100
static inline int          Wln_ObjRangeBeg( Wln_Ntk_t * p, int i )               { return Hash_IntObjData1( p->pRanges, Wln_ObjRangeId(p, i) );               }Wln_ObjRangeBeg119,8260
static inline int          Wln_ObjRangeIsReversed( Wln_Ntk_t * p, int i )        { return Wln_ObjRangeEnd(p, i) < Wln_ObjRangeBeg(p, i);                      }Wln_ObjRangeIsReversed120,8420
static inline int          Wln_ObjRange( Wln_Ntk_t * p, int i )                  { return 1 + Abc_AbsInt(Wln_ObjRangeEnd(p, i)-Wln_ObjRangeBeg(p, i));        }Wln_ObjRange121,8580
static inline int          Wln_ObjIsSigned( Wln_Ntk_t * p, int i )               { return (int)Vec_StrEntry(&p->vSigns, i);                                   }Wln_ObjIsSigned123,8749
static inline void         Wln_ObjSetSigned( Wln_Ntk_t * p, int i )              { Vec_StrSetEntry(&p->vSigns, i, (char)1);                                   }Wln_ObjSetSigned124,8909
static inline int          Wln_ObjIsSignedFanin0( Wln_Ntk_t * p, int i )         { return Wln_ObjIsSigned( p, p->fSmtLib ? i : Wln_ObjFanin0(p, i) );         }Wln_ObjIsSignedFanin0125,9069
static inline int          Wln_ObjIsSignedFanin1( Wln_Ntk_t * p, int i )         { return Wln_ObjIsSigned( p, p->fSmtLib ? i : Wln_ObjFanin1(p, i) );         }Wln_ObjIsSignedFanin1126,9229
static inline int          Wln_ObjIsSignedFanin01( Wln_Ntk_t * p, int i )        { return Wln_ObjIsSignedFanin0( p, i ) && Wln_ObjIsSignedFanin1( p, i );     }Wln_ObjIsSignedFanin01127,9389
static inline int          Wln_ObjSign( Wln_Ntk_t * p, int i )                   { return Abc_Var2Lit( Wln_ObjRange(p, i), Wln_ObjIsSigned(p, i) );           }Wln_ObjSign128,9549
static inline void         Wln_NtkCleanCopy( Wln_Ntk_t * p )                     { Vec_IntFill( &p->vCopies, Vec_IntCap(&p->vTypes), 0 );                     }Wln_NtkCleanCopy130,9710
static inline int          Wln_NtkHasCopy( Wln_Ntk_t * p )                       { return Vec_IntSize( &p->vCopies ) > 0;                                     }Wln_NtkHasCopy131,9870
static inline void         Wln_ObjSetCopy( Wln_Ntk_t * p, int i, int c )         { Vec_IntWriteEntry( &p->vCopies, i, c );                                    }Wln_ObjSetCopy132,10030
static inline int          Wln_ObjCopy( Wln_Ntk_t * p, int i )                   { return Vec_IntEntry( &p->vCopies, i );                                     }Wln_ObjCopy133,10190
static inline void         Wln_NtkCleanLevel( Wln_Ntk_t * p )                    { Vec_IntFill( &p->vLevels, Vec_IntCap(&p->vTypes), 0 );                     }Wln_NtkCleanLevel135,10351
static inline int          Wln_NtkHasLevel( Wln_Ntk_t * p )                      { return Vec_IntSize( &p->vLevels ) > 0;                                     }Wln_NtkHasLevel136,10511
static inline void         Wln_ObjSetLevel( Wln_Ntk_t * p, int i, int l )        { Vec_IntWriteEntry( &p->vLevels, i, l );                                    }Wln_ObjSetLevel137,10671
static inline int          Wln_ObjLevel( Wln_Ntk_t * p, int i )                  { return Vec_IntEntry( &p->vLevels, i );                                     }Wln_ObjLevel138,10831
static inline void         Wln_NtkCleanNameId( Wln_Ntk_t * p )                   { Vec_IntFill( &p->vNameIds, Vec_IntCap(&p->vTypes), 0 );                    }Wln_NtkCleanNameId140,10992
static inline int          Wln_NtkHasNameId( Wln_Ntk_t * p )                     { return Vec_IntSize( &p->vNameIds ) > 0;                                    }Wln_NtkHasNameId141,11152
static inline void         Wln_ObjSetNameId( Wln_Ntk_t * p, int i, int n )       { Vec_IntWriteEntry( &p->vNameIds, i, n );                                   }Wln_ObjSetNameId142,11312
static inline int          Wln_ObjNameId( Wln_Ntk_t * p, int i )                 { return Vec_IntEntry( &p->vNameIds, i );                                    }Wln_ObjNameId143,11472
static inline void         Wln_NtkCleanInstId( Wln_Ntk_t * p )                   { Vec_IntFill( &p->vInstIds, Vec_IntCap(&p->vTypes), 0 );                    }Wln_NtkCleanInstId145,11633
static inline int          Wln_NtkHasInstId( Wln_Ntk_t * p )                     { return Vec_IntSize( &p->vInstIds ) > 0;                                    }Wln_NtkHasInstId146,11793
static inline void         Wln_ObjSetInstId( Wln_Ntk_t * p, int i, int n )       { Vec_IntWriteEntry( &p->vInstIds, i, n );                                   }Wln_ObjSetInstId147,11953
static inline int          Wln_ObjInstId( Wln_Ntk_t * p, int i )                 { return Vec_IntEntry( &p->vInstIds, i );                                    }Wln_ObjInstId148,12113
static inline void         Wln_NtkCleanRefs( Wln_Ntk_t * p )                     { Vec_IntFill( &p->vRefs, Vec_IntCap(&p->vTypes), 0 );                       }Wln_NtkCleanRefs150,12274
static inline int          Wln_NtkHasRefs( Wln_Ntk_t * p )                       { return Vec_IntSize( &p->vRefs ) > 0;                                       }Wln_NtkHasRefs151,12434
static inline void         Wln_ObjSetRefs( Wln_Ntk_t * p, int i, int n )         { Vec_IntWriteEntry( &p->vRefs, i, n );                                      }Wln_ObjSetRefs152,12594
static inline int          Wln_ObjRefs( Wln_Ntk_t * p, int i )                   { return Vec_IntEntry( &p->vRefs, i );                                       }Wln_ObjRefs153,12754
static inline int          Wln_ObjRefsInc( Wln_Ntk_t * p, int i )                { return (*Vec_IntEntryP( &p->vRefs, i ))++;                                 }Wln_ObjRefsInc154,12914
static inline int          Wln_ObjRefsDec( Wln_Ntk_t * p, int i )                { return --(*Vec_IntEntryP( &p->vRefs, i ));                                 }Wln_ObjRefsDec155,13074
static inline void         Wln_ObjRefsFaninInc( Wln_Ntk_t * p, int i, int k )    { Wln_ObjRefsInc( p, Wln_ObjFanin(p, i, k) );                                }Wln_ObjRefsFaninInc156,13234
static inline void         Wln_ObjRefsFaninDec( Wln_Ntk_t * p, int i, int k )    { Wln_ObjRefsDec( p, Wln_ObjFanin(p, i, k) );                                }Wln_ObjRefsFaninDec157,13394
static inline int          Wln_ObjFanoutNum( Wln_Ntk_t * p, int i )              { return Vec_IntEntry( &p->vRefs, i );                                       }Wln_ObjFanoutNum159,13555
static inline int *        Wln_ObjFanouts( Wln_Ntk_t * p, int i )                { return Vec_IntEntryP( &p->vFanout, Vec_IntEntry(&p->vFanout, i) );         }Wln_ObjFanouts160,13715
static inline int          Wln_ObjFanout( Wln_Ntk_t * p, int i, int f )          { return Wln_ObjFanouts( p, i )[f];                                          }Wln_ObjFanout161,13875
static inline void         Wln_ObjSetFanout( Wln_Ntk_t * p, int i, int f, int v ){ Wln_ObjFanouts( p, i )[f] = v;                                             }Wln_ObjSetFanout162,14035
static inline void         Wln_NtkIncrementTravId( Wln_Ntk_t * p )               { if (!p->nTravIds++) Vec_IntFill(&p->vTravIds, Vec_IntCap(&p->vTypes), 0);  }       Wln_NtkIncrementTravId164,14196
static inline void         Wln_ObjSetTravIdCurrent( Wln_Ntk_t * p, int i )       { Vec_IntWriteEntry( &p->vTravIds, i, p->nTravIds );                         }Wln_ObjSetTravIdCurrent165,14363
static inline void         Wln_ObjSetTravIdPrevious( Wln_Ntk_t * p, int i )      { Vec_IntWriteEntry( &p->vTravIds, i, p->nTravIds-1 );                       }Wln_ObjSetTravIdPrevious166,14523
static inline int          Wln_ObjIsTravIdCurrent( Wln_Ntk_t * p, int i )        { return (Vec_IntEntry(&p->vTravIds, i) == p->nTravIds);                     }   Wln_ObjIsTravIdCurrent167,14683
static inline int          Wln_ObjIsTravIdPrevious( Wln_Ntk_t * p, int i )       { return (Vec_IntEntry(&p->vTravIds, i) == p->nTravIds-1);                   }   Wln_ObjIsTravIdPrevious168,14846
static inline int          Wln_ObjCheckTravId( Wln_Ntk_t * p, int i )            { if ( Wln_ObjIsTravIdCurrent(p, i) ) return 1; Wln_ObjSetTravIdCurrent(p, i); return 0; }   Wln_ObjCheckTravId169,15009
static inline int          Wln_ObjCioId( Wln_Ntk_t * p, int i )                  { assert( Wln_ObjIsCio(p, i) ); return Wln_ObjFanin1(p, i);                  }Wln_ObjCioId171,15185
static inline int          Wln_ObjIsPi( Wln_Ntk_t * p, int i )                   { return Wln_ObjIsCi(p, i) && Wln_ObjCioId(p, i) <  Wln_NtkPiNum(p);         } Wln_ObjIsPi172,15345
static inline int          Wln_ObjIsPo( Wln_Ntk_t * p, int i )                   { return Wln_ObjIsCo(p, i) && Wln_ObjCioId(p, i) <  Wln_NtkPoNum(p);         } Wln_ObjIsPo173,15506
static inline int          Wln_ObjIsRo( Wln_Ntk_t * p, int i )                   { return Wln_ObjIsCi(p, i) && Wln_ObjCioId(p, i) >= Wln_NtkPiNum(p);         } Wln_ObjIsRo174,15667
static inline int          Wln_ObjIsRi( Wln_Ntk_t * p, int i )                   { return Wln_ObjIsCo(p, i) && Wln_ObjCioId(p, i) >= Wln_NtkPoNum(p);         } Wln_ObjIsRi175,15828
static inline int          Wln_ObjRoToRi( Wln_Ntk_t * p, int i )                 { assert( Wln_ObjIsRo(p, i) ); return Wln_NtkCo(p, Wln_NtkCoNum(p) - Wln_NtkCiNum(p) + Wln_ObjCioId(p, i)); } Wln_ObjRoToRi176,15989
static inline int          Wln_ObjRiToRo( Wln_Ntk_t * p, int i )                 { assert( Wln_ObjIsRi(p, i) ); return Wln_NtkCi(p, Wln_NtkCiNum(p) - Wln_NtkCoNum(p) + Wln_ObjCioId(p, i)); } Wln_ObjRiToRo177,16181
#define Wln_NtkForEachObj(Wln_NtkForEachObj187,16814
#define Wln_NtkForEachObjReverse(Wln_NtkForEachObjReverse189,16945
#define Wln_NtkForEachObjInternal(Wln_NtkForEachObjInternal191,17081
#define Wln_NtkForEachPi(Wln_NtkForEachPi194,17248
#define Wln_NtkForEachPo(Wln_NtkForEachPo196,17414
#define Wln_NtkForEachCi(Wln_NtkForEachCi198,17580
#define Wln_NtkForEachCo(Wln_NtkForEachCo200,17746
#define Wln_NtkForEachFf(Wln_NtkForEachFf202,17912
#define Wln_ObjForEachFanin(Wln_ObjForEachFanin205,18079
#define Wln_ObjForEachFaninReverse(Wln_ObjForEachFaninReverse207,18289
#define Wln_ObjForEachFanoutStatic(Wln_ObjForEachFanoutStatic210,18505

src/base/wln/wlnNtk.c,1350
Wln_Ntk_t * Wln_NtkAlloc( char * pName, int nObjsMax )Wln_NtkAlloc45,1253
void Wln_NtkFree( Wln_Ntk_t * p )Wln_NtkFree68,2107
int Wln_NtkMemUsage( Wln_Ntk_t * p )Wln_NtkMemUsage101,3056
void Wln_NtkPrint( Wln_Ntk_t * p )Wln_NtkPrint123,3712
int Wln_NtkIsAcyclic_rec( Wln_Ntk_t * p, int iObj )Wln_NtkIsAcyclic_rec152,4760
int Wln_NtkIsAcyclic( Wln_Ntk_t * p )Wln_NtkIsAcyclic192,6358
void Wln_NtkTransferNames( Wln_Ntk_t * pNew, Wln_Ntk_t * p )Wln_NtkTransferNames273,9587
int Wln_ObjDup( Wln_Ntk_t * pNew, Wln_Ntk_t * p, int iObj )Wln_ObjDup300,10651
int Wln_NtkDupDfs_rec( Wln_Ntk_t * pNew, Wln_Ntk_t * p, int iObj )Wln_NtkDupDfs_rec312,11212
Wln_Ntk_t * Wln_NtkDupDfs( Wln_Ntk_t * p )Wln_NtkDupDfs325,11740
void Wln_NtkCreateRefs( Wln_Ntk_t * p )  Wln_NtkCreateRefs357,12781
int Wln_NtkFaninNum( Wln_Ntk_t * p )Wln_NtkFaninNum365,13003
void Wln_NtkStartFaninMap( Wln_Ntk_t * p, Vec_Int_t * vFaninMap, int nMulti )Wln_NtkStartFaninMap372,13166
void Wln_NtkStartFanoutMap( Wln_Ntk_t * p, Vec_Int_t * vFanoutMap, Vec_Int_t * vFanoutNums, int nMulti )Wln_NtkStartFanoutMap383,13565
void Wln_NtkStaticFanoutStart( Wln_Ntk_t * p )Wln_NtkStaticFanoutStart406,14244
void Wln_NtkStaticFanoutStop( Wln_Ntk_t * p )Wln_NtkStaticFanoutStop423,14898
void Wln_NtkStaticFanoutTest( Wln_Ntk_t * p )Wln_NtkStaticFanoutTest428,15012

src/base/wln/wln.c,0

src/base/wlc/wlc.c,568
void Wlc_GenerateCodeMax4( int nBits )Wlc_GenerateCodeMax446,1266
void Wlc_BlastFullAdderCtrlCnf( sat_solver * pSat, int a, int ac, int b, int c, int * pc, int * ps, int * piVars )Wlc_BlastFullAdderCtrlCnf142,4899
void Wlc_BlastMultiplierCnf( sat_solver * pSat, int * pArgA, int * pArgB, int nArgA, int nArgB, Vec_Int_t * vTemp, Vec_Int_t * vRes, int * piVars )Wlc_BlastMultiplierCnf195,6639
sat_solver * Wlc_BlastMultiplierCnfMain( int nBits )Wlc_BlastMultiplierCnfMain215,7529
void Wlc_BlastMultiplierCnfTest( int nBits )Wlc_BlastMultiplierCnfTest253,8812

src/base/wlc/wlcNtk.c,4800
static char * Wlc_Names[WLC_OBJ_NUMBER+1] = { Wlc_Names33,828
char * Wlc_ObjTypeName( Wlc_Obj_t * p ) { return p ? (p->Type < WLC_OBJ_NUMBER ? Wlc_Names[p->Type] : (char *)"out_of_bound") : (char *)"no_obj"; }Wlc_ObjTypeName97,3846
void Wlc_ManSetDefaultParams( Wlc_Par_t * pPars )Wlc_ManSetDefaultParams114,4449
Wlc_Ntk_t * Wlc_NtkAlloc( char * pName, int nObjsAlloc )Wlc_NtkAlloc152,6408
void Wlc_ObjSetCi( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_ObjSetCi168,6912
void Wlc_ObjSetCo( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, int fFlopInput )Wlc_ObjSetCo188,7623
int Wlc_ObjAlloc( Wlc_Ntk_t * p, int Type, int Signed, int End, int Beg )Wlc_ObjAlloc199,7949
int Wlc_ObjCreate( Wlc_Ntk_t * p, int Type, int Signed, int End, int Beg, Vec_Int_t * vFanins )Wlc_ObjCreate219,8580
char * Wlc_ObjName( Wlc_Ntk_t * p, int iObj )Wlc_ObjName225,8827
void Wlc_ObjUpdateType( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, int Type )Wlc_ObjUpdateType233,9110
void Wlc_ObjAddFanins( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Int_t * vFanins )Wlc_ObjAddFanins240,9303
void Wlc_NtkFree( Wlc_Ntk_t * p )Wlc_NtkFree253,9919
int Wlc_NtkMemUsage( Wlc_Ntk_t * p )Wlc_NtkMemUsage285,10875
int Wlc_NtkCreateLevels_( Wlc_Ntk_t * p )Wlc_NtkCreateLevels_311,11530
int Wlc_NtkCreateLevelsRev( Wlc_Ntk_t * p )Wlc_NtkCreateLevelsRev326,12007
void Wlc_NtkCreateLevels_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_NtkCreateLevels_rec361,13104
int Wlc_NtkCreateLevels( Wlc_Ntk_t * p )Wlc_NtkCreateLevels372,13665
int Wlc_NtkRemapLevels( Wlc_Ntk_t * p, Vec_Int_t * vObjs, int nLevels )Wlc_NtkRemapLevels387,14245
void Wlc_NtkCollectStats( Wlc_Ntk_t * p, int nObjs[2][WLC_OBJ_NUMBER] )Wlc_NtkCollectStats430,15674
int Wlc_NtkCountRealPis( Wlc_Ntk_t * p )Wlc_NtkCountRealPis445,16056
static inline void Vec_WrdSelectSortCost2( word * pArray, int nSize, word * pCosts )Vec_WrdSelectSortCost2467,16568
static inline word Wlc_NtkPrintDistribMakeSign( int s, int s0, int s1 )Wlc_NtkPrintDistribMakeSign480,16967
static inline void Wlc_NtkPrintDistribFromSign( word sss, int * s, int * s0, int * s1 )Wlc_NtkPrintDistribFromSign484,17101
static inline void Wlc_NtkPrintDistribAddOne( Vec_Ptr_t * vTypes, Vec_Ptr_t * vOccurs, int Type, word Sign )Wlc_NtkPrintDistribAddOne488,17287
void Wlc_NtkPrintDistribSortOne( Vec_Ptr_t * vTypes, Vec_Ptr_t * vOccurs, int Type )Wlc_NtkPrintDistribSortOne502,17781
void Wlc_NtkPrintDistrib( Wlc_Ntk_t * p, int fTwoSides, int fVerbose )Wlc_NtkPrintDistrib510,18169
void Wlc_NtkPrintNode( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_NtkPrintNode703,31154
void Wlc_NtkPrintNodeArray( Wlc_Ntk_t * p, Vec_Int_t * vArray )Wlc_NtkPrintNodeArray764,33694
void Wlc_NtkPrintNodes( Wlc_Ntk_t * p, int Type )Wlc_NtkPrintNodes771,33880
void Wlc_NtkPrintStats( Wlc_Ntk_t * p, int fDistrib, int fTwoSides, int fVerbose )Wlc_NtkPrintStats784,34215
void Wlc_NtkPrintObjects( Wlc_Ntk_t * p )Wlc_NtkPrintObjects812,35256
void Wlc_NtkTransferNames( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p )Wlc_NtkTransferNames830,35639
char * Wlc_NtkNewName( Wlc_Ntk_t * p, int iCoId, int fSeq )Wlc_NtkNewName847,36375
Vec_Int_t * Wlc_ReduceMarkedInitVec( Wlc_Ntk_t * p, Vec_Int_t * vInit )Wlc_ReduceMarkedInitVec865,36820
char * Wlc_ReduceMarkedInitStr( Wlc_Ntk_t * p, char * pInit )Wlc_ReduceMarkedInitStr876,37279
void Wlc_ObjCollectCopyFanins( Wlc_Ntk_t * p, int iObj, Vec_Int_t * vFanins )Wlc_ObjCollectCopyFanins904,38087
int Wlc_ObjDup( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, int iObj, Vec_Int_t * vFanins )Wlc_ObjDup930,38986
void Wlc_NtkDupDfs_rec( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, int iObj, Vec_Int_t * vFanins )Wlc_NtkDupDfs_rec941,39471
Wlc_Ntk_t * Wlc_NtkDupDfsSimple( Wlc_Ntk_t * p )Wlc_NtkDupDfsSimple957,40058
Wlc_Ntk_t * Wlc_NtkDupDfs( Wlc_Ntk_t * p, int fMarked, int fSeq )Wlc_NtkDupDfs986,40995
Wlc_Ntk_t * Wlc_NtkDupDfsAbs( Wlc_Ntk_t * p, Vec_Int_t * vPisOld, Vec_Int_t * vPisNew, Vec_Int_t * vFlops )Wlc_NtkDupDfsAbs1055,43432
void Wlc_NtkCleanMarks( Wlc_Ntk_t * p )Wlc_NtkCleanMarks1135,45996
int Wlc_NtkCountMarked( Wlc_Ntk_t * p, int * pnPis, int * pnFos, int * pnAdders, int * pnMults )Wlc_NtkCountMarked1142,46133
void Wlc_NtkMarkCone_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Int_t * vFlops )Wlc_NtkMarkCone_rec1166,46834
void Wlc_NtkMarkCone( Wlc_Ntk_t * p, int iCoId, int Range, int fSeq, int fAllPis )Wlc_NtkMarkCone1181,47262
void Wlc_NtkProfileCones( Wlc_Ntk_t * p )Wlc_NtkProfileCones1202,47926
Wlc_Ntk_t * Wlc_NtkDupSingleNodes( Wlc_Ntk_t * p )Wlc_NtkDupSingleNodes1232,48780
void Wlc_NtkShortNames( Wlc_Ntk_t * p )Wlc_NtkShortNames1292,50695
int Wlc_NtkDcFlopNum( Wlc_Ntk_t * p )Wlc_NtkDcFlopNum1351,52728
void Wlc_NtkSetRefs( Wlc_Ntk_t * p )Wlc_NtkSetRefs1373,53248
int Wlc_NtkCountObjBits( Wlc_Ntk_t * p, Vec_Int_t * vPisNew )Wlc_NtkCountObjBits1395,53902

src/base/wlc/wlcJson.c,41
void Wlc_JsonTest()Wlc_JsonTest44,1251

src/base/wlc/wlcWriteVer.c,640
void Wlc_WriteTableOne( FILE * pFile, int nFans, int nOuts, word * pTable, int Id )Wlc_WriteTableOne45,1232
void Wlc_WriteTables( FILE * pFile, Wlc_Ntk_t * p )Wlc_WriteTables64,2163
void Wlc_WriteAddPos( Wlc_Ntk_t * p )Wlc_WriteAddPos99,3263
void Wlc_WriteVerIntVec( FILE * pFile, Wlc_Ntk_t * p, Vec_Int_t * vVec, int Start )Wlc_WriteVerIntVec124,3815
int Wlc_ObjFaninBitNum( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_ObjFaninBitNum148,4584
void Wlc_WriteVerInt( FILE * pFile, Wlc_Ntk_t * p, int fNoFlops )Wlc_WriteVerInt157,4799
void Wlc_WriteVer( Wlc_Ntk_t * p, char * pFileName, int fAddCos, int fNoFlops )Wlc_WriteVer597,26894

src/base/wlc/wlcBlast.c,7048
int Wlc_NtkCountConstBits( int * pArray, int nSize )Wlc_NtkCountConstBits46,1260
int Wlc_NtkPrepareBits( Wlc_Ntk_t * p )Wlc_NtkPrepareBits65,1702
int * Wlc_VecCopy( Vec_Int_t * vOut, int * pArray, int nSize )Wlc_VecCopy77,1959
int * Wlc_VecLoadFanins( Vec_Int_t * vOut, int * pFanins, int nFanins, int nTotal, int fSigned )Wlc_VecLoadFanins84,2165
int Wlc_BlastGetConst( int * pNum, int nNum )Wlc_BlastGetConst93,2510
int Wlc_NtkMuxTree_rec( Gia_Man_t * pNew, int * pCtrl, int nCtrl, Vec_Int_t * vData, int Shift )Wlc_NtkMuxTree_rec103,2742
int Wlc_NtkMuxTree2_nb( Gia_Man_t * pNew, int * pCtrl, int nCtrl, Vec_Int_t * vData, Vec_Int_t * vAnds )Wlc_NtkMuxTree2_nb112,3154
int Wlc_NtkMuxTree2( Gia_Man_t * pNew, int * pCtrl, int nCtrl, Vec_Int_t * vData, Vec_Int_t * vAnds, Vec_Int_t * vTemp )Wlc_NtkMuxTree2124,3615
void Wlc_NtkPrintNameArray( Vec_Ptr_t * vNames )Wlc_NtkPrintNameArray134,4101
void Wlc_BlastShiftRightInt( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, int fSticky, Vec_Int_t * vRes )Wlc_BlastShiftRightInt152,4545
void Wlc_BlastShiftRight( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, int fSticky, Vec_Int_t * vRes )Wlc_BlastShiftRight171,5252
void Wlc_BlastShiftLeftInt( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, int fSticky, Vec_Int_t * vRes )Wlc_BlastShiftLeftInt188,5924
void Wlc_BlastShiftLeft( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, int fSticky, Vec_Int_t * vRes )Wlc_BlastShiftLeft207,6616
void Wlc_BlastRotateRight( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, Vec_Int_t * vRes )Wlc_BlastRotateRight224,7271
void Wlc_BlastRotateLeft( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, Vec_Int_t * vRes )Wlc_BlastRotateLeft234,7737
int Wlc_BlastReduction( Gia_Man_t * pNew, int * pFans, int nFans, int Type )Wlc_BlastReduction248,8412
int Wlc_BlastLess2( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits )Wlc_BlastLess2274,9334
void Wlc_BlastLess_rec( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits, int * pYes, int * pNo )Wlc_BlastLess_rec286,9760
int Wlc_BlastLess( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits )Wlc_BlastLess307,10634
int Wlc_BlastLessSigned( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits )Wlc_BlastLessSigned315,10849
void Wlc_BlastFullAdder( Gia_Man_t * pNew, int a, int b, int c, int * pc, int * ps )Wlc_BlastFullAdder320,11116
void Wlc_BlastAdder( Gia_Man_t * pNew, int * pAdd0, int * pAdd1, int nBits, int Carry ) // result is in pAdd0Wlc_BlastAdder348,12257
void Wlc_BlastSubtract( Gia_Man_t * pNew, int * pAdd0, int * pAdd1, int nBits, int Carry ) // result is in pAdd0Wlc_BlastSubtract354,12498
void Wlc_BlastAdderCLA_one( Gia_Man_t * pNew, int * pGen, int * pPro, int * pCar, int * pGen1, int * pPro1, int * pCar1 )Wlc_BlastAdderCLA_one361,12755
void Wlc_BlastAdderCLA_rec( Gia_Man_t * pNew, int * pGen, int * pPro, int * pCar, int nBits, int * pGen1, int * pPro1 )Wlc_BlastAdderCLA_rec368,13195
void Wlc_BlastAdderCLA_int( Gia_Man_t * pNew, int * pAdd0, int * pAdd1, int nBits, int CarryIn ) // result is in pAdd0Wlc_BlastAdderCLA_int384,13974
void Wlc_BlastAdderCLA( Gia_Man_t * pNew, int * pAdd0, int * pAdd1, int nBits, int fSign, int CarryIn ) // result is in pAdd0Wlc_BlastAdderCLA410,14850
void Wlc_BlastAdderFast_int( Gia_Man_t * pNew, int * pAdd0, int * pAdd1, int Log2, int CarryIn ) // result is in pAdd0Wlc_BlastAdderFast_int432,15538
void Wlc_BlastAdderFast( Gia_Man_t * pNew, int * pAdd0, int * pAdd1, int nBits, int fSign, int CarryIn ) // result is in pAdd0Wlc_BlastAdderFast499,17713
void Wlc_BlastMinus( Gia_Man_t * pNew, int * pNum, int nNum, Vec_Int_t * vRes )Wlc_BlastMinus521,18409
void Wlc_BlastMultiplier2( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits, Vec_Int_t * vTemp, Vec_Int_t * vRes )Wlc_BlastMultiplier2531,18753
void Wlc_BlastFullAdderCtrl( Gia_Man_t * pNew, int a, int ac, int b, int c, int * pc, int * ps, int fNeg )Wlc_BlastFullAdderCtrl544,19269
void Wlc_BlastFullAdderSubtr( Gia_Man_t * pNew, int a, int b, int c, int * pc, int * ps, int fSub )Wlc_BlastFullAdderSubtr549,19499
void Wlc_BlastMultiplier( Gia_Man_t * pNew, int * pArgA, int * pArgB, int nArgA, int nArgB, Vec_Int_t * vTemp, Vec_Int_t * vRes, int fSigned )Wlc_BlastMultiplier553,19680
void Wlc_BlastDivider( Gia_Man_t * pNew, int * pNum, int nNum, int * pDiv, int nDiv, int fQuo, Vec_Int_t * vRes )Wlc_BlastDivider577,20768
void Wlc_BlastDivider2( Gia_Man_t * pNew, int * pNum, int nNum, int * pDiv, int nDiv, int fQuo, Vec_Int_t * vRes )Wlc_BlastDivider2625,22566
void Wlc_BlastDividerSigned( Gia_Man_t * pNew, int * pNum, int nNum, int * pDiv, int nDiv, int fQuo, Vec_Int_t * vRes )Wlc_BlastDividerSigned655,23629
void Wlc_BlastZeroCondition( Gia_Man_t * pNew, int * pDiv, int nDiv, Vec_Int_t * vRes )Wlc_BlastZeroCondition690,25484
void Wlc_BlastTable( Gia_Man_t * pNew, word * pTable, int * pFans, int nFans, int nOuts, Vec_Int_t * vRes )Wlc_BlastTable696,25775
void Wlc_BlastLut( Gia_Man_t * pNew, word Truth, int * pFans, int nFans, int nOuts, Vec_Int_t * vRes )Wlc_BlastLut721,26872
void Wlc_BlastPower( Gia_Man_t * pNew, int * pNum, int nNum, int * pExp, int nExp, Vec_Int_t * vTemp, Vec_Int_t * vRes )Wlc_BlastPower735,27485
void Wlc_BlastSqrt( Gia_Man_t * pNew, int * pNum, int nNum, Vec_Int_t * vTmp, Vec_Int_t * vRes )Wlc_BlastSqrt759,28448
void Wlc_BlastSqrtNR( Gia_Man_t * pNew, int * pNum, int nNum, Vec_Int_t * vTmp, Vec_Int_t * vRes )Wlc_BlastSqrtNR790,29588
void Wlc_IntInsert( Vec_Int_t * vProd, Vec_Int_t * vLevel, int Node, int Level )Wlc_IntInsert819,30558
void Wlc_BlastPrintMatrix( Gia_Man_t * p, Vec_Wec_t * vProds, int fVerbose )Wlc_BlastPrintMatrix828,30860
void Wlc_BlastReduceMatrix( Gia_Man_t * pNew, Vec_Wec_t * vProds, Vec_Wec_t * vLevels, Vec_Int_t * vRes, int fSigned, int fCla )Wlc_BlastReduceMatrix862,32313
int Wlc_BlastAddLevel( Gia_Man_t * pNew, int Start )Wlc_BlastAddLevel927,34433
void Wlc_IntInsert2( Gia_Man_t * pNew, Vec_Int_t * vProd, int iLit )Wlc_IntInsert2940,34810
void Wlc_IntSortCostReverse( Gia_Man_t * pNew, int * pArray, int nSize )Wlc_IntSortCostReverse951,35289
void Wlc_BlastReduceMatrix2( Gia_Man_t * pNew, Vec_Wec_t * vProds, Vec_Int_t * vRes, int fSigned, int fCla )Wlc_BlastReduceMatrix2963,35692
void Wlc_BlastMultiplier3( Gia_Man_t * pNew, int * pArgA, int * pArgB, int nArgA, int nArgB, Vec_Int_t * vRes, int fSigned, int fCla )Wlc_BlastMultiplier31025,37774
void Wlc_BlastSquare( Gia_Man_t * pNew, int * pNum, int nNum, Vec_Int_t * vTmp, Vec_Int_t * vRes )Wlc_BlastSquare1052,38768
void Wlc_BlastDecoder( Gia_Man_t * pNew, int * pNum, int nNum, Vec_Int_t * vTmp, Vec_Int_t * vRes )Wlc_BlastDecoder1077,39547
void Wlc_BlastBooth( Gia_Man_t * pNew, int * pArgA, int * pArgB, int nArgA, int nArgB, Vec_Int_t * vRes, int fSigned, int fCla )Wlc_BlastBooth1089,39947
Gia_Man_t * Wlc_NtkBitBlast( Wlc_Ntk_t * p, Wlc_BstPar_t * pParIn )Wlc_NtkBitBlast1181,43149

src/base/wlc/wlcCom.c,3063
static inline Wlc_Ntk_t * Wlc_AbcGetNtk( Abc_Frame_t * pAbc )                       { return (Wlc_Ntk_t *)pAbc->pAbcWlc;                      }Wlc_AbcGetNtk57,2732
static inline void        Wlc_AbcFreeNtk( Abc_Frame_t * pAbc )                      { if ( pAbc->pAbcWlc ) Wlc_NtkFree(Wlc_AbcGetNtk(pAbc));  }Wlc_AbcFreeNtk58,2876
static inline void        Wlc_AbcUpdateNtk( Abc_Frame_t * pAbc, Wlc_Ntk_t * pNtk )  { Wlc_AbcFreeNtk(pAbc); pAbc->pAbcWlc = pNtk;             }Wlc_AbcUpdateNtk59,3020
static inline Vec_Int_t * Wlc_AbcGetInv( Abc_Frame_t * pAbc )                       { return pAbc->pAbcWlcInv;                                }Wlc_AbcGetInv61,3165
void Wlc_Init( Abc_Frame_t * pAbc )Wlc_Init78,3763
void Wlc_End( Abc_Frame_t * pAbc )Wlc_End117,5970
void Wlc_SetNtk( Abc_Frame_t * pAbc, Wlc_Ntk_t * pNtk )Wlc_SetNtk133,6271
int Abc_CommandReadWlc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandReadWlc150,6602
int Abc_CommandWriteWlc( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandWriteWlc230,9252
int Abc_CommandPs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPs310,11714
int Abc_CommandCone( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCone399,14665
int Abc_CommandPdrAbs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPdrAbs487,17828
int Abc_CommandAbs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbs666,25430
int Abc_CommandAbs2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbs2796,30425
int Abc_CommandMemAbs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMemAbs910,34708
int Abc_CommandMemAbs2( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMemAbs2974,36817
int Abc_CommandBlast( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBlast1031,38540
int Abc_CommandBlastMem( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandBlastMem1236,47095
int Abc_CommandGraft( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandGraft1282,48369
int Abc_CommandRetime( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandRetime1328,49679
int Abc_CommandProfile( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandProfile1411,52410
int Abc_CommandShortNames( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandShortNames1455,53598
int Abc_CommandShow( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandShow1499,54770
int Abc_CommandInvPs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInvPs1558,56418
int Abc_CommandInvPrint( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInvPrint1613,58135
int Abc_CommandInvCheck( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInvCheck1658,59489
int Abc_CommandInvGet( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInvGet1719,61556
int Abc_CommandInvPut( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInvPut1770,63168
int Abc_CommandInvMin( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandInvMin1825,64806
int Abc_CommandTest( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTest1892,67043

src/base/wlc/wlc.h,25164
#define ABC__base__wlc__wlc_hABC__base__wlc__wlc_h22,523
    WLC_OBJ_NONE = 0,      // 00: unknownWLC_OBJ_NONE45,1263
    WLC_OBJ_PI,            // 01: primary input WLC_OBJ_PI46,1305
    WLC_OBJ_PO,            // 02: primary outputWLC_OBJ_PO47,1354
    WLC_OBJ_FO,            // 03: flop outputWLC_OBJ_FO48,1403
    WLC_OBJ_FI,            // 04: flop input (unused)WLC_OBJ_FI49,1449
    WLC_OBJ_FF,            // 05: flopWLC_OBJ_FF50,1503
    WLC_OBJ_CONST,         // 06: constantWLC_OBJ_CONST51,1542
    WLC_OBJ_BUF,           // 07: bufferWLC_OBJ_BUF52,1585
    WLC_OBJ_MUX,           // 08: multiplexerWLC_OBJ_MUX53,1626
    WLC_OBJ_SHIFT_R,       // 09: shift rightWLC_OBJ_SHIFT_R54,1672
    WLC_OBJ_SHIFT_RA,      // 10: shift right (arithmetic)WLC_OBJ_SHIFT_RA55,1718
    WLC_OBJ_SHIFT_L,       // 11: shift leftWLC_OBJ_SHIFT_L56,1777
    WLC_OBJ_SHIFT_LA,      // 12: shift left (arithmetic)WLC_OBJ_SHIFT_LA57,1822
    WLC_OBJ_ROTATE_R,      // 13: rotate rightWLC_OBJ_ROTATE_R58,1880
    WLC_OBJ_ROTATE_L,      // 14: rotate leftWLC_OBJ_ROTATE_L59,1927
    WLC_OBJ_BIT_NOT,       // 15: bitwise NOTWLC_OBJ_BIT_NOT60,1973
    WLC_OBJ_BIT_AND,       // 16: bitwise ANDWLC_OBJ_BIT_AND61,2019
    WLC_OBJ_BIT_OR,        // 17: bitwise ORWLC_OBJ_BIT_OR62,2065
    WLC_OBJ_BIT_XOR,       // 18: bitwise XORWLC_OBJ_BIT_XOR63,2110
    WLC_OBJ_BIT_NAND,      // 19: bitwise NANDWLC_OBJ_BIT_NAND64,2156
    WLC_OBJ_BIT_NOR,       // 20: bitwise ORWLC_OBJ_BIT_NOR65,2203
    WLC_OBJ_BIT_NXOR,      // 21: bitwise NXORWLC_OBJ_BIT_NXOR66,2248
    WLC_OBJ_BIT_SELECT,    // 22: bit selectionWLC_OBJ_BIT_SELECT67,2295
    WLC_OBJ_BIT_CONCAT,    // 23: bit concatenationWLC_OBJ_BIT_CONCAT68,2343
    WLC_OBJ_BIT_ZEROPAD,   // 24: zero paddingWLC_OBJ_BIT_ZEROPAD69,2395
    WLC_OBJ_BIT_SIGNEXT,   // 25: sign extensionWLC_OBJ_BIT_SIGNEXT70,2442
    WLC_OBJ_LOGIC_NOT,     // 26: logic NOTWLC_OBJ_LOGIC_NOT71,2491
    WLC_OBJ_LOGIC_IMPL,    // 27: logic implicationWLC_OBJ_LOGIC_IMPL72,2535
    WLC_OBJ_LOGIC_AND,     // 28: logic ANDWLC_OBJ_LOGIC_AND73,2587
    WLC_OBJ_LOGIC_OR,      // 29: logic ORWLC_OBJ_LOGIC_OR74,2631
    WLC_OBJ_LOGIC_XOR,     // 30: logic XORWLC_OBJ_LOGIC_XOR75,2674
    WLC_OBJ_COMP_EQU,      // 31: compare equalWLC_OBJ_COMP_EQU76,2718
    WLC_OBJ_COMP_NOTEQU,   // 32: compare not equalWLC_OBJ_COMP_NOTEQU77,2766
    WLC_OBJ_COMP_LESS,     // 33: compare lessWLC_OBJ_COMP_LESS78,2818
    WLC_OBJ_COMP_MORE,     // 34: compare moreWLC_OBJ_COMP_MORE79,2865
    WLC_OBJ_COMP_LESSEQU,  // 35: compare less or equalWLC_OBJ_COMP_LESSEQU80,2912
    WLC_OBJ_COMP_MOREEQU,  // 36: compare more or equalWLC_OBJ_COMP_MOREEQU81,2968
    WLC_OBJ_REDUCT_AND,    // 37: reduction ANDWLC_OBJ_REDUCT_AND82,3024
    WLC_OBJ_REDUCT_OR,     // 38: reduction ORWLC_OBJ_REDUCT_OR83,3072
    WLC_OBJ_REDUCT_XOR,    // 39: reduction XORWLC_OBJ_REDUCT_XOR84,3119
    WLC_OBJ_REDUCT_NAND,   // 40: reduction NANDWLC_OBJ_REDUCT_NAND85,3167
    WLC_OBJ_REDUCT_NOR,    // 41: reduction NORWLC_OBJ_REDUCT_NOR86,3216
    WLC_OBJ_REDUCT_NXOR,   // 42: reduction NXORWLC_OBJ_REDUCT_NXOR87,3264
    WLC_OBJ_ARI_ADD,       // 43: arithmetic additionWLC_OBJ_ARI_ADD88,3313
    WLC_OBJ_ARI_SUB,       // 44: arithmetic subtractionWLC_OBJ_ARI_SUB89,3367
    WLC_OBJ_ARI_MULTI,     // 45: arithmetic multiplierWLC_OBJ_ARI_MULTI90,3424
    WLC_OBJ_ARI_DIVIDE,    // 46: arithmetic divisionWLC_OBJ_ARI_DIVIDE91,3480
    WLC_OBJ_ARI_REM,       // 47: arithmetic remainderWLC_OBJ_ARI_REM92,3534
    WLC_OBJ_ARI_MODULUS,   // 48: arithmetic modulusWLC_OBJ_ARI_MODULUS93,3589
    WLC_OBJ_ARI_POWER,     // 49: arithmetic powerWLC_OBJ_ARI_POWER94,3642
    WLC_OBJ_ARI_MINUS,     // 50: arithmetic minusWLC_OBJ_ARI_MINUS95,3693
    WLC_OBJ_ARI_SQRT,      // 51: integer square rootWLC_OBJ_ARI_SQRT96,3744
    WLC_OBJ_ARI_SQUARE,    // 52: integer squareWLC_OBJ_ARI_SQUARE97,3798
    WLC_OBJ_TABLE,         // 53: bit tableWLC_OBJ_TABLE98,3847
    WLC_OBJ_READ,          // 54: read portWLC_OBJ_READ99,3891
    WLC_OBJ_WRITE,         // 55: write portWLC_OBJ_WRITE100,3935
    WLC_OBJ_ARI_ADDSUB,    // 56: adder-subtractorWLC_OBJ_ARI_ADDSUB101,3980
    WLC_OBJ_SEL,           // 57: positionally encoded selectorWLC_OBJ_SEL102,4031
    WLC_OBJ_DEC,           // 58: decoderWLC_OBJ_DEC103,4095
    WLC_OBJ_LUT,           // 59: lookup tableWLC_OBJ_LUT104,4137
    WLC_OBJ_NUMBER         // 59: unusedWLC_OBJ_NUMBER105,4184
} Wlc_ObjType_t;Wlc_ObjType_t106,4225
typedef struct Wlc_Obj_t_  Wlc_Obj_t;Wlc_Obj_t118,4699
struct Wlc_Obj_t_ // 24 bytesWlc_Obj_t_119,4737
    unsigned               Type    :  6;       // node typeType121,4769
    unsigned               Signed  :  1;       // signedSigned122,4829
    unsigned               Mark    :  1;       // user markMark123,4886
    unsigned               Mark2   :  1;       // user markMark2124,4946
    unsigned               fIsPo   :  1;       // this is POfIsPo125,5006
    unsigned               fIsFi   :  1;       // this is FIfIsFi126,5067
    unsigned               fXConst :  1;       // this is X-valued constantfXConst127,5128
    unsigned               nFanins;            // fanin countnFanins128,5204
    int                    End;                // range endEnd129,5266
    int                    Beg;                // range beginBeg130,5326
    union { int            Fanins[2];          // fanin IDsFanins131,5388
            int *          pFanins[1]; };pFanins132,5448
typedef struct Wlc_Ntk_t_  Wlc_Ntk_t;Wlc_Ntk_t135,5494
struct Wlc_Ntk_t_ Wlc_Ntk_t_136,5532
    char *                 pName;              // model namepName138,5553
    char *                 pSpec;              // input file namepSpec139,5614
    Vec_Int_t              vPis;               // primary inputs vPis140,5680
    Vec_Int_t              vPos;               // primary outputsvPos141,5746
    Vec_Int_t              vCis;               // combinational inputsvCis142,5812
    Vec_Int_t              vCos;               // combinational outputsvCos143,5883
    Vec_Int_t              vFfs;               // flopsvFfs144,5955
    Vec_Int_t              vFfs2;              // flopsvFfs2145,6011
    Vec_Int_t *            vArsts;             // async resetsvArsts146,6067
    Vec_Int_t *            vInits;             // initial valuesvInits147,6130
    char *                 pInits;             // initial valuespInits148,6195
    int                    nObjs[WLC_OBJ_NUMBER]; // counter of objects of each typenObjs149,6260
    int                    nAnds[WLC_OBJ_NUMBER]; // counter of AND gates after blastingnAnds150,6345
    int                    fSmtLib;            // the network comes from an SMT-LIB filefSmtLib151,6434
    int                    fAsyncRst;          // the network has asynchronous resetfAsyncRst152,6523
    int                    fMemPorts;          // the network contains memory portsfMemPorts153,6608
    int                    fEasyFfs;           // the network contains simple flopsfEasyFfs154,6692
    int                    nAssert;            // the number of assertsnAssert155,6776
    Wlc_Obj_t *            pObjs;pObjs157,6874
    int                    iObj;iObj158,6908
    int                    nObjsAlloc;nObjsAlloc159,6941
    Mem_Flex_t *           pMemFanin;pMemFanin160,6980
    Mem_Flex_t *           pMemTable;pMemTable161,7018
    Vec_Ptr_t *            vTables;vTables162,7056
    Vec_Wrd_t *            vLutTruths;vLutTruths163,7092
    Abc_Nam_t *            pManName;           // object namespManName165,7151
    Vec_Int_t              vNameIds;           // object name IDsvNameIds166,7214
    Vec_Int_t              vValues;            // value objectsvValues167,7280
    int                    nTravIds;           // counter of traversal IDsnTravIds169,7369
    Vec_Int_t              vTravIds;           // trav IDs of the objectsvTravIds170,7444
    Vec_Int_t              vCopies;            // object first bitsvCopies171,7518
    Vec_Int_t              vBits;              // object mapping into AIG nodesvBits172,7586
    Vec_Int_t              vLevels;            // object levelsvLevels173,7666
    Vec_Int_t              vRefs;              // object reference countersvRefs174,7730
    Vec_Int_t              vPoPairs;           // pairs of primary outputsvPoPairs175,7806
typedef struct Wlc_Par_t_ Wlc_Par_t;Wlc_Par_t178,7885
struct Wlc_Par_t_Wlc_Par_t_179,7922
    int                    nBitsAdd;           // adder bit-widthnBitsAdd181,7942
    int                    nBitsMul;           // multiplier bit-widht nBitsMul182,8008
    int                    nBitsMux;           // MUX bit-widthnBitsMux183,8080
    int                    nBitsFlop;          // flop bit-widthnBitsFlop184,8144
    int                    nIterMax;           // the max number of iterationsnIterMax185,8209
    int                    nLimit;             // the max number of signalsnLimit186,8288
    int                    fXorOutput;         // XOR outputs of word-level miterfXorOutput187,8364
    int                    fCheckClauses;      // Check clauses in the reloaded tracefCheckClauses188,8446
    int                    fPushClauses;       // Push clauses in the reloaded tracefPushClauses189,8532
    int                    fMFFC;              // Refine the entire MFFC of a PPIfMFFC190,8617
    int                    fPdra;              // Use pdr -nctfPdra191,8699
    int                    fLoadTrace;         // Load previous traces if anyfLoadTrace192,8762
    int                    fProofRefine;       // Use proof-based refinementfProofRefine193,8840
    int                    fHybrid;            // Use a hybrid of CBR and PBRfHybrid194,8917
    int                    fCheckCombUnsat;    // Check if ABS becomes comb. unsatfCheckCombUnsat195,8995
    int                    fAbs2;              // Use UFAR style createAbsfAbs2196,9078
    int                    fProofUsePPI;       // Use PPI values in PBRfProofUsePPI197,9153
    int                    fUseBmc3;           // Run BMC3 in parallel fUseBmc3198,9225
    int                    fShrinkAbs;         // Shrink Abs with BMCfShrinkAbs199,9297
    int                    fShrinkScratch;     // Restart pdr from scratch after shrinkingfShrinkScratch200,9367
    int                    fVerbose;           // verbose outputfVerbose201,9458
    int                    fPdrVerbose;        // verbose outputfPdrVerbose202,9523
    int                    RunId;              // id in this run RunId203,9588
    int                    (*pFuncStop)(int);  // callback to terminatepFuncStop204,9654
typedef struct Wlc_BstPar_t_ Wlc_BstPar_t;Wlc_BstPar_t207,9730
struct Wlc_BstPar_t_Wlc_BstPar_t_208,9773
    int                    iOutput;iOutput210,9796
    int                    nOutputRange;nOutputRange211,9832
    int                    nAdderLimit;nAdderLimit212,9873
    int                    nMultLimit;nMultLimit213,9913
    int                    fGiaSimple;fGiaSimple214,9952
    int                    fAddOutputs;fAddOutputs215,9991
    int                    fMulti;fMulti216,10031
    int                    fBooth;fBooth217,10066
    int                    fNonRest;fNonRest218,10101
    int                    fCla;fCla219,10138
    int                    fNoCleanup;fNoCleanup220,10171
    int                    fCreateMiter;fCreateMiter221,10210
    int                    fCreateWordMiter;fCreateWordMiter222,10251
    int                    fDecMuxes;fDecMuxes223,10296
    int                    fSaveFfNames;fSaveFfNames224,10334
    int                    fVerbose;fVerbose225,10375
    Vec_Int_t *            vBoxIds;vBoxIds226,10412
static inline void Wlc_BstParDefault( Wlc_BstPar_t * pPar )Wlc_BstParDefault229,10452
typedef struct Wla_Man_t_ Wla_Man_t;Wla_Man_t247,10943
struct Wla_Man_t_Wla_Man_t_248,10980
    Wlc_Ntk_t * p;p250,11000
    Wlc_Par_t * pPars;pPars251,11019
    Vec_Vec_t * vClauses;vClauses252,11042
    Vec_Int_t * vBlacks;vBlacks253,11068
    Vec_Int_t * vSignals;vSignals254,11093
    Abc_Cex_t * pCex;pCex255,11119
    Gia_Man_t * pGia;pGia256,11141
    Vec_Bit_t * vUnmark;vUnmark257,11163
    void      * pPdrPars;pPdrPars258,11188
    void      * pThread;pThread259,11214
    int iCexFrame;iCexFrame261,11240
    int fNewAbs;fNewAbs262,11259
    int nIters;nIters264,11277
    int nTotalCla;nTotalCla265,11293
    int nDisj;nDisj266,11312
    int nNDisj;nNDisj267,11327
    abctime tPdr;tPdr269,11344
    abctime tCbr;tCbr270,11362
    abctime tPbr;tPbr271,11380
static inline int          Wlc_NtkObjNum( Wlc_Ntk_t * p )                           { return p->iObj - 1;                                                      }Wlc_NtkObjNum274,11402
static inline int          Wlc_NtkObjNumMax( Wlc_Ntk_t * p )                        { return p->iObj;                                                          }Wlc_NtkObjNumMax275,11563
static inline int          Wlc_NtkPiNum( Wlc_Ntk_t * p )                            { return Vec_IntSize(&p->vPis);                                            }Wlc_NtkPiNum276,11724
static inline int          Wlc_NtkPoNum( Wlc_Ntk_t * p )                            { return Vec_IntSize(&p->vPos);                                            }Wlc_NtkPoNum277,11885
static inline int          Wlc_NtkCiNum( Wlc_Ntk_t * p )                            { return Vec_IntSize(&p->vCis);                                            }Wlc_NtkCiNum278,12046
static inline int          Wlc_NtkCoNum( Wlc_Ntk_t * p )                            { return Vec_IntSize(&p->vCos);                                            }Wlc_NtkCoNum279,12207
static inline int          Wlc_NtkFfNum( Wlc_Ntk_t * p )                            { return Vec_IntSize(&p->vCis) - Vec_IntSize(&p->vPis);                    }Wlc_NtkFfNum280,12368
static inline Wlc_Obj_t *  Wlc_NtkObj( Wlc_Ntk_t * p, int Id )                      { assert(Id > 0 && Id < p->nObjsAlloc); return p->pObjs + Id;              }Wlc_NtkObj282,12530
static inline Wlc_Obj_t *  Wlc_NtkPi( Wlc_Ntk_t * p, int i )                        { return Wlc_NtkObj( p, Vec_IntEntry(&p->vPis, i) );                       }Wlc_NtkPi283,12691
static inline Wlc_Obj_t *  Wlc_NtkPo( Wlc_Ntk_t * p, int i )                        { return Wlc_NtkObj( p, Vec_IntEntry(&p->vPos, i) );                       }Wlc_NtkPo284,12852
static inline Wlc_Obj_t *  Wlc_NtkCi( Wlc_Ntk_t * p, int i )                        { return Wlc_NtkObj( p, Vec_IntEntry(&p->vCis, i) );                       }Wlc_NtkCi285,13013
static inline Wlc_Obj_t *  Wlc_NtkCo( Wlc_Ntk_t * p, int i )                        { return Wlc_NtkObj( p, Vec_IntEntry(&p->vCos, i) );                       }Wlc_NtkCo286,13174
static inline Wlc_Obj_t *  Wlc_NtkFf( Wlc_Ntk_t * p, int i )                        { return Wlc_NtkObj( p, Vec_IntEntry(&p->vFfs, i) );                       }Wlc_NtkFf287,13335
static inline Wlc_Obj_t *  Wlc_NtkFf2( Wlc_Ntk_t * p, int i )                       { return Wlc_NtkObj( p, Vec_IntEntry(&p->vFfs2, i) );                      }Wlc_NtkFf2288,13496
static inline int          Wlc_ObjIsPi( Wlc_Obj_t * p )                             { return p->Type == WLC_OBJ_PI;                                            }Wlc_ObjIsPi290,13658
static inline int          Wlc_ObjIsPo( Wlc_Obj_t * p )                             { return p->fIsPo;                                                         }Wlc_ObjIsPo291,13819
static inline int          Wlc_ObjIsCi( Wlc_Obj_t * p )                             { return p->Type == WLC_OBJ_PI || p->Type == WLC_OBJ_FO;                   }Wlc_ObjIsCi292,13980
static inline int          Wlc_ObjIsCo( Wlc_Obj_t * p )                             { return p->fIsPo || p->fIsFi;                                             }Wlc_ObjIsCo293,14141
static inline int          Wlc_ObjIsRead( Wlc_Obj_t * p )                           { return p->Type == WLC_OBJ_READ;                                          }Wlc_ObjIsRead294,14302
static inline int          Wlc_ObjIsWrite( Wlc_Obj_t * p )                          { return p->Type == WLC_OBJ_WRITE;                                         }Wlc_ObjIsWrite295,14463
static inline int          Wlc_ObjIsMux( Wlc_Obj_t * p )                            { return p->Type == WLC_OBJ_MUX;                                           }Wlc_ObjIsMux296,14624
static inline int          Wlc_ObjIsBuf( Wlc_Obj_t * p )                            { return p->Type == WLC_OBJ_BUF;                                           }Wlc_ObjIsBuf297,14785
static inline int          Wlc_ObjIsFf( Wlc_Ntk_t * p, int i )                      { return Wlc_NtkObj(p, i)->Type == WLC_OBJ_FF;                             }Wlc_ObjIsFf298,14946
static inline int          Wlc_ObjId( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )             { return pObj - p->pObjs;                                                  }Wlc_ObjId300,15108
static inline int          Wlc_ObjCiId( Wlc_Obj_t * p )                             { assert( Wlc_ObjIsCi(p) ); return p->Fanins[1];                           }Wlc_ObjCiId301,15269
static inline int          Wlc_ObjType( Wlc_Obj_t * pObj )                          { return pObj->Type;                                                       }Wlc_ObjType302,15430
static inline int          Wlc_ObjFaninNum( Wlc_Obj_t * p )                         { return p->nFanins;                                                       }Wlc_ObjFaninNum303,15591
static inline int          Wlc_ObjHasArray( Wlc_Obj_t * p )                         { return p->nFanins > 2 || p->Type == WLC_OBJ_CONST || p->Type == WLC_OBJ_BIT_SELECT; }Wlc_ObjHasArray304,15752
static inline int *        Wlc_ObjFanins( Wlc_Obj_t * p )                           { return Wlc_ObjHasArray(p) ? p->pFanins[0] : p->Fanins;                   }Wlc_ObjFanins305,15924
static inline int          Wlc_ObjFaninId( Wlc_Obj_t * p, int i )                   { return Wlc_ObjFanins(p)[i];                                              }Wlc_ObjFaninId306,16085
static inline int          Wlc_ObjFaninId0( Wlc_Obj_t * p )                         { return Wlc_ObjFanins(p)[0];                                              }Wlc_ObjFaninId0307,16246
static inline int          Wlc_ObjFaninId1( Wlc_Obj_t * p )                         { return Wlc_ObjFanins(p)[1];                                              }Wlc_ObjFaninId1308,16407
static inline int          Wlc_ObjFaninId2( Wlc_Obj_t * p )                         { return Wlc_ObjFanins(p)[2];                                              }Wlc_ObjFaninId2309,16568
static inline Wlc_Obj_t *  Wlc_ObjFanin( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, int i )   { return Wlc_NtkObj( p, Wlc_ObjFaninId(pObj, i) );                         }Wlc_ObjFanin310,16729
static inline Wlc_Obj_t *  Wlc_ObjFanin0( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )         { return Wlc_NtkObj( p, Wlc_ObjFaninId(pObj, 0) );                         }Wlc_ObjFanin0311,16890
static inline Wlc_Obj_t *  Wlc_ObjFanin1( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )         { return Wlc_NtkObj( p, Wlc_ObjFaninId(pObj, 1) );                         }Wlc_ObjFanin1312,17051
static inline Wlc_Obj_t *  Wlc_ObjFanin2( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )         { return Wlc_NtkObj( p, Wlc_ObjFaninId(pObj, 2) );                         }Wlc_ObjFanin2313,17212
static inline int          Wlc_ObjRange( Wlc_Obj_t * p )                            { return 1 + (p->End >= p->Beg ? p->End - p->Beg : p->Beg - p->End);       }Wlc_ObjRange315,17374
static inline int          Wlc_ObjRangeEnd( Wlc_Obj_t * p )                         { assert(p->Type == WLC_OBJ_BIT_SELECT); return p->pFanins[0][1];          }Wlc_ObjRangeEnd316,17535
static inline int          Wlc_ObjRangeBeg( Wlc_Obj_t * p )                         { assert(p->Type == WLC_OBJ_BIT_SELECT); return p->pFanins[0][2];          }Wlc_ObjRangeBeg317,17696
static inline int          Wlc_ObjRangeIsReversed( Wlc_Obj_t * p )                  { return p->End < p->Beg;                                                  }Wlc_ObjRangeIsReversed318,17857
static inline int          Wlc_ObjIsSigned( Wlc_Obj_t * p )                         { return p->Signed;                                                        }Wlc_ObjIsSigned320,18019
static inline int          Wlc_ObjIsSignedFanin01( Wlc_Ntk_t * p, Wlc_Obj_t * pObj ){ return p->fSmtLib ? Wlc_ObjIsSigned(pObj) : (Wlc_ObjFanin0(p, pObj)->Signed && Wlc_ObjFanin1(p, pObj)->Signed); }Wlc_ObjIsSignedFanin01321,18180
static inline int          Wlc_ObjIsSignedFanin0( Wlc_Ntk_t * p, Wlc_Obj_t * pObj ) { return p->fSmtLib ? Wlc_ObjIsSigned(pObj) : Wlc_ObjFanin0(p, pObj)->Signed; }Wlc_ObjIsSignedFanin0322,18380
static inline int          Wlc_ObjIsSignedFanin1( Wlc_Ntk_t * p, Wlc_Obj_t * pObj ) { return p->fSmtLib ? Wlc_ObjIsSigned(pObj) : Wlc_ObjFanin1(p, pObj)->Signed; }Wlc_ObjIsSignedFanin1323,18544
static inline int          Wlc_ObjSign( Wlc_Obj_t * p )                             { return Abc_Var2Lit( Wlc_ObjRange(p), Wlc_ObjIsSigned(p) );               }Wlc_ObjSign324,18708
static inline int *        Wlc_ObjConstValue( Wlc_Obj_t * p )                       { assert(p->Type == WLC_OBJ_CONST);      return Wlc_ObjFanins(p);          }Wlc_ObjConstValue325,18869
static inline int          Wlc_ObjTableId( Wlc_Obj_t * p )                          { assert(p->Type == WLC_OBJ_TABLE);      return p->Fanins[1];              }Wlc_ObjTableId326,19030
static inline word *       Wlc_ObjTable( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )          { return (word *)Vec_PtrEntry( p->vTables, Wlc_ObjTableId(pObj) );         }Wlc_ObjTable327,19191
static inline int          Wlc_ObjLevelId( Wlc_Ntk_t * p, int iObj )                { return Vec_IntEntry( &p->vLevels, iObj );                                }Wlc_ObjLevelId328,19352
static inline int          Wlc_ObjLevel( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )          { return Wlc_ObjLevelId( p, Wlc_ObjId(p, pObj) );                          }Wlc_ObjLevel329,19513
static inline void         Wlc_NtkCleanCopy( Wlc_Ntk_t * p )                        { Vec_IntFill( &p->vCopies, p->nObjsAlloc, 0 );                            }Wlc_NtkCleanCopy331,19675
static inline int          Wlc_NtkHasCopy( Wlc_Ntk_t * p )                          { return Vec_IntSize( &p->vCopies ) > 0;                                   }Wlc_NtkHasCopy332,19836
static inline void         Wlc_ObjSetCopy( Wlc_Ntk_t * p, int iObj, int i )         { Vec_IntWriteEntry( &p->vCopies, iObj, i );                               }Wlc_ObjSetCopy333,19997
static inline int          Wlc_ObjCopy( Wlc_Ntk_t * p, int iObj )                   { return Vec_IntEntry( &p->vCopies, iObj );                                }Wlc_ObjCopy334,20158
static inline Wlc_Obj_t *  Wlc_ObjCopyObj(Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, Wlc_Obj_t * pObj) {return Wlc_NtkObj(pNew, Wlc_ObjCopy(p, Wlc_ObjId(p, pObj)));   }Wlc_ObjCopyObj335,20319
static inline void         Wlc_NtkCleanNameId( Wlc_Ntk_t * p )                      { Vec_IntFill( &p->vNameIds, p->nObjsAlloc, 0 );                           }Wlc_NtkCleanNameId337,20479
static inline int          Wlc_NtkHasNameId( Wlc_Ntk_t * p )                        { return Vec_IntSize( &p->vNameIds ) > 0;                                  }Wlc_NtkHasNameId338,20640
static inline void         Wlc_ObjSetNameId( Wlc_Ntk_t * p, int iObj, int i )       { Vec_IntWriteEntry( &p->vNameIds, iObj, i );                              }Wlc_ObjSetNameId339,20801
static inline int          Wlc_ObjNameId( Wlc_Ntk_t * p, int iObj )                 { return Vec_IntEntry( &p->vNameIds, iObj );                               }Wlc_ObjNameId340,20962
static inline Wlc_Obj_t *  Wlc_ObjFo2Fi( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )          { assert( pObj->Type == WLC_OBJ_FO ); return Wlc_NtkCo(p, Wlc_NtkPoNum(p) + Wlc_ObjCiId(pObj) - Wlc_NtkPiNum(p)); } Wlc_ObjFo2Fi342,21124
static inline Wlc_Obj_t *  Wlc_ObjCo2PoFo( Wlc_Ntk_t * p, int iCoId )               { return iCoId < Wlc_NtkPoNum(p) ? Wlc_NtkPo(p, iCoId) : Wlc_NtkCi(p, Wlc_NtkPiNum(p) + iCoId - Wlc_NtkPoNum(p)); } Wlc_ObjCo2PoFo343,21325
#define Wlc_NtkForEachObj(Wlc_NtkForEachObj353,21967
#define Wlc_NtkForEachObjReverse(Wlc_NtkForEachObjReverse355,22139
#define Wlc_NtkForEachObjVec(Wlc_NtkForEachObjVec357,22315
#define Wlc_NtkForEachPi(Wlc_NtkForEachPi359,22505
#define Wlc_NtkForEachPo(Wlc_NtkForEachPo361,22671
#define Wlc_NtkForEachCi(Wlc_NtkForEachCi363,22837
#define Wlc_NtkForEachCo(Wlc_NtkForEachCo365,23003
#define Wlc_NtkForEachFf(Wlc_NtkForEachFf367,23169
#define Wlc_NtkForEachFf2(Wlc_NtkForEachFf2369,23341
#define Wlc_ObjForEachFanin(Wlc_ObjForEachFanin372,23516
#define Wlc_ObjForEachFaninObj(Wlc_ObjForEachFaninObj374,23699
#define Wlc_ObjForEachFaninReverse(Wlc_ObjForEachFaninReverse376,23897

src/base/wlc/wlcSim.c,787
static inline word * Wlc_ObjSim( Gia_Man_t * p, int iObj )Wlc_ObjSim44,1271
static inline void Wlc_ObjSimPi( Gia_Man_t * p, int iObj )Wlc_ObjSimPi48,1393
static inline void Wlc_ObjSimRo( Gia_Man_t * p, int iObj )Wlc_ObjSimRo55,1588
static inline void Wlc_ObjSimCo( Gia_Man_t * p, int iObj )Wlc_ObjSimCo63,1840
static inline void Wlc_ObjSimAnd( Gia_Man_t * p, int iObj )Wlc_ObjSimAnd76,2276
void Wlc_NtkDeleteSim( Vec_Ptr_t * p )Wlc_NtkDeleteSim120,4204
Vec_Ptr_t * Wlc_NtkSimulate( Wlc_Ntk_t * p, Vec_Int_t * vNodes, int nWords, int nFrames )Wlc_NtkSimulate128,4419
void Wlc_NtkSimulatePrint( Wlc_Ntk_t * p, Vec_Int_t * vNodes, Vec_Ptr_t * vRes, int nWords, int nFrames )Wlc_NtkSimulatePrint210,7449
void Wlc_NtkSimulateTest( Wlc_Ntk_t * p )Wlc_NtkSimulateTest230,8200

src/base/wlc/wlcAbs2.c,1316
static Vec_Bit_t * Wlc_NtkAbsMarkOpers( Wlc_Ntk_t * p, Wlc_Par_t * pPars, Vec_Bit_t * vUnmark, int fVerbose )Wlc_NtkAbsMarkOpers49,1587
static void Wlc_NtkAbsMarkNodes_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Bit_t * vLeaves, Vec_Int_t * vPisOld, Vec_Int_t * vPisNew, Vec_Int_t * vFlops )Wlc_NtkAbsMarkNodes_rec101,3836
static void Wlc_NtkAbsMarkNodes( Wlc_Ntk_t * p, Vec_Bit_t * vLeaves, Vec_Int_t * vPisOld, Vec_Int_t * vPisNew, Vec_Int_t * vFlops )Wlc_NtkAbsMarkNodes124,4595
static Wlc_Ntk_t * Wlc_NtkAbs( Wlc_Ntk_t * p, Wlc_Par_t * pPars, Vec_Bit_t * vUnmark, Vec_Int_t ** pvPisNew, int fVerbose )Wlc_NtkAbs159,6157
static Vec_Int_t * Wlc_NtkAbsRefinement( Wlc_Ntk_t * p, Gia_Man_t * pGia, Abc_Cex_t * pCex, Vec_Int_t * vPisNew )Wlc_NtkAbsRefinement192,7398
static int Wlc_NtkNodeDeref_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pNode, Vec_Bit_t * vUnmark )Wlc_NtkNodeDeref_rec232,9061
static int Wlc_NtkNodeRef_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pNode )Wlc_NtkNodeRef_rec246,9549
static int Wlc_NtkMarkMffc( Wlc_Ntk_t * p, Wlc_Obj_t * pNode, Vec_Bit_t * vUnmark )Wlc_NtkMarkMffc259,9944
static int Wlc_NtkRemoveFromAbstraction( Wlc_Ntk_t * p, Vec_Int_t * vRefine, Vec_Bit_t * vUnmark )Wlc_NtkRemoveFromAbstraction276,10551
int Wlc_NtkAbsCore2( Wlc_Ntk_t * p, Wlc_Par_t * pPars )Wlc_NtkAbsCore2302,11496

src/base/wlc/wlcShow.c,172
void Wlc_NtkDumpDot( Wlc_Ntk_t * p, char * pFileName, Vec_Int_t * vBold )Wlc_NtkDumpDot46,1360
void Wlc_NtkShow( Wlc_Ntk_t * p, Vec_Int_t * vBold )Wlc_NtkShow359,13174

src/base/wlc/wlcWin.c,822
int Wlc_ObjIsArithm( Wlc_Obj_t * pObj )Wlc_ObjIsArithm45,1276
int Wlc_ObjIsArithmReal( Wlc_Obj_t * pObj )Wlc_ObjIsArithmReal54,1793
int Wlc_ManCountArithmReal( Wlc_Ntk_t * p, Vec_Int_t * vNodes )Wlc_ManCountArithmReal60,2056
int Wlc_ObjHasArithm_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_ObjHasArithm_rec68,2286
int Wlc_ObjHasArithmFanins( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_ObjHasArithmFanins78,2794
void Wlc_WinCompute_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Int_t * vLeaves, Vec_Int_t * vNodes )Wlc_WinCompute_rec87,3070
void Wlc_WinCleanMark_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_WinCleanMark_rec102,3532
void Wlc_WinCompute( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Int_t * vLeaves, Vec_Int_t * vNodes )Wlc_WinCompute111,3780
void Wlc_WinProfileArith( Wlc_Ntk_t * p )Wlc_WinProfileArith132,4530

src/base/wlc/wlcMem.c,4537
void Wlc_NtkMemBlast_rec( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, int iObj, Vec_Int_t * vFanins )Wlc_NtkMemBlast_rec47,1318
Wlc_Ntk_t * Wlc_NtkMemBlast( Wlc_Ntk_t * p )Wlc_NtkMemBlast134,5170
Vec_Int_t * Wlc_NtkCollectMemSizes( Wlc_Ntk_t * p )Wlc_NtkCollectMemSizes175,6361
int Wlc_ObjCheckIsEmpty_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj )Wlc_ObjCheckIsEmpty_rec189,6842
Vec_Int_t * Wlc_NtkCleanObjects( Wlc_Ntk_t * p, Vec_Int_t * vObjs )Wlc_NtkCleanObjects203,7271
Vec_Int_t * Wlc_NtkCollectMemory( Wlc_Ntk_t * p, int fClean )Wlc_NtkCollectMemory216,7730
void Wlc_NtkPrintMemory( Wlc_Ntk_t * p )Wlc_NtkPrintMemory239,8490
Vec_Int_t * Wlc_NtkCollectMemFanins( Wlc_Ntk_t * p, Vec_Int_t * vMemObjs )Wlc_NtkCollectMemFanins259,9017
int Wlc_CountDcs( char * pInit )Wlc_CountDcs288,9884
int Wlc_NtkDupOneObject( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, Wlc_Obj_t * pObj, int TypeNew, Vec_Int_t * vFanins )Wlc_NtkDupOneObject295,10039
void Wlc_NtkDupOneBuffer( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, Wlc_Obj_t * pObj, int iFanin, Vec_Int_t * vFanins, int fIsFi )Wlc_NtkDupOneBuffer313,10643
void Wlc_NtkAbsAddToNodeFrames( Vec_Int_t * vNodeFrames, Vec_Int_t * vLevel ) Wlc_NtkAbsAddToNodeFrames322,11037
Vec_Int_t * Wlc_NtkAbsCreateFlopOutputs( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, Vec_Int_t * vNodeFrames, Vec_Int_t * vFanins ) Wlc_NtkAbsCreateFlopOutputs329,11266
void Wlc_NtkAbsCreateFlopInputs( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, Vec_Int_t * vNodeFrames, Vec_Int_t * vFanins, Vec_Int_t * vNewObjs, Wlc_Obj_t * pCounter, int AdderBits ) Wlc_NtkAbsCreateFlopInputs359,12564
void Wlc_NtkAbsCreateLogic( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, Vec_Int_t * vNodeFrames, Vec_Int_t * vFanins, Vec_Int_t * vNewObjs, Vec_Wec_t * vConstrs, Wlc_Obj_t * pConstrOut ) Wlc_NtkAbsCreateLogic408,15059
Wlc_Ntk_t * Wlc_NtkAbstractMemory( Wlc_Ntk_t * p, Vec_Int_t * vMemObjs, Vec_Int_t * vMemFanins, int * piFirstMemPi, int * piFirstCi, int * piFirstMemCi, Vec_Wec_t * vConstrs, Vec_Int_t * vNodeFrames )Wlc_NtkAbstractMemory516,20065
Vec_Int_t * Wlc_NtkDeriveFirstTotal( Wlc_Ntk_t * p, Vec_Int_t * vMemObjs, Vec_Int_t * vMemFanins, int iFirstMemPi, int iFirstMemCi, int fVerbose )Wlc_NtkDeriveFirstTotal670,25773
int Wlc_NtkCexResim( Gia_Man_t * pAbs, Abc_Cex_t * p, Vec_Int_t * vFirstTotal, int iBit, Vec_Wrd_t * vRes, int iFrame )Wlc_NtkCexResim712,27687
Vec_Wrd_t * Wlc_NtkConvertCex( Vec_Int_t * vFirstTotal, Gia_Man_t * pAbs, Abc_Cex_t * pCex, int fVerbose )Wlc_NtkConvertCex751,29295
void Wlc_NtkTrace_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, int iFrame, Vec_Int_t * vMemObjs, Vec_Wrd_t * vValues, word ValueA, Vec_Int_t * vRes )Wlc_NtkTrace_rec781,30357
Vec_Int_t * Wlc_NtkTrace( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, int iFrame, Vec_Int_t * vMemObjs, Vec_Wrd_t * vValues )Wlc_NtkTrace816,32078
int Wlc_NtkTraceCheckConfict( Wlc_Ntk_t * p, Vec_Int_t * vTrace, Vec_Int_t * vMemObjs, Vec_Wrd_t * vValues )Wlc_NtkTraceCheckConfict827,32649
Vec_Int_t * Wlc_NtkFindConflict( Wlc_Ntk_t * p, Vec_Int_t * vMemObjs, Vec_Wrd_t * vValues, int nFrames )Wlc_NtkFindConflict850,33891
void Wlc_NtkPrintConflict( Wlc_Ntk_t * p, Vec_Int_t * vTrace )Wlc_NtkPrintConflict909,36443
void Wlc_NtkPrintCex( Wlc_Ntk_t * p, Wlc_Ntk_t * pAbs, Abc_Cex_t * pCex )Wlc_NtkPrintCex916,36770
Wlc_Ntk_t * Wlc_NtkMemAbstractTest( Wlc_Ntk_t * p )Wlc_NtkMemAbstractTest954,37825
int Wlc_NtkMemAbstract( Wlc_Ntk_t * p, int nIterMax, int fDumpAbs, int fPdrVerbose, int fVerbose )Wlc_NtkMemAbstract986,39076
int Wlc_NtkExploreMem2_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Int_t * vCollect, int nFrames )Wlc_NtkExploreMem2_rec1112,43667
void Wlc_NtkExploreMem2( Wlc_Ntk_t * p, int nFrames )Wlc_NtkExploreMem21129,44388
void Wlc_NtkExploreMem_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Int_t * vCollect, int nFrames )Wlc_NtkExploreMem_rec1167,45662
void Wlc_NtkExploreMem( Wlc_Ntk_t * p, int nFrames )Wlc_NtkExploreMem1185,46280
Vec_Int_t * Wlc_NtkFindReachablePiFo( Wlc_Ntk_t * p, Vec_Int_t * vMemObjsClean, int nFrames )Wlc_NtkFindReachablePiFo1222,47435
Vec_Int_t * Wlc_NtkExtractCisForThisRead( Vec_Int_t * vReachReadCi, int iRead )Wlc_NtkExtractCisForThisRead1255,48669
Vec_Int_t * Wlc_NtkCollectOneType( Wlc_Ntk_t * p, Vec_Int_t * vMemObjsClean, int Type1, int Type2 )Wlc_NtkCollectOneType1268,49105
void Wlc_NtkCreateMemoryConstr( Wlc_Ntk_t * pNew, Wlc_Ntk_t * p, Vec_Int_t * vMemObjsClean, Vec_Int_t * vReachReadCi )Wlc_NtkCreateMemoryConstr1289,49739
Wlc_Ntk_t * Wlc_NtkAbstractMem( Wlc_Ntk_t * p, int nFrames, int fVerbose )Wlc_NtkAbstractMem1383,54212

src/base/wlc/wlcPth.c,1047
static volatile int  g_nRunIds = 0;             // the number of the last prover instanceg_nRunIds45,1154
int Wla_CallBackToStop( int RunId ) { assert( RunId <= g_nRunIds ); return RunId < g_nRunIds; }Wla_CallBackToStop46,1244
int Wla_GetGlobalRunId() { return g_nRunIds; }Wla_GetGlobalRunId47,1340
void Wla_ManJoinThread( Wla_Man_t * pWla, int RunId ) {}Wla_ManJoinThread51,1414
void Wla_ManConcurrentBmc3( Wla_Man_t * pWla, Aig_Man_t * pAig, Abc_Cex_t ** ppCex ) {}Wla_ManConcurrentBmc352,1471
typedef struct Bmc3_ThData_t_Bmc3_ThData_t_57,1623
    Wla_Man_t *  pWla;pWla59,1655
    Aig_Man_t *  pAig;pAig60,1678
    Abc_Cex_t ** ppCex;ppCex61,1701
    int          RunId;RunId62,1725
    int          fVerbose;fVerbose63,1749
} Bmc3_ThData_t;Bmc3_ThData_t64,1776
void Wla_ManJoinThread( Wla_Man_t * pWla, int RunId )Wla_ManJoinThread69,1875
void * Wla_Bmc3Thread ( void * pArg )Wla_Bmc3Thread85,2312
void Wla_ManConcurrentBmc3( Wla_Man_t * pWla, Aig_Man_t * pAig, Abc_Cex_t ** ppCex )Wla_ManConcurrentBmc3146,4254

src/base/wlc/wlcAbs.c,5042
typedef struct Int_Pair_t_       Int_Pair_t;Int_Pair_t46,1787
struct Int_Pair_t_Int_Pair_t_47,1832
    int first;first49,1853
    int second;second50,1868
int IntPairPtrCompare ( Int_Pair_t ** a, Int_Pair_t ** b )IntPairPtrCompare53,1888
void Wlc_NtkPrintNtk( Wlc_Ntk_t * p )Wlc_NtkPrintNtk62,2213
void Wlc_NtkAbsGetSupp_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Bit_t * vCiMarks, Vec_Int_t * vSuppRefs, Vec_Int_t * vSuppList )Wlc_NtkAbsGetSupp_rec91,3015
void Wlc_NtkAbsGetSupp( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Bit_t * vCiMarks, Vec_Int_t * vSuppRefs, Vec_Int_t * vSuppList)Wlc_NtkAbsGetSupp110,3628
int Wlc_NtkNumPiBits( Wlc_Ntk_t * pNtk ) Wlc_NtkNumPiBits118,3895
void Wlc_NtkAbsAnalyzeRefine( Wlc_Ntk_t * p, Vec_Int_t * vBlacks, Vec_Bit_t * vUnmark, int * nDisj, int * nNDisj )Wlc_NtkAbsAnalyzeRefine129,4087
static Vec_Int_t * Wlc_NtkGetCoreSels( Gia_Man_t * pFrames, int nFrames, int first_sel_pi, int num_sel_pis, Vec_Bit_t * vMark, int nConfLimit, Wlc_Par_t * pPars, int fSetPO, int RunId ) Wlc_NtkGetCoreSels216,6638
static Gia_Man_t * Wlc_NtkUnrollWoCex(Wlc_Ntk_t * pChoice, int nFrames, int first_sel_pi, int num_sel_pis)Wlc_NtkUnrollWoCex321,10252
static Gia_Man_t * Wlc_NtkUnrollWithCex(Wlc_Ntk_t * pChoice, Abc_Cex_t * pCex, int nbits_old_pis, int num_sel_pis, int * p_num_ppis, int sel_pi_first, int fUsePPI) Wlc_NtkUnrollWithCex367,11843
Wlc_Ntk_t * Wlc_NtkIntroduceChoices( Wlc_Ntk_t * pNtk, Vec_Int_t * vBlacks, Vec_Int_t * vPPIs )Wlc_NtkIntroduceChoices435,14796
static Abc_Cex_t * Wlc_NtkCexIsReal( Wlc_Ntk_t * pOrig, Abc_Cex_t * pCex ) Wlc_NtkCexIsReal561,18598
static Wlc_Ntk_t * Wlc_NtkAbs2( Wlc_Ntk_t * pNtk, Vec_Int_t * vBlacks, Vec_Int_t ** pvFlops )Wlc_NtkAbs2603,20142
static Vec_Bit_t * Wlc_NtkProofReduce( Wlc_Ntk_t * p, Wlc_Par_t * pPars, int nFrames, Vec_Int_t * vWhites, Vec_Int_t * vBlacks, int RunId )Wlc_NtkProofReduce682,22316
static int Wlc_NtkProofRefine( Wlc_Ntk_t * p, Wlc_Par_t * pPars, Abc_Cex_t * pCex, Vec_Int_t * vBlacks, Vec_Int_t ** pvRefine )Wlc_NtkProofRefine718,23662
static int Wlc_NtkUpdateBlacks( Wlc_Ntk_t * p, Wlc_Par_t * pPars, Vec_Int_t ** pvBlacks, Vec_Bit_t * vUnmark, Vec_Int_t * vSignals )Wlc_NtkUpdateBlacks774,25582
static Vec_Bit_t * Wlc_NtkMarkLimit( Wlc_Ntk_t * p, Wlc_Par_t * pPars )Wlc_NtkMarkLimit811,26907
static void Wlc_NtkSetUnmark( Wlc_Ntk_t * p, Wlc_Par_t * pPars, Vec_Bit_t * vUnmark )Wlc_NtkSetUnmark916,30739
static Vec_Int_t * Wlc_NtkGetBlacks( Wlc_Ntk_t * p, Wlc_Par_t * pPars )Wlc_NtkGetBlacks927,31026
static Vec_Bit_t * Wlc_NtkAbsMarkOpers( Wlc_Ntk_t * p, Wlc_Par_t * pPars, Vec_Bit_t * vUnmark, int fVerbose )Wlc_NtkAbsMarkOpers1008,34219
static void Wlc_NtkAbsMarkNodes_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Bit_t * vLeaves, Vec_Int_t * vPisOld, Vec_Int_t * vPisNew, Vec_Int_t * vFlops )Wlc_NtkAbsMarkNodes_rec1060,36468
static void Wlc_NtkAbsMarkNodes( Wlc_Ntk_t * p, Vec_Bit_t * vLeaves, Vec_Int_t * vPisOld, Vec_Int_t * vPisNew, Vec_Int_t * vFlops )Wlc_NtkAbsMarkNodes1083,37227
static Wlc_Ntk_t * Wlc_NtkAbs( Wlc_Ntk_t * p, Wlc_Par_t * pPars, Vec_Bit_t * vUnmark, Vec_Int_t ** pvPisNew, Vec_Int_t ** pvFlops, int fVerbose )Wlc_NtkAbs1129,39007
static Vec_Int_t * Wlc_NtkAbsRefinement( Wlc_Ntk_t * p, Gia_Man_t * pGia, Abc_Cex_t * pCex, Vec_Int_t * vPisNew )Wlc_NtkAbsRefinement1165,40329
static int Wlc_NtkNodeDeref_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pNode, Vec_Bit_t * vUnmark )Wlc_NtkNodeDeref_rec1205,41992
static int Wlc_NtkNodeRef_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pNode )Wlc_NtkNodeRef_rec1219,42480
static int Wlc_NtkMarkMffc( Wlc_Ntk_t * p, Wlc_Obj_t * pNode, Vec_Bit_t * vUnmark )Wlc_NtkMarkMffc1232,42875
static int Wlc_NtkRemoveFromAbstraction( Wlc_Ntk_t * p, Vec_Int_t * vRefine, Vec_Bit_t * vUnmark )Wlc_NtkRemoveFromAbstraction1249,43482
static int Wlc_NtkUnmarkRefinement( Wlc_Ntk_t * p, Vec_Int_t * vRefine, Vec_Bit_t * vUnmark )Wlc_NtkUnmarkRefinement1259,43817
Vec_Int_t * Wlc_NtkFlopsRemap( Wlc_Ntk_t * p, Vec_Int_t * vFfOld, Vec_Int_t * vFfNew )Wlc_NtkFlopsRemap1284,44707
Vec_Int_t * Wla_ManCollectNodes( Wla_Man_t * pWla, int fBlack )Wla_ManCollectNodes1330,46511
int Wla_ManShrinkAbs( Wla_Man_t * pWla, int nFrames, int RunId )Wla_ManShrinkAbs1350,46994
Wlc_Ntk_t * Wla_ManCreateAbs( Wla_Man_t * pWla )Wla_ManCreateAbs1379,47784
Aig_Man_t * Wla_ManBitBlast( Wla_Man_t * pWla, Wlc_Ntk_t * pAbs )Wla_ManBitBlast1398,48283
int Wla_ManCheckCombUnsat( Wla_Man_t * pWla, Aig_Man_t * pAig )Wla_ManCheckCombUnsat1434,49586
int Wla_ManSolveInt( Wla_Man_t * pWla, Aig_Man_t * pAig )Wla_ManSolveInt1483,50923
void Wla_ManRefine( Wla_Man_t * pWla )Wla_ManRefine1570,53170
Wla_Man_t * Wla_ManStart( Wlc_Ntk_t * pNtk, Wlc_Par_t * pPars )Wla_ManStart1653,55732
void Wla_ManStop( Wla_Man_t * p )Wla_ManStop1687,56781
int Wla_ManSolve( Wla_Man_t * pWla, Wlc_Par_t * pPars )Wla_ManSolve1698,57098
int Wlc_NtkPdrAbs( Wlc_Ntk_t * p, Wlc_Par_t * pPars )Wlc_NtkPdrAbs1755,58843
int Wlc_NtkAbsCore( Wlc_Ntk_t * p, Wlc_Par_t * pPars )Wlc_NtkAbsCore1786,59704

src/base/wlc/wlcReadVer.c,3871
#define WLV_PRS_MAX_LINE WLV_PRS_MAX_LINE31,829
typedef struct Wlc_Prs_t_  Wlc_Prs_t;Wlc_Prs_t33,863
struct Wlc_Prs_t_ Wlc_Prs_t_34,901
    int                    nFileSize;nFileSize36,922
    char *                 pFileName;pFileName37,960
    char *                 pBuffer;pBuffer38,998
    Vec_Int_t *            vLines;vLines39,1034
    Vec_Int_t *            vStarts;vStarts40,1069
    Vec_Int_t *            vFanins;vFanins41,1105
    Wlc_Ntk_t *            pNtk;pNtk42,1141
    Mem_Flex_t *           pMemTable;pMemTable43,1174
    Vec_Ptr_t *            vTables;vTables44,1212
    Vec_Str_t *            vPoPairs;vPoPairs45,1248
    int                    nConsts;nConsts46,1285
    int                    nNonZero[4];nNonZero47,1321
    int                    nNegative[4];nNegative48,1361
    int                    nReverse[4];nReverse49,1402
    char                   sError[WLV_PRS_MAX_LINE];sError50,1442
static inline int          Wlc_PrsOffset( Wlc_Prs_t * p, char * pStr )  { return pStr - p->pBuffer;                     }Wlc_PrsOffset53,1499
static inline char *       Wlc_PrsStr( Wlc_Prs_t * p, int iOffset )     { return p->pBuffer + iOffset;                  }Wlc_PrsStr54,1621
static inline int          Wlc_PrsStrCmp( char * pStr, char * pWhat )   { return !strncmp( pStr, pWhat, strlen(pWhat)); }Wlc_PrsStrCmp55,1743
#define Wlc_PrsForEachLine(Wlc_PrsForEachLine57,1866
#define Wlc_PrsForEachLineStart(Wlc_PrsForEachLineStart59,2038
Wlc_Prs_t * Wlc_PrsStart( char * pFileName, char * pStr )Wlc_PrsStart79,2671
void Wlc_PrsStop( Wlc_Prs_t * p )Wlc_PrsStop95,3286
int Wlc_PrsFindLine( Wlc_Prs_t * p, char * pCur )Wlc_PrsFindLine121,3946
int Wlc_PrsWriteErrorMessage( Wlc_Prs_t * p, char * pCur, const char * format, ... )Wlc_PrsWriteErrorMessage129,4163
void Wlc_PrsPrintErrorMessage( Wlc_Prs_t * p )Wlc_PrsPrintErrorMessage150,4894
static inline int Wlc_PrsIsDigit( char * pStr )Wlc_PrsIsDigit168,5265
static inline int Wlc_PrsIsChar( char * pStr )Wlc_PrsIsChar172,5364
static inline char * Wlc_PrsSkipSpaces( char * pStr )Wlc_PrsSkipSpaces179,5630
static inline char * Wlc_PrsFindSymbol( char * pStr, char Symb )Wlc_PrsFindSymbol185,5757
static inline char * Wlc_PrsFindSymbolTwo( char * pStr, char Symb, char Symb2 )Wlc_PrsFindSymbolTwo199,6100
static inline char * Wlc_PrsFindClosingParenthesis( char * pStr, char Open, char Close )Wlc_PrsFindClosingParenthesis206,6308
int Wlc_PrsRemoveComments( Wlc_Prs_t * p )Wlc_PrsRemoveComments229,6883
int Wlc_PrsPrepare( Wlc_Prs_t * p )Wlc_PrsPrepare306,10168
char * Wlc_PrsStrtok( char * s, const char * delim )Wlc_PrsStrtok379,12291
char * Wlc_PrsConvertInitValues( Wlc_Ntk_t * p )Wlc_PrsConvertInitValues440,13555
int Wlc_PrsCheckBitConst0( Wlc_Ntk_t * p, int NameId )Wlc_PrsCheckBitConst0484,15094
static inline char * Wlc_PrsFindRange( char * pStr, int * End, int * Beg )Wlc_PrsFindRange510,15753
static inline char * Wlc_PrsFindWord( char * pStr, char * pWord, int * fFound )Wlc_PrsFindWord539,16586
static inline char * Wlc_PrsFindName( char * pStr, char ** ppPlace )Wlc_PrsFindName548,16835
static inline char * Wlc_PrsReadConstant( Wlc_Prs_t * p, char * pStr, Vec_Int_t * vFanins, int * pRange, int * pSigned, int * pXValue )Wlc_PrsReadConstant578,17577
static inline char * Wlc_PrsReadName( Wlc_Prs_t * p, char * pStr, Vec_Int_t * vFanins )Wlc_PrsReadName632,19593
static inline int Wlc_PrsFindDefinition( Wlc_Prs_t * p, char * pStr, Vec_Int_t * vFanins, int * pXValue )Wlc_PrsFindDefinition672,21212
int Wlc_PrsReadDeclaration( Wlc_Prs_t * p, char * pStart )Wlc_PrsReadDeclaration874,31402
int Wlc_PrsDerive( Wlc_Prs_t * p )Wlc_PrsDerive954,34125
Wlc_Ntk_t * Wlc_ReadVer( char * pFileName, char * pStr )Wlc_ReadVer1685,76441
void Io_ReadWordTest( char * pFileName )Io_ReadWordTest1728,77574

src/base/wlc/wlcStdin.c,664
void Wlc_ComputeSum( char * pRes, char * pAdd, int nBits, int Radix )Wlc_ComputeSum44,1287
Vec_Str_t * Wlc_ConvertToRadix( unsigned * pBits, int Start, int nBits, int Radix )Wlc_ConvertToRadix62,1708
void Wlc_NtkReport( Wlc_Ntk_t * p, Abc_Cex_t * pCex, char * pName, int Radix )Wlc_NtkReport110,3011
static inline int Wlc_StdinCollectStop( Vec_Str_t * vInput, char * pLine, int LineSize )Wlc_StdinCollectStop150,4278
Vec_Str_t * Wlc_StdinCollectProblem( char * pDir )Wlc_StdinCollectProblem157,4550
Vec_Str_t * Wlc_StdinCollectQuery()Wlc_StdinCollectQuery170,4921
int Wlc_StdinProcessSmt( Abc_Frame_t * pAbc, char * pCmd )Wlc_StdinProcessSmt190,5426

src/base/wlc/wlcAbc.c,361
void Wlc_NtkPrintInputInfo( Wlc_Ntk_t * pNtk )Wlc_NtkPrintInputInfo45,1251
void Wlc_NtkPrintInvStats( Wlc_Ntk_t * pNtk, Vec_Int_t * vCounts, int fVerbose )Wlc_NtkPrintInvStats97,2548
Abc_Ntk_t * Wlc_NtkGetInv( Wlc_Ntk_t * pNtk, Vec_Int_t * vInv )Wlc_NtkGetInv143,3798
Vec_Int_t * Wlc_NtkGetPut( Abc_Ntk_t * pNtk, Gia_Man_t * pGia )Wlc_NtkGetPut240,7104

src/base/wlc/wlcUif.c,733
void Wlc_NtkCollectBoxes( Wlc_Ntk_t * p, Vec_Int_t * vBoxIds )Wlc_NtkCollectBoxes44,1254
Vec_Int_t * Wlc_NtkCollectAddMult( Wlc_Ntk_t * p, Wlc_BstPar_t * pPar, int * pCountA, int * pCountM )Wlc_NtkCollectAddMult54,1634
int Wlc_NtkPairIsUifable( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Wlc_Obj_t * pObj2 )Wlc_NtkPairIsUifable89,2772
Vec_Int_t * Wlc_NtkCollectMultipliers( Wlc_Ntk_t * p )Wlc_NtkCollectMultipliers121,3725
Vec_Int_t * Wlc_NtkFindUifableMultiplierPairs( Wlc_Ntk_t * p )Wlc_NtkFindUifableMultiplierPairs145,4366
Wlc_Ntk_t * Wlc_NtkAbstractNodes( Wlc_Ntk_t * p, Vec_Int_t * vNodesInit )Wlc_NtkAbstractNodes182,5458
Wlc_Ntk_t * Wlc_NtkUifNodePairs( Wlc_Ntk_t * p, Vec_Int_t * vPairsInit )Wlc_NtkUifNodePairs236,7069

src/base/wlc/wlcNdr.c,931
int Ndr_TypeNdr2Wlc( int Type )Ndr_TypeNdr2Wlc45,1282
int Ndr_TypeWlc2Ndr( int Type )Ndr_TypeWlc2Ndr106,6641
char * Ndr_ObjWriteConstant( unsigned * pBits, int nBits )Ndr_ObjWriteConstant179,12145
void * Wlc_NtkToNdr( Wlc_Ntk_t * pNtk )Wlc_NtkToNdr190,12483
void Wlc_WriteNdr( Wlc_Ntk_t * pNtk, char * pFileName )Wlc_WriteNdr247,14617
void Wlc_NtkToNdrTest( Wlc_Ntk_t * pNtk )Wlc_NtkToNdrTest254,14858
int Ndr_ObjReadRange( Ndr_Data_t * p, int Obj, int * End, int * Beg )Ndr_ObjReadRange285,15595
void Ndr_ObjReadConstant( Vec_Int_t * vFanins, char * pStr )Ndr_ObjReadConstant299,15993
void Ndr_NtkPrintNodes( Wlc_Ntk_t * pNtk )Ndr_NtkPrintNodes317,16722
void Wlc_NtkCheckIntegrity( void * pData )Wlc_NtkCheckIntegrity337,17351
Wlc_Ntk_t * Wlc_NtkFromNdr( void * pData )Wlc_NtkFromNdr366,18625
Wlc_Ntk_t * Wlc_ReadNdr( char * pFileName )Wlc_ReadNdr533,25492
void Wlc_ReadNdrTest()Wlc_ReadNdrTest543,25863

src/base/wlc/wlcReadSmt.c,5926
typedef struct Smt_Prs_t_ Smt_Prs_t;Smt_Prs_t31,829
struct Smt_Prs_t_Smt_Prs_t_32,866
    char *       pName;       // file namepName35,904
    char *       pBuffer;     // file contentspBuffer36,947
    char *       pLimit;      // end of filepLimit37,994
    char *       pCur;        // current positionpCur38,1039
    Abc_Nam_t *  pStrs;       // string managerpStrs39,1089
    Vec_Int_t    vStack;      // current node on each levelvStack41,1162
    Vec_Wec_t    vObjs;       // objectsvObjs43,1279
    int          NameCount;NameCount44,1320
    int          nDigits;nDigits45,1348
    Vec_Int_t    vTempFans; vTempFans46,1374
    char ErrorStr[1000];     ErrorStr48,1425
#define SMT_GLO_SUFFIX SMT_GLO_SUFFIX52,1491
    SMT_PRS_NONE = 0, SMT_PRS_NONE56,1555
    SMT_PRS_SET_OPTION,    SMT_PRS_SET_OPTION57,1578
    SMT_PRS_SET_LOGIC,    SMT_PRS_SET_LOGIC58,1606
    SMT_PRS_SET_INFO,    SMT_PRS_SET_INFO59,1633
    SMT_PRS_DEFINE_FUN,SMT_PRS_DEFINE_FUN60,1659
    SMT_PRS_DECLARE_FUN,   SMT_PRS_DECLARE_FUN61,1683
    SMT_PRS_ASSERT,   SMT_PRS_ASSERT62,1711
    SMT_PRS_LET,   SMT_PRS_LET63,1734
    SMT_PRS_CHECK_SAT,   SMT_PRS_CHECK_SAT64,1754
    SMT_PRS_GET_VALUE,   SMT_PRS_GET_VALUE65,1780
    SMT_PRS_EXIT,SMT_PRS_EXIT66,1806
    SMT_PRS_ENDSMT_PRS_END67,1824
} Smt_LineType_t; Smt_LineType_t68,1840
typedef struct Smt_Pair_t_ Smt_Pair_t;Smt_Pair_t70,1860
struct Smt_Pair_t_Smt_Pair_t_71,1899
    Smt_LineType_t Type;Type73,1920
    char *         pName;pName74,1945
static Smt_Pair_t s_Types[SMT_PRS_END] =s_Types76,1974
static inline char * Smt_GetTypeName( Smt_LineType_t Type )Smt_GetTypeName90,2503
static inline void Smt_AddTypes( Abc_Nam_t * p )Smt_AddTypes98,2711
static inline int         Smt_EntryIsName( int Fan )                          { return Abc_LitIsCompl(Fan);                                                         }Smt_EntryIsName106,2957
static inline int         Smt_EntryIsType( int Fan, Smt_LineType_t Type )     { assert(Smt_EntryIsName(Fan));  return Abc_Lit2Var(Fan) == Type;                     }Smt_EntryIsType107,3123
static inline char *      Smt_EntryName( Smt_Prs_t * p, int Fan )             { assert(Smt_EntryIsName(Fan));  return Abc_NamStr( p->pStrs, Abc_Lit2Var(Fan) );     }Smt_EntryName108,3289
static inline Vec_Int_t * Smt_EntryNode( Smt_Prs_t * p, int Fan )             { assert(!Smt_EntryIsName(Fan)); return Vec_WecEntry( &p->vObjs, Abc_Lit2Var(Fan) );  }Smt_EntryNode109,3455
static inline int         Smt_VecEntryIsType( Vec_Int_t * vFans, int i, Smt_LineType_t Type ) { return i < Vec_IntSize(vFans) && Smt_EntryIsName(Vec_IntEntry(vFans, i)) && Smt_EntryIsType(Vec_IntEntry(vFans, i), Type); }Smt_VecEntryIsType111,3622
static inline char *      Smt_VecEntryName( Smt_Prs_t * p, Vec_Int_t * vFans, int i )         { return Smt_EntryIsName(Vec_IntEntry(vFans, i)) ? Smt_EntryName(p, Vec_IntEntry(vFans, i)) : NULL;                          }Smt_VecEntryName112,3843
static inline Vec_Int_t * Smt_VecEntryNode( Smt_Prs_t * p, Vec_Int_t * vFans, int i )         { return Smt_EntryIsName(Vec_IntEntry(vFans, i)) ? NULL : Smt_EntryNode(p, Vec_IntEntry(vFans, i));                          }Smt_VecEntryNode113,4064
#define Smt_ManForEachDir(Smt_ManForEachDir115,4286
static inline int Smt_StrToType( char * pName, int * pfSigned )Smt_StrToType134,5003
static inline int Smt_PrsReadType( Smt_Prs_t * p, int iSig, int * pfSigned, int * Value1, int * Value2 )Smt_PrsReadType240,10242
static inline int Smt_StrType( char * str ) { return Smt_StrToType(str, NULL); }Smt_StrType263,11089
static inline int Smt_PrsCreateNodeOld( Wlc_Ntk_t * pNtk, int Type, int fSigned, int Range, Vec_Int_t * vFanins, char * pName )Smt_PrsCreateNodeOld276,11405
static inline int Smt_PrsCreateNode( Wlc_Ntk_t * pNtk, int Type, int fSigned, int Range, Vec_Int_t * vFanins, char * pName )Smt_PrsCreateNode307,12380
static inline char * Smt_GetHexFromDecimalString(char * pStr)Smt_GetHexFromDecimalString482,19218
static inline int Smt_PrsBuildConstant( Wlc_Ntk_t * pNtk, char * pStr, int nBits, char * pName )Smt_PrsBuildConstant584,21898
int Smt_PrsBuildNode( Wlc_Ntk_t * pNtk, Smt_Prs_t * p, int iNode, int RangeOut, char * pName )Smt_PrsBuildNode667,24520
Wlc_Ntk_t * Smt_PrsBuild( Smt_Prs_t * p )Smt_PrsBuild799,29566
char * Smt_PrsGenName( Smt_Prs_t * p )Smt_PrsGenName1019,37321
int Smt_PrsBuild2_rec( Wlc_Ntk_t * pNtk, Smt_Prs_t * p, int iNode, int iObjPrev, char * pName )Smt_PrsBuild2_rec1025,37472
Wlc_Ntk_t * Smt_PrsBuild2( Smt_Prs_t * p )Smt_PrsBuild21257,48003
static inline int Smt_PrsErrorSet( Smt_Prs_t * p, char * pError, int Value )Smt_PrsErrorSet1516,58087
static inline int Smt_PrsErrorPrint( Smt_Prs_t * p )Smt_PrsErrorPrint1523,58282
static inline char * Smt_PrsLoadFile( char * pFileName, char ** ppLimit )Smt_PrsLoadFile1532,58571
static inline int Smt_PrsRemoveComments( char * pBuffer, char * pLimit )Smt_PrsRemoveComments1558,59403
static inline Smt_Prs_t * Smt_PrsAlloc( char * pFileName, char * pBuffer, char * pLimit, int nObjs )Smt_PrsAlloc1596,60771
static inline void Smt_PrsFree( Smt_Prs_t * p )Smt_PrsFree1613,61279
static inline int Smt_PrsIsSpace( char c )Smt_PrsIsSpace1635,61771
static inline void Smt_PrsSkipSpaces( Smt_Prs_t * p )Smt_PrsSkipSpaces1639,61878
static inline void Smt_PrsSkipNonSpaces( Smt_Prs_t * p )Smt_PrsSkipNonSpaces1644,61994
void Smt_PrsReadLines( Smt_Prs_t * p )Smt_PrsReadLines1649,62175
void Smt_PrsPrintParser_rec( Smt_Prs_t * p, int iObj, int Depth )Smt_PrsPrintParser_rec1717,64872
void Smt_PrsPrintParser( Smt_Prs_t * p )Smt_PrsPrintParser1734,65393
Wlc_Ntk_t * Wlc_ReadSmtBuffer( char * pFileName, char * pBuffer, char * pLimit, int fOldParser, int fPrintTree )Wlc_ReadSmtBuffer1751,65749
Wlc_Ntk_t * Wlc_ReadSmt( char * pFileName, int fOldParser, int fPrintTree )Wlc_ReadSmt1766,66285

src/base/wlc/wlcGraft.c,1519
static inline word * Wlc_ObjSim( Gia_Man_t * p, int iObj )Wlc_ObjSim45,1300
static inline void Wlc_ObjSimPi( Gia_Man_t * p, int iObj )Wlc_ObjSimPi49,1422
static inline void Wlc_ObjSimRo( Gia_Man_t * p, int iObj )Wlc_ObjSimRo57,1636
static inline void Wlc_ObjSimCo( Gia_Man_t * p, int iObj )Wlc_ObjSimCo65,1888
static inline void Wlc_ObjSimAnd( Gia_Man_t * p, int iObj )Wlc_ObjSimAnd78,2324
int Wlc_NtkCollectObjs_rec( Wlc_Ntk_t * p, Wlc_Obj_t * pObj, Vec_Int_t * vObjs )Wlc_NtkCollectObjs_rec110,3397
Vec_Int_t * Wlc_NtkCollectObjs( Wlc_Ntk_t * p, int fEven, int * pCount )Wlc_NtkCollectObjs123,3843
void Wlc_NtkSaveOneNode( Wlc_Ntk_t * p, Wlc_Obj_t * pWlcObj, Gia_Man_t * pGia, Vec_Mem_t * vTtMem )Wlc_NtkSaveOneNode149,4492
void Wlc_NtkFindOneNode( Wlc_Ntk_t * p, Wlc_Obj_t * pWlcObj, Gia_Man_t * pGia, Vec_Mem_t * vTtMem )Wlc_NtkFindOneNode169,5303
Wlc_Ntk_t * Wlc_NtkGraftMulti( Wlc_Ntk_t * p, int fVerbose )Wlc_NtkGraftMulti203,6553
void Sbc_Mult( word a, word b, word r[2] )Sbc_Mult303,9376
void Sbc_SimMult( word A[64], word B[64], word R[128], int nIns )Sbc_SimMult314,9732
Vec_Int_t * Sbc_ManDetectMult( Gia_Man_t * p, Vec_Int_t * vIns )Sbc_ManDetectMult349,10806
Vec_Int_t * Sbc_ManWlcNodes2( Wlc_Ntk_t * pNtk, Gia_Man_t * p, Vec_Int_t * vGiaLits )Sbc_ManWlcNodes2439,13511
int Sbc_ManWlcNodes( Wlc_Ntk_t * pNtk, Gia_Man_t * p, Vec_Int_t * vGia2Out, int nOuts )Sbc_ManWlcNodes484,15609
void Sbc_ManDetectMultTest( Wlc_Ntk_t * pNtk, int fVerbose )Sbc_ManDetectMultTest540,17560

src/base/pla/plaMan.c,850
void Pla_GenSorter( int nVars )Pla_GenSorter44,1258
Vec_Bit_t * Pla_ManPrimesTable( int nVars )Pla_ManPrimesTable85,2432
Vec_Int_t * Pla_GenPrimes( int nVars )Pla_GenPrimes100,2948
Pla_Man_t * Pla_GenFromMinterms( char * pName, Vec_Int_t * vMints, int nVars )Pla_GenFromMinterms113,3401
Pla_Man_t * Pla_ManPrimesDetector( int nVars )Pla_ManPrimesDetector128,3928
Vec_Bit_t * Pla_GenRandom( int nVars, int nNums, int fNonZero )Pla_GenRandom150,4441
Pla_Man_t * Pla_ManGenerate( int nInputs, int nOutputs, int nCubes, int fVerbose )Pla_ManGenerate168,4977
void Pla_ManConvertFromBits( Pla_Man_t * p )Pla_ManConvertFromBits221,6629
void Pla_ManConvertToBits( Pla_Man_t * p )Pla_ManConvertToBits251,7623
int Pla_ManDist1Num( Pla_Man_t * p )Pla_ManDist1Num272,8291
int Pla_ManDist1NumTest( Pla_Man_t * p )Pla_ManDist1NumTest285,8685

src/base/pla/plaMerge.c,65
int Pla_ManDist1Merge( Pla_Man_t * p )Pla_ManDist1Merge44,1224

src/base/pla/pla.h,4988
#define ABC__base__wlc__wlc_hABC__base__wlc__wlc_h22,524
#define MASK55 MASK5539,1145
    PLA_FILE_FD = 0,PLA_FILE_FD47,1440
    PLA_FILE_F,PLA_FILE_F48,1461
    PLA_FILE_FR,PLA_FILE_FR49,1477
    PLA_FILE_FDR,PLA_FILE_FDR50,1494
    PLA_FILE_NONEPLA_FILE_NONE51,1512
} Pla_File_t;Pla_File_t52,1530
    PLA_LIT_DASH = 0,PLA_LIT_DASH56,1577
    PLA_LIT_ZERO,PLA_LIT_ZERO57,1599
    PLA_LIT_ONE,PLA_LIT_ONE58,1617
    PLA_LIT_FULLPLA_LIT_FULL59,1634
} Pla_Lit_t;Pla_Lit_t60,1651
typedef struct Pla_Man_t_ Pla_Man_t;Pla_Man_t63,1666
struct Pla_Man_t_Pla_Man_t_64,1703
    char *           pName;      // model namepName66,1723
    char *           pSpec;      // input filepSpec67,1770
    Pla_File_t       Type;       // file typeType68,1817
    int              nIns;       // inputsnIns69,1863
    int              nOuts;      // outputsnOuts70,1906
    int              nInWords;   // words of input datanInWords71,1950
    int              nOutWords;  // words of output datanOutWords72,2006
    Vec_Int_t        vCubes;     // cubesvCubes73,2063
    Vec_Int_t        vHashes;    // hash valuesvHashes74,2105
    Vec_Wrd_t        vInBits;    // input bitsvInBits75,2153
    Vec_Wrd_t        vOutBits;   // output bitsvOutBits76,2200
    Vec_Wec_t        vCubeLits;  // cubes as interger arraysvCubeLits77,2248
    Vec_Wec_t        vOccurs;    // occurence counters for the literalsvOccurs78,2309
    Vec_Int_t        vDivs;      // divisor definitionsvDivs79,2381
static inline char * Pla_ManName( Pla_Man_t * p )                    { return p->pName;                   }Pla_ManName82,2441
static inline int    Pla_ManInNum( Pla_Man_t * p )                   { return p->nIns;                    }Pla_ManInNum83,2549
static inline int    Pla_ManOutNum( Pla_Man_t * p )                  { return p->nOuts;                   }Pla_ManOutNum84,2657
static inline int    Pla_ManCubeNum( Pla_Man_t * p )                 { return Vec_IntSize( &p->vCubes );  }Pla_ManCubeNum85,2765
static inline int    Pla_ManDivNum( Pla_Man_t * p )                  { return Vec_IntSize( &p->vDivs );   }Pla_ManDivNum86,2873
static inline word * Pla_CubeIn( Pla_Man_t * p, int i )              { return Vec_WrdEntryP(&p->vInBits,  i * p->nInWords);  }Pla_CubeIn88,2982
static inline word * Pla_CubeOut( Pla_Man_t * p, int i )             { return Vec_WrdEntryP(&p->vOutBits, i * p->nOutWords); }Pla_CubeOut89,3109
static inline int    Pla_CubeNum( int hCube )                        { return hCube >> 8;    }Pla_CubeNum91,3237
static inline int    Pla_CubeLit( int hCube )                        { return hCube & 0xFF;  }Pla_CubeLit92,3332
static inline int    Pla_CubeHandle( int iCube, int iLit )           { assert( !(iCube >> 24) && !(iLit >> 8) ); return iCube << 8 | iLit; }Pla_CubeHandle93,3427
static inline int    Pla_TtGetBit( word * p, int i )                 { return (int)(p[i>>6] >> (i & 63)) & 1;      }Pla_TtGetBit96,3619
static inline void   Pla_TtSetBit( word * p, int i )                 { p[i>>6] |= (((word)1)<<(i & 63));           }Pla_TtSetBit97,3736
static inline void   Pla_TtXorBit( word * p, int i )                 { p[i>>6] ^= (((word)1)<<(i & 63));           }Pla_TtXorBit98,3853
static inline int    Pla_CubeGetLit( word * p, int i )               { return (int)(p[i>>5] >> ((i<<1) & 63)) & 3; }Pla_CubeGetLit101,4013
static inline void   Pla_CubeSetLit( word * p, int i, Pla_Lit_t d )  { p[i>>5] |= (((word)d)<<((i<<1) & 63));      }Pla_CubeSetLit102,4130
static inline void   Pla_CubeXorLit( word * p, int i, Pla_Lit_t d )  { p[i>>5] ^= (((word)d)<<((i<<1) & 63));      }Pla_CubeXorLit103,4247
#define Pla_ForEachCubeIn(Pla_ForEachCubeIn114,4806
#define Pla_ForEachCubeInStart(Pla_ForEachCubeInStart116,4962
#define Pla_ForEachCubeOut(Pla_ForEachCubeOut119,5123
#define Pla_ForEachCubeInOut(Pla_ForEachCubeInOut121,5280
#define Pla_CubeForEachLit(Pla_CubeForEachLit124,5481
#define Pla_CubeForEachLitIn(Pla_CubeForEachLitIn126,5631
#define Pla_CubeForEachLitOut(Pla_CubeForEachLitOut128,5758
static inline int Pla_OnlyOneOne( word t )Pla_OnlyOneOne147,6358
static inline int Pla_CubesAreDistance1( word * p, word * q, int nWords )Pla_CubesAreDistance1151,6444
static inline int Pla_CubesAreConsensus( word * p, word * q, int nWords, int * piVar )Pla_CubesAreConsensus168,6962
static inline int Pla_TtCountOnesOne( word x )Pla_TtCountOnesOne186,7584
static inline int Pla_TtCountOnes( word * p, int nWords )Pla_TtCountOnes196,7933
static inline Pla_Man_t * Pla_ManAlloc( char * pFileName, int nIns, int nOuts, int nCubes )Pla_ManAlloc215,8348
static inline void Pla_ManFree( Pla_Man_t * p )Pla_ManFree229,8922
static inline int Pla_ManLitInNum( Pla_Man_t * p )Pla_ManLitInNum242,9276
static inline int Pla_ManLitOutNum( Pla_Man_t * p )Pla_ManLitOutNum250,9521
static inline void Pla_ManPrintStats( Pla_Man_t * p, int fVerbose )Pla_ManPrintStats258,9768

src/base/pla/plaFxch.c,5319
typedef struct Fxch_Obj_t_ Fxch_Obj_t;Fxch_Obj_t31,827
struct Fxch_Obj_t_Fxch_Obj_t_32,866
    unsigned        Table : 30;Table34,887
    unsigned        MarkN :  1;MarkN35,919
    unsigned        MarkP :  1;MarkP36,951
    int             Next;Next37,983
    int             Prev;Prev38,1009
    int             Cube;Cube39,1035
typedef struct Fxch_Man_t_ Fxch_Man_t;Fxch_Man_t42,1065
struct Fxch_Man_t_Fxch_Man_t_43,1104
    Vec_Wec_t       vCubes;     // cube -> litvCubes46,1144
    Vec_Wec_t       vLits;      // lit -> cubevLits48,1212
    Vec_Int_t       vRands;     // random numbers for each literalvRands49,1259
    Vec_Int_t       vCubeLinks; // first link for each cubevCubeLinks50,1326
    Fxch_Obj_t *    pBins;      // hash table (lits -> cube + lit)pBins51,1386
    Hash_IntMan_t * vHash;      // divisor hash tablevHash52,1453
    Vec_Que_t *     vPrio;      // priority queue for divisors by weightvPrio53,1507
    Vec_Flt_t       vWeights;   // divisor weightsvWeights54,1580
    Vec_Wec_t       vPairs;     // cube pairs for each divvPairs55,1631
    Vec_Wrd_t       vDivs;      // extracted divisorsvDivs56,1690
    Vec_Int_t       vCubesS;    // cube pairs for singlevCubesS58,1767
    Vec_Int_t       vCubesD;    // cube pairs for doublevCubesD59,1824
    Vec_Int_t       vCube1;     // first cubevCube160,1881
    Vec_Int_t       vCube2;     // second cubevCube261,1927
    abctime         timeStart;  // starting timetimeStart63,1993
    int             SizeMask;   // hash table maskSizeMask64,2042
    int             nVars;      // original problem variablesnVars65,2093
    int             nLits;      // the number of SOP literalsnLits66,2155
    int             nCompls;    // the number of complementsnCompls67,2217
    int             nPairsS;    // number of lit pairsnPairsS68,2278
    int             nPairsD;    // number of cube pairsnPairsD69,2333
#define Fxch_ManForEachCubeVec(Fxch_ManForEachCubeVec72,2393
static inline Vec_Int_t * Fxch_ManCube( Fxch_Man_t * p, int hCube ) { return Vec_WecEntry(&p->vCubes, Pla_CubeNum(hCube)); }Fxch_ManCube75,2570
void Fxch_ManWriteBlif( char * pFileName, Vec_Wec_t * vCubes, Vec_Wrd_t * vDivs )Fxch_ManWriteBlif93,3191
Fxch_Man_t * Fxch_ManStart( Vec_Wec_t * vCubes, Vec_Wec_t * vLits )Fxch_ManStart164,5724
void Fxch_ManStop( Fxch_Man_t * p )Fxch_ManStop201,7059
static inline int Fxch_TabCompare( Fxch_Man_t * p, int hCube1, int hCube2 )Fxch_TabCompare231,7799
static inline void Fxch_CompressCubes( Fxch_Man_t * p, Vec_Int_t * vLit2Cube )Fxch_CompressCubes243,8350
static inline int Fxch_CollectSingles( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vArr )Fxch_CollectSingles251,8660
static inline void Fxch_CollectDoubles( Fxch_Man_t * p, Vec_Int_t * vPairs, Vec_Int_t * vRes, int Lit0, int Lit1 )Fxch_CollectDoubles277,9585
static inline void Fxch_CompressLiterals2( Vec_Int_t * p, int iInd1, int iInd2 )Fxch_CompressLiterals2290,10207
static inline void Fxch_CompressLiterals( Vec_Int_t * p, int iLit1, int iLit2 )Fxch_CompressLiterals301,10592
static inline void Fxch_FilterCubes( Fxch_Man_t * p, Vec_Int_t * vCubesS, int Lit0, int Lit1 )Fxch_FilterCubes310,10892
int Fxch_DivisorAdd( Fxch_Man_t * p, int Lit0, int Lit1, int Weight )Fxch_DivisorAdd344,11805
void Fxch_DivisorRemove( Fxch_Man_t * p, int Lit0, int Lit1, int Weight )Fxch_DivisorRemove369,12588
static inline Fxch_Obj_t * Fxch_TabBin( Fxch_Man_t * p, int Value )             { return p->pBins + (Value & p->SizeMask);         }Fxch_TabBin394,13314
static inline Fxch_Obj_t * Fxch_TabEntry( Fxch_Man_t * p, int i )               { return i ? p->pBins + i : NULL;                  }Fxch_TabEntry395,13447
static inline int          Fxch_TabEntryId( Fxch_Man_t * p, Fxch_Obj_t * pEnt ) { assert(pEnt > p->pBins); return pEnt - p->pBins; }Fxch_TabEntryId396,13580
static inline void Fxch_TabMarkPair( Fxch_Man_t * p, int i, int j )Fxch_TabMarkPair398,13714
static inline void Fxch_TabUnmarkPair( Fxch_Man_t * p, int i, int j )Fxch_TabUnmarkPair411,14088
static inline void Fxch_TabInsertLink( Fxch_Man_t * p, int i, int j, int fSkipCheck )Fxch_TabInsertLink424,14464
static inline void Fxch_TabExtractLink( Fxch_Man_t * p, int i, int j )Fxch_TabExtractLink438,15006
static inline void Fxch_TabInsert( Fxch_Man_t * p, int iLink, int Value, int hCube )Fxch_TabInsert454,15535
static inline void Fxch_TabExtract( Fxch_Man_t * p, int iLink, int Value, int hCube )Fxch_TabExtract501,17276
int Fxch_TabSingleDivisors( Fxch_Man_t * p, int iCube, int fAdd )Fxch_TabSingleDivisors550,18825
int Fxch_TabDoubleDivisors( Fxch_Man_t * p, int iCube, int fAdd )Fxch_TabDoubleDivisors567,19388
void Fxch_ManCreateDivisors( Fxch_Man_t * p )Fxch_ManCreateDivisors585,20054
void Fxch_ManUpdate( Fxch_Man_t * p, int iDiv )Fxch_ManUpdate617,21106
static void Fxch_PrintStats( Fxch_Man_t * p, abctime clk )Fxch_PrintStats758,27287
static inline void Fxch_PrintDivOne( Fxch_Man_t * p, int iDiv )Fxch_PrintDivOne770,27769
static void Fxch_PrintDivisors( Fxch_Man_t * p )Fxch_PrintDivisors790,28490
int Fxch_ManFastExtract( Fxch_Man_t * p, int fVerbose, int fVeryVerbose )Fxch_ManFastExtract798,28678
int Pla_ManPerformFxch( Pla_Man_t * p )Pla_ManPerformFxch833,29684

src/base/pla/plaRead.c,562
char * Pla_ReadFile( char * pFileName, char ** ppLimit )Pla_ReadFile44,1222
void Pla_ReadPlaRemoveComments( char * pBuffer, char * pLimit )Pla_ReadPlaRemoveComments82,2272
int Pla_ReadPlaHeader( char * pBuffer, char * pLimit, int * pnIns, int * pnOuts, int * pnCubes, int * pType )Pla_ReadPlaHeader90,2520
Vec_Str_t * Pla_ReadPlaBody( char * pBuffer, char * pLimit, Pla_File_t Type )Pla_ReadPlaBody128,3889
void Pla_ReadAddBody( Pla_Man_t * p, Vec_Str_t * vLits )Pla_ReadAddBody157,4928
Pla_Man_t * Pla_ReadPla( char * pFileName )Pla_ReadPla186,6152

src/base/pla/plaSimple.c,554
void Pla_ManDumpPla( Pla_Man_t * p, char * pFileName )Pla_ManDumpPla44,1260
void Pla_ManDumpBlif( Pla_Man_t * p, char * pFileName )Pla_ManDumpBlif83,2745
int Pla_ManExpendDirNum( word * pOn, int nBits, int iMint, int * pVars )Pla_ManExpendDirNum166,5901
void Pla_PrintBinary( word * pT, int nBits )Pla_PrintBinary174,6135
Vec_Wrd_t * Pla_ManFxMinimize( word * pOn, int nVars )Pla_ManFxMinimize181,6294
Pla_Man_t * Pla_ManFxPrepare( int nVars )Pla_ManFxPrepare301,10128
int Pla_ManFxPerformSimple( int nVars )Pla_ManFxPerformSimple323,10993

src/base/pla/plaCom.c,1227
static inline Pla_Man_t * Pla_AbcGetMan( Abc_Frame_t * pAbc )                    { return (Pla_Man_t *)pAbc->pAbcPla;                      }Pla_AbcGetMan38,1277
static inline void        Pla_AbcFreeMan( Abc_Frame_t * pAbc )                   { if ( pAbc->pAbcPla ) Pla_ManFree(Pla_AbcGetMan(pAbc));  }Pla_AbcFreeMan39,1418
static inline void        Pla_AbcUpdateMan( Abc_Frame_t * pAbc, Pla_Man_t * p )  { Pla_AbcFreeMan(pAbc); pAbc->pAbcPla = p;                }Pla_AbcUpdateMan40,1559
void Pla_Init( Abc_Frame_t * pAbc )Pla_Init57,2154
void Pla_End( Abc_Frame_t * pAbc )Pla_End78,2914
void Pla_SetMan( Abc_Frame_t * pAbc, Pla_Man_t * p )Pla_SetMan94,3215
int Abc_CommandReadPla( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandReadPla111,3540
int Abc_CommandWritePla( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandWritePla177,5441
int Abc_CommandPs( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandPs232,6948
int Abc_CommandGen( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandGen291,8696
int Abc_CommandMerge( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandMerge404,12432
int Abc_CommandTest( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandTest452,13682

src/base/pla/plaHash.c,2567
#define PLA_HASH_VALUE_NUM PLA_HASH_VALUE_NUM29,768
static unsigned s_PlaHashValues[PLA_HASH_VALUE_NUM] = s_PlaHashValues30,799
static inline int Pla_HashValue( int i )  { assert( i >= 0 && i < PLA_HASH_VALUE_NUM ); return s_PlaHashValues[i] & 0x3FFFFFF; }Pla_HashValue66,3835
#define PLA_LIT_UNUSED PLA_LIT_UNUSED69,3966
typedef struct Tab_Obj_t_ Tab_Obj_t;Tab_Obj_t71,3997
struct Tab_Obj_t_Tab_Obj_t_72,4034
    int         Table;Table74,4054
    int         Next;Next75,4077
    int         Cube;Cube76,4099
    unsigned    VarA : 16;VarA77,4121
    unsigned    VarB : 16;VarB78,4148
typedef struct Tab_Man_t_ Tab_Man_t;Tab_Man_t80,4178
struct Tab_Man_t_Tab_Man_t_81,4215
    int         SizeMask; // table size (2^Degree-1)SizeMask83,4235
    int         nBins;    // number of entriesnBins84,4288
    Tab_Obj_t * pBins;    // hash table (lits -> cube + lit + lit)pBins85,4335
    Pla_Man_t * pMan;     // managerpMan86,4402
static inline Tab_Obj_t *  Tab_ManBin( Tab_Man_t * p, int Value ) { return p->pBins + (Value & p->SizeMask); }Tab_ManBin89,4443
static inline Tab_Obj_t *  Tab_ManEntry( Tab_Man_t * p, int i )   { return i ? p->pBins + i : NULL;          }Tab_ManEntry90,4554
static inline Tab_Man_t * Tab_ManAlloc( int LogSize, Pla_Man_t * pMan )Tab_ManAlloc107,5120
static inline void Tab_ManFree( Tab_Man_t * p )Tab_ManFree117,5437
static inline void Tab_ManHashInsert( Tab_Man_t * p, int Value, int iCube, int iVar )Tab_ManHashInsert122,5534
static inline int Tab_ManHashLookup( Tab_Man_t * p, int Value, Vec_Int_t * vCube )Tab_ManHashLookup131,5827
static inline void Tab_ManHashCollect( Tab_Man_t * p, int iBin, Vec_Int_t * vEntries )Tab_ManHashCollect139,6178
static inline int Pla_CubeHashValue( Vec_Int_t * vCube )Pla_CubeHashValue159,6739
void Pla_ManHashCubes( Pla_Man_t * p, Tab_Man_t * pTab )Pla_ManHashCubes166,6923
int Pla_ManHashDistance1( Pla_Man_t * p )Pla_ManHashDistance1178,7314
int Pla_ManHashDist1NumTest( Pla_Man_t * p )Pla_ManHashDist1NumTest212,8514
void Pla_PrintCube( Vec_Int_t * vLits, int nVars, int iVar )Pla_PrintCube232,9032
void Pla_ManHashCubes2( Pla_Man_t * p, Tab_Man_t * pTab )Pla_ManHashCubes2242,9420
void Vec_IntCopySkip( Vec_Int_t * vCube, int iVar, Vec_Int_t * vRes )Vec_IntCopySkip257,9836
Vec_Int_t * Pla_ManComputeDistance1Int( Pla_Man_t * p )Pla_ManComputeDistance1Int265,10076
Vec_Int_t * Pla_ManComputeDistance1( Pla_Man_t * p )Pla_ManComputeDistance1325,12180
void Pla_ManComputeDist1Test( Pla_Man_t * p )Pla_ManComputeDist1Test333,12507

src/base/pla/pla.c,0

src/base/pla/plaWrite.c,143
Vec_Str_t * Pla_WritePlaInt( Pla_Man_t * p )Pla_WritePlaInt44,1224
void Pla_WritePla( Pla_Man_t * p, char * pFileName )Pla_WritePla88,2788

src/base/cba/cbaTypes.h,4860
#define ABC__base__cba__cba__types_hABC__base__cba__cba__types_h22,555
    CBA_OBJ_NONE = 0,  // 00:  unusedCBA_OBJ_NONE40,1317
    CBA_OBJ_PI,        // 01:  inputCBA_OBJ_PI41,1355
    CBA_OBJ_PO,        // 02:  outputCBA_OBJ_PO42,1392
    CBA_OBJ_BOX,       // 03:  boxCBA_OBJ_BOX43,1430
    CBA_BOX_CF,        // 04: CBA_BOX_CF45,1466
    CBA_BOX_CT,        // 05:   CBA_BOX_CT46,1497
    CBA_BOX_CX,        // 06:   CBA_BOX_CX47,1530
    CBA_BOX_CZ,        // 07:  CBA_BOX_CZ48,1563
    CBA_BOX_BUF,       // 08:    CBA_BOX_BUF50,1596
    CBA_BOX_INV,       // 09:    CBA_BOX_INV51,1630
    CBA_BOX_AND,       // 10:    CBA_BOX_AND52,1664
    CBA_BOX_NAND,      // 11:   CBA_BOX_NAND53,1698
    CBA_BOX_OR,        // 12:     CBA_BOX_OR54,1731
    CBA_BOX_NOR,       // 13:    CBA_BOX_NOR55,1766
    CBA_BOX_XOR,       // 14:    CBA_BOX_XOR56,1800
    CBA_BOX_XNOR,      // 15:   CBA_BOX_XNOR57,1834
    CBA_BOX_SHARP,     // 16:  CBA_BOX_SHARP58,1867
    CBA_BOX_SHARPL,    // 17:  CBA_BOX_SHARPL59,1899
    CBA_BOX_MUX,       // 18:    CBA_BOX_MUX60,1931
    CBA_BOX_MAJ,       // 19:    CBA_BOX_MAJ61,1965
    CBA_BOX_ABC,       // 20:CBA_BOX_ABC63,2000
    CBA_BOX_BA,        // 21:CBA_BOX_BA64,2030
    CBA_BOX_BO,        // 22:CBA_BOX_BO65,2060
    CBA_BOX_BX,        // 23:CBA_BOX_BX66,2090
    CBA_BOX_BN,        // 24:CBA_BOX_BN67,2120
    CBA_BOX_BAO,       // 25:CBA_BOX_BAO68,2150
    CBA_BOX_BOA,       // 26:CBA_BOX_BOA69,2180
    CBA_BOX_RAND,      // 27:CBA_BOX_RAND71,2211
    CBA_BOX_RNAND,     // 28:CBA_BOX_RNAND72,2241
    CBA_BOX_ROR,       // 29:CBA_BOX_ROR73,2271
    CBA_BOX_RNOR,      // 30:CBA_BOX_RNOR74,2301
    CBA_BOX_RXOR,      // 31:CBA_BOX_RXOR75,2331
    CBA_BOX_RXNOR,     // 32:CBA_BOX_RXNOR76,2361
    CBA_BOX_LNOT,      // 33CBA_BOX_LNOT78,2392
    CBA_BOX_LAND,      // 34:CBA_BOX_LAND79,2421
    CBA_BOX_LNAND,     // 35:CBA_BOX_LNAND80,2451
    CBA_BOX_LOR,       // 36:CBA_BOX_LOR81,2481
    CBA_BOX_LNOR,      // 37:CBA_BOX_LNOR82,2511
    CBA_BOX_LXOR,      // 38:CBA_BOX_LXOR83,2541
    CBA_BOX_LXNOR,     // 39:CBA_BOX_LXNOR84,2571
    CBA_BOX_NMUX,      // 40:  CBA_BOX_NMUX86,2602
    CBA_BOX_SEL,       // 41:CBA_BOX_SEL87,2634
    CBA_BOX_PSEL,      // 42:CBA_BOX_PSEL88,2664
    CBA_BOX_ENC,       // 43:CBA_BOX_ENC89,2694
    CBA_BOX_PENC,      // 44:CBA_BOX_PENC90,2724
    CBA_BOX_DEC,       // 45:CBA_BOX_DEC91,2754
    CBA_BOX_EDEC,      // 46:CBA_BOX_EDEC92,2784
    CBA_BOX_ADD,       // 47:CBA_BOX_ADD94,2815
    CBA_BOX_SUB,       // 48:CBA_BOX_SUB95,2845
    CBA_BOX_MUL,       // 49:CBA_BOX_MUL96,2875
    CBA_BOX_SMUL,      // 50:CBA_BOX_SMUL97,2905
    CBA_BOX_DIV,       // 51:CBA_BOX_DIV98,2935
    CBA_BOX_MOD,       // 52:CBA_BOX_MOD99,2965
    CBA_BOX_REM,       // 53:CBA_BOX_REM100,2995
    CBA_BOX_POW,       // 54:CBA_BOX_POW101,3025
    CBA_BOX_MIN,       // 55:CBA_BOX_MIN102,3055
    CBA_BOX_SQRT,      // 56:CBA_BOX_SQRT103,3085
    CBA_BOX_ABS,       // 57:CBA_BOX_ABS104,3115
    CBA_BOX_SLTHAN,    // 58:CBA_BOX_SLTHAN106,3146
    CBA_BOX_LTHAN,     // 59:CBA_BOX_LTHAN107,3176
    CBA_BOX_LETHAN,    // 60:CBA_BOX_LETHAN108,3206
    CBA_BOX_METHAN,    // 61:CBA_BOX_METHAN109,3236
    CBA_BOX_MTHAN,     // 62:CBA_BOX_MTHAN110,3266
    CBA_BOX_EQU,       // 63:CBA_BOX_EQU111,3296
    CBA_BOX_NEQU,      // 64:CBA_BOX_NEQU112,3326
    CBA_BOX_SHIL,      // 65:CBA_BOX_SHIL114,3357
    CBA_BOX_SHIR,      // 66:CBA_BOX_SHIR115,3387
    CBA_BOX_SHILA,     // 67:CBA_BOX_SHILA116,3417
    CBA_BOX_SHIRA,     // 68:CBA_BOX_SHIRA117,3447
    CBA_BOX_ROTL,      // 69:CBA_BOX_ROTL118,3477
    CBA_BOX_ROTR,      // 70:CBA_BOX_ROTR119,3507
    CBA_BOX_NODE,      // 71:  CBA_BOX_NODE121,3538
    CBA_BOX_LUT,       // 72: CBA_BOX_LUT122,3570
    CBA_BOX_GATE,      // 73:  CBA_BOX_GATE123,3601
    CBA_BOX_TABLE,     // 74:  CBA_BOX_TABLE124,3633
    CBA_BOX_TRI,       // 75:CBA_BOX_TRI126,3666
    CBA_BOX_RAM,       // 76:CBA_BOX_RAM127,3696
    CBA_BOX_RAMR,      // 77:CBA_BOX_RAMR128,3726
    CBA_BOX_RAMW,      // 78:CBA_BOX_RAMW129,3756
    CBA_BOX_RAMWC,     // 79:CBA_BOX_RAMWC130,3786
    CBA_BOX_RAML,      // 80:CBA_BOX_RAML131,3816
    CBA_BOX_RAMS,      // 81:CBA_BOX_RAMS132,3846
    CBA_BOX_RAMBOX,    // 82:CBA_BOX_RAMBOX133,3876
    CBA_BOX_LATCH,     // 83:CBA_BOX_LATCH135,3907
    CBA_BOX_LATCHRS,   // 84:CBA_BOX_LATCHRS136,3937
    CBA_BOX_DFF,       // 85:CBA_BOX_DFF137,3967
    CBA_BOX_DFFCPL,    // 86:CBA_BOX_DFFCPL138,3997
    CBA_BOX_DFFRS,     // 87:CBA_BOX_DFFRS139,4027
    CBA_BOX_SLICE,     // 88:CBA_BOX_SLICE141,4058
    CBA_BOX_CONCAT,    // 89: CBA_BOX_CONCAT142,4088
    CBA_BOX_LAST       // 90CBA_BOX_LAST144,4120
} Cba_ObjType_t; Cba_ObjType_t145,4149

src/base/cba/cbaReadVer.c,6627
static const char * s_VerTypes[PRS_VER_UNKNOWN+1] = {s_VerTypes30,800
void Prs_NtkAddVerilogDirectives( Prs_Man_t * p )Prs_NtkAddVerilogDirectives51,1521
static inline int Prs_CharIsSpace( char c )   { return (c == ' ' || c == '\t' || c == '\r' || c == '\n');                           }Prs_CharIsSpace61,1771
static inline int Prs_CharIsDigit( char c )   { return (c >= '0' && c <= '9');                                                      }Prs_CharIsDigit62,1905
static inline int Prs_CharIsDigitB( char c )  { return (c == '0' || c == '1'  || c == 'x' || c == 'z');                             }Prs_CharIsDigitB63,2039
static inline int Prs_CharIsDigitH( char c )  { return (c >= '0' && c <= '9') || (c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f');  }Prs_CharIsDigitH64,2173
static inline int Prs_CharIsChar( char c )    { return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');                            }Prs_CharIsChar65,2307
static inline int Prs_CharIsSymb1( char c )   { return Prs_CharIsChar(c) || c == '_';                                               }Prs_CharIsSymb166,2441
static inline int Prs_CharIsSymb2( char c )   { return Prs_CharIsSymb1(c) || Prs_CharIsDigit(c) || c == '$';                        }Prs_CharIsSymb267,2575
static inline int Prs_ManIsChar( Prs_Man_t * p, char c )    { return p->pCur[0] == c;                        }Prs_ManIsChar69,2710
static inline int Prs_ManIsChar1( Prs_Man_t * p, char c )   { return p->pCur[1] == c;                        }Prs_ManIsChar170,2821
static inline int Prs_ManIsDigit( Prs_Man_t * p )           { return Prs_CharIsDigit(*p->pCur);              }Prs_ManIsDigit71,2932
typedef struct Prs_VerPrim_t_ Prs_VerPrim_t;Prs_VerPrim_t90,3524
struct Prs_VerPrim_t_Prs_VerPrim_t_91,3569
    int    Type;Type93,3593
    char * pName;pName94,3610
static const Prs_VerPrim_t s_VerilogPrims[16] = s_VerilogPrims96,3631
static const char * s_VerNames[100] = s_VerNames111,4018
typedef struct Prs_VerInfo_t_ Prs_VerInfo_t;Prs_VerInfo_t171,5633
struct Prs_VerInfo_t_Prs_VerInfo_t_172,5678
    int    Type;Type174,5702
    int    nInputs;nInputs175,5719
    char * pTypeName;pTypeName176,5739
    char * pSigNames[6];pSigNames177,5761
static const Prs_VerInfo_t s_VerInfo[100] = s_VerInfo179,5789
static inline int Prs_ManIsVerilogPrim( char * pName )Prs_ManIsVerilogPrim268,14683
static inline int Prs_ManIsKnownModule( char * pName )Prs_ManIsKnownModule277,14946
static inline int Prs_ManFindType( char * pName, int * pInputs, int fOut, char *** ppNames )Prs_ManFindType290,15355
static inline int Prs_ManUtilSkipComments( Prs_Man_t * p )Prs_ManUtilSkipComments320,16184
static inline int Prs_ManUtilSkipName( Prs_Man_t * p )Prs_ManUtilSkipName338,16734
static inline int Prs_ManUtilSkipSpaces( Prs_Man_t * p )Prs_ManUtilSkipSpaces349,17031
static inline int Prs_ManUtilSkipUntil( Prs_Man_t * p, char c )Prs_ManUtilSkipUntil363,17505
static inline int Prs_ManUtilSkipUntilWord( Prs_Man_t * p, char * pWord )Prs_ManUtilSkipUntilWord378,17892
static inline int Prs_ManUtilDetectTwo( Prs_Man_t * p, char Sym1, char Sym2 )Prs_ManUtilDetectTwo386,18144
static inline char * Prs_ManFindClosingParenthesis( Prs_Man_t * p, char Open, char Close )Prs_ManFindClosingParenthesis395,18402
static inline int Prs_ManReadName( Prs_Man_t * p )Prs_ManReadName431,19263
static inline int Prs_ManReadNameList( Prs_Man_t * p, Vec_Int_t * vTemp, char LastSymb )Prs_ManReadNameList450,19760
static inline int Prs_ManReadConstant( Prs_Man_t * p )Prs_ManReadConstant468,20525
static inline int Prs_ManReadRange( Prs_Man_t * p )Prs_ManReadRange520,22025
static inline int Prs_ManReadConcat( Prs_Man_t * p, Vec_Int_t * vTemp2 )Prs_ManReadConcat546,23300
static inline int Prs_ManReadSignal( Prs_Man_t * p )Prs_ManReadSignal561,23927
int Prs_ManReadSignalList( Prs_Man_t * p, Vec_Int_t * vTemp, char LastSymb, int fAddForm )Prs_ManReadSignalList624,26734
static inline int Prs_ManReadSignalList2( Prs_Man_t * p, Vec_Int_t * vTemp )Prs_ManReadSignalList2640,27321
static inline int Prs_ManReadFunction( Prs_Man_t * p )Prs_ManReadFunction682,29104
static inline int Prs_ManReadAlways( Prs_Man_t * p )Prs_ManReadAlways703,30253
static inline int Prs_ManReadExpression( Prs_Man_t * p, int OutItem )Prs_ManReadExpression872,37951
static inline int Prs_ManReadDeclaration( Prs_Man_t * p, int Type )Prs_ManReadDeclaration1046,47265
static inline int Prs_ManReadInstance( Prs_Man_t * p, int Func )Prs_ManReadInstance1102,50070
static inline int Prs_ManReadArguments( Prs_Man_t * p )Prs_ManReadArguments1138,51754
static inline int Prs_ManReadModule( Prs_Man_t * p )Prs_ManReadModule1199,54735
static inline int Prs_ManReadDesign( Prs_Man_t * p )Prs_ManReadDesign1316,60160
void Prs_ManPrintModules( Prs_Man_t * p )Prs_ManPrintModules1347,60910
Vec_Ptr_t * Prs_ManReadVerilog( char * pFileName )Prs_ManReadVerilog1375,61754
void Prs_ManReadVerilogTest( char * pFileName )Prs_ManReadVerilogTest1394,62355
int Prs_CreateVerilogFindFon( Cba_Ntk_t * p, int NameId )Prs_CreateVerilogFindFon1419,63168
int Prs_CreateSlice( Cba_Ntk_t * p, int iFon, Prs_Ntk_t * pNtk, int Range )Prs_CreateSlice1427,63427
int Prs_CreateCatIn( Cba_Ntk_t * p, Prs_Ntk_t * pNtk, int Con )Prs_CreateCatIn1446,64099
int Prs_CreateSignalIn( Cba_Ntk_t * p, Prs_Ntk_t * pNtk, int Sig )Prs_CreateSignalIn1472,65089
int Prs_CreateRange( Cba_Ntk_t * p, int iFon, int NameId )Prs_CreateRange1491,65851
void Prs_CreateSignalOut( Cba_Ntk_t * p, int iFon, Prs_Ntk_t * pNtk, int Sig )Prs_CreateSignalOut1504,66292
void Prs_CreateOutConcat( Cba_Ntk_t * p, int * pSlices, int nSlices )Prs_CreateOutConcat1581,69242
int Prs_CreateBitSignal( Prs_Ntk_t * pNtk, int Sig )Prs_CreateBitSignal1645,71522
int Prs_CreateFlopSetReset( Cba_Ntk_t * p, Prs_Ntk_t * pNtk, Vec_Int_t * vBox, int * pIndexSet, int * pIndexRst, int * pBitSet, int * pBitRst )Prs_CreateFlopSetReset1686,72843
char * Prs_CreateDetectRamPort( Prs_Ntk_t * pNtk, Vec_Int_t * vBox, int NameRamId )Prs_CreateDetectRamPort1718,74121
int Prs_CreateGetMemSize( char * pName )Prs_CreateGetMemSize1726,74408
Vec_Ptr_t * Prs_CreateDetectRams( Prs_Ntk_t * pNtk )Prs_CreateDetectRams1735,74682
void Prs_CreateVerilogPio( Cba_Ntk_t * p, Prs_Ntk_t * pNtk )Prs_CreateVerilogPio1780,76382
int Prs_CreateVerilogNtk( Cba_Ntk_t * p, Prs_Ntk_t * pNtk )Prs_CreateVerilogNtk1814,77585
Cba_Man_t * Prs_ManBuildCbaVerilog( char * pFileName, Vec_Ptr_t * vDes )Prs_ManBuildCbaVerilog2123,92187
Cba_Man_t * Cba_ManReadVerilog( char * pFileName )Cba_ManReadVerilog2165,93607

src/base/cba/cbaCom.c,1417
static inline Cba_Man_t * Cba_AbcGetMan( Abc_Frame_t * pAbc )                   { return (Cba_Man_t *)pAbc->pAbcCba;                        }Cba_AbcGetMan41,1556
static inline void        Cba_AbcFreeMan( Abc_Frame_t * pAbc )                  { if ( pAbc->pAbcCba ) Cba_ManFree(Cba_AbcGetMan(pAbc));    }Cba_AbcFreeMan42,1698
static inline void        Cba_AbcUpdateMan( Abc_Frame_t * pAbc, Cba_Man_t * p ) { Cba_AbcFreeMan(pAbc); pAbc->pAbcCba = p;                  }Cba_AbcUpdateMan43,1840
void Cba_Init( Abc_Frame_t * pAbc )Cba_Init60,2436
void Cba_End( Abc_Frame_t * pAbc )Cba_End84,3484
int Cba_CommandRead( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandRead101,3786
int Cba_CommandWrite( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandWrite196,6765
int Cba_CommandPs( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandPs271,9056
int Cba_CommandPut( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandPut352,11610
int Cba_CommandGet( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandGet411,13347
int Cba_CommandClp( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandClp478,15205
int Cba_CommandBlast( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandBlast523,16409
int Cba_CommandCec( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandCec578,17963
int Cba_CommandTest( Abc_Frame_t * pAbc, int argc, char ** argv )Cba_CommandTest693,21557

src/base/cba/cbaPrs.h,11298
#define ABC__base__prs__prs_hABC__base__prs__prs_h22,546
    PRS_VER_NONE = 0,  // 0:  unusedPRS_VER_NONE40,1140
    PRS_VER_INPUT,     // 1:  inputPRS_VER_INPUT41,1177
    PRS_VER_OUTPUT,    // 2:  outputPRS_VER_OUTPUT42,1213
    PRS_VER_INOUT,     // 3:  inoutPRS_VER_INOUT43,1250
    PRS_VER_WIRE,      // 4:  wirePRS_VER_WIRE44,1286
    PRS_VER_REG,       // 5:  regPRS_VER_REG45,1321
    PRS_VER_MODULE,    // 6:  modulePRS_VER_MODULE46,1355
    PRS_VER_ASSIGN,    // 7:  assignPRS_VER_ASSIGN47,1392
    PRS_VER_ALWAYS,    // 8:  alwaysPRS_VER_ALWAYS48,1429
    PRS_VER_FUNCTION,  // 9:  functionPRS_VER_FUNCTION49,1466
    PRS_VER_DEFPARAM,  // 10: defparamPRS_VER_DEFPARAM50,1505
    PRS_VER_BEGIN,     // 11: beginPRS_VER_BEGIN51,1544
    PRS_VER_END,       // 12: endPRS_VER_END52,1580
    PRS_VER_CASE,      // 13: casePRS_VER_CASE53,1614
    PRS_VER_ENDCASE,   // 14: endcasePRS_VER_ENDCASE54,1649
    PRS_VER_SIGNED,    // 15: signedPRS_VER_SIGNED55,1687
    PRS_VER_ENDMODULE, // 16: endmodulePRS_VER_ENDMODULE56,1724
    PRS_VER_UNKNOWN    // 17: unknownPRS_VER_UNKNOWN57,1764
} Cba_VerType_t;Cba_VerType_t58,1802
    CBA_PRS_NAME = 0,  // 0:  name/variableCBA_PRS_NAME62,1857
    CBA_PRS_SLICE,     // 1:  sliceCBA_PRS_SLICE63,1901
    CBA_PRS_CONST,     // 2:  constantCBA_PRS_CONST64,1937
    CBA_PRS_CONCAT,    // 3:  concatentationCBA_PRS_CONCAT65,1976
} Prs_ManType_t; Prs_ManType_t66,2021
typedef struct Prs_Ntk_t_ Prs_Ntk_t;Prs_Ntk_t73,2271
struct Prs_Ntk_t_Prs_Ntk_t_74,2308
    int             iModuleName;iModuleName77,2348
    unsigned        fMapped : 1;fMapped78,2381
    unsigned        fSlices : 1;fSlices79,2414
    unsigned        fHasC0s : 1;fHasC0s80,2447
    unsigned        fHasC1s : 1;fHasC1s81,2480
    unsigned        fHasCXs : 1;fHasCXs82,2513
    unsigned        fHasCZs : 1;fHasCZs83,2546
    Abc_Nam_t *     pStrs;pStrs84,2579
    Abc_Nam_t *     pFuns;pFuns85,2606
    Hash_IntMan_t * vHash;vHash86,2633
    Vec_Int_t       vOrder;     // order of signalsvOrder88,2677
    Vec_Int_t       vInouts;    // inouts vInouts90,2749
    Vec_Int_t       vInputs;    // inputs vInputs91,2792
    Vec_Int_t       vOutputs;   // outputsvOutputs92,2835
    Vec_Int_t       vWires;     // wires  vWires93,2878
    Vec_Int_t       vInoutsR;   // inouts vInoutsR95,2942
    Vec_Int_t       vInputsR;   // inputs vInputsR96,2985
    Vec_Int_t       vOutputsR;  // outputsvOutputsR97,3028
    Vec_Int_t       vWiresR;    // wires  vWiresR98,3071
    Vec_Int_t       vSlices;    // NameId + RangeIdvSlices100,3151
    Vec_Int_t       vConcats;   // array of NameId/SliceId/ConstIdvConcats101,3203
    Vec_Int_t       vBoxes;     // ModuleId + InstId + array of pairs {FormNameId, ActSignalId(NameId/SliceId/ConstId/ConcatId)}vBoxes102,3270
    Vec_Int_t       vObjs;      // box handlesvObjs103,3399
typedef struct Prs_Man_t_ Prs_Man_t;Prs_Man_t107,3460
struct Prs_Man_t_Prs_Man_t_108,3497
    char *          pName;       // file namepName111,3535
    char *          pBuffer;     // file contentspBuffer112,3581
    char *          pLimit;      // end of filepLimit113,3631
    char *          pCur;        // current positionpCur114,3679
    Abc_Nam_t *     pStrs;       // string managerpStrs115,3732
    Abc_Nam_t *     pFuns;       // cover managerpFuns116,3783
    Hash_IntMan_t * vHash;       // variable rangesvHash117,3833
    Prs_Ntk_t *     pNtk;        // current networkpNtk118,3885
    Vec_Ptr_t *     vNtks;       // input networksvNtks119,3937
    Vec_Str_t       vCover;      // one SOP covervCover121,4010
    Vec_Int_t       vTemp;       // array of tokensvTemp122,4060
    Vec_Int_t       vTemp2;      // array of tokensvTemp2123,4112
    Vec_Int_t       vTemp3;      // array of tokensvTemp3124,4164
    Vec_Int_t       vTemp4;      // array of tokensvTemp4125,4216
    Vec_Int_t       vKnown;vKnown127,4286
    Vec_Int_t       vFailed;vFailed128,4314
    Vec_Int_t       vSucceeded;vSucceeded129,4343
    int             nOpens;      // open port counternOpens131,4397
    int             fUsingTemp2; // vTemp2 is in usefUsingTemp2132,4451
    int             FuncNameId;  // temp valueFuncNameId133,4504
    int             FuncRangeId; // temp valueFuncRangeId134,4551
    char ErrorStr[1000];         // errorErrorStr135,4598
static inline Prs_Ntk_t * Prs_ManNtk( Vec_Ptr_t * vPrs, int i )        { return i >= 0 && i < Vec_PtrSize(vPrs) ? (Prs_Ntk_t *)Vec_PtrEntry(vPrs, i) : NULL; }Prs_ManNtk138,4644
static inline Prs_Ntk_t * Prs_ManRoot( Vec_Ptr_t * vPrs )              { return Prs_ManNtk(vPrs, 0);                             }Prs_ManRoot139,4803
static inline Abc_Nam_t * Prs_ManNameMan( Vec_Ptr_t * vPrs )           { return Prs_ManRoot(vPrs)->pStrs;                        }Prs_ManNameMan140,4934
static inline Abc_Nam_t * Prs_ManFuncMan( Vec_Ptr_t * vPrs )           { return Prs_ManRoot(vPrs)->pFuns;                        }Prs_ManFuncMan141,5065
static inline int         Prs_NtkId( Prs_Ntk_t * p )                   { return p->iModuleName;                                  }Prs_NtkId143,5197
static inline int         Prs_NtkPioNum( Prs_Ntk_t * p )               { return Vec_IntSize(&p->vInouts);                        }Prs_NtkPioNum144,5328
static inline int         Prs_NtkPiNum( Prs_Ntk_t * p )                { return Vec_IntSize(&p->vInputs);                        }Prs_NtkPiNum145,5459
static inline int         Prs_NtkPoNum( Prs_Ntk_t * p )                { return Vec_IntSize(&p->vOutputs);                       }Prs_NtkPoNum146,5590
static inline int         Prs_NtkBoxNum( Prs_Ntk_t * p )               { return Vec_IntSize(&p->vObjs);                          }Prs_NtkBoxNum147,5721
static inline int         Prs_NtkObjNum( Prs_Ntk_t * p )               { return Prs_NtkPioNum(p) + Prs_NtkPiNum(p) + Prs_NtkPoNum(p) + Prs_NtkBoxNum(p); }Prs_NtkObjNum148,5852
static inline char *      Prs_NtkStr( Prs_Ntk_t * p, int h )           { return Abc_NamStr(p->pStrs, h);                         }Prs_NtkStr149,6007
static inline char *      Prs_NtkSop( Prs_Ntk_t * p, int h )           { return Abc_NamStr(p->pFuns, h);                         }Prs_NtkSop150,6138
static inline char *      Prs_NtkConst( Prs_Ntk_t * p, int h )         { return Abc_NamStr(p->pFuns, h);                         }Prs_NtkConst151,6269
static inline char *      Prs_NtkName( Prs_Ntk_t * p )                 { return Prs_NtkStr(p, Prs_NtkId(p));                     }Prs_NtkName152,6400
static inline int         Prs_NtkSigName( Prs_Ntk_t * p, int i )       { if (!p->fSlices) return i; assert(Abc_Lit2Att2(i) == CBA_PRS_NAME); return Abc_Lit2Var2(i); }Prs_NtkSigName153,6531
static inline int         Ptr_NtkRangeSize( Prs_Ntk_t * p, int h )     { int l = Hash_IntObjData0(p->vHash, h), r = Hash_IntObjData1(p->vHash, h); return 1 + (l > r ? l-r : r-l); }Ptr_NtkRangeSize154,6698
static inline int         Prs_SliceName( Prs_Ntk_t * p, int h )        { return Vec_IntEntry(&p->vSlices, h);                    }Prs_SliceName156,6880
static inline int         Prs_SliceRange( Prs_Ntk_t * p, int h )       { return Vec_IntEntry(&p->vSlices, h+1);                  }Prs_SliceRange157,7011
static inline int         Prs_CatSize( Prs_Ntk_t * p, int h )          { return Vec_IntEntry(&p->vConcats, h);                   }Prs_CatSize159,7143
static inline int *       Prs_CatArray( Prs_Ntk_t * p, int h )         { return Vec_IntEntryP(&p->vConcats, h+1);                }Prs_CatArray160,7274
static inline Vec_Int_t * Prs_CatSignals( Prs_Ntk_t * p, int h )       { static Vec_Int_t V; V.nSize = V.nCap = Prs_CatSize(p, h); V.pArray = Prs_CatArray(p, h); return &V; }Prs_CatSignals161,7405
static inline int         Prs_BoxHand( Prs_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vObjs, i);                      }Prs_BoxHand163,7581
static inline int         Prs_BoxSize( Prs_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vBoxes, Prs_BoxHand(p, i))-2;   }Prs_BoxSize164,7712
static inline int         Prs_BoxIONum( Prs_Ntk_t * p, int i )         { return Prs_BoxSize(p, i) / 2;                           }Prs_BoxIONum165,7843
static inline int         Prs_BoxNtk( Prs_Ntk_t * p, int i )           { return Vec_IntEntry(&p->vBoxes, Prs_BoxHand(p, i)+1);   }Prs_BoxNtk166,7974
static inline void        Prs_BoxSetNtk( Prs_Ntk_t * p, int i, int m ) { Vec_IntWriteEntry(&p->vBoxes, Prs_BoxHand(p, i)+1, m);  }Prs_BoxSetNtk167,8105
static inline int         Prs_BoxName( Prs_Ntk_t * p, int i )          { return Vec_IntEntry(&p->vBoxes, Prs_BoxHand(p, i)+2);   }Prs_BoxName168,8236
static inline int         Prs_BoxIsNode( Prs_Ntk_t * p, int i )        { return!Vec_IntEntry(&p->vBoxes, Prs_BoxHand(p, i)+3);   } // no formal namesPrs_BoxIsNode169,8367
static inline int *       Prs_BoxArray( Prs_Ntk_t * p, int i )         { return Vec_IntEntryP(&p->vBoxes, Prs_BoxHand(p, i)+3);  }Prs_BoxArray170,8517
static inline Vec_Int_t * Prs_BoxSignals( Prs_Ntk_t * p, int i )       { static Vec_Int_t V; V.nSize = V.nCap = Prs_BoxSize(p, i); V.pArray = Prs_BoxArray(p, i); return &V; }Prs_BoxSignals171,8648
#define Prs_ManForEachNameVec(Prs_ManForEachNameVec173,8824
#define Prs_NtkForEachPio(Prs_NtkForEachPio176,8986
#define Prs_NtkForEachPi(Prs_NtkForEachPi178,9131
#define Prs_NtkForEachPo(Prs_NtkForEachPo180,9275
#define Prs_NtkForEachBox(Prs_NtkForEachBox182,9420
static inline int Prs_ManErrorSet( Prs_Man_t * p, char * pError, int Value )Prs_ManErrorSet190,9800
static inline void Prs_ManErrorClear( Prs_Man_t * p )Prs_ManErrorClear197,9995
static inline int Prs_ManErrorPrint( Prs_Man_t * p )Prs_ManErrorPrint202,10103
static inline void Prs_ManInitializeNtk( Prs_Man_t * p, int iName, int fSlices )Prs_ManInitializeNtk213,10412
static inline void Prs_ManFinalizeNtk( Prs_Man_t * p )Prs_ManFinalizeNtk224,10813
static inline int Prs_ManNewStrId( Prs_Man_t * p, const char * format, ...  )Prs_ManNewStrId230,10924
static inline int Prs_NtkAddSlice( Prs_Ntk_t * p, int Name, int Range )Prs_NtkAddSlice249,11648
static inline int Prs_NtkAddConcat( Prs_Ntk_t * p, Vec_Int_t * vTemp )Prs_NtkAddConcat255,11832
static inline void Prs_NtkAddBox( Prs_Ntk_t * p, int ModName, int InstName, Vec_Int_t * vTemp )Prs_NtkAddBox266,12182
static inline char * Prs_ManLoadFile( char * pFileName, char ** ppLimit )Prs_ManLoadFile281,12712
static inline Prs_Man_t * Prs_ManAlloc( char * pFileName )Prs_ManAlloc307,13544
static inline void Prs_NtkFree( Prs_Ntk_t * p )Prs_NtkFree329,14136
static inline void Prs_ManVecFree( Vec_Ptr_t * vPrs )Prs_ManVecFree350,14780
static inline void Prs_ManFree( Prs_Man_t * p )Prs_ManFree358,14976
static inline int Prs_NtkMemory( Prs_Ntk_t * p )Prs_NtkMemory377,15543
static inline int Prs_ManMemory( Vec_Ptr_t * vPrs )Prs_ManMemory394,16154
static inline Cba_ObjType_t Ptr_SopToType( char * pSop )Ptr_SopToType416,16682
static inline char * Ptr_SopToTypeName( char * pSop )Ptr_SopToTypeName436,17702
static inline char * Ptr_TypeToName( Cba_ObjType_t Type )Ptr_TypeToName456,18741
static inline char * Ptr_TypeToSop( Cba_ObjType_t Type )Ptr_TypeToSop478,19658

src/base/cba/cbaBlast.c,4125
int Cba_NtkPrepareBits( Cba_Ntk_t * p )Cba_NtkPrepareBits48,1368
int * Cba_VecCopy( Vec_Int_t * vOut, int * pArray, int nSize )Cba_VecCopy59,1608
int Cba_ReadHexDigit( char HexChar )Cba_ReadHexDigit66,1814
void Cba_BlastConst( Cba_Ntk_t * p, Vec_Int_t * vOut, int iFon, int nTotal, int fSigned )Cba_BlastConst77,2184
int * Cba_VecLoadFanins( Cba_Ntk_t * p, Vec_Int_t * vOut, int iFon, int * pFanins, int nFanins, int nTotal, int fSigned )Cba_VecLoadFanins119,3596
int Cba_NtkMuxTree_rec( Gia_Man_t * pNew, int * pCtrl, int nCtrl, Vec_Int_t * vData, int Shift )Cba_NtkMuxTree_rec137,4265
void Cba_BlastShiftRight( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, int fSticky, Vec_Int_t * vRes )Cba_BlastShiftRight158,4949
void Cba_BlastShiftLeft( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, int fSticky, Vec_Int_t * vRes )Cba_BlastShiftLeft179,5697
void Cba_BlastRotateRight( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, Vec_Int_t * vRes )Cba_BlastRotateRight200,6430
void Cba_BlastRotateLeft( Gia_Man_t * pNew, int * pNum, int nNum, int * pShift, int nShift, Vec_Int_t * vRes )Cba_BlastRotateLeft210,6896
int Cba_BlastReduction( Gia_Man_t * pNew, int * pFans, int nFans, int Type )Cba_BlastReduction224,7571
int Cba_BlastLess2( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits )Cba_BlastLess2250,8243
void Cba_BlastLess_rec( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits, int * pYes, int * pNo )Cba_BlastLess_rec262,8669
int Cba_BlastLess( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits )Cba_BlastLess283,9543
int Cba_BlastLessSigned( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits )Cba_BlastLessSigned291,9758
void Cba_BlastFullAdder( Gia_Man_t * pNew, int a, int b, int c, int * pc, int * ps )Cba_BlastFullAdder296,10025
int Cba_BlastAdder( Gia_Man_t * pNew, int Carry, int * pAdd0, int * pAdd1, int nBits ) // result is in pAdd0Cba_BlastAdder318,10855
void Cba_BlastSubtract( Gia_Man_t * pNew, int * pAdd0, int * pAdd1, int nBits ) // result is in pAdd0Cba_BlastSubtract325,11113
void Cba_BlastMinus( Gia_Man_t * pNew, int * pNum, int nNum, Vec_Int_t * vRes )Cba_BlastMinus331,11369
void Cba_BlastMultiplier2( Gia_Man_t * pNew, int * pArg0, int * pArg1, int nBits, Vec_Int_t * vTemp, Vec_Int_t * vRes )Cba_BlastMultiplier2341,11713
void Cba_BlastFullAdderCtrl( Gia_Man_t * pNew, int a, int ac, int b, int c, int * pc, int * ps, int fNeg )Cba_BlastFullAdderCtrl354,12229
void Cba_BlastFullAdderSubtr( Gia_Man_t * pNew, int a, int b, int c, int * pc, int * ps, int fSub )Cba_BlastFullAdderSubtr359,12459
void Cba_BlastMultiplier( Gia_Man_t * pNew, int * pArgA, int * pArgB, int nArgA, int nArgB, Vec_Int_t * vTemp, Vec_Int_t * vRes, int fSigned )Cba_BlastMultiplier363,12640
void Cba_BlastDivider( Gia_Man_t * pNew, int * pNum, int nNum, int * pDiv, int nDiv, int fQuo, Vec_Int_t * vRes )Cba_BlastDivider385,13624
void Cba_BlastDivider2( Gia_Man_t * pNew, int * pNum, int nNum, int * pDiv, int nDiv, int fQuo, Vec_Int_t * vRes )Cba_BlastDivider2433,15422
void Cba_BlastDividerSigned( Gia_Man_t * pNew, int * pNum, int nNum, int * pDiv, int nDiv, int fQuo, Vec_Int_t * vRes )Cba_BlastDividerSigned463,16485
void Cba_BlastZeroCondition( Gia_Man_t * pNew, int * pDiv, int nDiv, Vec_Int_t * vRes )Cba_BlastZeroCondition498,18340
void Cba_BlastTable( Gia_Man_t * pNew, word * pTable, int * pFans, int nFans, int nOuts, Vec_Int_t * vRes )Cba_BlastTable504,18625
void Cba_BlastPower( Gia_Man_t * pNew, int * pNum, int nNum, int * pExp, int nExp, Vec_Int_t * vTemp, Vec_Int_t * vRes )Cba_BlastPower529,19722
void Cba_BlastSqrt( Gia_Man_t * pNew, int * pNum, int nNum, Vec_Int_t * vTmp, Vec_Int_t * vRes )Cba_BlastSqrt553,20685
Gia_Man_t * Cba_NtkBlast( Cba_Ntk_t * p, int fSeq )Cba_NtkBlast596,22060
Gia_Man_t * Cba_ManBlast( Cba_Man_t * p, int fBarBufs, int fSeq, int fVerbose )Cba_ManBlast1037,43010
Cba_Man_t * Cba_ManInsertGia( Cba_Man_t * p, Gia_Man_t * pGia )Cba_ManInsertGia1053,43378
Cba_Man_t * Cba_ManInsertAbc( Cba_Man_t * p, void * pAbc )Cba_ManInsertAbc1057,43463

src/base/cba/cba.c,0

src/base/cba/cba.h,40943
#define ABC__base__cba__cba_hABC__base__cba__cba_h22,538
typedef struct Cba_Ntk_t_ Cba_Ntk_t;Cba_Ntk_t45,1398
typedef struct Cba_Man_t_ Cba_Man_t;Cba_Man_t46,1435
struct Cba_Ntk_t_Cba_Ntk_t_49,1484
    Cba_Man_t *     pDesign;  // designpDesign51,1504
    int             Id;       // network IDId52,1544
    int             NameId;   // name ID NameId53,1588
    int             iCopy;    // copy moduleiCopy54,1630
    unsigned        Mark : 1; // visit mark Mark55,1675
    unsigned        fComb: 1; // the network is combinationalfComb56,1720
    unsigned        fSeq : 1; // the network is sequentialfSeq57,1782
    Vec_Int_t       vInputs;  // inputs vInputs59,1858
    Vec_Int_t       vOutputs; // outputsvOutputs60,1899
    Vec_Int_t       vOrder;   // ordervOrder61,1940
    Vec_Int_t       vSeq;     // sequential objectsvSeq62,1979
    Vec_Str_t       vObjType; // type     vObjType64,2047
    Vec_Int_t       vObjFin0; // faninsvObjFin065,2090
    Vec_Int_t       vObjFon0; // outputsvObjFon066,2130
    Vec_Int_t       vFinFon;  // fonsvFinFon67,2171
    Vec_Int_t       vFonObj;  // objectvFonObj68,2209
    Vec_Int_t       vObjCopy; // copyvObjCopy70,2265
    Vec_Int_t       vObjFunc; // functionvObjFunc71,2303
    Vec_Int_t       vObjName; // namevObjName72,2345
    Vec_Int_t       vObjAttr; // attribute offsetvObjAttr73,2383
    Vec_Int_t       vAttrSto; // attribute storagevAttrSto74,2433
    Vec_Int_t       vFonCopy; // copyvFonCopy75,2484
    Vec_Int_t       vFonName; // namevFonName76,2522
    Vec_Int_t       vFonRange;// rangevFonRange77,2560
    Vec_Int_t       vFonPrev; // fanout: prev fonvFonPrev78,2599
    Vec_Int_t       vFonNext; // fanout: next fonvFonNext79,2649
    Vec_Int_t       vFinFon0; // fanout: first fonvFinFon080,2699
    Vec_Int_t       vFinObj;  // objectvFinObj81,2750
    Vec_Int_t       vNtkObjs; // instancesvNtkObjs82,2790
    Vec_Int_t       vFonBits; // fon mapping into AIG nodesvFonBits83,2833
    Vec_Ptr_t *     vOther;   // various datavOther85,2906
    Vec_Int_t       vArray0;vArray086,2952
    Vec_Int_t       vArray1;vArray187,2981
struct Cba_Man_t_Cba_Man_t_91,3024
    char *          pName;    // design namepName94,3064
    char *          pSpec;    // spec file namepSpec95,3109
    Abc_Nam_t *     pStrs;    // string managerpStrs96,3157
    Abc_Nam_t *     pFuns;    // constant managerpFuns97,3205
    Abc_Nam_t *     pMods;    // module name managerpMods98,3255
    Hash_IntMan_t * vHash; // variable rangesvHash99,3308
    Vec_Int_t       vNameMap; // mapping namesvNameMap100,3354
    Vec_Int_t       vNameMap2;// mapping namesvNameMap2101,3401
    Vec_Int_t       vUsed;    // used map entriesvUsed102,3448
    Vec_Int_t       vUsed2;   // used map entriesvUsed2103,3498
    char *          pTypeNames[CBA_BOX_LAST];pTypeNames104,3548
    int             nObjs[CBA_BOX_LAST]; // counter of objects of each typenObjs105,3594
    int             nAnds[CBA_BOX_LAST]; // counter of AND gates after blastingnAnds106,3670
    int             iRoot;    // root networkiRoot108,3771
    Vec_Ptr_t       vNtks;    // networksvNtks109,3817
    int             nOpens;nOpens111,3876
    Vec_Str_t       vOut;     vOut112,3904
    Vec_Str_t       vOut2;     vOut2113,3935
    void *          pMioLib;pMioLib114,3967
static inline char *         Cba_ManName( Cba_Man_t * p )                    { return p->pName;                                                                            }Cba_ManName121,4220
static inline char *         Cba_ManSpec( Cba_Man_t * p )                    { return p->pSpec;                                                                            }Cba_ManSpec122,4393
static inline int            Cba_ManNtkNum( Cba_Man_t * p )                  { return Vec_PtrSize(&p->vNtks)-1;                                                            }Cba_ManNtkNum123,4566
static inline int            Cba_ManNtkIsOk( Cba_Man_t * p, int i )          { return i > 0 && i <= Cba_ManNtkNum(p);                                                      }Cba_ManNtkIsOk124,4739
static inline Cba_Ntk_t *    Cba_ManNtk( Cba_Man_t * p, int i )              { return Cba_ManNtkIsOk(p, i) ? (Cba_Ntk_t *)Vec_PtrEntry(&p->vNtks, i) : NULL;               }Cba_ManNtk125,4912
static inline int            Cba_ManNtkFindId( Cba_Man_t * p, char * pName ) { return Abc_NamStrFind(p->pMods, pName);                                                     }Cba_ManNtkFindId126,5085
static inline Cba_Ntk_t *    Cba_ManNtkFind( Cba_Man_t * p, char * pName )   { return Cba_ManNtk( p, Cba_ManNtkFindId(p, pName) );                                         }Cba_ManNtkFind127,5258
static inline Cba_Ntk_t *    Cba_ManRoot( Cba_Man_t * p )                    { return Cba_ManNtk(p, p->iRoot);                                                             }Cba_ManRoot128,5431
static inline char *         Cba_ManStr( Cba_Man_t * p, int i )              { return Abc_NamStr(p->pStrs, i);                                                             }Cba_ManStr129,5604
static inline int            Cba_ManStrId( Cba_Man_t * p, char * pStr )      { return Abc_NamStrFind(p->pStrs, pStr);                                                      }Cba_ManStrId130,5777
static inline int            Cba_ManNameIdMax( Cba_Man_t * p )               { return Abc_NamObjNumMax(p->pStrs) + 1;                                                      }Cba_ManNameIdMax131,5950
static inline char *         Cba_ManConst( Cba_Man_t * p, int i )            { return Abc_NamStr(p->pFuns, i);                                                             }Cba_ManConst132,6123
static inline int            Cba_ManConstId( Cba_Man_t * p, char * pStr )    { return Abc_NamStrFind(p->pFuns, pStr);                                                      }Cba_ManConstId133,6296
static inline int            Cba_ManConstIdMax( Cba_Man_t * p )              { return Abc_NamObjNumMax(p->pFuns) + 1;                                                      }Cba_ManConstIdMax134,6469
static inline Cba_Man_t *    Cba_NtkMan( Cba_Ntk_t * p )                     { return p->pDesign;                                                                          }Cba_NtkMan136,6643
static inline Cba_Ntk_t *    Cba_NtkNtk( Cba_Ntk_t * p, int i )              { return Cba_ManNtk(p->pDesign, i);                                                           }Cba_NtkNtk137,6816
static inline int            Cba_NtkId( Cba_Ntk_t * p )                      { return p->Id;                                                                               }Cba_NtkId138,6989
static inline int            Cba_NtkPi( Cba_Ntk_t * p, int i )               { return Vec_IntEntry(&p->vInputs, i);                                                        }Cba_NtkPi139,7162
static inline int            Cba_NtkPo( Cba_Ntk_t * p, int i )               { return Vec_IntEntry(&p->vOutputs, i);                                                       }Cba_NtkPo140,7335
static inline int            Cba_NtkPioOrder( Cba_Ntk_t * p, int i )         { return Vec_IntEntry(&p->vOrder, i);                                                         }Cba_NtkPioOrder141,7508
static inline int            Cba_NtkBoxSeq( Cba_Ntk_t * p, int i )           { return Vec_IntEntry(&p->vSeq, i);                                                           }Cba_NtkBoxSeq142,7681
static inline Abc_Nam_t *    Cba_NtkNam( Cba_Ntk_t * p )                     { return p->pDesign->pStrs;                                                                   }Cba_NtkNam143,7854
static inline char *         Cba_NtkStr( Cba_Ntk_t * p, int i )              { return Cba_ManStr(p->pDesign, i);                                                           }Cba_NtkStr144,8027
static inline int            Cba_NtkStrId( Cba_Ntk_t * p, char * pName )     { return Cba_ManStrId(p->pDesign, pName);                                                     }Cba_NtkStrId145,8200
static inline char *         Cba_NtkConst( Cba_Ntk_t * p, int i )            { return Cba_ManConst(p->pDesign, i);                                                         }Cba_NtkConst146,8373
static inline char *         Cba_NtkSop( Cba_Ntk_t * p, int i )              { return Cba_ManConst(p->pDesign, i);                                                         }Cba_NtkSop147,8546
static inline int            Cba_NtkNameId( Cba_Ntk_t * p )                  { return p->NameId;                                                                           }Cba_NtkNameId148,8719
static inline char *         Cba_NtkName( Cba_Ntk_t * p )                    { return Cba_NtkStr(p, p->NameId);                                                            }Cba_NtkName149,8892
static inline char *         Cba_NtkTypeName( Cba_Ntk_t * p, int Type )      { return p->pDesign->pTypeNames[Type];                                                        }Cba_NtkTypeName150,9065
static inline int            Cba_NtkCopy( Cba_Ntk_t * p )                    { return p->iCopy;                                                                            }Cba_NtkCopy151,9238
static inline Cba_Ntk_t *    Cba_NtkCopyNtk(Cba_Man_t * pNew, Cba_Ntk_t * p) { return Cba_ManNtk(pNew, Cba_NtkCopy(p));                                                    }Cba_NtkCopyNtk152,9411
static inline void           Cba_NtkSetCopy( Cba_Ntk_t * p, int i )          { assert(p->iCopy == 0); p->iCopy = i;                                                        }Cba_NtkSetCopy153,9584
static inline int            Cba_NtkHashRange( Cba_Ntk_t * p, int l, int r ) { return Hash_Int2ManInsert( p->pDesign->vHash, l, r, 0 );                                    }Cba_NtkHashRange154,9757
static inline int            Cba_NtkRangeLeft( Cba_Ntk_t * p, int h )        { return h ? Hash_IntObjData0( p->pDesign->vHash, h ) : 0;                                    }Cba_NtkRangeLeft155,9930
static inline int            Cba_NtkRangeRight( Cba_Ntk_t * p, int h )       { return h ? Hash_IntObjData1( p->pDesign->vHash, h ) : 0;                                    }Cba_NtkRangeRight156,10103
static inline int            Cba_NtkRangeSize( Cba_Ntk_t * p, int h )        { int l = Cba_NtkRangeLeft(p, h), r = Cba_NtkRangeRight(p, h); return 1 + (l > r ? l-r : r-l);}Cba_NtkRangeSize157,10276
static inline int            Cba_NtkPiNum( Cba_Ntk_t * p )                   { return Vec_IntSize(&p->vInputs);                                                            }Cba_NtkPiNum159,10450
static inline int            Cba_NtkPoNum( Cba_Ntk_t * p )                   { return Vec_IntSize(&p->vOutputs);                                                           }Cba_NtkPoNum160,10623
static inline int            Cba_NtkPioNum( Cba_Ntk_t * p )                  { return Cba_NtkPiNum(p) + Cba_NtkPoNum(p);                                                   }Cba_NtkPioNum161,10796
static inline int            Cba_NtkPiNumAlloc( Cba_Ntk_t * p )              { return Vec_IntCap(&p->vInputs);                                                             }Cba_NtkPiNumAlloc162,10969
static inline int            Cba_NtkPoNumAlloc( Cba_Ntk_t * p )              { return Vec_IntCap(&p->vOutputs);                                                            }Cba_NtkPoNumAlloc163,11142
static inline int            Cba_NtkPioOrderNum( Cba_Ntk_t * p )             { return Vec_IntSize(&p->vOrder);                                                             }Cba_NtkPioOrderNum164,11315
static inline int            Cba_NtkObjNum( Cba_Ntk_t * p )                  { return Vec_StrSize(&p->vObjType)-1;                                                         }Cba_NtkObjNum165,11488
static inline int            Cba_NtkObjNumAlloc( Cba_Ntk_t * p )             { return Vec_StrCap(&p->vObjType)-1;                                                          }Cba_NtkObjNumAlloc166,11661
static inline int            Cba_NtkFinNum( Cba_Ntk_t * p )                  { return Vec_IntSize(&p->vFinFon)-1;                                                          }Cba_NtkFinNum167,11834
static inline int            Cba_NtkFinNumAlloc( Cba_Ntk_t * p )             { return Vec_IntCap(&p->vFinFon)-1;                                                           }Cba_NtkFinNumAlloc168,12007
static inline int            Cba_NtkFonNum( Cba_Ntk_t * p )                  { return Vec_IntSize(&p->vFonObj)-1;                                                          }Cba_NtkFonNum169,12180
static inline int            Cba_NtkFonNumAlloc( Cba_Ntk_t * p )             { return Vec_IntCap(&p->vFonObj)-1;                                                           }Cba_NtkFonNumAlloc170,12353
static inline int            Cba_NtkTypeNum( Cba_Ntk_t * p, int Type )       { return Vec_StrCountEntry(&p->vObjType, (char)Type);                                         }Cba_NtkTypeNum171,12526
static inline int            Cba_NtkBoxNum( Cba_Ntk_t * p )                  { return Cba_NtkObjNum(p) - Cba_NtkPioNum(p);                                                 }Cba_NtkBoxNum172,12699
static inline int            Cba_NtkBoxUserNum( Cba_Ntk_t * p )              { return Cba_NtkTypeNum(p, CBA_OBJ_BOX);                                                      }Cba_NtkBoxUserNum173,12872
static inline int            Cba_NtkBoxPrimNum( Cba_Ntk_t * p )              { return Vec_StrCountLarger(&p->vObjType, (char)CBA_OBJ_BOX);                                 }Cba_NtkBoxPrimNum174,13045
static inline int            Cba_NtkBoxSeqNum( Cba_Ntk_t * p )               { return Vec_IntSize(&p->vSeq);                                                               }Cba_NtkBoxSeqNum175,13218
static inline void           Cba_NtkCleanObjCopies( Cba_Ntk_t * p )          { Vec_IntFill(&p->vObjCopy,  Vec_StrCap(&p->vObjType), -1);        }Cba_NtkCleanObjCopies177,13392
static inline void           Cba_NtkCleanObjFuncs( Cba_Ntk_t * p )           { Vec_IntFill(&p->vObjFunc,  Vec_StrCap(&p->vObjType),  0);        }Cba_NtkCleanObjFuncs178,13538
static inline void           Cba_NtkCleanObjNames( Cba_Ntk_t * p )           { Vec_IntFill(&p->vObjName,  Vec_StrCap(&p->vObjType),  0);        }Cba_NtkCleanObjNames179,13684
static inline void           Cba_NtkCleanObjAttrs( Cba_Ntk_t * p )           { Vec_IntFill(&p->vObjAttr,  Vec_StrCap(&p->vObjType),  0); Vec_IntFill(&p->vAttrSto, 1, -1); }Cba_NtkCleanObjAttrs180,13830
static inline void           Cba_NtkCleanFonCopies( Cba_Ntk_t * p )          { Vec_IntFill(&p->vFonCopy,  Vec_IntCap(&p->vFonObj),   0);        }Cba_NtkCleanFonCopies181,14003
static inline void           Cba_NtkCleanFonNames( Cba_Ntk_t * p )           { Vec_IntFill(&p->vFonName,  Vec_IntCap(&p->vFonObj),   0);        }Cba_NtkCleanFonNames182,14149
static inline void           Cba_NtkCleanFonRanges( Cba_Ntk_t * p )          { Vec_IntFill(&p->vFonRange, Vec_IntCap(&p->vFonObj),   0);        }Cba_NtkCleanFonRanges183,14295
static inline void           Cba_NtkCleanFonPrevs( Cba_Ntk_t * p )           { Vec_IntFill(&p->vFonPrev,  Vec_IntCap(&p->vFonObj),   0);        }Cba_NtkCleanFonPrevs184,14441
static inline void           Cba_NtkCleanFonNexts( Cba_Ntk_t * p )           { Vec_IntFill(&p->vFonNext,  Vec_IntCap(&p->vFonObj),   0);        }Cba_NtkCleanFonNexts185,14587
static inline void           Cba_NtkCleanFinFon0( Cba_Ntk_t * p )            { Vec_IntFill(&p->vFinFon0,  Vec_IntCap(&p->vFinFon),   0);        }Cba_NtkCleanFinFon0186,14733
static inline void           Cba_NtkCleanFinObjs( Cba_Ntk_t * p )            { Vec_IntFill(&p->vFinObj,   Vec_IntCap(&p->vFinFon),   0);        }Cba_NtkCleanFinObjs187,14879
static inline int            Cba_NtkHasObjCopies( Cba_Ntk_t * p )            { return Vec_IntSize(&p->vObjCopy)  > 0; }Cba_NtkHasObjCopies189,15026
static inline int            Cba_NtkHasObjFuncs( Cba_Ntk_t * p )             { return Vec_IntSize(&p->vObjFunc)  > 0; }Cba_NtkHasObjFuncs190,15146
static inline int            Cba_NtkHasObjNames( Cba_Ntk_t * p )             { return Vec_IntSize(&p->vObjName)  > 0; }Cba_NtkHasObjNames191,15266
static inline int            Cba_NtkHasObjAttrs( Cba_Ntk_t * p )             { return Vec_IntSize(&p->vObjAttr)  > 0; }Cba_NtkHasObjAttrs192,15386
static inline int            Cba_NtkHasFonCopies( Cba_Ntk_t * p )            { return Vec_IntSize(&p->vFonCopy)  > 0; }Cba_NtkHasFonCopies193,15506
static inline int            Cba_NtkHasFonNames( Cba_Ntk_t * p )             { return Vec_IntSize(&p->vFonName)  > 0; }Cba_NtkHasFonNames194,15626
static inline int            Cba_NtkHasFonRanges( Cba_Ntk_t * p )            { return Vec_IntSize(&p->vFonRange) > 0; }Cba_NtkHasFonRanges195,15746
static inline int            Cba_NtkHasFonPrevs( Cba_Ntk_t * p )             { return Vec_IntSize(&p->vFonPrev)  > 0; }Cba_NtkHasFonPrevs196,15866
static inline int            Cba_NtkHasFonNexts( Cba_Ntk_t * p )             { return Vec_IntSize(&p->vFonNext)  > 0; }Cba_NtkHasFonNexts197,15986
static inline int            Cba_NtkHasFinFon0( Cba_Ntk_t * p )              { return Vec_IntSize(&p->vFinFon0)  > 0; }Cba_NtkHasFinFon0198,16106
static inline int            Cba_NtkHasFinObjs( Cba_Ntk_t * p )              { return Vec_IntSize(&p->vFinObj)   > 0; }Cba_NtkHasFinObjs199,16226
static inline void           Cba_NtkFreeObjCopies( Cba_Ntk_t * p )           { Vec_IntErase(&p->vObjCopy);   }Cba_NtkFreeObjCopies201,16347
static inline void           Cba_NtkFreeObjFuncs( Cba_Ntk_t * p )            { Vec_IntErase(&p->vObjFunc);   }Cba_NtkFreeObjFuncs202,16458
static inline void           Cba_NtkFreeObjNames( Cba_Ntk_t * p )            { Vec_IntErase(&p->vObjName);   }Cba_NtkFreeObjNames203,16569
static inline void           Cba_NtkFreeObjAttrs( Cba_Ntk_t * p )            { Vec_IntErase(&p->vObjAttr);   }Cba_NtkFreeObjAttrs204,16680
static inline void           Cba_NtkFreeFonCopies( Cba_Ntk_t * p )           { Vec_IntErase(&p->vFonCopy);   }Cba_NtkFreeFonCopies205,16791
static inline void           Cba_NtkFreeFonNames( Cba_Ntk_t * p )            { Vec_IntErase(&p->vFonName);   }Cba_NtkFreeFonNames206,16902
static inline void           Cba_NtkFreeFonRanges( Cba_Ntk_t * p )           { Vec_IntErase(&p->vFonRange);  }Cba_NtkFreeFonRanges207,17013
static inline void           Cba_NtkFreeFonPrevs( Cba_Ntk_t * p )            { Vec_IntErase(&p->vFonPrev);   }Cba_NtkFreeFonPrevs208,17124
static inline void           Cba_NtkFreeFonNexts( Cba_Ntk_t * p )            { Vec_IntErase(&p->vFonNext);   }Cba_NtkFreeFonNexts209,17235
static inline void           Cba_NtkFreeFinFon0( Cba_Ntk_t * p )             { Vec_IntErase(&p->vFinFon0);   }Cba_NtkFreeFinFon0210,17346
static inline void           Cba_NtkFreeFinObjs( Cba_Ntk_t * p )             { Vec_IntErase(&p->vFinObj);    }Cba_NtkFreeFinObjs211,17457
static inline Cba_ObjType_t  Cba_ObjType( Cba_Ntk_t * p, int i )             { assert(i>0); return (Cba_ObjType_t)(int)(unsigned char)Vec_StrEntry(&p->vObjType, i);       }Cba_ObjType213,17569
static inline void           Cba_ObjCleanType( Cba_Ntk_t * p, int i )        { assert(i>0); Vec_StrWriteEntry( &p->vObjType, i, (char)CBA_OBJ_NONE );                      }Cba_ObjCleanType214,17742
static inline int            Cba_TypeIsBox( Cba_ObjType_t Type )             { return Type >= CBA_OBJ_BOX && Type < CBA_BOX_LAST;                                          }Cba_TypeIsBox215,17915
static inline int            Cba_TypeIsSeq( Cba_ObjType_t Type )             { return Type >= CBA_BOX_RAM && Type <= CBA_BOX_DFFRS;                                        }Cba_TypeIsSeq216,18088
static inline int            Cba_TypeIsUnary( Cba_ObjType_t Type )           { return Type == CBA_BOX_BUF || Type == CBA_BOX_INV || Type == CBA_BOX_LNOT || Type == CBA_BOX_MIN || Type == CBA_BOX_SQRT || Type == CBA_BOX_ABS || (Type >= CBA_BOX_RAND && Type <= CBA_BOX_RXNOR);  }Cba_TypeIsUnary217,18261
static inline int            Cba_TypeIsMux( Cba_ObjType_t Type )             { return Type == CBA_BOX_MUX || Type == CBA_BOX_NMUX || Type == CBA_BOX_SEL || Type == CBA_BOX_PSEL;  }Cba_TypeIsMux218,18539
static inline int            Cba_ObjIsPi( Cba_Ntk_t * p, int i )             { return Cba_ObjType(p, i) == CBA_OBJ_PI;                                                     }Cba_ObjIsPi220,18721
static inline int            Cba_ObjIsPo( Cba_Ntk_t * p, int i )             { return Cba_ObjType(p, i) == CBA_OBJ_PO;                                                     }Cba_ObjIsPo221,18894
static inline int            Cba_ObjIsPio( Cba_Ntk_t * p, int i )            { return Cba_ObjIsPi(p, i) || Cba_ObjIsPo(p, i);                                              }Cba_ObjIsPio222,19067
static inline int            Cba_ObjIsBox( Cba_Ntk_t * p, int i )            { return Cba_TypeIsBox(Cba_ObjType(p, i));                                                    }Cba_ObjIsBox223,19240
static inline int            Cba_ObjIsBoxUser( Cba_Ntk_t * p, int i )        { return Cba_ObjType(p, i) == CBA_OBJ_BOX;                                                    }Cba_ObjIsBoxUser224,19413
static inline int            Cba_ObjIsBoxPrim( Cba_Ntk_t * p, int i )        { return Cba_ObjType(p, i) >  CBA_OBJ_BOX && Cba_ObjType(p, i) < CBA_BOX_LAST;                }Cba_ObjIsBoxPrim225,19586
static inline int            Cba_ObjIsGate( Cba_Ntk_t * p, int i )           { return Cba_ObjType(p, i) == CBA_BOX_GATE;                                                   }Cba_ObjIsGate226,19759
static inline int            Cba_ObjIsSlice( Cba_Ntk_t * p, int i )          { return Cba_ObjType(p, i) == CBA_BOX_SLICE;                                                  }Cba_ObjIsSlice227,19932
static inline int            Cba_ObjIsConcat( Cba_Ntk_t * p, int i )         { return Cba_ObjType(p, i) == CBA_BOX_CONCAT;                                                 }Cba_ObjIsConcat228,20105
static inline int            Cba_ObjIsUnary( Cba_Ntk_t * p, int i )          { return Cba_TypeIsUnary(Cba_ObjType(p, i));                                                  }Cba_ObjIsUnary229,20278
static inline int            Cba_ObjFin0( Cba_Ntk_t * p, int i )             { assert(i>0); return Vec_IntEntry(&p->vObjFin0, i);                                          }Cba_ObjFin0231,20452
static inline int            Cba_ObjFon0( Cba_Ntk_t * p, int i )             { assert(i>0); return Vec_IntEntry(&p->vObjFon0, i);                                          }Cba_ObjFon0232,20625
static inline int            Cba_ObjFin( Cba_Ntk_t * p, int i, int k )       { assert(i>0); return Cba_ObjFin0(p, i) + k;                                                  }Cba_ObjFin233,20798
static inline int            Cba_ObjFon( Cba_Ntk_t * p, int i, int k )       { assert(i>0); return Cba_ObjFon0(p, i) + k;                                                  }Cba_ObjFon234,20971
static inline int            Cba_ObjFinNum( Cba_Ntk_t * p, int i )           { assert(i>0); return Cba_ObjFin0(p, i+1) - Cba_ObjFin0(p, i);                                }Cba_ObjFinNum235,21144
static inline int            Cba_ObjFonNum( Cba_Ntk_t * p, int i )           { assert(i>0); return Cba_ObjFon0(p, i+1) - Cba_ObjFon0(p, i);                                }Cba_ObjFonNum236,21317
static inline int            Cba_ObjCopy( Cba_Ntk_t * p, int i )             { assert(i>0); assert( Cba_NtkHasObjCopies(p) ); return Vec_IntGetEntryFull(&p->vObjCopy, i); }Cba_ObjCopy238,21491
static inline int            Cba_ObjFunc( Cba_Ntk_t * p, int i )             { assert(i>0); assert( Cba_NtkHasObjFuncs(p) );  return Vec_IntGetEntry(&p->vObjFunc, i);     }Cba_ObjFunc239,21664
static inline int            Cba_ObjName( Cba_Ntk_t * p, int i )             { assert(i>0); assert( Cba_NtkHasObjNames(p) );  return Vec_IntGetEntry(&p->vObjName, i);     }Cba_ObjName240,21837
static inline char *         Cba_ObjNameStr( Cba_Ntk_t * p, int i )          { assert(i>0); return Cba_NtkStr(p, Cba_ObjName(p, i));                                       }Cba_ObjNameStr241,22010
static inline int            Cba_ObjAttr( Cba_Ntk_t * p, int i )             { assert(i>=0); return Cba_NtkHasObjAttrs(p) ? Vec_IntGetEntry(&p->vObjAttr, i) : 0;          }Cba_ObjAttr242,22183
static inline int            Cba_ObjAttrSize( Cba_Ntk_t * p, int i )         { assert(i>=0); return Cba_ObjAttr(p, i) ? Vec_IntEntry(&p->vAttrSto, Cba_ObjAttr(p, i)) : 0; }Cba_ObjAttrSize243,22356
static inline int *          Cba_ObjAttrArray( Cba_Ntk_t * p, int i )        { assert(i>=0); return Cba_ObjAttr(p, i) ? Vec_IntEntryP(&p->vAttrSto, Cba_ObjAttr(p, i)+1) : NULL; }Cba_ObjAttrArray244,22529
static inline int            Cba_ObjAttrValue( Cba_Ntk_t * p, int i, int x ) { int k, s = Cba_ObjAttrSize(p, i), * a = Cba_ObjAttrArray(p, i); for ( k = 0; k < s; k += 2)  if (a[k] == x) return a[k+1]; return 0; }Cba_ObjAttrValue245,22708
static inline void           Cba_ObjSetCopy( Cba_Ntk_t * p, int i, int x )   { assert(Cba_ObjCopy(p, i) == -1); Vec_IntSetEntry( &p->vObjCopy, i, x );                     }Cba_ObjSetCopy247,22923
static inline void           Cba_ObjSetFunc( Cba_Ntk_t * p, int i, int x )   { assert(Cba_ObjFunc(p, i) ==  0); Vec_IntSetEntry( &p->vObjFunc, i, x );                     }Cba_ObjSetFunc248,23096
static inline void           Cba_ObjSetName( Cba_Ntk_t * p, int i, int x )   { assert(Cba_ObjName(p, i) ==  0); Vec_IntSetEntry( &p->vObjName, i, x );                     }Cba_ObjSetName249,23269
static inline void           Cba_ObjSetAttrs( Cba_Ntk_t * p, int i, int * a, int s )  { assert(Cba_ObjAttr(p, i) == 0); if ( !a ) return; Vec_IntSetEntry(&p->vObjAttr, i, Vec_IntSize(&p->vAttrSto)); Vec_IntPush(&p->vAttrSto, s); Vec_IntPushArray(&p->vAttrSto, a, s);  }Cba_ObjSetAttrs250,23442
static inline int            Cba_FinFon( Cba_Ntk_t * p, int f )              { assert(f>0); return Vec_IntEntry(&p->vFinFon, f);                                           }Cba_FinFon252,23713
static inline void           Cba_PatchFinFon( Cba_Ntk_t * p, int f, int x )  { assert(f>0); Vec_IntWriteEntry(&p->vFinFon, f, x);                                          }Cba_PatchFinFon253,23886
static inline int            Cba_ObjFinFon( Cba_Ntk_t * p, int i, int k )    { assert(i>0); return Cba_FinFon(p, Cba_ObjFin(p, i, k));                                     }Cba_ObjFinFon254,24059
static inline int *          Cba_ObjFinFons( Cba_Ntk_t * p, int i )          { assert(i>0); return Vec_IntEntryP(&p->vFinFon, Cba_ObjFin0(p, i));                          }Cba_ObjFinFons255,24232
static inline void           Cba_ObjSetFinFon( Cba_Ntk_t * p, int i, int k, int x ) { assert(i>0); assert(Cba_ObjFinFon(p, i, k)== 0); Vec_IntWriteEntry(&p->vFinFon, Cba_ObjFin(p, i, k), x); }Cba_ObjSetFinFon257,24406
static inline void           Cba_ObjCleanFinFon( Cba_Ntk_t * p, int i, int k)       { assert(i>0); assert(Cba_ObjFinFon(p, i, k)!= 0); Vec_IntWriteEntry(&p->vFinFon, Cba_ObjFin(p, i, k), 0); }Cba_ObjCleanFinFon258,24599
static inline void           Cba_ObjPatchFinFon( Cba_Ntk_t * p, int i, int k, int x){ assert(i>0); Cba_ObjCleanFinFon(p, i, k); Cba_ObjSetFinFon(p, i, k, x);                                  }Cba_ObjPatchFinFon259,24792
static inline int            Cba_ObjNtkId( Cba_Ntk_t * p, int i )            { assert(i>0); return (Cba_ObjIsBoxUser(p, i) && Cba_NtkHasObjFuncs(p)) ? Cba_ObjFunc(p, i) : 0;}Cba_ObjNtkId261,24986
static inline Cba_Ntk_t *    Cba_ObjNtk( Cba_Ntk_t * p, int i )              { assert(i>0); return Cba_NtkNtk(p, Cba_ObjNtkId(p, i));                                      }Cba_ObjNtk262,25161
static inline void           Cba_ObjSetNtkId( Cba_Ntk_t * p, int i, int x )  { assert(i>0); assert(Cba_ObjIsBoxUser(p, i)); Cba_ObjSetFunc( p, i, x );                     }Cba_ObjSetNtkId263,25334
static inline int            Cba_ObjIsSeq( Cba_Ntk_t * p, int i )            { assert(i>0); return Cba_ObjIsBoxUser(p, i) ? Cba_ObjNtk(p, i)->fSeq : Cba_TypeIsSeq(Cba_ObjType(p, i));  }Cba_ObjIsSeq264,25507
static inline int            Cba_FonIsReal( int f )                          { return f > 0;                             }Cba_FonIsReal266,25694
static inline int            Cba_FonIsConst( int f )                         { return f < 0;                             }Cba_FonIsConst267,25817
static inline int            Cba_FonConst( int f )                           { assert(Cba_FonIsConst(f)); return -f-1;   }Cba_FonConst268,25940
static inline int            Cba_FonFromConst( int c )                       { assert(c >= 0); return -c-1;              }Cba_FonFromConst269,26063
static inline int            Cba_FonConstRangeSize( Cba_Ntk_t * p, int f )   { assert(Cba_FonIsConst(f)); return atoi(Cba_NtkConst(p, Cba_FonConst(f)));                   }Cba_FonConstRangeSize270,26186
static inline int            Cba_FonConstSigned( Cba_Ntk_t * p, int f )      { assert(Cba_FonIsConst(f)); return strchr(Cba_NtkConst(p, Cba_FonConst(f)), 's') != NULL;    }Cba_FonConstSigned271,26359
static inline int            Cba_FonObj( Cba_Ntk_t * p, int f )              { return Cba_FonIsReal(f) ? Vec_IntEntry(&p->vFonObj, f) : 0;                                 }Cba_FonObj273,26533
static inline int            Cba_FonRangeId( Cba_Ntk_t * p, int f )          { assert(Cba_FonIsReal(f)); return Cba_NtkHasFonRanges(p)?Vec_IntGetEntry(&p->vFonRange, f):0;}Cba_FonRangeId274,26706
static inline int            Cba_FonRange( Cba_Ntk_t * p, int f )            { assert(Cba_FonIsReal(f)); return Abc_Lit2Var( Cba_FonRangeId(p, f) );                       }Cba_FonRange275,26879
static inline int            Cba_FonLeft( Cba_Ntk_t * p, int f )             { return Cba_NtkRangeLeft(p, Cba_FonRange(p, f));                                             }Cba_FonLeft276,27052
static inline int            Cba_FonRight( Cba_Ntk_t * p, int f )            { return Cba_NtkRangeRight(p, Cba_FonRange(p, f));                                            }Cba_FonRight277,27225
static inline int            Cba_FonSigned( Cba_Ntk_t * p, int f )           { return Cba_FonIsConst(f) ? Cba_FonConstSigned(p, f) : Abc_LitIsCompl(Cba_FonRangeId(p, f)); }Cba_FonSigned278,27398
static inline int            Cba_FonRangeSize( Cba_Ntk_t * p, int f )        { return Cba_FonIsConst(f) ? Cba_FonConstRangeSize(p, f):Cba_NtkRangeSize(p, Cba_FonRange(p, f)); }Cba_FonRangeSize279,27571
static inline void           Cba_FonSetRangeSign( Cba_Ntk_t * p, int f, int x )  { assert(Cba_NtkHasFonRanges(p));  Vec_IntSetEntry(&p->vFonRange, f, x);                  }Cba_FonSetRangeSign280,27748
static inline void           Cba_FonSetRange( Cba_Ntk_t * p, int f, int x )  { assert(Cba_NtkHasFonRanges(p));  Vec_IntSetEntry(&p->vFonRange, f, Abc_Var2Lit(x,0));       }Cba_FonSetRange281,27921
static inline void           Cba_FonHashRange( Cba_Ntk_t * p, int f, int l, int r ) { Cba_FonSetRange( p, f, Cba_NtkHashRange(p, l, r) );                                  }Cba_FonHashRange282,28094
static inline int            Cba_FonCopy( Cba_Ntk_t * p, int f )             { return Cba_FonIsReal(f) ? Vec_IntEntry(&p->vFonCopy, f) : f;                                }Cba_FonCopy283,28267
static inline void           Cba_FonSetCopy( Cba_Ntk_t * p, int f, int x )   { assert(Cba_FonIsReal(f)); assert(Cba_FonCopy(p, f) == 0); Vec_IntWriteEntry(&p->vFonCopy, f, x); }Cba_FonSetCopy284,28440
static inline int            Cba_FonName( Cba_Ntk_t * p, int f )             { assert(Cba_NtkHasFonNames(p)); assert(Cba_FonIsReal(f)); return Vec_IntGetEntry( &p->vFonName, f );                        }Cba_FonName285,28618
static inline char *         Cba_FonNameStr( Cba_Ntk_t * p, int f )          { assert(Cba_NtkHasFonNames(p)); assert(Cba_FonIsReal(f)); return Cba_NtkStr(p, Cba_FonName(p, f));                          }Cba_FonNameStr286,28822
static inline void           Cba_FonSetName( Cba_Ntk_t * p, int f, int x )   { assert(Cba_NtkHasFonNames(p)); assert(Cba_FonIsReal(f)); assert(Cba_FonName(p, f) == 0); Vec_IntSetEntry(&p->vFonName, f, x); }Cba_FonSetName287,29026
static inline void           Cba_FonCleanName( Cba_Ntk_t * p, int f )        { assert(Cba_NtkHasFonNames(p)); assert(Cba_FonIsReal(f)); assert(Cba_FonName(p, f) != 0); Vec_IntSetEntry(&p->vFonName, f, 0); }Cba_FonCleanName288,29233
static inline void           Cba_FonPatchName( Cba_Ntk_t * p, int f, int x)  { assert(Cba_NtkHasFonNames(p)); assert(Cba_FonIsReal(f)); Cba_FonCleanName(p, f); Cba_FonSetName(p, f, x);                  }Cba_FonPatchName289,29440
static inline int            Cba_FonIndex( Cba_Ntk_t * p, int f )            { assert(Cba_FonIsReal(f)); return f - Cba_ObjFon0( p, Cba_FonObj(p, f) );                    }Cba_FonIndex290,29644
static inline int            Cba_FonNtkId( Cba_Ntk_t * p, int f )            { assert(Cba_FonIsReal(f)); return Cba_ObjNtkId( p, Cba_FonObj(p, f) );                       }Cba_FonNtkId291,29817
static inline Cba_Ntk_t *    Cba_FonNtk( Cba_Ntk_t * p, int f )              { assert(Cba_FonIsReal(f)); return Cba_ObjNtk( p, Cba_FonObj(p, f) );                         }Cba_FonNtk292,29990
static inline int            Cba_ObjFanin( Cba_Ntk_t * p, int i, int k )     { assert(i>0); return Cba_FonObj( p, Cba_ObjFinFon(p, i, k) );                                }Cba_ObjFanin294,30164
static inline int            Cba_ObjLeft( Cba_Ntk_t * p, int i )             { return Cba_FonLeft( p, Cba_ObjFon0(p, i) );                                                 }Cba_ObjLeft295,30337
static inline int            Cba_ObjRight( Cba_Ntk_t * p, int i )            { return Cba_FonRight( p, Cba_ObjFon0(p, i) );                                                }Cba_ObjRight296,30510
static inline int            Cba_ObjRangeSize( Cba_Ntk_t * p, int i )        { return Cba_FonRangeSize( p, Cba_ObjFon0(p, i) );                                            }Cba_ObjRangeSize297,30683
static inline int            Cba_ObjSigned( Cba_Ntk_t * p, int i )           { return Cba_FonSigned( p, Cba_ObjFon0(p, i) );                                               }Cba_ObjSigned298,30856
static inline int            Cba_ObjSign( Cba_Ntk_t * p, int i )             { return Abc_Var2Lit( Cba_FonRangeSize(p, i), Cba_ObjSigned(p, i) );                          }Cba_ObjSign299,31029
#define Cba_ManForEachNtk(Cba_ManForEachNtk305,31423
#define Cba_NtkForEachPi(Cba_NtkForEachPi308,31585
#define Cba_NtkForEachPo(Cba_NtkForEachPo310,31744
#define Cba_NtkForEachBoxSeq(Cba_NtkForEachBoxSeq312,31903
#define Cba_NtkForEachPioOrder(Cba_NtkForEachPioOrder314,32070
#define Cba_NtkForEachPiFon(Cba_NtkForEachPiFon317,32242
#define Cba_NtkForEachPoDriverFon(Cba_NtkForEachPoDriverFon319,32442
#define Cba_NtkForEachPoDriver(Cba_NtkForEachPoDriver321,32647
#define Cba_NtkForEachObj(Cba_NtkForEachObj324,32827
#define Cba_NtkForEachObjType(Cba_NtkForEachObjType326,32994
#define Cba_NtkForEachBox(Cba_NtkForEachBox328,33183
#define Cba_NtkForEachBoxComb(Cba_NtkForEachBoxComb330,33348
#define Cba_NtkForEachBoxUser(Cba_NtkForEachBoxUser332,33535
#define Cba_NtkForEachBoxPrim(Cba_NtkForEachBoxPrim334,33704
#define Cba_NtkForEachFon(Cba_NtkForEachFon337,33874
#define Cba_NtkForEachFinFon(Cba_NtkForEachFinFon339,34003
#define Cba_NtkForEachFonName(Cba_NtkForEachFonName341,34216
#define Cba_ObjForEachFin(Cba_ObjForEachFin344,34436
#define Cba_ObjForEachFon(Cba_ObjForEachFon346,34603
#define Cba_ObjForEachFinFon(Cba_ObjForEachFinFon348,34770
#define Cba_ObjForEachFinFanin(Cba_ObjForEachFinFanin350,34974
#define Cba_ObjForEachFinFaninReal(Cba_ObjForEachFinFaninReal352,35195
static inline int Cba_ObjAlloc( Cba_Ntk_t * p, Cba_ObjType_t Type, int nFins, int nFons )Cba_ObjAlloc371,35907
static inline int Cba_ObjDup( Cba_Ntk_t * pNew, Cba_Ntk_t * p, int i )Cba_ObjDup391,36639
static inline void Cba_ObjDelete( Cba_Ntk_t * p, int i )Cba_ObjDelete397,36863
static inline Cba_Ntk_t *  Cba_NtkAlloc( Cba_Man_t * p, int NameId, int nIns, int nOuts, int nObjs, int nFins, int nFons )Cba_NtkAlloc418,37405
static inline void Cba_NtkFree( Cba_Ntk_t * p )Cba_NtkFree434,38396
static inline int Cba_NtkNewStrId( Cba_Ntk_t * pNtk, const char * format, ...  )Cba_NtkNewStrId468,39504
static inline int Cba_ManNewConstId( Cba_Ntk_t * p, Vec_Str_t * vBits ) Cba_ManNewConstId485,40192
static inline int Cba_ManNewConstZero( Cba_Ntk_t * p, int nBits ) Cba_ManNewConstZero491,40482
static inline void Cba_NtkAdd( Cba_Man_t * p, Cba_Ntk_t * pNtk )Cba_NtkAdd497,40735
static inline void Cba_NtkUpdate( Cba_Man_t * p, Cba_Ntk_t * pNtk )Cba_NtkUpdate505,41040
static inline Vec_Int_t * Cba_NtkCollect( Cba_Ntk_t * p )Cba_NtkCollect516,41418
static inline int Cba_NtkIsSeq( Cba_Ntk_t * p )Cba_NtkIsSeq524,41639
static inline void Cba_NtkPrepareSeq( Cba_Ntk_t * p )Cba_NtkPrepareSeq549,42190
static inline void Cba_NtkCountParams( Cba_Ntk_t * p, Vec_Int_t * vObjs, int * nPis, int * nPos, int * nFins, int * nFons )Cba_NtkCountParams560,42504
static inline Cba_Ntk_t * Cba_NtkDup( Cba_Man_t * pMan, Cba_Ntk_t * p, Vec_Int_t * vObjs )Cba_NtkDup572,42906
static inline Cba_Ntk_t * Cba_NtkDupOrder( Cba_Man_t * pMan, Cba_Ntk_t * p, Vec_Int_t*(* pFuncOrder)(Cba_Ntk_t*) )Cba_NtkDupOrder599,43952
static inline void Cba_NtkDupAttrs( Cba_Ntk_t * pNew, Cba_Ntk_t * p )Cba_NtkDupAttrs610,44328
static inline int Cba_NtkMemory( Cba_Ntk_t * p )Cba_NtkMemory629,45478
static inline void Cba_NtkPrintStats( Cba_Ntk_t * p )Cba_NtkPrintStats663,46827
static inline void Cba_NtkPrint( Cba_Ntk_t * p )Cba_NtkPrint678,47474
static inline Cba_Man_t * Cba_ManAlloc( char * pFileName, int nNtks, Abc_Nam_t * pStrs, Abc_Nam_t * pFuns, Abc_Nam_t * pMods, Hash_IntMan_t * vHash )Cba_ManAlloc706,48258
static inline void Cba_ManDupTypeNames( Cba_Man_t * pNew, Cba_Man_t * p )Cba_ManDupTypeNames729,49294
static inline Cba_Man_t * Cba_ManDup( Cba_Man_t * p, Vec_Int_t*(* pFuncOrder)(Cba_Ntk_t*) )Cba_ManDup733,49449
static inline void Cba_ManPrepareSeq( Cba_Man_t * p )Cba_ManPrepareSeq750,50233
static inline void Cba_ManFree( Cba_Man_t * p )Cba_ManFree756,50391
static inline int Cba_ManGetMap( Cba_Man_t * p, int i )Cba_ManGetMap776,50958
static inline void Cba_ManSetMap( Cba_Man_t * p, int i, int x )Cba_ManSetMap780,51063
static inline void Cba_ManUnsetMap( Cba_Man_t * p, int i )Cba_ManUnsetMap786,51260
static inline void Cba_ManCleanMap( Cba_Man_t * p )Cba_ManCleanMap790,51366
static inline int  Cba_NtkGetMap( Cba_Ntk_t * p, int i )          { return Cba_ManGetMap(p->pDesign, i); }Cba_NtkGetMap797,51571
static inline void Cba_NtkSetMap( Cba_Ntk_t * p, int i, int x )   { Cba_ManSetMap(p->pDesign, i, x);     }Cba_NtkSetMap798,51678
static inline void Cba_NtkUnsetMap( Cba_Ntk_t * p, int i )        { Cba_ManUnsetMap(p->pDesign, i);      }Cba_NtkUnsetMap799,51785
static inline void Cba_NtkCleanMap( Cba_Ntk_t * p )               { Cba_ManCleanMap(p->pDesign);         }Cba_NtkCleanMap800,51892
static inline int Cba_ManGetMap2( Cba_Man_t * p, int i )Cba_ManGetMap2802,52000
static inline void Cba_ManSetMap2( Cba_Man_t * p, int i, int x )Cba_ManSetMap2806,52107
static inline void Cba_ManUnsetMap2( Cba_Man_t * p, int i )Cba_ManUnsetMap2812,52308
static inline void Cba_ManCleanMap2( Cba_Man_t * p )Cba_ManCleanMap2816,52416
static inline int  Cba_NtkGetMap2( Cba_Ntk_t * p, int i )          { return Cba_ManGetMap2(p->pDesign, i); }Cba_NtkGetMap2823,52625
static inline void Cba_NtkSetMap2( Cba_Ntk_t * p, int i, int x )   { Cba_ManSetMap2(p->pDesign, i, x);     }Cba_NtkSetMap2824,52734
static inline void Cba_NtkUnsetMap2( Cba_Ntk_t * p, int i )        { Cba_ManUnsetMap2(p->pDesign, i);      }Cba_NtkUnsetMap2825,52843
static inline void Cba_NtkCleanMap2( Cba_Ntk_t * p )               { Cba_ManCleanMap2(p->pDesign);         }Cba_NtkCleanMap2826,52952
static inline int Cba_ManMemory( Cba_Man_t * p )Cba_ManMemory828,53062
static inline int Cba_ManObjNum( Cba_Man_t * p )Cba_ManObjNum846,53715
static inline int Cba_ManBoxNum( Cba_Man_t * p )Cba_ManBoxNum853,53900
static inline void Cba_ManBoxNumRec_rec( Cba_Ntk_t * p, int * pCountP, int * pCountU )Cba_ManBoxNumRec_rec860,54087
static inline void Cba_ManBoxNumRec( Cba_Man_t * p, int * pnPrims, int * pnUsers )Cba_ManBoxNumRec878,54636
static inline void Cba_ManPrintStats( Cba_Man_t * p, int nModules, int fVerbose )Cba_ManPrintStats889,55068
static inline void Cba_NtkAddMissingFonNames( Cba_Ntk_t * p, char * pPref )Cba_NtkAddMissingFonNames924,56107
static inline void Cba_NtkCreateFonNames( Cba_Ntk_t * p, char * pPref )Cba_NtkCreateFonNames944,56850
static inline void Cba_NtkMissingFonNames( Cba_Ntk_t * p, char * pPref )Cba_NtkMissingFonNames959,57536

src/base/cba/cbaNtk.c,4024
static inline void Vec_WrdSelectSortCost2( word * pArray, int nSize, word * pCosts )Vec_WrdSelectSortCost246,1315
static inline word Cba_NtkPrintDistribMakeSign( int s, int s0, int s1 )Cba_NtkPrintDistribMakeSign59,1714
static inline void Cba_NtkPrintDistribFromSign( word sss, int * s, int * s0, int * s1 )Cba_NtkPrintDistribFromSign63,1848
static inline void Cba_NtkPrintDistribAddOne( Vec_Ptr_t * vTypes, Vec_Ptr_t * vOccurs, int Type, word Sign )Cba_NtkPrintDistribAddOne67,2034
void Cba_NtkPrintDistribSortOne( Vec_Ptr_t * vTypes, Vec_Ptr_t * vOccurs, int Type )Cba_NtkPrintDistribSortOne81,2528
void Cba_NtkPrintDistrib( Cba_Ntk_t * p, int fVerbose )Cba_NtkPrintDistrib89,2916
void Cba_NtkPrintNodes( Cba_Ntk_t * p, int Type )Cba_NtkPrintNodes242,12803
void Cba_NtkPrintStatsFull( Cba_Ntk_t * p, int fDistrib, int fVerbose )Cba_NtkPrintStatsFull267,14008
void Cba_NtkCollectDistrib( Cba_Ntk_t * p, int * pCounts, int * pUserCounts )Cba_NtkCollectDistrib310,15329
void Cba_NtkPrintDistribStat( Cba_Ntk_t * p, int * pCounts, int * pUserCounts )Cba_NtkPrintDistribStat320,15593
void Cba_NtkPrintDistribOld( Cba_Ntk_t * p )Cba_NtkPrintDistribOld332,16116
void Cba_ManPrintDistribStat( Cba_Man_t * p, int * pCounts, int * pUserCounts )Cba_ManPrintDistribStat342,16468
void Cba_ManPrintDistrib( Cba_Man_t * p )Cba_ManPrintDistrib354,16948
static inline int Cba_CharIsDigit( char c ) { return c >= '0' && c <= '9'; }Cba_CharIsDigit378,17701
int Cba_StrCmpInt( char * p1, char * p2, int i )Cba_StrCmpInt379,17778
int Cba_StrCmp( char ** pp1, char ** pp2 )Cba_StrCmp418,19092
void Cba_NtkObjOrder( Cba_Ntk_t * p, Vec_Int_t * vObjs, Vec_Int_t * vNameIds )Cba_NtkObjOrder428,19377
int Cba_NtkCiFonNum( Cba_Ntk_t * p )Cba_NtkCiFonNum472,20788
int Cba_NtkCoFinNum( Cba_Ntk_t * p )Cba_NtkCoFinNum479,20971
int Cba_NtkIsTopoOrder( Cba_Ntk_t * p )Cba_NtkIsTopoOrder498,21435
int Cba_ManIsTopoOrder( Cba_Man_t * p )Cba_ManIsTopoOrder540,22745
int Cba_NtkCheckComboLoop_rec( Cba_Ntk_t * p, int iObj )Cba_NtkCheckComboLoop_rec560,23203
int Cba_NtkCheckComboLoop( Cba_Ntk_t * p )Cba_NtkCheckComboLoop578,23782
int Cba_NtkFindMissing( Vec_Int_t * vObjs, int nObjs )Cba_NtkFindMissing603,24457
void Cba_NtkCollectDfs_rec( Cba_Ntk_t * p, int iObj, Vec_Int_t * vObjs )Cba_NtkCollectDfs_rec630,25129
Vec_Int_t * Cba_NtkCollectDfs( Cba_Ntk_t * p )Cba_NtkCollectDfs640,25456
void Cba_ManGetClpStats_rec( Cba_Ntk_t * p, int * pCountN, int * pCountI, int * pCountO )Cba_ManGetClpStats_rec686,27188
void Cba_ManGetClpStats( Cba_Man_t * p, int * nObjs, int * nFins, int * nFons )Cba_ManGetClpStats708,28037
void Cba_NtkCollapse_rec( Cba_Ntk_t * pNew, Cba_Ntk_t * p, Vec_Int_t * vSigs )Cba_NtkCollapse_rec734,28907
Cba_Man_t * Cba_ManCollapse( Cba_Man_t * p )Cba_ManCollapse788,31172
Vec_Int_t * Cba_NtkCollectInFons( Cba_Ntk_t * p, Vec_Int_t * vObjs )Cba_NtkCollectInFons855,34166
Vec_Int_t * Cba_NtkCollectOutFons( Cba_Ntk_t * p, Vec_Int_t * vObjs )Cba_NtkCollectOutFons876,34937
void Cba_NtkCollectGroupStats( Cba_Ntk_t * p, Vec_Int_t * vObjs, int * pnFins, int * pnFons )Cba_NtkCollectGroupStats900,35901
void Cba_ManExtractGroupInt( Cba_Ntk_t * pNew, Cba_Ntk_t * p, Vec_Int_t * vObjs, Vec_Int_t * vFonIns, Vec_Int_t * vFonOuts )Cba_ManExtractGroupInt911,36216
Cba_Man_t * Cba_ManExtractGroup( Cba_Man_t * p, Vec_Int_t * vObjs )Cba_ManExtractGroup959,38141
static inline int Cba_NtkInsertGiaLit( Cba_Ntk_t * p, int iLit, Vec_Int_t * vLit2Fon, int fUseXor )Cba_NtkInsertGiaLit1001,39724
static inline int Cba_NtkInsertGiaObj( Cba_Ntk_t * p, Gia_Man_t * pGia, int iObj, Vec_Int_t * vLit2Fon, int fUseXor )Cba_NtkInsertGiaObj1026,40651
Cba_Man_t * Cba_ManDeriveFromGia( Cba_Man_t * pOld, Gia_Man_t * pGia, int fUseXor )Cba_ManDeriveFromGia1053,41801
void Cba_NtkInsertGroup( Cba_Ntk_t * p, Vec_Int_t * vObjs, Cba_Ntk_t * pSyn )Cba_NtkInsertGroup1110,44323
Cba_Man_t * Cba_ManInsertGroup( Cba_Man_t * p, Vec_Int_t * vObjs, Cba_Ntk_t * pSyn )Cba_ManInsertGroup1170,46669

src/base/cba/cbaWriteBlif.c,753
static void Prs_ManWriteBlifArray( FILE * pFile, Prs_Ntk_t * p, Vec_Int_t * vFanins )Prs_ManWriteBlifArray47,1347
static void Prs_ManWriteBlifLines( FILE * pFile, Prs_Ntk_t * p )Prs_ManWriteBlifLines54,1586
static void Prs_ManWriteBlifNtk( FILE * pFile, Prs_Ntk_t * p )Prs_ManWriteBlifNtk87,2815
void Prs_ManWriteBlif( char * pFileName, Vec_Ptr_t * vPrs )Prs_ManWriteBlif103,3393
void Cba_ManWriteBlifLines( FILE * pFile, Cba_Ntk_t * p )Cba_ManWriteBlifLines130,4171
void Cba_ManWriteBlifArray( FILE * pFile, Cba_Ntk_t * p, Vec_Int_t * vObjs )Cba_ManWriteBlifArray168,5943
void Cba_ManWriteBlifNtk( FILE * pFile, Cba_Ntk_t * p )Cba_ManWriteBlifNtk175,6169
void Cba_ManWriteBlif( char * pFileName, Cba_Man_t * p )Cba_ManWriteBlif187,6568

src/base/cba/cbaCba.c,150
Cba_Man_t * Cba_ManReadCba( char * pFileName )Cba_ManReadCba44,1240
void Cba_ManWriteCba( char * pFileName, Cba_Man_t * p )Cba_ManWriteCba48,1308

src/base/cba/cbaReadBlif.c,4491
    PRS_BLIF_NONE = 0, // 0:   unusedPRS_BLIF_NONE32,835
    PRS_BLIF_MODEL,    // 1:   .modelPRS_BLIF_MODEL33,873
    PRS_BLIF_INOUTS,   // 2:   .inoutsPRS_BLIF_INOUTS34,911
    PRS_BLIF_INPUTS,   // 3:   .inputsPRS_BLIF_INPUTS35,950
    PRS_BLIF_OUTPUTS,  // 4:   .outputsPRS_BLIF_OUTPUTS36,989
    PRS_BLIF_NAMES,    // 5:   .namesPRS_BLIF_NAMES37,1029
    PRS_BLIF_SUBCKT,   // 6:   .subcktPRS_BLIF_SUBCKT38,1067
    PRS_BLIF_GATE,     // 7:   .gatePRS_BLIF_GATE39,1106
    PRS_BLIF_LATCH,    // 8:   .latchPRS_BLIF_LATCH40,1143
    PRS_BLIF_SHORT,    // 9:   .shortPRS_BLIF_SHORT41,1181
    PRS_BLIF_END,      // 10:  .endPRS_BLIF_END42,1219
    PRS_BLIF_UNKNOWN   // 11:  unknownPRS_BLIF_UNKNOWN43,1255
} Cba_BlifType_t;Cba_BlifType_t44,1294
static const char * s_BlifTypes[PRS_BLIF_UNKNOWN+1] = {s_BlifTypes46,1313
static inline void Prs_NtkAddBlifDirectives( Prs_Man_t * p )Prs_NtkAddBlifDirectives61,1835
static inline int  Prs_CharIsSpace( char c )                { return c == ' ' || c == '\t' || c == '\r';              }Prs_CharIsSpace85,2543
static inline int  Prs_CharIsStop( char c )                 { return c == '#' || c == '\\' || c == '\n' || c == '=';  }Prs_CharIsStop86,2663
static inline int  Prs_CharIsLit( char c )                  { return c == '0' || c == '1'  || c == '-';               }Prs_CharIsLit87,2783
static inline int  Prs_ManIsSpace( Prs_Man_t * p )          { return Prs_CharIsSpace(*p->pCur);                       }Prs_ManIsSpace89,2904
static inline int  Prs_ManIsStop( Prs_Man_t * p )           { return Prs_CharIsStop(*p->pCur);                        }Prs_ManIsStop90,3024
static inline int  Prs_ManIsLit( Prs_Man_t * p )            { return Prs_CharIsLit(*p->pCur);                         }Prs_ManIsLit91,3144
static inline int  Prs_ManIsChar( Prs_Man_t * p, char c )   { return *p->pCur == c;                                   }Prs_ManIsChar93,3265
static inline int  Prs_ManIsChar2( Prs_Man_t * p, char c )  { return *p->pCur++ == c;                                 }Prs_ManIsChar294,3385
static inline void Prs_ManSkip( Prs_Man_t * p )             { p->pCur++;                                              }Prs_ManSkip96,3506
static inline char Prs_ManSkip2( Prs_Man_t * p )            { return *p->pCur++;                                      }Prs_ManSkip297,3626
static inline void Prs_ManSkipToChar( Prs_Man_t * p, char c )  Prs_ManSkipToChar111,3996
static inline void Prs_ManSkipSpaces( Prs_Man_t * p )Prs_ManSkipSpaces116,4125
static inline int Prs_ManReadName( Prs_Man_t * p )Prs_ManReadName134,4555
static inline int Prs_ManReadList( Prs_Man_t * p, Vec_Int_t * vOrder, int Type )Prs_ManReadList147,4926
static inline int Prs_ManReadList2( Prs_Man_t * p )Prs_ManReadList2159,5338
static inline int Prs_ManReadList3( Prs_Man_t * p )Prs_ManReadList3168,5656
static inline int Prs_ManReadCube( Prs_Man_t * p )Prs_ManReadCube199,6799
static inline void Prs_ManSaveCover( Prs_Man_t * p )Prs_ManSaveCover222,7758
static inline int Prs_ManReadInouts( Prs_Man_t * p )Prs_ManReadInouts256,8838
static inline int Prs_ManReadInputs( Prs_Man_t * p )Prs_ManReadInputs262,9024
static inline int Prs_ManReadOutputs( Prs_Man_t * p )Prs_ManReadOutputs268,9210
static inline int Prs_ManReadNode( Prs_Man_t * p )Prs_ManReadNode274,9398
static inline int Prs_ManReadBox( Prs_Man_t * p, int fGate )Prs_ManReadBox281,9605
static inline int Prs_ManReadLatch( Prs_Man_t * p )Prs_ManReadLatch291,9965
static inline int Prs_ManReadShort( Prs_Man_t * p )Prs_ManReadShort312,10724
static inline int Prs_ManReadModel( Prs_Man_t * p )Prs_ManReadModel328,11452
static inline int Prs_ManReadEnd( Prs_Man_t * p )Prs_ManReadEnd339,11988
static inline int Prs_ManReadDirective( Prs_Man_t * p )Prs_ManReadDirective349,12424
static inline int Prs_ManReadLines( Prs_Man_t * p )Prs_ManReadLines380,13559
Vec_Ptr_t * Prs_ManReadBlif( char * pFileName )Prs_ManReadBlif406,14131
void Prs_ManReadBlifTest( char * pFileName )Prs_ManReadBlifTest433,14820
int Prs_CreateBlifFindFon( Cba_Ntk_t * p, int NameId )Prs_CreateBlifFindFon458,15615
void Prs_CreateBlifPio( Cba_Ntk_t * p, Prs_Ntk_t * pNtk )Prs_CreateBlifPio466,15871
int Prs_CreateBlifNtk( Cba_Ntk_t * p, Prs_Ntk_t * pNtk )Prs_CreateBlifNtk490,16598
Cba_Man_t * Prs_ManBuildCbaBlif( char * pFileName, Vec_Ptr_t * vDes )Prs_ManBuildCbaBlif587,20448
Cba_Man_t * Cba_ManReadBlif( char * pFileName )Cba_ManReadBlif629,21835

src/base/cba/cbaWriteVer.c,2461
void Cba_ManCreatePrimMap( char ** pMap )Cba_ManCreatePrimMap47,1330
static inline int Prs_NameIsLegalInVerilog( char * pName, int NameId )Prs_NameIsLegalInVerilog133,4120
char * Prs_ObjGetName( Prs_Ntk_t * p, int NameId )Prs_ObjGetName151,4930
static inline char * Prs_ManWriteRange( Prs_Ntk_t * p, int RangeId, int fSlice )Prs_ManWriteRange160,5216
static void Prs_ManWriteVerilogConcat( FILE * pFile, Prs_Ntk_t * p, int Con )Prs_ManWriteVerilogConcat169,5636
static void Prs_ManWriteVerilogSignal( FILE * pFile, Prs_Ntk_t * p, int Sig )Prs_ManWriteVerilogSignal177,5974
void Prs_ManWriteVerilogArray( FILE * pFile, Prs_Ntk_t * p, Vec_Int_t * vSigs, int fOdd )Prs_ManWriteVerilogArray191,6620
static void Prs_ManWriteVerilogArray2( FILE * pFile, Prs_Ntk_t * p, Vec_Int_t * vSigs )Prs_ManWriteVerilogArray2204,7011
static void Prs_ManWriteVerilogMux( FILE * pFile, Prs_Ntk_t * p, Vec_Int_t * vSigs )Prs_ManWriteVerilogMux217,7495
static void Prs_ManWriteVerilogBoxes( FILE * pFile, Prs_Ntk_t * p, char ** pTypeNames )Prs_ManWriteVerilogBoxes231,8021
static void Prs_ManWriteVerilogIos( FILE * pFile, Prs_Ntk_t * p, int SigType )Prs_ManWriteVerilogIos287,10380
static void Prs_ManWriteVerilogIoOrder( FILE * pFile, Prs_Ntk_t * p, Vec_Int_t * vOrder )Prs_ManWriteVerilogIoOrder301,11110
static void Prs_ManWriteVerilogNtk( FILE * pFile, Prs_Ntk_t * p, char ** pTypeNames )Prs_ManWriteVerilogNtk307,11385
void Prs_ManWriteVerilog( char * pFileName, Vec_Ptr_t * vPrs )Prs_ManWriteVerilog322,11919
static inline int Cba_NameIsLegalInVerilog( char * pName, int NameId )Cba_NameIsLegalInVerilog343,12538
char * Cba_ObjGetName( Cba_Ntk_t * p, int i )Cba_ObjGetName361,13348
char * Cba_FonGetName( Cba_Ntk_t * p, int i )Cba_FonGetName370,13644
char * Cba_ManGetSliceName( Cba_Ntk_t * p, int iFon, int RangeId )Cba_ManGetSliceName381,14023
void Cba_ManWriteFonRange( Cba_Ntk_t * p, int iFon )Cba_ManWriteFonRange398,14774
void Cba_ManWriteFonName( Cba_Ntk_t * p, int iFon, int fInlineConcat, int fInput )Cba_ManWriteFonName407,15156
void Cba_ManWriteConcat( Cba_Ntk_t * p, int iObj )Cba_ManWriteConcat426,16027
int Cba_ManWriteLineFile( Cba_Ntk_t * p, int iObj, int FileAttr, int LineAttr )Cba_ManWriteLineFile439,16404
void Cba_ManWriteVerilogNtk( Cba_Ntk_t * p, int fInlineConcat )Cba_ManWriteVerilogNtk451,16807
void Cba_ManWriteVerilog( char * pFileName, Cba_Man_t * p, int fInlineConcat )Cba_ManWriteVerilog975,40468

src/base/main/abcapis_old.h,65
#define MINI_AIG__abc_apis_old_hMINI_AIG__abc_apis_old_h22,574

src/base/main/main.c,44
int main(int argc, char *argv[])main9,128

src/base/main/mainUtils.c,477
char * Abc_UtilsGetVersion( Abc_Frame_t * pAbc )Abc_UtilsGetVersion52,1407
char * Abc_UtilsGetUsersInput( Abc_Frame_t * pAbc )Abc_UtilsGetUsersInput70,1824
void Abc_UtilsPrintHello( Abc_Frame_t * pAbc )Abc_UtilsPrintHello104,2581
void Abc_UtilsPrintUsage( Abc_Frame_t * pAbc, char * ProgName )Abc_UtilsPrintUsage120,2917
void Abc_UtilsSource( Abc_Frame_t * pAbc )Abc_UtilsSource153,4568
char * DateReadFromDateString( char * datestr )DateReadFromDateString255,8189

src/base/main/mainInt.h,7013
#define ABC__base__main__mainInt_hABC__base__main__mainInt_h22,556
#define ABC_VERSION ABC_VERSION48,1318
#define ABC_MAX_STR ABC_MAX_STR51,1403
typedef void (*Abc_Frame_Callback_BmcFrameDone_Func)(int frame, int po, int status);Abc_Frame_Callback_BmcFrameDone_Func57,1656
struct Abc_Frame_t_Abc_Frame_t_59,1742
    char *          sVersion;      // the name of the current versionsVersion62,1784
    char *          sBinary;       // the name of the binary runningsBinary63,1854
    st__table *      tCommands;     // the command tabletCommands65,1953
    st__table *      tAliases;      // the alias tabletAliases66,2010
    st__table *      tFlags;        // the flag tabletFlags67,2065
    Vec_Ptr_t *     aHistory;      // the command historyaHistory68,2119
    Abc_Ntk_t *     pNtkCur;       // the current networkpNtkCur70,2202
    Abc_Ntk_t *     pNtkBestDelay; // the current networkpNtkBestDelay71,2260
    Abc_Ntk_t *     pNtkBestArea;  // the current networkpNtkBestArea72,2318
    Abc_Ntk_t *     pNtkBackup;    // the current networkpNtkBackup73,2376
    int             nSteps;        // the counter of different network processednSteps74,2434
    int             fSource;       // marks the source modefSource75,2515
    int             fAutoexac;     // marks the autoexec modefAutoexac76,2575
    int             fBatchMode;    // batch mode flagfBatchMode77,2637
    int             fBridgeMode;   // bridge mode flagfBridgeMode78,2691
    Abc_Ntk_t *     pNtkBest;        // the current networkpNtkBest80,2763
    float           nBestNtkArea;   // best areanBestNtkArea81,2823
    float           nBestNtkDelay;  // best delaynBestNtkDelay82,2872
    int             nBestNtkNodes;  // best nodesnBestNtkNodes83,2922
    int             nBestNtkLevels; // best levelsnBestNtkLevels84,2972
    FILE *          Out;Out87,3046
    FILE *          Err;Err88,3071
    FILE *          Hst;Hst89,3096
    double          TimeCommand;   // the runtime of the last commandTimeCommand91,3157
    double          TimeTotal;     // the total runtime of all commandsTimeTotal92,3227
    Vec_Ptr_t *     vStore;        // networks to be used by choicevStore94,3347
    void *          pManDec;       // decomposition managerpManDec96,3448
    void *          pManDsd;       // decomposition managerpManDsd97,3508
    void *          pManDsd2;      // decomposition managerpManDsd298,3568
    void *          pLibLut;       // the current LUT librarypLibLut100,3657
    void *          pLibBox;       // the current box librarypLibBox101,3719
    void *          pLibGen;       // the current genlibpLibGen102,3781
    void *          pLibGen2;      // the current genlibpLibGen2103,3838
    void *          pLibSuper;     // the current supergate librarypLibSuper104,3895
    void *          pLibScl;       // the current Liberty librarypLibScl105,3963
    void *          pAbcCon;       // constraint managerpAbcCon106,4029
    char *          pDrivingCell;  // name of the driving cellpDrivingCell108,4112
    float           MaxLoad;       // maximum output loadMaxLoad109,4175
    Vec_Int_t *     vIndFlops;vIndFlops111,4262
    int             nIndFrames;nIndFrames112,4293
    Gia_Man_t *     pGia;          // alternative current network as a light-weight AIGpGia115,4342
    Gia_Man_t *     pGia2;         // copy of the abovepGia2116,4430
    Gia_Man_t *     pGiaBest;      // copy of the abovepGiaBest117,4486
    Gia_Man_t *     pGiaBest2;     // copy of the abovepGiaBest2118,4542
    Gia_Man_t *     pGiaSaved;     // copy of the abovepGiaSaved119,4598
    int             nBestLuts;     // best LUT countnBestLuts120,4654
    int             nBestEdges;    // best edge countnBestEdges121,4707
    int             nBestLevels;   // best level countnBestLevels122,4761
    int             nBestLuts2;     // best LUT countnBestLuts2123,4816
    int             nBestEdges2;    // best edge countnBestEdges2124,4870
    int             nBestLevels2;   // best level countnBestLevels2125,4925
    Abc_Cex_t *     pCex;          // a counter-example to fail the current networkpCex126,4981
    Abc_Cex_t *     pCex2;         // copy of the abovepCex2127,5065
    Vec_Ptr_t *     vCexVec;       // a vector of counter-examples if more than one PO failsvCexVec128,5121
    Vec_Ptr_t *     vPoEquivs;     // equivalence classes of isomorphic primary outputsvPoEquivs129,5214
    Vec_Int_t *     vStatuses;     // problem status for each outputvStatuses130,5302
    Vec_Int_t *     vAbcObjIds;    // object IDsvAbcObjIds131,5371
    int             Status;                // the status of verification problem (proved=1, disproved=0, undecided=-1)Status132,5420
    int             nFrames;               // the number of time frames completed by BMCnFrames133,5539
    Vec_Ptr_t *     vPlugInComBinPairs;    // pairs of command and its binary namevPlugInComBinPairs134,5628
    Vec_Ptr_t *     vLTLProperties_global; // related to LTLvLTLProperties_global135,5711
    Vec_Ptr_t *     vSignalNames;  // temporary storage for signal namesvSignalNames136,5772
    char *          pSpecName;pSpecName137,5845
    void *          pSave1; pSave1138,5876
    void *          pSave2; pSave2139,5905
    void *          pSave3; pSave3140,5934
    void *          pSave4; pSave4141,5963
    void *          pAbc85Ntl;pAbc85Ntl142,5992
    void *          pAbc85Ntl2;pAbc85Ntl2143,6023
    void *          pAbc85Best;pAbc85Best144,6055
    void *          pAbc85Delay;pAbc85Delay145,6087
    void *          pAbcWlc;pAbcWlc146,6120
    Vec_Int_t *     pAbcWlcInv;pAbcWlcInv147,6149
    void *          pAbcBac;pAbcBac148,6181
    void *          pAbcCba;pAbcCba149,6210
    void *          pAbcPla;pAbcPla150,6239
    Abc_Nam_t *     pJsonStrs;pJsonStrs151,6268
    Vec_Wec_t *     vJsonObjs;vJsonObjs152,6299
    DdManager *     dd;            // temporary BDD packagedd154,6350
    Gia_Man_t *     pGiaMiniAig; pGiaMiniAig156,6417
    Gia_Man_t *     pGiaMiniLut; pGiaMiniLut157,6451
    Vec_Int_t *     vCopyMiniAig;vCopyMiniAig158,6485
    Vec_Int_t *     vCopyMiniLut;vCopyMiniLut159,6519
    int *           pArray;pArray160,6553
    int *           pBoxes;pBoxes161,6581
    void *          pNdr;pNdr162,6609
    int *           pNdrArray;pNdrArray163,6635
    Abc_Frame_Callback_BmcFrameDone_Func pFuncOnFrameDone;pFuncOnFrameDone165,6667
typedef void (*Abc_Frame_Initialization_Func)( Abc_Frame_t * pAbc );Abc_Frame_Initialization_Func168,6730
typedef struct Abc_FrameInitializer_t_ Abc_FrameInitializer_t;Abc_FrameInitializer_t171,6832
struct Abc_FrameInitializer_t_Abc_FrameInitializer_t_173,6896
    Abc_Frame_Initialization_Func init;init175,6929
    Abc_Frame_Initialization_Func destroy;destroy176,6969
    Abc_FrameInitializer_t* next;next178,7013
    Abc_FrameInitializer_t* prev;prev179,7047

src/base/main/mainLib.c,68
void Abc_Start()Abc_Start52,1762
void Abc_Stop()Abc_Stop76,2374

src/base/main/main.h,63
#define ABC__base__main__main_hABC__base__main__main_h22,547

src/base/main/mainReal.c,200
unsigned enable_dbg_outs = 1;  enable_dbg_outs73,2557
int Abc_RealMain( int argc, char * argv[] )Abc_RealMain86,2845
static int TypeCheck( Abc_Frame_t * pAbc, const char * s )TypeCheck400,12762

src/base/main/mainFrame.c,11473
static Abc_Frame_t * s_GlobalFrame = NULL;s_GlobalFrame38,959
Vec_Ptr_t * Abc_FrameReadStore()                             { return s_GlobalFrame->vStore;       } Abc_FrameReadStore55,1503
int         Abc_FrameReadStoreSize()                         { return Vec_PtrSize(s_GlobalFrame->vStore); }Abc_FrameReadStoreSize56,1605
void *      Abc_FrameReadLibLut()                            { return s_GlobalFrame->pLibLut;      } Abc_FrameReadLibLut57,1713
void *      Abc_FrameReadLibBox()                            { return s_GlobalFrame->pLibBox;      } Abc_FrameReadLibBox58,1815
void *      Abc_FrameReadLibGen()                            { return s_GlobalFrame->pLibGen;      } Abc_FrameReadLibGen59,1917
void *      Abc_FrameReadLibGen2()                           { return s_GlobalFrame->pLibGen2;     } Abc_FrameReadLibGen260,2019
void *      Abc_FrameReadLibSuper()                          { return s_GlobalFrame->pLibSuper;    } Abc_FrameReadLibSuper61,2121
void *      Abc_FrameReadLibScl()                            { return s_GlobalFrame->pLibScl;      } Abc_FrameReadLibScl62,2223
void *      Abc_FrameReadManDd()                             { if ( s_GlobalFrame->dd == NULL )      s_GlobalFrame->dd = Cudd_Init( 0, 0, CUDD_UNIQUE_SLOTS, CUDD_CACHE_SLOTS, 0 );  return s_GlobalFrame->dd;      } Abc_FrameReadManDd64,2345
void *      Abc_FrameReadManDec()                            { if ( s_GlobalFrame->pManDec == NULL ) s_GlobalFrame->pManDec = Dec_ManStart();                                        return s_GlobalFrame->pManDec; } Abc_FrameReadManDec66,2567
void *      Abc_FrameReadManDsd()                            { return s_GlobalFrame->pManDsd;      } Abc_FrameReadManDsd67,2782
void *      Abc_FrameReadManDsd2()                           { return s_GlobalFrame->pManDsd2;     }Abc_FrameReadManDsd268,2884
char *      Abc_FrameReadFlag( char * pFlag )                { return Cmd_FlagReadByName( s_GlobalFrame, pFlag );   }Abc_FrameReadFlag69,2985
Vec_Ptr_t * Abc_FrameReadSignalNames()                       { return s_GlobalFrame->vSignalNames; }Abc_FrameReadSignalNames70,3103
char *      Abc_FrameReadSpecName()                          { return s_GlobalFrame->pSpecName;    }Abc_FrameReadSpecName71,3204
int         Abc_FrameReadBmcFrames( Abc_Frame_t * p )        { return s_GlobalFrame->nFrames;      }               Abc_FrameReadBmcFrames73,3306
int         Abc_FrameReadProbStatus( Abc_Frame_t * p )       { return s_GlobalFrame->Status;       }               Abc_FrameReadProbStatus74,3422
void *      Abc_FrameReadCex( Abc_Frame_t * p )              { return s_GlobalFrame->pCex;         }        Abc_FrameReadCex75,3538
Vec_Ptr_t * Abc_FrameReadCexVec( Abc_Frame_t * p )           { return s_GlobalFrame->vCexVec;      }        Abc_FrameReadCexVec76,3647
Vec_Int_t * Abc_FrameReadStatusVec( Abc_Frame_t * p )        { return s_GlobalFrame->vStatuses;    }        Abc_FrameReadStatusVec77,3756
Vec_Ptr_t * Abc_FrameReadPoEquivs( Abc_Frame_t * p )         { return s_GlobalFrame->vPoEquivs;    }        Abc_FrameReadPoEquivs78,3865
Vec_Int_t * Abc_FrameReadPoStatuses( Abc_Frame_t * p )       { return s_GlobalFrame->vStatuses;    }        Abc_FrameReadPoStatuses79,3974
Vec_Int_t * Abc_FrameReadObjIds( Abc_Frame_t * p )           { return s_GlobalFrame->vAbcObjIds;   }        Abc_FrameReadObjIds80,4083
Abc_Nam_t * Abc_FrameReadJsonStrs( Abc_Frame_t * p )         { return s_GlobalFrame->pJsonStrs;    }     Abc_FrameReadJsonStrs81,4192
Vec_Wec_t * Abc_FrameReadJsonObjs( Abc_Frame_t * p )         { return s_GlobalFrame->vJsonObjs;    }   Abc_FrameReadJsonObjs82,4298
int         Abc_FrameReadCexPiNum( Abc_Frame_t * p )         { return s_GlobalFrame->pCex->nPis;   }               Abc_FrameReadCexPiNum84,4410
int         Abc_FrameReadCexRegNum( Abc_Frame_t * p )        { return s_GlobalFrame->pCex->nRegs;  }               Abc_FrameReadCexRegNum85,4526
int         Abc_FrameReadCexPo( Abc_Frame_t * p )            { return s_GlobalFrame->pCex->iPo;    }               Abc_FrameReadCexPo86,4642
int         Abc_FrameReadCexFrame( Abc_Frame_t * p )         { return s_GlobalFrame->pCex->iFrame; }               Abc_FrameReadCexFrame87,4758
void        Abc_FrameInputNdr( Abc_Frame_t * pAbc, void * pData ) { Ndr_Delete(s_GlobalFrame->pNdr); s_GlobalFrame->pNdr = pData;                        }Abc_FrameInputNdr89,4875
void *      Abc_FrameOutputNdr( Abc_Frame_t * pAbc )         { void * pData = s_GlobalFrame->pNdr; s_GlobalFrame->pNdr = NULL; return pData;             }  Abc_FrameOutputNdr90,5030
int *       Abc_FrameOutputNdrArray( Abc_Frame_t * pAbc )    { int * pArray = s_GlobalFrame->pNdrArray; s_GlobalFrame->pNdrArray = NULL; return pArray;  }Abc_FrameOutputNdrArray91,5187
void        Abc_FrameSetLibLut( void * pLib )                { s_GlobalFrame->pLibLut   = pLib;    } Abc_FrameSetLibLut93,5343
void        Abc_FrameSetLibBox( void * pLib )                { s_GlobalFrame->pLibBox   = pLib;    } Abc_FrameSetLibBox94,5445
void        Abc_FrameSetLibGen( void * pLib )                { s_GlobalFrame->pLibGen   = pLib;    } Abc_FrameSetLibGen95,5547
void        Abc_FrameSetLibGen2( void * pLib )               { s_GlobalFrame->pLibGen2  = pLib;    } Abc_FrameSetLibGen296,5649
void        Abc_FrameSetLibSuper( void * pLib )              { s_GlobalFrame->pLibSuper = pLib;    } Abc_FrameSetLibSuper97,5751
void        Abc_FrameSetFlag( char * pFlag, char * pValue )  { Cmd_FlagUpdateValue( s_GlobalFrame, pFlag, pValue );               } Abc_FrameSetFlag98,5853
void        Abc_FrameSetCex( Abc_Cex_t * pCex )              { ABC_FREE( s_GlobalFrame->pCex ); s_GlobalFrame->pCex = pCex;       }Abc_FrameSetCex99,5986
void        Abc_FrameSetNFrames( int nFrames )               { ABC_FREE( s_GlobalFrame->pCex ); s_GlobalFrame->nFrames = nFrames; }Abc_FrameSetNFrames100,6118
void        Abc_FrameSetStatus( int Status )                 { ABC_FREE( s_GlobalFrame->pCex ); s_GlobalFrame->Status = Status;   }Abc_FrameSetStatus101,6250
void        Abc_FrameSetManDsd( void * pMan )                { if (s_GlobalFrame->pManDsd  && s_GlobalFrame->pManDsd  != pMan) If_DsdManFree((If_DsdMan_t *)s_GlobalFrame->pManDsd,  0); s_GlobalFrame->pManDsd = pMan;  }Abc_FrameSetManDsd102,6382
void        Abc_FrameSetManDsd2( void * pMan )               { if (s_GlobalFrame->pManDsd2 && s_GlobalFrame->pManDsd2 != pMan) If_DsdManFree((If_DsdMan_t *)s_GlobalFrame->pManDsd2, 0); s_GlobalFrame->pManDsd2 = pMan; }Abc_FrameSetManDsd2103,6601
void        Abc_FrameSetInv( Vec_Int_t * vInv )              { Vec_IntFreeP(&s_GlobalFrame->pAbcWlcInv); s_GlobalFrame->pAbcWlcInv = vInv; }Abc_FrameSetInv104,6820
void        Abc_FrameSetJsonStrs( Abc_Nam_t * pStrs )        { Abc_NamDeref( s_GlobalFrame->pJsonStrs ); s_GlobalFrame->pJsonStrs = pStrs; }Abc_FrameSetJsonStrs105,6961
void        Abc_FrameSetJsonObjs( Vec_Wec_t * vObjs )        { Vec_WecFreeP(&s_GlobalFrame->vJsonObjs ); s_GlobalFrame->vJsonObjs = vObjs; }Abc_FrameSetJsonObjs106,7102
void        Abc_FrameSetSignalNames( Vec_Ptr_t * vNames )    { if ( s_GlobalFrame->vSignalNames ) Vec_PtrFreeFree( s_GlobalFrame->vSignalNames ); s_GlobalFrame->vSignalNames = vNames; }Abc_FrameSetSignalNames107,7243
void        Abc_FrameSetSpecName( char * pFileName )         { ABC_FREE( s_GlobalFrame->pSpecName ); s_GlobalFrame->pSpecName = pFileName; }Abc_FrameSetSpecName108,7429
int         Abc_FrameIsBatchMode()                           { return s_GlobalFrame ? s_GlobalFrame->fBatchMode : 0;              } Abc_FrameIsBatchMode110,7571
int         Abc_FrameIsBridgeMode()                          { return s_GlobalFrame ? s_GlobalFrame->fBridgeMode : 0;             } Abc_FrameIsBridgeMode112,7705
void        Abc_FrameSetBridgeMode()                         { if ( s_GlobalFrame ) s_GlobalFrame->fBridgeMode = 1;               } Abc_FrameSetBridgeMode113,7838
char *      Abc_FrameReadDrivingCell()                       { return s_GlobalFrame->pDrivingCell;    }              Abc_FrameReadDrivingCell115,7972
float       Abc_FrameReadMaxLoad()                           { return s_GlobalFrame->MaxLoad;         }      Abc_FrameReadMaxLoad116,8090
void        Abc_FrameSetDrivingCell( char * pName )          { ABC_FREE(s_GlobalFrame->pDrivingCell); s_GlobalFrame->pDrivingCell   = pName; }      Abc_FrameSetDrivingCell117,8200
void        Abc_FrameSetMaxLoad( float Load )                { s_GlobalFrame->MaxLoad = Load;         }      Abc_FrameSetMaxLoad118,8349
int *       Abc_FrameReadArrayMapping( Abc_Frame_t * pAbc )  { return pAbc->pArray;                                            }Abc_FrameReadArrayMapping120,8460
void        Abc_FrameSetArrayMapping( int * p )              { ABC_FREE( s_GlobalFrame->pArray ); s_GlobalFrame->pArray = p;   }      Abc_FrameSetArrayMapping121,8589
int *       Abc_FrameReadBoxes( Abc_Frame_t * pAbc )         { return pAbc->pBoxes;                                            }Abc_FrameReadBoxes123,8725
void        Abc_FrameSetBoxes( int * p )                     { ABC_FREE( s_GlobalFrame->pBoxes ); s_GlobalFrame->pBoxes = p;   }      Abc_FrameSetBoxes124,8854
int Abc_FrameIsFlagEnabled( char * pFlag )Abc_FrameIsFlagEnabled137,9287
Abc_Frame_t * Abc_FrameAllocate()Abc_FrameAllocate161,9897
void Abc_FrameDeallocate( Abc_Frame_t * p )Abc_FrameDeallocate203,10935
void Abc_FrameRestart( Abc_Frame_t * p )Abc_FrameRestart275,13318
void Abc_FrameClearVerifStatus( Abc_Frame_t * p )Abc_FrameClearVerifStatus290,13598
int Abc_FrameShowProgress( Abc_Frame_t * p )Abc_FrameShowProgress308,13954
Abc_Ntk_t * Abc_FrameReadNtk( Abc_Frame_t * p )Abc_FrameReadNtk325,14291
Gia_Man_t * Abc_FrameReadGia( Abc_Frame_t * p )Abc_FrameReadGia341,14601
FILE * Abc_FrameReadOut( Abc_Frame_t * p )Abc_FrameReadOut357,14908
FILE * Abc_FrameReadErr( Abc_Frame_t * p )Abc_FrameReadErr373,15209
int Abc_FrameReadMode( Abc_Frame_t * p )Abc_FrameReadMode389,15510
int Abc_FrameSetMode( Abc_Frame_t * p, int fNameMode )Abc_FrameSetMode412,16001
void Abc_FrameSetCurrentNetwork( Abc_Frame_t * p, Abc_Ntk_t * pNtkNew )Abc_FrameSetCurrentNetwork439,16836
void Abc_FrameSwapCurrentAndBackup( Abc_Frame_t * p )Abc_FrameSwapCurrentAndBackup494,18461
void Abc_FrameReplaceCurrentNetwork( Abc_Frame_t * p, Abc_Ntk_t * pNtk )Abc_FrameReplaceCurrentNetwork536,19617
void Abc_FrameUnmapAllNetworks( Abc_Frame_t * p )Abc_FrameUnmapAllNetworks575,20843
void Abc_FrameDeleteAllNetworks( Abc_Frame_t * p )Abc_FrameDeleteAllNetworks594,21294
void Abc_FrameSetGlobalFrame( Abc_Frame_t * p )Abc_FrameSetGlobalFrame625,22158
Abc_Frame_t * Abc_FrameGetGlobalFrame()Abc_FrameGetGlobalFrame641,22468
Abc_Frame_t * Abc_FrameReadGlobalFrame()Abc_FrameReadGlobalFrame664,22966
void Abc_FrameSetSave1( void * pAig )Abc_FrameSetSave1680,23272
void Abc_FrameSetSave2( void * pAig )Abc_FrameSetSave2699,23708
void * Abc_FrameReadSave1()  { void * pAig = Abc_FrameGetGlobalFrame()->pSave1; Abc_FrameGetGlobalFrame()->pSave1 = NULL; return pAig; }Abc_FrameReadSave1718,24144
void * Abc_FrameReadSave2()  { void * pAig = Abc_FrameGetGlobalFrame()->pSave2; Abc_FrameGetGlobalFrame()->pSave2 = NULL; return pAig; }Abc_FrameReadSave2719,24281
int Abc_FrameCheckPoConst( Abc_Frame_t * p, int iPoNum )Abc_FrameCheckPoConst732,24714
void Abc_FrameCheckPoConstTest( Abc_Frame_t * p )Abc_FrameCheckPoConstTest746,25133

src/base/main/abcapis.h,394
#define MINI_AIG__abc_apis_hMINI_AIG__abc_apis_h22,570
typedef struct Abc_Frame_t_      Abc_Frame_t;Abc_Frame_t38,1288
    #define ABC_DLLEXPORTABC_DLLEXPORT46,1590
    #define ABC_DLLIMPORTABC_DLLIMPORT47,1616
    #define ABC_DLLEXPORT ABC_DLLEXPORT49,1650
    #define ABC_DLLIMPORT ABC_DLLIMPORT50,1698
#define ABC_DLLIMPORTABC_DLLIMPORT53,1783
#define ABC_DLL ABC_DLL57,1850

src/base/main/mainMC.c,49
int main( int argc, char * argv[] )main49,1357

src/base/main/libSupport.c,629
#define WIN32WIN3230,657
#define RTLD_LOCAL RTLD_LOCAL42,844
#define MAX_LIBS MAX_LIBS47,882
static void* libHandles[MAX_LIBS+1]; // will be null terminatedlibHandles48,903
typedef void (*lib_init_end_func) (Abc_Frame_t * pAbc);lib_init_end_func50,968
void open_libs() {open_libs55,1320
void close_libs() {close_libs135,3918
void* get_fnct_ptr(int lib_num, char* sym_name) {get_fnct_ptr152,4500
void call_inits(Abc_Frame_t* pAbc) {call_inits164,4974
void call_ends(Abc_Frame_t* pAbc) {call_ends180,5598
void Libs_Init(Abc_Frame_t * pAbc)Libs_Init193,5946
void Libs_End(Abc_Frame_t * pAbc)Libs_End199,6025

src/base/main/mainInit.c,382
static Abc_FrameInitializer_t* s_InitializerStart = NULL;s_InitializerStart69,2481
static Abc_FrameInitializer_t* s_InitializerEnd = NULL;s_InitializerEnd70,2539
void Abc_FrameAddInitializer( Abc_FrameInitializer_t* p )Abc_FrameAddInitializer72,2596
void Abc_FrameInit( Abc_Frame_t * pAbc )Abc_FrameInit102,3346
void Abc_FrameEnd( Abc_Frame_t * pAbc )Abc_FrameEnd140,4211

src/bdd/mtr/mtrInt.h,64
#define ABC__bdd__mtr__mtrInt_hABC__bdd__mtr__mtrInt_h52,2058

src/bdd/mtr/mtrBasic.c,595
static char rcsid[] MTR_UNUSED = "$Id: mtrBasic.c,v 1.13 2009/02/20 02:03:47 fabio Exp $";MTR_UNUSED85,3469
Mtr_AllocNode(void)Mtr_AllocNode118,4790
Mtr_DeallocNode(Mtr_DeallocNode140,5184
Mtr_InitTree(void)Mtr_InitTree161,5680
Mtr_FreeTree(Mtr_FreeTree188,6212
Mtr_CopyTree(Mtr_CopyTree215,6943
Mtr_MakeFirstChild(Mtr_MakeFirstChild269,8394
Mtr_MakeLastChild(Mtr_MakeLastChild300,9084
Mtr_CreateFirstChild(Mtr_CreateFirstChild337,9980
Mtr_CreateLastChild(Mtr_CreateLastChild366,10719
Mtr_MakeNextSibling(Mtr_MakeNextSibling395,11392
Mtr_PrintTree(Mtr_PrintTree423,12004

src/bdd/mtr/mtrGroup.c,438
static char rcsid[] MTR_UNUSED = "$Id: mtrGroup.c,v 1.18 2009/02/20 02:03:47 fabio Exp $";MTR_UNUSED85,3445
Mtr_InitGroupTree(Mtr_InitGroupTree121,4911
Mtr_MakeGroup(Mtr_MakeGroup158,6153
Mtr_DissolveGroup(Mtr_DissolveGroup357,12967
Mtr_FindGroup(Mtr_FindGroup409,14470
Mtr_SwapGroups(Mtr_SwapGroups470,16358
Mtr_PrintGroups(Mtr_PrintGroups537,18178
Mtr_ReadGroups(Mtr_ReadGroups611,20599
mtrShiftHL(mtrShiftHL706,23505

src/bdd/mtr/mtr.h,1021
#define ABC__bdd__mtr__mtr_hABC__bdd__mtr__mtr_h60,2533
#define SIZEOF_VOID_P SIZEOF_VOID_P73,3095
#define SIZEOF_INT SIZEOF_INT76,3145
#define MTR_INLINE MTR_INLINE87,3391
#   define MTR_UNUSED MTR_UNUSED89,3462
#define MTR_DEFAULT MTR_DEFAULT99,3621
#define MTR_TERMINAL MTR_TERMINAL100,3656
#define MTR_SOFT MTR_SOFT101,3691
#define MTR_FIXED MTR_FIXED102,3726
#define MTR_NEWNODE MTR_NEWNODE103,3761
#define MTR_MAXHIGH MTR_MAXHIGH110,3991
typedef unsigned int   MtrHalfWord;MtrHalfWord126,4624
typedef struct MtrNode {MtrNode131,4710
    MtrHalfWord flags;flags132,4735
    MtrHalfWord low;low133,4758
    MtrHalfWord size;size134,4779
    MtrHalfWord index;index135,4801
    struct MtrNode *parent;parent136,4824
    struct MtrNode *child;child137,4852
    struct MtrNode *elder;elder138,4879
    struct MtrNode *younger;younger139,4906
} MtrNode;MtrNode140,4935
#define MTR_SET(MTR_SET153,5462
#define MTR_RESET(MTR_RESET154,5526
#define MTR_TEST(MTR_TEST155,5584

src/bdd/dsd/dsdApi.c,1354
Dsd_Type_t    Dsd_NodeReadType( Dsd_Node_t * p )         { return p->Type;     } Dsd_NodeReadType53,1938
DdNode *      Dsd_NodeReadFunc( Dsd_Node_t * p )         { return p->G;        } Dsd_NodeReadFunc54,2020
DdNode *      Dsd_NodeReadSupp( Dsd_Node_t * p )         { return p->S;        } Dsd_NodeReadSupp55,2102
Dsd_Node_t ** Dsd_NodeReadDecs( Dsd_Node_t * p )         { return p->pDecs;    } Dsd_NodeReadDecs56,2184
Dsd_Node_t *  Dsd_NodeReadDec ( Dsd_Node_t * p, int i )  { return p->pDecs[i]; } Dsd_NodeReadDec57,2266
int           Dsd_NodeReadDecsNum( Dsd_Node_t * p )      { return p->nDecs;    } Dsd_NodeReadDecsNum58,2348
int           Dsd_NodeReadMark( Dsd_Node_t * p )         { return p->Mark;     } Dsd_NodeReadMark59,2430
void          Dsd_NodeSetMark( Dsd_Node_t * p, int Mark ){ p->Mark = Mark;     } Dsd_NodeSetMark77,3148
Dsd_Node_t *  Dsd_ManagerReadRoot( Dsd_Manager_t * pMan, int i )  { return pMan->pRoots[i];  } Dsd_ManagerReadRoot93,3702
Dsd_Node_t *  Dsd_ManagerReadInput( Dsd_Manager_t * pMan, int i ) { return pMan->pInputs[i]; } Dsd_ManagerReadInput94,3798
Dsd_Node_t *  Dsd_ManagerReadConst1( Dsd_Manager_t * pMan )       { return pMan->pConst1;    } Dsd_ManagerReadConst195,3894
DdManager *   Dsd_ManagerReadDd( Dsd_Manager_t * pMan )           { return pMan->dd;         } Dsd_ManagerReadDd96,3990

src/bdd/dsd/dsdCheck.c,968
typedef struct Dsd_Cache_t_  Dds_Cache_t;Dds_Cache_t28,768
typedef struct Dsd_Entry_t_  Dsd_Entry_t;Dsd_Entry_t29,810
struct Dsd_Cache_t_Dsd_Cache_t_31,853
    Dsd_Entry_t *     pTable;pTable33,875
    int               nTableSize;nTableSize34,905
    int               nSuccess;nSuccess35,939
    int               nFailure;nFailure36,971
struct Dsd_Entry_t_Dsd_Entry_t_39,1007
    DdNode * bX[5];bX41,1029
static Dds_Cache_t * pCache;pCache44,1053
void Dsd_CheckCacheAllocate( int nEntries )Dsd_CheckCacheAllocate63,1687
void Dsd_CheckCacheDeallocate()Dsd_CheckCacheDeallocate97,2736
void Dsd_CheckCacheClear()Dsd_CheckCacheClear114,3085
int Dsd_CheckRootFunctionIdentity( DdManager * dd, DdNode * bF1, DdNode * bF2, DdNode * bC1, DdNode * bC2 )Dsd_CheckRootFunctionIdentity133,3505
int Dsd_CheckRootFunctionIdentity_rec( DdManager * dd, DdNode * bF1, DdNode * bF2, DdNode * bC1, DdNode * bC2 )Dsd_CheckRootFunctionIdentity_rec154,4174

src/bdd/dsd/dsdInt.h,1436
#define ABC__bdd__dsd__dsdInt_hABC__bdd__dsd__dsdInt_h20,514
typedef unsigned char byte;byte33,849
struct Dsd_Manager_t_ Dsd_Manager_t_40,1113
    DdManager *    dd;         // the BDD managerdd42,1138
    st__table *     Table;      // the mapping of BDDs into their DEsTable43,1188
    int            nInputs;    // the number of primary inputsnInputs44,1258
    int            nRoots;     // the number of primary outputsnRoots45,1321
    int            nRootsAlloc;// the number of primary outputsnRootsAlloc46,1385
    Dsd_Node_t **  pInputs;    // the primary input nodespInputs47,1449
    Dsd_Node_t **  pRoots;     // the primary output nodespRoots48,1507
    Dsd_Node_t *   pConst1;    // the constant nodepConst149,1566
    int            fVerbose;   // the verbosity level fVerbose50,1618
struct Dsd_Node_t_Dsd_Node_t_54,1689
    Dsd_Type_t     Type;       // decomposition typeType56,1710
    DdNode *       G;          // function of the node   G57,1763
    DdNode *       S;          // support of this functionS58,1821
    Dsd_Node_t **  pDecs;      // pointer to structures for formal inputspDecs59,1880
    int            Mark;       // the mark used by CASE 4 of disjoint decompositionMark60,1954
    short          nDecs;      // the number of formal inputsnDecs61,2038
    short          nVisits;    // the counter of visitsnVisits62,2100
#define MAXINPUTS MAXINPUTS69,2380

src/bdd/dsd/dsdProc.c,2295
static int s_Mark;s_Mark51,2206
static int Depth = 0;Depth56,2305
static int s_Loops1;s_Loops158,2328
static int s_Loops2;s_Loops259,2349
static int s_Loops3;s_Loops360,2370
static int s_Common;s_Common61,2391
static int s_CommonNo;s_CommonNo62,2412
static int s_Case4Calls;s_Case4Calls64,2436
static int s_Case4CallsSpecial;s_Case4CallsSpecial65,2461
static int   s_nDecBlocks;s_nDecBlocks71,2572
static int   s_nLiterals;s_nLiterals72,2599
static int   s_nExorGates; s_nExorGates73,2625
static int   s_nReusedBlocks;s_nReusedBlocks74,2653
static int   s_nCascades;s_nCascades75,2683
static int   s_nPrimeBlocks;s_nPrimeBlocks76,2709
static int HashSuccess = 0;HashSuccess78,2739
static int HashFailure = 0;HashFailure79,2767
static int s_CacheEntries;s_CacheEntries81,2796
void Dsd_Decompose( Dsd_Manager_t * pDsdMan, DdNode ** pbFuncs, int nFuncs )Dsd_Decompose113,4413
Dsd_Node_t * Dsd_DecomposeOne( Dsd_Manager_t * pDsdMan, DdNode * bFunc )Dsd_DecomposeOne230,8622
Dsd_Node_t * dsdKernelDecompose_rec( Dsd_Manager_t * pDsdMan, DdNode * bFunc0 )dsdKernelDecompose_rec246,9053
Dsd_Node_t * dsdKernelFindContainingComponent( Dsd_Manager_t * pDsdMan, Dsd_Node_t * pWhere, DdNode * Var, int * fPolarity )dsdKernelFindContainingComponent1300,54925
int dsdKernelFindCommonComponents( Dsd_Manager_t * pDsdMan, Dsd_Node_t * pL, Dsd_Node_t * pH, Dsd_Node_t *** pCommon, Dsd_Node_t ** pLastDiffL, Dsd_Node_t ** pLastDiffH )dsdKernelFindCommonComponents1340,56181
void dsdKernelComputeSumOfComponents( Dsd_Manager_t * pDsdMan, Dsd_Node_t ** pCommon, int nCommon, DdNode ** pCompF, DdNode ** pCompS, int fExor )dsdKernelComputeSumOfComponents1425,58706
int dsdKernelCheckContainment( Dsd_Manager_t * pDsdMan, Dsd_Node_t * pL, Dsd_Node_t * pH, Dsd_Node_t ** pLarge, Dsd_Node_t ** pSmall )dsdKernelCheckContainment1483,60503
void dsdKernelCopyListPlusOne( Dsd_Node_t * p, Dsd_Node_t * First, Dsd_Node_t ** ppList, int nListSize )dsdKernelCopyListPlusOne1518,61346
void dsdKernelCopyListPlusOneMinusOne( Dsd_Node_t * p, Dsd_Node_t * First, Dsd_Node_t ** ppList, int nListSize, int iSkipped )dsdKernelCopyListPlusOneMinusOne1538,61891
int dsdKernelVerifyDecomposition( Dsd_Manager_t * pDsdMan, Dsd_Node_t * pDE )dsdKernelVerifyDecomposition1559,62540

src/bdd/dsd/dsdLocal.c,320
DdNode * Dsd_TreeGetPrimeFunction( DdManager * dd, Dsd_Node_t * pNode ) Dsd_TreeGetPrimeFunction54,2006
DdNode * Extra_dsdRemap( DdManager * dd, DdNode * bF, st__table * pCache,Extra_dsdRemap146,4969
DdNode * Extra_bddNodePointedByCube( DdManager * dd, DdNode * bF, DdNode * bC )Extra_bddNodePointedByCube198,6529

src/bdd/dsd/dsdMan.c,174
Dsd_Manager_t * Dsd_ManagerStart( DdManager * dd, int nSuppMax, int fVerbose )Dsd_ManagerStart47,1559
void Dsd_ManagerStop( Dsd_Manager_t * dMan )Dsd_ManagerStop100,3466

src/bdd/dsd/dsd.h,800
#define ABC__bdd__dsd__dsd_hABC__bdd__dsd__dsd_h29,1037
enum Dsd_Type_t_ { Dsd_Type_t_46,1561
    DSD_NODE_NONE   = 0,DSD_NODE_NONE47,1581
    DSD_NODE_CONST1 = 1,DSD_NODE_CONST148,1606
    DSD_NODE_BUF    = 2,DSD_NODE_BUF49,1631
    DSD_NODE_OR     = 3,DSD_NODE_OR50,1656
    DSD_NODE_EXOR   = 4,DSD_NODE_EXOR51,1681
    DSD_NODE_PRIME  = 5,DSD_NODE_PRIME52,1706
typedef struct Dsd_Manager_t_   Dsd_Manager_t;Dsd_Manager_t59,1955
typedef struct Dsd_Node_t_      Dsd_Node_t;Dsd_Node_t60,2002
typedef enum   Dsd_Type_t_      Dsd_Type_t;Dsd_Type_t61,2046
#define Dsd_IsComplement(Dsd_IsComplement68,2381
#define Dsd_Regular(Dsd_Regular69,2446
#define Dsd_Not(Dsd_Not70,2519
#define Dsd_NotCond(Dsd_NotCond71,2591
#define Dsd_NodeForEachChild(Dsd_NodeForEachChild78,2920

src/bdd/dsd/dsdTree.c,3205
static int s_DepthMax;s_DepthMax43,1794
static int s_GateSizeMax;s_GateSizeMax44,1817
Dsd_Node_t * Dsd_TreeNodeCreate( int Type, int nDecs, int BlockNum )Dsd_TreeNodeCreate61,2318
void Dsd_TreeNodeDelete( DdManager * dd, Dsd_Node_t * pNode )Dsd_TreeNodeDelete87,3112
void Dsd_TreeUnmark( Dsd_Manager_t * pDsdMan )Dsd_TreeUnmark107,3685
void Dsd_TreeUnmark_rec( Dsd_Node_t * pNode )Dsd_TreeUnmark_rec127,4178
void Dsd_TreeNodeGetInfo( Dsd_Manager_t * pDsdMan, int * DepthMax, int * GateSizeMax )Dsd_TreeNodeGetInfo156,5045
void Dsd_TreeNodeGetInfoOne( Dsd_Node_t * pNode, int * DepthMax, int * GateSizeMax )Dsd_TreeNodeGetInfoOne183,5791
void Dsd_TreeGetInfo_rec( Dsd_Node_t * pNode, int RankCur )Dsd_TreeGetInfo_rec212,6681
int Dsd_TreeGetAigCost_rec( Dsd_Node_t * pNode )Dsd_TreeGetAigCost_rec255,7768
int Dsd_TreeGetAigCost( Dsd_Node_t * pNode )Dsd_TreeGetAigCost291,8818
int Dsd_TreeCountNonTerminalNodes( Dsd_Manager_t * pDsdMan )Dsd_TreeCountNonTerminalNodes310,9388
int Dsd_TreeCountNonTerminalNodesOne( Dsd_Node_t * pRoot )Dsd_TreeCountNonTerminalNodesOne331,9911
int Dsd_TreeCountNonTerminalNodes_rec( Dsd_Node_t * pNode )Dsd_TreeCountNonTerminalNodes_rec354,10472
int Dsd_TreeCountPrimeNodes( Dsd_Manager_t * pDsdMan )Dsd_TreeCountPrimeNodes389,11403
int Dsd_TreeCountPrimeNodesOne( Dsd_Node_t * pRoot )Dsd_TreeCountPrimeNodesOne410,11946
int Dsd_TreeCountPrimeNodes_rec( Dsd_Node_t * pNode )Dsd_TreeCountPrimeNodes_rec433,12456
int Dsd_TreeCollectDecomposableVars( Dsd_Manager_t * pDsdMan, int * pVars )Dsd_TreeCollectDecomposableVars470,13358
int Dsd_TreeCollectDecomposableVars_rec( DdManager * dd, Dsd_Node_t * pNode, int * pVars, int * nVars )Dsd_TreeCollectDecomposableVars_rec494,14170
Dsd_Node_t ** Dsd_TreeCollectNodesDfs( Dsd_Manager_t * pDsdMan, int * pnNodes )Dsd_TreeCollectNodesDfs555,15902
Dsd_Node_t ** Dsd_TreeCollectNodesDfsOne( Dsd_Manager_t * pDsdMan, Dsd_Node_t * pNode, int * pnNodes )Dsd_TreeCollectNodesDfsOne585,16903
void Dsd_TreeCollectNodesDfs_rec( Dsd_Node_t * pNode, Dsd_Node_t * ppNodes[], int * pnNodes )Dsd_TreeCollectNodesDfs_rec611,17629
void Dsd_TreePrint( FILE * pFile, Dsd_Manager_t * pDsdMan, char * pInputNames[], char * pOutputNames[], int fShortNames, int Output )Dsd_TreePrint641,18497
void Dsd_TreePrint_rec( FILE * pFile, Dsd_Node_t * pNode, int fComp, char * pInputNames[], char * pOutputName, int nOffset, int * pSigCounter, int fShortNames )Dsd_TreePrint_rec675,19560
word Dsd_TreeFunc2Truth_rec( DdManager * dd, DdNode * bFunc )Dsd_TreeFunc2Truth_rec837,25251
void Dsd_TreePrint2_rec( FILE * pFile, DdManager * dd, Dsd_Node_t * pNode, int fComp, char * pInputNames[] )Dsd_TreePrint2_rec853,25793
void Dsd_TreePrint2( FILE * pFile, Dsd_Manager_t * pDsdMan, char * pInputNames[], char * pOutputNames[], int Output )Dsd_TreePrint2917,28481
void Dsd_NodePrint( FILE * pFile, Dsd_Node_t * pNode )Dsd_NodePrint949,29541
void Dsd_NodePrint_rec( FILE * pFile, Dsd_Node_t * pNode, int fComp, char * pOutputName, int nOffset, int * pSigCounter )Dsd_NodePrint_rec968,30037
DdNode * Dsd_TreeGetPrimeFunctionOld( DdManager * dd, Dsd_Node_t * pNode, int fRemap ) Dsd_TreeGetPrimeFunctionOld1120,35235

src/bdd/cudd/cuddSubsetHB.c,2982
#define DBL_MAX_EXP DBL_MAX_EXP74,2802
#define DEFAULT_PAGE_SIZE DEFAULT_PAGE_SIZE87,3158
#define DEFAULT_NODE_DATA_PAGE_SIZE DEFAULT_NODE_DATA_PAGE_SIZE88,3189
#define INITIAL_PAGES INITIAL_PAGES89,3230
struct NodeData {NodeData103,3857
    double *mintermPointer;mintermPointer104,3875
    int *nodesPointer;nodesPointer105,3903
    int *lightChildNodesPointer;lightChildNodesPointer106,3926
typedef struct NodeData NodeData_t;NodeData_t113,4204
static char rcsid[] DD_UNUSED = "$Id: cuddSubsetHB.c,v 1.37 2009/02/20 02:14:58 fabio Exp $";DD_UNUSED120,4495
static int memOut;memOut123,4597
static  int             num_calls;num_calls125,4629
static  DdNode          *zero, *one; /* constant functions */zero128,4672
static  DdNode          *zero, *one; /* constant functions */one128,4672
static  double          **mintermPages; /* pointers to the pages */mintermPages129,4734
static  int             **nodePages; /* pointers to the pages */nodePages130,4802
static  int             **lightNodePages; /* pointers to the pages */lightNodePages131,4867
static  double          *currentMintermPage; /* pointer to the currentcurrentMintermPage132,4937
static  double          max; /* to store the 2^n value of the numbermax134,5067
static  int             *currentNodePage; /* pointer to the currentcurrentNodePage137,5185
static  int             *currentLightNodePage; /* pointer to thecurrentLightNodePage139,5312
static  int             pageIndex; /* index to next element */pageIndex141,5444
static  int             page; /* index to current page */page142,5507
static  int             pageSize = DEFAULT_PAGE_SIZE; /* page size */pageSize143,5565
static  int             maxPages; /* number of page pointers */maxPages144,5635
static  NodeData_t      *currentNodeDataPage; /* pointer to the currentcurrentNodeDataPage146,5700
static  int             nodeDataPage; /* index to next element */nodeDataPage148,5829
static  int             nodeDataPageIndex; /* index to next element */nodeDataPageIndex149,5895
static  NodeData_t      **nodeDataPages; /* index to current page */nodeDataPages150,5966
static  int             nodeDataPageSize = DEFAULT_NODE_DATA_PAGE_SIZE;nodeDataPageSize151,6035
static  int             maxNodeDataPages; /* number of page pointers */maxNodeDataPages153,6176
Cudd_SubsetHeavyBranch(Cudd_SubsetHeavyBranch209,9089
Cudd_SupersetHeavyBranch(Cudd_SupersetHeavyBranch259,11160
cuddSubsetHeavyBranch(cuddSubsetHeavyBranch305,12832
ResizeNodeDataPages(void)ResizeNodeDataPages474,17852
ResizeCountMintermPages(void)ResizeCountMintermPages533,19825
ResizeCountNodePages(void)ResizeCountNodePages590,21663
SubsetCountMintermAux(SubsetCountMintermAux680,24701
SubsetCountMinterm(SubsetCountMinterm791,28185
SubsetCountNodesAux(SubsetCountNodesAux872,30675
SubsetCountNodes(SubsetCountNodes1036,36137
StoreNodes(StoreNodes1113,38329
BuildSubsetBdd(BuildSubsetBdd1158,39608

src/bdd/cudd/cuddAddApply.c,987
static char rcsid[] DD_UNUSED = "$Id: cuddAddApply.c,v 1.18 2009/02/19 16:15:26 fabio Exp $";DD_UNUSED99,3926
Cudd_addApply(Cudd_addApply138,5602
Cudd_addPlus(Cudd_addPlus168,6244
Cudd_addTimes(Cudd_addTimes208,7208
Cudd_addThreshold(Cudd_addThreshold248,8173
Cudd_addSetNZ(Cudd_addSetNZ282,8993
Cudd_addDivide(Cudd_addDivide312,9674
Cudd_addMinus(Cudd_addMinus349,10594
Cudd_addMinimum(Cudd_addMinimum385,11478
Cudd_addMaximum(Cudd_addMaximum430,12555
Cudd_addOneZeroMaximum(Cudd_addOneZeroMaximum476,13650
Cudd_addDiff(Cudd_addDiff511,14499
Cudd_addAgreement(Cudd_addAgreement551,15471
Cudd_addOr(Cudd_addOr581,16185
Cudd_addNand(Cudd_addNand615,16935
Cudd_addNor(Cudd_addNor647,17654
Cudd_addXor(Cudd_addXor679,18369
Cudd_addXnor(Cudd_addXnor713,19190
Cudd_addMonadicApply(Cudd_addMonadicApply747,20061
Cudd_addLog(Cudd_addLog777,20757
cuddAddApplyRecur(cuddAddApplyRecur809,21671
cuddAddMonadicApplyRecur(cuddAddMonadicApplyRecur893,23572

src/bdd/cudd/cuddLCache.c,1542
#define DD_MAX_HASHTABLE_DENSITY DD_MAX_HASHTABLE_DENSITY86,3325
static char rcsid[] DD_UNUSED = "$Id: cuddLCache.c,v 1.24 2009/03/08 02:49:02 fabio Exp $";DD_UNUSED103,4139
#define ddLCHash2(ddLCHash2122,4825
#define ddLCHash2(ddLCHash2126,4948
#define ddLCHash3(ddLCHash3142,5356
cuddLocalCacheInit(cuddLocalCacheInit183,7101
cuddLocalCacheQuit(cuddLocalCacheQuit246,9153
cuddLocalCacheInsert(cuddLocalCacheInsert272,9736
cuddLocalCacheLookup(cuddLocalCacheLookup305,10587
cuddLocalCacheClearDead(cuddLocalCacheClearDead352,11847
cuddLocalCacheClearAll(cuddLocalCacheClearAll404,13271
#define DD_HYSTO_BINS DD_HYSTO_BINS420,13584
cuddLocalCacheProfile(cuddLocalCacheProfile435,13996
cuddHashTableInit(cuddHashTableInit538,16963
cuddHashTableQuit(cuddHashTableQuit595,18545
cuddHashTableInsert(cuddHashTableInsert648,19828
cuddHashTableLookup(cuddHashTableLookup703,21339
cuddHashTableInsert1(cuddHashTableInsert1767,22986
cuddHashTableLookup1(cuddHashTableLookup1819,24435
cuddHashTableInsert2(cuddHashTableInsert2874,25871
cuddHashTableLookup2(cuddHashTableLookup2928,27357
cuddHashTableInsert3(cuddHashTableInsert3984,28828
cuddHashTableLookup3(cuddHashTableLookup31040,30366
cuddLocalCacheResize(cuddLocalCacheResize1100,31920
ddLCHash(ddLCHash1182,34500
cuddLocalCacheAddToList(cuddLocalCacheAddToList1211,35090
cuddLocalCacheRemoveFromList(cuddLocalCacheRemoveFromList1235,35604
cuddHashTableResize(cuddHashTableResize1277,36627
cuddHashTableAlloc(cuddHashTableAlloc1393,40069

src/bdd/cudd/cuddCompose.c,1698
static char rcsid[] DD_UNUSED = "$Id: cuddCompose.c,v 1.45 2004/08/13 18:04:47 fabio Exp $";DD_UNUSED110,4700
static int addPermuteRecurHits;addPermuteRecurHits114,4817
static int bddPermuteRecurHits;bddPermuteRecurHits115,4849
static int bddVectorComposeHits;bddVectorComposeHits116,4881
static int addVectorComposeHits;addVectorComposeHits117,4914
static int addGeneralVectorComposeHits;addGeneralVectorComposeHits119,4948
Cudd_bddCompose(Cudd_bddCompose167,7425
Cudd_addCompose(Cudd_addCompose204,8385
Cudd_addPermute(Cudd_addPermute242,9398
Cudd_addSwapVariables(Cudd_addSwapVariables283,10585
Cudd_bddPermute(Cudd_bddPermute332,11831
Cudd_bddVarMap(Cudd_bddVarMap373,13023
Cudd_SetVarMap (Cudd_SetVarMap416,14741
Cudd_bddSwapVariables(Cudd_bddSwapVariables464,16162
Cudd_bddAdjPermuteX(Cudd_bddAdjPermuteX512,17356
Cudd_addVectorCompose(Cudd_addVectorCompose563,18743
Cudd_addGeneralVectorCompose(Cudd_addGeneralVectorCompose621,20614
Cudd_addNonSimCompose(Cudd_addNonSimCompose682,22619
Cudd_bddVectorCompose(Cudd_bddVectorCompose791,26248
cuddBddComposeRecur(cuddBddComposeRecur850,28000
cuddAddComposeRecur(cuddAddComposeRecur952,30736
cuddAddPermuteRecur(cuddAddPermuteRecur1057,33814
cuddBddPermuteRecur(cuddBddPermuteRecur1150,36866
cuddBddVarMapRecur(cuddBddVarMapRecur1232,39249
cuddAddVectorComposeRecur(cuddAddVectorComposeRecur1307,41288
cuddAddGeneralVectorComposeRecur(cuddAddGeneralVectorComposeRecur1383,43343
cuddAddNonSimComposeRecur(cuddAddNonSimComposeRecur1480,46141
cuddBddVectorComposeRecur(cuddBddVectorComposeRecur1640,50393
ddIsIthAddVar(ddIsIthAddVar1721,52689
ddIsIthAddVarPair(ddIsIthAddVarPair1746,53335

src/bdd/cudd/cuddCof.c,270
static char rcsid[] DD_UNUSED = "$Id: cuddCof.c,v 1.9 2004/08/13 18:04:47 fabio Exp $";DD_UNUSED86,3315
Cudd_Cofactor(Cudd_Cofactor123,4779
cuddGetBranches(cuddGetBranches162,5755
cuddCheckCube(cuddCheckCube193,6491
cuddCofactorRecur(cuddCofactorRecur230,7323

src/bdd/cudd/cuddAddAbs.c,531
static char rcsid[] DD_UNUSED = "$Id: cuddAddAbs.c,v 1.15 2004/08/13 18:04:45 fabio Exp $";DD_UNUSED89,3548
static  DdNode  *two;two92,3648
Cudd_addExistAbstract(Cudd_addExistAbstract129,5127
Cudd_addUnivAbstract(Cudd_addUnivAbstract178,6391
Cudd_addOrAbstract(Cudd_addOrAbstract216,7401
cuddAddExistAbstractRecur(cuddAddExistAbstractRecur256,8536
cuddAddUnivAbstractRecur(cuddAddUnivAbstractRecur361,11951
cuddAddOrAbstractRecur(cuddAddOrAbstractRecur469,15428
addCheckPositiveCube(addCheckPositiveCube570,18631

src/bdd/cudd/cuddAddIte.c,439
static char rcsid[] DD_UNUSED = "$Id: cuddAddIte.c,v 1.15 2004/08/13 18:04:45 fabio Exp $";DD_UNUSED90,3534
Cudd_addIte(Cudd_addIte129,5070
Cudd_addIteConstant(Cudd_addIteConstant163,6017
Cudd_addEvalConst(Cudd_addEvalConst260,8795
Cudd_addCmpl(Cudd_addCmpl347,11091
Cudd_addLeq(Cudd_addLeq376,11827
cuddAddIteRecur(cuddAddIteRecur445,13775
cuddAddCmplRecur(cuddAddCmplRecur562,16593
addVarToConst(addVarToConst625,18104

src/bdd/cudd/cuddZddGroup.c,1215
static char rcsid[] DD_UNUSED = "$Id: cuddZddGroup.c,v 1.20 2009/02/19 16:25:36 fabio Exp $";DD_UNUSED94,3854
static  int     *entry;entry97,3956
static  int     extsymmcalls;extsymmcalls100,4036
static  int     extsymm;extsymm101,4066
static  int     secdiffcalls;secdiffcalls102,4091
static  int     secdiff;secdiff103,4121
static  int     secdiffmisfire;secdiffmisfire104,4146
static  int     pr = 0; /* flag to enable printing while debugging */pr107,4201
Cudd_MakeZddTreeNode(Cudd_MakeZddTreeNode163,7050
cuddZddTreeSifting(cuddZddTreeSifting232,9449
zddTreeSiftingAux(zddTreeSiftingAux349,13416
zddCountInternalMtrNodes(zddCountInternalMtrNodes393,14529
zddReorderChildren(zddReorderChildren433,15642
zddFindNodeHiLo(zddFindNodeHiLo534,18654
zddUniqueCompareGroup(zddUniqueCompareGroup609,21208
zddGroupSifting(zddGroupSifting637,22021
zddGroupSiftingAux(zddGroupSiftingAux766,25733
zddGroupSiftingUp(zddGroupSiftingUp915,30370
zddGroupSiftingDown(zddGroupSiftingDown992,32694
zddGroupMove(zddGroupMove1078,35227
zddGroupMoveBackward(zddGroupMoveBackward1184,38349
zddGroupSiftingBackward(zddGroupSiftingBackward1258,40431
zddMergeGroups(zddMergeGroups1306,41799

src/bdd/cudd/cuddSubsetSP.c,2971
#define DEFAULT_PAGE_SIZE DEFAULT_PAGE_SIZE82,3073
#define DEFAULT_NODE_DIST_PAGE_SIZE DEFAULT_NODE_DIST_PAGE_SIZE83,3156
#define MAXSHORTINT MAXSHORTINT84,3239
#define INITIAL_PAGES INITIAL_PAGES89,3548
struct NodeDist{NodeDist100,4088
    DdHalfWord oddTopDist;oddTopDist101,4105
    DdHalfWord evenTopDist;evenTopDist102,4132
    DdHalfWord oddBotDist;oddBotDist103,4160
    DdHalfWord evenBotDist;evenBotDist104,4187
    DdNode *regResult;regResult105,4215
    DdNode *compResult;compResult106,4238
struct AssortedInfo {AssortedInfo110,4333
    unsigned int maxpath;maxpath111,4355
    int findShortestPath;findShortestPath112,4381
    int thresholdReached;thresholdReached113,4407
    st__table *maxpathTable;maxpathTable114,4433
    int threshold;threshold115,4462
typedef struct NodeDist NodeDist_t;NodeDist_t122,4726
static char rcsid[] DD_UNUSED = "$Id: cuddSubsetSP.c,v 1.34 2009/02/19 16:23:19 fabio Exp $";DD_UNUSED129,5017
static int numCalls;numCalls133,5135
static int hits;hits134,5156
static int thishit;thishit135,5173
static  int             memOut; /* flag to indicate out of memory */memOut139,5202
static  DdNode          *zero, *one; /* constant functions */zero140,5271
static  DdNode          *zero, *one; /* constant functions */one140,5271
static  NodeDist_t      **nodeDistPages; /* pointers to the pages */nodeDistPages142,5334
static  int             nodeDistPageIndex; /* index to next element */nodeDistPageIndex143,5403
static  int             nodeDistPage; /* index to current page */nodeDistPage144,5474
static  int             nodeDistPageSize = DEFAULT_NODE_DIST_PAGE_SIZE; /* page size */nodeDistPageSize145,5540
static  int             maxNodeDistPages; /* number of page pointers */maxNodeDistPages146,5628
static  NodeDist_t      *currentNodeDistPage; /* current page */currentNodeDistPage147,5700
static  DdNode          ***queuePages; /* pointers to the pages */queuePages149,5766
static  int             queuePageIndex; /* index to next element */queuePageIndex150,5833
static  int             queuePage; /* index to current page */queuePage151,5901
static  int             queuePageSize = DEFAULT_PAGE_SIZE; /* page size */queuePageSize152,5964
static  int             maxQueuePages; /* number of page pointers */maxQueuePages153,6039
static  DdNode          **currentQueuePage; /* current page */currentQueuePage154,6108
Cudd_SubsetShortPaths(Cudd_SubsetShortPaths212,9314
Cudd_SupersetShortPaths(Cudd_SupersetShortPaths264,11575
cuddSubsetShortPaths(cuddSubsetShortPaths308,13129
ResizeNodeDistPages(void)ResizeNodeDistPages504,19428
ResizeQueuePages(void)ResizeQueuePages566,21516
CreateTopDist(CreateTopDist627,23563
CreateBotDist(CreateBotDist828,32056
CreatePathTable(CreatePathTable1011,39015
AssessPathLength(AssessPathLength1163,43874
BuildSubsetBdd(BuildSubsetBdd1247,47730
stPathTableDdFree(stPathTableDdFree1635,62332

src/bdd/cudd/cuddBddIte.c,866
static char rcsid[] DD_UNUSED = "$Id: cuddBddIte.c,v 1.24 2004/08/13 18:04:46 fabio Exp $";DD_UNUSED103,3937
Cudd_bddIte(Cudd_bddIte143,5745
Cudd_bddIteConstant(Cudd_bddIteConstant174,6487
Cudd_bddIntersect(Cudd_bddIntersect282,9826
Cudd_bddAnd(Cudd_bddAnd314,10697
Cudd_bddAndLimit(Cudd_bddAndLimit346,11484
Cudd_bddOr(Cudd_bddOr381,12422
Cudd_bddNand(Cudd_bddNand413,13225
Cudd_bddNor(Cudd_bddNor445,14011
Cudd_bddXor(Cudd_bddXor476,14792
Cudd_bddXnor(Cudd_bddXnor507,15554
Cudd_bddLeq(Cudd_bddLeq536,16210
cuddBddIteRecur(cuddBddIteRecur633,19159
cuddBddIntersectRecur(cuddBddIntersectRecur771,22967
cuddBddAndRecur(cuddBddAndRecur886,25870
cuddBddXorRecur(cuddBddXorRecur1017,29114
bddVarToConst(bddVarToConst1138,32331
bddVarToCanonical(bddVarToCanonical1173,33241
bddVarToCanonicalSimple(bddVarToCanonicalSimple1275,36279

src/bdd/cudd/cuddZddLin.c,749
#define CUDD_SWAP_MOVE CUDD_SWAP_MOVE73,2813
#define CUDD_LINEAR_TRANSFORM_MOVE CUDD_LINEAR_TRANSFORM_MOVE74,2838
#define CUDD_INVERSE_TRANSFORM_MOVE CUDD_INVERSE_TRANSFORM_MOVE75,2875
static char rcsid[] DD_UNUSED = "$Id: cuddZddLin.c,v 1.14 2004/08/13 18:04:53 fabio Exp $";DD_UNUSED92,3652
static  int     zddTotalNumberLinearTr;zddTotalNumberLinearTr97,3820
static  DdNode  *empty;empty98,3860
cuddZddLinearSifting(cuddZddLinearSifting156,6233
cuddZddLinearInPlace(cuddZddLinearInPlace255,9080
cuddZddLinearAux(cuddZddLinearAux577,20168
cuddZddLinearUp(cuddZddLinearUp704,24129
cuddZddLinearDown(cuddZddLinearDown789,26537
cuddZddLinearBackward(cuddZddLinearBackward873,28971
cuddZddUndoMoves(cuddZddUndoMoves921,30333

src/bdd/cudd/cuddBddAbs.c,626
static char rcsid[] DD_UNUSED = "$Id: cuddBddAbs.c,v 1.26 2004/08/13 18:04:46 fabio Exp $";DD_UNUSED93,3666
Cudd_bddExistAbstract(Cudd_bddExistAbstract130,5182
Cudd_bddXorExistAbstract(Cudd_bddXorExistAbstract169,6301
Cudd_bddUnivAbstract(Cudd_bddUnivAbstract207,7313
Cudd_bddBooleanDiff(Cudd_bddBooleanDiff246,8354
Cudd_bddVarIsDependent(Cudd_bddVarIsDependent284,9292
cuddBddExistAbstractRecur(cuddBddExistAbstractRecur352,11339
cuddBddXorExistAbstractRecur(cuddBddXorExistAbstractRecur464,15069
cuddBddBooleanDiffRecur(cuddBddBooleanDiffRecur636,19610
bddCheckPositiveCube(bddCheckPositiveCube708,21793

src/bdd/cudd/cuddBridge.c,838
static char rcsid[] DD_UNUSED = "$Id: cuddBridge.c,v 1.19 2008/04/25 06:42:55 fabio Exp $";DD_UNUSED101,3850
Cudd_addBddThreshold(Cudd_addBddThreshold146,5870
Cudd_addBddStrictThreshold(Cudd_addBddStrictThreshold191,6965
Cudd_addBddInterval(Cudd_addBddInterval236,8120
Cudd_addBddIthBit(Cudd_addBddIthBit298,9841
Cudd_BddToAdd(Cudd_BddToAdd341,10855
Cudd_addBddPattern(Cudd_addBddPattern371,11586
Cudd_bddTransfer(Cudd_bddTransfer401,12321
cuddBddTransfer(cuddBddTransfer435,13311
cuddAddBddDoPattern(cuddAddBddDoPattern485,14728
addBddDoThreshold(addBddDoThreshold562,16763
addBddDoStrictThreshold(addBddDoStrictThreshold635,18589
addBddDoInterval(addBddDoInterval708,20462
addBddDoIthBit(addBddDoIthBit782,22298
ddBddToAddRecur(ddBddToAddRecur858,24176
cuddBddTransferRecur(cuddBddTransferRecur945,26206

src/bdd/cudd/cuddSolve.c,272
static char rcsid[] DD_UNUSED = "$Id: cuddSolve.c,v 1.12 2004/08/13 18:04:51 fabio Exp $";DD_UNUSED85,3326
Cudd_SolveEqn(Cudd_SolveEqn126,5056
Cudd_VerifySol(Cudd_VerifySol169,6265
cuddSolveEqnRecur(cuddSolveEqnRecur210,7439
cuddVerifySol(cuddVerifySol336,10607

src/bdd/cudd/cuddLevelQ.c,512
static char rcsid[] DD_UNUSED = "$Id: cuddLevelQ.c,v 1.13 2009/03/08 02:49:02 fabio Exp $";DD_UNUSED105,4485
#define lqHash(lqHash125,5228
#define lqHash(lqHash128,5310
cuddLevelQueueInit(cuddLevelQueueInit169,6950
cuddLevelQueueQuit(cuddLevelQueueQuit244,8959
cuddLevelQueueEnqueue(cuddLevelQueueEnqueue282,9944
cuddLevelQueueDequeue(cuddLevelQueueDequeue354,12082
hashLookup(hashLookup398,13420
hashInsert(hashInsert433,14258
hashDelete(hashDelete467,15071
hashResize(hashResize508,15998

src/bdd/cudd/cuddSat.c,1040
#define DD_BIGGY DD_BIGGY83,3134
typedef struct cuddPathPair {cuddPathPair93,3649
    int pos;pos94,3679
    int neg;neg95,3692
} cuddPathPair;cuddPathPair96,3705
static char rcsid[] DD_UNUSED = "$Id: cuddSat.c,v 1.36 2009/03/08 02:49:02 fabio Exp $";DD_UNUSED103,3976
static  DdNode  *one, *zero;one106,4073
static  DdNode  *one, *zero;zero106,4073
#define WEIGHT(WEIGHT112,4344
Cudd_Eval(Cudd_Eval149,6084
Cudd_ShortestPath(Cudd_ShortestPath193,7482
Cudd_LargestCube(Cudd_LargestCube277,9786
Cudd_ShortestLength(Cudd_ShortestLength349,11716
Cudd_Decreasing(Cudd_Decreasing409,13270
Cudd_Increasing(Cudd_Increasing489,15400
Cudd_EquivDC(Cudd_EquivDC514,16080
Cudd_bddLeqUnless(Cudd_bddLeqUnless614,18504
Cudd_EqualSupNorm(Cudd_EqualSupNorm788,23615
Cudd_bddMakePrime(Cudd_bddMakePrime856,25813
cuddBddMakePrime(cuddBddMakePrime892,26844
freePathPair(freePathPair956,28668
getShortest(getShortest989,29659
getPath(getPath1085,32501
getLargest(getLargest1178,35443
getCube(getCube1266,38129

src/bdd/cudd/cuddCheck.c,366
static char rcsid[] DD_UNUSED = "$Id: cuddCheck.c,v 1.35 2009/03/08 02:49:01 fabio Exp $";DD_UNUSED91,3528
Cudd_DebugCheck(Cudd_DebugCheck142,5403
Cudd_CheckKeys(Cudd_CheckKeys458,18211
cuddHeapProfile(cuddHeapProfile639,23937
cuddPrintNode(cuddPrintNode710,26072
cuddPrintVarGroups(cuddPrintVarGroups747,27259
debugFindParent(debugFindParent810,29341

src/bdd/cudd/cuddReorder.c,1286
#define DD_MAX_SUBTABLE_SPARSITY DD_MAX_SUBTABLE_SPARSITY86,3282
#define DD_SHRINK_FACTOR DD_SHRINK_FACTOR87,3317
static char rcsid[] DD_UNUSED = "$Id: cuddReorder.c,v 1.69 2009/02/21 18:24:10 fabio Exp $";DD_UNUSED102,4081
static  int     *entry;entry105,4182
int     ddTotalNumberSwapping;ddTotalNumberSwapping107,4207
int     ddTotalNISwaps;ddTotalNISwaps109,4254
Cudd_ReduceHeap(Cudd_ReduceHeap176,7077
Cudd_ShuffleHeap(Cudd_ShuffleHeap338,12023
cuddDynamicAllocNode(cuddDynamicAllocNode406,13914
cuddSifting(cuddSifting509,17695
cuddSwapping(cuddSwapping606,20322
cuddNextHigh(cuddNextHigh717,23274
cuddNextLow(cuddNextLow739,23733
cuddSwapInPlace(cuddSwapInPlace762,24379
cuddBddAlignToZdd(cuddBddAlignToZdd1252,42550
ddUniqueCompare(ddUniqueCompare1324,44939
ddSwapAny(ddSwapAny1348,45462
ddSiftingAux(ddSiftingAux1489,49524
ddSiftingUp(ddSiftingUp1596,53076
ddSiftingDown(ddSiftingDown1696,56154
ddSiftingBackward(ddSiftingBackward1788,58868
ddReorderPreprocess(ddReorderPreprocess1827,59957
ddReorderPostprocess(ddReorderPostprocess1865,60830
ddShuffle(ddShuffle1898,61717
ddSiftUp(ddSiftUp1975,63947
bddFixTree(bddFixTree2011,64761
ddUpdateMtrTree(ddUpdateMtrTree2045,65782
ddCheckPermuation(ddCheckPermuation2104,67300

src/bdd/cudd/cuddDecomp.c,1861
#define DEPTH DEPTH74,2923
#define THRESHOLD THRESHOLD75,2939
#define NONE NONE76,2960
#define PAIR_ST PAIR_ST77,2975
#define PAIR_CR PAIR_CR78,2993
#define G_ST G_ST79,3011
#define G_CR G_CR80,3026
#define H_ST H_ST81,3041
#define H_CR H_CR82,3056
#define BOTH_G BOTH_G83,3071
#define BOTH_H BOTH_H84,3088
typedef struct Conjuncts {Conjuncts93,3587
    DdNode *g;g94,3614
    DdNode *h;h95,3629
} Conjuncts;Conjuncts96,3644
typedef struct  NodeStat {NodeStat98,3658
    int distance;distance99,3685
    int localRef;localRef100,3703
} NodeStat;NodeStat101,3721
static char rcsid[] DD_UNUSED = "$Id: cuddDecomp.c,v 1.44 2004/08/13 18:04:47 fabio Exp $";DD_UNUSED109,3989
static  DdNode  *one, *zero;one112,4089
static  DdNode  *one, *zero;zero112,4089
long lastTimeG;lastTimeG113,4118
#define FactorsNotStored(FactorsNotStored120,4377
#define FactorsComplement(FactorsComplement122,4443
#define FactorsUncomplement(FactorsUncomplement124,4517
Cudd_bddApproxConjDecomp(Cudd_bddApproxConjDecomp175,7583
Cudd_bddApproxDisjDecomp(Cudd_bddApproxDisjDecomp273,10993
Cudd_bddIterConjDecomp(Cudd_bddIterConjDecomp313,12577
Cudd_bddIterDisjDecomp(Cudd_bddIterDisjDecomp456,17367
Cudd_bddGenConjDecomp(Cudd_bddGenConjDecomp496,18913
Cudd_bddGenDisjDecomp(Cudd_bddGenDisjDecomp575,21493
Cudd_bddVarConjDecomp(Cudd_bddVarConjDecomp615,23073
Cudd_bddVarDisjDecomp(Cudd_bddVarDisjDecomp733,26933
CreateBotDist(CreateBotDist772,28261
CountMinterms(CountMinterms841,30031
ConjunctsFree(ConjunctsFree904,31519
PairInTables(PairInTables944,32765
CheckTablesCacheAndReturn(CheckTablesCacheAndReturn994,34139
PickOnePair(PickOnePair1099,37371
CheckInTables(CheckInTables1217,40816
ZeroCase(ZeroCase1447,48132
BuildConjuncts(BuildConjuncts1685,56163
cuddConjunctsAux(cuddConjunctsAux2005,66744

src/bdd/cudd/cuddAddWalsh.c,227
static char rcsid[] DD_UNUSED = "$Id: cuddAddWalsh.c,v 1.10 2008/04/17 21:17:11 fabio Exp $";DD_UNUSED84,3261
Cudd_addWalsh(Cudd_addWalsh120,4697
Cudd_addResidue(Cudd_addResidue161,5967
addWalshInt(addWalshInt298,10276

src/bdd/cudd/cuddInteract.c,461
#define BPL BPL89,3652
#define LOGBPL LOGBPL90,3667
static char rcsid[] DD_UNUSED = "$Id: cuddInteract.c,v 1.12 2004/08/13 18:04:49 fabio Exp $";DD_UNUSED111,4468
cuddSetInteract(cuddSetInteract156,6287
cuddTestInteract(cuddTestInteract191,7080
cuddInitInteract(cuddInitInteract237,8326
ddSuppInteract(ddSuppInteract317,10673
ddClearLocal(ddClearLocal348,11385
ddUpdateInteract(ddUpdateInteract377,12082
ddClearGlobal(ddClearGlobal411,12923

src/bdd/cudd/cuddGenetic.c,1152
static char rcsid[] DD_UNUSED = "$Id: cuddGenetic.c,v 1.28 2004/08/13 18:04:48 fabio Exp $";DD_UNUSED107,4674
static int popsize;             /* the size of the population */popsize110,4775
static int numvars;             /* the number of input variables in the ckt. */numvars111,4840
static int *storedd;storedd120,5394
static st__table *computed;      /* hash table to identify existing orders */computed121,5415
static int *repeat;             /* how many times an order is present */repeat122,5493
static int large;               /* stores the index of the population withlarge123,5566
static int result;result125,5717
static int cross;               /* the number of crossovers to perform */cross126,5736
#define STOREDD(STOREDD135,6146
cuddGa(cuddGa184,8163
make_random(make_random441,17411
sift_up(sift_up509,19266
build_dd(build_dd545,20066
largest(void)largest616,22266
rand_int(rand_int645,22918
array_hash(array_hash666,23353
array_compare(array_compare698,24030
find_best(void)find_best728,24636
find_average_fitness(void)find_average_fitness756,25181
PMX(PMX786,25939
roulette(roulette906,29510

src/bdd/cudd/cudd.h,6333
#define ABC__bdd__cudd__cudd_hABC__bdd__cudd__cudd_h58,2322
#define CUDD_VERSION CUDD_VERSION75,2917
#define SIZEOF_VOID_P SIZEOF_VOID_P78,2969
#define SIZEOF_INT SIZEOF_INT81,3019
#define SIZEOF_LONG SIZEOF_LONG84,3067
#define TRUE TRUE88,3110
#define FALSE FALSE91,3146
#define CUDD_VALUE_TYPE CUDD_VALUE_TYPE94,3170
#define CUDD_OUT_OF_MEM CUDD_OUT_OF_MEM95,3209
#define CUDD_UNIQUE_SLOTS CUDD_UNIQUE_SLOTS97,3314
#define CUDD_CACHE_SLOTS CUDD_CACHE_SLOTS98,3386
#define CUDD_RESIDUE_DEFAULT CUDD_RESIDUE_DEFAULT101,3498
#define CUDD_RESIDUE_MSB CUDD_RESIDUE_MSB102,3532
#define CUDD_RESIDUE_TC CUDD_RESIDUE_TC103,3566
#define CUDD_MAXINDEX CUDD_MAXINDEX110,3798
#define CUDD_CONST_INDEX CUDD_CONST_INDEX117,4025
#define DD_APA_BITS DD_APA_BITS125,4329
#define DD_APA_BASE DD_APA_BASE126,4356
#define DD_APA_HEXPRINT DD_APA_HEXPRINT127,4400
#define DD_APA_MASK DD_APA_MASK133,4545
    CUDD_REORDER_SAME,CUDD_REORDER_SAME152,5341
    CUDD_REORDER_NONE,CUDD_REORDER_NONE153,5364
    CUDD_REORDER_RANDOM,CUDD_REORDER_RANDOM154,5387
    CUDD_REORDER_RANDOM_PIVOT,CUDD_REORDER_RANDOM_PIVOT155,5412
    CUDD_REORDER_SIFT,CUDD_REORDER_SIFT156,5443
    CUDD_REORDER_SIFT_CONVERGE,CUDD_REORDER_SIFT_CONVERGE157,5466
    CUDD_REORDER_SYMM_SIFT,CUDD_REORDER_SYMM_SIFT158,5498
    CUDD_REORDER_SYMM_SIFT_CONV,CUDD_REORDER_SYMM_SIFT_CONV159,5526
    CUDD_REORDER_WINDOW2,CUDD_REORDER_WINDOW2160,5559
    CUDD_REORDER_WINDOW3,CUDD_REORDER_WINDOW3161,5585
    CUDD_REORDER_WINDOW4,CUDD_REORDER_WINDOW4162,5611
    CUDD_REORDER_WINDOW2_CONV,CUDD_REORDER_WINDOW2_CONV163,5637
    CUDD_REORDER_WINDOW3_CONV,CUDD_REORDER_WINDOW3_CONV164,5668
    CUDD_REORDER_WINDOW4_CONV,CUDD_REORDER_WINDOW4_CONV165,5699
    CUDD_REORDER_GROUP_SIFT,CUDD_REORDER_GROUP_SIFT166,5730
    CUDD_REORDER_GROUP_SIFT_CONV,CUDD_REORDER_GROUP_SIFT_CONV167,5759
    CUDD_REORDER_ANNEALING,CUDD_REORDER_ANNEALING168,5793
    CUDD_REORDER_GENETIC,CUDD_REORDER_GENETIC169,5821
    CUDD_REORDER_LINEAR,CUDD_REORDER_LINEAR170,5847
    CUDD_REORDER_LINEAR_CONVERGE,CUDD_REORDER_LINEAR_CONVERGE171,5872
    CUDD_REORDER_LAZY_SIFT,CUDD_REORDER_LAZY_SIFT172,5906
    CUDD_REORDER_EXACTCUDD_REORDER_EXACT173,5934
} Cudd_ReorderingType;Cudd_ReorderingType174,5957
    CUDD_NO_CHECK,CUDD_NO_CHECK185,6250
    CUDD_GROUP_CHECK,CUDD_GROUP_CHECK186,6269
    CUDD_GROUP_CHECK2,CUDD_GROUP_CHECK2187,6291
    CUDD_GROUP_CHECK3,CUDD_GROUP_CHECK3188,6314
    CUDD_GROUP_CHECK4,CUDD_GROUP_CHECK4189,6337
    CUDD_GROUP_CHECK5,CUDD_GROUP_CHECK5190,6360
    CUDD_GROUP_CHECK6,CUDD_GROUP_CHECK6191,6383
    CUDD_GROUP_CHECK7,CUDD_GROUP_CHECK7192,6406
    CUDD_GROUP_CHECK8,CUDD_GROUP_CHECK8193,6429
    CUDD_GROUP_CHECK9CUDD_GROUP_CHECK9194,6452
} Cudd_AggregationType;Cudd_AggregationType195,6474
    CUDD_PRE_GC_HOOK,CUDD_PRE_GC_HOOK206,6740
    CUDD_POST_GC_HOOK,CUDD_POST_GC_HOOK207,6762
    CUDD_PRE_REORDERING_HOOK,CUDD_PRE_REORDERING_HOOK208,6785
    CUDD_POST_REORDERING_HOOKCUDD_POST_REORDERING_HOOK209,6815
} Cudd_HookType;Cudd_HookType210,6845
    CUDD_NO_ERROR,CUDD_NO_ERROR221,7117
    CUDD_MEMORY_OUT,CUDD_MEMORY_OUT222,7136
    CUDD_TOO_MANY_NODES,CUDD_TOO_MANY_NODES223,7157
    CUDD_MAX_MEM_EXCEEDED,CUDD_MAX_MEM_EXCEEDED224,7182
    CUDD_INVALID_ARG,CUDD_INVALID_ARG225,7209
    CUDD_INTERNAL_ERRORCUDD_INTERNAL_ERROR226,7231
} Cudd_ErrorType;Cudd_ErrorType227,7255
    CUDD_LAZY_NONE,CUDD_LAZY_NONE238,7543
    CUDD_LAZY_SOFT_GROUP,CUDD_LAZY_SOFT_GROUP239,7563
    CUDD_LAZY_HARD_GROUP,CUDD_LAZY_HARD_GROUP240,7589
    CUDD_LAZY_UNGROUPCUDD_LAZY_UNGROUP241,7615
} Cudd_LazyGroupType;Cudd_LazyGroupType242,7637
    CUDD_VAR_PRIMARY_INPUT,CUDD_VAR_PRIMARY_INPUT253,7938
    CUDD_VAR_PRESENT_STATE,CUDD_VAR_PRESENT_STATE254,7966
    CUDD_VAR_NEXT_STATECUDD_VAR_NEXT_STATE255,7994
} Cudd_VariableType;Cudd_VariableType256,8018
typedef unsigned int   DdHalfWord;DdHalfWord260,8083
typedef unsigned short DdHalfWord;DdHalfWord262,8124
typedef struct DdNode DdNode;DdNode270,8243
typedef struct DdChildren {DdChildren272,8274
    struct DdNode *T;T273,8302
    struct DdNode *E;E274,8324
} DdChildren;DdChildren275,8346
struct DdNode {DdNode278,8432
    DdHalfWord index;index279,8448
    DdHalfWord ref;             /* reference count */ref280,8470
    DdNode *next;               /* next pointer for unique table */next281,8524
        CUDD_VALUE_TYPE value;  /* for constant nodes */value283,8604
        DdChildren kids;        /* for internal nodes */kids284,8661
    } type;type285,8718
    ABC_INT64_T Id;Id286,8730
typedef struct DdManager DdManager;DdManager293,8806
typedef struct DdGen DdGen;DdGen295,8843
typedef unsigned int DdApaDigit;DdApaDigit300,9016
typedef unsigned long int DdApaDoubleDigit;DdApaDoubleDigit301,9049
typedef unsigned short int DdApaDigit;DdApaDigit303,9099
typedef unsigned int DdApaDoubleDigit;DdApaDoubleDigit304,9138
typedef DdApaDigit * DdApaNumber;DdApaNumber306,9184
typedef struct DdTlcInfo DdTlcInfo;DdTlcInfo309,9281
typedef int (*DD_HFP)(DdManager *, const char *, void *);DD_HFP312,9347
typedef DdNode * (*DD_PRFP)(DdManager * , int, DdNode **, DdNode **,DD_PRFP314,9437
typedef DdNode * (*DD_AOP)(DdManager *, DdNode **, DdNode **);DD_AOP317,9576
typedef DdNode * (*DD_MAOP)(DdManager *, DdNode *);DD_MAOP319,9677
typedef DdNode * (*DD_CTFP)(DdManager *, DdNode *, DdNode *);DD_CTFP321,9765
typedef DdNode * (*DD_CTFP1)(DdManager *, DdNode *);DD_CTFP1322,9827
typedef void (*DD_OOMFP)(long);DD_OOMFP324,9915
typedef int (*DD_QSFP)(const void *, const void *);DD_QSFP326,9992
#define Cudd_IsConstant(Cudd_IsConstant352,11025
#define Cudd_Not(Cudd_Not367,11476
#define Cudd_NotCond(Cudd_NotCond383,12014
#define Cudd_Regular(Cudd_Regular397,12395
#define Cudd_Complement(Cudd_Complement411,12777
#define Cudd_IsComplement(Cudd_IsComplement425,13152
#define Cudd_T(Cudd_T440,13629
#define Cudd_E(Cudd_E455,14100
#define Cudd_V(Cudd_V470,14560
#define Cudd_ReadIndex(Cudd_ReadIndex487,15102
#define Cudd_ForeachCube(Cudd_ForeachCube519,16407
#define Cudd_ForeachPrime(Cudd_ForeachPrime551,17645
#define Cudd_ForeachNode(Cudd_ForeachNode585,19023
#define Cudd_zddForeachPath(Cudd_zddForeachPath619,20413

src/bdd/cudd/cuddZddIsop.c,371
static char rcsid[] DD_UNUSED = "$Id: cuddZddIsop.c,v 1.20 2009/02/19 16:26:12 fabio Exp $";DD_UNUSED91,3585
Cudd_zddIsop(Cudd_zddIsop136,5722
Cudd_bddIsop(Cudd_bddIsop174,6677
Cudd_MakeBddFromZddCover(Cudd_MakeBddFromZddCover203,7319
cuddZddIsop(cuddZddIsop234,8125
cuddBddIsop(cuddBddIsop575,18323
cuddMakeBddFromZddCover(cuddMakeBddFromZddCover800,24689

src/bdd/cudd/cuddAddNeg.c,294
static char rcsid[] DD_UNUSED = "$Id: cuddAddNeg.c,v 1.12 2009/02/20 02:14:58 fabio Exp $";DD_UNUSED84,3334
Cudd_addNegate(Cudd_addNegate120,4726
Cudd_addRoundOff(Cudd_addRoundOff148,5387
cuddAddNegateRecur(cuddAddNegateRecur180,6251
cuddAddRoundOffRecur(cuddAddRoundOffRecur240,7622

src/bdd/cudd/cuddExact.c,670
static char rcsid[] DD_UNUSED = "$Id: cuddExact.c,v 1.28 2009/02/19 16:19:19 fabio Exp $";DD_UNUSED95,3749
static int ddTotalShuffles;ddTotalShuffles99,3864
cuddExact(cuddExact153,6514
getMaxBinomial(getMaxBinomial363,13880
getMatrix(getMatrix451,15913
freeMatrix(freeMatrix486,16726
getLevelKeys(getLevelKeys509,17270
ddShuffle(ddShuffle541,18186
ddSiftUp(ddSiftUp623,20122
updateUB(updateUB658,20888
ddCountRoots(ddCountRoots700,22092
ddClearGlobal(ddClearGlobal767,24339
computeLB(computeLB813,25561
updateEntry(updateEntry880,27661
pushDown(pushDown934,29024
initSymmInfo(initSymmInfo972,30186
checkSymmInfo(checkSymmInfo1008,31142

src/bdd/cudd/cuddTable.c,2022
#define DD_STACK_SIZE DD_STACK_SIZE97,3639
#define DD_RED DD_RED98,3665
#define DD_BLACK DD_BLACK99,3684
#define DD_PAGE_SIZE DD_PAGE_SIZE100,3703
#define DD_PAGE_MASK DD_PAGE_MASK101,3729
typedef union hack {hack110,4082
    CUDD_VALUE_TYPE value;value111,4103
    unsigned int bits[2];bits112,4130
} hack;hack113,4156
static char rcsid[] DD_UNUSED = "$Id: cuddTable.c,v 1.122 2009/02/19 16:24:28 fabio Exp $";DD_UNUSED124,4660
#define DD_INSERT_COMPARE(DD_INSERT_COMPARE135,5096
#define DD_COLOR(DD_COLOR137,5203
#define DD_IS_BLACK(DD_IS_BLACK138,5237
#define DD_IS_RED(DD_IS_RED139,5285
#define DD_LEFT(DD_LEFT140,5329
#define DD_RIGHT(DD_RIGHT141,5357
#define DD_NEXT(DD_NEXT142,5386
Cudd_Prime(Cudd_Prime188,7121
cuddAllocNode(cuddAllocNode235,8360
cuddInitTable(cuddInitTable351,13028
cuddFreeTable(cuddFreeTable659,23168
cuddGarbageCollect(cuddGarbageCollect729,25543
cuddZddGetNode(cuddZddGetNode1041,34764
cuddZddGetNodeIVO(cuddZddGetNodeIVO1074,35673
cuddUniqueInter(cuddUniqueInter1128,37166
cuddUniqueInterIVO(cuddUniqueInterIVO1304,42337
cuddUniqueInterZdd(cuddUniqueInterZdd1343,43502
cuddUniqueConst(cuddUniqueConst1450,46535
cuddRehash(cuddRehash1530,48671
cuddShrinkSubtable(cuddShrinkSubtable1702,54778
cuddInsertSubtables(cuddInsertSubtables1795,57748
cuddDestroySubtables(cuddDestroySubtables2108,71059
cuddResizeTableZdd(cuddResizeTableZdd2241,76052
cuddSlowTableGrowth(cuddSlowTableGrowth2385,81188
ddRehashZdd(ddRehashZdd2422,82362
ddResizeTable(ddResizeTable2523,85574
cuddFindParent(cuddFindParent2758,94250
ddFixLimits(ddFixLimits2805,95502
cuddOrderedInsert(cuddOrderedInsert2834,96410
cuddOrderedThread(cuddOrderedThread2883,98153
cuddRotateLeft(cuddRotateLeft2952,100686
cuddRotateRight(cuddRotateRight2978,101247
cuddDoRebalance(cuddDoRebalance3003,101766
ddPatchTree(ddPatchTree3080,104134
cuddCheckCollisionOrdering(cuddCheckCollisionOrdering3112,104785
ddReportRefMess(ddReportRefMess3157,105879

src/bdd/cudd/cuddAPI.c,7789
static char rcsid[] DD_UNUSED = "$Id: cuddAPI.c,v 1.59 2009/02/19 16:14:14 fabio Exp $";DD_UNUSED218,9180
Cudd_addNewVar(Cudd_addNewVar259,10995
Cudd_addNewVarAtLevel(Cudd_addNewVarAtLevel290,11882
Cudd_bddNewVar(Cudd_bddNewVar323,12841
Cudd_bddNewVarAtLevel(Cudd_bddNewVarAtLevel351,13657
Cudd_addIthVar(Cudd_addIthVar384,14659
Cudd_bddIthVar(Cudd_bddIthVar416,15478
Cudd_zddIthVar(Cudd_zddIthVar448,16262
Cudd_zddVarsFromBddVars(Cudd_zddVarsFromBddVars519,18718
Cudd_addConst(Cudd_addConst620,21921
Cudd_IsNonConstant(Cudd_IsNonConstant645,22673
Cudd_AutodynEnable(Cudd_AutodynEnable669,23350
Cudd_AutodynDisable(Cudd_AutodynDisable708,24405
Cudd_ReorderingStatus(Cudd_ReorderingStatus735,25169
Cudd_AutodynEnableZdd(Cudd_AutodynEnableZdd760,25887
Cudd_AutodynDisableZdd(Cudd_AutodynDisableZdd786,26481
Cudd_ReorderingStatusZdd(Cudd_ReorderingStatusZdd812,27243
Cudd_zddRealignmentEnabled(Cudd_zddRealignmentEnabled837,27915
Cudd_zddRealignEnable(Cudd_zddRealignEnable867,28999
Cudd_zddRealignDisable(Cudd_zddRealignDisable889,29511
Cudd_bddRealignmentEnabled(Cudd_bddRealignmentEnabled913,30119
Cudd_bddRealignEnable(Cudd_bddRealignEnable943,31201
Cudd_bddRealignDisable(Cudd_bddRealignDisable965,31714
Cudd_ReadOne(Cudd_ReadOne987,32258
Cudd_ReadZddOne(Cudd_ReadZddOne1010,32890
Cudd_ReadZero(Cudd_ReadZero1036,33542
Cudd_ReadLogicZero(Cudd_ReadLogicZero1058,34099
Cudd_ReadPlusInfinity(Cudd_ReadPlusInfinity1076,34488
Cudd_ReadMinusInfinity(Cudd_ReadMinusInfinity1094,34880
Cudd_ReadBackground(Cudd_ReadBackground1112,35269
Cudd_SetBackground(Cudd_SetBackground1131,35752
Cudd_ReadCacheSlots(Cudd_ReadCacheSlots1152,36183
Cudd_ReadCacheUsedSlots(Cudd_ReadCacheUsedSlots1175,36811
Cudd_ReadCacheLookUps(Cudd_ReadCacheLookUps1204,37464
Cudd_ReadCacheHits(Cudd_ReadCacheHits1225,37941
Cudd_ReadRecursiveCalls(Cudd_ReadRecursiveCalls1246,38435
Cudd_ReadMinHit(Cudd_ReadMinHit1272,38931
Cudd_SetMinHit(Cudd_SetMinHit1298,39743
Cudd_ReadLooseUpTo(Cudd_ReadLooseUpTo1321,40353
Cudd_SetLooseUpTo(Cudd_SetLooseUpTo1345,41101
Cudd_ReadMaxCache(Cudd_ReadMaxCache1371,41795
Cudd_ReadMaxCacheHard(Cudd_ReadMaxCacheHard1391,42255
Cudd_SetMaxCacheHard(Cudd_SetMaxCacheHard1415,43016
Cudd_ReadSize(Cudd_ReadSize1441,43655
Cudd_ReadZddSize(Cudd_ReadZddSize1461,44047
Cudd_ReadSlots(Cudd_ReadSlots1480,44531
Cudd_ReadUsedSlots(Cudd_ReadUsedSlots1503,45156
Cudd_ExpectedUsedSlots(Cudd_ExpectedUsedSlots1572,47023
Cudd_ReadKeys(Cudd_ReadKeys1626,48621
Cudd_ReadDead(Cudd_ReadDead1646,49026
Cudd_ReadMinDead(Cudd_ReadMinDead1670,49764
Cudd_ReadReorderings(Cudd_ReadReorderings1696,50671
Cudd_ReadReorderingTime(Cudd_ReadReorderingTime1718,51248
Cudd_ReadGarbageCollections(Cudd_ReadGarbageCollections1741,51886
Cudd_ReadGarbageCollectionTime(Cudd_ReadGarbageCollectionTime1762,52433
Cudd_ReadNodesFreed(Cudd_ReadNodesFreed1784,53054
Cudd_ReadNodesDropped(Cudd_ReadNodesDropped1810,53702
Cudd_ReadUniqueLookUps(Cudd_ReadUniqueLookUps1836,54380
Cudd_ReadUniqueLinks(Cudd_ReadUniqueLinks1865,55284
Cudd_ReadSiftMaxVar(Cudd_ReadSiftMaxVar1891,55931
Cudd_SetSiftMaxVar(Cudd_SetSiftMaxVar1913,56518
Cudd_ReadSiftMaxSwap(Cudd_ReadSiftMaxSwap1938,57275
Cudd_SetSiftMaxSwap(Cudd_SetSiftMaxSwap1962,58026
Cudd_ReadMaxGrowth(Cudd_ReadMaxGrowth1988,58824
Cudd_SetMaxGrowth(Cudd_SetMaxGrowth2013,59604
Cudd_ReadMaxGrowthAlternate(Cudd_ReadMaxGrowthAlternate2039,60421
Cudd_SetMaxGrowthAlternate(Cudd_SetMaxGrowthAlternate2064,61247
Cudd_ReadReorderingCycle(Cudd_ReadReorderingCycle2088,61899
Cudd_SetReorderingCycle(Cudd_SetReorderingCycle2111,62535
Cudd_ReadTree(Cudd_ReadTree2132,63000
Cudd_SetTree(Cudd_SetTree2152,63418
Cudd_FreeTree(Cudd_FreeTree2180,64003
Cudd_ReadZddTree(Cudd_ReadZddTree2204,64513
Cudd_SetZddTree(Cudd_SetZddTree2224,64945
Cudd_FreeZddTree(Cudd_FreeZddTree2252,65544
Cudd_NodeReadIndex(Cudd_NodeReadIndex2277,66101
Cudd_ReadPerm(Cudd_ReadPerm2301,66752
Cudd_ReadPermZdd(Cudd_ReadPermZdd2328,67484
Cudd_ReadInvPerm(Cudd_ReadInvPerm2354,68244
Cudd_ReadInvPermZdd(Cudd_ReadInvPermZdd2380,69013
Cudd_ReadVars(Cudd_ReadVars2407,69848
Cudd_ReadEpsilon(Cudd_ReadEpsilon2430,70428
Cudd_SetEpsilon(Cudd_SetEpsilon2451,70959
Cudd_ReadGroupcheck(Cudd_ReadGroupcheck2474,71527
Cudd_SetGroupcheck(Cudd_SetGroupcheck2496,72081
Cudd_GarbageCollectionEnabled(Cudd_GarbageCollectionEnabled2517,72609
Cudd_EnableGarbageCollection(Cudd_EnableGarbageCollection2539,73240
Cudd_DisableGarbageCollection(Cudd_DisableGarbageCollection2563,73991
Cudd_DeadAreCounted(Cudd_DeadAreCounted2585,74584
Cudd_TurnOnCountDead(Cudd_TurnOnCountDead2608,75218
Cudd_TurnOffCountDead(Cudd_TurnOffCountDead2633,75953
Cudd_ReadRecomb(Cudd_ReadRecomb2657,76652
Cudd_SetRecomb(Cudd_SetRecomb2682,77361
Cudd_ReadSymmviolation(Cudd_ReadSymmviolation2710,78216
Cudd_SetSymmviolation(Cudd_SetSymmviolation2737,79074
Cudd_ReadArcviolation(Cudd_ReadArcviolation2764,79928
Cudd_SetArcviolation(Cudd_SetArcviolation2790,80731
Cudd_ReadPopulationSize(Cudd_ReadPopulationSize2817,81580
Cudd_SetPopulationSize(Cudd_SetPopulationSize2843,82409
Cudd_ReadNumberXovers(Cudd_ReadNumberXovers2870,83271
Cudd_SetNumberXovers(Cudd_SetNumberXovers2896,84081
Cudd_ReadMemoryInUse(Cudd_ReadMemoryInUse2916,84529
Cudd_PrintInfo(Cudd_PrintInfo2937,85024
Cudd_ReadPeakNodeCount(Cudd_ReadPeakNodeCount3122,93254
Cudd_ReadPeakLiveNodeCount(Cudd_ReadPeakLiveNodeCount3151,94015
Cudd_ReadNodeCount(Cudd_ReadNodeCount3179,94831
Cudd_zddReadNodeCount(Cudd_zddReadNodeCount3221,95895
Cudd_AddHook(Cudd_AddHook3244,96539
Cudd_RemoveHook(Cudd_RemoveHook3306,98159
Cudd_IsInHook(Cudd_IsInHook3359,99463
Cudd_StdPreReordHook(Cudd_StdPreReordHook3408,100640
Cudd_StdPostReordHook(Cudd_StdPostReordHook3501,103423
Cudd_EnableReorderingReporting(Cudd_EnableReorderingReporting3536,104479
Cudd_DisableReorderingReporting(Cudd_DisableReorderingReporting3564,105280
Cudd_ReorderingReporting(Cudd_ReorderingReporting3591,106035
Cudd_ReadErrorCode(Cudd_ReadErrorCode3612,106584
Cudd_ClearErrorCode(Cudd_ClearErrorCode3632,106981
Cudd_ReadStdout(Cudd_ReadStdout3654,107596
Cudd_SetStdout(Cudd_SetStdout3674,107988
Cudd_ReadStderr(Cudd_ReadStderr3697,108588
Cudd_SetStderr(Cudd_SetStderr3717,108980
Cudd_ReadNextReordering(Cudd_ReadNextReordering3742,109691
Cudd_SetNextReordering(Cudd_SetNextReordering3766,110402
Cudd_ReadSwapSteps(Cudd_ReadSwapSteps3787,110823
Cudd_ReadMaxLive(Cudd_ReadMaxLive3812,111388
Cudd_SetMaxLive(Cudd_SetMaxLive3833,111893
Cudd_ReadMaxMemory(Cudd_ReadMaxMemory3855,112406
Cudd_SetMaxMemory(Cudd_SetMaxMemory3876,112892
Cudd_bddBindVar(Cudd_bddBindVar3899,113484
Cudd_bddUnbindVar(Cudd_bddUnbindVar3927,114415
Cudd_bddVarIsBound(Cudd_bddVarIsBound3954,115311
Cudd_bddSetPiVar(Cudd_bddSetPiVar3977,116005
Cudd_bddSetPsVar(Cudd_bddSetPsVar4001,116728
Cudd_bddSetNsVar(Cudd_bddSetNsVar4025,117445
Cudd_bddIsPiVar(Cudd_bddIsPiVar4050,118217
Cudd_bddIsPsVar(Cudd_bddIsPsVar4074,118984
Cudd_bddIsNsVar(Cudd_bddIsNsVar4098,119710
Cudd_bddSetPairIndex(Cudd_bddSetPairIndex4122,120397
Cudd_bddReadPairIndex(Cudd_bddReadPairIndex4148,121220
Cudd_bddSetVarToBeGrouped(Cudd_bddSetVarToBeGrouped4171,121868
Cudd_bddSetVarHardGroup(Cudd_bddSetVarHardGroup4198,122689
Cudd_bddResetVarToBeGrouped(Cudd_bddResetVarToBeGrouped4222,123390
Cudd_bddIsVarToBeGrouped(Cudd_bddIsVarToBeGrouped4249,124107
Cudd_bddSetVarToBeUngrouped(Cudd_bddSetVarToBeUngrouped4275,124855
Cudd_bddIsVarToBeUngrouped(Cudd_bddIsVarToBeUngrouped4301,125662
Cudd_bddIsVarHardGroup(Cudd_bddIsVarHardGroup4326,126482
fixVarTree(fixVarTree4359,127534
addMultiplicityGroups(addMultiplicityGroups4402,129350

src/bdd/cudd/cuddWindow.c,1312
static char rcsid[] DD_UNUSED = "$Id: cuddWindow.c,v 1.14 2009/02/20 02:14:58 fabio Exp $";DD_UNUSED88,3487
cuddWindowReorder(cuddWindowReorder142,5860
ddWindow2(ddWindow2214,8214
ddWindowConv2(ddWindowConv2268,9573
ddPermuteWindow3(ddPermuteWindow3361,12078
#define ABC ABC381,12449
#define BAC BAC384,12480
#define BCA BCA391,12649
#define CBA CBA398,12818
#define CAB CAB405,12987
#define ACB ACB412,13156
ddWindow3(ddWindow3456,14465
ddWindowConv3(ddWindowConv3503,15619
ddPermuteWindow4(ddPermuteWindow4601,18265
#define ABCD ABCD630,19225
#define BACD BACD633,19258
#define BADC BADC640,19429
#define ABDC ABDC647,19601
#define ADBC ADBC654,19808
#define ADCB ADCB661,19980
#define DACB DACB668,20187
#define DABC DABC675,20359
#define DBAC DBAC682,20531
#define BDAC BDAC689,20703
#define BDCA BDCA696,20911
#define DBCA DBCA703,21119
#define DCBA DCBA710,21291
#define DCAB DCAB717,21499
#define CDAB CDAB724,21707
#define CDBA CDBA731,21915
#define CBDA CBDA738,22123
#define BCDA BCDA745,22331
#define BCAD BCAD752,22539
#define CBAD CBAD759,22747
#define CABD CABD766,22954
#define CADB CADB773,23161
#define ACDB ACDB780,23368
#define ACBD ACBD787,23575
ddWindow4(ddWindow4857,26314
ddWindowConv4(ddWindowConv4904,27469

src/bdd/cudd/cuddGenCof.c,1679
#define DD_LIC_DC DD_LIC_DC93,3610
#define DD_LIC_1 DD_LIC_194,3630
#define DD_LIC_0 DD_LIC_095,3650
#define DD_LIC_NL DD_LIC_NL96,3670
typedef struct MarkCacheKey {MarkCacheKey108,4230
    DdNode *f;f109,4260
    DdNode *c;c110,4275
} MarkCacheKey;MarkCacheKey111,4290
static char rcsid[] DD_UNUSED = "$Id: cuddGenCof.c,v 1.38 2005/05/14 17:27:11 fabio Exp $";DD_UNUSED118,4561
Cudd_bddConstrain(Cudd_bddConstrain172,6966
Cudd_bddRestrict(Cudd_bddRestrict204,7792
Cudd_bddNPAnd(Cudd_bddNPAnd291,10485
Cudd_addConstrain(Cudd_addConstrain328,11287
Cudd_bddConstrainDecomp(Cudd_bddConstrainDecomp363,12364
Cudd_addRestrict(Cudd_addRestrict423,14025
Cudd_bddCharToVect(Cudd_bddCharToVect502,16472
Cudd_bddLICompaction(Cudd_bddLICompaction562,18233
Cudd_bddSqueeze(Cudd_bddSqueeze594,19200
Cudd_bddMinimize(Cudd_bddMinimize645,20622
Cudd_SubsetCompress(Cudd_SubsetCompress692,22010
Cudd_SupersetCompress(Cudd_SupersetCompress742,23619
cuddBddConstrainRecur(cuddBddConstrainRecur775,24698
cuddBddRestrictRecur(cuddBddRestrictRecur904,28165
cuddBddNPAndRecur(cuddBddNPAndRecur1054,32332
cuddAddConstrainRecur(cuddAddConstrainRecur1195,35918
cuddAddRestrictRecur(cuddAddRestrictRecur1299,38485
cuddBddLICompaction(cuddBddLICompaction1426,41948
cuddBddConstrainDecomp(cuddBddConstrainDecomp1496,44497
cuddBddCharToVect(cuddBddCharToVect1558,46206
cuddBddLICMarkEdges(cuddBddLICMarkEdges1639,48170
cuddBddLICBuildResult(cuddBddLICBuildResult1758,51447
MarkCacheHash(MarkCacheHash1867,54227
MarkCacheCompare(MarkCacheCompare1899,54988
MarkCacheCleanUp(MarkCacheCleanUp1928,55705
cuddBddSqueeze(cuddBddSqueeze1959,56610

src/bdd/cudd/cuddLinear.c,1208
#define CUDD_SWAP_MOVE CUDD_SWAP_MOVE75,2931
#define CUDD_LINEAR_TRANSFORM_MOVE CUDD_LINEAR_TRANSFORM_MOVE76,2956
#define CUDD_INVERSE_TRANSFORM_MOVE CUDD_INVERSE_TRANSFORM_MOVE77,2993
#define BPL BPL79,3052
#define LOGBPL LOGBPL80,3067
static char rcsid[] DD_UNUSED = "$Id: cuddLinear.c,v 1.28 2009/02/19 16:21:03 fabio Exp $";DD_UNUSED99,3866
static  int     *entry;entry102,3966
static  int     ddTotalNumberLinearTr;ddTotalNumberLinearTr107,4078
static  int     zero = 0;zero111,4141
Cudd_PrintLinear(Cudd_PrintLinear153,5937
Cudd_ReadLinear(Cudd_ReadLinear191,6907
cuddLinearAndSifting(cuddLinearAndSifting240,8494
cuddLinearInPlace(cuddLinearInPlace364,12149
cuddUpdateInteractionMatrix(cuddUpdateInteractionMatrix718,23976
cuddInitLinear(cuddInitLinear759,25043
cuddResizeLinear(cuddResizeLinear804,26115
ddLinearUniqueCompare(ddLinearUniqueCompare872,28101
ddLinearAndSiftingAux(ddLinearAndSiftingAux900,28901
ddLinearAndSiftingUp(ddLinearAndSiftingUp1006,32728
ddLinearAndSiftingDown(ddLinearAndSiftingDown1129,36915
ddLinearAndSiftingBackward(ddLinearAndSiftingBackward1242,40646
ddUndoMoves(ddUndoMoves1288,41943
cuddXorLinear(cuddXorLinear1353,44062

src/bdd/cudd/cuddSign.c,353
static char rcsid[] DD_UNUSED = "$Id: cuddSign.c,v 1.22 2009/02/20 02:14:58 fabio Exp $";DD_UNUSED83,3257
static int    size;size86,3355
static int num_calls;   /* should equal 2n-1 (n is the # of nodes) */num_calls89,3392
static int table_mem;table_mem90,3462
Cudd_CofMinterm(Cudd_CofMinterm131,5230
ddCofMintermAux(ddCofMintermAux232,8783

src/bdd/cudd/testcudd.c,573
#define TESTCUDD_VERSION TESTCUDD_VERSION61,2464
static char rcsid[] DD_UNUSED = "$Id: testcudd.c,v 1.20 2009/03/08 02:49:02 fabio Exp $";DD_UNUSED68,2793
static const char *onames[] = { "C", "M" }; /* names of functions to be dumped */onames71,2891
main(int argc, char **argv)main101,4012
usage(char *prog)usage654,19939
open_file(char *filename, const char *mode)open_file707,22715
testWalsh(testWalsh735,23389
testIterators(testIterators822,25905
testXor(DdManager *dd, DdNode *f, int pr, int nvars)testXor938,28847
testHamming(testHamming1015,30787

src/bdd/cudd/cuddApprox.c,3384
#define DBL_MAX_EXP DBL_MAX_EXP79,3012
#define NOTHING NOTHING92,3368
#define REPLACE_T REPLACE_T93,3394
#define REPLACE_E REPLACE_E94,3420
#define REPLACE_N REPLACE_N95,3446
#define REPLACE_TT REPLACE_TT96,3472
#define REPLACE_TE REPLACE_TE97,3498
#define DONT_CARE DONT_CARE99,3525
#define CARE CARE100,3551
#define TOTAL_CARE TOTAL_CARE101,3577
#define CARE_ERROR CARE_ERROR102,3603
typedef struct NodeData {NodeData120,4650
    double mintermsP;           /* minterms for the regular node */mintermsP121,4676
    double mintermsN;           /* minterms for the complemented node */mintermsN122,4744
    int functionRef;            /* references from within this function */functionRef123,4817
    char care;                  /* node intersects care set */care124,4892
    char replace;               /* replacement decision */replace125,4955
    short int parity;           /* 1: even; 2: odd; 3: both */parity126,5014
    DdNode *resultP;            /* result for even parity */resultP127,5077
    DdNode *resultN;            /* result for odd parity */resultN128,5138
} NodeData;NodeData129,5198
typedef struct ApproxInfo {ApproxInfo131,5211
    DdNode *one;                /* one constant */one132,5239
    DdNode *zero;               /* BDD zero constant */zero133,5290
    NodeData *page;             /* per-node information */page134,5346
    st__table *table;            /* hash table to access the per-node info */table135,5405
    int index;                  /* index of the current node */index136,5483
    double max;                 /* max number of minterms */max137,5547
    int size;                   /* how many nodes are left */size138,5608
    double minterms;            /* how many minterms are left */minterms139,5670
} ApproxInfo;ApproxInfo140,5735
typedef struct GlobalQueueItem {GlobalQueueItem147,5893
    struct GlobalQueueItem *next;next148,5926
    struct GlobalQueueItem *cnext;cnext149,5960
    DdNode *node;node150,5995
    double impactP;impactP151,6013
    double impactN;impactN152,6033
} GlobalQueueItem;GlobalQueueItem153,6053
typedef struct LocalQueueItem {LocalQueueItem155,6074
    struct LocalQueueItem *next;next156,6106
    struct LocalQueueItem *cnext;cnext157,6139
    DdNode *node;node158,6173
    int localRef;localRef159,6191
} LocalQueueItem;LocalQueueItem160,6209
static char rcsid[] DD_UNUSED = "$Id: cuddApprox.c,v 1.27 2009/02/19 16:16:51 fabio Exp $";DD_UNUSED171,6538
Cudd_UnderApprox(Cudd_UnderApprox228,9759
Cudd_OverApprox(Cudd_OverApprox275,11623
Cudd_RemapUnderApprox(Cudd_RemapUnderApprox320,13368
Cudd_RemapOverApprox(Cudd_RemapOverApprox366,15200
Cudd_BiasedUnderApprox(Cudd_BiasedUnderApprox413,17073
Cudd_BiasedOverApprox(Cudd_BiasedOverApprox463,19117
cuddUnderApprox(cuddUnderApprox511,20824
cuddRemapUnderApprox(cuddRemapUnderApprox601,23482
cuddBiasedUnderApprox(cuddBiasedUnderApprox691,26151
updateParity(updateParity795,29339
gatherInfoAux(gatherInfoAux837,30675
gatherInfo(gatherInfo907,32901
computeSavings(computeSavings1001,36043
updateRefs(updateRefs1073,38395
UAmarkNodes(UAmarkNodes1152,41106
UAbuildSubset(UAbuildSubset1276,45346
RAmarkNodes(RAmarkNodes1371,47638
BAmarkNodes(BAmarkNodes1673,59344
RAbuildSubset(RAbuildSubset1990,71744
BAapplyBias(BAapplyBias2138,76034

src/bdd/cudd/cuddZddSetop.c,883
static char rcsid[] DD_UNUSED = "$Id: cuddZddSetop.c,v 1.25 2004/08/13 18:04:54 fabio Exp $";DD_UNUSED103,4061
Cudd_zddIte(Cudd_zddIte140,5664
Cudd_zddUnion(Cudd_zddUnion170,6283
Cudd_zddIntersect(Cudd_zddIntersect199,6905
Cudd_zddDiff(Cudd_zddDiff228,7552
Cudd_zddDiffConst(Cudd_zddDiffConst258,8271
Cudd_zddSubset1(Cudd_zddSubset1322,9954
Cudd_zddSubset0(Cudd_zddSubset0354,10743
Cudd_zddChange(Cudd_zddChange384,11399
cuddZddIte(cuddZddIte419,12244
cuddZddUnion(cuddZddUnion545,15403
cuddZddIntersect(cuddZddIntersect634,17625
cuddZddDiff(cuddZddDiff709,19472
cuddZddChangeAux(cuddZddChangeAux791,21557
cuddZddSubset1(cuddZddSubset1866,23751
cuddZddSubset0(cuddZddSubset0915,25082
cuddZddChange(cuddZddChange963,26279
zdd_subset1_aux(zdd_subset1_aux1004,27287
zdd_subset0_aux(zdd_subset0_aux1073,28893
zddVarToConst(zddVarToConst1143,30474

src/bdd/cudd/cuddBddCorr.c,614
typedef struct hashEntry {hashEntry82,3183
    DdNode *f;f83,3210
    DdNode *g;g84,3225
} HashEntry;HashEntry85,3240
static char rcsid[] DD_UNUSED = "$Id: cuddBddCorr.c,v 1.14 2004/08/13 18:04:46 fabio Exp $";DD_UNUSED93,3509
static  int     num_calls;num_calls97,3630
Cudd_bddCorrelation(Cudd_bddCorrelation139,5495
Cudd_bddCorrelationWeights(Cudd_bddCorrelationWeights181,6741
bddCorrelationAux(bddCorrelationAux229,8204
bddCorrelationWeightsAux(bddCorrelationWeightsAux331,10821
CorrelCompare(CorrelCompare439,13641
CorrelHash(CorrelHash466,14288
CorrelCleanUp(CorrelCleanUp496,15005

src/bdd/cudd/cuddSymmetry.c,798
#define MV_OOM MV_OOM79,3054
static char rcsid[] DD_UNUSED = "$Id: cuddSymmetry.c,v 1.26 2009/02/19 16:23:54 fabio Exp $";DD_UNUSED94,3816
static  int     *entry;entry97,3918
Cudd_SymmProfile(Cudd_SymmProfile142,5857
cuddSymmCheck(cuddSymmCheck192,7382
cuddSymmSifting(cuddSymmSifting322,11534
cuddSymmSiftingConv(cuddSymmSiftingConv442,14971
ddSymmUniqueCompare(ddSymmUniqueCompare608,20217
ddSymmSiftingAux(ddSymmSiftingAux636,20956
ddSymmSiftingConvAux(ddSymmSiftingConvAux938,31316
ddSymmSiftingUp(ddSymmSiftingUp1195,40053
ddSymmSiftingDown(ddSymmSiftingDown1337,45025
ddSymmGroupMove(ddSymmGroupMove1475,49817
ddSymmGroupMoveBackward(ddSymmGroupMoveBackward1556,52147
ddSymmSiftingBackward(ddSymmSiftingBackward1627,54181
ddSymmSummary(ddSymmSummary1671,55363

src/bdd/cudd/cuddZddSymm.c,841
#define ZDD_MV_OOM ZDD_MV_OOM81,3195
static char rcsid[] DD_UNUSED = "$Id: cuddZddSymm.c,v 1.29 2004/08/13 18:04:54 fabio Exp $";DD_UNUSED96,3961
static DdNode   *empty;empty103,4132
Cudd_zddSymmProfile(Cudd_zddSymmProfile145,6014
cuddZddSymmCheck(cuddZddSymmCheck197,7589
cuddZddSymmSifting(cuddZddSymmSifting302,10669
cuddZddSymmSiftingConv(cuddZddSymmSiftingConv423,14158
cuddZddSymmSiftingAux(cuddZddSymmSiftingAux601,19821
cuddZddSymmSiftingConvAux(cuddZddSymmSiftingConvAux941,31427
cuddZddSymmSifting_up(cuddZddSymmSifting_up1250,41983
cuddZddSymmSifting_down(cuddZddSymmSifting_down1338,44797
cuddZddSymmSiftingBackward(cuddZddSymmSiftingBackward1429,47644
zdd_group_move(zdd_group_move1481,49079
zdd_group_move_backward(zdd_group_move_backward1588,51984
cuddZddSymmSummary(cuddZddSymmSummary1671,54200

src/bdd/cudd/cuddInt.h,19463
#define ABC__bdd__cudd__cuddInt_hABC__bdd__cudd__cuddInt_h52,2022
# define DD_INLINE DD_INLINE80,2624
#   define DD_UNUSED DD_UNUSED82,2695
#define DD_MAXREF DD_MAXREF100,3146
#define DD_DEFAULT_RESIZE DD_DEFAULT_RESIZE102,3197
#define DD_MEM_CHUNK DD_MEM_CHUNK104,3344
#define DD_ONE_VAL DD_ONE_VAL107,3441
#define DD_ZERO_VAL DD_ZERO_VAL108,3479
#define DD_EPSILON DD_EPSILON109,3517
#  define DD_PLUS_INF_VAL DD_PLUS_INF_VAL115,3714
#define DD_MINUS_INF_VAL DD_MINUS_INF_VAL121,3904
#define DD_NON_CONSTANT DD_NON_CONSTANT123,3958
#define DD_MAX_SUBTABLE_DENSITY DD_MAX_SUBTABLE_DENSITY126,4088
#define DD_GC_FRAC_LO DD_GC_FRAC_LO133,4512
#define DD_GC_FRAC_HI DD_GC_FRAC_HI134,4575
#define DD_GC_FRAC_MIN DD_GC_FRAC_MIN135,4637
#define DD_MIN_HIT DD_MIN_HIT136,4673
#define DD_MAX_LOOSE_FRACTION DD_MAX_LOOSE_FRACTION138,4822
#define DD_MAX_CACHE_FRACTION DD_MAX_CACHE_FRACTION140,4970
#define DD_STASH_FRACTION DD_STASH_FRACTION142,5120
#define DD_MAX_CACHE_TO_SLOTS_RATIO DD_MAX_CACHE_TO_SLOTS_RATIO144,5250
#define DD_SIFT_MAX_VAR DD_SIFT_MAX_VAR147,5374
#define DD_SIFT_MAX_SWAPS DD_SIFT_MAX_SWAPS148,5411
#define DD_DEFAULT_RECOMB DD_DEFAULT_RECOMB149,5451
#define DD_MAX_REORDER_GROWTH DD_MAX_REORDER_GROWTH150,5485
#define DD_FIRST_REORDER DD_FIRST_REORDER151,5521
#define DD_DYN_RATIO DD_DYN_RATIO152,5587
#define DD_P1 DD_P1155,5701
#define DD_P2 DD_P2156,5742
#define DD_P3 DD_P3157,5782
#define DD_P4 DD_P4158,5821
#define DD_ADD_ITE_TAG DD_ADD_ITE_TAG172,6666
#define DD_BDD_AND_ABSTRACT_TAG DD_BDD_AND_ABSTRACT_TAG173,6719
#define DD_BDD_XOR_EXIST_ABSTRACT_TAG DD_BDD_XOR_EXIST_ABSTRACT_TAG174,6772
#define DD_BDD_ITE_TAG DD_BDD_ITE_TAG175,6825
#define DD_ADD_BDD_DO_INTERVAL_TAG DD_ADD_BDD_DO_INTERVAL_TAG176,6878
#define DD_BDD_CLIPPING_AND_ABSTRACT_UP_TAG DD_BDD_CLIPPING_AND_ABSTRACT_UP_TAG177,6931
#define DD_BDD_CLIPPING_AND_ABSTRACT_DOWN_TAG DD_BDD_CLIPPING_AND_ABSTRACT_DOWN_TAG178,6984
#define DD_BDD_COMPOSE_RECUR_TAG DD_BDD_COMPOSE_RECUR_TAG179,7037
#define DD_ADD_COMPOSE_RECUR_TAG DD_ADD_COMPOSE_RECUR_TAG180,7090
#define DD_ADD_NON_SIM_COMPOSE_TAG DD_ADD_NON_SIM_COMPOSE_TAG181,7143
#define DD_EQUIV_DC_TAG DD_EQUIV_DC_TAG182,7196
#define DD_ZDD_ITE_TAG DD_ZDD_ITE_TAG183,7249
#define DD_ADD_ITE_CONSTANT_TAG DD_ADD_ITE_CONSTANT_TAG184,7302
#define DD_ADD_EVAL_CONST_TAG DD_ADD_EVAL_CONST_TAG185,7355
#define DD_BDD_ITE_CONSTANT_TAG DD_BDD_ITE_CONSTANT_TAG186,7408
#define DD_ADD_OUT_SUM_TAG DD_ADD_OUT_SUM_TAG187,7461
#define DD_BDD_LEQ_UNLESS_TAG DD_BDD_LEQ_UNLESS_TAG188,7514
#define DD_ADD_TRIANGLE_TAG DD_ADD_TRIANGLE_TAG189,7567
#define CUDD_GEN_CUBES CUDD_GEN_CUBES192,7648
#define CUDD_GEN_PRIMES CUDD_GEN_PRIMES193,7673
#define CUDD_GEN_NODES CUDD_GEN_NODES194,7699
#define CUDD_GEN_ZDD_PATHS CUDD_GEN_ZDD_PATHS195,7724
#define CUDD_GEN_EMPTY CUDD_GEN_EMPTY196,7753
#define CUDD_GEN_NONEMPTY CUDD_GEN_NONEMPTY197,7778
struct DdGen {DdGen204,8049
    DdManager   *manager;manager205,8064
    int         type;type206,8090
    int         status;status207,8112
            int                 *cube;cube210,8165
            CUDD_VALUE_TYPE     value;value211,8204
        } cubes;cubes212,8243
            int                 *cube;cube214,8277
            DdNode              *ub;ub215,8316
        } primes;primes216,8353
            int                 size;size218,8388
        } nodes;nodes219,8426
    } gen;gen220,8443
        int     sp;sp222,8467
        DdNode  **stack;stack227,8562
    } stack;stack231,8638
    DdNode      *node;node232,8651
typedef struct DdHook {         /* hook list element */DdHook245,9159
    DD_HFP f; /* function to be called */f246,9215
    struct DdHook *next;        /* next element in the list */next247,9257
} DdHook;DdHook248,9320
typedef ABC_PTRINT_T ptrint;ptrint260,9495
typedef ABC_PTRUINT_T ptruint;ptruint261,9524
typedef DdNode *DdNodePtr;DdNodePtr268,9632
typedef struct DdLocalCacheItem {DdLocalCacheItem271,9692
    DdNode *value;value272,9726
    ptrint count;count274,9769
    DdNode *key[1];key276,9794
} DdLocalCacheItem;DdLocalCacheItem277,9814
typedef struct DdLocalCache {DdLocalCache280,9854
    DdLocalCacheItem *item;item281,9884
    unsigned int itemsize;itemsize282,9912
    unsigned int keysize;keysize283,9939
    unsigned int slots;slots284,9965
    int shift;shift285,9989
    double lookUps;lookUps286,10004
    double minHit;minHit287,10024
    double hits;hits288,10043
    unsigned int maxslots;maxslots289,10060
    DdManager *manager;manager290,10087
    struct DdLocalCache *next;next291,10111
} DdLocalCache;DdLocalCache292,10142
typedef struct DdHashItem {DdHashItem295,10184
    struct DdHashItem *next;next296,10212
    ptrint count;count297,10241
    DdNode *value;value298,10259
    DdNode *key[1];key299,10278
} DdHashItem;DdHashItem300,10298
typedef struct DdHashTable {DdHashTable303,10336
    unsigned int keysize;keysize304,10365
    unsigned int itemsize;itemsize305,10391
    DdHashItem **bucket;bucket306,10418
    DdHashItem *nextFree;nextFree307,10443
    DdHashItem **memoryList;memoryList308,10469
    unsigned int numBuckets;numBuckets309,10498
    int shift;shift310,10527
    unsigned int size;size311,10542
    unsigned int maxsize;maxsize312,10565
    DdManager *manager;manager313,10591
} DdHashTable;DdHashTable314,10615
typedef struct DdCache {DdCache316,10631
    DdNode *f,*g;               /* DDs */f317,10656
    DdNode *f,*g;               /* DDs */g317,10656
    ptruint h;                  /* either operator or DD */h318,10698
    DdNode *data;               /* already constructed DD */data319,10758
    ptrint count;count321,10843
    unsigned hash;hash323,10868
} DdCache;DdCache324,10887
typedef struct DdSubtable {     /* subtable for one index */DdSubtable326,10899
    DdNode **nodelist;          /* hash table */nodelist327,10960
    int shift;                  /* shift for hash function */shift328,11009
    unsigned int slots;         /* size of the hash table */slots329,11071
    unsigned int keys;          /* number of nodes stored in this table */keys330,11132
    unsigned int maxKeys;       /* slots * DD_MAX_SUBTABLE_DENSITY */maxKeys331,11207
    unsigned int dead;          /* number of dead nodes in this table */dead332,11277
    unsigned int next;          /* index of next variable in group */next333,11350
    int bindVar;                /* flag to bind this variable to its level */bindVar334,11420
    Cudd_VariableType varType;  /* variable type (ps, ns, pi) */varType336,11533
    int pairIndex;              /* corresponding variable index (ps <-> ns) */pairIndex337,11598
    int varHandled;             /* flag: 1 means variable is already handled */varHandled338,11677
    Cudd_LazyGroupType varToBeGrouped; /* tells what grouping to apply */varToBeGrouped339,11757
} DdSubtable;DdSubtable340,11831
struct DdManager {      /* specialized DD symbol table */DdManager342,11846
    DdNode sentinel;            /* for collision lists */sentinel344,11924
    DdNode *one;                /* constant 1 */one345,11982
    DdNode *zero;               /* constant 0 */zero346,12031
    DdNode *plusinfinity;       /* plus infinity */plusinfinity347,12080
    DdNode *minusinfinity;      /* minus infinity */minusinfinity348,12132
    DdNode *background;         /* background value */background349,12185
    DdCache *acache;            /* address of allocated memory for cache */acache351,12265
    DdCache *cache;             /* the cache-based computed table */cache352,12341
    unsigned int cacheSlots;    /* total number of cache entries */cacheSlots353,12410
    int cacheShift;             /* shift value for cache hash function */cacheShift354,12478
    double cacheMisses;         /* number of cache misses (since resizing) */cacheMisses355,12552
    double cacheHits;           /* number of cache hits (since resizing) */cacheHits356,12630
    double minHit;              /* hit percentage above which to resize */minHit357,12706
    int cacheSlack;             /* slots still available for resizing */cacheSlack358,12781
    unsigned int maxCacheHard;  /* hard limit for cache size */maxCacheHard359,12854
    int size;                   /* number of unique subtables */size361,12941
    int sizeZ;                  /* for ZDD */sizeZ362,13006
    int maxSize;                /* max number of subtables before resizing */maxSize363,13052
    int maxSizeZ;               /* for ZDD */maxSizeZ364,13130
    DdSubtable *subtables;      /* array of unique subtables */subtables365,13176
    DdSubtable *subtableZ;      /* for ZDD */subtableZ366,13240
    DdSubtable constants;       /* unique subtable for the constants */constants367,13286
    unsigned int slots;         /* total number of hash buckets */slots368,13358
    unsigned int keys;          /* total number of BDD and ADD nodes */keys369,13425
    unsigned int keysZ;         /* total number of ZDD nodes */keysZ370,13497
    unsigned int dead;          /* total number of dead BDD and ADD nodes */dead371,13561
    unsigned int deadZ;         /* total number of dead ZDD nodes */deadZ372,13638
    unsigned int maxLive;       /* maximum number of live nodes */maxLive373,13707
    unsigned int minDead;       /* do not GC if fewer than these dead */minDead374,13774
    double gcFrac;              /* gc when this fraction is dead */gcFrac375,13847
    int gcEnabled;              /* gc is enabled */gcEnabled376,13915
    unsigned int looseUpTo;     /* slow growth beyond this limit */looseUpTo377,13967
    unsigned int initSlots;     /* initial size of a subtable */initSlots379,14107
    DdNode **stack;             /* stack for iterative procedures */stack380,14172
    ABC_INT64_T allocated;      /* number of nodes allocated */allocated382,14307
    double reclaimed;           /* number of nodes brought back from the dead */reclaimed384,14433
    int isolated;               /* isolated projection functions */isolated385,14514
    int *perm;                  /* current variable perm. (index to level) */perm386,14582
    int *permZ;                 /* for ZDD */permZ387,14660
    int *invperm;               /* current inv. var. perm. (level to index) */invperm388,14706
    int *invpermZ;              /* for ZDD */invpermZ389,14785
    DdNode **vars;              /* projection functions */vars390,14831
    int *map;                   /* variable map for fast swap */map391,14890
    DdNode **univ;              /* ZDD 1 for each variable */univ392,14955
    int linearSize;             /* number of rows and columns of linear */linearSize393,15017
    long *interact;             /* interacting variable matrix */interact394,15092
    long *linear;               /* linear transform matrix */linear395,15158
    DdNode **memoryList;        /* memory manager for symbol table */memoryList397,15248
    DdNode *nextFree;           /* list of free nodes */nextFree398,15318
    char *stash;                /* memory reserve */stash399,15375
    DdNode **deathRow;          /* queue for dereferencing */deathRow401,15452
    int deathRowDepth;          /* number of slots in the queue */deathRowDepth402,15514
    int nextDead;               /* index in the queue */nextDead403,15581
    unsigned deadMask;          /* mask for circular index update */deadMask404,15638
    CUDD_VALUE_TYPE epsilon;    /* tolerance on comparisons */epsilon407,15743
    int reordered;              /* flag set at the end of reordering */reordered409,15846
    int reorderings;            /* number of calls to Cudd_ReduceHeap */reorderings410,15918
    int siftMaxVar;             /* maximum number of vars sifted */siftMaxVar411,15991
    int siftMaxSwap;            /* maximum number of swaps per sifting */siftMaxSwap412,16059
    double maxGrowth;           /* maximum growth during reordering */maxGrowth413,16133
    double maxGrowthAlt;        /* alternate maximum growth for reordering */maxGrowthAlt414,16204
    int reordCycle;             /* how often to apply alternate threshold */reordCycle415,16282
    int autoDyn;                /* automatic dynamic reordering flag (BDD) */autoDyn416,16359
    int autoDynZ;               /* automatic dynamic reordering flag (ZDD) */autoDynZ417,16437
    Cudd_ReorderingType autoMethod;  /* default reordering method */autoMethod418,16515
    Cudd_ReorderingType autoMethodZ; /* default reordering method (ZDD) */autoMethodZ419,16584
    int realign;                /* realign ZDD order after BDD reordering */realign420,16659
    int realignZ;               /* realign BDD order after ZDD reordering */realignZ421,16736
    unsigned int nextDyn;       /* reorder if this size is reached */nextDyn422,16813
    unsigned int countDead;     /* if 0, count deads to trigger reordering */countDead423,16883
    MtrNode *tree;              /* Variable group tree (BDD) */tree424,16961
    MtrNode *treeZ;             /* Variable group tree (ZDD) */treeZ425,17025
    Cudd_AggregationType groupcheck; /* Used during group sifting */groupcheck426,17089
    int recomb;                 /* Used during group sifting */recomb427,17158
    int symmviolation;          /* Used during group sifting */symmviolation428,17222
    int arcviolation;           /* Used during group sifting */arcviolation429,17286
    int populationSize;         /* population size for GA */populationSize430,17350
    int numberXovers;           /* number of crossovers for GA */numberXovers431,17411
    DdLocalCache *localCaches;  /* local caches currently in existence */localCaches432,17477
    char *hooks;                /* application-specific field (used by vis) */hooks436,17602
    DdHook *preGCHook;          /* hooks to be called before GC */preGCHook437,17681
    DdHook *postGCHook;         /* hooks to be called after GC */postGCHook438,17748
    DdHook *preReorderingHook;  /* hooks to be called before reordering */preReorderingHook439,17814
    DdHook *postReorderingHook; /* hooks to be called after reordering */postReorderingHook440,17889
    FILE *out;                  /* stdout for this manager */out441,17963
    FILE *err;                  /* stderr for this manager */err442,18025
    Cudd_ErrorType errorCode;   /* info on last error */errorCode447,18162
    unsigned long memused;      /* total memory allocated for the manager */memused449,18251
    unsigned long maxmem;       /* target maximum memory */maxmem450,18328
    unsigned long maxmemhard;   /* hard limit for maximum memory */maxmemhard451,18388
    int garbageCollections;     /* number of garbage collections */garbageCollections452,18456
    long GCTime;                /* total time spent in garbage collection */GCTime453,18524
    long reordTime;             /* total time spent in reordering */reordTime454,18601
    double totCachehits;        /* total number of cache hits */totCachehits455,18670
    double totCacheMisses;      /* total number of cache misses */totCacheMisses456,18735
    double cachecollisions;     /* number of cache collisions */cachecollisions457,18802
    double cacheinserts;        /* number of cache insertions */cacheinserts458,18867
    double cacheLastInserts;    /* insertions at the last cache resizing */cacheLastInserts459,18932
    double cachedeletions;      /* number of deletions during garbage coll. */cachedeletions460,19008
    double nodesFreed;          /* number of nodes returned to the free list */nodesFreed462,19103
    double nodesDropped;        /* number of nodes killed by dereferencing */nodesDropped463,19183
    unsigned int peakLiveNodes; /* maximum number of live nodes */peakLiveNodes465,19268
    double uniqueLookUps;       /* number of unique table lookups */uniqueLookUps467,19360
    double uniqueLinks;         /* total distance traveled in coll. chains */uniqueLinks468,19429
    double recursiveCalls;      /* number of recursive calls */recursiveCalls471,19530
    double nextSample;          /* when to write next line of stats */nextSample473,19610
    double swapSteps;           /* number of elementary reordering steps */swapSteps475,19688
    array_t *iton;              /* maps ids in ddNode to node_t */iton479,19826
    array_t *order;             /* copy of order_list */order480,19893
    lsHandle handle;            /* where it is in network BDD list */handle481,19950
    network_t *network;network482,20020
    st__table *local_order;      /* for local BDDs */local_order483,20044
    int nvars;                  /* variables used so far */nvars484,20098
    int threshold;              /* for pseudo var threshold value*/threshold485,20158
    DdNode * bFunc;bFunc487,20233
    DdNode * bFunc2;bFunc2488,20253
    abctime TimeStop;           /* timeout for reordering */TimeStop489,20274
typedef struct Move {Move492,20339
    DdHalfWord x;x493,20361
    DdHalfWord y;y494,20379
    unsigned int flags;flags495,20397
    int size;size496,20421
    struct Move *next;next497,20435
} Move;Move498,20458
typedef struct DdQueueItem {DdQueueItem501,20499
    struct DdQueueItem *next;next502,20528
    struct DdQueueItem *cnext;cnext503,20558
    void *key;key504,20589
} DdQueueItem;DdQueueItem505,20604
typedef struct DdLevelQueue {DdLevelQueue508,20639
    void *first;first509,20669
    DdQueueItem **last;last510,20686
    DdQueueItem *freelist;freelist511,20710
    DdQueueItem **buckets;buckets512,20737
    int levels;levels513,20764
    int itemsize;itemsize514,20780
    int size;size515,20798
    int maxsize;maxsize516,20812
    int numBuckets;numBuckets517,20829
    int shift;shift518,20849
} DdLevelQueue;DdLevelQueue519,20864
#define cuddDeallocNode(cuddDeallocNode547,21903
#define cuddDeallocMove(cuddDeallocMove564,22488
#define cuddRef(cuddRef584,23150
#define cuddDeref(cuddDeref604,23874
#define cuddIsConstant(cuddIsConstant620,24416
#define cuddT(cuddT636,24935
#define cuddE(cuddE652,25431
#define cuddV(cuddV668,25916
#define cuddI(cuddI686,26466
#define cuddIZ(cuddIZ704,27076
#define cuddF2L(cuddF2L718,27432
#define ddHash(ddHash733,27835
#define ddHash(ddHash737,27947
#define ddCHash2(ddCHash2779,29052
#define ddCHash2_(ddCHash2_782,29189
#define ddCHash2(ddCHash2786,29324
#define ddCHash2_(ddCHash2_788,29429
#define cuddClean(cuddClean804,29821
#define ddMin(ddMin818,30156
#define ddMax(ddMax832,30481
#define ddAbs(ddAbs846,30805
#define ddEqualVal(ddEqualVal861,31180
#define cuddSatInc(cuddSatInc876,31548
#define cuddSatInc(cuddSatInc878,31584
#define cuddSatDec(cuddSatDec894,31972
#define cuddSatDec(cuddSatDec896,32008
#define DD_ONE(DD_ONE911,32384
#define DD_ZERO(DD_ZERO927,32888
#define DD_PLUS_INFINITY(DD_PLUS_INFINITY941,33232
#define DD_MINUS_INFINITY(DD_MINUS_INFINITY955,33593
#define cuddAdjust(cuddAdjust977,34433
#define cuddAdjust(cuddAdjust979,34461
#define DD_LSDIGIT(DD_LSDIGIT995,35020
#define DD_MSDIGIT(DD_MSDIGIT1010,35479
#define statLine(statLine1028,35949
#define statLine(statLine1034,36242
#define statLine(statLine1037,36298

src/bdd/cudd/cuddZddCount.c,405
static char rcsid[] DD_UNUSED = "$Id: cuddZddCount.c,v 1.14 2004/08/13 18:04:53 fabio Exp $";DD_UNUSED91,3617
Cudd_zddCount(Cudd_zddCount129,5314
Cudd_zddCountDouble(Cudd_zddCountDouble168,6376
cuddZddCountStep(cuddZddCountStep214,7734
cuddZddCountDoubleStep(cuddZddCountDoubleStep264,8804
 st__zdd_countfree(st__zdd_countfree315,9965
 st__zdd_count_dbl_free(st__zdd_count_dbl_free342,10480

src/bdd/cudd/cuddRef.c,688
static char rcsid[] DD_UNUSED = "$Id: cuddRef.c,v 1.28 2004/08/13 18:04:50 fabio Exp $";DD_UNUSED95,3774
Cudd_Ref(Cudd_Ref129,5093
Cudd_RecursiveDeref(Cudd_RecursiveDeref154,5693
Cudd_IterDerefBdd(Cudd_IterDerefBdd217,7378
Cudd_DelayedDerefBdd(Cudd_DelayedDerefBdd274,8880
Cudd_RecursiveDerefZdd(Cudd_RecursiveDerefZdd385,11841
Cudd_Deref(Cudd_Deref438,13103
Cudd_CheckZeroRef(Cudd_CheckZeroRef466,13967
cuddReclaim(cuddReclaim584,17671
cuddReclaimZdd(cuddReclaimZdd638,18859
cuddShrinkDeathRow(cuddShrinkDeathRow688,19849
cuddClearDeathRow(cuddClearDeathRow726,20898
cuddIsInDeathRow(cuddIsInDeathRow762,21800
cuddTimesInDeathRow(cuddTimesInDeathRow793,22411

src/bdd/cudd/cuddMatMult.c,433
static char rcsid[] DD_UNUSED = "$Id: cuddMatMult.c,v 1.17 2004/08/13 18:04:50 fabio Exp $";DD_UNUSED87,3419
Cudd_addMatrixMultiply(Cudd_addMatrixMultiply132,5534
Cudd_addTimesPlus(Cudd_addTimesPlus185,6969
Cudd_addTriangle(Cudd_addTriangle243,8685
Cudd_addOuterSum(Cudd_addOuterSum296,10056
addMMRecur(addMMRecur333,11212
addTriangleRecur(addTriangleRecur544,17815
cuddAddOuterSumRecur(cuddAddOuterSumRecur639,20270

src/bdd/cudd/cuddZddUtil.c,605
static char rcsid[] DD_UNUSED = "$Id: cuddZddUtil.c,v 1.27 2009/03/08 02:49:02 fabio Exp $";DD_UNUSED96,3810
Cudd_zddPrintMinterm(Cudd_zddPrintMinterm135,5443
Cudd_zddPrintCover(Cudd_zddPrintCover169,6319
Cudd_zddPrintDebug(Cudd_zddPrintDebug215,7718
Cudd_zddFirstPath(Cudd_zddFirstPath275,9647
Cudd_zddNextPath(Cudd_zddNextPath387,13118
Cudd_zddCoverPathToString(Cudd_zddCoverPathToString475,16223
Cudd_zddDumpDot(Cudd_zddDumpDot549,18252
cuddZddP(cuddZddP822,28067
zp2(zp2857,28982
zdd_print_minterm_aux(zdd_print_minterm_aux938,31020
zddPrintCoverAux(zddPrintCoverAux1010,33171

src/bdd/cudd/cuddZddMisc.c,297
static char rcsid[] DD_UNUSED = "$Id: cuddZddMisc.c,v 1.16 2009/02/20 02:14:58 fabio Exp $";DD_UNUSED90,3523
Cudd_zddDagSize(Cudd_zddDagSize127,4972
Cudd_zddCountMinterm(Cudd_zddCountMinterm158,5798
Cudd_zddPrintSubtable(Cudd_zddPrintSubtable184,6400
cuddZddDagInt(cuddZddDagInt265,9095

src/bdd/cudd/cuddAddInv.c,225
static char rcsid[] DD_UNUSED = "$Id: cuddAddInv.c,v 1.9 2004/08/13 18:04:45 fabio Exp $";DD_UNUSED82,3250
Cudd_addScalarInverse(Cudd_addScalarInverse120,4775
cuddAddScalarInverseRecur(cuddAddScalarInverseRecur156,5820

src/bdd/cudd/cuddHarwell.c,152
static char rcsid[] DD_UNUSED = "$Id: cuddHarwell.c,v 1.9 2004/08/13 18:04:49 fabio Exp $";DD_UNUSED78,3099
Cudd_addHarwell(Cudd_addHarwell124,5045

src/bdd/cudd/cuddInit.c,253
static char rcsid[] DD_UNUSED = "$Id: cuddInit.c,v 1.33 2007/07/01 05:10:50 fabio Exp $";DD_UNUSED86,3337
Cudd_Init(Cudd_Init125,4943
Cudd_Quit(Cudd_Quit225,8480
cuddZddInitUniv(cuddZddInitUniv252,9222
cuddZddFreeUniv(cuddZddFreeUniv301,10280

src/bdd/cudd/cuddUtil.c,3743
#define MODULUS1 MODULUS1120,4645
#define LEQA1 LEQA1121,4673
#define LEQQ1 LEQQ1122,4693
#define LEQR1 LEQR1123,4713
#define MODULUS2 MODULUS2124,4733
#define LEQA2 LEQA2125,4761
#define LEQQ2 LEQQ2126,4781
#define LEQR2 LEQR2127,4801
#define STAB_SIZE STAB_SIZE128,4820
#define STAB_DIV STAB_DIV129,4841
static char rcsid[] DD_UNUSED = "$Id: cuddUtil.c,v 1.81 2009/03/08 02:49:02 fabio Exp $";DD_UNUSED145,5629
static  DdNode  *background, *zero;background148,5727
static  DdNode  *background, *zero;zero148,5727
static  long cuddRand = 0;cuddRand150,5764
static  long cuddRand2;cuddRand2151,5791
static  long shuffleSelect;shuffleSelect152,5815
static  long shuffleTable[STAB_SIZE];shuffleTable153,5843
#define bang(bang159,6123
Cudd_PrintMinterm(Cudd_PrintMinterm208,8635
Cudd_bddPrintCover(Cudd_bddPrintCover245,9719
Cudd_PrintDebug(Cudd_PrintDebug374,13592
Cudd_DagSize(Cudd_DagSize434,15244
Cudd_EstimateCofactor(Cudd_EstimateCofactor469,16476
Cudd_EstimateCofactorSimple(Cudd_EstimateCofactorSimple509,17794
Cudd_SharingSize(Cudd_SharingSize536,18445
Cudd_CountMinterm(Cudd_CountMinterm570,19359
Cudd_CountPath(Cudd_CountPath615,20591
Cudd_EpdCountMinterm(Cudd_EpdCountMinterm649,21560
Cudd_CountPathsToNonZero(Cudd_CountPathsToNonZero699,22924
Cudd_Support(Cudd_Support732,23777
Cudd_SupportIndex(Cudd_SupportIndex807,26160
Cudd_SupportSize(Cudd_SupportSize849,27210
Cudd_VectorSupport(Cudd_VectorSupport900,28542
Cudd_VectorSupportIndex(Cudd_VectorSupportIndex972,30623
Cudd_VectorSupportSize(Cudd_VectorSupportSize1020,31909
Cudd_ClassifySupport(Cudd_ClassifySupport1077,33475
Cudd_CountLeaves(Cudd_CountLeaves1186,37045
Cudd_bddPickOneCube(Cudd_bddPickOneCube1213,37746
Cudd_bddPickOneMinterm(Cudd_bddPickOneMinterm1283,39681
Cudd_bddPickArbitraryMinterms(Cudd_bddPickArbitraryMinterms1385,42428
Cudd_SubsetWithMaskVars(Cudd_SubsetWithMaskVars1594,48774
Cudd_FirstCube(Cudd_FirstCube1790,54610
Cudd_NextCube(Cudd_NextCube1909,58393
Cudd_FirstPrime(Cudd_FirstPrime2020,62524
Cudd_NextPrime(Cudd_NextPrime2122,65503
Cudd_bddComputeCube(Cudd_bddComputeCube2188,67625
Cudd_addComputeCube(Cudd_addComputeCube2238,68933
Cudd_CubeArrayToBdd(Cudd_CubeArrayToBdd2290,70387
Cudd_BddToCubeArray(Cudd_BddToCubeArray2338,71871
Cudd_FirstNode(Cudd_FirstNode2392,73362
Cudd_NextNode(Cudd_NextNode2451,74905
Cudd_GenFree(Cudd_GenFree2483,75731
Cudd_IsGenEmpty(Cudd_IsGenEmpty2523,76752
Cudd_IndicesToCube(Cudd_IndicesToCube2545,77357
Cudd_PrintVersion(Cudd_PrintVersion2584,78143
Cudd_AverageDistance(Cudd_AverageDistance2606,78751
Cudd_Random(void)Cudd_Random2694,81474
Cudd_Srandom(Cudd_Srandom2756,83691
Cudd_Density(Cudd_Density2794,84869
Cudd_OutOfMem(Cudd_OutOfMem2829,85949
cuddP(cuddP2858,86831
cuddStCountfree(cuddStCountfree2887,87540
cuddCollectNodes(cuddCollectNodes2917,88254
cuddNodeArray(cuddNodeArray2971,89782
dp2(dp23010,90762
ddPrintMintermAux(ddPrintMintermAux3103,93351
ddDagInt(ddDagInt3157,94947
cuddNodeArrayRecur(cuddNodeArrayRecur3192,95873
cuddEstimateCofactor(cuddEstimateCofactor3232,96985
cuddUniqueLookup(cuddUniqueLookup3332,100109
cuddEstimateCofactorSimple(cuddEstimateCofactorSimple3391,101658
ddCountMintermAux(ddCountMintermAux3431,102807
ddCountPathAux(ddCountPathAux3504,104850
ddEpdCountMintermAux(ddEpdCountMintermAux3565,106512
ddCountPathsToNonZero(ddCountPathsToNonZero3637,108512
ddSupportStep(ddSupportStep3696,110147
ddClearFlag(ddClearFlag3727,110830
ddLeavesInt(ddLeavesInt3758,111562
ddPickArbitraryMinterms(ddPickArbitraryMinterms3790,112334
ddPickRepresentativeCube(ddPickRepresentativeCube3851,114153
ddEpdFree(ddEpdFree3914,115716

src/bdd/cudd/cuddZddFuncs.c,1062
static char rcsid[] DD_UNUSED = "$Id: cuddZddFuncs.c,v 1.16 2008/04/25 07:39:33 fabio Exp $";DD_UNUSED105,4238
Cudd_zddProduct(Cudd_zddProduct145,5910
Cudd_zddUnateProduct(Cudd_zddUnateProduct176,6646
Cudd_zddWeakDiv(Cudd_zddWeakDiv210,7624
Cudd_zddDivide(Cudd_zddDivide241,8373
Cudd_zddWeakDivF(Cudd_zddWeakDivF270,9003
Cudd_zddDivideF(Cudd_zddDivideF299,9622
Cudd_zddComplement(Cudd_zddComplement332,10549
cuddZddProduct(cuddZddProduct380,11795
cuddZddUnateProduct(cuddZddUnateProduct617,18859
cuddZddWeakDiv(cuddZddWeakDiv761,22895
cuddZddWeakDivF(cuddZddWeakDivF922,26999
cuddZddDivide(cuddZddDivide1159,33440
cuddZddDivideF(cuddZddDivideF1259,35938
cuddZddGetCofactors3(cuddZddGetCofactors31360,38625
cuddZddGetCofactors2(cuddZddGetCofactors21487,42225
cuddZddComplement(cuddZddComplement1522,43160
cuddZddGetPosVarIndex(cuddZddGetPosVarIndex1565,44174
cuddZddGetNegVarIndex(cuddZddGetNegVarIndex1586,44640
cuddZddGetPosVarLevel(cuddZddGetPosVarLevel1607,45100
cuddZddGetNegVarLevel(cuddZddGetNegVarLevel1628,45592

src/bdd/cudd/cuddAddFind.c,268
static char rcsid[] DD_UNUSED = "$Id: cuddAddFind.c,v 1.8 2004/08/13 18:04:45 fabio Exp $";DD_UNUSED84,3336
Cudd_addFindMax(Cudd_addFindMax116,4694
Cudd_addFindMin(Cudd_addFindMin156,5514
Cudd_addIthBit(Cudd_addIthBit205,6813
addDoIthBit(addDoIthBit260,8348

src/bdd/cudd/cuddSplit.c,261
Cudd_SplitSet(Cudd_SplitSet128,5321
cuddSplitSetRecur(cuddSplitSetRecur247,9135
selectMintermsFromUniverse(selectMintermsFromUniverse499,16622
mintermsFromUniverse(mintermsFromUniverse562,18163
bddAnnotateMintermCount(bddAnnotateMintermCount633,20233

src/bdd/cudd/cuddGroup.c,1854
#define DD_NORMAL_SIFT DD_NORMAL_SIFT91,3481
#define DD_LAZY_SIFT DD_LAZY_SIFT92,3507
#define DD_SIFT_DOWN DD_SIFT_DOWN95,3574
#define DD_SIFT_UP DD_SIFT_UP96,3600
    typedef int (*DD_CHKFP)(DdManager *, int, int);DD_CHKFP106,4109
static char rcsid[] DD_UNUSED = "$Id: cuddGroup.c,v 1.44 2009/02/21 18:24:10 fabio Exp $";DD_UNUSED113,4416
static  int     *entry;entry116,4515
static  int     extsymmcalls;extsymmcalls120,4626
static  int     extsymm;extsymm121,4656
static  int     secdiffcalls;secdiffcalls122,4681
static  int     secdiff;secdiff123,4711
static  int     secdiffmisfire;secdiffmisfire124,4736
static  int     pr = 0; /* flag to enable printing while debugging */pr127,4791
static unsigned int originalSize;originalSize130,4924
Cudd_MakeTreeNode(Cudd_MakeTreeNode192,8326
cuddTreeSifting(cuddTreeSifting260,10720
ddTreeSiftingAux(ddTreeSiftingAux347,13479
ddCountInternalMtrNodes(ddCountInternalMtrNodes399,14905
ddReorderChildren(ddReorderChildren439,16015
ddFindNodeHiLo(ddFindNodeHiLo603,21900
ddUniqueCompareGroup(ddUniqueCompareGroup678,24442
ddGroupSifting(ddGroupSifting706,25253
ddCreateGroup(ddCreateGroup901,31338
ddGroupSiftingAux(ddGroupSiftingAux942,32468
ddGroupSiftingUp(ddGroupSiftingUp1140,39198
ddGroupSiftingDown(ddGroupSiftingDown1298,44755
ddGroupMove(ddGroupMove1474,50735
ddGroupMoveBackward(ddGroupMoveBackward1580,53882
ddGroupSiftingBackward(ddGroupSiftingBackward1654,55937
ddMergeGroups(ddMergeGroups1761,59429
ddDissolveGroup(ddDissolveGroup1809,60779
ddNoCheck(ddNoCheck1843,61541
ddSecDiffCheck(ddSecDiffCheck1867,62227
ddExtSymmCheck(ddExtSymmCheck1924,63579
ddVarGroupCheck(ddVarGroupCheck2074,68240
ddSetVarHandled(ddSetVarHandled2114,69259
ddResetVarHandled(ddResetVarHandled2138,69817
ddIsVarHandled(ddIsVarHandled2162,70403

src/bdd/cudd/cuddRead.c,180
static char rcsid[] DD_UNUSED = "$Id: cuddRead.c,v 1.6 2004/08/13 18:04:50 fabio Exp $";DD_UNUSED81,3141
Cudd_addRead(Cudd_addRead146,6354
Cudd_bddRead(Cudd_bddRead369,13825

src/bdd/cudd/cuddPriority.c,943
#define DD_DEBUG DD_DEBUG88,3120
static char rcsid[] DD_UNUSED = "$Id: cuddPriority.c,v 1.33 2009/02/20 02:14:58 fabio Exp $";DD_UNUSED105,3878
Cudd_PrioritySelect(Cudd_PrioritySelect175,7405
Cudd_Xgty(Cudd_Xgty280,10508
Cudd_Xeqy(Cudd_Xeqy345,12400
Cudd_addXeqy(Cudd_addXeqy408,14228
Cudd_Dxygtdxz(Cudd_Dxygtdxz494,16733
Cudd_Dxygtdyz(Cudd_Dxygtdyz621,20722
Cudd_Inequality(Cudd_Inequality744,24509
Cudd_Disequality(Cudd_Disequality932,31427
Cudd_bddInterval(Cudd_bddInterval1121,38588
Cudd_CProjection(Cudd_CProjection1200,40723
Cudd_addHamming(Cudd_addHamming1255,42101
Cudd_MinHammingDist(Cudd_MinHammingDist1318,43972
Cudd_bddClosestCube(Cudd_bddClosestCube1359,45228
cuddCProjectionRecur(cuddCProjectionRecur1425,46972
cuddBddClosestCube(cuddBddClosestCube1646,54538
cuddMinHammingDistRecur(cuddMinHammingDistRecur1858,60625
separateCube(separateCube1938,62705
createResult(createResult1987,64088

src/bdd/cudd/cuddClip.c,450
static char rcsid[] DD_UNUSED = "$Id: cuddClip.c,v 1.8 2004/08/13 18:04:47 fabio Exp $";DD_UNUSED90,3507
Cudd_bddClippingAnd(Cudd_bddClippingAnd129,5187
Cudd_bddClippingAndAbstract(Cudd_bddClippingAndAbstract163,6257
cuddBddClippingAnd(cuddBddClippingAnd201,7486
cuddBddClippingAndAbstract(cuddBddClippingAndAbstract233,8430
cuddBddClippingAndRecur(cuddBddClippingAndRecur269,9597
cuddBddClipAndAbsRecur(cuddBddClipAndAbsRecur405,13394

src/bdd/cudd/cuddEssent.c,1765
#define BPL BPL87,3356
#define LOGBPL LOGBPL88,3371
struct DdTlcInfo {DdTlcInfo122,4973
    DdHalfWord *vars;vars123,4992
    long *phases;phases124,5014
    DdHalfWord cnt;cnt125,5032
struct TlClause {TlClause132,5335
    DdHalfWord v1, v2;v1133,5353
    DdHalfWord v1, v2;v2133,5353
    short p1, p2;p1134,5376
    short p1, p2;p2134,5376
    struct TlClause *next;next135,5394
typedef long BitVector;BitVector142,5666
typedef struct TlClause TlClause;TlClause143,5690
static char rcsid[] DD_UNUSED = "$Id: cuddEssent.c,v 1.24 2009/02/21 18:24:10 fabio Exp $";DD_UNUSED150,5979
static BitVector *Tolv;Tolv153,6079
static BitVector *Tolp;Tolp154,6103
static BitVector *Eolv;Eolv155,6127
static BitVector *Eolp;Eolp156,6151
Cudd_FindEssential(Cudd_FindEssential209,8916
Cudd_bddIsVarEssential(Cudd_bddIsVarEssential239,9669
Cudd_FindTwoLiteralClauses(Cudd_FindTwoLiteralClauses277,10766
Cudd_ReadIthClause(Cudd_ReadIthClause359,12879
Cudd_PrintTwoLiteralClauses(Cudd_PrintTwoLiteralClauses393,13835
Cudd_tlcInfoFree(Cudd_tlcInfoFree455,15772
ddFindEssentialRecur(ddFindEssentialRecur486,16843
ddFindTwoLiteralClausesRecur(ddFindTwoLiteralClausesRecur620,21111
computeClauses(computeClauses768,26447
computeClausesWithUniverse(computeClausesWithUniverse1068,38592
emptyClauseSet(void)emptyClauseSet1140,40980
sentinelp(sentinelp1174,41807
equalp(equalp1197,42378
beforep(beforep1233,43469
oneliteralp(oneliteralp1265,44336
impliedp(impliedp1288,44920
bitVectorAlloc(bitVectorAlloc1319,45780
bitVectorClear(bitVectorClear1353,46725
bitVectorFree(bitVectorFree1383,47516
bitVectorRead(bitVectorRead1404,47958
bitVectorSet(bitVectorSet1434,48605
tlcInfoAlloc(void)tlcInfoAlloc1462,49221

src/bdd/cudd/cuddApa.c,1266
static char rcsid[] DD_UNUSED = "$Id: cuddApa.c,v 1.19 2009/03/08 01:27:50 fabio Exp $";DD_UNUSED97,4032
static  DdNode  *background, *zero;background100,4129
static  DdNode  *background, *zero;zero100,4129
Cudd_ApaNumberOfDigits(Cudd_ApaNumberOfDigits139,5781
Cudd_NewApaNumber(Cudd_NewApaNumber166,6443
Cudd_ApaCopy(Cudd_ApaCopy186,6926
Cudd_ApaAdd(Cudd_ApaAdd213,7552
Cudd_ApaSubtract(Cudd_ApaSubtract245,8370
Cudd_ApaShortDivision(Cudd_ApaShortDivision275,9172
Cudd_ApaIntDivision(Cudd_ApaIntDivision316,10552
Cudd_ApaShiftRight(Cudd_ApaShiftRight353,11570
Cudd_ApaSetToLiteral(Cudd_ApaSetToLiteral381,12285
Cudd_ApaPowerOfTwo(Cudd_ApaPowerOfTwo409,12997
Cudd_ApaCompare(Cudd_ApaCompare441,13749
Cudd_ApaCompareRatios(Cudd_ApaCompareRatios481,15019
Cudd_ApaPrintHex(Cudd_ApaPrintHex524,16347
Cudd_ApaPrintDecimal(Cudd_ApaPrintDecimal554,17069
Cudd_ApaPrintExponential(Cudd_ApaPrintExponential611,18652
Cudd_ApaCountMinterm(Cudd_ApaCountMinterm676,20675
Cudd_ApaPrintMinterm(Cudd_ApaPrintMinterm753,22781
Cudd_ApaPrintMintermExp(Cudd_ApaPrintMintermExp792,23801
Cudd_ApaPrintDensity(Cudd_ApaPrintDensity830,24698
cuddApaCountMintermAux(cuddApaCountMintermAux891,26786
cuddApaStCountfree(cuddApaStCountfree964,28959

src/bdd/cudd/cuddLiteral.c,262
static char rcsid[] DD_UNUSED = "$Id: cuddLiteral.c,v 1.8 2004/08/13 18:04:50 fabio Exp $";DD_UNUSED80,3278
Cudd_bddLiteralSetIntersection(Cudd_bddLiteralSetIntersection118,4916
cuddBddLiteralSetIntersectionRecur(cuddBddLiteralSetIntersectionRecur153,5960

src/bdd/cudd/cuddExport.c,547
static char rcsid[] DD_UNUSED = "$Id: cuddExport.c,v 1.22 2009/03/08 02:49:02 fabio Exp $";DD_UNUSED89,3603
Cudd_DumpBlif(Cudd_DumpBlif136,5965
Cudd_DumpBlifBody(Cudd_DumpBlifBody252,9734
Cudd_DumpDot(Cudd_DumpDot344,12849
Cudd_DumpDaVinci(Cudd_DumpDaVinci615,22950
Cudd_DumpDDcal(Cudd_DumpDDcal729,27070
Cudd_DumpFactoredForm(Cudd_DumpFactoredForm889,32615
ddDoDumpBlif(ddDoDumpBlif956,35122
ddDoDumpDaVinci(ddDoDumpDaVinci1117,40306
ddDoDumpDDcal(ddDoDumpDDcal1216,43223
ddDoDumpFactoredForm(ddDoDumpFactoredForm1310,46012

src/bdd/cudd/cuddCache.c,840
#define DD_HYSTO_BINS DD_HYSTO_BINS78,2931
static char rcsid[] DD_UNUSED = "$Id: cuddCache.c,v 1.34 2009/02/19 16:17:50 fabio Exp $";DD_UNUSED96,3701
cuddInitCache(cuddInitCache136,5314
cuddCacheInsert(cuddCacheInsert222,8315
cuddCacheInsert2(cuddCacheInsert2277,9556
cuddCacheInsert1(cuddCacheInsert1323,10543
cuddCacheLookup(cuddCacheLookup369,11594
cuddCacheLookupZdd(cuddCacheLookupZdd435,13143
cuddCacheLookup2(cuddCacheLookup2502,14698
cuddCacheLookup1(cuddCacheLookup1556,15946
cuddCacheLookup2Zdd(cuddCacheLookup2Zdd610,17183
cuddCacheLookup1Zdd(cuddCacheLookup1Zdd664,18446
cuddConstantLookup(cuddConstantLookup721,19886
cuddCacheProfile(cuddCacheProfile785,21406
cuddCacheResize(cuddCacheResize925,25712
cuddCacheFlush(cuddCacheFlush1047,29525
cuddComputeFloorLog2(cuddComputeFloorLog21079,30273

src/bdd/cudd/cuddZddReord.c,1234
#define DD_MAX_SUBTABLE_SPARSITY DD_MAX_SUBTABLE_SPARSITY87,3391
#define DD_SHRINK_FACTOR DD_SHRINK_FACTOR88,3426
static char rcsid[] DD_UNUSED = "$Id: cuddZddReord.c,v 1.47 2004/08/13 18:04:53 fabio Exp $";DD_UNUSED105,4192
int     *zdd_entry;zdd_entry108,4294
int     zddTotalNumberSwapping;zddTotalNumberSwapping110,4315
static  DdNode  *empty;empty112,4348
Cudd_zddReduceHeap(Cudd_zddReduceHeap171,6816
Cudd_zddShuffleHeap(Cudd_zddShuffleHeap304,10670
cuddZddAlignToBdd(cuddZddAlignToBdd352,12355
cuddZddNextHigh(cuddZddNextHigh413,14203
cuddZddNextLow(cuddZddNextLow435,14658
cuddZddUniqueCompare(cuddZddUniqueCompare459,15226
cuddZddSwapInPlace(cuddZddSwapInPlace484,15944
cuddZddSwapping(cuddZddSwapping746,24470
cuddZddSifting(cuddZddSifting867,27876
zddSwapAny(zddSwapAny961,30368
cuddZddSiftingAux(cuddZddSiftingAux1117,34873
cuddZddSiftingUp(cuddZddSiftingUp1237,38417
cuddZddSiftingDown(cuddZddSiftingDown1300,39970
cuddZddSiftingBackward(cuddZddSiftingBackward1364,41602
zddReorderPreprocess(zddReorderPreprocess1410,42799
zddReorderPostprocess(zddReorderPostprocess1439,43623
zddShuffle(zddShuffle1534,46924
zddSiftUp(zddSiftUp1609,48986
zddFixTree(zddFixTree1645,49811

src/bdd/cudd/cuddAnneal.c,808
#define BETA BETA77,2860
#define ALPHA ALPHA78,2878
#define EXC_PROB EXC_PROB79,2897
#define JUMP_UP_PROB JUMP_UP_PROB80,2919
#define MAXGEN_RATIO MAXGEN_RATIO81,2945
#define STOP_TEMP STOP_TEMP82,2971
static char rcsid[] DD_UNUSED = "$Id: cuddAnneal.c,v 1.14 2004/08/13 18:04:46 fabio Exp $";DD_UNUSED99,3732
static  int     tosses;tosses105,3919
static  int     acceptances;acceptances106,3943
cuddAnnealing(cuddAnnealing158,6378
stopping_criterion(stopping_criterion309,10967
random_generator(void)random_generator339,11575
ddExchange(ddExchange359,12115
ddJumpingAux(ddJumpingAux508,16590
ddJumpingUp(ddJumpingUp579,18719
ddJumpingDown(ddJumpingDown638,20188
siftBackwardProb(siftBackwardProb698,21733
copyOrder(copyOrder762,23389
restoreOrder(restoreOrder792,24051

src/bdd/cudd/cuddAndAbs.c,278
static char rcsid[] DD_UNUSED = "$Id: cuddAndAbs.c,v 1.19 2004/08/13 18:04:46 fabio Exp $";DD_UNUSED83,3294
Cudd_bddAndAbstract(Cudd_bddAndAbstract124,4951
Cudd_bddAndAbstractLimit(Cudd_bddAndAbstractLimit158,5940
cuddBddAndAbstractRecur(cuddBddAndAbstractRecur200,7234

src/bdd/cudd/cuddZddPort.c,299
static char rcsid[] DD_UNUSED = "$Id: cuddZddPort.c,v 1.13 2004/08/13 18:04:53 fabio Exp $";DD_UNUSED89,3503
Cudd_zddPortFromBdd(Cudd_zddPortFromBdd131,5350
Cudd_zddPortToBdd(Cudd_zddPortToBdd160,5977
zddPortFromBddStep(zddPortFromBddStep197,6996
zddPortToBddStep(zddPortToBddStep305,9785

src/bdd/cas/cas.h,133
#define ABC__bdd__cas__cas_hABC__bdd__cas__cas_h22,563
#define MAXINPUTS MAXINPUTS38,1065
#define MAXOUTPUTS MAXOUTPUTS39,1090

src/bdd/cas/casCore.c,1875
#define PRD(PRD58,2226
#define PRB_(PRB_59,2311
#define PRK(PRK60,2389
#define PRK2(PRK261,2505
int Abc_CascadeExperiment( char * pFileGeneric, DdManager * dd, DdNode ** pOutputs, int nInputs, int nOutputs, int nLutSize, int fCheck, int fVerbose )Abc_CascadeExperiment79,3081
static int s_SuppSize[MAXOUTPUTS];s_SuppSize476,16227
int CompareSupports( int *ptrX, int *ptrY )CompareSupports477,16262
static int s_MintOnes[MAXOUTPUTS];s_MintOnes485,16491
int CompareMinterms( int *ptrX, int *ptrY )CompareMinterms486,16526
int GrayCode ( int BinCode )GrayCode492,16691
DdNode * GetSingleOutputFunction( DdManager * dd, DdNode ** pbOuts, int nOuts, DdNode ** pbVarsEnc, int nVarsEnc, int fVerbose )GetSingleOutputFunction508,16997
DdNode * GetSingleOutputFunctionRemapped( DdManager * dd, DdNode ** pOutputs, int nOuts, DdNode ** pbVarsEnc, int nVarsEnc )GetSingleOutputFunctionRemapped602,20259
DdNode * GetSingleOutputFunctionRemappedNewDD( DdManager * dd, DdNode ** pOutputs, int nOuts, DdManager ** DdNew )GetSingleOutputFunctionRemappedNewDD660,21839
void WriteSingleOutputFunctionBlif( DdManager * dd, DdNode * aFunc, char ** pNames, int nNames, char * FileName )WriteSingleOutputFunctionBlif781,25808
void WriteDDintoBLIFfile( FILE * pFile, DdNode * Func, char * OutputName, char * Prefix, char ** InputNames )WriteDDintoBLIFfile815,26648
static DdManager * s_ddmin;s_ddmin927,30785
void WriteDDintoBLIFfileReorder( DdManager * dd, FILE * pFile, DdNode * Func, char * OutputName, char * Prefix, char ** InputNames )WriteDDintoBLIFfileReorder940,31048
Cudd_bddTransferPermute( DdManager * ddSource,Cudd_bddTransferPermute1094,36832
cuddBddTransferPermute( DdManager * ddS, DdManager * ddD, DdNode * f, int * Permute )cuddBddTransferPermute1128,37932
cuddBddTransferPermuteRecur( DdManager * ddS,cuddBddTransferPermuteRecur1184,39541

src/bdd/cas/casDec.c,1617
    int nIns;                // the number of LUT variablesnIns37,927
    int nInsP;               // the number of inputs coming from the previous LUTnInsP38,987
    int nCols;               // the number of columns in this LUTnCols39,1069
    int nMulti;              // the column multiplicity, [log2(nCols)]nMulti40,1135
    int nSimple;             // the number of outputs implemented as direct connections to inputs of the previous blocknSimple41,1206
    int Level;               // the starting level in the ADD in this LUTLevel42,1326
    DdNode ** pbCols;        // the array of columns represented by BDDspbCols50,1678
    DdNode ** pbCodes;       // the array of codes (in terms of pbVarsOut)pbCodes51,1751
    DdNode ** paNodes;       // the array of starting ADD nodes on the next level (also referenced)paNodes52,1826
    DdNode * bRelation;      // the relation after encodingbRelation54,1927
} LUT;LUT62,2310
static int s_LutSize = 15;s_LutSize80,3268
static int s_nFuncVars; s_nFuncVars81,3295
long s_EncodingTime;s_EncodingTime83,3321
long s_EncSearchTime;s_EncSearchTime85,3343
long s_EncComputeTime;s_EncComputeTime86,3365
#define PRB_(PRB_99,3777
#define PRK(PRK100,3855
#define PRK2(PRK2101,3971
int CreateDecomposedNetwork( DdManager * dd, DdNode * aFunc, char ** pNames, int nNames, char * FileName, int nLutSize, int fCheck, int fVerbose )CreateDecomposedNetwork108,4313
void WriteLUTSintoBLIFfile( FILE * pFile, DdManager * dd, LUT ** pLuts, int nLuts, DdNode ** bCVars, char ** pNames, int nNames, char * FileName )WriteLUTSintoBLIFfile416,15360

src/bdd/reo/reo.h,6756
#define ABC__bdd__reo__reo_hABC__bdd__reo__reo_h20,497
#define REO_REORDER_LIMIT REO_REORDER_LIMIT37,877
#define REO_QUAL_PAR REO_QUAL_PAR38,958
#define REO_CONST_LEVEL REO_CONST_LEVEL40,1090
#define REO_TOPREF_UNDEF REO_TOPREF_UNDEF41,1163
#define REO_CHUNK_SIZE REO_CHUNK_SIZE42,1231
#define REO_COST_EPSILON REO_COST_EPSILON43,1313
#define REO_HIGH_VALUE REO_HIGH_VALUE44,1416
#define REO_ENABLE REO_ENABLE46,1528
#define REO_DISABLE REO_DISABLE47,1597
    REO_MINIMIZE_NODES,REO_MINIMIZE_NODES51,1732
    REO_MINIMIZE_WIDTH,   // may not work for BDDs with complemented edgesREO_MINIMIZE_WIDTH52,1756
    REO_MINIMIZE_APLREO_MINIMIZE_APL53,1831
} reo_min_type;reo_min_type54,1852
typedef struct _reo_unit     reo_unit;    // the unit representing one DD node during reorderingreo_unit60,2089
typedef struct _reo_plane    reo_plane;   // the set of nodes on one levelreo_plane61,2186
typedef struct _reo_hash     reo_hash;    // the entry in the hash tablereo_hash62,2261
typedef struct _reo_man      reo_man;     // the reordering managerreo_man63,2334
typedef struct _reo_test     reo_test;    // reo_test64,2402
struct _reo_unit_reo_unit66,2449
    short       lev;             // the level of this node at the beginninglev68,2468
    short       TopRef;          // the top level from which this node is refed (used to update BDD width)TopRef69,2544
    short       TopRefNew;       // the new top level from which this node is refed (used to update BDD width)TopRefNew70,2651
    short       n;               // the number of incoming edges (similar to ref count in the BDD)n71,2762
    int         Sign;            // the signatureSign72,2861
    reo_unit *  pE;              // the pointer to the "else" branchpE74,2912
    reo_unit *  pT;              // the pointer to the "then" branchpT75,2981
    reo_unit *  Next;            // the link to the next one in the listNext76,3050
    double      Weight;          // the probability of traversing this nodeWeight77,3123
struct _reo_plane_reo_plane80,3203
    int         fSifted;         // to mark the sifted variablesfSifted82,3223
    int         statsNodes;      // the number of nodes in the current levelstatsNodes83,3288
    int         statsWidth;      // the width on the current levelstatsWidth84,3365
    double      statsApl;        // the sum of node probabilities on this levelstatsApl85,3432
    double      statsCost;       // the current cost is stored herestatsCost86,3512
    double      statsCostAbove;  // the current cost is stored herestatsCostAbove87,3580
    double      statsCostBelow;  // the current cost is stored herestatsCostBelow88,3648
    reo_unit *  pHead;           // the pointer to the beginning of the unit listpHead90,3717
struct _reo_hash_reo_hash93,3803
    int         Sign;            // signature of the current cache operationSign95,3822
    reo_unit *  Arg1;            // the first argumentArg196,3899
    reo_unit *  Arg2;            // the second argumentArg297,3954
    reo_unit *  Arg3;            // the third argumentArg398,4010
struct _reo_man_reo_man101,4069
    int         fMinWidth;       // the flag to enable reordering for minimum widthfMinWidth104,4143
    int         fMinApl;         // the flag to enable reordering for minimum APLfMinApl105,4227
    int         fVerbose;        // the verbosity levelfVerbose106,4309
    int         fVerify;         // the flag toggling verificationfVerify107,4365
    int         fRemapUp;        // the flag to enable remapping   fRemapUp108,4432
    int         nIters;          // the number of iterations of sifting to performnIters109,4500
    DdManager * dd;              // the CUDD BDD managerdd112,4646
    int *       pOrder;          // the resulting variable order will be returned herepOrder113,4703
    int         fThisIsAdd;      // this flag is one if the function is the ADD fThisIsAdd116,4817
    int *       pSupp;           // the support of the given functionpSupp117,4898
    int         nSuppAlloc;      // the max allowed number of support variablesnSuppAlloc118,4968
    int         nSupp;           // the number of support variablesnSupp119,5048
    int *       pOrderInt;       // the array storing the internal variable permutationpOrderInt120,5116
    double *    pVarCosts;       // other arrayspVarCosts121,5204
    int *       pLevelOrder;     // other arrayspLevelOrder122,5253
    reo_unit ** pWidthCofs;      // temporary storage for cofactors used during reordering for widthpWidthCofs123,5302
    int         nNodesBeg;nNodesBeg126,5438
    int         nNodesCur;nNodesCur127,5465
    int         nNodesEnd;nNodesEnd128,5492
    int         nWidthCur;nWidthCur129,5519
    int         nWidthBeg;nWidthBeg130,5546
    int         nWidthEnd;nWidthEnd131,5573
    double      nAplCur;nAplCur132,5600
    double      nAplBeg;nAplBeg133,5625
    double      nAplEnd;nAplEnd134,5650
    int *       pMapToPlanes;    // the mapping of var indexes into plane levelspMapToPlanes137,5728
    int *       pMapToDdVarsOrig;// the mapping of plane levels into the original indexespMapToDdVarsOrig138,5809
    int *       pMapToDdVarsFinal;// the mapping of plane levels into the final indexespMapToDdVarsFinal139,5899
    reo_plane * pPlanes;pPlanes142,6012
    int         nPlanes;nPlanes143,6037
    reo_unit ** pTops;pTops144,6062
    int         nTops;nTops145,6085
    int         nTopsAlloc;nTopsAlloc146,6108
    reo_hash *  HTable;           // the table itselfHTable149,6159
    int         nTableSize;       // the size of the hash tablenTableSize150,6213
    int         Signature;        // the signature counterSignature151,6277
    int         nNodesMaxAlloc;   // this parameters determins how much memory is allocatednNodesMaxAlloc154,6369
    DdNode **   pRefNodes;pRefNodes155,6461
    int         nRefNodes;nRefNodes156,6488
    int         nRefNodesAlloc;nRefNodesAlloc157,6515
    reo_unit *  pUnitFreeList;pUnitFreeList160,6578
    reo_unit ** pMemChunks;pMemChunks161,6609
    int         nMemChunks;nMemChunks162,6637
    int         nMemChunksAlloc;nMemChunksAlloc163,6665
    int         nUnitsUsed;nUnitsUsed164,6698
    int         HashSuccess;HashSuccess167,6754
    int         HashFailure;HashFailure168,6783
    int         nSwaps;            // the number of swapsnSwaps169,6812
    int         nNISwaps;          // the number of swaps without interactionnNISwaps170,6870
#define Unit_Regular(Unit_Regular174,6980
#define Unit_Not(Unit_Not175,7049
#define Unit_NotCond(Unit_NotCond176,7117
#define Unit_IsConstant(Unit_IsConstant177,7186

src/bdd/reo/reoProfile.c,592
void reoProfileNodesStart( reo_man * p )reoProfileNodesStart46,1422
void reoProfileAplStart( reo_man * p )reoProfileAplStart78,2672
void reoProfileWidthStart( reo_man * p )reoProfileWidthStart130,4469
void reoProfileWidthStart2( reo_man * p )reoProfileWidthStart2222,7593
void reoProfileNodesPrint( reo_man * p )reoProfileNodesPrint289,9613
void reoProfileAplPrint( reo_man * p )reoProfileAplPrint305,9994
void reoProfileWidthPrint( reo_man * p )reoProfileWidthPrint321,10368
void reoProfileWidthVerifyLevel( reo_plane * pPlane, int Level )reoProfileWidthVerifyLevel354,11237

src/bdd/reo/reoTest.c,468
void Extra_ReorderTest( DdManager * dd, DdNode * Func )Extra_ReorderTest43,1371
void Extra_ReorderTestArray( DdManager * dd, DdNode * Funcs[], int nFuncs )Extra_ReorderTestArray75,2353
DdNode * Extra_ReorderCudd( DdManager * dd, DdNode * aFunc, int pPermuteReo[] )Extra_ReorderCudd109,3458
int Extra_bddReorderTest( DdManager * dd, DdNode * bF )Extra_bddReorderTest180,6178
int Extra_addReorderTest( DdManager * dd, DdNode * aF )Extra_addReorderTest217,7346

src/bdd/reo/reoShuffle.c,214
DdNode * reoShuffle( reo_man * p, DdManager * dd, DdNode * bFunc, int * pPerm, int * pPermInv )reoShuffle49,1752
void Extra_ShuffleTest( reo_man * pReo, DdManager * dd, DdNode * Func )Extra_ShuffleTest159,5007

src/bdd/reo/reoTransfer.c,209
reo_unit * reoTransferNodesToUnits_rec( reo_man * p, DdNode * F )reoTransferNodesToUnits_rec43,1346
DdNode * reoTransferUnitsToNodes_rec( reo_man * p, reo_unit * pUnit )reoTransferUnitsToNodes_rec120,4056

src/bdd/reo/reoCore.c,528
double s_AplBefore;s_AplBefore32,901
double s_AplAfter;s_AplAfter33,921
void reoReorderArray( reo_man * p, DdManager * dd, DdNode * Funcs[], DdNode * FuncsRes[], int nFuncs, int * pOrder )reoReorderArray50,1380
void reoResizeStructures( reo_man * p, int nDdVarsMax, int nNodesMax, int nFuncs )reoResizeStructures269,8589
int reoRecursiveDeref( reo_unit * pUnit )reoRecursiveDeref368,12672
int reoCheckZeroRefs( reo_plane * pPlane )reoCheckZeroRefs394,13289
int reoCheckLevels( reo_man * p )reoCheckLevels418,13830

src/bdd/reo/reoSift.c,58
void reoReorderSift( reo_man * p )reoReorderSift44,1343

src/bdd/reo/reoApi.c,909
reo_man * Extra_ReorderInit( int nDdVarsMax, int nNodesMax )Extra_ReorderInit50,1722
void Extra_ReorderQuit( reo_man * p )Extra_ReorderQuit79,2509
void Extra_ReorderSetMinimizationType( reo_man * p, reo_min_type fMinType )Extra_ReorderSetMinimizationType122,4325
void Extra_ReorderSetRemapping( reo_man * p, int fRemapUp )Extra_ReorderSetRemapping172,6156
void Extra_ReorderSetIterations( reo_man * p, int nIters )Extra_ReorderSetIterations192,6811
void Extra_ReorderSetVerification( reo_man * p, int fVerify )Extra_ReorderSetVerification212,7480
void Extra_ReorderSetVerbosity( reo_man * p, int fVerbose )Extra_ReorderSetVerbosity229,7905
DdNode * Extra_Reorder( reo_man * p, DdManager * dd, DdNode * Func, int * pOrder )Extra_Reorder262,9633
void Extra_ReorderArray( reo_man * p, DdManager * dd, DdNode * Funcs[], DdNode * FuncsRes[], int nFuncs, int * pOrder )Extra_ReorderArray283,10281

src/bdd/reo/reoSwap.c,157
#define AddToLinkedList(AddToLinkedList28,746
double reoReorderSwapAdjacentVars( reo_man * p, int lev0, int fMovingUp )reoReorderSwapAdjacentVars46,1416

src/bdd/reo/reoUnits.c,509
reo_unit * reoUnitsGetNextUnit(reo_man * p )reoUnitsGetNextUnit45,1298
void reoUnitsRecycleUnit( reo_man * p, reo_unit * pUnit )reoUnitsRecycleUnit69,1915
void reoUnitsRecycleUnitList( reo_man * p, reo_plane * pPlane )reoUnitsRecycleUnitList87,2337
void reoUnitsStopDispenser( reo_man * p )reoUnitsStopDispenser115,3049
void reoUnitsAddUnitToPlane( reo_plane * pPlane, reo_unit * pUnit )reoUnitsAddUnitToPlane135,3600
void reoUnitsAddToFreeUnitList( reo_man * p )reoUnitsAddToFreeUnitList162,4116

src/bdd/llb/llb4Cex.c,373
Abc_Cex_t * Llb4_Nonlin4TransformCex( Aig_Man_t * pAig, Vec_Ptr_t * vStates, int iCexPo, int fVerbose )Llb4_Nonlin4TransformCex47,1357
Vec_Ptr_t * Llb4_Nonlin4VerifyCex( Aig_Man_t * pAig, Abc_Cex_t * p )Llb4_Nonlin4VerifyCex206,6981
Abc_Cex_t * Llb4_Nonlin4NormalizeCex( Aig_Man_t * pAigOrg, Aig_Man_t * pAigRpm, Abc_Cex_t * pCexRpm )Llb4_Nonlin4NormalizeCex279,9403

src/bdd/llb/llb4Image.c,3791
typedef struct Llb_Var_t_ Llb_Var_t;Llb_Var_t29,799
struct Llb_Var_t_ Llb_Var_t_30,836
    int           iVar;      // variable numberiVar32,857
    int           nScore;    // variable scorenScore33,905
    Vec_Int_t *   vParts;    // partitionsvParts34,952
typedef struct Llb_Prt_t_ Llb_Prt_t;Llb_Prt_t37,999
struct Llb_Prt_t_ Llb_Prt_t_38,1036
    int           iPart;     // partition numberiPart40,1057
    int           nSize;     // the number of BDD nodesnSize41,1106
    DdNode *      bFunc;     // the partitionbFunc42,1162
    Vec_Int_t *   vVars;     // supportvVars43,1208
typedef struct Llb_Mgr_t_ Llb_Mgr_t;Llb_Mgr_t46,1252
struct Llb_Mgr_t_Llb_Mgr_t_47,1289
    DdManager *   dd;        // working BDD managerdd49,1309
    Vec_Int_t *   vVars2Q;   // variables to quantifyvVars2Q50,1361
    int           nSizeMax;  // maximum size of the clusternSizeMax51,1415
    Llb_Prt_t **  pParts;    // partitionspParts53,1491
    Llb_Var_t **  pVars;     // variablespVars54,1534
    int           iPartFree; // next free partitioniPartFree55,1576
    int           nVars;     // the number of BDD variablesnVars56,1628
    int           nSuppMax;  // maximum support sizenSuppMax57,1688
    int *         pSupp;     // temporary support storagepSupp59,1758
static inline Llb_Var_t * Llb_MgrVar( Llb_Mgr_t * p, int i )   { return p->pVars[i];  }Llb_MgrVar62,1820
static inline Llb_Prt_t * Llb_MgrPart( Llb_Mgr_t * p, int i )  { return p->pParts[i]; }Llb_MgrPart63,1908
#define Llb_MgrForEachVar(Llb_MgrForEachVar66,2019
#define Llb_MgrForEachPart(Llb_MgrForEachPart69,2191
#define Llb_PartForEachVar(Llb_PartForEachVar73,2387
#define Llb_VarForEachPart(Llb_VarForEachPart76,2597
void Llb_Nonlin4RemoveVar( Llb_Mgr_t * p, Llb_Var_t * pVar )Llb_Nonlin4RemoveVar98,3320
void Llb_Nonlin4RemovePart( Llb_Mgr_t * p, Llb_Prt_t * pPart )Llb_Nonlin4RemovePart117,3774
DdNode * Llb_Nonlin4CreateCube1( Llb_Mgr_t * p, Llb_Prt_t * pPart )Llb_Nonlin4CreateCube1138,4344
DdNode * Llb_Nonlin4CreateCube2( Llb_Mgr_t * p, Llb_Prt_t * pPart1, Llb_Prt_t * pPart2 )Llb_Nonlin4CreateCube2171,5368
int Llb_Nonlin4HasSingletonVars( Llb_Mgr_t * p, Llb_Prt_t * pPart )Llb_Nonlin4HasSingletonVars207,6594
void Llb_Nonlin4Print( Llb_Mgr_t * p )Llb_Nonlin4Print228,7107
int Llb_Nonlin4Quantify1( Llb_Mgr_t * p, Llb_Prt_t * pPart )Llb_Nonlin4Quantify1261,7907
int Llb_Nonlin4Quantify2( Llb_Mgr_t * p, Llb_Prt_t * pPart1, Llb_Prt_t * pPart2 )Llb_Nonlin4Quantify2320,9928
void Llb_Nonlin4CutNodes_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Llb_Nonlin4CutNodes_rec454,14205
Vec_Ptr_t * Llb_Nonlin4CutNodes( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_Nonlin4CutNodes483,15017
void Llb_Nonlin4AddPair( Llb_Mgr_t * p, int iPart, int iVar )Llb_Nonlin4AddPair510,15813
void Llb_Nonlin4AddPartition( Llb_Mgr_t * p, int i, DdNode * bFunc )Llb_Nonlin4AddPartition534,16484
void Llb_Nonlin4CheckVars( Llb_Mgr_t * p )Llb_Nonlin4CheckVars566,17483
int Llb_Nonlin4NextPartitions( Llb_Mgr_t * p, Llb_Prt_t ** ppPart1, Llb_Prt_t ** ppPart2 )Llb_Nonlin4NextPartitions585,17914
void Llb_Nonlin4RecomputeScores( Llb_Mgr_t * p )Llb_Nonlin4RecomputeScores639,19742
void Llb_Nonlin4VerifyScores( Llb_Mgr_t * p )Llb_Nonlin4VerifyScores665,20386
Llb_Mgr_t * Llb_Nonlin4Alloc( DdManager * dd, Vec_Ptr_t * vParts, DdNode * bCurrent, Vec_Int_t * vVars2Q, int nSizeMax )Llb_Nonlin4Alloc692,21076
void Llb_Nonlin4Free( Llb_Mgr_t * p )Llb_Nonlin4Free726,22168
DdNode * Llb_Nonlin4Image( DdManager * dd, Vec_Ptr_t * vParts, DdNode * bCurrent, Vec_Int_t * vVars2Q )Llb_Nonlin4Image752,22757
Vec_Ptr_t * Llb_Nonlin4Group( DdManager * dd, Vec_Ptr_t * vParts, Vec_Int_t * vVars2Q, int nSizeMax )Llb_Nonlin4Group806,24359

src/bdd/llb/llb1Sched.c,420
void Llb_MtrSwapColumns( Llb_Mtr_t * p, int iCol1, int iCol2 )Llb_MtrSwapColumns45,1257
int Llb_MtrFindBestColumn( Llb_Mtr_t * p, int iGrpStart )Llb_MtrFindBestColumn80,2220
void Llb_MtrUseSelectedColumn( Llb_Mtr_t * p, int iCol )Llb_MtrUseSelectedColumn157,4907
void Llb_MtrVerifyColumns( Llb_Mtr_t * p, int iGrpStart )Llb_MtrVerifyColumns194,5918
void Llb_MtrSchedule( Llb_Mtr_t * p )Llb_MtrSchedule222,6698

src/bdd/llb/llb1Pivot.c,610
int Llb_ManTracePaths_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pPivot )Llb_ManTracePaths_rec45,1239
int Llb_ManTracePaths( Aig_Man_t * p, Aig_Obj_t * pPivot )Llb_ManTracePaths81,2165
void Llb_ManTestCuts( Aig_Man_t * p )Llb_ManTestCuts103,2782
void Llb_ManLabelLiCones_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Llb_ManLabelLiCones_rec130,3445
void Llb_ManLabelLiCones( Aig_Man_t * p )Llb_ManLabelLiCones151,3985
void Llb_ManMarkInternalPivots( Aig_Man_t * p )Llb_ManMarkInternalPivots175,4563
Vec_Int_t * Llb_ManMarkPivotNodes( Aig_Man_t * p, int fUseInternal )Llb_ManMarkPivotNodes220,5655

src/bdd/llb/llb1Matrix.c,896
void Llb_MtrVerifyRowsAll( Llb_Mtr_t * p )Llb_MtrVerifyRowsAll67,2011
void Llb_MtrVerifyColumnsAll( Llb_Mtr_t * p )Llb_MtrVerifyColumnsAll91,2588
void Llb_MtrVerifyMatrix( Llb_Mtr_t * p )Llb_MtrVerifyMatrix115,3168
int * Llb_MtrFindVarOrder( Llb_Mtr_t * p )Llb_MtrFindVarOrder132,3553
char * Llb_MtrVarName( Llb_Mtr_t * p, int iVar )Llb_MtrVarName181,4709
void Llb_MtrPrint( Llb_Mtr_t * p, int fOrder )Llb_MtrPrint206,5335
void Llb_MtrPrintMatrixStats( Llb_Mtr_t * p )Llb_MtrPrintMatrixStats236,6125
Llb_Mtr_t * Llb_MtrAlloc( int nPis, int nFfs, int nCols, int nRows )Llb_MtrAlloc289,7753
void Llb_MtrFree( Llb_Mtr_t * p )Llb_MtrFree321,8726
void Llb_MtrAddColumn( Llb_Mtr_t * p, Llb_Grp_t * pGrp )Llb_MtrAddColumn346,9318
void Llb_MtrRemoveSingletonRows( Llb_Mtr_t * p )Llb_MtrRemoveSingletonRows381,10327
Llb_Mtr_t * Llb_MtrCreate( Llb_Man_t * p )Llb_MtrCreate410,11000

src/bdd/llb/llb1Hint.c,416
int Llb_ManMaxFanoutCi( Aig_Man_t * pAig )Llb_ManMaxFanoutCi45,1316
Aig_Man_t * Llb_ManPerformHints( Aig_Man_t * pAig, int nHintDepth )Llb_ManPerformHints70,1938
Vec_Int_t * Llb_ManCollectHighFanoutObjects( Aig_Man_t * pAig, int nCandMax, int fCisOnly )Llb_ManCollectHighFanoutObjects96,2628
int Llb_ManModelCheckAigWithHints( Aig_Man_t * pAigGlo, Gia_ParLlb_t * pPars )Llb_ManModelCheckAigWithHints162,4858

src/bdd/llb/llb4Cluster.c,1250
void Llb_Nonlin4FindOrder_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vOrder, int * pCounter )Llb_Nonlin4FindOrder_rec45,1288
Vec_Int_t * Llb_Nonlin4FindOrder( Aig_Man_t * pAig, int * pCounter )Llb_Nonlin4FindOrder86,2649
DdNode * Llb_Nonlin4FindPartitions_rec( DdManager * dd, Aig_Obj_t * pObj, Vec_Int_t * vOrder, Vec_Ptr_t * vRoots )Llb_Nonlin4FindPartitions_rec150,4712
Vec_Ptr_t * Llb_Nonlin4FindPartitions( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, int fOutputs )Llb_Nonlin4FindPartitions192,6375
Vec_Int_t * Llb_Nonlin4FindVars2Q( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder )Llb_Nonlin4FindVars2Q226,7331
int Llb_Nonlin4CountTerms( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, DdNode * bFunc, int fCo, int fFlop )Llb_Nonlin4CountTerms252,8138
void Llb_Nonlin4PrintGroups( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, Vec_Ptr_t * vGroups )Llb_Nonlin4PrintGroups297,9688
void Llb_Nonlin4PrintSuppProfile( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, Vec_Ptr_t * vGroups )Llb_Nonlin4PrintSuppProfile335,11074
void Llb_Nonlin4Cluster( Aig_Man_t * pAig, DdManager ** pdd, Vec_Int_t ** pvOrder, Vec_Ptr_t ** pvGroups, int nBddMax, int fVerbose )Llb_Nonlin4Cluster390,12729

src/bdd/llb/llb1Man.c,315
void Llb_ManPrepareVarMap( Llb_Man_t * p )Llb_ManPrepareVarMap45,1228
void Llb_ManPrepareVarLimits( Llb_Man_t * p )Llb_ManPrepareVarLimits88,2790
void Llb_ManStop( Llb_Man_t * p )Llb_ManStop130,4264
Llb_Man_t * Llb_ManStart( Aig_Man_t * pAigGlo, Aig_Man_t * pAig, Gia_ParLlb_t * pPars )Llb_ManStart193,5900

src/bdd/llb/llb1Constr.c,850
int Llb_ManCountEntries( Vec_Int_t * vCands )Llb_ManCountEntries45,1288
void Llb_ManPrintEntries( Aig_Man_t * p, Vec_Int_t * vCands )Llb_ManPrintEntries64,1762
void Llb_ManDerefenceBdds( Aig_Man_t * p, DdManager * dd )Llb_ManDerefenceBdds96,2574
DdNode * Llb_ManComputeIndCase_rec( Aig_Man_t * p, Aig_Obj_t * pObj, DdManager * dd, Vec_Ptr_t * vBdds )Llb_ManComputeIndCase_rec115,3042
void Llb_ManComputeIndCase( Aig_Man_t * p, DdManager * dd, Vec_Int_t * vNodes )Llb_ManComputeIndCase142,4018
Vec_Int_t * Llb_ManComputeBaseCase( Aig_Man_t * p, DdManager * dd )Llb_ManComputeBaseCase199,5998
DdManager * Llb_ManConstructGlobalBdds( Aig_Man_t * p )Llb_ManConstructGlobalBdds229,6930
Vec_Int_t * Llb_ManDeriveConstraints( Aig_Man_t * p )Llb_ManDeriveConstraints267,8224
void Llb_ManConstrTest( Aig_Man_t * p )Llb_ManConstrTest299,9103

src/bdd/llb/llb1Group.c,1364
Llb_Grp_t * Llb_ManGroupAlloc( Llb_Man_t * pMan )Llb_ManGroupAlloc45,1241
void Llb_ManGroupStop( Llb_Grp_t * p )Llb_ManGroupStop68,1774
void Llb_ManGroupCollect_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Llb_ManGroupCollect_rec91,2259
Vec_Ptr_t * Llb_ManGroupCollect( Llb_Grp_t * pGroup )Llb_ManGroupCollect120,3142
void Llb_ManGroupCreate_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Ptr_t * vSupp )Llb_ManGroupCreate_rec147,3975
Llb_Grp_t * Llb_ManGroupCreate( Llb_Man_t * pMan, Aig_Obj_t * pObj )Llb_ManGroupCreate175,4702
Llb_Grp_t * Llb_ManGroupCreateFirst( Llb_Man_t * pMan )Llb_ManGroupCreateFirst207,5592
Llb_Grp_t * Llb_ManGroupCreateLast( Llb_Man_t * pMan )Llb_ManGroupCreateLast229,6072
Llb_Grp_t * Llb_ManGroupsCombine( Llb_Grp_t * p1, Llb_Grp_t * p2 )Llb_ManGroupsCombine251,6550
void Llb_ManGroupMarkNodes_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Llb_ManGroupMarkNodes_rec286,7512
Llb_Grp_t * Llb_ManGroupCreateFromCuts( Llb_Man_t * pMan, Vec_Int_t * vCut1, Vec_Int_t * vCut2 )Llb_ManGroupCreateFromCuts312,8237
void Llb_ManPrepareGroups( Llb_Man_t * pMan )Llb_ManPrepareGroups356,9510
void Llb_ManPrintSpan( Llb_Man_t * p )Llb_ManPrintSpan387,10243
int Llb_ManGroupHasVar( Llb_Man_t * p, int iGroup, int iVar )Llb_ManGroupHasVar426,11401
void Llb_ManPrintHisto( Llb_Man_t * p )Llb_ManPrintHisto451,12056

src/bdd/llb/llb2Core.c,2269
typedef struct Llb_Img_t_ Llb_Img_t;Llb_Img_t30,770
struct Llb_Img_t_Llb_Img_t_31,807
    Aig_Man_t *     pInit;          // AIG managerpInit33,827
    Aig_Man_t *     pAig;           // AIG managerpAig34,878
    Gia_ParLlb_t *  pPars;          // parameterspPars35,929
    DdManager *     dd;             // BDD managerdd37,980
    DdManager *     ddG;            // BDD managerddG38,1031
    DdManager *     ddR;            // BDD managerddR39,1082
    Vec_Ptr_t *     vDdMans;        // BDD managers for each partitionvDdMans40,1133
    Vec_Ptr_t *     vRings;         // onion rings in ddRvRings41,1204
    Vec_Int_t *     vDriRefs;       // driver referencesvDriRefs43,1263
    Vec_Int_t *     vVarsCs;        // cur state variablesvVarsCs44,1320
    Vec_Int_t *     vVarsNs;        // next state variablesvVarsNs45,1379
    Vec_Int_t *     vCs2Glo;        // cur state variables into global variablesvCs2Glo47,1440
    Vec_Int_t *     vNs2Glo;        // next state variables into global variablesvNs2Glo48,1521
    Vec_Int_t *     vGlo2Cs;        // global variables into cur state variablesvGlo2Cs49,1603
    Vec_Int_t *     vGlo2Ns;        // global variables into next state variablesvGlo2Ns50,1684
DdNode * Llb_CoreComputeCube( DdManager * dd, Vec_Int_t * vVars, int fUseVarIndex, char * pValues )Llb_CoreComputeCube68,2284
Abc_Cex_t * Llb_CoreDeriveCex( Llb_Img_t * p )Llb_CoreDeriveCex98,3236
int Llb_CoreReachability_int( Llb_Img_t * p, Vec_Ptr_t * vQuant0, Vec_Ptr_t * vQuant1 )Llb_CoreReachability_int207,7320
int Llb_CoreReachability( Llb_Img_t * p )Llb_CoreReachability499,19778
Vec_Ptr_t * Llb_CoreConstructAll( Aig_Man_t * p, Vec_Ptr_t * vResult, Vec_Int_t * vVarsNs, abctime TimeTarget )Llb_CoreConstructAll534,20896
void Llb_CoreSetVarMaps( Llb_Img_t * p )Llb_CoreSetVarMaps577,22151
Llb_Img_t * Llb_CoreStart( Aig_Man_t * pInit, Aig_Man_t * pAig, Gia_ParLlb_t *  pPars )Llb_CoreStart618,23595
void Llb_CoreStop( Llb_Img_t * p )Llb_CoreStop650,24735
int Llb_CoreExperiment( Aig_Man_t * pInit, Aig_Man_t * pAig, Gia_ParLlb_t * pPars, Vec_Ptr_t * vResult, abctime TimeTarget )Llb_CoreExperiment694,25931
int Llb_ManReachMinCut( Aig_Man_t * pAig, Gia_ParLlb_t * pPars )Llb_ManReachMinCut725,26835

src/bdd/llb/llb4Sweep.c,1882
void Llb_Nonlin4SweepOrder_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vOrder, int * pCounter, int fSaveAll )Llb_Nonlin4SweepOrder_rec45,1284
Vec_Int_t * Llb_Nonlin4SweepOrder( Aig_Man_t * pAig, int * pCounter, int fSaveAll )Llb_Nonlin4SweepOrder86,2716
int Llb4_Nonlin4SweepCutpoints( Aig_Man_t * pAig, Vec_Int_t * vOrder, int nBddLimit, int fVerbose )Llb4_Nonlin4SweepCutpoints121,3930
DdNode * Llb_Nonlin4SweepPartitions_rec( DdManager * dd, Aig_Obj_t * pObj, Vec_Int_t * vOrder, Vec_Ptr_t * vRoots )Llb_Nonlin4SweepPartitions_rec209,7341
Vec_Ptr_t * Llb_Nonlin4SweepPartitions( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, int fTransition )Llb_Nonlin4SweepPartitions251,9008
DdNode * Llb4_Nonlin4SweepBadMonitor( Aig_Man_t * pAig, Vec_Int_t * vOrder, DdManager * dd )Llb4_Nonlin4SweepBadMonitor285,9936
Vec_Int_t * Llb_Nonlin4SweepVars2Q( Aig_Man_t * pAig, Vec_Int_t * vOrder, int fAddLis )Llb_Nonlin4SweepVars2Q315,10839
void Llb_Nonlin4SweepDeref( DdManager * dd, Vec_Ptr_t * vParts )Llb_Nonlin4SweepDeref343,11653
void Llb_Nonlin4SweepPrint( Vec_Ptr_t * vFuncs )Llb_Nonlin4SweepPrint363,12148
DdManager * Llb4_Nonlin4SweepBadStates( Aig_Man_t * pAig, Vec_Int_t * vOrder, int nVars )Llb4_Nonlin4SweepBadStates384,12651
DdManager * Llb4_Nonlin4SweepGroups( Aig_Man_t * pAig, Vec_Int_t * vOrder, int nVars, Vec_Ptr_t ** pvGroups, int nBddLimitClp, int fVerbose )Llb4_Nonlin4SweepGroups420,13879
void Llb_Nonlin4SweepPrintSuppProfile( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, Vec_Ptr_t * vGroups, int fVerbose )Llb_Nonlin4SweepPrintSuppProfile461,15084
void Llb4_Nonlin4Sweep( Aig_Man_t * pAig, int nSweepMax, int nClusterMax, DdManager ** pdd, Vec_Int_t ** pvOrder, Vec_Ptr_t ** pvGroups, int fVerbose )Llb4_Nonlin4Sweep520,16900
void Llb4_Nonlin4SweepExperiment( Aig_Man_t * pAig )Llb4_Nonlin4SweepExperiment569,18799

src/bdd/llb/llb4Nonlin.c,3534
typedef struct Llb_Mnx_t_ Llb_Mnx_t;Llb_Mnx_t32,851
struct Llb_Mnx_t_Llb_Mnx_t_33,888
    Aig_Man_t *     pAig;           // AIG managerpAig36,925
    Gia_ParLlb_t *  pPars;          // parameterspPars37,976
    DdManager *     dd;             // BDD managerdd40,1052
    DdNode *        bBad;           // bad states in terms of CIsbBad41,1103
    DdNode *        bReached;       // reached states bReached42,1169
    DdNode *        bCurrent;       // from statesbCurrent43,1224
    DdNode *        bNext;          // to statesbNext44,1275
    Vec_Ptr_t *     vRings;         // onion rings in ddRvRings45,1324
    Vec_Ptr_t *     vRoots;         // BDDs for partitionsvRoots46,1382
    Vec_Int_t *     vOrder;         // for each object ID, its BDD variable number or -1vOrder49,1465
    Vec_Int_t *     vVars2Q;        // 1 if variable is quantifiable; 0 othervisevVars2Q50,1554
    abctime         timeImage;timeImage52,1637
    abctime         timeRemap;timeRemap53,1668
    abctime         timeReo;timeReo54,1699
    abctime         timeOther;timeOther55,1728
    abctime         timeTotal;timeTotal56,1759
DdNode * Llb_Nonlin4ComputeBad( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder )Llb_Nonlin4ComputeBad77,2351
Vec_Ptr_t * Llb_Nonlin4DerivePartitions( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder )Llb_Nonlin4DerivePartitions167,5506
Vec_Int_t * Llb_Nonlin4CreateOrderSimple( Aig_Man_t * pAig )Llb_Nonlin4CreateOrderSimple247,8228
void Llb_Nonlin4CreateOrder_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vOrder, int * pCounter )Llb_Nonlin4CreateOrder_rec271,8916
Vec_Int_t * Llb_Nonlin4CollectHighRefNodes( Aig_Man_t * pAig, int nFans )Llb_Nonlin4CollectHighRefNodes314,10433
Vec_Int_t * Llb_Nonlin4CreateOrder( Aig_Man_t * pAig )Llb_Nonlin4CreateOrder346,11315
Vec_Int_t * Llb_Nonlin4CreateVars2Q( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, int fBackward )Llb_Nonlin4CreateVars2Q394,12922
void Llb_Nonlin4SetupVarMap( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder )Llb_Nonlin4SetupVarMap417,13643
DdNode * Llb_Nonlin4ComputeInitState( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, int fBackward )Llb_Nonlin4ComputeInitState447,14640
DdNode * Llb_Nonlin4ComputeCube( DdManager * dd, Aig_Man_t * pAig, Vec_Int_t * vOrder, char * pValues, int Flag )Llb_Nonlin4ComputeCube477,15593
void Llb_Nonlin4RecordState( Aig_Man_t * pAig, Vec_Int_t * vOrder, unsigned * pState, char * pValues, int fBackward )Llb_Nonlin4RecordState513,16790
Vec_Ptr_t * Llb_Nonlin4Multiply( DdManager * dd, DdNode * bCube, Vec_Ptr_t * vParts )Llb_Nonlin4Multiply533,17400
void Llb_Nonlin4Deref( DdManager * dd, Vec_Ptr_t * vParts )Llb_Nonlin4Deref558,18060
Vec_Ptr_t * Llb_Nonlin4DeriveCex( Llb_Mnx_t * p, int fBackward, int fVerbose )Llb_Nonlin4DeriveCex578,18562
int Llb_Nonlin4Reachability( Llb_Mnx_t * p )Llb_Nonlin4Reachability670,21877
void Llb_Nonlin4Reorder( DdManager * dd, int fTwice, int fVerbose )Llb_Nonlin4Reorder910,31205
Llb_Mnx_t * Llb_MnxStart( Aig_Man_t * pAig, Gia_ParLlb_t * pPars )Llb_MnxStart939,32085
void Llb_MnxStop( Llb_Mnx_t * p )Llb_MnxStop990,33829
void Llb_MnxCheckNextStateVars( Llb_Mnx_t * p )Llb_MnxCheckNextStateVars1041,35385
int Llb_Nonlin4CoreReach( Aig_Man_t * pAig, Gia_ParLlb_t * pPars )Llb_Nonlin4CoreReach1067,36092
Aig_Man_t * Llb_ReachableStates( Aig_Man_t * pAig )Llb_ReachableStates1102,37069
Gia_Man_t * Llb_ReachableStatesGia( Gia_Man_t * p )Llb_ReachableStatesGia1167,39241

src/bdd/llb/llb1Core.c,381
void Llb_ManSetDefaultParams( Gia_ParLlb_t * p )Llb_ManSetDefaultParams46,1283
void Llb_ManPrintAig( Llb_Man_t * p )Llb_ManPrintAig87,2528
int Llb_ManModelCheckAig( Aig_Man_t * pAigGlo, Gia_ParLlb_t * pPars, Vec_Int_t * vHints, DdManager ** pddGlo )Llb_ManModelCheckAig112,3432
int Llb_ManModelCheckGia( Gia_Man_t * pGia, Gia_ParLlb_t * pPars )Llb_ManModelCheckGia197,5703

src/bdd/llb/llb2Image.c,874
Vec_Ptr_t * Llb_ImgSupports( Aig_Man_t * p, Vec_Ptr_t * vDdMans, Vec_Int_t * vStart, Vec_Int_t * vStop, int fAddPis, int fVerbose )Llb_ImgSupports48,1477
void Llb_ImgSchedule( Vec_Ptr_t * vSupps, Vec_Ptr_t ** pvQuant0, Vec_Ptr_t ** pvQuant1, int fVerbose )Llb_ImgSchedule122,4030
DdManager * Llb_ImgPartition( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper, abctime TimeTarget )Llb_ImgPartition183,5961
DdNode * Llb_ImgComputeCube( Aig_Man_t * pAig, Vec_Int_t * vNodeIds, DdManager * dd )Llb_ImgComputeCube259,8658
void Llb_ImgQuantifyFirst( Aig_Man_t * pAig, Vec_Ptr_t * vDdMans, Vec_Ptr_t * vQuant0, int fVerbose )Llb_ImgQuantifyFirst288,9451
void Llb_ImgQuantifyReset( Vec_Ptr_t * vDdMans )Llb_ImgQuantifyReset340,11213
DdNode * Llb_ImgComputeImage( Aig_Man_t * pAig, Vec_Ptr_t * vDdMans, DdManager * dd, DdNode * bInit, Llb_ImgComputeImage364,11786

src/bdd/llb/llb.h,2157
#define ABC__aig__llb__llb_hABC__aig__llb__llb_h22,527
typedef struct Gia_ParLlb_t_ Gia_ParLlb_t;Gia_ParLlb_t41,1251
struct Gia_ParLlb_t_Gia_ParLlb_t_42,1294
    int         nBddMax;       // maximum BDD sizenBddMax44,1317
    int         nIterMax;      // maximum iteration countnIterMax45,1368
    int         nClusterMax;   // maximum cluster sizenClusterMax46,1426
    int         nHintDepth;    // the number of times to cofactornHintDepth47,1481
    int         HintFirst;     // the number of first hint to useHintFirst48,1547
    int         fUseFlow;      // use flow computationfUseFlow49,1613
    int         nVolumeMax;    // the largest volumenVolumeMax50,1668
    int         nVolumeMin;    // the smallest volumenVolumeMin51,1721
    int         nPartValue;    // partitioning valuenPartValue52,1775
    int         fBackward;     // enable backward reachabilityfBackward53,1828
    int         fReorder;      // enable dynamic variable reorderingfReorder54,1891
    int         fIndConstr;    // extract inductive constraintsfIndConstr55,1960
    int         fUsePivots;    // use internal pivot variablesfUsePivots56,2024
    int         fCluster;      // use partition clusteringfCluster57,2087
    int         fSchedule;     // use cluster schedulingfSchedule58,2146
    int         fDumpReached;  // dump reached states into a filefDumpReached59,2203
    int         fVerbose;      // print verbose informationfVerbose60,2269
    int         fVeryVerbose;  // print dependency matricesfVeryVerbose61,2329
    int         fSilent;       // do not print any infomationfSilent62,2389
    int         fSkipReach;    // skip reachability (preparation phase only)fSkipReach63,2451
    int         fSkipOutCheck; // does not check the property outputfSkipOutCheck64,2528
    int         TimeLimit;     // time limit for one reachability runTimeLimit65,2597
    int         TimeLimitGlo;  // time limit for all reachability runsTimeLimitGlo66,2667
    abctime     TimeTarget;    // the time to stopTimeTarget68,2765
    int         iFrame;        // explored up to this frameiFrame69,2816

src/bdd/llb/llbInt.h,3244
#define ABC__aig__llb__llbInt_hABC__aig__llb__llbInt_h22,536
typedef struct Llb_Man_t_ Llb_Man_t;Llb_Man_t47,1408
typedef struct Llb_Mtr_t_ Llb_Mtr_t;Llb_Mtr_t48,1445
typedef struct Llb_Grp_t_ Llb_Grp_t;Llb_Grp_t49,1482
struct Llb_Man_t_Llb_Man_t_51,1520
    Gia_ParLlb_t *  pPars;          // parameterspPars53,1540
    Aig_Man_t *     pAigGlo;        // initial AIG manager (owned by the caller)pAigGlo54,1590
    Aig_Man_t *     pAig;           // derived AIG manager (created in this package)pAig55,1671
    DdManager *     dd;             // BDD managerdd56,1756
    DdManager *     ddG;            // BDD managerddG57,1807
    DdManager *     ddR;            // BDD managerddR58,1858
    Vec_Int_t *     vObj2Var;       // mapping AIG ObjId into BDD var indexvObj2Var59,1909
    Vec_Int_t *     vVar2Obj;       // mapping BDD var index into AIG ObjIdvVar2Obj60,1985
    Vec_Ptr_t *     vGroups;        // group Id into group pointervGroups61,2061
    Llb_Mtr_t *     pMatrix;        // dependency matrixpMatrix62,2128
    Vec_Ptr_t *     vRings;         // onion ringsvRings64,2210
    Vec_Int_t *     vVarBegs;       // the first group where the var appears  vVarBegs65,2261
    Vec_Int_t *     vVarEnds;       // the last group where the var appears vVarEnds66,2340
    Vec_Int_t *     vNs2Glo;        // next state variables into global variablesvNs2Glo68,2441
    Vec_Int_t *     vCs2Glo;        // next state variables into global variablesvCs2Glo69,2523
    Vec_Int_t *     vGlo2Cs;        // global variables into current state variablesvGlo2Cs70,2605
    Vec_Int_t *     vGlo2Ns;        // global variables into current state variablesvGlo2Ns71,2690
struct Llb_Mtr_t_Llb_Mtr_t_79,2918
    int             nPis;           // number of primary inputsnPis81,2938
    int             nFfs;           // number of flip-flopsnFfs82,3002
    int             nRows;          // number of rowsnRows83,3062
    int             nCols;          // number of columnsnCols84,3116
    int *           pColSums;       // sum of values in a columnpColSums85,3173
    Llb_Grp_t **    pColGrps;       // group structure for each colpColGrps86,3238
    int *           pRowSums;       // sum of values in a rowpRowSums87,3306
    char **         pMatrix;        // dependency matrixpMatrix88,3368
    Llb_Man_t *     pMan;           // managerpMan89,3425
    char *          pProdVars;      // variables in the partial productpProdVars91,3495
    int *           pProdNums;      // var counts in the remaining partitionspProdNums92,3567
struct Llb_Grp_t_Llb_Grp_t_95,3649
    int             Id;             // group IDId97,3669
    Vec_Ptr_t *     vIns;           // input AIG objsvIns98,3717
    Vec_Ptr_t *     vOuts;          // output AIG objsvOuts99,3771
    Vec_Ptr_t *     vNodes;         // internal AIG objsvNodes100,3826
    Llb_Man_t *     pMan;           // managerpMan101,3883
    Llb_Grp_t *     pPrev;          // previous grouppPrev102,3930
    Llb_Grp_t *     pNext;          // next grouppNext103,3984
static inline int Llb_ObjBddVar( Vec_Int_t * vOrder, Aig_Obj_t * pObj ) { return Vec_IntEntry(vOrder, Aig_ObjId(pObj)); }Llb_ObjBddVar110,4258

src/bdd/llb/llb2Dump.c,217
char * Llb_ManGetDummyName( char * pPrefix, int Num, int nDigits )Llb_ManGetDummyName45,1274
void Llb_ManDumpReached( DdManager * ddG, DdNode * bReached, char * pModel, char * pFileName )Llb_ManDumpReached63,1727

src/bdd/llb/llb2Driver.c,503
Vec_Int_t * Llb_DriverCountRefs( Aig_Man_t * p )Llb_DriverCountRefs56,1548
Vec_Int_t * Llb_DriverCollectNs( Aig_Man_t * pAig, Vec_Int_t * vDriRefs )Llb_DriverCollectNs78,2095
Vec_Int_t * Llb_DriverCollectCs( Aig_Man_t * pAig )Llb_DriverCollectCs106,2886
DdNode * Llb_DriverPhaseCube( Aig_Man_t * pAig, Vec_Int_t * vDriRefs, DdManager * dd )Llb_DriverPhaseCube128,3417
DdManager * Llb_DriverLastPartition( Aig_Man_t * p, Vec_Int_t * vVarsNs, abctime TimeTarget )Llb_DriverLastPartition163,4484

src/bdd/llb/llb3Nonlin.c,2771
typedef struct Llb_Mnn_t_ Llb_Mnn_t;Llb_Mnn_t30,797
struct Llb_Mnn_t_Llb_Mnn_t_31,834
    Aig_Man_t *     pInit;          // AIG managerpInit33,854
    Aig_Man_t *     pAig;           // AIG managerpAig34,905
    Gia_ParLlb_t *  pPars;          // parameterspPars35,956
    DdManager *     dd;             // BDD managerdd37,1007
    DdManager *     ddG;            // BDD managerddG38,1058
    DdManager *     ddR;            // BDD managerddR39,1109
    Vec_Ptr_t *     vRings;         // onion rings in ddRvRings40,1160
    Vec_Ptr_t *     vLeaves;        vLeaves42,1219
    Vec_Ptr_t *     vRoots;vRoots43,1256
    int *           pVars2Q;pVars2Q44,1284
    int *           pOrderL;pOrderL45,1313
    int *           pOrderL2;pOrderL246,1342
    int *           pOrderG;pOrderG47,1372
    Vec_Int_t *     vCs2Glo;        // cur state variables into global variablesvCs2Glo49,1402
    Vec_Int_t *     vNs2Glo;        // next state variables into global variablesvNs2Glo50,1483
    Vec_Int_t *     vGlo2Cs;        // global variables into cur state variablesvGlo2Cs51,1565
    Vec_Int_t *     vGlo2Ns;        // global variables into next state variablesvGlo2Ns52,1646
    int             ddLocReos;ddLocReos54,1729
    int             ddLocGrbs;ddLocGrbs55,1760
    abctime         timeImage;timeImage57,1792
    abctime         timeTran1;timeTran158,1823
    abctime         timeTran2;timeTran259,1854
    abctime         timeGloba;timeGloba60,1885
    abctime         timeOther;timeOther61,1916
    abctime         timeTotal;timeTotal62,1947
    abctime         timeReo;timeReo63,1978
    abctime         timeReoG;timeReoG64,2007
int Llb_NonlinFindBestVar( DdManager * dd, DdNode * bFunc, Aig_Man_t * pAig )Llb_NonlinFindBestVar86,2614
void Llb_NonlinTrySubsetting( DdManager * dd, DdNode * bFunc )Llb_NonlinTrySubsetting153,4815
void Llb_NonlinPrepareVarMap( Llb_Mnn_t * p )Llb_NonlinPrepareVarMap175,5497
DdNode * Llb_NonlinComputeInitState( Aig_Man_t * pAig, DdManager * dd )Llb_NonlinComputeInitState214,6838
Abc_Cex_t * Llb_NonlinDeriveCex( Llb_Mnn_t * p )Llb_NonlinDeriveCex246,7765
int Llb_NonlinReoHook( DdManager * dd, char * Type, void * Method )Llb_NonlinReoHook365,12089
int Llb_NonlinCompPerms( DdManager * dd, int * pVar2Lev )Llb_NonlinCompPerms402,13067
int Llb_NonlinReachability( Llb_Mnn_t * p )Llb_NonlinReachability429,13797
Llb_Mnn_t * Llb_MnnStart( Aig_Man_t * pInit, Aig_Man_t * pAig, Gia_ParLlb_t *  pPars )Llb_MnnStart698,25028
void Llb_MnnStop( Llb_Mnn_t * p )Llb_MnnStop746,26815
void Llb_NonlinExperiment( Aig_Man_t * pAig, int Num )Llb_NonlinExperiment806,28893
int Llb_NonlinCoreReach( Aig_Man_t * pAig, Gia_ParLlb_t * pPars )Llb_NonlinCoreReach840,29677

src/bdd/llb/llb4Map.c,89
Vec_Int_t * Llb_AigMap( Aig_Man_t * pAig, int nLutSize, int nLutMin )Llb_AigMap47,1337

src/bdd/llb/llb1Cluster.c,848
int Llb_ManComputeCommonQuant( Llb_Mtr_t * p, int iCol1, int iCol2 )Llb_ManComputeCommonQuant45,1237
int Llb_ManComputeBestQuant( Llb_Mtr_t * p )Llb_ManComputeBestQuant72,2061
float ** Llb_ManComputeQuant( Llb_Mtr_t * p )Llb_ManComputeQuant107,3038
float Llb_ManComputeCommonAttr( Llb_Mtr_t * p, int iCol1, int iCol2 )Llb_ManComputeCommonAttr134,3751
int Llb_ManComputeBestAttr( Llb_Mtr_t * p )Llb_ManComputeBestAttr164,4614
float ** Llb_ManComputeAttr( Llb_Mtr_t * p )Llb_ManComputeAttr196,5483
void Llb_MtrCombineSelectedColumns( Llb_Mtr_t * p, int iGrp1, int iGrp2 )Llb_MtrCombineSelectedColumns224,6246
void Llb_ManClusterOne( Llb_Mtr_t * p, int iCol1, int iCol2 )Llb_ManClusterOne258,7238
void Llb_ManClusterCompress( Llb_Mtr_t * p )Llb_ManClusterCompress293,8222
void Llb_ManCluster( Llb_Mtr_t * p )Llb_ManCluster324,8962

src/bdd/llb/llb1Reach.c,1151
DdNode * Llb_ManConstructOutBdd( Aig_Man_t * pAig, Aig_Obj_t * pNode, DdManager * dd )Llb_ManConstructOutBdd45,1266
DdNode * Llb_ManConstructGroupBdd( Llb_Man_t * p, Llb_Grp_t * pGroup )Llb_ManConstructGroupBdd91,2815
DdNode * Llb_ManConstructQuantCubeIntern( Llb_Man_t * p, Llb_Grp_t * pGroup, int iGrpPlace, int fBackward )Llb_ManConstructQuantCubeIntern155,5445
DdNode * Llb_ManConstructQuantCubeFwd( Llb_Man_t * p, Llb_Grp_t * pGroup, int iGrpPlace )Llb_ManConstructQuantCubeFwd205,7313
DdNode * Llb_ManConstructQuantCubeBwd( Llb_Man_t * p, Llb_Grp_t * pGroup, int iGrpPlace )Llb_ManConstructQuantCubeBwd249,8852
DdNode * Llb_ManComputeInitState( Llb_Man_t * p, DdManager * dd )Llb_ManComputeInitState297,10500
DdNode * Llb_ManComputeImage( Llb_Man_t * p, DdNode * bInit, int fBackward )Llb_ManComputeImage328,11375
DdNode * Llb_ManCreateConstraints( Llb_Man_t * p, Vec_Int_t * vHints, int fUseNsVars )Llb_ManCreateConstraints412,14269
Abc_Cex_t * Llb_ManReachDeriveCex( Llb_Man_t * p )Llb_ManReachDeriveCex469,16459
int Llb_ManReachability( Llb_Man_t * p, Vec_Int_t * vHints, DdManager ** pddGlo )Llb_ManReachability582,20578

src/bdd/llb/llb.c,0

src/bdd/llb/llb2Flow.c,3780
static inline int         Llb_ObjSetPath( Aig_Obj_t * pObj, Aig_Obj_t * pNext ) { pObj->pData = (void *)pNext; return 1;  }Llb_ObjSetPath30,772
static inline Aig_Obj_t * Llb_ObjGetPath( Aig_Obj_t * pObj )                    { return (Aig_Obj_t *)pObj->pData;        }Llb_ObjGetPath31,896
static inline Aig_Obj_t * Llb_ObjGetFanoutPath( Aig_Man_t * p, Aig_Obj_t * pObj ) Llb_ObjGetFanoutPath32,1020
Vec_Ptr_t * Llb_ManCutSupps( Aig_Man_t * p, Vec_Ptr_t * vResult )Llb_ManCutSupps61,1942
Vec_Ptr_t * Llb_ManCutMap( Aig_Man_t * p, Vec_Ptr_t * vResult, Vec_Ptr_t * vSupps )Llb_ManCutMap89,2763
int Llb_ManCutPiNum( Aig_Man_t * p, Vec_Ptr_t * vMinCut )Llb_ManCutPiNum231,7237
int Llb_ManCutLoNum( Aig_Man_t * p, Vec_Ptr_t * vMinCut )Llb_ManCutLoNum252,7751
int Llb_ManCutLiNum( Aig_Man_t * p, Vec_Ptr_t * vMinCut )Llb_ManCutLiNum273,8265
int Llb_ManCutVolume_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Llb_ManCutVolume_rec305,9024
int Llb_ManCutVolume( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_ManCutVolume326,9601
void Llb_ManCutNodes_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Llb_ManCutNodes_rec352,10326
Vec_Ptr_t * Llb_ManCutNodes( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_ManCutNodes374,10951
Vec_Ptr_t * Llb_ManCutSupp( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_ManCutSupp401,11722
Vec_Ptr_t * Llb_ManCutRange( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_ManCutRange436,12733
void Llb_ManCutPrint( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_ManCutPrint467,13569
void Llb_ManResultPrint( Aig_Man_t * p, Vec_Ptr_t * vResult )Llb_ManResultPrint525,15397
int Llb_ManFlowBwdPath2_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Llb_ManFlowBwdPath2_rec548,16051
void Llb_ManFlowLabelTfi_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Llb_ManFlowLabelTfi_rec606,18141
void Llb_ManFlowUpdateCut( Aig_Man_t * p, Vec_Ptr_t * vMinCut )Llb_ManFlowUpdateCut629,18756
Vec_Ptr_t * Llb_ManFlowMinCut( Aig_Man_t * p )Llb_ManFlowMinCut670,20063
int Llb_ManFlowVerifyCut_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Llb_ManFlowVerifyCut_rec703,21000
int Llb_ManFlowVerifyCut( Aig_Man_t * p, Vec_Ptr_t * vMinCut )Llb_ManFlowVerifyCut734,21818
Vec_Ptr_t * Llb_ManFlow( Aig_Man_t * p, Vec_Ptr_t * vSources, int * pnFlow )Llb_ManFlow762,22590
Vec_Ptr_t * Llb_ManFlowCompute( Aig_Man_t * p )Llb_ManFlowCompute830,24709
void Llb_ManFlowCleanMarkB_rec( Aig_Obj_t * pObj )Llb_ManFlowCleanMarkB_rec908,26981
void Llb_ManFlowSetMarkA_rec( Aig_Obj_t * pObj )Llb_ManFlowSetMarkA_rec929,27494
void Llb_ManFlowPrepareCut( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_ManFlowPrepareCut952,28079
void Llb_ManFlowUnmarkCone( Aig_Man_t * p, Vec_Ptr_t * vCone )Llb_ManFlowUnmarkCone996,29141
void Llb_ManFlowCollectAndMarkCone_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vCone )Llb_ManFlowCollectAndMarkCone_rec1019,29645
void Llb_ManFlowCollectAndMarkCone( Aig_Man_t * p, Vec_Ptr_t * vStarts, Vec_Ptr_t * vCone )Llb_ManFlowCollectAndMarkCone1049,30436
Vec_Ptr_t * Llb_ManComputeCutLo( Aig_Man_t * p )Llb_ManComputeCutLo1075,31028
Vec_Ptr_t * Llb_ManComputeCutLi( Aig_Man_t * p )Llb_ManComputeCutLi1097,31521
void Llb_ManFlowGetObjSet( Aig_Man_t * p, Vec_Ptr_t * vLower, int iStart, int nSize, Vec_Ptr_t * vSet )Llb_ManFlowGetObjSet1131,32303
Vec_Ptr_t * Llb_ManFlowFindBestCut( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper, int Num )Llb_ManFlowFindBestCut1154,32893
Vec_Ptr_t * Llb_ManComputeCuts( Aig_Man_t * p, int Num, int fVerbose, int fVeryVerbose )Llb_ManComputeCuts1226,35217
void Llb_BddSetDefaultParams( Gia_ParLlb_t * p )Llb_BddSetDefaultParams1298,37478
void Llb_ManMinCutTest( Aig_Man_t * pAig, int Num )Llb_ManMinCutTest1335,38566

src/bdd/llb/llb2Bad.c,216
DdNode * Llb_BddComputeBad( Aig_Man_t * pInit, DdManager * dd, abctime TimeOut )Llb_BddComputeBad45,1261
DdNode * Llb_BddQuantifyPis( Aig_Man_t * pInit, DdManager * dd, DdNode * bFunc )Llb_BddQuantifyPis109,3565

src/bdd/llb/llb3Image.c,4704
typedef struct Llb_Var_t_ Llb_Var_t;Llb_Var_t29,799
struct Llb_Var_t_ Llb_Var_t_30,836
    int           iVar;      // variable numberiVar32,857
    int           nScore;    // variable scorenScore33,905
    Vec_Int_t *   vParts;    // partitionsvParts34,952
typedef struct Llb_Prt_t_ Llb_Prt_t;Llb_Prt_t37,999
struct Llb_Prt_t_ Llb_Prt_t_38,1036
    int           iPart;     // partition numberiPart40,1057
    int           nSize;     // the number of BDD nodesnSize41,1106
    DdNode *      bFunc;     // the partitionbFunc42,1162
    Vec_Int_t *   vVars;     // supportvVars43,1208
typedef struct Llb_Mgr_t_ Llb_Mgr_t;Llb_Mgr_t46,1252
struct Llb_Mgr_t_Llb_Mgr_t_47,1289
    Aig_Man_t *   pAig;      // AIG managerpAig49,1309
    Vec_Ptr_t *   vLeaves;   // leaves in the AIG managervLeaves50,1353
    Vec_Ptr_t *   vRoots;    // roots in the AIG managervRoots51,1411
    DdManager *   dd;        // working BDD managerdd52,1468
    int *         pVars2Q;   // variables to quantifypVars2Q53,1520
    Llb_Prt_t **  pParts;    // partitionspParts55,1590
    Llb_Var_t **  pVars;     // variablespVars56,1633
    int           iPartFree; // next free partitioniPartFree57,1675
    int           nVars;     // the number of BDD variablesnVars58,1727
    int           nSuppMax;  // maximum support sizenSuppMax59,1787
    int *         pSupp;     // temporary support storagepSupp61,1857
static inline Llb_Var_t * Llb_MgrVar( Llb_Mgr_t * p, int i )   { return p->pVars[i];  }Llb_MgrVar64,1919
static inline Llb_Prt_t * Llb_MgrPart( Llb_Mgr_t * p, int i )  { return p->pParts[i]; }Llb_MgrPart65,2007
#define Llb_MgrForEachVar(Llb_MgrForEachVar68,2118
#define Llb_MgrForEachPart(Llb_MgrForEachPart71,2290
#define Llb_PartForEachVar(Llb_PartForEachVar75,2486
#define Llb_VarForEachPart(Llb_VarForEachPart78,2696
abctime timeBuild, timeAndEx, timeOther;timeBuild82,2884
abctime timeBuild, timeAndEx, timeOther;timeAndEx82,2884
abctime timeBuild, timeAndEx, timeOther;timeOther82,2884
int nSuppMax;nSuppMax83,2925
void Llb_NonlinRemoveVar( Llb_Mgr_t * p, Llb_Var_t * pVar )Llb_NonlinRemoveVar100,3415
void Llb_NonlinRemovePart( Llb_Mgr_t * p, Llb_Prt_t * pPart )Llb_NonlinRemovePart119,3868
DdNode * Llb_NonlinCreateCube1( Llb_Mgr_t * p, Llb_Prt_t * pPart )Llb_NonlinCreateCube1139,4394
DdNode * Llb_NonlinCreateCube2( Llb_Mgr_t * p, Llb_Prt_t * pPart1, Llb_Prt_t * pPart2 )Llb_NonlinCreateCube2172,5417
int Llb_NonlinHasSingletonVars( Llb_Mgr_t * p, Llb_Prt_t * pPart )Llb_NonlinHasSingletonVars208,6642
void Llb_NonlinPrint( Llb_Mgr_t * p )Llb_NonlinPrint229,7154
int Llb_NonlinQuantify1( Llb_Mgr_t * p, Llb_Prt_t * pPart, int fSubset )Llb_NonlinQuantify1262,7953
int Llb_NonlinQuantify2( Llb_Mgr_t * p, Llb_Prt_t * pPart1, Llb_Prt_t * pPart2 )Llb_NonlinQuantify2342,10834
void Llb_NonlinCutNodes_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Llb_NonlinCutNodes_rec486,15476
Vec_Ptr_t * Llb_NonlinCutNodes( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper )Llb_NonlinCutNodes515,16284
Vec_Ptr_t * Llb_NonlinBuildBdds( Aig_Man_t * p, Vec_Ptr_t * vLower, Vec_Ptr_t * vUpper, DdManager * dd )Llb_NonlinBuildBdds542,17093
void Llb_NonlinAddPair( Llb_Mgr_t * p, DdNode * bFunc, int iPart, int iVar )Llb_NonlinAddPair604,19299
void Llb_NonlinAddPartition( Llb_Mgr_t * p, int i, DdNode * bFunc )Llb_NonlinAddPartition628,19985
int Llb_NonlinStart( Llb_Mgr_t * p )Llb_NonlinStart660,20909
void Llb_NonlinCheckVars( Llb_Mgr_t * p )Llb_NonlinCheckVars686,21663
int Llb_NonlinNextPartitions( Llb_Mgr_t * p, Llb_Prt_t ** ppPart1, Llb_Prt_t ** ppPart2 )Llb_NonlinNextPartitions705,22093
void Llb_NonlinReorder( DdManager * dd, int fTwice, int fVerbose )Llb_NonlinReorder748,23390
void Llb_NonlinRecomputeScores( Llb_Mgr_t * p )Llb_NonlinRecomputeScores777,24312
void Llb_NonlinVerifyScores( Llb_Mgr_t * p )Llb_NonlinVerifyScores803,24955
Llb_Mgr_t * Llb_NonlinAlloc( Aig_Man_t * pAig, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vRoots, int * pVars2Q, DdManager * dd )Llb_NonlinAlloc830,25644
void Llb_NonlinFree( Llb_Mgr_t * p )Llb_NonlinFree858,26504
DdNode * Llb_NonlinImage( Aig_Man_t * pAig, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vRoots, int * pVars2Q, Llb_NonlinImage884,27204
static Llb_Mgr_t * p = NULL;p950,29303
DdManager * Llb_NonlinImageStart( Aig_Man_t * pAig, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vRoots, int * pVars2Q, int * pOrder, int fFirst, abctime TimeTarget )Llb_NonlinImageStart963,29600
DdNode * Llb_NonlinImageCompute( DdNode * bCurrent, int fReorder, int fDrop, int fVerbose, int * pOrder )Llb_NonlinImageCompute999,30714
void Llb_NonlinImageQuit()Llb_NonlinImageQuit1075,33022

src/bdd/epd/epd.c,2282
EpdAlloc(void)EpdAlloc72,2438
EpdCmp(const char *key1, const char *key2)EpdCmp93,2824
EpdFree(EpDouble *epd)EpdFree117,3357
EpdGetString(EpDouble *epd, char *str)EpdGetString135,3755
EpdConvert(double value, EpDouble *epd)EpdConvert185,4907
EpdMultiply(EpDouble *epd1, double value)EpdMultiply205,5358
EpdMultiply2(EpDouble *epd1, EpDouble *epd2)EpdMultiply2246,6336
EpdMultiply2Decimal(EpDouble *epd1, EpDouble *epd2)EpdMultiply2Decimal285,7289
EpdMultiply3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)EpdMultiply3321,8153
EpdMultiply3Decimal(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)EpdMultiply3Decimal355,9032
EpdDivide(EpDouble *epd1, double value)EpdDivide386,9816
EpdDivide2(EpDouble *epd1, EpDouble *epd2)EpdDivide2439,11063
EpdDivide3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)EpdDivide3490,12293
EpdAdd(EpDouble *epd1, double value)EpdAdd536,13443
EpdAdd2(EpDouble *epd1, EpDouble *epd2)EpdAdd2598,15081
EpdAdd3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)EpdAdd3660,16743
EpdSubtract(EpDouble *epd1, double value)EpdSubtract726,18511
EpdSubtract2(EpDouble *epd1, EpDouble *epd2)EpdSubtract2788,20181
EpdSubtract3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)EpdSubtract3850,21875
EpdPow2(int n, EpDouble *epd)EpdPow2917,23699
EpdPow2Decimal(int n, EpDouble *epd)EpdPow2Decimal946,24321
EpdNormalize(EpDouble *epd)EpdNormalize977,25031
EpdNormalizeDecimal(EpDouble *epd)EpdNormalizeDecimal1007,25691
EpdGetValueAndDecimalExponent(EpDouble *epd, double *value, int *exponent)EpdGetValueAndDecimalExponent1034,26314
EpdGetExponent(double value)EpdGetExponent1068,27048
EpdGetExponentDecimal(double value)EpdGetExponentDecimal1091,27545
EpdMakeInf(EpDouble *epd, int sign)EpdMakeInf1115,28013
EpdMakeZero(EpDouble *epd, int sign)EpdMakeZero1137,28489
EpdMakeNan(EpDouble *epd)EpdMakeNan1159,28954
EpdCopy(EpDouble *from, EpDouble *to)EpdCopy1182,29454
EpdIsInf(EpDouble *epd)EpdIsInf1201,29869
EpdIsZero(EpDouble *epd)EpdIsZero1219,30242
EpdIsNan(EpDouble *epd)EpdIsNan1240,30641
EpdIsNanOrInf(EpDouble *epd)EpdIsNanOrInf1258,31026
IsInfDouble(double value)IsInfDouble1276,31407
IsNanDouble(double value)IsNanDouble1305,31973
IsNanOrInfDouble(double value)IsNanOrInfDouble1333,32561

src/bdd/epd/epd.h,1611
#define ABC__bdd__epd__epd_hABC__bdd__epd__epd_h52,2071
#define EPD_MAX_BIN EPD_MAX_BIN60,2370
#define EPD_MAX_DEC EPD_MAX_DEC61,2399
#define EPD_EXP_INF EPD_EXP_INF62,2427
struct IeeeDoubleStruct {       /* BIG_ENDIAN */IeeeDoubleStruct78,2975
  unsigned int sign: 1;sign79,3024
  unsigned int exponent: 11;exponent80,3048
  unsigned int mantissa0: 20;mantissa081,3077
  unsigned int mantissa1: 32;mantissa182,3107
struct IeeeNanStruct {  /* BIG_ENDIAN */IeeeNanStruct103,3606
  unsigned int sign: 1;sign104,3647
  unsigned int exponent: 11;exponent105,3671
  unsigned int quiet_bit: 1;quiet_bit106,3700
  unsigned int mantissa0: 19;mantissa0107,3729
  unsigned int mantissa1: 32;mantissa1108,3759
struct IeeeNanStruct {  /* LITTLE_ENDIAN */IeeeNanStruct111,3798
  unsigned int mantissa1: 32;mantissa1112,3842
  unsigned int mantissa0: 19;mantissa0113,3872
  unsigned int quiet_bit: 1;quiet_bit114,3902
  unsigned int exponent: 11;exponent115,3931
  unsigned int sign: 1;sign116,3960
union EpTypeUnion {EpTypeUnion129,4312
  double                        value;value130,4332
  struct IeeeDoubleStruct       bits;bits131,4371
  struct IeeeNanStruct          nan;nan132,4409
struct EpDoubleStruct {EpDoubleStruct135,4450
  union EpTypeUnion             type;type136,4474
  int                           exponent;exponent137,4512
typedef struct EpDoubleStruct EpDouble;EpDouble143,4798
typedef struct IeeeDoubleStruct IeeeDouble;IeeeDouble144,4838
typedef struct IeeeNanStruct IeeeNan;IeeeNan145,4882
typedef union EpTypeUnion EpType;EpType146,4920

src/bdd/bbr/bbrCex.c,123
Abc_Cex_t * Aig_ManVerifyUsingBddsCountExample( Aig_Man_t * p, DdManager * dd, Aig_ManVerifyUsingBddsCountExample47,1405

src/bdd/bbr/bbrImage.c,4626
typedef struct Bbr_ImageNode_t_  Bbr_ImageNode_t;Bbr_ImageNode_t42,1329
typedef struct Bbr_ImagePart_t_  Bbr_ImagePart_t;Bbr_ImagePart_t43,1379
typedef struct Bbr_ImageVar_t_   Bbr_ImageVar_t;Bbr_ImageVar_t44,1429
struct Bbr_ImageTree_t_Bbr_ImageTree_t_46,1479
    Bbr_ImageNode_t *   pRoot;      // the root of quantification treepRoot48,1505
    Bbr_ImageNode_t *   pCare;      // the leaf node with the care setpCare49,1576
    DdNode *            bCareSupp;  // the cube to quantify from the carebCareSupp50,1647
    int                 fVerbose;   // the verbosity flagfVerbose51,1721
    int                 nNodesMax;  // the max number of nodes in one iternNodesMax52,1779
    int                 nNodesMaxT; // the overall max number of nodesnNodesMaxT53,1854
    int                 nIter;      // the number of iterations with this treenIter54,1925
    int                 nBddMax;    // the number of node to stopnBddMax55,2004
struct Bbr_ImageNode_t_Bbr_ImageNode_t_58,2074
    DdManager *         dd;         // the manager dd60,2100
    DdNode *            bCube;      // the cube to quantifybCube61,2152
    DdNode *            bImage;     // the partial imagebImage62,2212
    Bbr_ImageNode_t *   pNode1;     // the first branchpNode163,2269
    Bbr_ImageNode_t *   pNode2;     // the second branchpNode264,2325
    Bbr_ImagePart_t *   pPart;      // the partition (temporary)pPart65,2382
struct Bbr_ImagePart_t_Bbr_ImagePart_t_68,2451
    DdNode *            bFunc;      // the partitionbFunc70,2477
    DdNode *            bSupp;      // the support of this partitionbSupp71,2530
    int                 nNodes;     // the number of BDD nodesnNodes72,2599
    short               nSupp;      // the number of support variablesnSupp73,2662
    short               iPart;      // the number of this partitioniPart74,2733
struct Bbr_ImageVar_t_Bbr_ImageVar_t_77,2805
    int                 iNum;       // the BDD index of this variableiNum79,2830
    DdNode *            bParts;     // the partition numbersbParts80,2900
    int                 nParts;     // the number of partitionsnParts81,2961
#define     b0 b096,3752
#define     b1 b197,3791
#define ABC_PRB(ABC_PRB100,3846
Bbr_ImageTree_t * Bbr_bddImageStart( Bbr_bddImageStart168,6983
DdNode * Bbr_bddImageCompute( Bbr_ImageTree_t * pTree, DdNode * bCare )Bbr_bddImageCompute253,9585
void Bbr_bddImageTreeDelete( Bbr_ImageTree_t * pTree )Bbr_bddImageTreeDelete307,11245
DdNode * Bbr_bddImageRead( Bbr_ImageTree_t * pTree )Bbr_bddImageRead326,11735
void Bbr_bddPrint( DdManager * dd, DdNode * F )Bbr_bddPrint346,12341
Bbr_ImagePart_t ** Bbr_CreateParts( DdManager * dd,Bbr_CreateParts406,13720
Bbr_ImageVar_t ** Bbr_CreateVars( DdManager * dd,Bbr_CreateVars445,15218
Bbr_ImageNode_t ** Bbr_CreateNodes( DdManager * dd, Bbr_CreateNodes507,17389
void Bbr_DeleteParts_rec( Bbr_ImageNode_t * pNode )Bbr_DeleteParts_rec611,20742
void Bbr_bddImageTreeDelete_rec( Bbr_ImageNode_t * pNode )Bbr_bddImageTreeDelete_rec635,21401
int Bbr_bddImageCompute_rec( Bbr_ImageTree_t * pTree, Bbr_ImageNode_t * pNode )Bbr_bddImageCompute_rec660,22096
int Bbr_BuildTreeNode( DdManager * dd, Bbr_BuildTreeNode721,23754
Bbr_ImageNode_t * Bbr_MergeTopNodes(Bbr_MergeTopNodes850,28176
Bbr_ImageNode_t * Bbr_CombineTwoNodes( DdManager * dd, DdNode * bCube,Bbr_CombineTwoNodes899,29316
int Bbr_FindBestVariable( DdManager * dd,Bbr_FindBestVariable953,31101
void Bbr_FindBestPartitions( DdManager * dd, DdNode * bParts, Bbr_FindBestPartitions1010,32753
void Bbr_bddImagePrintLatchDependency( Bbr_bddImagePrintLatchDependency1050,33793
void Bbr_bddImagePrintLatchDependencyOne(Bbr_bddImagePrintLatchDependencyOne1088,35106
void Bbr_bddImagePrintTree( Bbr_ImageTree_t * pTree )Bbr_bddImagePrintTree1127,36171
void Bbr_bddImagePrintTree_rec( Bbr_ImageNode_t * pNode, int Offset )Bbr_bddImagePrintTree_rec1144,36616
DdNode * Bbr_bddComputeCube( DdManager * dd, DdNode ** bXVars, int nVars )Bbr_bddComputeCube1191,37666
struct Bbr_ImageTree2_t_Bbr_ImageTree2_t_1212,38042
    DdManager * dd;dd1214,38069
    DdNode *    bRel;bRel1215,38089
    DdNode *    bCube;bCube1216,38111
    DdNode *    bImage;bImage1217,38134
Bbr_ImageTree2_t * Bbr_bddImageStart2( Bbr_bddImageStart21231,38436
DdNode * Bbr_bddImageCompute2( Bbr_ImageTree2_t * pTree, DdNode * bCare )Bbr_bddImageCompute21273,39702
void Bbr_bddImageTreeDelete2( Bbr_ImageTree2_t * pTree )Bbr_bddImageTreeDelete21293,40243
DdNode * Bbr_bddImageRead2( Bbr_ImageTree2_t * pTree )Bbr_bddImageRead21315,40840

src/bdd/bbr/bbrNtbdd.c,876
typedef char ProgressBar;ProgressBar27,612
static inline void     Aig_ObjSetGlobalBdd( Aig_Obj_t * pObj, DdNode * bFunc )   { pObj->pData = bFunc; }Aig_ObjSetGlobalBdd33,859
static inline void     Aig_ObjCleanGlobalBdd( DdManager * dd, Aig_Obj_t * pObj ) { Cudd_RecursiveDeref( dd, (DdNode *)pObj->pData ); pObj->pData = NULL; }Aig_ObjCleanGlobalBdd34,965
DdNode * Bbr_NodeGlobalBdds_rec( DdManager * dd, Aig_Obj_t * pNode, int nBddSizeMax, int fDropInternal, ProgressBar * pProgress, int * pCounter, int fVerbose )Bbr_NodeGlobalBdds_rec51,1615
void Aig_ManFreeGlobalBdds( Aig_Man_t * p, DdManager * dd ) Aig_ManFreeGlobalBdds112,3864
int Aig_ManSizeOfGlobalBdds( Aig_Man_t * p ) Aig_ManSizeOfGlobalBdds132,4369
DdManager * Aig_ManComputeGlobalBdds( Aig_Man_t * p, int nBddSizeMax, int fDropInternal, int fReorder, int fVerbose )Aig_ManComputeGlobalBdds157,5169

src/bdd/bbr/bbr_.c,0

src/bdd/bbr/bbr.h,328
#define ABC__aig__bbr__bbr_hABC__aig__bbr__bbr_h22,538
static inline DdNode * Aig_ObjGlobalBdd( Aig_Obj_t * pObj )  { return (DdNode *)pObj->pData; }Aig_ObjGlobalBdd51,1582
typedef struct Bbr_ImageTree_t_  Bbr_ImageTree_t;Bbr_ImageTree_t58,1976
typedef struct Bbr_ImageTree2_t_  Bbr_ImageTree2_t;Bbr_ImageTree2_t66,2421

src/bdd/bbr/bbrReach.c,992
void Bbr_ManSetDefaultParams( Saig_ParBbr_t * p )Bbr_ManSetDefaultParams49,1514
DdNode * Bbr_bddComputeRangeCube( DdManager * dd, int iStart, int iStop )Bbr_bddComputeRangeCube74,2173
void Bbr_StopManager( DdManager * dd )Bbr_StopManager102,2914
DdNode * Aig_ManInitStateVarMap( DdManager * dd, Aig_Man_t * p, int fVerbose )Aig_ManInitStateVarMap124,3511
DdNode ** Aig_ManCreateOutputs( DdManager * dd, Aig_Man_t * p )Aig_ManCreateOutputs162,4662
DdNode ** Aig_ManCreatePartitions( DdManager * dd, Aig_Man_t * p, int fReorder, int fVerbose )Aig_ManCreatePartitions187,5303
int Aig_ManComputeReachable( DdManager * dd, Aig_Man_t * p, DdNode ** pbParts, DdNode * bInitial, DdNode ** pbOutputs, Saig_ParBbr_t * pPars, int fCheckOutputs )Aig_ManComputeReachable238,6926
int Aig_ManVerifyUsingBdds_int( Aig_Man_t * p, Saig_ParBbr_t * pPars )Aig_ManVerifyUsingBdds_int438,14947
int Aig_ManVerifyUsingBdds( Aig_Man_t * pInit, Saig_ParBbr_t * pPars )Aig_ManVerifyUsingBdds544,18443

src/bdd/extrab/extraBddCas.c,3802
#define _TABLESIZE_COF _TABLESIZE_COF37,1272
    unsigned Sign;  Sign40,1320
    DdNode * Arg1;  Arg141,1341
} _HashEntry_cof;_HashEntry_cof42,1362
_HashEntry_cof HHTable1[_TABLESIZE_COF];HHTable143,1380
#define _TABLESIZE_MINT _TABLESIZE_MINT46,1496
    DdNode * Arg1;  Arg149,1545
    unsigned Arg2;  Arg250,1566
    unsigned Res;  Res51,1587
} _HashEntry_mint;_HashEntry_mint52,1607
_HashEntry_mint HHTable2[_TABLESIZE_MINT];HHTable253,1626
    int      nEdges;  // the number of in-coming edges of the nodenEdges57,1688
    DdNode * bSum;    // the sum of paths of the incoming edgesbSum58,1755
} traventry;traventry59,1819
static unsigned s_Signature = 1;s_Signature62,1867
static int s_CutLevel = 0;s_CutLevel64,1901
static int s_MaxDepth = 5;      s_MaxDepth72,2330
static int s_nVarsBest;          // the number of vars in the best orderings_nVarsBest74,2364
static int s_VarOrderBest[32];   // storing the best ordering of vars in the "simple encoding"s_VarOrderBest75,2440
static int s_VarOrderCur[32];    // storing the current ordering of varss_VarOrderCur76,2535
static DdNode * s_Field[8][256]; // the size should be K, 2^K, where K is no less than MaxDepths_Field79,2669
static DdNode * s_Encoded;       // this is the original functions_Encoded80,2765
static DdNode * s_VarAll;        // the set of all column variabless_VarAll81,2831
static int s_MultiStart;         // the total number of encoding variables useds_MultiStart82,2899
static DdNode ** s_pbTemp;       // the temporary storage for the columnss_pbTemp85,3023
static int s_BackTracks;s_BackTracks87,3098
static int s_BackTrackLimit = 100;s_BackTrackLimit88,3123
static DdNode * s_Terminal;      // the terminal value for counting mintermss_Terminal90,3159
static int s_EncodingVarsLevel;s_EncodingVarsLevel93,3238
Extra_bddEncodingBinary( Extra_bddEncodingBinary138,5509
Extra_bddEncodingNonStrict( Extra_bddEncodingNonStrict184,7175
 st__table * Extra_bddNodePathsUnderCut( DdManager * dd, DdNode * bFunc, int CutLevel )Extra_bddNodePathsUnderCut263,10270
int Extra_bddNodePathsUnderCutArray( DdManager * dd, DdNode ** paNodes, DdNode ** pbCubes, int nNodes, DdNode ** paNodesRes, DdNode ** pbCubesRes, int CutLevel )Extra_bddNodePathsUnderCutArray355,13451
void extraCollectNodes( DdNode * Func, st__table * tNodes )extraCollectNodes435,16043
 st__table * Extra_CollectNodes( DdNode * Func )Extra_CollectNodes458,16643
void extraProfileUpdateTopLevel( st__table * tNodeTopRef, int TopLevelNew, DdNode * node )extraProfileUpdateTopLevel480,17415
int Extra_ProfileWidth( DdManager * dd, DdNode * Func, int * pProfile, int CutLevel )Extra_ProfileWidth519,19205
DdNode * CreateTheCodes_rec( DdManager * dd, DdNode * bEncoded, int Level, DdNode ** pCVars )CreateTheCodes_rec599,22114
void EvaluateEncodings_rec( DdManager * dd, DdNode * bVarsCol, int nVarsCol, int nMulti, int Level )EvaluateEncodings_rec730,26996
DdNode * ComputeVarSetAndCountMinterms( DdManager * dd, DdNode * bVars, DdNode * bVarTop, unsigned * Cost )ComputeVarSetAndCountMinterms852,31153
DdNode * ComputeVarSetAndCountMinterms2( DdManager * dd, DdNode * bVars, DdNode * bVarTop, unsigned * Cost )ComputeVarSetAndCountMinterms2882,32259
unsigned Extra_CountCofactorMinterms( DdManager * dd, DdNode * bFunc, DdNode * bVarsCof, DdNode * bVarsAll )Extra_CountCofactorMinterms910,33182
unsigned Extra_CountMintermsSimple( DdNode * bFunc, unsigned max )Extra_CountMintermsSimple1069,38602
void CountNodeVisits_rec( DdManager * dd, DdNode * aFunc, st__table * Visited )CountNodeVisits_rec1113,39968
void CollectNodesAndComputePaths_rec( DdManager * dd, DdNode * aFunc, DdNode * bCube, st__table * Visited, st__table * CutNodes )CollectNodesAndComputePaths_rec1159,41426

src/bdd/extrab/extraBddAuto.c,2263
DdNode * Extra_bddSpaceFromFunctionFast( DdManager * dd, DdNode * bFunc )Extra_bddSpaceFromFunctionFast153,4919
DdNode * Extra_bddSpaceFromFunction( DdManager * dd, DdNode * bF, DdNode * bG )Extra_bddSpaceFromFunction253,8577
DdNode * Extra_bddSpaceFromFunctionPos( DdManager * dd, DdNode * bFunc )Extra_bddSpaceFromFunctionPos274,9043
DdNode * Extra_bddSpaceFromFunctionNeg( DdManager * dd, DdNode * bFunc )Extra_bddSpaceFromFunctionNeg295,9504
DdNode * Extra_bddSpaceCanonVars( DdManager * dd, DdNode * bSpace )Extra_bddSpaceCanonVars316,9965
DdNode * Extra_bddSpaceReduce( DdManager * dd, DdNode * bFunc, DdNode * bCanonVars )Extra_bddSpaceReduce337,10416
DdNode * Extra_bddSpaceEquations( DdManager * dd, DdNode * bSpace )Extra_bddSpaceEquations361,11031
DdNode * Extra_bddSpaceEquationsPos( DdManager * dd, DdNode * bSpace )Extra_bddSpaceEquationsPos387,11745
DdNode * Extra_bddSpaceEquationsNeg( DdManager * dd, DdNode * bSpace )Extra_bddSpaceEquationsNeg409,12203
DdNode * Extra_bddSpaceFromMatrixPos( DdManager * dd, DdNode * zA )Extra_bddSpaceFromMatrixPos431,12661
DdNode * Extra_bddSpaceFromMatrixNeg( DdManager * dd, DdNode * zA )Extra_bddSpaceFromMatrixNeg452,13112
int Extra_zddLitCountComb( DdManager * dd, DdNode * zComb )Extra_zddLitCountComb473,13612
DdNode ** Extra_bddSpaceExorGates( DdManager * dd, DdNode * bFuncRed, DdNode * zEquations )Extra_bddSpaceExorGates497,14283
DdNode * extraBddSpaceFromFunction( DdManager * dd, DdNode * bF, DdNode * bG )extraBddSpaceFromFunction562,16353
DdNode * extraBddSpaceFromFunctionPos( DdManager * dd, DdNode * bF )extraBddSpaceFromFunctionPos738,21036
DdNode * extraBddSpaceFromFunctionNeg( DdManager * dd, DdNode * bF )extraBddSpaceFromFunctionNeg869,24515
DdNode * extraBddSpaceCanonVars( DdManager * dd, DdNode * bF )extraBddSpaceCanonVars1000,27988
DdNode * extraBddSpaceEquationsPos( DdManager * dd, DdNode * bF )extraBddSpaceEquationsPos1071,29712
DdNode * extraBddSpaceEquationsNeg( DdManager * dd, DdNode * bF )extraBddSpaceEquationsNeg1201,33384
DdNode * extraBddSpaceFromMatrixPos( DdManager * dd, DdNode * zA )extraBddSpaceFromMatrixPos1333,37061
DdNode * extraBddSpaceFromMatrixNeg( DdManager * dd, DdNode * zA )extraBddSpaceFromMatrixNeg1451,40206

src/bdd/extrab/extraBddKmap.c,2291
#define MAXVARS MAXVARS37,1008
#define SINGLE_VERTICAL SINGLE_VERTICAL82,2252
#define SINGLE_HORIZONTAL SINGLE_HORIZONTAL83,2290
#define SINGLE_TOP_LEFT SINGLE_TOP_LEFT84,2328
#define SINGLE_TOP_RIGHT SINGLE_TOP_RIGHT85,2366
#define SINGLE_BOT_LEFT SINGLE_BOT_LEFT86,2404
#define SINGLE_BOT_RIGHT SINGLE_BOT_RIGHT87,2442
#define DOUBLE_VERTICAL DOUBLE_VERTICAL90,2496
#define DOUBLE_HORIZONTAL DOUBLE_HORIZONTAL91,2534
#define DOUBLE_TOP_LEFT DOUBLE_TOP_LEFT92,2572
#define DOUBLE_TOP_RIGHT DOUBLE_TOP_RIGHT93,2610
#define DOUBLE_BOT_LEFT DOUBLE_BOT_LEFT94,2648
#define DOUBLE_BOT_RIGHT DOUBLE_BOT_RIGHT95,2686
#define SINGLES_CROSS SINGLES_CROSS98,2747
#define DOUBLES_CROSS DOUBLES_CROSS99,2785
#define S_HOR_CROSS_D_VER S_HOR_CROSS_D_VER100,2823
#define S_VER_CROSS_D_HOR S_VER_CROSS_D_HOR101,2861
#define S_JOINS_S_VER_LEFT S_JOINS_S_VER_LEFT104,2923
#define S_JOINS_S_VER_RIGHT S_JOINS_S_VER_RIGHT105,2961
#define S_JOINS_S_HOR_TOP S_JOINS_S_HOR_TOP106,2999
#define S_JOINS_S_HOR_BOT S_JOINS_S_HOR_BOT107,3037
#define D_JOINS_D_VER_LEFT D_JOINS_D_VER_LEFT110,3099
#define D_JOINS_D_VER_RIGHT D_JOINS_D_VER_RIGHT111,3137
#define D_JOINS_D_HOR_TOP D_JOINS_D_HOR_TOP112,3175
#define D_JOINS_D_HOR_BOT D_JOINS_D_HOR_BOT113,3213
#define S_JOINS_D_VER_LEFT S_JOINS_D_VER_LEFT116,3287
#define S_JOINS_D_VER_RIGHT S_JOINS_D_VER_RIGHT117,3325
#define S_JOINS_D_HOR_TOP S_JOINS_D_HOR_TOP118,3363
#define S_JOINS_D_HOR_BOT S_JOINS_D_HOR_BOT119,3401
#define UNDERSCORE UNDERSCORE123,3458
#define SYMBOL_ZERO SYMBOL_ZERO127,3603
#define SYMBOL_ONE SYMBOL_ONE131,3692
#define SYMBOL_DC SYMBOL_DC132,3730
#define SYMBOL_OVERLAP SYMBOL_OVERLAP133,3768
#define CELL_FREE CELL_FREE136,3836
#define CELL_FULL CELL_FULL137,3873
#define HALF_UPPER HALF_UPPER138,3911
#define HALF_LOWER HALF_LOWER139,3949
#define HALF_LEFT HALF_LEFT140,3987
#define HALF_RIGHT HALF_RIGHT141,4025
static DdNode * s_XVars[MAXVARS];s_XVars157,4834
static int fHorizontalVarNamesPrintedAbove = 1;fHorizontalVarNamesPrintedAbove160,4942
void Extra_PrintKMap( Extra_PrintKMap201,6629
void Extra_PrintKMapRelation( Extra_PrintKMapRelation581,19885
int GrayCode ( int BinCode )GrayCode851,29356
int BinCode ( int GrayCode )BinCode867,29660

src/bdd/extrab/extraBddSymm.c,1683
#define DD_GET_SYMM_VARS_TAG DD_GET_SYMM_VARS_TAG47,1893
Extra_SymmInfo_t * Extra_SymmPairsCompute( Extra_SymmPairsCompute73,3117
DdNode * Extra_zddSymmPairsCompute( Extra_zddSymmPairsCompute105,3972
DdNode * Extra_zddGetSymmetricVars( Extra_zddGetSymmetricVars130,4615
DdNode * Extra_zddGetSingletons( Extra_zddGetSingletons157,5438
DdNode * Extra_bddReduceVarSet( Extra_bddReduceVarSet181,6055
Extra_SymmInfo_t * Extra_SymmPairsAllocate( int nVars )Extra_SymmPairsAllocate207,6742
void Extra_SymmPairsDissolve( Extra_SymmInfo_t * p )Extra_SymmPairsDissolve238,7632
void Extra_SymmPairsPrint( Extra_SymmInfo_t * p )Extra_SymmPairsPrint257,8106
Extra_SymmInfo_t * Extra_SymmPairsCreateFromZdd( DdManager * dd, DdNode * zPairs, DdNode * bSupp )Extra_SymmPairsCreateFromZdd288,8981
int Extra_bddCheckVarsSymmetric( Extra_bddCheckVarsSymmetric360,11249
Extra_SymmInfo_t * Extra_SymmPairsComputeNaive( DdManager * dd, DdNode * bFunc )Extra_SymmPairsComputeNaive396,12106
int Extra_bddCheckVarsSymmetricNaive( Extra_bddCheckVarsSymmetricNaive443,13540
DdNode* Extra_zddTuplesFromBdd( Extra_zddTuplesFromBdd488,14993
DdNode* Extra_zddSelectOneSubset( Extra_zddSelectOneSubset546,16828
extraZddSymmPairsCompute( extraZddSymmPairsCompute580,18005
DdNode * extraZddGetSymmetricVars( extraZddGetSymmetricVars804,25733
DdNode * extraZddGetSingletons( extraZddGetSingletons1001,32082
DdNode * extraBddReduceVarSet( extraBddReduceVarSet1062,33804
DdNode * extraBddCheckVarsSymmetric( extraBddCheckVarsSymmetric1169,37381
DdNode* extraZddTuplesFromBdd( extraZddTuplesFromBdd1341,43333
DdNode * extraZddSelectOneSubset( extraZddSelectOneSubset1419,45409

src/bdd/extrab/extraBddSet.c,798
Extra_zddSubSet(Extra_zddSubSet100,3563
Extra_zddSupSet(Extra_zddSupSet133,4250
Extra_zddNotSubSet(Extra_zddNotSubSet165,4945
Extra_zddNotSupSet(Extra_zddNotSupSet198,5644
Extra_zddMaxNotSupSet(Extra_zddMaxNotSupSet232,6373
Extra_zddEmptyBelongs(Extra_zddEmptyBelongs265,7020
Extra_zddIsOneSubset(Extra_zddIsOneSubset288,7502
DdNode* extraZddSubSet( DdManager *dd, DdNode *X, DdNode *Y )extraZddSubSet319,8281
DdNode* extraZddSupSet( DdManager *dd, DdNode *X, DdNode *Y )extraZddSupSet430,11229
DdNode* extraZddNotSubSet( DdManager *dd, DdNode *X, DdNode *Y )extraZddNotSubSet550,14465
DdNode* extraZddNotSupSet( DdManager *dd, DdNode *X, DdNode *Y )extraZddNotSupSet676,17769
DdNode* extraZddMaxNotSupSet( DdManager *dd, DdNode *X, DdNode *Y )extraZddMaxNotSupSet799,21039

src/bdd/extrab/extraBddTime.c,639
#define CHECK_FACTOR CHECK_FACTOR28,753
Extra_bddAndTime(Extra_bddAndTime83,3465
Extra_bddAndAbstractTime(Extra_bddAndAbstractTime117,4427
DdNode * Extra_TransferPermuteTime( DdManager * ddSource, DdManager * ddDestination, DdNode * f, int * Permute, int TimeOut )Extra_TransferPermuteTime150,5431
cuddBddAndRecurTime(cuddBddAndRecurTime182,6525
cuddBddAndAbstractRecurTime(cuddBddAndAbstractRecurTime317,9761
DdNode * extraTransferPermuteTime( DdManager * ddS, DdManager * ddD, DdNode * f, int * Permute, int TimeOut )extraTransferPermuteTime513,15353
extraTransferPermuteRecurTime( extraTransferPermuteRecurTime569,16968

src/bdd/extrab/extraBddThresh.c,2814
void Extra_ThreshPrintChow(int Chow0, int * pChow, int nVars) {Extra_ThreshPrintChow54,1562
int Extra_ThreshComputeChow(word * t, int nVars, int * pChow) {Extra_ThreshComputeChow60,1733
void Extra_ThreshSortByChow(word * t, int nVars, int * pChow) {Extra_ThreshSortByChow74,2243
void Extra_ThreshSortByChowInverted(word * t, int nVars, int * pChow) {Extra_ThreshSortByChowInverted90,2734
int Extra_ThreshInitializeChow(int nVars, int * pChow) {Extra_ThreshInitializeChow106,3234
static inline int Extra_ThreshWeightedSum(int * pW, int nVars, int m) {Extra_ThreshWeightedSum123,3668
static inline int Extra_ThreshCubeWeightedSum1(int * pWofChow, int * pChow,Extra_ThreshCubeWeightedSum1130,3865
static inline int Extra_ThreshCubeWeightedSum2(int * pWofChow, int * pChow,Extra_ThreshCubeWeightedSum2138,4132
static inline int Extra_ThreshCubeWeightedSum3(int * pWofChow, int nChows,Extra_ThreshCubeWeightedSum3147,4400
static inline int Extra_ThreshCubeWeightedSum4(int * pWofChow, int nChows,Extra_ThreshCubeWeightedSum4154,4640
int Extra_ThreshSelectWeights3(word * t, int nVars, int * pW) {Extra_ThreshSelectWeights3161,4880
int Extra_ThreshSelectWeights4(word * t, int nVars, int * pW) {Extra_ThreshSelectWeights4188,5979
int Extra_ThreshSelectWeights5(word * t, int nVars, int * pW) {Extra_ThreshSelectWeights5214,7056
int Extra_ThreshSelectWeights6(word * t, int nVars, int * pW) {Extra_ThreshSelectWeights6241,8285
int Extra_ThreshSelectWeights7(word * t, int nVars, int * pW) {Extra_ThreshSelectWeights7271,9755
int Extra_ThreshSelectWeights8(word * t, int nVars, int * pW) {Extra_ThreshSelectWeights8302,11374
int Extra_ThreshSelectWeights(word * t, int nVars, int * pW) {Extra_ThreshSelectWeights334,13192
void Extra_ThreshIncrementWeights(int nChows, int * pWofChow, int i) {Extra_ThreshIncrementWeights351,13808
void Extra_ThreshDecrementWeights(int nChows, int * pWofChow, int i) {Extra_ThreshDecrementWeights357,13956
void Extra_ThreshPrintInequalities(unsigned long ** pGreaters,Extra_ThreshPrintInequalities363,14104
void Extra_ThreshCreateInequalities(char * pIsop, char * pIsopFneg, int nVars,Extra_ThreshCreateInequalities378,14564
void Extra_ThreshSimplifyInequalities(int nInequalities, int nChows,Extra_ThreshSimplifyInequalities412,15835
int Extra_ThreshAssignWeights(word * t, char * pIsop, char * pIsopFneg,Extra_ThreshAssignWeights434,16694
void Extra_ThreshPrintWeights(int T, int * pW, int nVars) {Extra_ThreshPrintWeights545,20443
int Extra_ThreshCheck(word * t, int nVars, int * pW) {Extra_ThreshCheck570,21048
int Extra_ThreshHeuristic(word * t, int nVars, int * pW) {Extra_ThreshHeuristic592,21648
void Extra_ThreshCheckTest() {Extra_ThreshCheckTest653,23536
void Extra_ThreshHeuristicTest() {Extra_ThreshHeuristicTest677,25185

src/bdd/extrab/extraBddMaxMin.c,671
Extra_zddMaximal(Extra_zddMaximal101,3562
Extra_zddMinimal(Extra_zddMinimal127,4088
Extra_zddMaxUnion(Extra_zddMaxUnion153,4662
Extra_zddMinUnion(Extra_zddMinUnion180,5256
Extra_zddDotProduct(Extra_zddDotProduct208,5919
Extra_zddCrossProduct(Extra_zddCrossProduct236,6597
Extra_zddMaxDotProduct(Extra_zddMaxDotProduct263,7231
extraZddMaximal(extraZddMaximal294,8013
extraZddMinimal(extraZddMinimal373,9788
extraZddMaxUnion(extraZddMaxUnion454,11680
extraZddMinUnion(extraZddMinUnion564,14157
extraZddDotProduct(extraZddDotProduct672,16742
extraZddCrossProduct(extraZddCrossProduct799,19803
extraZddMaxDotProduct(extraZddMaxDotProduct938,23237

src/bdd/extrab/extraBddImage.c,4445
typedef struct Extra_ImageNode_t_  Extra_ImageNode_t;Extra_ImageNode_t39,1239
typedef struct Extra_ImagePart_t_  Extra_ImagePart_t;Extra_ImagePart_t40,1293
typedef struct Extra_ImageVar_t_   Extra_ImageVar_t;Extra_ImageVar_t41,1347
struct Extra_ImageTree_t_Extra_ImageTree_t_43,1401
    Extra_ImageNode_t * pRoot;      // the root of quantification treepRoot45,1429
    Extra_ImageNode_t * pCare;      // the leaf node with the care setpCare46,1500
    DdNode *            bCareSupp;  // the cube to quantify from the carebCareSupp47,1571
    int                 fVerbose;   // the verbosity flagfVerbose48,1645
    int                 nNodesMax;  // the max number of nodes in one iternNodesMax49,1703
    int                 nNodesMaxT; // the overall max number of nodesnNodesMaxT50,1778
    int                 nIter;      // the number of iterations with this treenIter51,1849
struct Extra_ImageNode_t_Extra_ImageNode_t_54,1932
    DdManager *         dd;         // the manager dd56,1960
    DdNode *            bCube;      // the cube to quantifybCube57,2012
    DdNode *            bImage;     // the partial imagebImage58,2072
    Extra_ImageNode_t * pNode1;     // the first branchpNode159,2129
    Extra_ImageNode_t * pNode2;     // the second branchpNode260,2185
    Extra_ImagePart_t * pPart;      // the partition (temporary)pPart61,2242
struct Extra_ImagePart_t_Extra_ImagePart_t_64,2311
    DdNode *            bFunc;      // the partitionbFunc66,2339
    DdNode *            bSupp;      // the support of this partitionbSupp67,2392
    int                 nNodes;     // the number of BDD nodesnNodes68,2461
    short               nSupp;      // the number of support variablesnSupp69,2524
    short               iPart;      // the number of this partitioniPart70,2595
struct Extra_ImageVar_t_Extra_ImageVar_t_73,2667
    int                 iNum;       // the BDD index of this variableiNum75,2694
    DdNode *            bParts;     // the partition numbersbParts76,2764
    int                 nParts;     // the number of partitionsnParts77,2825
Extra_ImageTree_t * Extra_bddImageStart( Extra_bddImageStart156,6657
DdNode * Extra_bddImageCompute( Extra_ImageTree_t * pTree, DdNode * bCare )Extra_bddImageCompute220,8705
void Extra_bddImageTreeDelete( Extra_ImageTree_t * pTree )Extra_bddImageTreeDelete273,10343
DdNode * Extra_bddImageRead( Extra_ImageTree_t * pTree )Extra_bddImageRead292,10839
Extra_ImagePart_t ** Extra_CreateParts( DdManager * dd,Extra_CreateParts316,11669
Extra_ImageVar_t ** Extra_CreateVars( DdManager * dd,Extra_CreateVars355,13181
Extra_ImageNode_t ** Extra_CreateNodes( DdManager * dd, Extra_CreateNodes417,15367
void Extra_DeleteParts_rec( Extra_ImageNode_t * pNode )Extra_DeleteParts_rec521,18745
void Extra_bddImageTreeDelete_rec( Extra_ImageNode_t * pNode )Extra_bddImageTreeDelete_rec545,19414
void Extra_bddImageCompute_rec( Extra_ImageTree_t * pTree, Extra_ImageNode_t * pNode )Extra_bddImageCompute_rec570,20117
int Extra_BuildTreeNode( DdManager * dd, Extra_BuildTreeNode626,21638
Extra_ImageNode_t * Extra_MergeTopNodes(Extra_MergeTopNodes733,25412
Extra_ImageNode_t * Extra_CombineTwoNodes( DdManager * dd, DdNode * bCube,Extra_CombineTwoNodes782,26562
int Extra_FindBestVariable( DdManager * dd,Extra_FindBestVariable836,28368
void Extra_FindBestPartitions( DdManager * dd, DdNode * bParts, Extra_FindBestPartitions873,29382
void Extra_bddImagePrintLatchDependency( Extra_bddImagePrintLatchDependency913,30426
void Extra_bddImagePrintLatchDependencyOne(Extra_bddImagePrintLatchDependencyOne951,31745
void Extra_bddImagePrintTree( Extra_ImageTree_t * pTree )Extra_bddImagePrintTree990,32812
void Extra_bddImagePrintTree_rec( Extra_ImageNode_t * pNode, int Offset )Extra_bddImagePrintTree_rec1007,33263
struct Extra_ImageTree2_t_Extra_ImageTree2_t_1047,34017
    DdManager * dd;dd1049,34046
    DdNode *    bRel;bRel1050,34066
    DdNode *    bCube;bCube1051,34088
    DdNode *    bImage;bImage1052,34111
Extra_ImageTree2_t * Extra_bddImageStart2( Extra_bddImageStart21066,34413
DdNode * Extra_bddImageCompute2( Extra_ImageTree2_t * pTree, DdNode * bCare )Extra_bddImageCompute21108,35693
void Extra_bddImageTreeDelete2( Extra_ImageTree2_t * pTree )Extra_bddImageTreeDelete21128,36238
DdNode * Extra_bddImageRead2( Extra_ImageTree2_t * pTree )Extra_bddImageRead21150,36839

src/bdd/extrab/extraBddUnate.c,929
Extra_UnateInfo_t * Extra_UnateComputeFast( Extra_UnateComputeFast73,3105
DdNode * Extra_zddUnateInfoCompute( Extra_zddUnateInfoCompute105,3962
DdNode * Extra_zddGetSingletonsBoth( Extra_zddGetSingletonsBoth131,4575
Extra_UnateInfo_t *  Extra_UnateInfoAllocate( int nVars )Extra_UnateInfoAllocate155,5183
void Extra_UnateInfoDissolve( Extra_UnateInfo_t * p )Extra_UnateInfoDissolve178,5893
void Extra_UnateInfoPrint( Extra_UnateInfo_t * p )Extra_UnateInfoPrint195,6308
Extra_UnateInfo_t * Extra_UnateInfoCreateFromZdd( DdManager * dd, DdNode * zPairs, DdNode * bSupp )Extra_UnateInfoCreateFromZdd227,7330
Extra_UnateInfo_t * Extra_UnateComputeSlow( DdManager * dd, DdNode * bFunc )Extra_UnateComputeSlow293,9418
int Extra_bddCheckUnateNaive( Extra_bddCheckUnateNaive338,10763
extraZddUnateInfoCompute( extraZddUnateInfoCompute385,12282
DdNode * extraZddGetSingletonsBoth( extraZddGetSingletonsBoth570,18585

src/bdd/extrab/extraBdd.h,2053
#define ABC__misc__extra__extra_bdd_hABC__misc__extra__extra_bdd_h30,984
#define inline inline34,1038
#define     b0 b075,2771
#define     b1 b176,2810
#define     z0 z077,2848
#define     z1 z178,2887
#define     a0 a079,2925
#define     a1 a180,2964
#define hashKey1(hashKey183,3022
#define hashKey2(hashKey286,3080
#define hashKey3(hashKey389,3171
#define hashKey4(hashKey492,3298
#define hashKey5(hashKey596,3462
typedef struct Extra_ImageTree_t_  Extra_ImageTree_t;Extra_ImageTree_t146,6942
typedef struct Extra_ImageTree2_t_  Extra_ImageTree2_t;Extra_ImageTree2_t155,7395
#define ABC_PRB(ABC_PRB206,11208
typedef struct Extra_SymmInfo_t_  Extra_SymmInfo_t;Extra_SymmInfo_t256,14306
struct Extra_SymmInfo_t_ {Extra_SymmInfo_t_257,14358
    int nVars;      // the number of variables in the supportnVars258,14385
    int nVarsMax;   // the number of variables in the DD managernVarsMax259,14447
    int nSymms;     // the number of pair-wise symmetriesnSymms260,14512
    int nNodes;     // the number of nodes in a ZDD (if applicable)nNodes261,14570
    int * pVars;    // the list of all variables present in the supportpVars262,14638
    char ** pSymms; // the symmetry informationpSymms263,14710
typedef struct Extra_UnateVar_t_  Extra_UnateVar_t;Extra_UnateVar_t313,17980
struct Extra_UnateVar_t_ {Extra_UnateVar_t_314,18032
    unsigned    iVar : 30;  // index of the variableiVar315,18059
    unsigned    Pos  :  1;  // 1 if positive unatePos316,18112
    unsigned    Neg  :  1;  // 1 if negative unateNeg317,18163
typedef struct Extra_UnateInfo_t_  Extra_UnateInfo_t;Extra_UnateInfo_t320,18218
struct Extra_UnateInfo_t_ {Extra_UnateInfo_t_321,18272
    int nVars;      // the number of variables in the supportnVars322,18300
    int nVarsMax;   // the number of variables in the DD managernVarsMax323,18362
    int nUnate;     // the number of unate variablesnUnate324,18427
    Extra_UnateVar_t * pVars;    // the array of variables present in the supportpVars325,18480

src/bdd/extrab/extraBddMisc.c,4539
DdNode * Extra_TransferPermute( DdManager * ddSource, DdManager * ddDestination, DdNode * f, int * Permute )Extra_TransferPermute87,3703
DdNode * Extra_TransferLevelByLevel( DdManager * ddSource, DdManager * ddDestination, DdNode * f )Extra_TransferLevelByLevel112,4520
DdNode * Extra_bddRemapUp(Extra_bddRemapUp145,5546
DdNode * Extra_bddMove( Extra_bddMove187,6591
void Extra_StopManager( DdManager * dd )Extra_StopManager223,7340
void Extra_bddPrint( DdManager * dd, DdNode * F )Extra_bddPrint246,7946
void Extra_bddPrintSupport( DdManager * dd, DdNode * F )Extra_bddPrintSupport302,9107
int Extra_bddSuppSize( DdManager * dd, DdNode * bSupp )Extra_bddSuppSize321,9581
int Extra_bddSuppContainVar( DdManager * dd, DdNode * bS, DdNode * bVar )   Extra_bddSuppContainVar346,10144
int Extra_bddSuppOverlapping( DdManager * dd, DdNode * S1, DdNode * S2 )Extra_bddSuppOverlapping365,10641
int Extra_bddSuppDifferentVars( DdManager * dd, DdNode * S1, DdNode * S2, int DiffMax )Extra_bddSuppDifferentVars393,11568
int Extra_bddSuppCheckContainment( DdManager * dd, DdNode * bL, DdNode * bH, DdNode ** bLarge, DdNode ** bSmall )Extra_bddSuppCheckContainment443,13062
Extra_SupportArray(Extra_SupportArray537,15838
Extra_VectorSupportArray( Extra_VectorSupportArray572,16875
DdNode *  Extra_bddFindOneCube( DdManager * dd, DdNode * bF )Extra_bddFindOneCube605,17785
DdNode * Extra_bddGetOneCube( DdManager * dd, DdNode * bFunc )Extra_bddGetOneCube645,18992
DdNode * Extra_bddComputeRangeCube( DdManager * dd, int iStart, int iStop )Extra_bddComputeRangeCube699,20445
DdNode * Extra_bddBitsToCube( DdManager * dd, int Code, int CodeWidth, DdNode ** pbVars, int fMsbFirst )Extra_bddBitsToCube730,21594
DdNode * Extra_bddSupportNegativeCube( DdManager * dd, DdNode * f )Extra_bddSupportNegativeCube764,22779
int Extra_bddIsVar( DdNode * bFunc )Extra_bddIsVar839,25004
DdNode * Extra_bddCreateAnd( DdManager * dd, int nVars )Extra_bddCreateAnd858,25511
DdNode * Extra_bddCreateOr( DdManager * dd, int nVars )Extra_bddCreateOr883,26172
DdNode * Extra_bddCreateExor( DdManager * dd, int nVars )Extra_bddCreateExor908,26839
DdNode * Extra_zddPrimes( DdManager * dd, DdNode * F )Extra_zddPrimes933,27489
void Extra_bddPermuteArray( DdManager * manager, DdNode ** bNodesIn, DdNode ** bNodesOut, int nNodes, int *permut )Extra_bddPermuteArray961,28449
DdNode * Extra_bddComputeCube( DdManager * dd, DdNode ** bXVars, int nVars )Extra_bddComputeCube1001,29678
DdNode * Extra_bddChangePolarity( Extra_bddChangePolarity1029,30333
int Extra_bddVarIsInCube( DdNode * bCube, int iVar )Extra_bddVarIsInCube1056,31048
DdNode * Extra_bddAndPermute( DdManager * ddF, DdNode * bF, DdManager * ddG, DdNode * bG, int * pPermute )Extra_bddAndPermute1090,32459
DdNode * extraBddMove( extraBddMove1128,33765
extraDecomposeCover( extraDecomposeCover1217,36531
static DdNode * extraBddCountCubes( DdManager * dd, DdNode * L, DdNode * U, st__table *table, int * pnCubes, int Limit )extraBddCountCubes1262,37963
int Extra_bddCountCubes( DdManager * dd, DdNode ** pFuncs, int nFuncs, int fMode, int nLimit, int * pGuide )Extra_bddCountCubes1485,44188
DdNode * extraTransferPermute( DdManager * ddS, DdManager * ddD, DdNode * f, int * Permute )extraTransferPermute1535,46421
extraTransferPermuteRecur( extraTransferPermuteRecur1591,48028
ddSupportStep2(ddSupportStep21693,50643
ddClearFlag2(ddClearFlag21724,51318
extraComposeCover( extraComposeCover1754,51915
DdNode* extraZddPrimes( DdManager *dd, DdNode* F )extraZddPrimes1799,53278
cuddBddPermuteRecur( DdManager * manager /* DD manager */ ,cuddBddPermuteRecur1958,58872
DdNode * extraBddChangePolarity( extraBddChangePolarity2041,61295
static int Counter = 0;Counter2146,64419
DdNode * extraBddAndPermute( DdHashTable * table, DdManager * ddF, DdNode * bF, DdManager * ddG, DdNode * bG, int * pPermute )extraBddAndPermute2159,64728
void Extra_TestAndPerm( DdManager * ddF, DdNode * bF, DdNode * bG )Extra_TestAndPerm2250,67853
void Extra_zddDumpPla( DdManager * dd, DdNode * F, int nVars, char * pFileName )Extra_zddDumpPla2307,69678
void Extra_GraphExperiment()Extra_GraphExperiment2347,70837
DdNode * extraZddCombination(extraZddCombination2399,72519
DdNode * Extra_zddCombination( Extra_zddCombination2451,74217
DdNode* Extra_zddRandomSet( Extra_zddRandomSet2480,75166
void Extra_ZddTest()Extra_ZddTest2565,77516
DdNode * extraBddTuples( extraBddTuples2597,78632
DdNode * Extra_bddTuples( Extra_bddTuples2691,81201

src/starter.c,419
#define MAX_COMM_NUM MAX_COMM_NUM35,836
#define ABC_PRT(ABC_PRT38,880
static int nThreadsRunning = 0;nThreadsRunning41,1030
pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;mutex44,1116
char * Abc_UtilStrsav( char * s )   { return s ? strcpy(malloc(strlen(s)+1), s) : NULL;  }Abc_UtilStrsav47,1205
void * Abc_RunThread( void * Command )Abc_RunThread60,1577
int main( int argc, char * argv[] )main97,2644

src/opt/ret/ret_.c,0

src/opt/ret/retIncrem.c,937
int Abc_NtkRetimeIncremental( Abc_Ntk_t * pNtk, int nDelayLim, int fForward, int fMinDelay, int fOneStep, int fUseOldNames, int fVerbose )Abc_NtkRetimeIncremental47,1401
 st__table * Abc_NtkRetimePrepareLatches( Abc_Ntk_t * pNtk )Abc_NtkRetimePrepareLatches109,3575
int Abc_NtkRetimeFinalizeLatches( Abc_Ntk_t * pNtk, st__table * tLatches, int nIdMaxStart, int fUseOldNames )Abc_NtkRetimeFinalizeLatches146,4897
int Abc_NtkRetimeOneWay( Abc_Ntk_t * pNtk, int fForward, int fVerbose )Abc_NtkRetimeOneWay234,8772
int Abc_NtkRetimeNodeIsEnabled( Abc_Obj_t * pObj, int fForward )Abc_NtkRetimeNodeIsEnabled293,10658
void Abc_NtkRetimeNode( Abc_Obj_t * pObj, int fForward, int fInitial )Abc_NtkRetimeNode324,11364
int Abc_NtkRetimeCheckCompatibleLatchFanouts( Abc_Obj_t * pObj )Abc_NtkRetimeCheckCompatibleLatchFanouts406,14128
void Abc_NtkRetimeShareLatches( Abc_Ntk_t * pNtk, int fInitial )Abc_NtkRetimeShareLatches436,14876

src/opt/ret/retInt.h,63
#define ABC__opt__ret__retInt_hABC__opt__ret__retInt_h22,531

src/opt/ret/retLvalue.c,1840
enum { ABC_RET_UPDATE_FAIL, ABC_RET_UPDATE_NO, ABC_RET_UPDATE_YES };ABC_RET_UPDATE_FAIL31,840
enum { ABC_RET_UPDATE_FAIL, ABC_RET_UPDATE_NO, ABC_RET_UPDATE_YES };ABC_RET_UPDATE_NO31,840
enum { ABC_RET_UPDATE_FAIL, ABC_RET_UPDATE_NO, ABC_RET_UPDATE_YES };ABC_RET_UPDATE_YES31,840
static inline int  Abc_NodeComputeLag( int LValue, int Fi )          { return (LValue + (1<<16)*Fi)/Fi - (1<<16) - (int)(LValue % Fi == 0);     }Abc_NodeComputeLag42,1676
static inline int  Abc_NodeGetLValue( Abc_Obj_t * pNode )            { return (int)(ABC_PTRUINT_T)pNode->pCopy;        }Abc_NodeGetLValue43,1822
static inline void Abc_NodeSetLValue( Abc_Obj_t * pNode, int Value ) { pNode->pCopy = (Abc_Obj_t *)(ABC_PTRUINT_T)Value;    }Abc_NodeSetLValue44,1943
int Abc_NtkRetimeLValue( Abc_Ntk_t * pNtk, int nIterLimit, int fVerbose )Abc_NtkRetimeLValue61,2560
Vec_Int_t * Abc_NtkRetimeGetLags( Abc_Ntk_t * pNtk, int nIterLimit, int fVerbose )Abc_NtkRetimeGetLags91,3489
int Abc_NtkRetimeSearch_rec( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes, Vec_Ptr_t * vLatches, int FiMin, int FiMax, int nMaxIters, int fVerbose )Abc_NtkRetimeSearch_rec172,6189
int Abc_NtkRetimeForPeriod( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes, Vec_Ptr_t * vLatches, int Fi, int nMaxIters, int fVerbose )Abc_NtkRetimeForPeriod196,7112
int Abc_NtkRetimeUpdateLValue( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodes, Vec_Ptr_t * vLatches, int Fi )Abc_NtkRetimeUpdateLValue249,8899
int Abc_NtkRetimePosOverLimit( Abc_Ntk_t * pNtk, int Fi )Abc_NtkRetimePosOverLimit288,10138
void Abc_ManCollectLatches_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vLatches )Abc_ManCollectLatches_rec309,10644
Vec_Ptr_t * Abc_ManCollectLatches( Abc_Ntk_t * pNtk )Abc_ManCollectLatches338,11531
int Abc_NtkRetimeUsingLags( Abc_Ntk_t * pNtk, Vec_Int_t * vLags, int fVerbose )Abc_NtkRetimeUsingLags362,12210

src/opt/ret/retFlow.c,2159
static inline int         Abc_ObjSetPath( Abc_Obj_t * pObj, Abc_Obj_t * pNext ) { pObj->pCopy = pNext; return 1;   }Abc_ObjSetPath30,805
static inline Abc_Obj_t * Abc_ObjGetPath( Abc_Obj_t * pObj )                    { return pObj->pCopy;              }Abc_ObjGetPath31,922
static inline Abc_Obj_t * Abc_ObjGetFanoutPath( Abc_Obj_t * pObj ) Abc_ObjGetFanoutPath32,1039
static inline Abc_Obj_t * Abc_ObjGetFaninPath( Abc_Obj_t * pObj ) Abc_ObjGetFaninPath42,1322
static inline Abc_Obj_t * Abc_ObjGetPredecessorBwd( Abc_Obj_t * pObj ) Abc_ObjGetPredecessorBwd52,1599
static inline Abc_Obj_t * Abc_ObjGetPredecessorFwd( Abc_Obj_t * pObj ) Abc_ObjGetPredecessorFwd64,1954
void Abc_NtkMaxFlowTest( Abc_Ntk_t * pNtk )Abc_NtkMaxFlowTest104,3676
Vec_Ptr_t * Abc_NtkMaxFlow( Abc_Ntk_t * pNtk, int fForward, int fVerbose )Abc_NtkMaxFlow143,4724
int Abc_NtkMaxFlowBwdPath_rec( Abc_Obj_t * pObj )Abc_NtkMaxFlowBwdPath_rec252,8242
int Abc_NtkMaxFlowFwdPath_rec( Abc_Obj_t * pObj )Abc_NtkMaxFlowFwdPath_rec304,10101
int Abc_NtkMaxFlowFwdPath3_rec( Abc_Obj_t * pObj, Abc_Obj_t * pPrev, int fFanin )Abc_NtkMaxFlowFwdPath3_rec357,11961
int Abc_NtkMaxFlowBwdPath2_rec( Abc_Obj_t * pObj )Abc_NtkMaxFlowBwdPath2_rec397,13368
int Abc_NtkMaxFlowFwdPath2_rec( Abc_Obj_t * pObj )Abc_NtkMaxFlowFwdPath2_rec442,14830
Vec_Ptr_t * Abc_NtkMaxFlowMinCut( Abc_Ntk_t * pNtk, int fForward )Abc_NtkMaxFlowMinCut487,16222
void Abc_NtkMaxFlowMarkCut_rec( Abc_Obj_t * pObj )Abc_NtkMaxFlowMarkCut_rec520,17176
void Abc_NtkMaxFlowCollectCut_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vNodes )Abc_NtkMaxFlowCollectCut_rec542,17708
void Abc_NtkMaxFlowMinCutUpdate( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMinCut, int fForward )Abc_NtkMaxFlowMinCutUpdate570,18463
int Abc_NtkMaxFlowVerifyCut_rec( Abc_Obj_t * pObj, int fForward )Abc_NtkMaxFlowVerifyCut_rec627,20191
int Abc_NtkMaxFlowVerifyCut( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMinCut, int fForward )Abc_NtkMaxFlowVerifyCut668,21223
void Abc_NtkMaxFlowPrintFlow( Abc_Ntk_t * pNtk, int fForward )Abc_NtkMaxFlowPrintFlow713,22420
void Abc_NtkMaxFlowPrintCut( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMinCut )Abc_NtkMaxFlowPrintCut767,24285

src/opt/ret/retInit.c,1111
Vec_Int_t * Abc_NtkRetimeInitialValues( Abc_Ntk_t * pNtkCone, Vec_Int_t * vValues, int fVerbose )Abc_NtkRetimeInitialValues47,1388
int Abc_ObjSopSimulate( Abc_Obj_t * pObj )Abc_ObjSopSimulate93,3287
int Abc_NtkRetimeVerifyModel( Abc_Ntk_t * pNtkCone, Vec_Int_t * vValues, int * pModel )Abc_NtkRetimeVerifyModel133,4409
void Abc_NtkRetimeTranferToCopy( Abc_Ntk_t * pNtk )Abc_NtkRetimeTranferToCopy168,5628
void Abc_NtkRetimeTranferFromCopy( Abc_Ntk_t * pNtk )Abc_NtkRetimeTranferFromCopy188,6146
Vec_Int_t * Abc_NtkRetimeCollectLatchValues( Abc_Ntk_t * pNtk )Abc_NtkRetimeCollectLatchValues208,6680
void Abc_NtkRetimeInsertLatchValues( Abc_Ntk_t * pNtk, Vec_Int_t * vValues )Abc_NtkRetimeInsertLatchValues231,7290
Abc_Ntk_t * Abc_NtkRetimeBackwardInitialStart( Abc_Ntk_t * pNtk )Abc_NtkRetimeBackwardInitialStart254,8072
void Abc_NtkRetimeBackwardInitialFinish( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkNew, Vec_Int_t * vValuesOld, int fVerbose )Abc_NtkRetimeBackwardInitialFinish279,8802
void Abc_NtkCycleInitStateSop( Abc_Ntk_t * pNtk, int nFrames, int fVerbose )Abc_NtkCycleInitStateSop314,10093

src/opt/ret/retArea.c,1204
int Abc_NtkRetimeMinArea( Abc_Ntk_t * pNtk, int fForwardOnly, int fBackwardOnly, int fUseOldNames, int fVerbose )Abc_NtkRetimeMinArea53,1877
Abc_Ntk_t * Abc_NtkRetimeMinAreaOne( Abc_Ntk_t * pNtk, int fForward, int fUseOldNames, int fVerbose )Abc_NtkRetimeMinAreaOne111,4053
void Abc_NtkMarkCone_rec( Abc_Obj_t * pObj, int fForward )Abc_NtkMarkCone_rec147,5236
void Abc_NtkUnmarkCone_rec( Abc_Obj_t * pObj, int fForward )Abc_NtkUnmarkCone_rec177,5906
void Abc_NtkRetimeMinAreaPrepare( Abc_Ntk_t * pNtk, int fForward )Abc_NtkRetimeMinAreaPrepare207,6622
int Abc_NtkRetimeMinAreaInitValues_rec( Abc_Obj_t * pObj )Abc_NtkRetimeMinAreaInitValues_rec264,8315
void Abc_NtkRetimeMinAreaInitValues( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMinCut )Abc_NtkRetimeMinAreaInitValues299,9427
Abc_Obj_t * Abc_NtkRetimeMinAreaConstructNtk_rec( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj )Abc_NtkRetimeMinAreaConstructNtk_rec329,10327
Abc_Ntk_t * Abc_NtkRetimeMinAreaConstructNtk( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMinCut )Abc_NtkRetimeMinAreaConstructNtk365,11440
void Abc_NtkRetimeMinAreaUpdateLatches( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMinCut, int fForward, int fUseOldNames )Abc_NtkRetimeMinAreaUpdateLatches411,13039

src/opt/ret/retDelay.c,534
int Abc_NtkRetimeMinDelay( Abc_Ntk_t * pNtk, Abc_Ntk_t * pNtkCopy, int nDelayLim, int nIterLimit, int fForward, int fVerbose )Abc_NtkRetimeMinDelay50,1718
int Abc_NtkRetimeMinDelayTry( Abc_Ntk_t * pNtk, int nDelayLim, int fForward, int fInitial, int nIterLimit, int * pIterBest, int fVerbose )Abc_NtkRetimeMinDelayTry76,2676
int Abc_NtkRetimeTiming( Abc_Ntk_t * pNtk, int fForward, Vec_Ptr_t * vCritical )Abc_NtkRetimeTiming172,6228
int Abc_NtkRetimeTiming_rec( Abc_Obj_t * pObj, int fForward )Abc_NtkRetimeTiming_rec277,9468

src/opt/ret/retCore.c,281
abctime timeRetime = 0;timeRetime30,775
int Abc_NtkRetime( Abc_Ntk_t * pNtk, int Mode, int nDelayLim, int fForwardOnly, int fBackwardOnly, int fOneStep, int fUseOldNames, int fVerbose )Abc_NtkRetime47,1281
int Abc_NtkRetimeDebug( Abc_Ntk_t * pNtk )Abc_NtkRetimeDebug118,4055

src/opt/cgt/cgtDecide.c,885
void Cgt_ManCollectFanoutPos_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Ptr_t * vFanout )Cgt_ManCollectFanoutPos_rec52,1775
void Cgt_ManCollectFanoutPos( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Ptr_t * vFanout )Cgt_ManCollectFanoutPos79,2515
int Cgt_ManCheckGateComplete( Aig_Man_t * pAig, Vec_Vec_t * vGatesAll, Aig_Obj_t * pGate, Vec_Ptr_t * vFanout )Cgt_ManCheckGateComplete97,3014
Vec_Ptr_t * Cgt_ManCompleteGates( Aig_Man_t * pAig, Vec_Vec_t * vGatesAll, int nOdcMax, int fVerbose )Cgt_ManCompleteGates124,3778
float Cgt_ManComputeCoverage( Aig_Man_t * pAig, Vec_Vec_t * vGates )Cgt_ManComputeCoverage158,4827
Vec_Vec_t * Cgt_ManDecideSimple( Aig_Man_t * pAig, Vec_Vec_t * vGatesAll, int nOdcMax, int fVerbose )Cgt_ManDecideSimple184,5685
Vec_Vec_t * Cgt_ManDecideArea( Aig_Man_t * pAig, Vec_Vec_t * vGatesAll, int nOdcMax, int fVerbose )Cgt_ManDecideArea255,8128

src/opt/cgt/cgtMan.c,284
Cgt_Man_t * Cgt_ManCreate( Aig_Man_t * pAig, Aig_Man_t * pCare, Cgt_Par_t * pPars )Cgt_ManCreate45,1260
void Cgt_ManClean( Cgt_Man_t * p )Cgt_ManClean86,2496
void Cgt_ManPrintStats( Cgt_Man_t * p )Cgt_ManPrintStats122,3163
void Cgt_ManStop( Cgt_Man_t * p )Cgt_ManStop154,4509

src/opt/cgt/cgtAig.c,2172
void Cgt_ManDetectCandidates_rec( Aig_Man_t * pAig, Vec_Int_t * vUseful, Aig_Obj_t * pObj, int nLevelMax, Vec_Ptr_t * vCands )Cgt_ManDetectCandidates_rec45,1283
void Cgt_ManDetectCandidates( Aig_Man_t * pAig, Vec_Int_t * vUseful, Aig_Obj_t * pObj, int nLevelMax, Vec_Ptr_t * vCands )Cgt_ManDetectCandidates70,2170
void Cgt_ManDetectFanout_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, int nOdcMax, Vec_Ptr_t * vFanout )Cgt_ManDetectFanout_rec90,2763
void Cgt_ManDetectFanout( Aig_Man_t * pAig, Aig_Obj_t * pObj, int nOdcMax, Vec_Ptr_t * vFanout )Cgt_ManDetectFanout115,3539
void Cgt_ManCollectVisited_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Ptr_t * vVisited )Cgt_ManCollectVisited_rec151,4736
void Cgt_ManCollectVisited( Aig_Man_t * pAig, Vec_Ptr_t * vFanout, Vec_Ptr_t * vVisited )Cgt_ManCollectVisited175,5472
static inline Aig_Obj_t *  Aig_ObjChild0CopyVec( Vec_Ptr_t * vCopy, Aig_Obj_t * pObj )  Aig_ObjChild0CopyVec196,6016
static inline Aig_Obj_t *  Aig_ObjChild1CopyVec( Vec_Ptr_t * vCopy, Aig_Obj_t * pObj )  Aig_ObjChild1CopyVec198,6209
Aig_Obj_t * Cgt_ManConstructCareCondition( Cgt_Man_t * p, Aig_Man_t * pNew, Aig_Obj_t * pObjLo, Vec_Ptr_t * vCopy0, Vec_Ptr_t * vCopy1 )Cgt_ManConstructCareCondition212,6668
Aig_Man_t * Cgt_ManDeriveAigForGating( Cgt_Man_t * p )Cgt_ManDeriveAigForGating266,8951
Aig_Obj_t * Cgt_ManConstructCare_rec( Aig_Man_t * pCare, Aig_Obj_t * pObj, Aig_Man_t * pNew )Cgt_ManConstructCare_rec338,11836
void Cgt_ManConstructCare( Aig_Man_t * pNew, Aig_Man_t * pCare, Vec_Vec_t * vSuppsInv, Vec_Ptr_t * vLeaves )Cgt_ManConstructCare368,12947
Aig_Obj_t * Cgt_ManDupPartition_rec( Aig_Man_t * pNew, Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Ptr_t * vLeaves )Cgt_ManDupPartition_rec414,14513
Aig_Man_t * Cgt_ManDupPartition( Aig_Man_t * pFrame, int nVarsMin, int nFlopsMin, int iStart, Aig_Man_t * pCare, Vec_Vec_t * vSuppsInv, int * pnOutputs )Cgt_ManDupPartition441,15469
Aig_Obj_t * Cgt_ManBuildClockGate( Aig_Man_t * pNew, Vec_Ptr_t * vGates )Cgt_ManBuildClockGate496,17501
Aig_Man_t * Cgt_ManDeriveGatedAig( Aig_Man_t * pAig, Vec_Vec_t * vGates, int fReduce, int * pnUsedNodes )Cgt_ManDeriveGatedAig524,18394

src/opt/cgt/cgt.h,980
#define ABC__aig__cgt__cgt_hABC__aig__cgt__cgt_h22,527
typedef struct Cgt_Par_t_ Cgt_Par_t;Cgt_Par_t48,1437
struct Cgt_Par_t_Cgt_Par_t_49,1474
    int          nLevelMax;      // the max number of levels to look for clock-gatesnLevelMax51,1494
    int          nCandMax;       // the max number of candidates at each nodenCandMax52,1579
    int          nOdcMax;        // the max number of ODC levels to considernOdcMax53,1657
    int          nConfMax;       // the max number of conflicts at a nodenConfMax54,1734
    int          nVarsMin;       // the min number of variables to recycle the SAT solvernVarsMin55,1808
    int          nFlopsMin;      // the min number of flops needed to recycle the SAT solvernFlopsMin56,1898
    int          fAreaOnly;      // derive clock gating to minimize areafAreaOnly57,1991
    int          fVerbose;       // verbosity flagfVerbose58,2064
    int          fVeryVerbose;   // verbosity flagfVeryVerbose59,2115

src/opt/cgt/cgtCore.c,858
void Cgt_SetDefaultParams( Cgt_Par_t * p )Cgt_SetDefaultParams46,1270
int Cgt_SimulationFilter( Cgt_Man_t * p, Aig_Obj_t * pCandPart, Aig_Obj_t * pMiterPart )Cgt_SimulationFilter70,2227
void Cgt_SimulationRecord( Cgt_Man_t * p )Cgt_SimulationRecord103,3217
void Cgt_ClockGatingRangeCheck( Cgt_Man_t * p, int iStart, int nOutputs )Cgt_ClockGatingRangeCheck130,3979
int Cgt_ClockGatingRange( Cgt_Man_t * p, int iStart )Cgt_ClockGatingRange201,6607
Vec_Vec_t * Cgt_ClockGatingCandidates( Aig_Man_t * pAig, Aig_Man_t * pCare, Cgt_Par_t * pPars, Vec_Int_t * vUseful )Cgt_ClockGatingCandidates245,8239
Vec_Vec_t * Cgt_ClockGatingInt( Aig_Man_t * pAig, Aig_Man_t * pCare, Cgt_Par_t * pPars, Vec_Int_t * vUseful )Cgt_ClockGatingInt287,9572
Aig_Man_t * Cgt_ClockGating( Aig_Man_t * pAig, Aig_Man_t * pCare, Cgt_Par_t * pPars )Cgt_ClockGating298,10061

src/opt/cgt/cgtInt.h,2464
#define ABC__aig__cgt__cgtInt_hABC__aig__cgt__cgtInt_h22,536
typedef struct Cgt_Man_t_ Cgt_Man_t;Cgt_Man_t47,1363
struct Cgt_Man_t_Cgt_Man_t_48,1400
    Cgt_Par_t *  pPars;          // user's parameterspPars51,1439
    Aig_Man_t *  pAig;           // user's AIG managerpAig52,1493
    Vec_Int_t *  vUseful;        // user's candidate nodesvUseful53,1548
    Aig_Man_t *  pCare;          // constraint conespCare55,1633
    Vec_Vec_t *  vSuppsInv;      // inverse support of the constraintsvSuppsInv56,1686
    Vec_Vec_t *  vGatesAll;      // the computed clock-gatesvGatesAll58,1787
    Vec_Ptr_t *  vGates;         // the selected clock-gatesvGates59,1848
    Aig_Man_t *  pFrame;         // clock gate AIG managerpFrame61,1930
    Vec_Ptr_t *  vFanout;        // temporary storage for fanoutsvFanout62,1989
    Vec_Ptr_t *  vVisited;       // temporary storage for visited nodesvVisited63,2055
    Aig_Man_t *  pPart;          // partitionpPart65,2146
    Cnf_Dat_t *  pCnf;           // CNF of the partitionpCnf66,2192
    sat_solver * pSat;           // SAT solver pSat67,2249
    Vec_Ptr_t *  vPatts;         // simulation patternsvPatts68,2297
    int          nPatts;         // the number of patterns accumulatednPatts69,2353
    int          nPattWords;     // the number of pattern wordsnPattWords70,2424
    int          nRecycles;      // recycles nRecycles72,2506
    int          nCalls;         // total callsnCalls73,2552
    int          nCallsSat;      // satisfiable callsnCallsSat74,2600
    int          nCallsUnsat;    // unsatisfiable calls  nCallsUnsat75,2654
    int          nCallsUndec;    // undecided callsnCallsUndec76,2712
    int          nCallsFiltered; // filtered out callsnCallsFiltered77,2764
    abctime      timeAig;        // constructing AIGtimeAig78,2819
    abctime      timePrepare;    // partitioning and SAT solvingtimePrepare79,2872
    abctime      timeSat;        // total runtimetimeSat80,2937
    abctime      timeSatSat;     // satisfiable runtime timeSatSat81,2987
    abctime      timeSatUnsat;   // unsatisfiable runtime timeSatUnsat82,3044
    abctime      timeSatUndec;   // undecided runtimetimeSatUndec83,3103
    abctime      timeDecision;   // making decision about what gates to usetimeDecision84,3157
    abctime      timeOther;      // other runtimetimeOther85,3233
    abctime      timeTotal;      // total runtimetimeTotal86,3283

src/opt/cgt/cgtSat.c,110
int Cgt_CheckImplication( Cgt_Man_t * p, Aig_Obj_t * pGate, Aig_Obj_t * pMiter )Cgt_CheckImplication46,1335

src/opt/lpk/lpkCut.c,1242
CloudNode * Lpk_CutTruthBdd_rec( CloudManager * dd, Hop_Man_t * pMan, Hop_Obj_t * pObj, int nVars )Lpk_CutTruthBdd_rec46,1289
CloudNode * Lpk_CutTruthBdd( Lpk_Man_t * p, Lpk_Cut_t * pCut )Lpk_CutTruthBdd84,2544
unsigned * Lpk_CutTruth_rec( Hop_Man_t * pMan, Hop_Obj_t * pObj, int nVars, Vec_Ptr_t * vTtNodes, int * piCount )Lpk_CutTruth_rec138,4384
unsigned * Lpk_CutTruth( Lpk_Man_t * p, Lpk_Cut_t * pCut, int fInv )Lpk_CutTruth175,5669
void Lpk_NodeRecordImpact( Lpk_Man_t * p )Lpk_NodeRecordImpact233,7819
int Lpk_NodeCutsCheckDsd( Lpk_Man_t * p, Lpk_Cut_t * pCut )Lpk_NodeCutsCheckDsd275,9076
static inline int Lpk_NodeCutsOneDominance( Lpk_Cut_t * pDom, Lpk_Cut_t * pCut )Lpk_NodeCutsOneDominance336,10823
int Lpk_NodeCutsOneFilter( Lpk_Cut_t * pCuts, int nCuts, Lpk_Cut_t * pCutNew )Lpk_NodeCutsOneFilter362,11563
void Lpk_NodePrintCut( Lpk_Man_t * p, Lpk_Cut_t * pCut, int fLeavesOnly )Lpk_NodePrintCut422,13497
void Lpk_NodeCutSignature( Lpk_Cut_t * pCut )Lpk_NodeCutSignature453,14251
void Lpk_NodeCutsOne( Lpk_Man_t * p, Lpk_Cut_t * pCut, int Node )Lpk_NodeCutsOne477,14860
int Lpk_CountSupp( Abc_Ntk_t * p, Vec_Ptr_t * vNodes )Lpk_CountSupp588,18489
int Lpk_NodeCuts( Lpk_Man_t * p )Lpk_NodeCuts619,19311

src/opt/lpk/lpkAbcMux.c,185
Lpk_Res_t * Lpk_MuxAnalize( Lpk_Man_t * pMan, Lpk_Fun_t * p )Lpk_MuxAnalize45,1384
Lpk_Fun_t * Lpk_MuxSplit( Lpk_Man_t * pMan, Lpk_Fun_t * p, int Var, int Pol )Lpk_MuxSplit164,6823

src/opt/lpk/lpkAbcDsd.c,1302
int Lpk_FunComputeMinSuppSizeVar( Lpk_Fun_t * p, unsigned ** ppTruths, int nTruths, unsigned ** ppCofs, unsigned uNonDecSupp )Lpk_FunComputeMinSuppSizeVar47,1504
unsigned Lpk_ComputeBoundSets_rec( Kit_DsdNtk_t * p, int iLit, Vec_Int_t * vSets, int nSizeMax )Lpk_ComputeBoundSets_rec108,3721
Vec_Int_t * Lpk_ComputeBoundSets( Kit_DsdNtk_t * p, int nSizeMax )Lpk_ComputeBoundSets162,5509
static void Lpk_PrintSetOne( int uSupport )Lpk_PrintSetOne204,6794
static void Lpk_PrintSets( Vec_Int_t * vSets )Lpk_PrintSets223,7237
Vec_Int_t * Lpk_MergeBoundSets( Vec_Int_t * vSets0, Vec_Int_t * vSets1, int nSizeMax )Lpk_MergeBoundSets247,7778
void Lpk_FunCompareBoundSets( Lpk_Fun_t * p, Vec_Int_t * vBSets, int nCofDepth, unsigned uNonDecSupp, unsigned uLateArrSupp, Lpk_Res_t * pRes )Lpk_FunCompareBoundSets276,8570
unsigned Lpk_DsdLateArriving( Lpk_Fun_t * p )Lpk_DsdLateArriving352,11032
int Lpk_DsdAnalizeOne( Lpk_Fun_t * p, unsigned * ppTruths[5][16], Kit_DsdNtk_t * pNtks[], char pCofVars[], int nCofDepth, Lpk_Res_t * pRes )Lpk_DsdAnalizeOne372,11556
Lpk_Res_t * Lpk_DsdAnalize( Lpk_Man_t * pMan, Lpk_Fun_t * p, int nShared )Lpk_DsdAnalize452,14404
Lpk_Fun_t * Lpk_DsdSplit( Lpk_Man_t * pMan, Lpk_Fun_t * p, char * pCofVars, int nCofVars, unsigned uBoundSet )Lpk_DsdSplit564,18141

src/opt/lpk/lpkMan.c,121
Lpk_Man_t * Lpk_ManStart( Lpk_Par_t * pPars )Lpk_ManStart45,1224
void Lpk_ManStop( Lpk_Man_t * p )Lpk_ManStop95,3043

src/opt/lpk/lpkMulti.c,681
void Lpk_CreateVarOrder( Kit_DsdNtk_t * pNtk, char pTable[][16] )Lpk_CreateVarOrder45,1314
void Lpk_CreateCommonOrder( char pTable[][16], int piCofVar[], int nCBars, int pPrios[], int nVars, int fVerbose )Lpk_CreateCommonOrder87,2560
int Lpk_FindHighest( Kit_DsdNtk_t ** ppNtks, int * piLits, int nSize, int * pPrio, int * pDecision )Lpk_FindHighest176,4996
If_Obj_t * Lpk_MapTreeMulti_rec( Lpk_Man_t * p, Kit_DsdNtk_t ** ppNtks, int * piLits, int * piCofVar, int nCBars, If_Obj_t ** ppLeaves, int nLeaves, int * pPrio )Lpk_MapTreeMulti_rec272,7867
If_Obj_t * Lpk_MapTreeMulti( Lpk_Man_t * p, unsigned * pTruth, int nVars, If_Obj_t ** ppLeaves )Lpk_MapTreeMulti347,10291

src/opt/lpk/lpkAbcUtil.c,638
Lpk_Fun_t * Lpk_FunAlloc( int nVars )Lpk_FunAlloc45,1298
void Lpk_FunFree( Lpk_Fun_t * p )Lpk_FunFree64,1775
Lpk_Fun_t * Lpk_FunCreate( Abc_Ntk_t * pNtk, Vec_Ptr_t * vLeaves, unsigned * pTruth, int nLutK, int AreaLim, int DelayLim )Lpk_FunCreate80,2097
Lpk_Fun_t * Lpk_FunDup( Lpk_Fun_t * p, unsigned * pTruth )Lpk_FunDup114,3078
int Lpk_FunSuppMinimize( Lpk_Fun_t * p )Lpk_FunSuppMinimize143,3936
void Lpk_FunComputeCofSupps( Lpk_Fun_t * p )Lpk_FunComputeCofSupps186,5067
int Lpk_SuppDelay( unsigned uSupp, int * pDelays )Lpk_SuppDelay215,5961
int Lpk_SuppToVars( unsigned uBoundSet, char * pVars )Lpk_SuppToVars235,6428

src/opt/lpk/lpkSets.c,1202
typedef struct Lpk_Set_t_ Lpk_Set_t;Lpk_Set_t30,772
struct Lpk_Set_t_Lpk_Set_t_31,809
    char         iVar;        // the cofactoring variableiVar33,829
    char         Over;        // the overlap in supportsOver34,887
    char         SRed;        // the support reductionSRed35,944
    char         Size;        // the size of the boundsetSize36,999
    unsigned     uSubset0;    // the first subset (with removed)uSubset037,1057
    unsigned     uSubset1;    // the second subset (with removed)uSubset138,1122
unsigned Lpk_ComputeSets_rec( Kit_DsdNtk_t * p, int iLit, Vec_Int_t * vSets )Lpk_ComputeSets_rec56,1688
unsigned Lpk_ComputeSets( Kit_DsdNtk_t * p, Vec_Int_t * vSets )Lpk_ComputeSets108,3305
static void Lpk_PrintSetOne( int uSupport )Lpk_PrintSetOne146,4387
static void Lpk_PrintSets( Vec_Int_t * vSets )Lpk_PrintSets165,4830
void Lpk_ComposeSets( Vec_Int_t * vSets0, Vec_Int_t * vSets1, int nVars, int iCofVar,Lpk_ComposeSets189,5394
void Lpk_MapSuppPrintSet( Lpk_Set_t * pSet, int i )Lpk_MapSuppPrintSet297,9097
unsigned Lpk_MapSuppRedDecSelect( Lpk_Man_t * p, unsigned * pTruth, int nVars, int * piVar, int * piVarReused )Lpk_MapSuppRedDecSelect323,9795

src/opt/lpk/lpkAbcDec.c,742
Abc_Obj_t * Lpk_ImplementFun( Lpk_Man_t * pMan, Abc_Ntk_t * pNtk, Vec_Ptr_t * vLeaves, Lpk_Fun_t * p )Lpk_ImplementFun45,1322
Abc_Obj_t * Lpk_Implement_rec( Lpk_Man_t * pMan, Abc_Ntk_t * pNtk, Vec_Ptr_t * vLeaves, Lpk_Fun_t * pFun )Lpk_Implement_rec88,2784
Abc_Obj_t * Lpk_Implement( Lpk_Man_t * pMan, Abc_Ntk_t * pNtk, Vec_Ptr_t * vLeaves, int nLeavesOld )Lpk_Implement120,3872
int Lpk_Decompose_rec( Lpk_Man_t * pMan, Lpk_Fun_t * p )Lpk_Decompose_rec147,4911
void Lpk_DecomposeClean( Vec_Ptr_t * vLeaves, int nLeavesOld )Lpk_DecomposeClean238,8124
Abc_Obj_t * Lpk_Decompose( Lpk_Man_t * p, Abc_Ntk_t * pNtk, Vec_Ptr_t * vLeaves, unsigned * pTruth, unsigned * puSupps, int nLutK, int AreaLim, int DelayLim )Lpk_Decompose258,8665

src/opt/lpk/lpk_.c,0

src/opt/lpk/lpkMux.c,508
int Lpk_MapTreeBestCofVar( Lpk_Man_t * p, unsigned * pTruth, int nVars, unsigned * pCof0, unsigned * pCof1 )Lpk_MapTreeBestCofVar45,1259
If_Obj_t * Lpk_MapTreeMux_rec( Lpk_Man_t * p, unsigned * pTruth, int nVars, If_Obj_t ** ppLeaves )Lpk_MapTreeMux_rec89,2785
If_Obj_t * Lpk_MapSuppRedDec_rec( Lpk_Man_t * p, unsigned * pTruth, int nVars, If_Obj_t ** ppLeaves )Lpk_MapSuppRedDec_rec133,4359
void Lpk_TryDec( word * pTruth, int nVars )Lpk_TryDec257,9521
void Lpk_TryDecTest()Lpk_TryDecTest269,9982

src/opt/lpk/lpkMap.c,360
If_Obj_t * Lpk_MapPrimeInternal( If_Man_t * pIfMan, Kit_Graph_t * pGraph )Lpk_MapPrimeInternal45,1272
If_Obj_t * Lpk_MapPrime( Lpk_Man_t * p, unsigned * pTruth, int nVars, If_Obj_t ** ppLeaves )Lpk_MapPrime79,2523
If_Obj_t * Lpk_MapTree_rec( Lpk_Man_t * p, Kit_DsdNtk_t * pNtk, If_Obj_t ** ppLeaves, int iLit, If_Obj_t * pResult )Lpk_MapTree_rec110,3398

src/opt/lpk/lpkCore.c,839
Abc_Ntk_t * Abc_NtkDecFromTruth( word * pTruth, int nVars, int nLutSize )Abc_NtkDecFromTruth47,1310
Abc_Obj_t * Abc_NtkLutMinDecompose( Abc_Ntk_t * pNtk, Vec_Ptr_t * vLeaves, word * pTruth, int nLutSize, int Required )Abc_NtkLutMinDecompose67,2112
void Lpk_IfManStart( Lpk_Man_t * p )Lpk_IfManStart123,3958
int Lpk_NodeHasChanged( Lpk_Man_t * p, int iNode )Lpk_NodeHasChanged172,5437
int Lpk_ExploreCut( Lpk_Man_t * p, Lpk_Cut_t * pCut, Kit_DsdNtk_t * pNtk )Lpk_ExploreCut205,6363
int Lpk_ResynthesizeNode( Lpk_Man_t * p )Lpk_ResynthesizeNode315,10339
void Lpk_ComputeSupports( Lpk_Man_t * p, Lpk_Cut_t * pCut, unsigned * pTruth )Lpk_ComputeSupports419,13879
int Lpk_ResynthesizeNodeNew( Lpk_Man_t * p )Lpk_ResynthesizeNodeNew443,14768
int Lpk_Resynthesize( Abc_Ntk_t * pNtk, Lpk_Par_t * pPars )Lpk_Resynthesize584,20065

src/opt/lpk/lpkInt.h,7950
#define ABC__opt__lpk__lpkInt_hABC__opt__lpk__lpkInt_h22,557
#define LPK_SIZE_MAX LPK_SIZE_MAX47,1376
#define LPK_CUTS_MAX LPK_CUTS_MAX48,1451
typedef struct Lpk_Man_t_ Lpk_Man_t;Lpk_Man_t50,1532
typedef struct Lpk_Cut_t_ Lpk_Cut_t;Lpk_Cut_t51,1569
struct Lpk_Cut_t_Lpk_Cut_t_53,1607
    unsigned     nLeaves       : 6;     // (L) the number of leavesnLeaves55,1627
    unsigned     nNodes        : 6;     // (M) the number of nodesnNodes56,1695
    unsigned     nNodesDup     : 6;     // (Q) nodes outside of MFFCnNodesDup57,1762
    unsigned     nLuts         : 6;     // (N) the number of LUTs to trynLuts58,1831
    unsigned     unused        : 6;     // unusedunused59,1904
    unsigned     fHasDsd       : 1;     // set to 1 if the cut has structural DSD (and so cannot be used)fHasDsd60,1954
    unsigned     fMark         : 1;     // multipurpose markfMark61,2060
    unsigned     uSign[2];              // the signatureuSign62,2121
    float        Weight;                // the weight of the cut: (M - Q)/N(V)   (the larger the better)Weight63,2178
    int          Gain;                  // the gain achieved using this cutGain64,2283
    int          pLeaves[LPK_SIZE_MAX]; // the leaves of the cutpLeaves65,2359
    int          pNodes[LPK_SIZE_MAX];  // the nodes of the cutpNodes66,2424
struct Lpk_Man_t_Lpk_Man_t_69,2492
    Lpk_Par_t *  pPars;                 // the set of parameterspPars72,2530
    Abc_Ntk_t *  pNtk;                  // the networkpNtk74,2625
    Abc_Obj_t *  pObj;                  // the node to resynthesize pObj75,2680
    int          nMffc;                 // the size of MFFC of the nodenMffc77,2775
    int          nCuts;                 // the total number of cuts    nCuts78,2847
    int          nCutsMax;              // the largest possible number of cutsnCutsMax79,2919
    int          nEvals;                // the number of good cutsnEvals80,2998
    Lpk_Cut_t    pCuts[LPK_CUTS_MAX];   // the storage for cutspCuts81,3065
    int          pEvals[LPK_CUTS_MAX];  // the good cutspEvals82,3129
    Vec_Vec_t *  vVisited;vVisited84,3208
    If_Man_t *   pIfMan;pIfMan86,3258
    Vec_Int_t *  vCover; vCover87,3283
    Vec_Vec_t *  vLevels;vLevels88,3309
    int          fCofactoring;          // working in the cofactoring modefCofactoring90,3362
    int          fCalledOnce;           // limits the depth of MUX cofactoringfCalledOnce91,3437
    int          nCalledSRed;           // the number of called to SRednCalledSRed92,3516
    int          pRefs[LPK_SIZE_MAX];   // fanin reference counters pRefs93,3588
    int          pCands[LPK_SIZE_MAX];  // internal nodes pointing only to the leavespCands94,3657
    Vec_Ptr_t *  vLeaves;vLeaves95,3743
    Vec_Ptr_t *  vTemp;vTemp96,3769
    Vec_Ptr_t *  vTtElems;              // elementary truth tablesvTtElems98,3827
    Vec_Ptr_t *  vTtNodes;              // storage for temporary truth tables of the nodes vTtNodes99,3894
    Vec_Int_t *  vMemory;vMemory100,3986
    Vec_Int_t *  vBddDir;vBddDir101,4012
    Vec_Int_t *  vBddInv;vBddInv102,4038
    unsigned     puSupps[32];           // the supports of the cofactorspuSupps103,4064
    unsigned *   ppTruths[5][16];ppTruths104,4137
    Vec_Int_t *  vSets[8];vSets106,4192
    Kit_DsdMan_t* pDsdMan;pDsdMan107,4219
    int          nNodesTotal;           // total number of nodesnNodesTotal109,4264
    int          nNodesOver;            // nodes with cuts over the limit nNodesOver110,4329
    int          nCutsTotal;            // total number of cutsnCutsTotal111,4404
    int          nCutsUseful;           // useful cuts nCutsUseful112,4468
    int          nGainTotal;            // the gain in LUTsnGainTotal113,4524
    int          nChanges;              // the number of changed nodesnChanges114,4584
    int          nBenefited;            // the number of gainful that benefited from decompositionnBenefited115,4655
    int          nMuxes;nMuxes116,4754
    int          nDsds;nDsds117,4779
    int          nTotalNets;nTotalNets118,4803
    int          nTotalNets2;nTotalNets2119,4832
    int          nTotalNodes;nTotalNodes120,4862
    int          nTotalNodes2;nTotalNodes2121,4892
    int          nBlocks[17];nBlocks123,4956
    abctime      timeCuts;timeCuts125,5001
    abctime      timeTruth;timeTruth126,5028
    abctime      timeSupps;timeSupps127,5056
    abctime      timeTruth2;timeTruth2128,5084
    abctime      timeTruth3;timeTruth3129,5113
    abctime      timeEval;timeEval130,5142
    abctime      timeMap;timeMap131,5169
    abctime      timeOther;timeOther132,5195
    abctime      timeTotal;timeTotal133,5223
    abctime      timeEvalMuxAn;timeEvalMuxAn135,5274
    abctime      timeEvalMuxSp;timeEvalMuxSp136,5306
    abctime      timeEvalDsdAn;timeEvalDsdAn137,5338
    abctime      timeEvalDsdSp;timeEvalDsdSp138,5370
typedef struct Lpk_Fun_t_ Lpk_Fun_t;Lpk_Fun_t144,5469
struct Lpk_Fun_t_Lpk_Fun_t_145,5506
    Vec_Ptr_t *  vNodes;           // the array of leaves and decomposition nodesvNodes147,5526
    unsigned     Id         :  7;  // the ID of this nodeId148,5608
    unsigned     nVars      :  5;  // the number of variablesnVars149,5666
    unsigned     nLutK      :  4;  // the number of LUT inputsnLutK150,5728
    unsigned     nAreaLim   : 14;  // the area limit (the largest allowed)nAreaLim151,5791
    unsigned     fSupports  :  1;  // supports of cofactors were precomputedfSupports152,5866
    unsigned     fMark      :  1;  // marks the MUX-based decfMark153,5943
    unsigned     uSupp;            // the support of this componentuSupp154,6005
    unsigned     puSupps[32];      // the supports of the cofactorspuSupps155,6073
    unsigned     nDelayLim;        // the delay limit (the largest allowed)nDelayLim156,6141
    int          pDelays[16];      // the delays of the inputspDelays157,6217
    char         pFanins[16];      // the fanins of this functionpFanins158,6280
    unsigned     pTruth[0];        // the truth table (contains room for three truth tables)    pTruth159,6346
typedef struct Lpk_Res_t_ Lpk_Res_t;Lpk_Res_t163,6483
struct Lpk_Res_t_Lpk_Res_t_164,6520
    int          nBSVars;          // the number of bound set variablesnBSVars166,6540
    unsigned     BSVars;           // the bound setBSVars167,6612
    int          nCofVars;         // the number of cofactoring variablesnCofVars168,6664
    char         pCofVars[4];      // the cofactoring variablespCofVars169,6738
    int          nSuppSizeS;       // support size of the smaller (decomposed) function nSuppSizeS170,6802
    int          nSuppSizeL;       // support size of the larger (composition) functionnSuppSizeL171,6891
    int          DelayEst;         // estimated delay of the decompositionDelayEst172,6979
    int          AreaEst;          // estimated area of the decompositionAreaEst173,7054
    int          Variable;         // variable in MUX decompositionVariable174,7128
    int          Polarity;         // polarity in MUX decompositionPolarity175,7196
static inline int        Lpk_LutNumVars( int nLutsLim, int nLutK ) { return  nLutsLim * (nLutK - 1) + 1;                                            }Lpk_LutNumVars178,7268
static inline int        Lpk_LutNumLuts( int nVarsMax, int nLutK ) { return (nVarsMax - 1) / (nLutK - 1) + (int)((nVarsMax - 1) % (nLutK - 1) > 0); }Lpk_LutNumLuts179,7418
static inline unsigned * Lpk_FunTruth( Lpk_Fun_t * p, int Num )    { assert( Num < 3 ); return p->pTruth + Kit_TruthWordNum(p->nVars) * Num;        }Lpk_FunTruth180,7568
#define Lpk_CutForEachLeaf(Lpk_CutForEachLeaf190,8159
#define Lpk_CutForEachNode(Lpk_CutForEachNode192,8357
#define Lpk_CutForEachNodeReverse(Lpk_CutForEachNodeReverse194,8553
#define Lpk_SuppForEachVar(Lpk_SuppForEachVar196,8754

src/opt/lpk/lpk.h,1318
#define ABC__opt__lpk__lpk_hABC__opt__lpk__lpk_h22,548
typedef struct Lpk_Par_t_ Lpk_Par_t;Lpk_Par_t42,1271
struct Lpk_Par_t_Lpk_Par_t_43,1308
    int               nLutsMax;      // (N) the maximum number of LUTs in the structurenLutsMax46,1362
    int               nLutsOver;     // (Q) the maximum number of LUTs not in the MFFCnLutsOver47,1450
    int               nVarsShared;   // (S) the maximum number of shared variables (crossbars)nVarsShared48,1537
    int               nGrowthLevel;  // (L) the maximum increase in the node level after resynthesisnGrowthLevel49,1632
    int               fSatur;        // iterate till saturationfSatur50,1733
    int               fZeroCost;     // accept zero-cost replacementsfZeroCost51,1797
    int               fFirst;        // use root node and first cut onlyfFirst52,1867
    int               fOldAlgo;      // use old algorithmfOldAlgo53,1940
    int               fVerbose;      // the verbosiness flagfVerbose54,1998
    int               fVeryVerbose;  // additional verbose info printoutfVeryVerbose55,2059
    int               nLutSize;      // (K) the LUT size (determined by the input network)nLutSize57,2159
    int               nVarsMax;      // (V) the largest number of variables: V = N * (K-1) + 1nVarsMax58,2250

src/opt/fxu/fxuInt.h,11842
#define ABC__opt__fxu__fxuInt_hABC__opt__fxu__fxuInt_h20,530
typedef struct FxuMatrix        Fxu_Matrix;     // the sparse matrixFxu_Matrix63,2397
typedef struct FxuCube          Fxu_Cube;       // one cube in the sparse matrixFxu_Cube66,2543
typedef struct FxuVar           Fxu_Var;        // one literal in the sparse matrixFxu_Var67,2624
typedef struct FxuLit           Fxu_Lit;        // one entry in the sparse matrixFxu_Lit68,2708
typedef struct FxuPair          Fxu_Pair;       // the pair of cubesFxu_Pair71,2815
typedef struct FxuDouble        Fxu_Double;     // the double-cube divisorFxu_Double72,2884
typedef struct FxuSingle        Fxu_Single;     // the two-literal single-cube divisorFxu_Single73,2959
typedef struct FxuListCube      Fxu_ListCube;   // the list of cubesFxu_ListCube76,3064
typedef struct FxuListVar       Fxu_ListVar;    // the list of literalsFxu_ListVar77,3133
typedef struct FxuListLit       Fxu_ListLit;    // the list of entriesFxu_ListLit78,3205
typedef struct FxuListPair      Fxu_ListPair;   // the list of pairsFxu_ListPair79,3276
typedef struct FxuListDouble    Fxu_ListDouble; // the list of divisorsFxu_ListDouble80,3345
typedef struct FxuListSingle    Fxu_ListSingle; // the list of single-cube divisorsFxu_ListSingle81,3417
typedef struct FxuHeapDouble    Fxu_HeapDouble; // the heap of divisorsFxu_HeapDouble84,3519
typedef struct FxuHeapSingle    Fxu_HeapSingle; // the heap of variablesFxu_HeapSingle85,3591
struct FxuListCubeFxuListCube91,3727
    Fxu_Cube *       pHead;pHead93,3748
    Fxu_Cube *       pTail;pTail94,3776
    int              nItems;nItems95,3804
struct FxuListVarFxuListVar99,3883
    Fxu_Var *        pHead;pHead101,3903
    Fxu_Var *        pTail;pTail102,3931
    int              nItems;nItems103,3959
struct FxuListLitFxuListLit107,4037
    Fxu_Lit *        pHead;pHead109,4057
    Fxu_Lit *        pTail;pTail110,4085
    int              nItems;nItems111,4113
struct FxuListPairFxuListPair115,4193
    Fxu_Pair *       pHead;pHead117,4214
    Fxu_Pair *       pTail;pTail118,4242
    int              nItems;nItems119,4270
struct FxuListDoubleFxuListDouble123,4349
    Fxu_Double *     pHead;pHead125,4372
    Fxu_Double *     pTail;pTail126,4400
    int              nItems;nItems127,4428
struct FxuListSingleFxuListSingle131,4507
    Fxu_Single *     pHead;pHead133,4530
    Fxu_Single *     pTail;pTail134,4558
    int              nItems;nItems135,4586
struct FxuHeapDoubleFxuHeapDouble142,4684
    Fxu_Double **    pTree;pTree144,4707
    int              nItems;nItems145,4735
    int              nItemsAlloc;nItemsAlloc146,4764
    int              i;i147,4798
struct FxuHeapSingleFxuHeapSingle151,4883
    Fxu_Single **    pTree;pTree153,4906
    int              nItems;nItems154,4934
    int              nItemsAlloc;nItemsAlloc155,4963
    int              i;i156,4997
struct FxuMatrix // ~ 30 wordsFxuMatrix162,5044
    Fxu_ListCube     lCubes;      // the double linked list of cubeslCubes165,5094
    Fxu_ListVar      lVars;       // the double linked list of variableslVars167,5199
      Fxu_Var **       ppVars;      // the array of variablesppVars168,5272
    Fxu_ListDouble * pTable;      // the hash table of divisorspTable170,5366
    int              nTableSize;  // the hash table sizenTableSize171,5430
    int              nDivs;       // the number of divisors in the tablenDivs172,5487
    int              nDivsTotal;  // the number of divisors in the tablenDivsTotal173,5560
    Fxu_HeapDouble * pHeapDouble;    // the heap of divisors by weightpHeapDouble174,5633
    Fxu_ListSingle   lSingles;    // the linked list of single cube divisors  lSingles176,5736
    Fxu_HeapSingle * pHeapSingle; // the heap of variables by the number of literals in the matrixpHeapSingle177,5815
    int              nWeightLimit;// the limit on weight of single cube divisors collectednWeightLimit178,5914
    int              nSingleTotal;// the total number of single cube divisorsnSingleTotal179,6005
    Fxu_Pair ***     pppPairs;pppPairs181,6113
    Fxu_Pair **      ppPairs;ppPairs182,6144
    Fxu_Cube *       pOrderCubes;pOrderCubes184,6210
    Fxu_Cube **      ppTailCubes;ppTailCubes185,6244
    Fxu_Var *        pOrderVars;pOrderVars187,6318
    Fxu_Var **       ppTailVars;ppTailVars188,6351
    Vec_Ptr_t *      vPairs;vPairs190,6419
    int              nEntries;    // the total number of entries in the sparse matrixnEntries192,6466
    int              nDivs1;      // the single cube divisors takennDivs1193,6552
    int              nDivs2;      // the double cube divisors takennDivs2194,6620
    int              nDivs3;      // the double cube divisors with complementnDivs3195,6688
    Extra_MmFixed_t * pMemMan;     // the memory manager for all small sized entriespMemMan197,6788
struct FxuCube // 9 wordsFxuCube201,6910
    int              iCube;       // the number of this cube in the coveriCube203,6938
    Fxu_Cube *       pFirst;      // the pointer to the first cube of this coverpFirst204,7012
    Fxu_Var *        pVar;        // the variable representing the output of the coverpVar205,7093
    Fxu_ListLit      lLits;       // the row in the table lLits206,7180
    Fxu_Cube *       pPrev;       // the previous cubepPrev207,7239
    Fxu_Cube *       pNext;       // the next cubepNext208,7294
    Fxu_Cube *       pOrder;      // the specialized linked list of cubespOrder209,7345
struct FxuVar // 10 wordsFxuVar213,7460
    int              iVar;        // the number of this variableiVar215,7488
    int              nCubes;      // the number of cubes assoc with this varnCubes216,7553
    Fxu_Cube *       pFirst;      // the first cube assoc with this varpFirst217,7630
    Fxu_Pair ***     ppPairs;     // the pairs of cubes assoc with this varppPairs218,7702
    Fxu_ListLit      lLits;       // the column in the table lLits219,7778
    Fxu_Var *        pPrev;       // the previous variablepPrev220,7840
    Fxu_Var *        pNext;       // the next variablepNext221,7899
    Fxu_Var *        pOrder;      // the specialized linked list of variablespOrder222,7954
struct FxuLit // 8 wordsFxuLit226,8079
    int              iVar;        // the number of this variableiVar228,8106
    int              iCube;       // the number of this cubeiCube229,8171
    Fxu_Cube *       pCube;       // the cube of this literalpCube230,8232
    Fxu_Var *        pVar;        // the variable of this literalpVar231,8294
    Fxu_Lit *        pHPrev;      // prev lit in the cubepHPrev232,8360
    Fxu_Lit *        pHNext;      // next lit in the cubepHNext233,8418
    Fxu_Lit *        pVPrev;      // prev lit of the var     pVPrev234,8476
    Fxu_Lit *        pVNext;      // next lit of the var   pVNext235,8538
struct FxuPair // 10 wordsFxuPair239,8619
    int              nLits1;      // the number of literals in the two cubesnLits1241,8648
    int              nLits2;      // the number of literals in the two cubesnLits2242,8725
    int              nBase;       // the number of literals in the basenBase243,8802
    Fxu_Double *     pDiv;        // the divisor of this pairpDiv244,8874
    Fxu_Cube *       pCube1;      // the first cube of the pairpCube1245,8936
    Fxu_Cube *       pCube2;      // the second cube of the pairpCube2246,9000
    int              iCube1;      // the first cube of the pairiCube1247,9065
    int              iCube2;      // the second cube of the pairiCube2248,9129
    Fxu_Pair *       pDPrev;      // the previous pair in the divisorpDPrev249,9194
    Fxu_Pair *       pDNext;      // the next pair in the divisorpDNext250,9264
struct FxuDouble // 10 wordsFxuDouble254,9361
    int              Num;         // the unique number of this divisorNum256,9392
    int              HNum;        // the heap number of this divisorHNum257,9463
    int              Weight;      // the weight of this divisorWeight258,9532
    unsigned         Key;         // the hash key of this divisorKey259,9596
    Fxu_ListPair     lPairs;      // the pairs of cubes, which produce this divisorlPairs260,9662
    Fxu_Double *     pPrev;       // the previous divisor in the tablepPrev261,9746
    Fxu_Double *     pNext;       // the next divisor in the tablepNext262,9817
    Fxu_Double *     pOrder;      // the specialized linked list of divisorspOrder263,9884
struct FxuSingle // 7 wordsFxuSingle267,9992
    int              Num;         // the unique number of this divisorNum269,10022
    int              HNum;        // the heap number of this divisorHNum270,10093
    int              Weight;      // the weight of this divisorWeight271,10162
    Fxu_Var *        pVar1;       // the first variable of the single-cube divisorpVar1272,10226
    Fxu_Var *        pVar2;       // the second variable of the single-cube divisorpVar2273,10309
    Fxu_Single *     pPrev;       // the previous divisor in the listpPrev274,10393
    Fxu_Single *     pNext;       // the next divisor in the listpNext275,10463
#define Fxu_Min(Fxu_Min283,10772
#define Fxu_Max(Fxu_Max284,10819
#define Fxu_PairMinCube(Fxu_PairMinCube287,10920
#define Fxu_PairMaxCube(Fxu_PairMaxCube288,11028
#define Fxu_PairMinCubeInt(Fxu_PairMinCubeInt289,11136
#define Fxu_PairMaxCubeInt(Fxu_PairMaxCubeInt290,11244
#define Fxu_MatrixForEachCube(Fxu_MatrixForEachCube294,11367
#define Fxu_MatrixForEachCubeSafe(Fxu_MatrixForEachCubeSafe298,11504
#define Fxu_MatrixForEachVariable(Fxu_MatrixForEachVariable303,11717
#define Fxu_MatrixForEachVariableSafe(Fxu_MatrixForEachVariableSafe307,11852
#define Fxu_MatrixForEachSingle(Fxu_MatrixForEachSingle312,12056
#define Fxu_MatrixForEachSingleSafe(Fxu_MatrixForEachSingleSafe316,12207
#define Fxu_TableForEachDouble(Fxu_TableForEachDouble321,12448
#define Fxu_TableForEachDoubleSafe(Fxu_TableForEachDoubleSafe325,12591
#define Fxu_MatrixForEachDouble(Fxu_MatrixForEachDouble330,12803
#define Fxu_MatrixForEachDoubleSafe(Fxu_MatrixForEachDoubleSafe333,12973
#define Fxu_CubeForEachLiteral(Fxu_CubeForEachLiteral338,13165
#define Fxu_CubeForEachLiteralSafe(Fxu_CubeForEachLiteralSafe342,13294
#define Fxu_VarForEachLiteral(Fxu_VarForEachLiteral347,13493
#define Fxu_CubeForEachDivisor(Fxu_CubeForEachDivisor352,13620
#define Fxu_DoubleForEachPair(Fxu_DoubleForEachPair357,13750
#define Fxu_DoubleForEachPairSafe(Fxu_DoubleForEachPairSafe361,13882
#define Fxu_CubeForEachPair(Fxu_CubeForEachPair368,14156
#define Fxu_HeapDoubleForEachItem(Fxu_HeapDoubleForEachItem375,14415
#define Fxu_HeapSingleForEachItem(Fxu_HeapSingleForEachItem379,14577
#define Fxu_MatrixRingCubesStart(Fxu_MatrixRingCubesStart385,14768
#define Fxu_MatrixRingVarsStart(Fxu_MatrixRingVarsStart386,14899
#define Fxu_MatrixRingCubesStop(Fxu_MatrixRingCubesStop388,15052
#define Fxu_MatrixRingVarsStop(Fxu_MatrixRingVarsStop389,15095
#define Fxu_MatrixRingCubesReset(Fxu_MatrixRingCubesReset391,15161
#define Fxu_MatrixRingVarsReset(Fxu_MatrixRingVarsReset392,15272
#define Fxu_MatrixRingCubesAdd(Fxu_MatrixRingCubesAdd394,15406
#define Fxu_MatrixRingVarsAdd(Fxu_MatrixRingVarsAdd395,15565
#define Fxu_MatrixForEachCubeInRing(Fxu_MatrixForEachCubeInRing397,15754
#define Fxu_MatrixForEachCubeInRingSafe(Fxu_MatrixForEachCubeInRingSafe402,15948
#define Fxu_MatrixForEachVarInRing(Fxu_MatrixForEachVarInRing407,16274
#define Fxu_MatrixForEachVarInRingSafe(Fxu_MatrixForEachVarInRingSafe412,16459
#define MEM_ALLOC_FXU(MEM_ALLOC_FXU426,17165
#define MEM_FREE_FXU(MEM_FREE_FXU427,17270
#define MEM_ALLOC_FXU(MEM_ALLOC_FXU429,17384
#define MEM_FREE_FXU(MEM_FREE_FXU431,17495

src/opt/fxu/fxuList.c,1740
void Fxu_ListMatrixAddVariable( Fxu_Matrix * p, Fxu_Var * pLink ) Fxu_ListMatrixAddVariable45,1204
void Fxu_ListMatrixDelVariable( Fxu_Matrix * p, Fxu_Var * pLink )Fxu_ListMatrixDelVariable76,1884
void Fxu_ListMatrixAddCube( Fxu_Matrix * p, Fxu_Cube * pLink )Fxu_ListMatrixAddCube104,2547
void Fxu_ListMatrixDelCube( Fxu_Matrix * p, Fxu_Cube * pLink )Fxu_ListMatrixDelCube135,3225
void Fxu_ListMatrixAddSingle( Fxu_Matrix * p, Fxu_Single * pLink )Fxu_ListMatrixAddSingle163,3889
void Fxu_ListMatrixDelSingle( Fxu_Matrix * p, Fxu_Single * pLink )Fxu_ListMatrixDelSingle194,4575
void Fxu_ListTableAddDivisor( Fxu_Matrix * p, Fxu_Double * pLink ) Fxu_ListTableAddDivisor222,5247
void Fxu_ListTableDelDivisor( Fxu_Matrix * p, Fxu_Double * pLink ) Fxu_ListTableDelDivisor254,5962
void Fxu_ListCubeAddLiteral( Fxu_Cube * pCube, Fxu_Lit * pLink )Fxu_ListCubeAddLiteral283,6663
void Fxu_ListCubeDelLiteral( Fxu_Cube * pCube, Fxu_Lit * pLink )Fxu_ListCubeDelLiteral314,7352
void Fxu_ListVarAddLiteral( Fxu_Var * pVar, Fxu_Lit * pLink )Fxu_ListVarAddLiteral342,8030
void Fxu_ListVarDelLiteral( Fxu_Var * pVar, Fxu_Lit * pLink )Fxu_ListVarDelLiteral373,8715
void Fxu_ListDoubleAddPairLast( Fxu_Double * pDiv, Fxu_Pair * pLink )Fxu_ListDoubleAddPairLast402,9391
void Fxu_ListDoubleAddPairFirst( Fxu_Double * pDiv, Fxu_Pair * pLink )Fxu_ListDoubleAddPairFirst433,10084
void Fxu_ListDoubleAddPairMiddle( Fxu_Double * pDiv, Fxu_Pair * pSpot, Fxu_Pair * pLink )Fxu_ListDoubleAddPairMiddle466,11026
void Fxu_ListDoubleDelPair( Fxu_Double * pDiv, Fxu_Pair * pLink )Fxu_ListDoubleDelPair489,11608
void Fxu_ListDoubleAddPairPlace( Fxu_Double * pDiv, Fxu_Pair * pPair, Fxu_Pair * pPairSpot )Fxu_ListDoubleAddPairPlace514,12266

src/opt/fxu/fxu.c,485
static int s_MemoryTotal;s_MemoryTotal33,976
static int s_MemoryPeak;s_MemoryPeak34,1002
int Fxu_FastExtract( Fxu_Data_t * pData )Fxu_FastExtract58,2073
void Fxu_MatrixRingCubesUnmark( Fxu_Matrix * p )Fxu_MatrixRingCubesUnmark185,6238
void Fxu_MatrixRingVarsUnmark( Fxu_Matrix * p )Fxu_MatrixRingVarsUnmark206,6718
char * Fxu_MemFetch( Fxu_Matrix * p, int nBytes )Fxu_MemFetch227,7174
void Fxu_MemRecycle( Fxu_Matrix * p, char * pItem, int nBytes )Fxu_MemRecycle247,7660

src/opt/fxu/fxuSelect.c,923
#define MAX_SIZE_LOOKAHEAD MAX_SIZE_LOOKAHEAD28,770
int Fxu_Select( Fxu_Matrix * p, Fxu_Single ** ppSingle, Fxu_Double ** ppDouble )Fxu_Select57,1926
Fxu_Double * Fxu_MatrixFindComplementSingle( Fxu_Matrix * p, Fxu_Single * pSingle )Fxu_MatrixFindComplementSingle222,7110
Fxu_Single * Fxu_MatrixFindComplementDouble2( Fxu_Matrix * p, Fxu_Double * pDouble )Fxu_MatrixFindComplementDouble2249,7892
Fxu_Double * Fxu_MatrixFindComplementDouble4( Fxu_Matrix * p, Fxu_Double * pDouble )Fxu_MatrixFindComplementDouble4297,9198
int Fxu_MatrixFindComplement( Fxu_Matrix * p, int iVar )Fxu_MatrixFindComplement348,10738
void Fxu_MatrixGetDoubleVars( Fxu_Matrix * p, Fxu_Double * pDouble, Fxu_MatrixGetDoubleVars403,11844
Fxu_Double * Fxu_MatrixFindDouble( Fxu_Matrix * p, Fxu_MatrixFindDouble466,13404
int Fxu_SelectSCD( Fxu_Matrix * p, int WeightLimit, Fxu_Var ** ppVar1, Fxu_Var ** ppVar2 )Fxu_SelectSCD525,14983

src/opt/fxu/fxu.h,2051
#define ABC__opt__fxu__fxu_hABC__opt__fxu__fxu_h20,520
typedef struct FxuDataStruct   Fxu_Data_t;Fxu_Data_t42,1269
struct FxuDataStructFxuDataStruct45,1356
    int               fOnlyS;           // set to 1 to have only single-cube divsfOnlyS48,1412
    int               fOnlyD;           // set to 1 to have only double-cube divsfOnlyD49,1494
    int               fUse0;            // set to 1 to have 0-weight also extractedfUse050,1576
    int               fUseCompl;        // set to 1 to have complement taken into accountfUseCompl51,1660
    int               fVerbose;         // set to 1 to have verbose outputfVerbose52,1750
    int               fVeryVerbose;     // set to 1 to have more verbose outputfVeryVerbose53,1825
    int               nNodesExt;        // the number of divisors to extractnNodesExt54,1905
    int               nSingleMax;       // the max number of single-cube divisors to considernSingleMax55,1982
    int               nPairsMax;        // the max number of double-cube divisors to considernPairsMax56,2076
    int               WeightMin;        // the min weight of a divisor to extractWeightMin57,2170
    int               LitCountMax;      // the max literal count of a divisor to considerLitCountMax58,2252
    int               fCanonDivs;       // use only canonical divisors (AND/XOR/MUX) fCanonDivs59,2342
    Vec_Ptr_t *       vSops;            // the SOPs for each node in the networkvSops61,2457
    Vec_Ptr_t *       vFanins;          // the fanins of each node in the networkvFanins62,2538
    Vec_Ptr_t *       vSopsNew;         // the SOPs for each node in the network after extractionvSopsNew64,2646
    Vec_Ptr_t *       vFaninsNew;       // the fanins of each node in the network after extractionvFaninsNew65,2744
    Mem_Flex_t *      pManSop;pManSop67,2866
    int               nNodesOld;        // the old number of nodesnNodesOld69,2918
    int               nNodesNew;        // the number of divisors actually extractednNodesNew70,2985

src/opt/fxu/fxuUpdate.c,1499
void Fxu_Update( Fxu_Matrix * p, Fxu_Single * pSingle, Fxu_Double * pDouble )Fxu_Update57,2247
void Fxu_UpdateSingle( Fxu_Matrix * p )Fxu_UpdateSingle149,5334
void Fxu_UpdateDouble( Fxu_Matrix * p )Fxu_UpdateDouble219,7689
void Fxu_UpdateDoublePairs( Fxu_Matrix * p, Fxu_Double * pDouble, Fxu_Var * pVar )Fxu_UpdateDoublePairs285,9824
void Fxu_UpdateMatrixDoubleCreateCubes( Fxu_Matrix * p, Fxu_Cube * pCube1, Fxu_Cube * pCube2, Fxu_Double * pDiv )Fxu_UpdateMatrixDoubleCreateCubes334,11521
void Fxu_UpdateMatrixDoubleClean( Fxu_Matrix * p, Fxu_Cube * pCubeUse, Fxu_Cube * pCubeRem )Fxu_UpdateMatrixDoubleClean404,13714
void Fxu_UpdateMatrixSingleClean( Fxu_Matrix * p, Fxu_Var * pVar1, Fxu_Var * pVar2, Fxu_Var * pVarNew )Fxu_UpdateMatrixSingleClean494,17168
void Fxu_UpdatePairsSort( Fxu_Matrix * p, Fxu_Double * pDouble )Fxu_UpdatePairsSort580,19980
int Fxu_UpdatePairCompare( Fxu_Pair ** ppP1, Fxu_Pair ** ppP2 )Fxu_UpdatePairCompare607,20931
void Fxu_UpdateCreateNewVars( Fxu_Matrix * p, Fxu_Var ** ppVarC, Fxu_Var ** ppVarD, int nCubes )Fxu_UpdateCreateNewVars638,21706
void Fxu_UpdateCleanOldDoubles( Fxu_Matrix * p, Fxu_Double * pDiv, Fxu_Cube * pCube )Fxu_UpdateCleanOldDoubles670,22554
void Fxu_UpdateAddNewDoubles( Fxu_Matrix * p, Fxu_Cube * pCube )Fxu_UpdateAddNewDoubles724,24316
void Fxu_UpdateCleanOldSingles( Fxu_Matrix * p )Fxu_UpdateCleanOldSingles759,25363
void Fxu_UpdateAddNewSingles( Fxu_Matrix * p, Fxu_Var * pVar )Fxu_UpdateAddNewSingles800,26587

src/opt/fxu/fxuPrint.c,183
void Fxu_MatrixPrint( FILE * pFile, Fxu_Matrix * p )Fxu_MatrixPrint43,1196
void Fxu_MatrixPrintDivisorProfile( FILE * pFile, Fxu_Matrix * p )Fxu_MatrixPrintDivisorProfile159,4686

src/opt/fxu/fxuPair.c,1009
#define MAX_PRIMES MAX_PRIMES28,737
static int s_Primes[MAX_PRIMES] =s_Primes30,766
void Fxu_PairCanonicize( Fxu_Cube ** ppCube1, Fxu_Cube ** ppCube2 )Fxu_PairCanonicize75,3072
void Fxu_PairCanonicize2( Fxu_Cube ** ppCube1, Fxu_Cube ** ppCube2 )Fxu_PairCanonicize2114,4112
unsigned Fxu_PairHashKeyArray( Fxu_Matrix * p, int piVarsC1[], int piVarsC2[], int nVarsC1, int nVarsC2 )Fxu_PairHashKeyArray137,4665
unsigned Fxu_PairHashKey( Fxu_Matrix * p, Fxu_Cube * pCube1, Fxu_Cube * pCube2, Fxu_PairHashKey164,5604
int Fxu_PairCompare( Fxu_Pair * pPair1, Fxu_Pair * pPair2 )Fxu_PairCompare236,7526
void Fxu_PairAllocStorage( Fxu_Var * pVar, int nCubes )Fxu_PairAllocStorage452,14399
void Fxu_PairClearStorage( Fxu_Cube * pCube )Fxu_PairClearStorage476,15139
void Fxu_PairFreeStorage( Fxu_Var * pVar )Fxu_PairFreeStorage499,15669
Fxu_Pair * Fxu_PairAlloc( Fxu_Matrix * p, Fxu_Cube * pCube1, Fxu_Cube * pCube2 )Fxu_PairAlloc519,16086
void Fxu_PairAdd( Fxu_Pair * pPair )Fxu_PairAdd543,16731

src/opt/fxu/fxuCreate.c,718
static int * s_pLits;s_pLits33,1217
Fxu_Matrix * Fxu_CreateMatrix( Fxu_Data_t * pData )Fxu_CreateMatrix52,1859
void Fxu_CreateMatrixAddCube( Fxu_Matrix * p, Fxu_Cube * pCube, char * pSopCube, Vec_Int_t * vFanins, int * pOrder )Fxu_CreateMatrixAddCube245,9415
void Fxu_CreateCovers( Fxu_Matrix * p, Fxu_Data_t * pData )Fxu_CreateCovers278,10350
void Fxu_CreateCoversNode( Fxu_Matrix * p, Fxu_Data_t * pData, int iNode, Fxu_Cube * pCubeFirst, Fxu_Cube * pCubeNext )Fxu_CreateCoversNode330,12099
Fxu_Cube * Fxu_CreateCoversFirstCube( Fxu_Matrix * p, Fxu_Data_t * pData, int iVar )Fxu_CreateCoversFirstCube418,15170
int Fxu_CreateMatrixLitCompare( int * ptrX, int * ptrY )Fxu_CreateMatrixLitCompare438,15701

src/opt/fxu/fxuHeapS.c,1964
#define FXU_HEAP_SINGLE_WEIGHT(FXU_HEAP_SINGLE_WEIGHT28,747
#define FXU_HEAP_SINGLE_CURRENT(FXU_HEAP_SINGLE_CURRENT29,817
#define FXU_HEAP_SINGLE_PARENT_EXISTS(FXU_HEAP_SINGLE_PARENT_EXISTS30,897
#define FXU_HEAP_SINGLE_CHILD1_EXISTS(FXU_HEAP_SINGLE_CHILD1_EXISTS31,969
#define FXU_HEAP_SINGLE_CHILD2_EXISTS(FXU_HEAP_SINGLE_CHILD2_EXISTS32,1057
#define FXU_HEAP_SINGLE_PARENT(FXU_HEAP_SINGLE_PARENT33,1149
#define FXU_HEAP_SINGLE_CHILD1(FXU_HEAP_SINGLE_CHILD134,1234
#define FXU_HEAP_SINGLE_CHILD2(FXU_HEAP_SINGLE_CHILD235,1319
#define FXU_HEAP_SINGLE_ASSERT(FXU_HEAP_SINGLE_ASSERT36,1408
Fxu_HeapSingle * Fxu_HeapSingleStart()Fxu_HeapSingleStart58,2300
void Fxu_HeapSingleResize( Fxu_HeapSingle * p )Fxu_HeapSingleResize82,2848
void Fxu_HeapSingleStop( Fxu_HeapSingle * p )Fxu_HeapSingleStop99,3235
void Fxu_HeapSinglePrint( FILE * pFile, Fxu_HeapSingle * p )Fxu_HeapSinglePrint120,3599
void Fxu_HeapSingleCheck( Fxu_HeapSingle * p )Fxu_HeapSingleCheck155,4551
void Fxu_HeapSingleCheckOne( Fxu_HeapSingle * p, Fxu_Single * pSingle )Fxu_HeapSingleCheckOne176,5006
void Fxu_HeapSingleInsert( Fxu_HeapSingle * p, Fxu_Single * pSingle )Fxu_HeapSingleInsert204,5807
void Fxu_HeapSingleUpdate( Fxu_HeapSingle * p, Fxu_Single * pSingle )Fxu_HeapSingleUpdate226,6397
void Fxu_HeapSingleDelete( Fxu_HeapSingle * p, Fxu_Single * pSingle )Fxu_HeapSingleDelete251,7362
Fxu_Single * Fxu_HeapSingleReadMax( Fxu_HeapSingle * p )Fxu_HeapSingleReadMax275,8022
Fxu_Single * Fxu_HeapSingleGetMax( Fxu_HeapSingle * p )Fxu_HeapSingleGetMax293,8389
int  Fxu_HeapSingleReadMaxWeight( Fxu_HeapSingle * p )Fxu_HeapSingleReadMaxWeight321,9092
void Fxu_HeapSingleSwap( Fxu_Single ** pSingle1, Fxu_Single ** pSingle2 )Fxu_HeapSingleSwap341,9481
void Fxu_HeapSingleMoveUp( Fxu_HeapSingle * p, Fxu_Single * pSingle )Fxu_HeapSingleMoveUp364,10025
void Fxu_HeapSingleMoveDn( Fxu_HeapSingle * p, Fxu_Single * pSingle )Fxu_HeapSingleMoveDn392,10764

src/opt/fxu/fxuReduce.c,223
int Fxu_PreprocessCubePairs( Fxu_Matrix * p, Vec_Ptr_t * vCovers, int nPairsTotal, int nPairsMax )Fxu_PreprocessCubePairs53,1842
int Fxu_CountPairDiffs( char * pCover, unsigned char pDiffs[] )Fxu_CountPairDiffs188,6763

src/opt/fxu/fxuSingle.c,471
void Fxu_MatrixComputeSingles( Fxu_Matrix * p, int fUse0, int nSingleMax )Fxu_MatrixComputeSingles47,1533
void Fxu_MatrixComputeSinglesOneCollect( Fxu_Matrix * p, Fxu_Var * pVar, Vec_Ptr_t * vSingles )Fxu_MatrixComputeSinglesOneCollect124,4273
void Fxu_MatrixComputeSinglesOne( Fxu_Matrix * p, Fxu_Var * pVar )Fxu_MatrixComputeSinglesOne184,6198
int Fxu_SingleCountCoincidence( Fxu_Matrix * p, Fxu_Var * pVar1, Fxu_Var * pVar2 )Fxu_SingleCountCoincidence241,8056

src/opt/fxu/fxuMatrix.c,819
Fxu_Matrix * Fxu_MatrixAllocate()Fxu_MatrixAllocate43,1213
void Fxu_MatrixDelete( Fxu_Matrix * p )Fxu_MatrixDelete96,2914
Fxu_Var * Fxu_MatrixAddVar( Fxu_Matrix * p )Fxu_MatrixAddVar161,5008
Fxu_Cube * Fxu_MatrixAddCube( Fxu_Matrix * p, Fxu_Var * pVar, int iCube )Fxu_MatrixAddCube183,5551
void Fxu_MatrixAddLiteral( Fxu_Matrix * p, Fxu_Cube * pCube, Fxu_Var * pVar )Fxu_MatrixAddLiteral205,6110
void Fxu_MatrixDelDivisor( Fxu_Matrix * p, Fxu_Double * pDiv )Fxu_MatrixDelDivisor233,6894
void Fxu_MatrixDelLiteral( Fxu_Matrix * p, Fxu_Lit * pLit )Fxu_MatrixDelLiteral252,7379
void Fxu_MatrixAddSingle( Fxu_Matrix * p, Fxu_Var * pVar1, Fxu_Var * pVar2, int Weight )Fxu_MatrixAddSingle274,7937
void Fxu_MatrixAddDivisor( Fxu_Matrix * p, Fxu_Cube * pCube1, Fxu_Cube * pCube2 )Fxu_MatrixAddDivisor301,8694

src/opt/fxu/fxuHeapD.c,1939
#define FXU_HEAP_DOUBLE_WEIGHT(FXU_HEAP_DOUBLE_WEIGHT28,758
#define FXU_HEAP_DOUBLE_CURRENT(FXU_HEAP_DOUBLE_CURRENT29,822
#define FXU_HEAP_DOUBLE_PARENT_EXISTS(FXU_HEAP_DOUBLE_PARENT_EXISTS30,896
#define FXU_HEAP_DOUBLE_CHILD1_EXISTS(FXU_HEAP_DOUBLE_CHILD1_EXISTS31,962
#define FXU_HEAP_DOUBLE_CHILD2_EXISTS(FXU_HEAP_DOUBLE_CHILD2_EXISTS32,1044
#define FXU_HEAP_DOUBLE_PARENT(FXU_HEAP_DOUBLE_PARENT33,1130
#define FXU_HEAP_DOUBLE_CHILD1(FXU_HEAP_DOUBLE_CHILD134,1209
#define FXU_HEAP_DOUBLE_CHILD2(FXU_HEAP_DOUBLE_CHILD235,1288
#define FXU_HEAP_DOUBLE_ASSERT(FXU_HEAP_DOUBLE_ASSERT36,1371
Fxu_HeapDouble * Fxu_HeapDoubleStart()Fxu_HeapDoubleStart58,2242
void Fxu_HeapDoubleResize( Fxu_HeapDouble * p )Fxu_HeapDoubleResize82,2790
void Fxu_HeapDoubleStop( Fxu_HeapDouble * p )Fxu_HeapDoubleStop99,3176
void Fxu_HeapDoublePrint( FILE * pFile, Fxu_HeapDouble * p )Fxu_HeapDoublePrint117,3507
void Fxu_HeapDoubleCheck( Fxu_HeapDouble * p )Fxu_HeapDoubleCheck152,4453
void Fxu_HeapDoubleCheckOne( Fxu_HeapDouble * p, Fxu_Double * pDiv )Fxu_HeapDoubleCheckOne173,4896
void Fxu_HeapDoubleInsert( Fxu_HeapDouble * p, Fxu_Double * pDiv )Fxu_HeapDoubleInsert201,5676
void Fxu_HeapDoubleUpdate( Fxu_HeapDouble * p, Fxu_Double * pDiv )Fxu_HeapDoubleUpdate223,6254
void Fxu_HeapDoubleDelete( Fxu_HeapDouble * p, Fxu_Double * pDiv )Fxu_HeapDoubleDelete250,7227
Fxu_Double * Fxu_HeapDoubleReadMax( Fxu_HeapDouble * p )Fxu_HeapDoubleReadMax273,7867
Fxu_Double * Fxu_HeapDoubleGetMax( Fxu_HeapDouble * p )Fxu_HeapDoubleGetMax291,8239
int  Fxu_HeapDoubleReadMaxWeight( Fxu_HeapDouble * p )Fxu_HeapDoubleReadMaxWeight319,8930
void Fxu_HeapDoubleSwap( Fxu_Double ** pDiv1, Fxu_Double ** pDiv2 )Fxu_HeapDoubleSwap340,9332
void Fxu_HeapDoubleMoveUp( Fxu_HeapDouble * p, Fxu_Double * pDiv )Fxu_HeapDoubleMoveUp363,9837
void Fxu_HeapDoubleMoveDn( Fxu_HeapDouble * p, Fxu_Double * pDiv )Fxu_HeapDoubleMoveDn391,10549

src/opt/cut/cutMan.c,812
Cut_Man_t * Cut_ManStart( Cut_Params_t * pParams )Cut_ManStart47,1305
void Cut_ManStop( Cut_Man_t * p )Cut_ManStop124,3929
void Cut_ManPrintStats( Cut_Man_t * p )Cut_ManPrintStats155,4910
void Cut_ManPrintStatsToFile( Cut_Man_t * p, char * pFileName, abctime TimeTotal )Cut_ManPrintStatsToFile204,6907
void Cut_ManSetFanoutCounts( Cut_Man_t * p, Vec_Int_t * vFanCounts )Cut_ManSetFanoutCounts229,7730
void Cut_ManSetNodeAttrs( Cut_Man_t * p, Vec_Int_t * vNodeAttrs )Cut_ManSetNodeAttrs245,8070
int Cut_ManReadVarsMax( Cut_Man_t * p )Cut_ManReadVarsMax261,8407
Cut_Params_t * Cut_ManReadParams( Cut_Man_t * p )Cut_ManReadParams277,8719
Vec_Int_t * Cut_ManReadNodeAttrs( Cut_Man_t * p )Cut_ManReadNodeAttrs293,9031
void Cut_ManIncrementDagNodes( Cut_Man_t * p )Cut_ManIncrementDagNodes309,9346

src/opt/cut/cutNode.c,1782
static inline int Cut_CutCheckDominance( Cut_Cut_t * pDom, Cut_Cut_t * pCut )Cut_CutCheckDominance48,1490
static inline void Cut_CutFilter( Cut_Man_t * p, Cut_Cut_t * pList )Cut_CutFilter74,2204
static inline int Cut_CutFilterOneEqual( Cut_Man_t * p, Cut_List_t * pSuperList, Cut_Cut_t * pCut )Cut_CutFilterOneEqual122,3713
static inline int Cut_CutFilterOne( Cut_Man_t * p, Cut_List_t * pSuperList, Cut_Cut_t * pCut )Cut_CutFilterOne152,4569
static inline int Cut_CutFilterGlobal( Cut_Man_t * p, Cut_Cut_t * pCut )Cut_CutFilterGlobal224,6855
static inline int Cut_CutFilterOld( Cut_Man_t * p, Cut_Cut_t * pList, Cut_Cut_t * pCut )Cut_CutFilterOld250,7591
static inline int Cut_CutProcessTwo( Cut_Man_t * p, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1, Cut_List_t * pSuperList )Cut_CutProcessTwo312,9332
Cut_Cut_t * Cut_NodeComputeCuts( Cut_Man_t * p, int Node, int Node0, int Node1, int fCompl0, int fCompl1, int fTriv, int TreeCode )Cut_NodeComputeCuts369,11116
int Cut_NodeMapping2( Cut_Man_t * p, Cut_Cut_t * pCuts, int Node, int Node0, int Node1 )Cut_NodeMapping2446,13885
int Cut_NodeMapping( Cut_Man_t * p, Cut_Cut_t * pCuts, int Node, int Node0, int Node1 )Cut_NodeMapping489,15083
int Cut_ManMappingArea_rec( Cut_Man_t * p, int Node )Cut_ManMappingArea_rec544,16928
void Cut_NodeDoComputeCuts( Cut_Man_t * p, Cut_List_t * pSuper, int Node, int fCompl0, int fCompl1, Cut_Cut_t * pList0, Cut_Cut_t * pList1, int fTriv, int TreeCode )Cut_NodeDoComputeCuts572,17687
Cut_Cut_t * Cut_NodeUnionCuts( Cut_Man_t * p, Vec_Int_t * vNodes )Cut_NodeUnionCuts678,21174
Cut_Cut_t * Cut_NodeUnionCutsSeq( Cut_Man_t * p, Vec_Int_t * vNodes, int CutSetNum, int fFirst )Cut_NodeUnionCutsSeq795,25422
int Cut_CutListVerify( Cut_Cut_t * pList )Cut_CutListVerify979,31678

src/opt/cut/cutInt.h,3237
#define ABC__opt__cut__cutInt_hABC__opt__cut__cutInt_h22,549
typedef struct Cut_HashTableStruct_t_ Cut_HashTable_t;Cut_HashTable_t46,1386
struct Cut_ManStruct_t_Cut_ManStruct_t_48,1442
    Cut_Params_t *     pParams;          // computation parameterspParams51,1493
    Vec_Int_t *        vFanCounts;       // the array of fanout countersvFanCounts52,1560
    Vec_Int_t *        vNodeAttrs;       // node attributes (1 = global; 0 = local)vNodeAttrs53,1633
    Vec_Ptr_t *        vCutsNew;         // new cuts by node IDvCutsNew55,1741
    Vec_Ptr_t *        vCutsOld;         // old cuts by node IDvCutsOld56,1805
    Vec_Ptr_t *        vCutsTemp;        // temp cuts for cutset nodes by cutset node numbervCutsTemp57,1869
    Extra_MmFixed_t *  pMmCuts;pMmCuts59,1987
    int                EntrySize;EntrySize60,2019
    int                nTruthWords;nTruthWords61,2053
    Cut_Cut_t *        pReady;pReady63,2116
    Vec_Ptr_t *        vTemp;vTemp64,2147
    int                fCompl0;fCompl065,2177
    int                fCompl1;fCompl166,2209
    int                fSimul;fSimul67,2241
    int                nNodeCuts;nNodeCuts68,2272
    Cut_Cut_t *        pStore0[2];pStore069,2306
    Cut_Cut_t *        pStore1[2];pStore170,2341
    Cut_Cut_t *        pCompareOld;pCompareOld71,2376
    Cut_Cut_t *        pCompareNew;pCompareNew72,2412
    unsigned *         puTemp[4];puTemp73,2448
    Vec_Int_t *        vNodeCuts;        // the number of cuts for each nodevNodeCuts75,2519
    Vec_Int_t *        vNodeStarts;      // the number of the starting cut of each nodevNodeStarts76,2596
    Vec_Int_t *        vCutPairs;        // the pairs of parent cuts for each cutvCutPairs77,2684
    Vec_Ptr_t *        vCutsMax;vCutsMax79,2815
    Vec_Int_t *        vDelays;vDelays80,2848
    Vec_Int_t *        vDelays2;vDelays281,2880
    int                nDelayMin;nDelayMin82,2913
    int                nCutsCur;nCutsCur84,2965
    int                nCutsAlloc;nCutsAlloc85,2998
    int                nCutsDealloc;nCutsDealloc86,3033
    int                nCutsPeak;nCutsPeak87,3070
    int                nCutsTriv;nCutsTriv88,3104
    int                nCutsFilter;nCutsFilter89,3138
    int                nCutsLimit;nCutsLimit90,3174
    int                nNodes;nNodes91,3209
    int                nNodesDag;nNodesDag92,3240
    int                nNodesNoCuts;nNodesNoCuts93,3274
    abctime            timeMerge;timeMerge95,3326
    abctime            timeUnion;timeUnion96,3360
    abctime            timeTruth;timeTruth97,3394
    abctime            timeFilter;timeFilter98,3428
    abctime            timeHash;timeHash99,3463
    abctime            timeMap;timeMap100,3496
#define Cut_ListForEachCut(Cut_ListForEachCut104,3577
#define Cut_ListForEachCutStop(Cut_ListForEachCutStop108,3788
#define Cut_ListForEachCutSafe(Cut_ListForEachCutSafe112,3999
static inline unsigned Cut_NodeSign( int Node )        { return (1 << (Node % 31));                        }Cut_NodeSign124,4598
static inline int      Cut_TruthWords( int nVarsMax )  { return nVarsMax <= 5 ? 1 : (1 << (nVarsMax - 5)); }Cut_TruthWords125,4707

src/opt/cut/abcCut.c,1014
Vec_Int_t * Abc_NtkGetNodeAttributes( Abc_Ntk_t * pNtk ) Abc_NtkGetNodeAttributes39,1072
Cut_Man_t * Abc_NtkCuts( Abc_Ntk_t * pNtk, Cut_Params_t * pParams )Abc_NtkCuts72,2123
void Abc_NtkCutsOracle( Abc_Ntk_t * pNtk, Cut_Oracle_t * p )Abc_NtkCutsOracle162,5178
Cut_Man_t * Abc_NtkSeqCuts( Abc_Ntk_t * pNtk, Cut_Params_t * pParams )Abc_NtkSeqCuts222,6971
void * Abc_NodeGetCutsRecursive( void * p, Abc_Obj_t * pObj, int fDag, int fTree )Abc_NodeGetCutsRecursive324,10182
void * Abc_NodeGetCuts( void * p, Abc_Obj_t * pObj, int fDag, int fTree )Abc_NodeGetCuts345,10815
void Abc_NodeGetCutsSeq( void * p, Abc_Obj_t * pObj, int fTriv )Abc_NodeGetCutsSeq401,12846
void * Abc_NodeReadCuts( void * p, Abc_Obj_t * pObj )Abc_NodeReadCuts423,13588
void Abc_NodeFreeCuts( void * p, Abc_Obj_t * pObj )Abc_NodeFreeCuts439,13964
void Abc_NtkPrintCuts( void * p, Abc_Ntk_t * pNtk, int fSeq )Abc_NtkPrintCuts455,14326
void Abc_NtkPrintCuts_( void * p, Abc_Ntk_t * pNtk, int fSeq )Abc_NtkPrintCuts_481,14971

src/opt/cut/cutSeq.c,573
static inline void Cut_NodeShiftCutLeaves( Cut_Cut_t * pList, int nLat )Cut_NodeShiftCutLeaves45,1309
void Cut_NodeComputeCutsSeq( Cut_Man_t * p, int Node, int Node0, int Node1, int fCompl0, int fCompl1, int nLat0, int nLat1, int fTriv, int CutSetNum )Cut_NodeComputeCutsSeq72,2006
void Cut_NodeNewMergeWithOld( Cut_Man_t * p, int Node )Cut_NodeNewMergeWithOld165,5424
int Cut_NodeTempTransferToNew( Cut_Man_t * p, int Node, int CutSetNum )Cut_NodeTempTransferToNew197,6310
void Cut_NodeOldTransferToNew( Cut_Man_t * p, int Node )Cut_NodeOldTransferToNew217,6855

src/opt/cut/cutPre22.c,3699
#define CUT_CELL_MVAR CUT_CELL_MVAR30,805
typedef struct Cut_Cell_t_ Cut_Cell_t;Cut_Cell_t32,831
typedef struct Cut_CMan_t_ Cut_CMan_t;Cut_CMan_t33,870
struct Cut_Cell_t_Cut_Cell_t_35,910
    Cut_Cell_t *       pNext;                        // pointer to the next cell in the tablepNext37,931
    Cut_Cell_t *       pNextVar;                     // pointer to the next cell of this support sizepNextVar38,1025
    Cut_Cell_t *       pParent;                      // pointer to the cell used to derive this onepParent39,1127
    int                nUsed;                        // the number of times the cell is usednUsed40,1227
    char               Box[4];                       // functions in the boxesBox41,1320
    unsigned           nVars          :  4;          // the number of variablesnVars42,1399
    unsigned           CrossBar0      :  4;          // the variable set equalCrossBar043,1479
    unsigned           CrossBar1      :  4;          // the variable set equalCrossBar144,1558
    unsigned           CrossBarPhase  :  2;          // the phase of the cross bar (0, 1, or 2)CrossBarPhase45,1637
    unsigned           CanonPhase     : 18;          // the canonical phaseCanonPhase46,1733
    char               CanonPerm[CUT_CELL_MVAR+3];   // semicanonical permutationCanonPerm47,1809
    short              Store[2*CUT_CELL_MVAR];       // minterm counts in the cofactorsStore48,1891
    unsigned           uTruth[1<<(CUT_CELL_MVAR-5)]; // the current truth tableuTruth49,1979
struct Cut_CMan_t_Cut_CMan_t_52,2063
    Extra_MmFixed_t *  pMem;pMem55,2119
    st__table *         tTable;tTable56,2148
    Cut_Cell_t *       pSameVar[CUT_CELL_MVAR+1];pSameVar57,2180
    unsigned           uInputs[CUT_CELL_MVAR][1<<(CUT_CELL_MVAR-5)];uInputs59,2261
    unsigned           uTemp1[22][1<<(CUT_CELL_MVAR-5)];uTemp161,2360
    unsigned           uTemp2[22][1<<(CUT_CELL_MVAR-5)];uTemp262,2417
    unsigned           uTemp3[22][1<<(CUT_CELL_MVAR-5)];uTemp363,2474
    unsigned           uFinal[1<<(CUT_CELL_MVAR-5)];uFinal64,2531
    unsigned           puAux[1<<(CUT_CELL_MVAR-5)];puAux65,2584
    int                nTotal;nTotal67,2665
    int                nGood;nGood68,2696
    int                nVarCounts[CUT_CELL_MVAR+1];nVarCounts69,2726
    int                nSymGroups[CUT_CELL_MVAR+1];nSymGroups70,2778
    int                nSymGroupsE[CUT_CELL_MVAR+1];nSymGroupsE71,2830
    abctime            timeCanon;timeCanon72,2883
    abctime            timeSupp;timeSupp73,2917
    abctime            timeTable;timeTable74,2950
    int                nCellFound;nCellFound75,2984
    int                nCellNotFound;nCellNotFound76,3019
static char * s_NP3Names[22] = {s_NP3Names106,4780
static int s_NPNe3[10] = { 6, 8, 10, 11, 12, 14, 15, 17, 18, 20 };s_NPNe3135,5676
static Cut_CMan_t * s_pCMan = NULL;s_pCMan152,6413
void Cut_CellLoad()Cut_CellLoad169,6937
void Cut_CellPrecompute()Cut_CellPrecompute233,8885
int Cut_CellTableLookup( Cut_CMan_t * p, Cut_Cell_t * pCell )Cut_CellTableLookup519,19174
void Cut_CellSuppMin( Cut_Cell_t * pCell )Cut_CellSuppMin553,20171
void Cut_CellCrossBar( Cut_Cell_t * pCell )Cut_CellCrossBar596,21641
void Cut_CellTruthElem( unsigned * InA, unsigned * InB, unsigned * InC, unsigned * pOut, int nVars, int Type )Cut_CellTruthElem638,23263
Cut_CMan_t * Cut_CManStart()Cut_CManStart771,27793
void Cut_CManStop( Cut_CMan_t * p )Cut_CManStop802,28639
int Cut_CellIsRunning()Cut_CellIsRunning819,28999
void Cut_CellDumpToFile()Cut_CellDumpToFile835,29290
int Cut_CellTruthLookup( unsigned * pTruth, int nVars )Cut_CellTruthLookup940,32432

src/opt/cut/cutTruth.c,552
int nTotal = 0;nTotal37,1053
int nGood  = 0;nGood38,1069
int nEqual = 0;nEqual39,1085
static inline unsigned Cut_TruthPhase( Cut_Cut_t * pCut, Cut_Cut_t * pCut1 )Cut_TruthPhase56,1619
void Cut_TruthNCanonicize( Cut_Cut_t * pCut )Cut_TruthNCanonicize85,2415
void Cut_TruthComputeOld( Cut_Cut_t * pCut, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1, int fCompl0, int fCompl1 )Cut_TruthComputeOld126,3624
void Cut_TruthCompute( Cut_Man_t * p, Cut_Cut_t * pCut, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1, int fCompl0, int fCompl1 )Cut_TruthCompute177,5050

src/opt/cut/cutMerge.c,549
Cut_Cut_t * Cut_CutMergeTwo2( Cut_Man_t * p, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1 )Cut_CutMergeTwo245,1286
Cut_Cut_t * Cut_CutMergeTwo( Cut_Man_t * p, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1 )Cut_CutMergeTwo170,4959
Cut_Cut_t * Cut_CutMergeTwo3( Cut_Man_t * p, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1 )Cut_CutMergeTwo3277,7852
Cut_Cut_t * Cut_CutMergeTwo4( Cut_Man_t * p, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1 )Cut_CutMergeTwo4384,10766
Cut_Cut_t * Cut_CutMergeTwo5( Cut_Man_t * p, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1 )Cut_CutMergeTwo5479,13635

src/opt/cut/cutCut.c,977
Cut_Cut_t * Cut_CutAlloc( Cut_Man_t * p )Cut_CutAlloc45,1275
void Cut_CutRecycle( Cut_Man_t * p, Cut_Cut_t * pCut )Cut_CutRecycle72,1990
int Cut_CutCompare( Cut_Cut_t * pCut1, Cut_Cut_t * pCut2 )Cut_CutCompare92,2457
Cut_Cut_t * Cut_CutDupList( Cut_Man_t * p, Cut_Cut_t * pList )Cut_CutDupList120,3134
void Cut_CutRecycleList( Cut_Man_t * p, Cut_Cut_t * pList )Cut_CutRecycleList148,3850
int Cut_CutCountList( Cut_Cut_t * pList )Cut_CutCountList166,4330
Cut_Cut_t * Cut_CutMergeLists( Cut_Cut_t * pList1, Cut_Cut_t * pList2 )Cut_CutMergeLists185,4750
void Cut_CutNumberList( Cut_Cut_t * pList )Cut_CutNumberList219,5556
Cut_Cut_t * Cut_CutCreateTriv( Cut_Man_t * p, int Node )Cut_CutCreateTriv238,5964
void Cut_CutPrint( Cut_Cut_t * pCut, int fSeq )Cut_CutPrint276,6915
void Cut_CutPrintList( Cut_Cut_t * pList, int fSeq )Cut_CutPrintList308,7730
void Cut_CutPrintMerge( Cut_Cut_t * pCut, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1 )Cut_CutPrintMerge326,8197

src/opt/cut/cutList.h,826
#define ABC__opt__cut__cutList_hABC__opt__cut__cutList_h22,564
typedef struct Cut_ListStruct_t_         Cut_List_t;Cut_List_t40,1288
struct Cut_ListStruct_t_Cut_ListStruct_t_41,1341
    Cut_Cut_t *  pHead[CUT_SIZE_MAX+1];pHead43,1368
    Cut_Cut_t ** ppTail[CUT_SIZE_MAX+1];ppTail44,1408
static inline void Cut_ListStart( Cut_List_t * p )Cut_ListStart66,2146
static inline void Cut_ListAdd( Cut_List_t * p, Cut_Cut_t * pCut )Cut_ListAdd87,2592
static inline void Cut_ListAdd2( Cut_List_t * p, Cut_Cut_t * pCut )Cut_ListAdd2105,3099
static inline void Cut_ListDerive( Cut_List_t * p, Cut_Cut_t * pList )Cut_ListDerive140,4135
static inline void Cut_ListAddList( Cut_List_t * pOld, Cut_List_t * pNew )Cut_ListAddList168,4898
static inline Cut_Cut_t * Cut_ListFinish( Cut_List_t * p )Cut_ListFinish191,5477

src/opt/cut/cutExpand.c,262
#define CUT_CELL_MVAR CUT_CELL_MVAR30,821
static inline unsigned Cut_TruthPhase( Cut_Cut_t * pCut, Cut_Cut_t * pCut1 )Cut_TruthPhase47,1364
void Cut_TruthCompose( Cut_Cut_t * pCutF, int Node, Cut_Cut_t * pCutT, Cut_Cut_t * pCutRes )Cut_TruthCompose81,2428

src/opt/cut/cutApi.c,807
Cut_Cut_t * Cut_NodeReadCutsNew( Cut_Man_t * p, int Node )Cut_NodeReadCutsNew45,1304
Cut_Cut_t * Cut_NodeReadCutsOld( Cut_Man_t * p, int Node )Cut_NodeReadCutsOld63,1767
Cut_Cut_t * Cut_NodeReadCutsTemp( Cut_Man_t * p, int Node )Cut_NodeReadCutsTemp80,2212
void Cut_NodeWriteCutsNew( Cut_Man_t * p, int Node, Cut_Cut_t * pList )Cut_NodeWriteCutsNew97,2660
void Cut_NodeWriteCutsOld( Cut_Man_t * p, int Node, Cut_Cut_t * pList )Cut_NodeWriteCutsOld113,3069
void Cut_NodeWriteCutsTemp( Cut_Man_t * p, int Node, Cut_Cut_t * pList )Cut_NodeWriteCutsTemp129,3478
void Cut_NodeSetTriv( Cut_Man_t * p, int Node )Cut_NodeSetTriv145,3876
void Cut_NodeTryDroppingCuts( Cut_Man_t * p, int Node )Cut_NodeTryDroppingCuts162,4330
void Cut_NodeFreeCuts( Cut_Man_t * p, int Node )Cut_NodeFreeCuts184,4905

src/opt/cut/cut.h,3834
#define ABC__opt__cut__cut_hABC__opt__cut__cut_h22,537
#define CUT_SIZE_MIN CUT_SIZE_MIN38,1039
#define CUT_SIZE_MAX CUT_SIZE_MAX39,1117
#define CUT_SHIFT CUT_SHIFT41,1196
#define CUT_MASK CUT_MASK42,1292
typedef struct Cut_ManStruct_t_         Cut_Man_t;Cut_Man_t48,1587
typedef struct Cut_OracleStruct_t_      Cut_Oracle_t;Cut_Oracle_t49,1638
typedef struct Cut_CutStruct_t_         Cut_Cut_t;Cut_Cut_t50,1692
typedef struct Cut_ParamsStruct_t_      Cut_Params_t;Cut_Params_t51,1743
struct Cut_ParamsStruct_t_Cut_ParamsStruct_t_53,1798
    int                nVarsMax;          // the max cut size ("k" of the k-feasible cuts)nVarsMax55,1827
    int                nKeepMax;          // the max number of cuts kept at a nodenKeepMax56,1918
    int                nIdsMax;           // the max number of IDs of cut objectsnIdsMax57,2001
    int                nBitShift;         // the number of bits used for the latch counter of an edgenBitShift58,2083
    int                nCutSet;           // the number of nodes in the cut setnCutSet59,2185
    int                fTruth;            // compute truth tablesfTruth60,2265
    int                fFilter;           // filter dominated cutsfFilter61,2331
    int                fSeq;              // compute sequential cutsfSeq62,2398
    int                fDrop;             // drop cuts on the flyfDrop63,2467
    int                fDag;              // compute only DAG cutsfDag64,2533
    int                fTree;             // compute only tree cutsfTree65,2600
    int                fGlobal;           // compute only global cutsfGlobal66,2668
    int                fLocal;            // compute only local cutsfLocal67,2738
    int                fRecord;           // record the cut computation flowfRecord68,2807
    int                fRecordAig;        // record the cut functionsfRecordAig69,2884
    int                fFancy;            // perform fancy computationsfFancy70,2954
    int                fMap;              // computes delay of FPGA mapping with cutsfMap71,3026
    int                fAdjust;           // removed useless fanouts of XORs/MUXesfAdjust72,3112
    int                fNpnSave;          // enables dumping 6-input truth tablesfNpnSave73,3195
    int                fVerbose;          // the verbosiness flagfVerbose74,3277
struct Cut_CutStruct_t_Cut_CutStruct_t_77,3347
    unsigned           Num0       : 11;   // temporary numberNum079,3373
    unsigned           Num1       : 11;   // temporary numberNum180,3435
    unsigned           fSimul     :  1;   // the value of cut's output at 000.. patternfSimul81,3497
    unsigned           fCompl     :  1;   // the cut is complementedfCompl82,3585
    unsigned           nVarsMax   :  4;   // the max number of vars [4-6]nVarsMax83,3654
    unsigned           nLeaves    :  4;   // the number of leaves [4-6]nLeaves84,3728
    unsigned           uSign;             // the signatureuSign85,3800
    unsigned           uCanon0;           // the canonical form uCanon086,3859
    unsigned           uCanon1;           // the canonical form uCanon187,3924
    Cut_Cut_t *        pNext;             // the next cut in the listpNext88,3989
    int                pLeaves[0];        // the array of leavespLeaves89,4059
static inline int        Cut_CutReadLeaveNum( Cut_Cut_t * p )  {  return p->nLeaves;   }Cut_CutReadLeaveNum92,4128
static inline int *      Cut_CutReadLeaves( Cut_Cut_t * p )    {  return p->pLeaves;   }Cut_CutReadLeaves93,4217
static inline unsigned * Cut_CutReadTruth( Cut_Cut_t * p )     {  return (unsigned *)(p->pLeaves + p->nVarsMax); }Cut_CutReadTruth94,4306
static inline void       Cut_CutWriteTruth( Cut_Cut_t * p, unsigned * puTruth )  { Cut_CutWriteTruth95,4421

src/opt/cut/cutOracle.c,1783
struct Cut_OracleStruct_t_Cut_OracleStruct_t_30,824
    Cut_Params_t *     pParams;pParams33,890
    Vec_Int_t *        vFanCounts;vFanCounts34,922
    int                fSimul;fSimul35,957
    Vec_Ptr_t *        vCutsNew;vCutsNew37,1012
    Vec_Ptr_t *        vCuts0;vCuts038,1045
    Vec_Ptr_t *        vCuts1;vCuts139,1076
    Vec_Int_t *        vNodeCuts;vNodeCuts41,1127
    Vec_Int_t *        vNodeStarts;vNodeStarts42,1161
    Vec_Int_t *        vCutPairs;vCutPairs43,1197
    Extra_MmFixed_t *  pMmCuts;pMmCuts45,1256
    int                EntrySize;EntrySize46,1288
    int                nTruthWords;nTruthWords47,1322
    abctime            timeTotal;timeTotal49,1371
    int                nCuts;nCuts50,1405
    int                nCutsTriv;nCutsTriv51,1435
Cut_Oracle_t * Cut_OracleStart( Cut_Man_t * pMan )Cut_OracleStart73,2156
void Cut_OracleStop( Cut_Oracle_t * p )Cut_OracleStop127,3797
void Cut_OracleSetFanoutCounts( Cut_Oracle_t * p, Vec_Int_t * vFanCounts )Cut_OracleSetFanoutCounts160,4775
int Cut_OracleReadDrop( Cut_Oracle_t * p )Cut_OracleReadDrop176,5121
void Cut_OracleNodeSetTriv( Cut_Oracle_t * p, int Node )Cut_OracleNodeSetTriv192,5467
Cut_Cut_t * Cut_CutStart( Cut_Oracle_t * p )Cut_CutStart211,5906
Cut_Cut_t * Cut_CutTriv( Cut_Oracle_t * p, int Node )Cut_CutTriv234,6475
Cut_Cut_t * Cut_CutMerge( Cut_Oracle_t * p, Cut_Cut_t * pCut0, Cut_Cut_t * pCut1 )Cut_CutMerge262,7121
Cut_Cut_t * Cut_OracleComputeCuts( Cut_Oracle_t * p, int Node, int Node0, int Node1, int fCompl0, int fCompl1 )Cut_OracleComputeCuts320,8685
void Cut_OracleFreeCuts( Cut_Oracle_t * p, int Node )Cut_OracleFreeCuts385,10847
void Cut_OracleTryDroppingCuts( Cut_Oracle_t * p, int Node )Cut_OracleTryDroppingCuts407,11494

src/opt/rwr/rwrPrint.c,524
void Rwr_Trav2_rec( Rwr_Man_t * p, Rwr_Node_t * pNode, int * pVolume )Rwr_Trav2_rec45,1242
void Rwr_GetBushVolume( Rwr_Man_t * p, int Entry, int * pVolume, int * pnFuncs )Rwr_GetBushVolume66,1826
int Rwr_GetBushSumOfVolumes( Rwr_Man_t * p, int Entry )Rwr_GetBushSumOfVolumes94,2541
void Rwr_NodePrint_rec( FILE * pFile, Rwr_Node_t * pNode )Rwr_NodePrint_rec121,3222
void Rwr_NodePrint( FILE * pFile, Rwr_Man_t * p, Rwr_Node_t * pNode )Rwr_NodePrint208,5244
void Rwr_ManPrint( Rwr_Man_t * p )Rwr_ManPrint237,6104

src/opt/rwr/rwrMan.c,767
Rwr_Man_t * Rwr_ManStart( int  fPrecompute )Rwr_ManStart47,1308
void Rwr_ManStop( Rwr_Man_t * p )Rwr_ManStop109,3260
void Rwr_ManPrintStats( Rwr_Man_t * p )Rwr_ManPrintStats143,4156
void Rwr_ManPrintStatsFile( Rwr_Man_t * p )Rwr_ManPrintStatsFile190,5799
void * Rwr_ManReadDecs( Rwr_Man_t * p )Rwr_ManReadDecs213,6408
Vec_Ptr_t * Rwr_ManReadLeaves( Rwr_Man_t * p )Rwr_ManReadLeaves229,6739
int Rwr_ManReadCompl( Rwr_Man_t * p )Rwr_ManReadCompl245,7078
void Rwr_ManAddTimeCuts( Rwr_Man_t * p, abctime Time )Rwr_ManAddTimeCuts261,7407
void Rwr_ManAddTimeUpdate( Rwr_Man_t * p, abctime Time )Rwr_ManAddTimeUpdate277,7755
void Rwr_ManAddTimeTotal( Rwr_Man_t * p, abctime Time )Rwr_ManAddTimeTotal293,8108
void Rwr_Precompute()Rwr_Precompute310,8456

src/opt/rwr/rwrEva.c,1111
int Rwr_NodeRewrite( Rwr_Man_t * p, Cut_Man_t * pManCut, Abc_Obj_t * pNode, int fUpdateLevel, int fUseZeros, int fPlaceEnable )Rwr_NodeRewrite59,2299
Dec_Graph_t * Rwr_CutEvaluate( Rwr_Man_t * p, Abc_Obj_t * pRoot, Cut_Cut_t * pCut, Vec_Ptr_t * vFaninsCur, int nNodesSaved, int LevelMax, int * pGainBest, int fPlaceEnable )Rwr_CutEvaluate253,8519
void Rwr_CutIsBoolean_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vLeaves, int fMarkA )Rwr_CutIsBoolean_rec353,11983
int Rwr_CutIsBoolean( Abc_Obj_t * pObj, Vec_Ptr_t * vLeaves )Rwr_CutIsBoolean379,12754
void Rwr_CutCountNumNodes_rec( Abc_Obj_t * pObj, Cut_Cut_t * pCut, Vec_Ptr_t * vNodes )Rwr_CutCountNumNodes_rec412,13669
int Rwr_CutCountNumNodes( Abc_Obj_t * pObj, Cut_Cut_t * pCut )Rwr_CutCountNumNodes449,14709
int Rwr_NodeGetDepth_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vLeaves )Rwr_NodeGetDepth_rec478,15465
void Rwr_ScoresClean( Rwr_Man_t * p )Rwr_ScoresClean504,16172
static int Gains[222];Gains517,16521
int Rwr_ScoresCompare( int * pNum1, int * pNum2 )Rwr_ScoresCompare530,16779
void Rwr_ScoresReport( Rwr_Man_t * p )Rwr_ScoresReport550,17201

src/opt/rwr/rwrExp.c,1319
typedef struct Rwr_Man4_t_ Rwr_Man4_t;Rwr_Man4_t30,816
struct Rwr_Man4_t_Rwr_Man4_t_31,855
    int                nFuncs;           // the number of four-var functionsnFuncs34,900
    unsigned short *   puCanons;         // canonical formspuCanons35,977
    int *              pnCounts;         // the counters of functions in each classpnCounts36,1037
    int                nConsidered;      // the number of nodes considerednConsidered37,1121
    int                nClasses;         // the number of NN classesnClasses38,1196
typedef struct Rwr_Man5_t_ Rwr_Man5_t;Rwr_Man5_t41,1269
struct Rwr_Man5_t_Rwr_Man5_t_42,1308
    stmm_table *       tTableNN;         // the NN canonical formstTableNN45,1353
    stmm_table *       tTableNPN;        // the NPN canonical formstTableNPN46,1420
static Rwr_Man4_t * s_pManRwrExp4 = NULL;s_pManRwrExp449,1492
static Rwr_Man5_t * s_pManRwrExp5 = NULL;s_pManRwrExp550,1534
void Rwt_Man4ExploreStart()Rwt_Man4ExploreStart67,2090
void Rwt_Man4ExploreCount( unsigned uTruth )Rwt_Man4ExploreCount93,2801
void Rwt_Man4ExplorePrint()Rwt_Man4ExplorePrint110,3246
void Rwt_Man5ExploreStart()Rwt_Man5ExploreStart178,5473
void Rwt_Man5ExploreCount( unsigned uTruth )Rwt_Man5ExploreCount202,6132
void Rwt_Man5ExplorePrint()Rwt_Man5ExplorePrint221,6644

src/opt/rwr/rwrDec.c,282
void Rwr_ManPreprocess( Rwr_Man_t * p )Rwr_ManPreprocess49,1500
Dec_Graph_t * Rwr_NodePreprocess( Rwr_Man_t * p, Rwr_Node_t * pNode )Rwr_NodePreprocess91,2940
Dec_Edge_t Rwr_TravCollect_rec( Rwr_Man_t * p, Rwr_Node_t * pNode, Dec_Graph_t * pGraph )Rwr_TravCollect_rec122,3796

src/opt/rwr/rwrLib.c,785
void Rwr_ManPrecompute( Rwr_Man_t * p )Rwr_ManPrecompute48,1460
Rwr_Node_t * Rwr_ManTryNode( Rwr_Man_t * p, Rwr_Node_t * p0, Rwr_Node_t * p1, int fExor, int Level, int Volume )Rwr_ManTryNode135,4412
Rwr_Node_t * Rwr_ManAddNode( Rwr_Man_t * p, Rwr_Node_t * p0, Rwr_Node_t * p1, int fExor, int Level, int Volume )Rwr_ManAddNode206,6906
Rwr_Node_t * Rwr_ManAddVar( Rwr_Man_t * p, unsigned uTruth, int fPrecompute )Rwr_ManAddVar253,8311
void Rwr_MarkUsed_rec( Rwr_Man_t * p, Rwr_Node_t * pNode )Rwr_MarkUsed_rec286,9117
void Rwr_Trav_rec( Rwr_Man_t * p, Rwr_Node_t * pNode, int * pVolume )Rwr_Trav_rec307,9658
int Rwr_ManNodeVolume( Rwr_Man_t * p, Rwr_Node_t * p0, Rwr_Node_t * p1 )Rwr_ManNodeVolume330,10262
void Rwr_ManIncTravId( Rwr_Man_t * p )Rwr_ManIncTravId350,10726

src/opt/rwr/rwrTemp.c,225
static int pTruths[13719];pTruths30,773
static int pFreqs[13719];pFreqs31,800
static int pPerm[13719];pPerm32,826
int Rwr_TempCompare( int * pNum1, int * pNum2 )Rwr_TempCompare49,1307
void Rwr_Temp()Rwr_Temp71,1761

src/opt/rwr/rwr.h,4517
#define ABC__opt__rwr__rwr_hABC__opt__rwr__rwr_h22,538
#define RWR_LIMIT RWR_LIMIT45,1313
typedef struct Rwr_Man_t_   Rwr_Man_t;Rwr_Man_t47,1359
typedef struct Rwr_Node_t_  Rwr_Node_t;Rwr_Node_t48,1398
struct Rwr_Man_t_Rwr_Man_t_50,1439
    int                nFuncs;           // number of four var functionsnFuncs53,1483
    unsigned short *   puCanons;         // canonical formspuCanons54,1556
    char *             pPhases;          // canonical phasespPhases55,1616
    char *             pPerms;           // canonical permutationspPerms56,1677
    unsigned char *    pMap;             // mapping of functions into class numberspMap57,1744
    unsigned short *   pMapInv;          // mapping of classes into functionspMapInv58,1828
    char *             pPractical;       // practical NPN classespPractical59,1906
    char **            pPerms4;          // four-var permutationspPerms460,1972
    Vec_Ptr_t *        vForest;          // all the nodesvForest62,2056
    Rwr_Node_t **      pTable;           // the hash table of nodes by their canonical formpTable63,2114
    Vec_Vec_t *        vClasses;         // the nodes of the equivalence classesvClasses64,2206
    Extra_MmFixed_t *  pMmNode;          // memory for nodes and cutspMmNode65,2287
    int                nTravIds;         // the counter of traversal IDsnTravIds67,2386
    int                nConsidered;      // the number of nodes considerednConsidered68,2459
    int                nAdded;           // the number of nodes added to listsnAdded69,2534
    int                nClasses;         // the number of NN classesnClasses70,2613
    int                fCompl;           // indicates if the output of FF should be complementedfCompl72,2715
    void *             pGraph;           // the decomposition tree (temporary)pGraph73,2812
    Vec_Ptr_t *        vFanins;          // the fanins array (temporary)vFanins74,2891
    Vec_Ptr_t *        vFaninsCur;       // the fanins array (temporary)vFaninsCur75,2964
    Vec_Int_t *        vLevNums;         // the array of levels (temporary)vLevNums76,3037
    Vec_Ptr_t *        vNodesTemp;       // the nodes in MFFC (temporary)vNodesTemp77,3113
    int                nNodesConsidered;nNodesConsidered79,3210
    int                nNodesRewritten;nNodesRewritten80,3251
    int                nNodesGained;nNodesGained81,3291
    int                nNodesBeg;nNodesBeg82,3328
    int                nNodesEnd;nNodesEnd83,3362
    int                nScores[222];nScores84,3396
    int                nCutsGood;nCutsGood85,3433
    int                nCutsBad;nCutsBad86,3467
    int                nSubgraphs;nSubgraphs87,3500
    abctime            timeStart;timeStart89,3561
    abctime            timeCut;timeCut90,3595
    abctime            timeRes;timeRes91,3627
    abctime            timeEval;timeEval92,3659
    abctime            timeMffc;timeMffc93,3692
    abctime            timeUpdate;timeUpdate94,3725
    abctime            timeTotal;timeTotal95,3760
struct Rwr_Node_t_ // 24 bytesRwr_Node_t_98,3798
    int                Id;               // ID Id100,3831
    int                TravId;           // traversal IDTravId101,3879
    short              nScore;nScore102,3936
    short              nGain;nGain103,3967
    short              nAdded;nAdded104,3997
    unsigned           uTruth : 16;      // truth tableuTruth105,4028
    unsigned           Volume :  8;      // volumeVolume106,4084
    unsigned           Level  :  6;      // levelLevel107,4135
    unsigned           fUsed  :  1;      // markfUsed108,4185
    unsigned           fExor  :  1;      // markfExor109,4234
    Rwr_Node_t *       p0;               // first childp0110,4283
    Rwr_Node_t *       p1;               // second childp1111,4339
    Rwr_Node_t *       pNext;            // next in the tablepNext112,4396
static inline int          Rwr_IsComplement( Rwr_Node_t * p )    { return (int )(((ABC_PTRUINT_T)p) & 01);           }Rwr_IsComplement116,4505
static inline Rwr_Node_t * Rwr_Regular( Rwr_Node_t * p )         { return (Rwr_Node_t *)((ABC_PTRUINT_T)(p) & ~01);  }Rwr_Regular117,4624
static inline Rwr_Node_t * Rwr_Not( Rwr_Node_t * p )             { return (Rwr_Node_t *)((ABC_PTRUINT_T)(p) ^  01);  }Rwr_Not118,4743
static inline Rwr_Node_t * Rwr_NotCond( Rwr_Node_t * p, int c )  { return (Rwr_Node_t *)((ABC_PTRUINT_T)(p) ^ (c));  }Rwr_NotCond119,4862

src/opt/rwr/rwrUtil.c,654
static unsigned short s_RwrPracticalClasses[] =s_RwrPracticalClasses33,959
static unsigned short s_RwtAigSubgraphs[] =s_RwtAigSubgraphs50,2152
void Rwr_ManWriteToArray( Rwr_Man_t * p )Rwr_ManWriteToArray426,30810
void Rwr_ManLoadFromArray( Rwr_Man_t * p, int fVerbose )Rwr_ManLoadFromArray472,32284
void Rwr_ManWriteToFile( Rwr_Man_t * p, char * pFileName )Rwr_ManWriteToFile524,33900
void Rwr_ManLoadFromFile( Rwr_Man_t * p, char * pFileName )Rwr_ManLoadFromFile562,35121
void Rwr_ListAddToTail( Rwr_Node_t ** ppList, Rwr_Node_t * pNode )Rwr_ListAddToTail619,37073
char * Rwr_ManGetPractical( Rwr_Man_t * p )Rwr_ManGetPractical640,37588

src/opt/rwt/rwtUtil.c,907
static unsigned short s_RwtAigSubgraphs[] = s_RwtAigSubgraphs31,797
static unsigned short s_RwtPracticalClasses[] =s_RwtPracticalClasses393,29348
void Rwt_ListAddToTail( Rwt_Node_t ** ppList, Rwt_Node_t * pNode )Rwt_ListAddToTail425,31017
Rwt_Node_t * Rwt_ManAddVar( Rwt_Man_t * p, unsigned uTruth, int fPrecompute )Rwt_ManAddVar446,31506
Rwt_Node_t * Rwt_ManAddNode( Rwt_Man_t * p, Rwt_Node_t * p0, Rwt_Node_t * p1, int fExor, int Level, int Volume )Rwt_ManAddNode477,32287
void Rwt_Trav_rec( Rwt_Man_t * p, Rwt_Node_t * pNode, int * pVolume )Rwt_Trav_rec524,33672
void Rwt_ManIncTravId( Rwt_Man_t * p )Rwt_ManIncTravId547,34261
int Rwt_ManNodeVolume( Rwt_Man_t * p, Rwt_Node_t * p0, Rwt_Node_t * p1 )Rwt_ManNodeVolume569,34737
void Rwt_ManLoadFromArray( Rwt_Man_t * p, int fVerbose )Rwt_ManLoadFromArray589,35183
char * Rwt_ManGetPractical( Rwt_Man_t * p )Rwt_ManGetPractical640,36798

src/opt/rwt/rwtDec.c,282
void Rwt_ManPreprocess( Rwt_Man_t * p )Rwt_ManPreprocess49,1502
Dec_Graph_t * Rwt_NodePreprocess( Rwt_Man_t * p, Rwt_Node_t * pNode )Rwt_NodePreprocess91,2936
Dec_Edge_t Rwt_TravCollect_rec( Rwt_Man_t * p, Rwt_Node_t * pNode, Dec_Graph_t * pGraph )Rwt_TravCollect_rec122,3792

src/opt/rwt/rwtMan.c,1103
static unsigned short * s_puCanons = NULL; s_puCanons31,803
static char *           s_pPhases = NULL; s_pPhases32,847
static char *           s_pPerms = NULL; s_pPerms33,890
static unsigned char *  s_pMap = NULL;s_pMap34,932
void Rwt_ManGlobalStart()Rwt_ManGlobalStart51,1460
void Rwt_ManGlobalStop()Rwt_ManGlobalStop68,1865
Rwt_Man_t * Rwt_ManStart( int fPrecompute )Rwt_ManStart87,2261
void Rwt_ManStop( Rwt_Man_t * p )Rwt_ManStop149,4163
void Rwt_ManPrintStats( Rwt_Man_t * p )Rwt_ManPrintStats183,5058
void Rwt_ManPrintStatsFile( Rwt_Man_t * p )Rwt_ManPrintStatsFile230,6679
void * Rwt_ManReadDecs( Rwt_Man_t * p )Rwt_ManReadDecs253,7288
Vec_Ptr_t * Rwt_ManReadLeaves( Rwt_Man_t * p )Rwt_ManReadLeaves269,7619
int Rwt_ManReadCompl( Rwt_Man_t * p )Rwt_ManReadCompl285,7958
void Rwt_ManAddTimeCuts( Rwt_Man_t * p, abctime Time )Rwt_ManAddTimeCuts301,8287
void Rwt_ManAddTimeUpdate( Rwt_Man_t * p, abctime Time )Rwt_ManAddTimeUpdate317,8635
void Rwt_ManAddTimeTotal( Rwt_Man_t * p, abctime Time )Rwt_ManAddTimeTotal333,8988
void Rwt_Precompute()Rwt_Precompute350,9336

src/opt/rwt/rwt.h,4582
#define ABC__aig__rwt__rwt_hABC__aig__rwt__rwt_h22,538
#define RWT_LIMIT RWT_LIMIT51,1424
#define RWT_MIN(RWT_MIN52,1469
#define RWT_MAX(RWT_MAX53,1520
typedef struct Rwt_Man_t_   Rwt_Man_t;Rwt_Man_t55,1572
typedef struct Rwt_Node_t_  Rwt_Node_t;Rwt_Node_t56,1611
struct Rwt_Man_t_Rwt_Man_t_58,1652
    int                nFuncs;           // number of four var functionsnFuncs61,1696
    unsigned short *   puCanons;         // canonical formspuCanons62,1769
    char *             pPhases;          // canonical phasespPhases63,1829
    char *             pPerms;           // canonical permutationspPerms64,1890
    unsigned char *    pMap;             // mapping of functions into class numberspMap65,1957
    unsigned short *   pMapInv;          // mapping of classes into functionspMapInv66,2041
    char *             pPractical;       // practical NPN classespPractical67,2119
    char **            pPerms4;          // four-var permutationspPerms468,2185
    Vec_Ptr_t *        vForest;          // all the nodesvForest70,2269
    Rwt_Node_t **      pTable;           // the hash table of nodes by their canonical formpTable71,2327
    Vec_Vec_t *        vClasses;         // the nodes of the equivalence classesvClasses72,2419
    Mem_Fixed_t *      pMmNode;          // memory for nodes and cutspMmNode73,2500
    int                nTravIds;         // the counter of traversal IDsnTravIds75,2599
    int                nConsidered;      // the number of nodes considerednConsidered76,2672
    int                nAdded;           // the number of nodes added to listsnAdded77,2747
    int                nClasses;         // the number of NN classesnClasses78,2826
    int                fCompl;           // indicates if the output of FF should be complementedfCompl80,2928
    void *             pCut;             // the decomposition tree (temporary)pCut81,3025
    void *             pGraph;           // the decomposition tree (temporary)pGraph82,3104
    char *             pPerm;            // permutation used for the best cutpPerm83,3183
    Vec_Ptr_t *        vFanins;          // the fanins array (temporary)vFanins84,3261
    Vec_Ptr_t *        vFaninsCur;       // the fanins array (temporary)vFaninsCur85,3334
    Vec_Int_t *        vLevNums;         // the array of levels (temporary)vLevNums86,3407
    Vec_Ptr_t *        vNodesTemp;       // the nodes in MFFC (temporary)vNodesTemp87,3483
    int                nNodesConsidered;nNodesConsidered89,3580
    int                nNodesRewritten;nNodesRewritten90,3621
    int                nNodesGained;nNodesGained91,3661
    int                nScores[222];nScores92,3698
    int                nCutsGood;nCutsGood93,3735
    int                nCutsBad;nCutsBad94,3769
    int                nSubgraphs;nSubgraphs95,3802
    abctime            timeStart;timeStart97,3863
    abctime            timeTruth;timeTruth98,3897
    abctime            timeCut;timeCut99,3931
    abctime            timeRes;timeRes100,3963
    abctime            timeEval;timeEval101,3995
    abctime            timeMffc;timeMffc102,4028
    abctime            timeUpdate;timeUpdate103,4061
    abctime            timeTotal;timeTotal104,4096
struct Rwt_Node_t_ // 24 bytesRwt_Node_t_107,4134
    int                Id;               // ID Id109,4167
    int                TravId;           // traversal IDTravId110,4215
    unsigned           uTruth : 16;      // truth tableuTruth111,4272
    unsigned           Volume :  8;      // volumeVolume112,4328
    unsigned           Level  :  6;      // levelLevel113,4379
    unsigned           fUsed  :  1;      // markfUsed114,4429
    unsigned           fExor  :  1;      // markfExor115,4478
    Rwt_Node_t *       p0;               // first childp0116,4527
    Rwt_Node_t *       p1;               // second childp1117,4583
    Rwt_Node_t *       pNext;            // next in the tablepNext118,4640
static inline int          Rwt_IsComplement( Rwt_Node_t * p )    { return (int)(((ABC_PTRUINT_T)p) & 01);            }Rwt_IsComplement122,4749
static inline Rwt_Node_t * Rwt_Regular( Rwt_Node_t * p )         { return (Rwt_Node_t *)((ABC_PTRUINT_T)(p) & ~01);  }Rwt_Regular123,4868
static inline Rwt_Node_t * Rwt_Not( Rwt_Node_t * p )             { return (Rwt_Node_t *)((ABC_PTRUINT_T)(p) ^  01);  }Rwt_Not124,4987
static inline Rwt_Node_t * Rwt_NotCond( Rwt_Node_t * p, int c )  { return (Rwt_Node_t *)((ABC_PTRUINT_T)(p) ^ (c));  }Rwt_NotCond125,5106

src/opt/fsim/fsimCore.c,189
void Fsim_ManSetDefaultParamsSim( Fsim_ParSim_t * p )Fsim_ManSetDefaultParamsSim45,1272
void Fsim_ManSetDefaultParamsSwitch( Fsim_ParSwitch_t * p )Fsim_ManSetDefaultParamsSwitch69,2066

src/opt/fsim/fsim.h,1436
#define ABC__aig__fsim__fsim_hABC__aig__fsim__fsim_h22,540
typedef struct Fsim_Man_t_ Fsim_Man_t;Fsim_Man_t42,1264
typedef struct Fsim_ParSim_t_ Fsim_ParSim_t;Fsim_ParSim_t45,1329
struct Fsim_ParSim_t_Fsim_ParSim_t_46,1374
    int             nWords;       // the number of machine wordsnWords49,1432
    int             nIters;       // the number of timeframesnIters50,1497
    int             TimeLimit;    // time limit in secondsTimeLimit51,1559
    int             fCheckMiter;  // check if miter outputs are non-zerofCheckMiter52,1618
    int             fVerbose;     // enables verbose outputfVerbose53,1691
    int             fCompressAig; // compresses internal datafCompressAig55,1778
typedef struct Fsim_ParSwitch_t_ Fsim_ParSwitch_t;Fsim_ParSwitch_t59,1879
struct Fsim_ParSwitch_t_Fsim_ParSwitch_t_60,1930
    int             nWords;       // the number of machine wordsnWords63,1991
    int             nIters;       // the number of timeframesnIters64,2056
    int             nPref;        // the number of first timeframes to skipnPref65,2118
    int             nRandPiNum;   // PI trans prob (0=1/2; 1=1/4; 2=1/8, etc)nRandPiNum66,2194
    int             fProbOne;     // collect probability of onefProbOne67,2272
    int             fProbTrans;   // collect probatility of switchingfProbTrans68,2336
    int             fVerbose;     // enables verbose outputfVerbose69,2406

src/opt/fsim/fsimSwitch.c,0

src/opt/fsim/fsimMan.c,280
int Fsim_ManCreate_rec( Fsim_Man_t * p, Aig_Obj_t * pObj )Fsim_ManCreate_rec45,1266
Fsim_Man_t * Fsim_ManCreate( Aig_Man_t * pAig )Fsim_ManCreate102,3056
void Fsim_ManDelete( Fsim_Man_t * p )Fsim_ManDelete169,5190
void Fsim_ManTest( Aig_Man_t * pAig )Fsim_ManTest198,5878

src/opt/fsim/fsimFront.c,624
static inline void Fsim_ManStoreNum( Fsim_Man_t * p, int Num )Fsim_ManStoreNum45,1226
static inline int Fsim_ManRestoreNum( Fsim_Man_t * p )Fsim_ManRestoreNum69,1747
static inline void Fsim_ManStoreObj( Fsim_Man_t * p, Fsim_Obj_t * pObj )Fsim_ManStoreObj89,2227
static inline int Fsim_ManRestoreObj( Fsim_Man_t * p, Fsim_Obj_t * pObj )Fsim_ManRestoreObj137,3719
static inline int Fsim_ManFrontFindNext( Fsim_Man_t * p, char * pFront )Fsim_ManFrontFindNext174,4736
void Fsim_ManVerifyFront( Fsim_Man_t * p )Fsim_ManVerifyFront202,5404
void Fsim_ManFront( Fsim_Man_t * p, int fCompressAig )Fsim_ManFront245,6772

src/opt/fsim/fsimTsim.c,2147
#define FSIM_ZER FSIM_ZER30,780
#define FSIM_ONE FSIM_ONE31,799
#define FSIM_UND FSIM_UND32,818
static inline int Aig_XsimNotCond( int Value, int fCompl )   Aig_XsimNotCond34,838
static inline int Aig_XsimAndCond( int Value0, int fCompl0, int Value1, int fCompl1 )   Aig_XsimAndCond42,1043
static inline int Fsim_ManTerSimInfoGet( unsigned * pInfo, int i )Fsim_ManTerSimInfoGet51,1333
static inline void Fsim_ManTerSimInfoSet( unsigned * pInfo, int i, int Value )Fsim_ManTerSimInfoSet55,1455
static inline unsigned * Fsim_ManTerStateNext( unsigned * pState, int nWords )                      { return *((unsigned **)(pState + nWords));  }Fsim_ManTerStateNext62,1690
static inline void       Fsim_ManTerStateSetNext( unsigned * pState, int nWords, unsigned * pNext ) { *((unsigned **)(pState + nWords)) = pNext; }Fsim_ManTerStateSetNext63,1837
static inline void Fsim_ManTerSimulateCi( Fsim_Man_t * p, int iNode, int iCi )Fsim_ManTerSimulateCi80,2439
static inline void Fsim_ManTerSimulateCo( Fsim_Man_t * p, int iCo, int iFan0 )Fsim_ManTerSimulateCo96,2850
static inline void Fsim_ManTerSimulateNode( Fsim_Man_t * p, int iNode, int iFan0, int iFan1 )Fsim_ManTerSimulateNode113,3343
static inline void Fsim_ManTerSimInfoInit( Fsim_Man_t * p )Fsim_ManTerSimInfoInit131,3960
static inline void Fsim_ManTerSimInfoTransfer( Fsim_Man_t * p )Fsim_ManTerSimInfoTransfer154,4520
int Fsim_ManTerStateHash( unsigned * pState, int nWords, int nTableSize )Fsim_ManTerStateHash178,5199
int Fsim_ManTerStateLookup( unsigned * pState, int nWords, unsigned ** pBins, int nBins )Fsim_ManTerStateLookup214,6628
void Fsim_ManTerStateInsert( unsigned * pState, int nWords, unsigned ** pBins, int nBins )Fsim_ManTerStateInsert236,7273
unsigned * Fsim_ManTerStateCreate( unsigned * pInfo, int nPis, int nCis, int nWords )Fsim_ManTerStateCreate255,7855
void Fsim_ManTerStatePrint( unsigned * pState, int nRegs )Fsim_ManTerStatePrint276,8469
static inline void Fsim_ManTerSimulateRound( Fsim_Man_t * p )Fsim_ManTerSimulateRound306,9256
Vec_Ptr_t * Fsim_ManTerSimulate( Aig_Man_t * pAig, int fVerbose )Fsim_ManTerSimulate339,10163

src/opt/fsim/fsimSim.c,1854
static inline void Fsim_ManSimInfoRandom( Fsim_Man_t * p, unsigned * pInfo )Fsim_ManSimInfoRandom46,1262
static inline void Fsim_ManSimInfoZero( Fsim_Man_t * p, unsigned * pInfo )Fsim_ManSimInfoZero64,1669
static inline int Fsim_ManSimInfoIsZero( Fsim_Man_t * p, unsigned * pInfo )Fsim_ManSimInfoIsZero82,2104
static inline void Fsim_ManSimInfoOne( Fsim_Man_t * p, unsigned * pInfo )Fsim_ManSimInfoOne102,2574
static inline void Fsim_ManSimInfoCopy( Fsim_Man_t * p, unsigned * pInfo, unsigned * pInfo0 )Fsim_ManSimInfoCopy120,2962
static inline void Fsim_ManSimulateCi( Fsim_Man_t * p, int iNode, int iCi )Fsim_ManSimulateCi138,3377
static inline void Fsim_ManSimulateCo( Fsim_Man_t * p, int iCo, int iFan0 )Fsim_ManSimulateCo158,3886
static inline void Fsim_ManSimulateNode( Fsim_Man_t * p, int iNode, int iFan0, int iFan1 )Fsim_ManSimulateNode182,4573
static inline void Fsim_ManSimInfoInit( Fsim_Man_t * p )Fsim_ManSimInfoInit213,5758
static inline void Fsim_ManSimInfoTransfer( Fsim_Man_t * p )Fsim_ManSimInfoTransfer236,6305
static inline int Fsim_ManRestoreNum( Fsim_Man_t * p )Fsim_ManRestoreNum259,6887
static inline int Fsim_ManRestoreObj( Fsim_Man_t * p, Fsim_Obj_t * pObj )Fsim_ManRestoreObj279,7367
static inline void Fsim_ManSimulateRound2( Fsim_Man_t * p )Fsim_ManSimulateRound2316,8361
static inline void Fsim_ManSimulateRound( Fsim_Man_t * p )Fsim_ManSimulateRound346,9201
void Fsim_ManSimulateRoundTest( Fsim_Man_t * p )Fsim_ManSimulateRoundTest384,10184
static inline int Fsim_ManCheckPos( Fsim_Man_t * p, int * piPo, int * piPat )Fsim_ManCheckPos406,10704
Abc_Cex_t * Fsim_ManGenerateCounter( Aig_Man_t * pAig, int iFrame, int iOut, int nWords, int iPat, Vec_Int_t * vCis2Ids )Fsim_ManGenerateCounter433,11310
int Fsim_ManSimulate( Aig_Man_t * pAig, Fsim_ParSim_t * pPars )Fsim_ManSimulate471,12428

src/opt/fsim/fsimInt.h,3916
#define ABC__aig__fsim__fsimInt_hABC__aig__fsim__fsimInt_h22,549
typedef struct Fsim_Obj_t_ Fsim_Obj_t;Fsim_Obj_t46,1343
struct Fsim_Obj_t_Fsim_Obj_t_47,1382
    int             iNode;        // the node IDiNode49,1403
    int             iFan0;        // the first faniniFan050,1452
    int             iFan1;        // the second faniniFan151,1505
struct Fsim_Man_t_Fsim_Man_t_55,1601
    Aig_Man_t *     pAig;         // the AIG to be used for simulationpAig58,1640
    int             nWords;       // the number of simulation wordsnWords59,1711
    int             nPis;         // the number of primary inputsnPis61,1805
    int             nPos;         // the number of primary outputsnPos62,1871
    int             nCis;         // the number of combinational inputsnCis63,1938
    int             nCos;         // the number of combinational outputsnCos64,2010
    int             nNodes;       // the number of internal nodesnNodes65,2083
    int             nObjs;        // nCis + nNodes + nCos + 2nObjs66,2149
    int *           pFans0;       // fanin0 for all objectspFans067,2211
    int *           pFans1;       // fanin1 for all objectspFans168,2271
    int *           pRefs;        // reference counter for each nodepRefs69,2331
    int *           pRefsCopy;    // reference counter for each nodepRefsCopy70,2400
    Vec_Int_t *     vCis2Ids;     // mapping of CIs into their PI idsvCis2Ids71,2469
    Vec_Int_t *     vLos;         // register outputsvLos72,2539
    Vec_Int_t *     vLis;         // register inputsvLis73,2593
    int             nCrossCut;    // temporary cross-cut variable nCrossCut75,2678
    int             nCrossCutMax; // maximum cross-cut variablenCrossCutMax76,2745
    int             nFront;       // the size of frontiernFront77,2809
    int             nDataAig;     // the length of allocated datanDataAig79,2901
    unsigned char * pDataAig;     // AIG representationpDataAig80,2967
    unsigned char * pDataCur;     // AIG representation (current position)pDataCur81,3023
    int             iNodePrev;    // previous extracted valueiNodePrev82,3098
    int             iNumber;      // the number of the last objectiNumber83,3160
    Fsim_Obj_t      Obj;          // current objectObj84,3227
    int *           pDataAig2;    // temporary representationpDataAig286,3315
    int *           pDataCur2;    // AIG representation (current position)pDataCur287,3377
    unsigned *      pDataSim;     // simulation datapDataSim89,3482
    unsigned *      pDataSimCis;  // simulation data for CIspDataSimCis90,3535
    unsigned *      pDataSimCos;  // simulation data for COspDataSimCos91,3596
    int *           pData1;pData193,3682
    int *           pData2;pData294,3710
static inline unsigned * Fsim_SimData( Fsim_Man_t * p, int i )    { return p->pDataSim + i * p->nWords;    }Fsim_SimData97,3742
static inline unsigned * Fsim_SimDataCi( Fsim_Man_t * p, int i )  { return p->pDataSimCis + i * p->nWords; }Fsim_SimDataCi98,3851
static inline unsigned * Fsim_SimDataCo( Fsim_Man_t * p, int i )  { return p->pDataSimCos + i * p->nWords; }Fsim_SimDataCo99,3960
static inline int  Fsim_Var2Lit( int Var, int fCompl )  { return Var + Var + fCompl; }Fsim_Var2Lit105,4290
static inline int  Fsim_Lit2Var( int Lit )              { return Lit >> 1;           }Fsim_Lit2Var106,4377
static inline int  Fsim_LitIsCompl( int Lit )           { return Lit & 1;            }Fsim_LitIsCompl107,4464
static inline int  Fsim_LitNot( int Lit )               { return Lit ^ 1;            }Fsim_LitNot108,4551
static inline int  Fsim_LitNotCond( int Lit, int c )    { return Lit ^ (int)(c > 0); }Fsim_LitNotCond109,4638
static inline int  Fsim_LitRegular( int Lit )           { return Lit & ~01;          }Fsim_LitRegular110,4725
#define Fsim_ManForEachObj(Fsim_ManForEachObj112,4813

src/opt/dau/dauArray.c,1106
typedef struct Dau_Dsd_t_ Dau_Dsd_t;Dau_Dsd_t29,779
struct Dau_Dsd_t_Dau_Dsd_t_30,816
    unsigned       iVar    :   5;  // variableiVar32,836
    unsigned       nFans   :   5;  // fanin countnFans33,883
    unsigned       Depth   :   5;  // tree depthDepth34,933
    unsigned       Offset  :   5;  // the diff between this and other nodeOffset35,982
    unsigned       Data    :   5;  // user dataData36,1057
    unsigned       Type    :   3;  // node typeType37,1105
    unsigned       fCompl  :   1;  // the complemented attributefCompl38,1153
    unsigned       fUnused :   1;  // this vertice is unusedfUnused39,1218
static inline void Dau_DsdClean( Dau_Dsd_t * p ) { *((int *)p) = 0; }Dau_DsdClean42,1283
int Dau_DsdCountAnd( Dau_Dsd_t * p )Dau_DsdCountAnd48,1575
int Dau_DsdConstruct( char * pDsd, Dau_Dsd_t * pStore )Dau_DsdConstruct76,2264
void Dau_DsdPrint( Dau_Dsd_t * p )Dau_DsdPrint140,3974
void Dau_DsdDepth( Dau_Dsd_t * p )Dau_DsdDepth175,4885
void Dau_DsdRemoveUseless( Dau_Dsd_t * p )Dau_DsdRemoveUseless193,5277
void Dau_DsdTest22()Dau_DsdTest22234,6380

src/opt/dau/dauNpn2.c,5807
typedef struct Dtt_Man_t_ Dtt_Man_t;Dtt_Man_t32,876
struct Dtt_Man_t_Dtt_Man_t_33,913
    int            nVars;          // variable numbernVars35,933
    int            nPerms;         // number of permutationsnPerms36,987
    int            nComps;         // number of complementationsnComps37,1048
    int *          pPerms;         // permutationspPerms38,1113
    int *          pComps;         // complementationspComps39,1164
    word *         pPres;          // function markspPres40,1219
    Vec_Int_t *    vFanins;        // node faninsvFanins41,1272
    Vec_Int_t *    vTruths;        // node truth tablesvTruths42,1322
    Vec_Int_t *    vConfigs;       // configurationsvConfigs43,1378
    Vec_Int_t *    vClasses;       // node NPN classesvClasses44,1431
    Vec_Int_t *    vTruthNpns;     // truth tables of the classesvTruthNpns45,1486
    Vec_Wec_t *    vFunNodes;      // nodes by NPN classvFunNodes46,1552
    Vec_Int_t *    vTemp;          // temporaryvTemp47,1609
    Vec_Int_t *    vTemp2;         // temporaryvTemp248,1657
    unsigned       FunMask;        // function maskFunMask49,1705
    unsigned       CmpMask;        // function maskCmpMask50,1757
    unsigned       BinMask;        // hash maskBinMask51,1809
    unsigned *     pBins;          // hash binspBins52,1857
    Vec_Int_t *    vUsedBins;      // used binsvUsedBins53,1905
    int            Counts[32];     // node countsCounts54,1953
    int            nClasses;       // count of classesnClasses55,2003
    unsigned *     pTable;         // mapping of funcs into their classespTable56,2058
    int *          pNodes;         // the number of nodes in min-node networkpNodes57,2132
    int *          pTimes;         // the number of different min-node networkspTimes58,2210
    char *         pVisited;       // visited classespVisited59,2290
    Vec_Int_t *    vVisited;       // the number of visited classesvVisited60,2344
char * Dau_ParseFormulaEndToken( char * pForm )Dau_ParseFormulaEndToken78,2908
word Dau_ParseFormula_rec( char * pBeg, char * pEnd )Dau_ParseFormula_rec96,3306
word Dau_ParseFormula( char * p )Dau_ParseFormula141,4584
void Dau_ParseFormulaTest()Dau_ParseFormulaTest145,4675
int Dau_ParseFormulaAig_rec( Gia_Man_t * p, char * pBeg, char * pEnd )Dau_ParseFormulaAig_rec165,5131
int Dau_ParseFormulaAig( Gia_Man_t * p, char * pStr )Dau_ParseFormulaAig210,6477
Gia_Man_t * Dau_ParseFormulaAigTest()Dau_ParseFormulaAigTest214,6603
void Dau_VerifyFile( char * pFileName )Dau_VerifyFile239,7216
void Dau_VerifyFileTest()Dau_VerifyFileTest259,7991
Gia_Man_t * Dau_ConstructAigFromFile( char * pFileName )Dau_ConstructAigFromFile277,8352
unsigned * Dau_ReadFile2( char * pFileName, int nSizeW )Dau_ReadFile2311,9322
void Dtt_ManRenum( int nVars, unsigned * pTable, int * pnClasses )Dtt_ManRenum331,9928
unsigned * Dtt_ManLoadClasses( int nVars, int * pnClasses )Dtt_ManLoadClasses345,10356
void Dtt_ManAddVisited( Dtt_Man_t * p, unsigned Truth2, int n )Dtt_ManAddVisited374,11105
void Dtt_ManProcessVisited( Dtt_Man_t * p )Dtt_ManProcessVisited387,11529
Dtt_Man_t * Dtt_ManAlloc( int nVars, int fMulti )Dtt_ManAlloc410,12023
void Dtt_ManFree( Dtt_Man_t * p )Dtt_ManFree440,13330
static inline unsigned Dtt_ManHashKey( Dtt_Man_t * p, unsigned Truth )Dtt_ManHashKey474,14217
int Dtt_ManCheckHash( Dtt_Man_t * p, unsigned Truth )Dtt_ManCheckHash480,14476
Vec_Int_t * Dtt_ManCollect( Dtt_Man_t * p, unsigned Truth, Vec_Int_t * vFuns )Dtt_ManCollect491,14852
static inline int Dtt_ManGetFun( Dtt_Man_t * p, unsigned tFun, int n )Dtt_ManGetFun528,15988
static inline void Dtt_ManSetFun( Dtt_Man_t * p, unsigned tFun )Dtt_ManSetFun546,16533
void Dtt_ManAddFunction( Dtt_Man_t * p, int n, int FanI, int FanJ, int Type, unsigned Truth )Dtt_ManAddFunction552,16749
int Dtt_PrintStats( int nNodes, int nVars, Vec_Wec_t * vFunNodes, word nSteps, abctime clk, int fDelay, word nMultis )Dtt_PrintStats582,17941
void Dtt_PrintDistrib( Dtt_Man_t * p )Dtt_PrintDistrib595,18588
void Dtt_PrintMulti2( Dtt_Man_t * p )Dtt_PrintMulti2603,18821
void Dtt_PrintMulti1( Dtt_Man_t * p )Dtt_PrintMulti1615,19103
void Dtt_PrintMulti( Dtt_Man_t * p )Dtt_PrintMulti654,20300
typedef struct Dtt_FunImpl_t_ Dtt_FunImpl_t;Dtt_FunImpl_t697,21451
struct Dtt_FunImpl_t_Dtt_FunImpl_t_698,21496
    int Type;Type700,21520
    int NP1;     // 4 bits for an input (NPPP)NP1701,21534
    int FI1;     // the id (in vLibFun) of the first fanin functionFI1702,21581
    int NP2;NP2703,21649
    int FI2;     // the id (in vLibFun) of the second fanin functionFI2704,21662
void Dtt_FunImplFI2Str( int FI, int NP, Vec_Int_t* vLibFun, char* str )Dtt_FunImplFI2Str707,21735
void Dtt_FunImpl2Str( int Type, char* sFI1, char* sFI2, char* str )Dtt_FunImpl2Str720,22124
int Dtt_ComposeNP( int NP1, int NP2 )Dtt_ComposeNP749,23636
void Dtt_MakePI( int NP, char* str )Dtt_MakePI762,23985
void Dtt_MakeFormulaFI2( unsigned tFun, Dtt_FunImpl_t* pFun, Vec_Vec_t* vLibImpl, int NP, char* sFI1, char* sF, int fPrint, FILE* pFile )Dtt_MakeFormulaFI2782,24517
void Dtt_MakeFormula( unsigned tFun, Dtt_FunImpl_t* pFun, Vec_Vec_t* vLibImpl, int NP, char* sF, int fPrint, FILE* pFile )Dtt_MakeFormula807,25350
void Dtt_ProcessType( int* Type, int nFanin )Dtt_ProcessType830,26151
int Dtt_Check( unsigned tFun, unsigned tGoal, unsigned tCur, int* pType )Dtt_Check858,26982
void Dtt_FindNP( Dtt_Man_t * p, unsigned tFun, unsigned tGoal, unsigned tNpn, int * NP, int* pType, int NPout )Dtt_FindNP882,28168
void Dtt_DumpLibrary( Dtt_Man_t * p, char* FileName )Dtt_DumpLibrary928,29780
void Dtt_EnumerateLf( int nVars, int nNodeMax, int fDelay, int fMulti, int fVerbose, char* pFileName )Dtt_EnumerateLf1007,32854

src/opt/dau/dauCount.c,481
static word Table[256][32] = //{{0}};Table29,774
void Abc_TtCountGenerate()Abc_TtCountGenerate305,257273
int Abc_TtCountOnesInCofsQuick_rec( word * pTruth, int nVars, int * pStore )Abc_TtCountOnesInCofsQuick_rec347,258724
int Abc_TtCountOnesInCofsQuick( word * pTruth, int nVars, int * pStore )Abc_TtCountOnesInCofsQuick376,259773
void Abc_TtCountOnesInCofsTest2()Abc_TtCountOnesInCofsTest2396,260257
void Abc_TtCountOnesInCofsTest()Abc_TtCountOnesInCofsTest410,260664

src/opt/dau/dauNpn.c,1687
void Dau_TruthEnum(int nVars)Dau_TruthEnum48,1290
unsigned * Dau_ReadFile( char * pFileName, int nSizeW )Dau_ReadFile140,4229
int Dau_AddFunction( word tCur, int nVars, unsigned * pTable, Vec_Int_t * vNpns, Vec_Int_t * vNpns_ )Dau_AddFunction157,4777
void Dau_NetworkEnum(int nVars)Dau_NetworkEnum176,5447
void Dau_NetworkEnumTest()Dau_NetworkEnumTest373,14710
int Dau_CountSymms( word t, int nVars )Dau_CountSymms392,15062
int Dau_CountSymms2( word t, int nVars )Dau_CountSymms2401,15315
int Dau_CountCompl1( word t, int v, int nVars )Dau_CountCompl1411,15600
int Dau_CountCompl( word t, int nVars )Dau_CountCompl422,15863
Vec_Wrd_t * Dau_ExactNpnForClasses( Vec_Mem_t * vTtMem, Vec_Int_t * vNodSup, int nVars, int nInputs )Dau_ExactNpnForClasses441,16322
void Dau_ExactNpnPrint( Vec_Mem_t * vTtMem, Vec_Int_t * vNodSup, int nVars, int nInputs, int nNodesMax )Dau_ExactNpnPrint458,16931
void Dau_TablesSave( int nInputs, int nVars, Vec_Mem_t * vTtMem, Vec_Int_t * vNodSup, int nFronts, abctime clk )Dau_TablesSave504,18563
void Dau_DumpFuncs( Vec_Mem_t * vTtMem, Vec_Int_t * vNodSup, int nVars, int nMax )Dau_DumpFuncs535,19694
int Dau_CountFuncs( Vec_Int_t * vNodSup, int iStart, int iStop, int nVars )Dau_CountFuncs577,20973
int Dau_PrintStats( int nNodes, int nInputs, int nVars, Vec_Int_t * vNodSup, int iStart, int iStop, word nSteps, int Count2, abctime clk )Dau_PrintStats584,21212
int Dau_InsertFunction( Abc_TtHieMan_t * pMan, word * pCur, int nNodes, int nInputs, int nVars0, int nVars, Dau_InsertFunction601,21952
void Dau_FunctionEnum( int nInputs, int nVars, int nNodeMax, int fUseTwo, int fReduce, int fVerbose )Dau_FunctionEnum622,22934

src/opt/dau/dauNonDsd.c,3059
int Dau_DecCheckSetTop5( word * p, int nVars, int nVarsF, int nVarsB, int nVarsS, int uMaskS, int * pSched, word * pDec, word * pComp )Dau_DecCheckSetTop546,1318
int Dau_DecCheckSetTop6( word * p, int nVars, int nVarsF, int nVarsB, int nVarsS, int uMaskS, int * pSched, word * pDec, word * pComp )Dau_DecCheckSetTop6116,3842
static inline int Dau_DecCheckSetTop( word * p, int nVars, int nVarsF, int nVarsB, int nVarsS, int uMaskS, int * pSched, word * pDec, word * pComp )Dau_DecCheckSetTop181,6180
static inline void Dau_DecGetMinterm( word * p, int g, int nVarsS, int uMaskAll )Dau_DecGetMinterm200,6848
static inline int Dau_DecCheckSet5( word * p, int nVars, int nVarsF, int uMaskAll, int uMaskValue, word * pCof0, word * pCof1, word * pDec )Dau_DecCheckSet5213,7256
static inline int Dau_DecCheckSet6( word * p, int nVars, int nVarsF, int uMaskAll, int uMaskValue, word * pCof0, word * pCof1, word * pDec )Dau_DecCheckSet6252,8666
static inline int Dau_DecCheckSetAny( word * p, int nVars, int nVarsF, int uMaskAll, int uMaskValue, word * pCof0, word * pCof1, word * pDec )Dau_DecCheckSetAny289,10003
int Dau_DecCheckSetTopOld( word * p, int nVars, int nVarsF, int nVarsB, int nVarsS, int maskS, word ** pCof0, word ** pCof1, word ** pDec )Dau_DecCheckSetTopOld297,10421
static inline unsigned Dau_DecCreateSet( int * pVarsB, int sizeB, int maskS )Dau_DecCreateSet342,11992
static inline int Dau_DecSetHas01( unsigned Mask )Dau_DecSetHas01353,12286
static inline int Dau_DecSetIsContained( Vec_Int_t * vSets, unsigned New )Dau_DecSetIsContained357,12390
void Dau_DecSortSet( unsigned set, int nVars, int * pnUnique, int * pnShared, int * pnFree )Dau_DecSortSet371,12752
void Dau_DecPrintSet( unsigned set, int nVars, int fNewLine )Dau_DecPrintSet390,13250
unsigned Dau_DecReadSet( char * pStr )Dau_DecReadSet421,14204
void Dau_DecPrintSets( Vec_Int_t * vSets, int nVars )Dau_DecPrintSets434,14597
void Dau_DecMoveFreeToLSB( word * p, int nVars, int * V2P, int * P2V, int maskB, int sizeB )Dau_DecMoveFreeToLSB454,15167
Vec_Int_t * Dau_DecFindSets_int( word * pInit, int nVars, int * pSched[16] )Dau_DecFindSets_int462,15442
Vec_Int_t * Dau_DecFindSets( word * pInit, int nVars )Dau_DecFindSets516,17793
void Dau_DecFindSetsTest2()Dau_DecFindSetsTest2527,18132
void Dau_DecVarReplace( char * pStr, int * pPerm, int nVars )Dau_DecVarReplace557,19137
int Dau_DecDecomposeSet( word * pInit, int nVars, unsigned uSet, word * pComp, word * pDec, int * pPermC, int * pPermD, int * pnVarsC, int * pnVarsD, int * pnVarsS )Dau_DecDecomposeSet579,19680
int Dau_DecVerify( word * pInit, int nVars, char * pDsdC, char * pDsdD )Dau_DecVerify687,23165
int Dau_DecPerform6( word * p, int nVars, unsigned uSet )Dau_DecPerform6714,24091
int Dau_DecPerform( word * pInit, int nVars, unsigned uSet )Dau_DecPerform771,26204
void Dau_DecTrySets( word * pInit, int nVars, int fVerbose )Dau_DecTrySets831,28800
void Dau_DecFindSetsTest3()Dau_DecFindSetsTest3863,29661
void Dau_DecFindSetsTest()Dau_DecFindSetsTest877,30163

src/opt/dau/dauEnum.c,621
char * Dau_EnumLift( char * pName, int Shift )Dau_EnumLift45,1235
char * Dau_EnumLift2( char * pName, int Shift )Dau_EnumLift254,1500
void Dau_EnumCombineTwo( Vec_Ptr_t * vOne, int fStar, int fXor, char * pName1, char * pName2, int Shift2, int fCompl1, int fCompl2 )Dau_EnumCombineTwo75,2001
void Dau_EnumCombineThree( Vec_Ptr_t * vOne, int fStar, char * pNameC, char * pName1, char * pName2, int Shift1, int Shift2, int fComplC, int fCompl1, int fCompl2 )Dau_EnumCombineThree88,2536
void Dau_EnumTestDump( Vec_Ptr_t * vSets, char * pFileName )Dau_EnumTestDump115,3435
void Dau_EnumTest()Dau_EnumTest144,4128

src/opt/dau/dauInt.h,47
#define ABC__DAU_INT__hABC__DAU_INT__h22,526

src/opt/dau/dauDsd2.c,2257
typedef struct Dua_Obj_t_ Dua_Obj_t;Dua_Obj_t33,908
struct Dua_Obj_t_Dua_Obj_t_34,945
    int       Type;                // dec type (1=var; 2=and; 3=xor; 4=mux; 5=prime)Type36,965
    int       nFans;               // fanin countnFans37,1050
    char      pFans[DSD_MAX_VAR];  // faninspFans38,1100
typedef struct Dua_Dsd_t_ Dua_Dsd_t;Dua_Dsd_t41,1149
struct Dua_Dsd_t_Dua_Dsd_t_42,1186
    int       nSupp;               // original variablesnSupp44,1206
    int       nVars;               // remaining variablesnVars45,1263
    int       nWords;              // largest non-dec primenWords46,1321
    int       nObjs;               // object countnObjs47,1381
    int       iRoot;               // the root of the treeiRoot48,1432
    Dua_Obj_t pObjs[DSD_MAX_VAR];  // objectspObjs49,1491
    word      pTruth[DSD_MAX_WRD]; // original/current truth tablepTruth50,1537
static inline word Abc_Tt6HalfUnShuffleVars( word t, int iVar, int fCof1 )Abc_Tt6HalfUnShuffleVars69,2194
static inline void Abc_TtHalfUnShuffleVars( word * pTruth, int nVars, int iVar, int jVar, int fCof1 )Abc_TtHalfUnShuffleVars86,2729
void Dua_DsdInit( Dua_Dsd_t * pRes, word * pTruth, int nVars )Dua_DsdInit135,4071
int Dua_DsdTryConst( word * pTruth, int nVars )Dua_DsdTryConst162,4813
int Dua_DsdTryVar( word * pTruth, int nWords, int iVar )Dua_DsdTryVar169,4972
int Dua_DsdCheckCof0Const0( word * pTruth, int nWords, int iVar )Dua_DsdCheckCof0Const0223,6560
int Dua_DsdCheckCofsEqualNot( word * pTruth, int nWords, int iVar )Dua_DsdCheckCofsEqualNot246,7200
int Dua_DsdOneVar( Dua_Dsd_t * pRes )Dua_DsdOneVar269,7976
int Dua_DsdTrySwap( word * pTruth, int nWords, int iVar )Dua_DsdTrySwap305,8915
int Dua_DsdCheckDecomp( word * pTruth, int nWords, int iVar )Dua_DsdCheckDecomp368,11249
int Dua_DsdTwoVars( Dua_Dsd_t * pRes )Dua_DsdTwoVars426,13588
word Dua_DsdRangeVars( word * pTruth, int nVars, int iVar, int jVar, int fPerform )Dua_DsdRangeVars468,14733
int Dua_DsdRangeVars0( word * pTruth, int nVars, int iVar, int fPerform )Dua_DsdRangeVars0563,18055
void Dua_DsdRangeVars0Derive( word * pTruth, int nVars, int iVar )Dua_DsdRangeVars0Derive598,19232
void Dua_DsdTest( word * pTruth, int nVar )Dua_DsdTest647,20752

src/opt/dau/dauCanon.c,11321
static word s_CMasks6[5] = {s_CMasks633,888
static inline int Abc_TtCheckEqual2VarCofs( word * pTruth, int nWords, int iVar, int Num1, int Num2 )Abc_TtCheckEqual2VarCofs140,4059
static inline int Abc_TtCompare2VarCofs( word * pTruth, int nWords, int iVar, int Num1, int Num2 )Abc_TtCompare2VarCofs187,5599
static inline int Abc_TtCompare2VarCofsRev( word * pTruth, int nWords, int iVar, int Num1, int Num2 )Abc_TtCompare2VarCofsRev235,7227
void Abc_TtNormalizeSmallTruth(word * pTruth, int nVars)Abc_TtNormalizeSmallTruth295,9168
static inline void Abc_TtVerifySmallTruth(word * pTruth, int nVars)Abc_TtVerifySmallTruth305,9456
static inline int Abc_TtCountOnesInTruth( word * pTruth, int nVars )Abc_TtCountOnesInTruth316,9695
static inline void Abc_TtCountOnesInCofs( word * pTruth, int nVars, int * pStore )Abc_TtCountOnesInCofs326,10012
int Abc_TtCountOnesInCofsSimple( word * pTruth, int nVars, int * pStore )Abc_TtCountOnesInCofsSimple365,11310
static inline int shiftFunc(int ci)shiftFunc372,11525
static int Abc_TtScc6(word wTruth, int ck)Abc_TtScc6376,11604
int Abc_TtScc(word * pTruth, int nVars)Abc_TtScc388,11878
static inline void Abc_TtSccInCofs6(word wTruth, int nVars, int ck, int * pStore)Abc_TtSccInCofs6397,12135
static inline void Abc_TtSccInCofs(word * pTruth, int nVars, int * pStore)Abc_TtSccInCofs417,12662
static inline void Abc_TtCountOnesInCofsSlow( word * pTruth, int nVars, int * pStore )Abc_TtCountOnesInCofsSlow456,13737
int Abc_TtCountOnesInCofsFast6_rec( word Truth, int iVar, int nBytes, int * pStore )Abc_TtCountOnesInCofsFast6_rec494,15208
int Abc_TtCountOnesInCofsFast_rec( word * pTruth, int iVar, int nWords, int * pStore )Abc_TtCountOnesInCofsFast_rec530,16647
int Abc_TtCountOnesInCofsFast( word * pTruth, int nVars, int * pStore )Abc_TtCountOnesInCofsFast560,17534
static inline unsigned Abc_TtSemiCanonicize( word * pTruth, int nVars, char * pCanonPerm, int * pStoreOut, int fOnlySwap )Abc_TtSemiCanonicize582,18151
void Abc_TtCofactorTest10( word * pTruth, int nVars, int N )Abc_TtCofactorTest10705,21900
int Abc_Tt6CofactorPermNaive( word * pTruth, int i, int fSwapOnly )Abc_Tt6CofactorPermNaive735,22830
int Abc_TtCofactorPermNaive( word * pTruth, int i, int nWords, int fSwapOnly )Abc_TtCofactorPermNaive795,24357
int Abc_TtCofactorPermConfig( word * pTruth, int i, int nWords, int fSwapOnly, int fNaive )Abc_TtCofactorPermConfig875,26928
int Abc_TtCofactorPerm( word * pTruth, int i, int nWords, int fSwapOnly, char * pCanonPerm, unsigned * puCanonPhase, int fNaive )Abc_TtCofactorPerm973,30902
#define CANON_VERIFYCANON_VERIFY1030,32628
unsigned Abc_TtCanonicize( word * pTruth, int nVars, char * pCanonPerm )Abc_TtCanonicize1031,32649
unsigned Abc_TtCanonicizePerm( word * pTruth, int nVars, char * pCanonPerm )Abc_TtCanonicizePerm1080,34277
static inline int Abc_TtCanonicizePhaseVar6( word * pTruth, int nVars, int v )Abc_TtCanonicizePhaseVar61138,36024
static inline int Abc_TtCanonicizePhaseVar5( word * pTruth, int nVars, int v )Abc_TtCanonicizePhaseVar51162,36713
unsigned Abc_TtCanonicizePhase( word * pTruth, int nVars )Abc_TtCanonicizePhase1182,37478
#define TT_MAX_LEVELS TT_MAX_LEVELS1238,39020
struct Abc_TtHieMan_t_Abc_TtHieMan_t_1240,39045
    int  nLastLevel, nWords;nLastLevel1242,39070
    int  nLastLevel, nWords;nWords1242,39070
    Vec_Mem_t *  vTtMem[TT_MAX_LEVELS];    // truth table memory and hash tablesvTtMem1243,39099
    Vec_Int_t *  vRepres[TT_MAX_LEVELS];   // pointers to the representatives from the last hierarchical levelvRepres1244,39180
    int         vTruthId[TT_MAX_LEVELS];vTruthId1245,39291
    Vec_Int_t * vPhase;vPhase1247,39333
Abc_TtHieMan_t * Abc_TtHieManStart(int nVars, int nLevels)Abc_TtHieManStart1250,39361
void Abc_TtHieManStop(Abc_TtHieMan_t * p)Abc_TtHieManStop1268,39856
int Abc_TtHieRetrieveOrInsert(Abc_TtHieMan_t * p, int level, word * pTruth, word * pResult)Abc_TtHieRetrieveOrInsert1281,40126
unsigned Abc_TtCanonicizeHie( Abc_TtHieMan_t * p, word * pTruthInit, int nVars, char * pCanonPerm, int fExact )Abc_TtCanonicizeHie1313,41229
typedef struct TiedGroup_TiedGroup_1461,45948
    char iStart;                         // index of Abc_TgMan_t::pPermiStart1463,45976
    char nGVars;                         // the number of variables in the groupnGVars1464,46048
} TiedGroup;TiedGroup1465,46129
typedef struct Abc_TgMan_t_Abc_TgMan_t_1467,46143
    word *pTruth;pTruth1469,46173
    int nVars;                          // the number of variablesnVars1470,46191
    int nGVars;                         // the number of variables in groups ( symmetric variables purged )nGVars1471,46258
    int nGroups;                        // the number of tied groupsnGroups1472,46366
    unsigned uPhase;                    // phase of each variable and the functionuPhase1473,46435
    int fPhased;                        // if the phases of all the variables are determinedfPhased1474,46518
    char pPerm[16];                     // permutation of variables, symmetric variables purged, for groupingpPerm1475,46611
    char pPermT[16];                    // permutation of variables, symmetric variables expanded, actual transformation for pTruthpPermT1476,46721
    char pPermTRev[16];                 // reverse permutation of pPermTpPermTRev1477,46853
    signed char pPermDir[16];           // for generating the next permutationpPermDir1478,46926
    TiedGroup pGroup[16];               // tied groupspGroup1479,47005
    char symPhase[16];                  // phase type of symemtric groupssymPhase1481,47094
    signed char symLink[17];            // singly linked list, indicate the variables in symemtric groupssymLink1482,47168
    int  nAlgorithm;                    // 0: AdjCE,  1: AdjSE,  2: E: Cost-AwarenAlgorithm1484,47275
    char pFGrps[16];                    // tied groups to be flippedpFGrps1485,47357
    Vec_Int_t * vPhase;                 // candidate phase assignmentsvPhase1486,47426
} Abc_TgMan_t;Abc_TgMan_t1487,47497
#define CANON_VERIFYCANON_VERIFY1490,47560
static int Abc_NextPermSwapC(char * pData, signed char * pDir, int size)Abc_NextPermSwapC1505,47840
unsigned Abc_TtCanonicizeWrap(TtCanonicizeFunc func, Abc_TtHieMan_t * p, word * pTruth, int nVars, char * pCanonPerm, int flag)Abc_TtCanonicizeWrap1525,48397
word gpVerCopy[1024];gpVerCopy1545,49199
static int Abc_TtCannonVerify(word* pTruth, int nVars, char * pCanonPerm, unsigned uCanonPhase)Abc_TtCannonVerify1546,49221
static void Abc_TgInitMan(Abc_TgMan_t * pMan, word * pTruth, int nVars, int nAlg, Vec_Int_t * vPhase)Abc_TgInitMan1574,49974
static int Abc_TgSplitGroup(Abc_TgMan_t * pMan, TiedGroup * pGrp, int * pCoef)Abc_TgSplitGroup1598,50599
static inline void Abc_TgManCopy(Abc_TgMan_t* pDst, word* pDstTruth, Abc_TgMan_t* pSrc)Abc_TgManCopy1630,51629
static inline int Abc_TgCannonVerify(Abc_TgMan_t* pMan)Abc_TgCannonVerify1637,51843
static void CheckConfig(Abc_TgMan_t * pMan)CheckConfig1644,52058
static inline void Abc_TgFlipVar(Abc_TgMan_t* pMan, int iVar)Abc_TgFlipVar1671,52631
static inline void Abc_TgFlipSymGroupByVar(Abc_TgMan_t* pMan, int iVar)Abc_TgFlipSymGroupByVar1679,52853
static inline void Abc_TgFlipSymGroup(Abc_TgMan_t* pMan, int idx)Abc_TgFlipSymGroup1686,53053
static inline void Abc_TgClearSymGroupPhase(Abc_TgMan_t* pMan, int iVar)Abc_TgClearSymGroupPhase1691,53177
static void Abc_TgImplementPerm(Abc_TgMan_t* pMan, const char *pPermDest)Abc_TgImplementPerm1697,53339
static void Abc_TgSwapAdjacentSymGroups(Abc_TgMan_t* pMan, int idx)Abc_TgSwapAdjacentSymGroups1724,54098
static word pSymCopy[1024];pSymCopy1765,55351
static int Abc_TtIsSymmetric(word * pTruth, int nVars, int iVar, int jVar, int fPhase)Abc_TtIsSymmetric1767,55380
static int Abc_TtIsSymmetricHigh(Abc_TgMan_t * pMan, int iVar, int jVar, int fPhase)Abc_TtIsSymmetricHigh1780,55832
static void Abc_TgCreateGroups(Abc_TgMan_t * pMan)Abc_TgCreateGroups1812,57081
static int Abc_TgGroupSymmetry(Abc_TgMan_t * pMan, TiedGroup * pGrp, int fHigh)Abc_TgGroupSymmetry1855,58210
static void Abc_TgPurgeSymmetry(Abc_TgMan_t * pMan, int fHigh)Abc_TgPurgeSymmetry1924,60606
int Abc_TgExpendSymmetry(Abc_TgMan_t * pMan, char * pDest)Abc_TgExpendSymmetry1975,62001
static void Abc_TgResetGroup(Abc_TgMan_t * pMan)Abc_TgResetGroup1989,62395
static void Abc_TgResetGroup1(Abc_TgMan_t * pMan)Abc_TgResetGroup12010,62928
static int Abc_TgSymGroupPerm(Abc_TgMan_t* pMan, int idx, int fSwapOnly)Abc_TgSymGroupPerm2046,63860
static int Abc_TgPermPhase(Abc_TgMan_t* pMan, int iVar)Abc_TgPermPhase2126,66412
static void Abc_TgSimpleEnumeration(Abc_TgMan_t * pMan)Abc_TgSimpleEnumeration2142,66859
static int Abc_TgIsInitPerm(char * pData, signed char * pDir, int size)Abc_TgIsInitPerm2185,68134
static void Abc_TgFirstPermutation(Abc_TgMan_t * pMan)Abc_TgFirstPermutation2195,68376
static int Abc_TgNextPermutation(Abc_TgMan_t * pMan)Abc_TgNextPermutation2212,68840
static inline unsigned grayCode(unsigned a) { return a ^ (a >> 1); }grayCode2237,69534
static int grayFlip(unsigned a)grayFlip2239,69604
static inline void Abc_TgSaveBest(Abc_TgMan_t * pMan, Abc_TgMan_t * pBest)Abc_TgSaveBest2246,69719
static void Abc_TgPhaseEnumeration(Abc_TgMan_t * pMan, Abc_TgMan_t * pBest)Abc_TgPhaseEnumeration2252,69938
static void Abc_TgCalcScc(Abc_TgMan_t * pMan, int * pOut, int fSort)Abc_TgCalcScc2287,70808
static void Abc_TgSplitGroupsByScc(Abc_TgMan_t * pMan)Abc_TgSplitGroupsByScc2318,71597
static int Abc_TgCompareCoef(int * pIn1, int * pIn2, int n)Abc_TgCompareCoef2333,72013
static const int log2fn[17] = { 0, 0, 100, 258, 458, 691, 949, 1230, 1530, 1847, 2179, 2525, 2884, 3254, 3634, 4025, 4425 };log2fn2343,72228
static int Abc_TgPermCostScc(Abc_TgMan_t * pMan, int *pScc)Abc_TgPermCostScc2344,72353
static void Abc_TgPermEnumerationScc(Abc_TgMan_t * pMan, Abc_TgMan_t * pBest)Abc_TgPermEnumerationScc2363,72783
static void Abc_TgReorderFGrps(Abc_TgMan_t * pMan)Abc_TgReorderFGrps2376,73181
static int ilog2(int n)ilog22391,73589
typedef struct Abc_SccCost_t_ {Abc_SccCost_t_2399,73682
    int cNeg, cPhase, cPerm;cNeg2400,73714
    int cNeg, cPhase, cPerm;cPhase2400,73714
    int cNeg, cPhase, cPerm;cPerm2400,73714
} Abc_SccCost_t;Abc_SccCost_t2401,73743
static Abc_SccCost_t Abc_TgRecordPhase(Abc_TgMan_t * pMan, int mode)Abc_TgRecordPhase2403,73761
static int Abc_TgRecordPhase1(Abc_TgMan_t * pMan)   // for AdjSEAbc_TgRecordPhase12450,75339
static void Abc_TgPhaseEnumerationScc(Abc_TgMan_t * pMan, Abc_TgMan_t * pBest)Abc_TgPhaseEnumerationScc2480,76187
static void Abc_TgFullEnumeration(Abc_TgMan_t * pWork, Abc_TgMan_t * pBest)Abc_TgFullEnumeration2506,76856
static inline double Abc_SccPhaseCost(Abc_TgMan_t * pMan)Abc_SccPhaseCost2523,77328
static inline double Abc_SccEnumCost(Abc_TgMan_t * pMan, Abc_SccCost_t c)Abc_SccEnumCost2529,77495
static int Abc_TgEnumerationCost(Abc_TgMan_t * pMan)Abc_TgEnumerationCost2540,77869
unsigned Abc_TtCanonicizeAda(Abc_TtHieMan_t * p, word * pTruth, int nVars, char * pCanonPerm, int iThres)Abc_TtCanonicizeAda2568,78598
unsigned Abc_TtCanonicizeCA(Abc_TtHieMan_t * p, word * pTruth, int nVars, char * pCanonPerm, int fCA)Abc_TtCanonicizeCA2632,80881

src/opt/dau/dauTree.c,12817
typedef struct Dss_Fun_t_ Dss_Fun_t;Dss_Fun_t31,830
struct Dss_Fun_t_Dss_Fun_t_32,867
    unsigned       iDsd  :    26;  // DSD literaliDsd34,887
    unsigned       nFans :     6;  // fanin countnFans35,937
    unsigned char  pFans[0];       // faninspFans36,987
typedef struct Dss_Ent_t_ Dss_Ent_t;Dss_Ent_t39,1036
struct Dss_Ent_t_Dss_Ent_t_40,1073
    Dss_Fun_t *    pFunc;pFunc42,1093
    Dss_Ent_t *    pNext;pNext43,1119
    unsigned       iDsd0  :   27;  // dsd entryiDsd044,1145
    unsigned       nWords :    5;  // total word count (struct + shared)nWords45,1193
    unsigned       iDsd1  :   27;  // dsd entryiDsd146,1266
    unsigned       nShared:    5;  // shared countnShared47,1314
    unsigned char  pShared[0];     // shared literalspShared48,1365
typedef struct Dss_Obj_t_ Dss_Obj_t;Dss_Obj_t51,1423
struct Dss_Obj_t_Dss_Obj_t_52,1460
    unsigned       Id;             // node IDId54,1480
    unsigned       Type    :   3;  // node typeType55,1526
    unsigned       nSupp   :   8;  // variablenSupp56,1574
    unsigned       iVar    :   8;  // variableiVar57,1621
    unsigned       nWords  :   6;  // variablenWords58,1668
    unsigned       fMark0  :   1;  // user markfMark059,1715
    unsigned       fMark1  :   1;  // user markfMark160,1763
    unsigned       nFans   :   5;  // fanin countnFans61,1811
    unsigned       pFans[0];       // faninspFans62,1861
typedef struct Dss_Ntk_t_ Dss_Ntk_t;Dss_Ntk_t65,1910
struct Dss_Ntk_t_Dss_Ntk_t_66,1947
    int            nVars;          // the number of variablesnVars68,1967
    int            nMem;           // memory usednMem69,2029
    int            nMemAlloc;      // memory allocatednMemAlloc70,2079
    word *         pMem;           // memory arraypMem71,2134
    Dss_Obj_t *    pRoot;          // root nodepRoot72,2185
    Vec_Ptr_t *    vObjs;          // internal nodesvObjs73,2233
struct Dss_Man_t_Dss_Man_t_76,2290
    int            nVars;          // variable numbernVars78,2310
    int            nNonDecLimit;   // limit on non-dec sizenNonDecLimit79,2364
    int            nBins;          // table sizenBins80,2424
    unsigned *     pBins;          // hash tablepBins81,2473
    Mem_Flex_t *   pMem;           // memory for nodespMem82,2522
    Vec_Ptr_t *    vObjs;          // objectsvObjs83,2577
    Vec_Int_t *    vNexts;         // next pointersvNexts84,2623
    Vec_Int_t *    vLeaves;        // tempvLeaves85,2675
    Vec_Int_t *    vCopies;        // tempvCopies86,2718
    word **        pTtElems;       // elementary TTspTtElems87,2761
    Dss_Ent_t **   pCache;         // decomposition cachepCache88,2814
    int            nCache;         // size of decomposition cachenCache89,2872
    Mem_Flex_t *   pMemEnts;       // memory for cache entriespMemEnts90,2938
    int            nCacheHits[2];nCacheHits91,3001
    int            nCacheMisses[2];nCacheMisses92,3035
    int            nCacheEntries[2];nCacheEntries93,3071
    abctime        timeBeg;timeBeg94,3108
    abctime        timeDec;timeDec95,3136
    abctime        timeLook;timeLook96,3164
    abctime        timeEnd;timeEnd97,3193
static inline Dss_Obj_t *  Dss_Regular( Dss_Obj_t * p )                            { return (Dss_Obj_t *)((ABC_PTRUINT_T)(p) & ~01);                                    }Dss_Regular100,3225
static inline Dss_Obj_t *  Dss_Not( Dss_Obj_t * p )                                { return (Dss_Obj_t *)((ABC_PTRUINT_T)(p) ^  01);                                    }Dss_Not101,3395
static inline Dss_Obj_t *  Dss_NotCond( Dss_Obj_t * p, int c )                     { return (Dss_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c));                                    }Dss_NotCond102,3565
static inline int          Dss_IsComplement( Dss_Obj_t * p )                       { return (int)((ABC_PTRUINT_T)(p) & 01);                                             }Dss_IsComplement103,3735
static inline int          Dss_EntWordNum( Dss_Ent_t * p )                         { return sizeof(Dss_Ent_t) / 8 + p->nShared / 4 + ((p->nShared & 3) > 0);            }Dss_EntWordNum105,3906
static inline int          Dss_FunWordNum( Dss_Fun_t * p )                         { assert(p->nFans >= 2); return (p->nFans + 4) / 8 + (((p->nFans + 4) & 7) > 0);     }Dss_FunWordNum106,4076
static inline int          Dss_ObjWordNum( int nFans )                             { return sizeof(Dss_Obj_t) / 8 + nFans / 2 + ((nFans & 1) > 0);                      }Dss_ObjWordNum107,4246
static inline word *       Dss_ObjTruth( Dss_Obj_t * pObj )                        { return (word *)pObj + pObj->nWords;                                                }Dss_ObjTruth108,4416
static inline void         Dss_ObjClean( Dss_Obj_t * pObj )                        { memset( pObj, 0, sizeof(Dss_Obj_t) );                                              }Dss_ObjClean110,4587
static inline int          Dss_ObjId( Dss_Obj_t * pObj )                           { return pObj->Id;                                                                   }Dss_ObjId111,4757
static inline int          Dss_ObjType( Dss_Obj_t * pObj )                         { return pObj->Type;                                                                 }Dss_ObjType112,4927
static inline int          Dss_ObjSuppSize( Dss_Obj_t * pObj )                     { return pObj->nSupp;                                                                }Dss_ObjSuppSize113,5097
static inline int          Dss_ObjFaninNum( Dss_Obj_t * pObj )                     { return pObj->nFans;                                                                }Dss_ObjFaninNum114,5267
static inline int          Dss_ObjFaninC( Dss_Obj_t * pObj, int i )                { assert(i < (int)pObj->nFans); return Abc_LitIsCompl(pObj->pFans[i]);               }Dss_ObjFaninC115,5437
static inline Dss_Obj_t *  Dss_VecObj( Vec_Ptr_t * p, int Id )                     { return (Dss_Obj_t *)Vec_PtrEntry(p, Id);                                           }Dss_VecObj117,5608
static inline Dss_Obj_t *  Dss_VecConst0( Vec_Ptr_t * p )                          { return Dss_VecObj( p, 0 );                                                         }Dss_VecConst0118,5778
static inline Dss_Obj_t *  Dss_VecVar( Vec_Ptr_t * p, int v )                      { return Dss_VecObj( p, v+1 );                                                       }Dss_VecVar119,5948
static inline int          Dss_VecLitSuppSize( Vec_Ptr_t * p, int iLit )           { return Dss_VecObj( p, Abc_Lit2Var(iLit) )->nSupp;                                  }Dss_VecLitSuppSize120,6118
static inline int          Dss_Obj2Lit( Dss_Obj_t * pObj )                         { return Abc_Var2Lit(Dss_Regular(pObj)->Id, Dss_IsComplement(pObj));                 }Dss_Obj2Lit122,6289
static inline Dss_Obj_t *  Dss_Lit2Obj( Vec_Ptr_t * p, int iLit )                  { return Dss_NotCond(Dss_VecObj(p, Abc_Lit2Var(iLit)), Abc_LitIsCompl(iLit));        }Dss_Lit2Obj123,6459
static inline Dss_Obj_t *  Dss_ObjFanin( Vec_Ptr_t * p, Dss_Obj_t * pObj, int i )  { assert(i < (int)pObj->nFans); return Dss_VecObj(p, Abc_Lit2Var(pObj->pFans[i]));   }Dss_ObjFanin124,6629
static inline Dss_Obj_t *  Dss_ObjChild( Vec_Ptr_t * p, Dss_Obj_t * pObj, int i )  { assert(i < (int)pObj->nFans); return Dss_Lit2Obj(p, pObj->pFans[i]);               }Dss_ObjChild125,6799
#define Dss_VecForEachObj(Dss_VecForEachObj127,6970
#define Dss_VecForEachObjVec(Dss_VecForEachObjVec129,7084
#define Dss_VecForEachNode(Dss_VecForEachNode131,7248
#define Dss_ObjForEachFanin(Dss_ObjForEachFanin134,7449
#define Dss_ObjForEachChild(Dss_ObjForEachChild136,7605
static inline int Dss_WordCountOnes( unsigned uWord )Dss_WordCountOnes139,7762
static inline int Dss_Lit2Lit( int * pMapLit, int Lit )   { return Abc_Var2Lit( Abc_Lit2Var(pMapLit[Abc_Lit2Var(Lit)]), Abc_LitIsCompl(Lit) ^ Abc_LitIsCompl(pMapLit[Abc_Lit2Var(Lit)]) );   }Dss_Lit2Lit148,8117
static inline word ** Dss_ManTtElems()Dss_ManTtElems401,15807
Dss_Obj_t * Dss_ObjAllocNtk( Dss_Ntk_t * p, int Type, int nFans, int nTruthVars )Dss_ObjAllocNtk425,16407
Dss_Obj_t * Dss_ObjCreateNtk( Dss_Ntk_t * p, int Type, Vec_Int_t * vFaninLits )Dss_ObjCreateNtk440,16914
Dss_Ntk_t * Dss_NtkAlloc( int nVars )Dss_NtkAlloc453,17361
void Dss_NtkFree( Dss_Ntk_t * p )Dss_NtkFree472,17854
void Dss_NtkPrint_rec( Dss_Ntk_t * p, Dss_Obj_t * pObj )Dss_NtkPrint_rec478,17965
void Dss_NtkPrint( Dss_Ntk_t * p )Dss_NtkPrint497,18656
static inline void Dau_DsdMergeMatches( char * pDsd, int * pMatches )Dau_DsdMergeMatches523,19371
int Dss_NtkCreate_rec( char * pStr, char ** p, int * pMatches, Dss_Ntk_t * pNtk, word * pTruth )Dss_NtkCreate_rec538,19892
Dss_Ntk_t * Dss_NtkCreate( char * pDsd, int nVars, word * pTruth )Dss_NtkCreate601,22214
int Dss_ObjCompare( Vec_Ptr_t * p, Dss_Obj_t * p0i, Dss_Obj_t * p1i )Dss_ObjCompare634,23167
void Dss_ObjSort( Vec_Ptr_t * p, Dss_Obj_t ** pNodes, int nNodes, int * pPerm )Dss_ObjSort664,24114
void Dss_NtkCheck( Dss_Ntk_t * p )Dss_NtkCheck692,24846
int Dss_NtkCollectPerm_rec( Dss_Ntk_t * p, Dss_Obj_t * pObj, int * pPermDsd, int * pnPerms )Dss_NtkCollectPerm_rec709,25396
void Dss_NtkTransform( Dss_Ntk_t * p, int * pPermDsd )Dss_NtkTransform725,25980
Dss_Obj_t * Dss_ObjAlloc( Dss_Man_t * p, int Type, int nFans, int nTruthVars )Dss_ObjAlloc760,27054
Dss_Obj_t * Dss_ObjCreate( Dss_Man_t * p, int Type, Vec_Int_t * vFaninLits, word * pTruth )Dss_ObjCreate774,27585
void Dss_ManHashProfile( Dss_Man_t * p )Dss_ManHashProfile821,29394
static inline unsigned Dss_ObjHashKey( Dss_Man_t * p, int Type, Vec_Int_t * vFaninLits, word * pTruth )Dss_ObjHashKey836,29818
unsigned * Dss_ObjHashLookup( Dss_Man_t * p, int Type, Vec_Int_t * vFaninLits, word * pTruth )Dss_ObjHashLookup853,30514
Dss_Obj_t * Dss_ObjFindOrAdd( Dss_Man_t * p, int Type, Vec_Int_t * vFaninLits, word * pTruth )Dss_ObjFindOrAdd868,31200
void Dss_ManCacheAlloc( Dss_Man_t * p )Dss_ManCacheAlloc890,31836
void Dss_ManCacheFree( Dss_Man_t * p )Dss_ManCacheFree896,32005
static inline unsigned Dss_ManCacheHashKey( Dss_Man_t * p, Dss_Ent_t * pEnt )Dss_ManCacheHashKey904,32169
void Dss_ManCacheProfile( Dss_Man_t * p )Dss_ManCacheProfile913,32563
Dss_Ent_t ** Dss_ManCacheLookup( Dss_Man_t * p, Dss_Ent_t * pEnt )Dss_ManCacheLookup927,32902
Dss_Ent_t * Dss_ManCacheCreate( Dss_Man_t * p, Dss_Ent_t * pEnt0, Dss_Fun_t * pFun0 )Dss_ManCacheCreate944,33502
Dss_Man_t * Dss_ManAlloc( int nVars, int nNonDecLimit )Dss_ManAlloc967,34266
void Dss_ManFree( Dss_Man_t * p )Dss_ManFree987,34930
void Dss_ManPrint_rec( FILE * pFile, Dss_Man_t * p, Dss_Obj_t * pObj, int * pPermLits, int * pnSupp )Dss_ManPrint_rec1005,35475
void Dss_ManPrintOne( FILE * pFile, Dss_Man_t * p, int iDsdLit, int * pPermLits )Dss_ManPrintOne1030,36503
int Dss_ManCheckNonDec_rec( Dss_Man_t * p, Dss_Obj_t * pObj )Dss_ManCheckNonDec_rec1040,37006
void Dss_ManDump( Dss_Man_t * p )Dss_ManDump1056,37456
void Dss_ManPrint( char * pFileName, Dss_Man_t * p )Dss_ManPrint1086,38329
void Dss_ManComputeTruth_rec( Dss_Man_t * p, Dss_Obj_t * pObj, int nVars, word * pRes, int * pPermLits, int * pnSupp )Dss_ManComputeTruth_rec1139,40393
word * Dss_ManComputeTruth( Dss_Man_t * p, int iDsd, int nVars, int * pPermLits )Dss_ManComputeTruth1192,42406
int Dss_NtkRebuild_rec( Dss_Man_t * p, Dss_Ntk_t * pNtk, Dss_Obj_t * pObj )Dss_NtkRebuild_rec1227,43525
int Dss_NtkRebuild( Dss_Man_t * p, Dss_Ntk_t * pNtk )Dss_NtkRebuild1264,44906
int Dss_ManOperation( Dss_Man_t * p, int Type, int * pLits, int nLits, unsigned char * pPerm, word * pTruth )Dss_ManOperation1287,45802
Dss_Fun_t * Dss_ManOperationFun( Dss_Man_t * p, int * iDsd, int nFansTot )Dss_ManOperationFun1389,49700
void Dss_EntPrint( Dss_Ent_t * p, Dss_Fun_t * pFun )Dss_EntPrint1411,50348
Dss_Fun_t * Dss_ManBooleanAnd( Dss_Man_t * p, Dss_Ent_t * pEnt, int Counter )Dss_ManBooleanAnd1433,51102
Dss_Ent_t * Dss_ManSharedMap( Dss_Man_t * p, int * iDsd, int * nFans, int ** pFans, unsigned uSharedMask )Dss_ManSharedMap1510,53835
int Dss_ManMerge( Dss_Man_t * p, int * iDsd, int * nFans, int ** pFans, unsigned uSharedMask, int nKLutSize, unsigned char * pPermRes, word * pTruth )Dss_ManMerge1539,54853
Dss_Ent_t * Dss_ManSharedMapDerive( Dss_Man_t * p, int iDsd0, int iDsd1, Vec_Str_t * vShared )Dss_ManSharedMapDerive1681,59196
int Mpm_FuncCompute( Dss_Man_t * p, int iDsd0, int iDsd1, Vec_Str_t * vShared, int * pPerm, int * pnLeaves )Mpm_FuncCompute1693,59629
int Dss_ObjCheckTransparent( Dss_Man_t * p, Dss_Obj_t * pObj )Dss_ObjCheckTransparent1776,61898
void Dau_DsdTest__()Dau_DsdTest__1816,62925
void Dau_DsdTest()Dau_DsdTest1841,63496
void Dau_DsdTest444()Dau_DsdTest4441978,68454

src/opt/dau/dauMerge.c,3898
typedef struct Dau_Sto_t_ Dau_Sto_t;Dau_Sto_t47,1291
struct Dau_Sto_t_Dau_Sto_t_48,1328
    int      iVarUsed;                          // counter of used variablesiVarUsed50,1348
    char     pOutput[DAU_MAX_STR];              // storage for reduced functionpOutput51,1425
    char *   pPosOutput;                        // place in the outputpPosOutput52,1505
    char     pStore[DAU_MAX_VAR][DAU_MAX_STR];  // storage for definitionspStore53,1576
    char *   pPosStore[DAU_MAX_VAR];            // place in the storepPosStore54,1651
static inline void Dau_DsdMergeStoreClean( Dau_Sto_t * pS, int nShared )Dau_DsdMergeStoreClean57,1725
static inline void Dau_DsdMergeStoreCleanOutput( Dau_Sto_t * pS )Dau_DsdMergeStoreCleanOutput65,1913
static inline void Dau_DsdMergeStoreAddToOutput( Dau_Sto_t * pS, char * pBeg, char * pEnd )Dau_DsdMergeStoreAddToOutput69,2017
static inline void Dau_DsdMergeStoreAddToOutputChar( Dau_Sto_t * pS, char c )Dau_DsdMergeStoreAddToOutputChar74,2176
static inline int Dau_DsdMergeStoreStartDef( Dau_Sto_t * pS, char c )Dau_DsdMergeStoreStartDef79,2286
static inline void Dau_DsdMergeStoreAddToDef( Dau_Sto_t * pS, int New, char * pBeg, char * pEnd )Dau_DsdMergeStoreAddToDef85,2494
static inline void Dau_DsdMergeStoreAddToDefChar( Dau_Sto_t * pS, int New, char c )Dau_DsdMergeStoreAddToDefChar90,2663
static inline void Dau_DsdMergeStoreStopDef( Dau_Sto_t * pS, int New, char c )Dau_DsdMergeStoreStopDef94,2782
static inline char Dau_DsdMergeStoreCreateDef( Dau_Sto_t * pS, char * pBeg, char * pEnd )Dau_DsdMergeStoreCreateDef100,2935
static inline void Dau_DsdMergeStorePrintDefs( Dau_Sto_t * pS )Dau_DsdMergeStorePrintDefs107,3193
static inline void Dau_DsdMergeCopy( char * pDsd, int fCompl, char * pRes )Dau_DsdMergeCopy126,3657
static inline void Dau_DsdMergeReplace( char * pDsd, int * pMatches, int * pMap )Dau_DsdMergeReplace147,4269
static inline void Dau_DsdMergeMatches( char * pDsd, int * pMatches )Dau_DsdMergeMatches163,4864
static inline void Dau_DsdMergeVarPres( char * pDsd, int * pMatches, int * pPres, int Mask )Dau_DsdMergeVarPres178,5385
static inline int Dau_DsdMergeCountShared( int * pPres, int Mask )Dau_DsdMergeCountShared197,6075
static inline int Dau_DsdMergeFindShared( char * pDsd0, char * pDsd1, int * pMatches0, int * pMatches1, int * pVarPres )Dau_DsdMergeFindShared204,6269
static inline int Dau_DsdMergeCreateMaps( int * pVarPres, int nShared, int * pOld2New, int * pNew2Old )Dau_DsdMergeCreateMaps211,6613
static inline void Dau_DsdMergeInlineDefinitions( char * pDsd, int * pMatches, Dau_Sto_t * pS, char * pRes, int nShared )Dau_DsdMergeInlineDefinitions232,7199
static inline void Dau_DsdMergePrintWithStatus( char * p, int * pStatus )Dau_DsdMergePrintWithStatus276,8580
int Dau_DsdMergeStatus_rec( char * pStr, char ** p, int * pMatches, int nShared, int * pStatus )Dau_DsdMergeStatus_rec289,8993
static inline int Dau_DsdMergeStatus( char * pDsd, int * pMatches, int nShared, int * pStatus )Dau_DsdMergeStatus346,10614
static inline int Dau_DsdMergeGetStatus( char * pBeg, char * pStr, int * pMatches, int * pStatus )Dau_DsdMergeGetStatus362,11048
void Dau_DsdMergeSubstitute_rec( Dau_Sto_t * pS, char * pStr, char ** p, int * pMatches, int * pStatus, int fWrite )Dau_DsdMergeSubstitute_rec376,11457
static inline void Dau_DsdMergeSubstitute( Dau_Sto_t * pS, char * pDsd, int * pMatches, int * pStatus )Dau_DsdMergeSubstitute494,15423
void Dau_DsdRemoveBraces_rec( char * pStr, char ** p, int * pMatches )Dau_DsdRemoveBraces_rec520,16054
void Dau_DsdRemoveBraces( char * pDsd, int * pMatches )Dau_DsdRemoveBraces554,17087
abctime s_TimeComp[4] = {0};s_TimeComp574,17507
char * Dau_DsdMerge( char * pDsd0i, int * pPerm0, char * pDsd1i, int * pPerm1, int fCompl0, int fCompl1, int nVars )Dau_DsdMerge587,17808
void Dau_DsdTest66()Dau_DsdTest66771,23369

src/opt/dau/dau.h,1525
#define ABC__DAU___hABC__DAU___h22,518
#define DAU_MAX_VAR DAU_MAX_VAR42,1133
#define DAU_MAX_STR DAU_MAX_STR43,1182
#define DAU_MAX_WORD DAU_MAX_WORD44,1208
    DAU_DSD_NONE = 0,      // 0:  unknownDAU_DSD_NONE52,1505
    DAU_DSD_CONST0,        // 1:  constantDAU_DSD_CONST053,1547
    DAU_DSD_VAR,           // 2:  variableDAU_DSD_VAR54,1590
    DAU_DSD_AND,           // 3:  ANDDAU_DSD_AND55,1633
    DAU_DSD_XOR,           // 4:  XORDAU_DSD_XOR56,1671
    DAU_DSD_MUX,           // 5:  MUXDAU_DSD_MUX57,1709
    DAU_DSD_PRIME          // 6:  PRIMEDAU_DSD_PRIME58,1747
} Dau_DsdType_t;Dau_DsdType_t59,1787
typedef struct Dss_Man_t_ Dss_Man_t;Dss_Man_t61,1805
typedef struct Abc_TtHieMan_t_ Abc_TtHieMan_t;Abc_TtHieMan_t62,1842
typedef unsigned(*TtCanonicizeFunc)(Abc_TtHieMan_t * p, word * pTruth, int nVars, char * pCanonPerm, int flag);TtCanonicizeFunc63,1889
static inline int Dau_DsdIsConst( char * p )  { return (p[0] == '0' || p[0] == '1') && p[1] == 0;    }Dau_DsdIsConst69,2222
static inline int Dau_DsdIsConst0( char * p ) { return  p[0] == '0' && p[1] == 0;                    }Dau_DsdIsConst070,2325
static inline int Dau_DsdIsConst1( char * p ) { return  p[0] == '1' && p[1] == 0;                    }Dau_DsdIsConst171,2428
static inline int Dau_DsdIsVar( char * p )    { if ( *p == '!' ) p++; return *p >= 'a' && *p <= 'z'; }Dau_DsdIsVar72,2531
static inline int Dau_DsdReadVar( char * p )  { if ( *p == '!' ) p++; return *p - 'a';               }Dau_DsdReadVar73,2634

src/opt/dau/dauGia.c,1235
#define DAU_DSD_MAX_VAR DAU_DSD_MAX_VAR33,959
static int m_Calls = 0;m_Calls35,987
static int m_NonDsd = 0;m_NonDsd36,1011
static int m_Non1Step = 0;m_Non1Step37,1036
int Dau_DsdToGiaCompose_rec( Gia_Man_t * pGia, word Func, int * pFanins, int nVars )Dau_DsdToGiaCompose_rec54,1551
int Dau_DsdToGia2_rec( Gia_Man_t * pGia, char * pStr, char ** p, int * pMatches, int * pLits, Vec_Int_t * vCover )Dau_DsdToGia2_rec88,2663
int Dau_DsdToGia2( Gia_Man_t * pGia, char * p, int * pLits, Vec_Int_t * vCover )Dau_DsdToGia2195,6550
void Dau_DsdAddToArray( Gia_Man_t * pGia, int * pFans, int nFans, int iFan )Dau_DsdAddToArray219,7165
int Dau_DsdBalance( Gia_Man_t * pGia, int * pFans, int nFans, int fAnd )Dau_DsdBalance232,7541
int Dau_DsdToGia_rec( Gia_Man_t * pGia, char * pStr, char ** p, int * pMatches, int * pLits, Vec_Int_t * vCover )Dau_DsdToGia_rec282,9199
int Dau_DsdToGia( Gia_Man_t * pGia, char * p, int * pLits, Vec_Int_t * vCover )Dau_DsdToGia417,14286
int Dsm_ManTruthToGia( void * p, word * pTruth, Vec_Int_t * vLeaves, Vec_Int_t * vCover )Dsm_ManTruthToGia441,14893
void Dsm_ManReportStats()Dsm_ManReportStats486,16497
void * Dsm_ManDeriveGia( void * pGia, int fUseMuxes )Dsm_ManDeriveGia503,16942

src/opt/dau/dauDivs.c,125
Vec_Int_t * Dau_DsdDivisors( word * pTruth, int nVars )Dau_DsdDivisors46,1258
void Dau_DsdTest000()Dau_DsdTest00090,2579

src/opt/dau/dau.c,0

src/opt/dau/dauCore.c,624
typedef struct Xyz_ParTry_t_ Xyz_ParTry_t;Xyz_ParTry_t31,829
struct Xyz_ParTry_t_Xyz_ParTry_t_32,872
    int                Par;Par34,895
typedef struct Xyz_ManTry_t_ Xyz_ManTry_t;Xyz_ManTry_t38,949
struct Xyz_ManTry_t_Xyz_ManTry_t_39,992
    Xyz_ParTry_t *     pPar;           // parameterspPar41,1015
    Aig_Man_t *        pAig;           // user's AIG pAig42,1068
Xyz_ManTry_t * Xyz_ManTryAlloc( Aig_Man_t * pAig, Xyz_ParTry_t * pPar )Xyz_ManTryAlloc60,1581
void Xyz_ManTryFree( Xyz_ManTry_t * p )Xyz_ManTryFree80,2013
int Xyz_ManPerform( Aig_Man_t * pAig, Xyz_ParTry_t * pPar )Xyz_ManPerform96,2311

src/opt/dau/dauDsd.c,8420
static inline word ** Dau_DsdTtElems()Dau_DsdTtElems56,1538
int * Dau_DsdComputeMatches( char * p )Dau_DsdComputeMatches80,2142
int Dau_DsdFindVarNum( char * pDsd )Dau_DsdFindVarNum109,2928
void Dau_DsdGenRandPerm( int * pPerm, int nVars )Dau_DsdGenRandPerm118,3138
void Dau_DsdPermute( char * pDsd )Dau_DsdPermute129,3390
char * Dau_DsdNormalizeCopy( char * pDest, char * pSour, int * pMarks, int i )Dau_DsdNormalizeCopy151,3934
int Dau_DsdNormalizeCompare( char * pStr, int * pMarks, int i, int j )Dau_DsdNormalizeCompare158,4123
int * Dau_DsdNormalizePerm( char * pStr, int * pMarks, int nMarks )Dau_DsdNormalizePerm189,4940
void Dau_DsdNormalize_rec( char * pStr, char ** p, int * pMatches )Dau_DsdNormalize_rec205,5413
void Dau_DsdNormalize( char * pDsd )Dau_DsdNormalize260,7185
int Dau_DsdCountAnds_rec( char * pStr, char ** p, int * pMatches )Dau_DsdCountAnds_rec279,7561
int Dau_DsdCountAnds( char * pDsd )Dau_DsdCountAnds316,8699
word Dau_Dsd6TruthCompose_rec( word Func, word * pFanins, int nVars )Dau_Dsd6TruthCompose_rec334,9134
word Dau_Dsd6ToTruth_rec( char * pStr, char ** p, int * pMatches, word * pTruths )Dau_Dsd6ToTruth_rec353,9842
word Dau_Dsd6ToTruth( char * p )Dau_Dsd6ToTruth445,12956
void Dau_DsdTruth6Compose_rec( word Func, word pFanins[DAU_MAX_VAR][DAU_MAX_WORD], word * pRes, int nVars, int nWordsR )Dau_DsdTruth6Compose_rec469,13532
void Dau_DsdTruthCompose_rec( word * pFunc, word pFanins[DAU_MAX_VAR][DAU_MAX_WORD], word * pRes, int nVars, int nWordsR )Dau_DsdTruthCompose_rec501,14549
void Dau_DsdToTruth_rec( char * pStr, char ** p, int * pMatches, word ** pTtElems, word * pRes, int nVars )Dau_DsdToTruth_rec535,15598
word * Dau_DsdToTruth( char * p, int nVars )Dau_DsdToTruth609,18206
void Dau_DsdTest2()Dau_DsdTest2637,18928
static inline int Dau_DsdPerformReplace( char * pBuffer, int PosStart, int Pos, int Symb, char * pNext )Dau_DsdPerformReplace657,19345
int Dau_DsdPerform_rec( word t, char * pBuffer, int Pos, int * pVars, int nVars )Dau_DsdPerform_rec673,19883
char * Dau_DsdPerform( word t )Dau_DsdPerform828,25953
void Dau_DsdTest3()Dau_DsdTest3858,26724
int Dau_DsdCheck1Step( void * p, word * pTruth, int nVarsInit, int * pVarLevels )Dau_DsdCheck1Step893,28131
typedef struct Dau_Dsd_t_ Dau_Dsd_t;Dau_Dsd_t955,30312
struct Dau_Dsd_t_Dau_Dsd_t_956,30349
    int      nVarsInit;            // the initial number of variablesnVarsInit958,30369
    int      nVarsUsed;            // the current number of variablesnVarsUsed959,30439
    int      nPos;                 // writing positionnPos960,30509
    int      nSizeNonDec;          // size of the largest non-decomposable blocknSizeNonDec961,30564
    int      nConsts;              // the number of constant decompositionsnConsts962,30645
    int      uConstMask;           // constant decomposition maskuConstMask963,30721
    int      fSplitPrime;          // represent prime function as 1-step DSDfSplitPrime964,30787
    int      fWriteTruth;          // writing truth table as a hex stringfWriteTruth965,30864
    int *    pVarLevels;           // variable levelspVarLevels966,30938
    char     pVarDefs[32][8];      // variable definitionspVarDefs967,30992
    char     Cache[32][32];        // variable cacheCache968,31051
    char     pOutput[DAU_MAX_STR]; // output streampOutput969,31104
static abctime s_Times[3] = {0};s_Times972,31160
static inline void Dau_DsdInitialize( Dau_Dsd_t * p, int nVarsInit )Dau_DsdInitialize985,31463
static inline void Dau_DsdWriteString( Dau_Dsd_t * p, char * pStr )Dau_DsdWriteString1002,31965
static inline void Dau_DsdWriteVar( Dau_Dsd_t * p, int iVar, int fInv )Dau_DsdWriteVar1007,32100
int Dau_DsdLevelVar( void * pMan, int iVar )Dau_DsdLevelVar1018,32481
static inline void Dau_DsdTranslate( Dau_Dsd_t * p, int * pVars, int nVars, char * pStr )Dau_DsdTranslate1033,32943
static inline int Dau_DsdWritePrime( Dau_Dsd_t * p, word * pTruth, int * pVars, int nVars )Dau_DsdWritePrime1041,33231
static inline void Dau_DsdFinalize( Dau_Dsd_t * p )Dau_DsdFinalize1083,34850
static inline int Dau_DsdAddVarDef( Dau_Dsd_t * p, char * pStr )Dau_DsdAddVarDef1090,35078
static inline int Dau_DsdFindVarDef( int * pVars, int nVars, int VarDef )Dau_DsdFindVarDef1102,35468
static inline void Dau_DsdInsertVarCache( Dau_Dsd_t * p, int v, int u, int Status )Dau_DsdInsertVarCache1111,35683
static inline int Dau_DsdLookupVarCache( Dau_Dsd_t * p, int v, int u )Dau_DsdLookupVarCache1118,35897
static inline int Dau_Dsd6DecomposeSingleVarOne( Dau_Dsd_t * p, word * pTruth, int * pVars, int nVars, int v )Dau_Dsd6DecomposeSingleVarOne1134,36282
int Dau_Dsd6DecomposeSingleVar( Dau_Dsd_t * p, word * pTruth, int * pVars, int nVars )Dau_Dsd6DecomposeSingleVar1191,37913
static inline int Dau_Dsd6FindSupportOne( Dau_Dsd_t * p, word tCof0, word tCof1, int * pVars, int nVars, int v, int u )Dau_Dsd6FindSupportOne1212,38515
static inline unsigned Dau_Dsd6FindSupports( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v )Dau_Dsd6FindSupports1223,38926
static inline void Dau_DsdPrintSupports( unsigned uSupp, int nVars )Dau_DsdPrintSupports1236,39488
static inline int Dau_Dsd6DecomposeDoubleVarsOne( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v, int u )Dau_Dsd6DecomposeDoubleVarsOne1257,40043
int Dau_Dsd6DecomposeDoubleVars( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars )Dau_Dsd6DecomposeDoubleVars1320,42729
static inline int Dau_Dsd6DecomposeTripleVarsOuter( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v )Dau_Dsd6DecomposeTripleVarsOuter1353,43715
static inline int Dau_Dsd6DecomposeTripleVarsInner( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v, unsigned uSupports )Dau_Dsd6DecomposeTripleVarsInner1384,44949
int Dau_Dsd6DecomposeTripleVars( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars )Dau_Dsd6DecomposeTripleVars1419,46673
int Dau_Dsd6DecomposeInternal( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars )Dau_Dsd6DecomposeInternal1461,48272
static inline int Dau_DsdDecomposeSingleVarOne( Dau_Dsd_t * p, word * pTruth, int * pVars, int nVars, int v )Dau_DsdDecomposeSingleVarOne1490,49215
int Dau_DsdDecomposeSingleVar( Dau_Dsd_t * p, word * pTruth, int * pVars, int nVars )Dau_DsdDecomposeSingleVar1550,50951
static inline int Dau_DsdFindSupportOne( Dau_Dsd_t * p, word * pTruth, int * pVars, int nVars, int v, int u )Dau_DsdFindSupportOne1572,51552
static inline unsigned Dau_DsdFindSupports( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v )Dau_DsdFindSupports1589,52337
static inline int Dau_DsdDecomposeDoubleVarsOne( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v, int u )Dau_DsdDecomposeDoubleVarsOne1602,52848
int Dau_DsdDecomposeDoubleVars( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars )Dau_DsdDecomposeDoubleVars1697,57669
static inline int Dau_DsdDecomposeTripleVarsOuter( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v )Dau_DsdDecomposeTripleVarsOuter1730,58653
static inline int Dau_DsdDecomposeTripleVarsInner( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars, int v, unsigned uSupports )Dau_DsdDecomposeTripleVarsInner1764,60172
int Dau_DsdDecomposeTripleVars( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars )Dau_DsdDecomposeTripleVars1812,62740
int Dau_DsdDecomposeInternal( Dau_Dsd_t * p, word  * pTruth, int * pVars, int nVars )Dau_DsdDecomposeInternal1854,64334
int Dau_DsdMinBase( word * pTruth, int nVars, int * pVarsNew )Dau_DsdMinBase1883,65251
int Dau_DsdDecomposeInt( Dau_Dsd_t * p, word * pTruth, int nVarsInit )Dau_DsdDecomposeInt1897,65621
int Dau_DsdDecompose( word * pTruth, int nVarsInit, int fSplitPrime, int fWriteTruth, char * pRes )Dau_DsdDecompose1912,66182
int Dau_DsdDecomposeLevel( word * pTruth, int nVarsInit, int fSplitPrime, int fWriteTruth, char * pRes, int * pVarLevels )Dau_DsdDecomposeLevel1936,67105
void Dau_DsdPrintFromTruthFile( FILE * pFile, word * pTruth, int nVarsInit )Dau_DsdPrintFromTruthFile1960,68057
void Dau_DsdPrintFromTruth( word * pTruth, int nVarsInit )Dau_DsdPrintFromTruth1968,68348
void Dau_DsdPrintFromTruth2( word * pTruth, int nVarsInit )Dau_DsdPrintFromTruth21976,68622
void Dau_DsdTest44()Dau_DsdTest441985,68896
void Dau_DsdTest888()Dau_DsdTest8882007,69463
void Dau_DsdTest555()Dau_DsdTest5552040,70376

src/opt/mfs/mfsStrash.c,970
void Abc_MfsConvertAigToHop_rec( Aig_Obj_t * pObj, Hop_Man_t * pHop )Abc_MfsConvertAigToHop_rec44,1337
Hop_Obj_t * Abc_MfsConvertAigToHop( Aig_Man_t * pMan, Hop_Man_t * pHop )Abc_MfsConvertAigToHop67,2181
void Abc_MfsConvertHopToAig_rec( Hop_Obj_t * pObj, Aig_Man_t * pMan )Abc_MfsConvertHopToAig_rec98,3242
void Abc_MfsConvertHopToAig( Abc_Obj_t * pObjOld, Aig_Man_t * pMan )Abc_MfsConvertHopToAig121,4033
Aig_Obj_t * Abc_NtkConstructAig_rec( Mfs_Man_t * p, Abc_Obj_t * pNode, Aig_Man_t * pMan )Abc_NtkConstructAig_rec166,5596
Aig_Obj_t * Abc_NtkConstructCare_rec( Aig_Man_t * pCare, Aig_Obj_t * pObj, Aig_Man_t * pMan )Abc_NtkConstructCare_rec203,6755
Aig_Man_t * Abc_NtkConstructAig( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkConstructAig233,7858
Aig_Man_t * Abc_NtkAigForConstraints( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkAigForConstraints325,10947
double Abc_NtkConstraintRatio( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkConstraintRatio386,12831

src/opt/mfs/mfs_.c,0

src/opt/mfs/mfsCore.c,473
void Abc_NtkMfsParsDefault( Mfs_Par_t * pPars )Abc_NtkMfsParsDefault47,1370
int Abc_WinNode(Mfs_Man_t * p, Abc_Obj_t *pNode)Abc_WinNode87,2444
void Abc_NtkMfsPowerResub( Mfs_Man_t * p, Mfs_Par_t * pPars)Abc_NtkMfsPowerResub154,4660
int Abc_NtkMfsResub( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsResub236,7360
int Abc_NtkMfsNode( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsNode306,9592
int Abc_NtkMfs( Abc_Ntk_t * pNtk, Mfs_Par_t * pPars )Abc_NtkMfs377,12125

src/opt/mfs/mfsResub.c,959
void Abc_NtkMfsUpdateNetwork( Mfs_Man_t * p, Abc_Obj_t * pObj, Vec_Ptr_t * vMfsFanins, Hop_Obj_t * pFunc )Abc_NtkMfsUpdateNetwork45,1317
void Abc_NtkMfsPrintResubStats( Mfs_Man_t * p )Abc_NtkMfsPrintResubStats72,2199
int Abc_NtkMfsTryResubOnce( Mfs_Man_t * p, int * pCands, int nCands )Abc_NtkMfsTryResubOnce101,3133
int Abc_NtkMfsSolveSatResub( Mfs_Man_t * p, Abc_Obj_t * pNode, int iFanin, int fOnlyRemove, int fSkipUpdate )Abc_NtkMfsSolveSatResub165,4819
int Abc_NtkMfsSolveSatResub2( Mfs_Man_t * p, Abc_Obj_t * pNode, int iFanin, int iFanin2 )Abc_NtkMfsSolveSatResub2319,10113
int Abc_NtkMfsEdgeSwapEval( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsEdgeSwapEval488,15976
int Abc_NtkMfsEdgePower( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsEdgePower508,16491
int Abc_NtkMfsResubNode( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsResubNode539,17302
int Abc_NtkMfsResubNode2( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsResubNode2585,18640

src/opt/mfs/mfsCore_.c,311
void Abc_NtkMfsParsDefault( Mfs_Par_t * pPars )Abc_NtkMfsParsDefault45,1268
int Abc_NtkMfsResub( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsResub74,2014
int Abc_NtkMfsNode( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsNode135,3997
int Abc_NtkMfs( Abc_Ntk_t * pNtk, Mfs_Par_t * pPars )Abc_NtkMfs206,6464

src/opt/mfs/mfsInt.h,4751
#define ABC__opt__mfs__mfsInt_hABC__opt__mfs__mfsInt_h22,567
#define MFS_FANIN_MAX MFS_FANIN_MAX47,1280
typedef struct Mfs_Man_t_ Mfs_Man_t;Mfs_Man_t49,1308
struct Mfs_Man_t_Mfs_Man_t_50,1345
    Mfs_Par_t *         pPars;pPars53,1383
    Abc_Ntk_t *         pNtk;pNtk54,1414
    Aig_Man_t *         pCare;pCare55,1444
    Vec_Ptr_t *         vSuppsInv;vSuppsInv56,1475
    int                 nFaninMax;nFaninMax57,1510
    Vec_Ptr_t *         vRoots;    // the roots of the windowvRoots59,1584
    Vec_Ptr_t *         vSupp;     // the support of the windowvSupp60,1646
    Vec_Ptr_t *         vNodes;    // the internal nodes of the windowvNodes61,1710
    Vec_Ptr_t *         vDivs;     // the divisors of the nodevDivs62,1781
    Vec_Int_t *         vDivLits;  // the SAT literals of divisor nodesvDivLits63,1844
    Vec_Int_t *         vProjVarsCnf; // the projection variablesvProjVarsCnf64,1916
    Vec_Int_t *         vProjVarsSat; // the projection variablesvProjVarsSat65,1982
    Vec_Ptr_t *         vDivCexes; // the counter-example for dividorsvDivCexes67,2084
    int                 nDivWords; // the number of wordsnDivWords68,2155
    int                 nCexes;    // the numbe rof current counter-examplesnCexes69,2213
    int                 nSatCalls; nSatCalls70,2290
    int                 nSatCexes;nSatCexes71,2326
    Vec_Int_t *         vTruth;vTruth81,2769
    Bdc_Man_t *         pManDec;pManDec82,2801
    int                 nNodesDec;nNodesDec83,2834
    int                 nNodesGained;nNodesGained84,2869
    int                 nNodesGainedLevel;nNodesGainedLevel85,2907
    Aig_Man_t *         pAigWin;   // window AIG with constraintspAigWin87,2970
    Cnf_Dat_t *         pCnf;      // the CNF for the windowpCnf88,3036
    sat_solver *        pSat;      // the SAT solver used pSat89,3097
    Int_Man_t *         pMan;      // interpolation manager;pMan90,3156
    Vec_Int_t *         vMem;      // memory for intermediate SOPsvMem91,3217
    Vec_Vec_t *         vLevels;   // levelized structure for updatingvLevels92,3284
    Vec_Ptr_t *         vMfsFanins;   // the new set of faninsvMfsFanins93,3355
    int                 nTotConfLim; // total conflict limitnTotConfLim94,3418
    int                 nTotConfLevel; // total conflicts on this levelnTotConfLevel95,3479
    Vec_Int_t *         vProbs; vProbs97,3577
    int                 nFanins;   // the number of faninsnFanins99,3639
    int                 nWords;    // the number of wordsnWords100,3698
    int                 nCares;    // the number of care mintermsnCares101,3756
    unsigned            uCare[(MFS_FANIN_MAX<=5)?1:1<<(MFS_FANIN_MAX-5)];  // the computed care-setuCare102,3822
    int                 nTryRemoves; // number of fanin removalsnTryRemoves104,3952
    int                 nTryResubs;  // number of resubstitutionsnTryResubs105,4017
    int                 nRemoves;    // number of fanin removalsnRemoves106,4083
    int                 nResubs;     // number of resubstitutionsnResubs107,4148
    int                 nNodesTried;nNodesTried108,4214
    int                 nNodesResub;nNodesResub109,4251
    int                 nMintsCare;nMintsCare110,4288
    int                 nMintsTotal;nMintsTotal111,4324
    int                 nNodesBad;nNodesBad112,4361
    int                 nTotalDivs;nTotalDivs113,4396
    int                 nTimeOuts;nTimeOuts114,4432
    int                 nTimeOutsLevel;nTimeOutsLevel115,4467
    int                 nDcMints;nDcMints116,4507
    int                 nMaxDivs;nMaxDivs117,4541
    double              dTotalRatios;dTotalRatios118,4575
    int                 nTotalNodesBeg;nTotalNodesBeg120,4636
    int                 nTotalNodesEnd;nTotalNodesEnd121,4676
    int                 nTotalEdgesBeg;nTotalEdgesBeg122,4716
    int                 nTotalEdgesEnd;nTotalEdgesEnd123,4756
    float               TotalSwitchingBeg;TotalSwitchingBeg124,4796
    float               TotalSwitchingEnd;TotalSwitchingEnd125,4839
    abctime             timeWin;timeWin127,4900
    abctime             timeDiv;timeDiv128,4933
    abctime             timeAig;timeAig129,4966
    abctime             timeGia;timeGia130,4999
    abctime             timeCnf;timeCnf131,5032
    abctime             timeSat;timeSat132,5065
    abctime             timeInt;timeInt133,5098
    abctime             timeTotal;timeTotal134,5131
static inline float Abc_MfsObjProb( Mfs_Man_t * p, Abc_Obj_t * pObj ) { return (p->vProbs && pObj->Id < Vec_IntSize(p->vProbs))? Abc_Int2Float(Vec_IntEntry(p->vProbs,pObj->Id)) : 0.0; }Abc_MfsObjProb137,5170

src/opt/mfs/mfsResub_.c,955
void Abc_NtkMfsUpdateNetwork( Mfs_Man_t * p, Abc_Obj_t * pObj, Vec_Ptr_t * vFanins, Hop_Obj_t * pFunc )Abc_NtkMfsUpdateNetwork45,1316
void Abc_NtkMfsPrintResubStats( Mfs_Man_t * p )Abc_NtkMfsPrintResubStats72,2179
int Abc_NtkMfsTryResubOnce( Mfs_Man_t * p, int * pCands, int nCands )Abc_NtkMfsTryResubOnce101,3109
int Abc_NtkMfsSolveSatResub( Mfs_Man_t * p, Abc_Obj_t * pNode, int iFanin, int fOnlyRemove, int fSkipUpdate )Abc_NtkMfsSolveSatResub141,4235
int Abc_NtkMfsSolveSatResub2( Mfs_Man_t * p, Abc_Obj_t * pNode, int iFanin, int iFanin2 )Abc_NtkMfsSolveSatResub2291,9187
int Abc_NtkMfsEdgeSwapEval( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsEdgeSwapEval440,14294
int Abc_NtkMfsEdgePower( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsEdgePower460,14809
int Abc_NtkMfsResubNode( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsResubNode486,15482
int Abc_NtkMfsResubNode2( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsResubNode2530,16814

src/opt/mfs/mfsGia.c,764
static inline int Gia_ObjChild0Copy( Aig_Obj_t * pObj )  { return Gia_LitNotCond( Aig_ObjFanin0(pObj)->iData, Aig_ObjFaninC0(pObj) ); }Gia_ObjChild0Copy31,854
static inline int Gia_ObjChild1Copy( Aig_Obj_t * pObj )  { return Gia_LitNotCond( Aig_ObjFanin1(pObj)->iData, Aig_ObjFaninC1(pObj) ); }Gia_ObjChild1Copy32,990
Gia_Man_t * Gia_ManCreateResubMiter( Aig_Man_t * p )Gia_ManCreateResubMiter53,1719
void Abc_NtkMfsConstructGia( Mfs_Man_t * p )Abc_NtkMfsConstructGia120,3930
void Abc_NtkMfsDeconstructGia( Mfs_Man_t * p )Abc_NtkMfsDeconstructGia150,4696
void Abc_NtkMfsResimulate( Gia_Man_t * p, Vec_Int_t * vCex )Abc_NtkMfsResimulate169,5118
int Abc_NtkMfsTryResubOnceGia( Mfs_Man_t * p, int * pCands, int nCands )Abc_NtkMfsTryResubOnceGia204,6069

src/opt/mfs/mfsInter.c,567
int Abc_MfsSatAddXor( sat_solver * pSat, int iVarA, int iVarB, int iVarC )Abc_MfsSatAddXor46,1365
sat_solver * Abc_MfsCreateSolverResub( Mfs_Man_t * p, int * pCands, int nCands, int fInvert )Abc_MfsCreateSolverResub88,2500
unsigned * Abc_NtkMfsInterplateTruth( Mfs_Man_t * p, int * pCands, int nCands, int fInvert )Abc_NtkMfsInterplateTruth235,7253
int Abc_NtkMfsInterplateEval( Mfs_Man_t * p, int * pCands, int nCands )Abc_NtkMfsInterplateEval285,8770
Hop_Obj_t * Abc_NtkMfsInterplate( Mfs_Man_t * p, int * pCands, int nCands )Abc_NtkMfsInterplate329,9889

src/opt/mfs/mfsWin.c,380
static inline int Abc_MfsComputeRootsCheck( Abc_Obj_t * pNode, int nLevelMax, int nFanoutLimit )Abc_MfsComputeRootsCheck45,1325
void Abc_MfsComputeRoots_rec( Abc_Obj_t * pNode, int nLevelMax, int nFanoutLimit, Vec_Ptr_t * vRoots )Abc_MfsComputeRoots_rec72,2167
Vec_Ptr_t * Abc_MfsComputeRoots( Abc_Obj_t * pNode, int nWinTfoMax, int nFanoutLimit )Abc_MfsComputeRoots99,3082

src/opt/mfs/mfsDiv.c,618
void Abc_MfsWinMarkTfi_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vCone )Abc_MfsWinMarkTfi_rec45,1319
Vec_Ptr_t * Abc_MfsWinMarkTfi( Abc_Obj_t * pNode )Abc_MfsWinMarkTfi75,2085
void Abc_MfsWinSweepLeafTfo_rec( Abc_Obj_t * pObj, int nLevelLimit )Abc_MfsWinSweepLeafTfo_rec94,2551
int Abc_MfsNodeDeref_rec( Abc_Obj_t * pNode )Abc_MfsNodeDeref_rec118,3203
int Abc_MfsNodeRef_rec( Abc_Obj_t * pNode )Abc_MfsNodeRef_rec145,3872
int Abc_MfsWinVisitMffc( Abc_Obj_t * pNode )Abc_MfsWinVisitMffc170,4474
Vec_Ptr_t * Abc_MfsComputeDivisors( Mfs_Man_t * p, Abc_Obj_t * pNode, int nLevDivMax )Abc_MfsComputeDivisors193,5094

src/opt/mfs/mfsMan.c,235
Mfs_Man_t * Mfs_ManAlloc( Mfs_Par_t * pPars )Mfs_ManAlloc45,1270
void Mfs_ManClean( Mfs_Man_t * p )Mfs_ManClean75,2155
void Mfs_ManPrint( Mfs_Man_t * p )Mfs_ManPrint111,2972
void Mfs_ManStop( Mfs_Man_t * p )Mfs_ManStop170,5985

src/opt/mfs/mfsSat.c,235
int Abc_NtkMfsSolveSat_iter( Mfs_Man_t * p )Abc_NtkMfsSolveSat_iter45,1317
int Abc_NtkMfsSolveSat( Mfs_Man_t * p, Abc_Obj_t * pNode )Abc_NtkMfsSolveSat95,2984
int Abc_NtkAddOneHotness( Mfs_Man_t * p )Abc_NtkAddOneHotness155,5001

src/opt/mfs/mfs.h,1558
#define ABC__opt__mfs__mfs_hABC__opt__mfs__mfs_h22,558
typedef struct Mfs_Par_t_ Mfs_Par_t;Mfs_Par_t42,1280
struct Mfs_Par_t_Mfs_Par_t_43,1317
    int           nWinTfoLevs;   // the maximum fanout levelsnWinTfoLevs46,1363
    int           nFanoutsMax;   // the maximum number of fanoutsnFanoutsMax47,1425
    int           nDepthMax;     // the maximum number of logic levelsnDepthMax48,1491
    int           nWinMax;       // the maximum size of the windownWinMax49,1562
    int           nGrowthLevel;  // the maximum allowed growth in levelnGrowthLevel50,1629
    int           nBTLimit;      // the maximum number of conflicts in one SAT runnBTLimit51,1701
    int           fRrOnly;       // perform redundance removalfRrOnly52,1784
    int           fResub;        // performs resubstitutionfResub53,1847
    int           fArea;         // performs optimization for areafArea54,1907
    int           fMoreEffort;   // performs high-affort minimizationfMoreEffort55,1974
    int           fSwapEdge;     // performs edge swappingfSwapEdge56,2044
    int           fOneHotness;   // adds one-hotness conditionsfOneHotness57,2103
    int           fDelay;        // performs optimization for delayfDelay58,2167
    int           fPower;        // performs power-aware optimizationfPower59,2235
    int           fGiaSat;       // use new SAT solverfGiaSat60,2305
    int           fVerbose;      // enable basic statsfVerbose61,2360
    int           fVeryVerbose;  // enable detailed statsfVeryVerbose62,2415

src/opt/sim/simSat.c,0

src/opt/sim/sim.h,5273
#define ABC__opt__sim__sim_hABC__opt__sim__sim_h22,524
typedef struct Sym_Man_t_ Sym_Man_t;Sym_Man_t48,1435
struct Sym_Man_t_Sym_Man_t_49,1472
    Abc_Ntk_t *       pNtk;          // the network pNtk52,1522
    Vec_Ptr_t *       vNodes;        // internal nodes in topological ordervNodes53,1575
    int               nInputs;nInputs54,1651
    int               nOutputs;nOutputs55,1682
    int               nSimWords;     // the number of bits in simulation infonSimWords57,1753
    Vec_Ptr_t *       vSim;          // simulation infovSim58,1831
    Vec_Ptr_t *       vSuppFun;      // bit representationvSuppFun60,1914
    Vec_Vec_t *       vSupports;     // integer representationvSupports61,1973
    Vec_Ptr_t *       vMatrSymms;    // symmetric pairsvMatrSymms63,2073
    Vec_Ptr_t *       vMatrNonSymms; // non-symmetric pairsvMatrNonSymms64,2129
    Vec_Int_t *       vPairsTotal;   // total pairsvPairsTotal65,2189
    Vec_Int_t *       vPairsSym;     // symmetric pairsvPairsSym66,2241
    Vec_Int_t *       vPairsNonSym;  // non-symmetric pairsvPairsNonSym67,2297
    unsigned *        uPatRand;uPatRand69,2390
    unsigned *        uPatCol;uPatCol70,2422
    unsigned *        uPatRow;uPatRow71,2453
    Vec_Int_t *       vVarsU;vVarsU73,2501
    Vec_Int_t *       vVarsV;vVarsV74,2531
    int               iOutput;iOutput75,2561
    int               iVar1;iVar176,2592
    int               iVar2;iVar277,2621
    int               iVar1Old;iVar1Old78,2650
    int               iVar2Old;iVar2Old79,2682
    int               nSatRuns;nSatRuns81,2746
    int               nSatRunsSat;nSatRunsSat82,2778
    int               nSatRunsUnsat;nSatRunsUnsat83,2813
    int               nPairsSymm;nPairsSymm85,2863
    int               nPairsSymmStr;nPairsSymmStr86,2897
    int               nPairsNonSymm;nPairsNonSymm87,2934
    int               nPairsRem;nPairsRem88,2971
    int               nPairsTotal;nPairsTotal89,3004
    abctime           timeStruct;timeStruct91,3065
    abctime           timeCount;timeCount92,3099
    abctime           timeMatr;timeMatr93,3132
    abctime           timeSim;timeSim94,3164
    abctime           timeFraig;timeFraig95,3195
    abctime           timeSat;timeSat96,3228
    abctime           timeTotal;timeTotal97,3259
typedef struct Sim_Man_t_ Sim_Man_t;Sim_Man_t100,3296
struct Sim_Man_t_Sim_Man_t_101,3333
    Abc_Ntk_t *       pNtk;pNtk104,3383
    int               nInputs;nInputs105,3411
    int               nOutputs;nOutputs106,3442
    int               fLightweight;fLightweight107,3474
    int               nSimBits;      // the number of bits in simulation infonSimBits109,3549
    int               nSimWords;     // the number of words in simulation infonSimWords110,3627
    Vec_Ptr_t *       vSim0;         // simulation info 1vSim0111,3706
    Vec_Ptr_t *       vSim1;         // simulation info 2vSim1112,3764
    int               nSuppBits;     // the number of bits in support infonSuppBits114,3849
    int               nSuppWords;    // the number of words in support infonSuppWords115,3924
    Vec_Ptr_t *       vSuppStr;      // structural supportsvSuppStr116,4000
    Vec_Ptr_t *       vSuppFun;      // functional supportsvSuppFun117,4060
    Vec_Vec_t *       vSuppTargs;    // support targetsvSuppTargs119,4146
    int               iInput;        // the input current processediInput120,4202
    Extra_MmFixed_t * pMmPat;   pMmPat122,4302
    Vec_Ptr_t *       vFifo;vFifo123,4335
    Vec_Int_t *       vDiffs;vDiffs124,4364
    int               nSatRuns;nSatRuns125,4394
    int               nSatRunsSat;nSatRunsSat126,4426
    int               nSatRunsUnsat;nSatRunsUnsat127,4461
    abctime           timeSim;timeSim129,4524
    abctime           timeTrav;timeTrav130,4555
    abctime           timeFraig;timeFraig131,4587
    abctime           timeSat;timeSat132,4620
    abctime           timeTotal;timeTotal133,4651
typedef struct Sim_Pat_t_ Sim_Pat_t;Sim_Pat_t136,4688
struct Sim_Pat_t_Sim_Pat_t_137,4725
    int              Input;         // the input which it has detectedInput139,4745
    int              Output;        // the output for which it was collectedOutput140,4816
    unsigned *       pData;         // the simulation datapData141,4893
#define SIM_NUM_WORDS(SIM_NUM_WORDS148,5176
#define SIM_LAST_BITS(SIM_LAST_BITS149,5234
#define SIM_MASK_FULL SIM_MASK_FULL151,5295
#define SIM_MASK_BEG(SIM_MASK_BEG152,5338
#define SIM_MASK_END(SIM_MASK_END153,5394
#define SIM_SET_0_FROM(SIM_SET_0_FROM154,5447
#define SIM_SET_1_FROM(SIM_SET_1_FROM155,5502
#define SIM_RANDOM_UNSIGNED SIM_RANDOM_UNSIGNED158,5614
#define Sim_SetBit(Sim_SetBit161,5770
#define Sim_XorBit(Sim_XorBit162,5833
#define Sim_HasBit(Sim_HasBit163,5896
#define Sim_SuppStrSetVar(Sim_SuppStrSetVar166,6007
#define Sim_SuppStrHasVar(Sim_SuppStrHasVar167,6110
#define Sim_SuppFunSetVar(Sim_SuppFunSetVar168,6213
#define Sim_SuppFunHasVar(Sim_SuppFunHasVar169,6311
#define Sim_SimInfoSetVar(Sim_SimInfoSetVar170,6409
#define Sim_SimInfoHasVar(Sim_SimInfoHasVar171,6512
#define Sim_SimInfoGet(Sim_SimInfoGet172,6615

src/opt/sim/simSwitch.c,197
Vec_Int_t * Sim_NtkComputeSwitching( Abc_Ntk_t * pNtk, int nPatterns )Sim_NtkComputeSwitching52,1719
float Sim_ComputeSwitching( unsigned * pSimInfo, int nSimWords )Sim_ComputeSwitching98,3308

src/opt/sim/simSymSat.c,228
int Sim_SymmsGetPatternUsingSat( Sym_Man_t * p, unsigned * pPattern )Sim_SymmsGetPatternUsingSat51,1669
int Sim_SymmsSatProveOne( Sym_Man_t * p, int Out, int Var1, int Var2, unsigned * pPattern )Sim_SymmsSatProveOne135,4744

src/opt/sim/simSeq.c,353
Vec_Ptr_t * Sim_SimulateSeqRandom( Abc_Ntk_t * pNtk, int nFrames, int nWords )Sim_SimulateSeqRandom51,1696
Vec_Ptr_t * Sim_SimulateSeqModel( Abc_Ntk_t * pNtk, int nFrames, int * pModel )Sim_SimulateSeqModel92,3332
void Sim_SimulateSeqFrame( Vec_Ptr_t * vInfo, Abc_Ntk_t * pNtk, int iFrames, int nWords, int fTransfer )Sim_SimulateSeqFrame155,5435

src/opt/sim/simUtils.c,2689
static int bit_count[256] = {bit_count31,810
Vec_Ptr_t * Sim_UtilInfoAlloc( int nSize, int nWords, int fClean )Sim_UtilInfoAlloc57,1880
void Sim_UtilInfoFree( Vec_Ptr_t * p )Sim_UtilInfoFree83,2643
void Sim_UtilInfoAdd( unsigned * pInfo1, unsigned * pInfo2, int nWords )Sim_UtilInfoAdd100,3009
void Sim_UtilInfoDetectDiffs( unsigned * pInfo1, unsigned * pInfo2, int nWords, Vec_Int_t * vDiffs )Sim_UtilInfoDetectDiffs118,3457
void Sim_UtilInfoDetectNews( unsigned * pInfo1, unsigned * pInfo2, int nWords, Vec_Int_t * vDiffs )Sim_UtilInfoDetectNews141,4128
void Sim_UtilInfoFlip( Sim_Man_t * p, Abc_Obj_t * pNode )Sim_UtilInfoFlip164,4779
int Sim_UtilInfoCompare( Sim_Man_t * p, Abc_Obj_t * pNode )Sim_UtilInfoCompare185,5363
void Sim_UtilSimulate( Sim_Man_t * p, int fType )Sim_UtilSimulate208,5976
void Sim_UtilSimulateNode( Sim_Man_t * p, Abc_Obj_t * pNode, int fType, int fType1, int fType2 )Sim_UtilSimulateNode231,6611
void Sim_UtilSimulateNodeOne( Abc_Obj_t * pNode, Vec_Ptr_t * vSimInfo, int nSimWords, int nOffset )Sim_UtilSimulateNodeOne302,9079
void Sim_UtilTransferNodeOne( Abc_Obj_t * pNode, Vec_Ptr_t * vSimInfo, int nSimWords, int nOffset, int fShift )Sim_UtilTransferNodeOne341,10500
int Sim_UtilCountSuppSizes( Sim_Man_t * p, int fStruct )Sim_UtilCountSuppSizes371,11477
int Sim_UtilCountOnes( unsigned * pSimInfo, int nSimWords )Sim_UtilCountOnes402,12295
Vec_Int_t * Sim_UtilCountOnesArray( Vec_Ptr_t * vInfo, int nSimWords )Sim_UtilCountOnesArray425,12872
void Sim_UtilSetRandom( unsigned * pPatRand, int nSimWords )Sim_UtilSetRandom447,13484
void Sim_UtilSetCompl( unsigned * pPatRand, int nSimWords )Sim_UtilSetCompl465,13906
void Sim_UtilSetConst( unsigned * pPatRand, int nSimWords, int fConst1 )Sim_UtilSetConst483,14316
int Sim_UtilInfoIsEqual( unsigned * pPats1, unsigned * pPats2, int nSimWords )Sim_UtilInfoIsEqual503,14789
int Sim_UtilInfoIsImp( unsigned * pPats1, unsigned * pPats2, int nSimWords )Sim_UtilInfoIsImp523,15263
int Sim_UtilInfoIsClause( unsigned * pPats1, unsigned * pPats2, int nSimWords )Sim_UtilInfoIsClause543,15744
int Sim_UtilCountAllPairs( Vec_Ptr_t * vSuppFun, int nSimWords, Vec_Int_t * vCounters )Sim_UtilCountAllPairs563,16220
int Sim_UtilCountPairsOne( Extra_BitMat_t * pMat, Vec_Int_t * vSupport )Sim_UtilCountPairsOne589,16941
int Sim_UtilCountPairsOnePrint( Extra_BitMat_t * pMat, Vec_Int_t * vSupport )Sim_UtilCountPairsOnePrint613,17655
void Sim_UtilCountPairsAllPrint( Sym_Man_t * p )Sim_UtilCountPairsAllPrint634,18271
void Sim_UtilCountPairsAll( Sym_Man_t * p )Sim_UtilCountPairsAll659,18930
int Sim_UtilMatrsAreDisjoint( Sym_Man_t * p )Sim_UtilMatrsAreDisjoint703,20534

src/opt/sim/simSymStr.c,1393
#define SIM_READ_SYMMS(SIM_READ_SYMMS31,817
#define SIM_SET_SYMMS(SIM_SET_SYMMS32,882
void Sim_SymmsStructCompute( Abc_Ntk_t * pNtk, Vec_Ptr_t * vMatrs, Vec_Ptr_t * vSuppFun )Sim_SymmsStructCompute61,2569
void Sim_SymmsStructComputeOne( Abc_Ntk_t * pNtk, Abc_Obj_t * pNode, int * pMap )Sim_SymmsStructComputeOne116,4397
void Sim_SymmsBalanceCollect_rec( Abc_Obj_t * pNode, Vec_Ptr_t * vNodes )Sim_SymmsBalanceCollect_rec167,6071
void Sim_SymmsPartitionNodes( Vec_Ptr_t * vNodes, Vec_Ptr_t * vNodesPis0, Sim_SymmsPartitionNodes197,6892
void Sim_SymmsAppendFromGroup( Abc_Ntk_t * pNtk, Vec_Ptr_t * vNodesPi, Vec_Ptr_t * vNodesOther, Vec_Int_t * vSymms, int * pMap )Sim_SymmsAppendFromGroup224,7649
void Sim_SymmsAppendFromNode( Abc_Ntk_t * pNtk, Vec_Int_t * vSymms0, Vec_Ptr_t * vNodesOther, Sim_SymmsAppendFromNode265,9008
int Sim_SymmsIsCompatibleWithNodes( Abc_Ntk_t * pNtk, unsigned uSymm, Vec_Ptr_t * vNodesOther, int * pMap )Sim_SymmsIsCompatibleWithNodes297,10011
int Sim_SymmsIsCompatibleWithGroup( unsigned uSymm, Vec_Ptr_t * vNodesPi, int * pMap )Sim_SymmsIsCompatibleWithGroup347,11550
void Sim_SymmsTrans( Vec_Int_t * vSymms )Sim_SymmsTrans385,12478
void Sim_SymmsTransferToMatrix( Extra_BitMat_t * pMatSymm, Vec_Int_t * vSymms, unsigned * pSupport )Sim_SymmsTransferToMatrix437,13916
int * Sim_SymmsCreateMap( Abc_Ntk_t * pNtk )Sim_SymmsCreateMap472,15078

src/opt/sim/simSupp.c,900
Vec_Ptr_t * Sim_ComputeStrSupp( Abc_Ntk_t * pNtk )Sim_ComputeStrSupp57,1899
Vec_Ptr_t * Sim_ComputeFunSupp( Abc_Ntk_t * pNtk, int fVerbose )Sim_ComputeFunSupp103,3571
int Sim_ComputeSuppRound( Sim_Man_t * p, int  fUseTargets )Sim_ComputeSuppRound172,5672
int Sim_ComputeSuppRoundNode( Sim_Man_t * p, int iNumCi, int  fUseTargets )Sim_ComputeSuppRoundNode203,6549
void Sim_ComputeSuppSetTargets( Sim_Man_t * p )Sim_ComputeSuppSetTargets314,10440
void Sim_UtilAssignRandom( Sim_Man_t * p )Sim_UtilAssignRandom341,11308
void Sim_UtilAssignFromFifo( Sim_Man_t * p )Sim_UtilAssignFromFifo366,11953
void Sim_SolveTargetsUsingSat( Sim_Man_t * p, int Limit )Sim_SolveTargetsUsingSat449,14853
int Sim_NtkSimTwoPats_rec( Abc_Obj_t * pNode )Sim_NtkSimTwoPats_rec548,17856
int Sim_SolveSuppModelVerify( Abc_Ntk_t * pNtk, int * pModel, int Input, int Output )Sim_SolveSuppModelVerify575,18705

src/opt/sim/simSymSim.c,345
void Sim_SymmsSimulate( Sym_Man_t * p, unsigned * pPat, Vec_Ptr_t * vMatrsNonSym )Sim_SymmsSimulate49,1524
void Sim_SymmsCreateSquare( Sym_Man_t * p, unsigned * pPat )Sim_SymmsCreateSquare95,2998
void Sim_SymmsDeriveInfo( Sym_Man_t * p, unsigned * pPat, Abc_Obj_t * pNode, Vec_Ptr_t * vMatrsNonSym, int Output )Sim_SymmsDeriveInfo130,3874

src/opt/sim/simMan.c,557
Sym_Man_t * Sym_ManStart( Abc_Ntk_t * pNtk, int fVerbose )Sym_ManStart46,1279
void Sym_ManStop( Sym_Man_t * p )Sym_ManStop98,3160
void Sym_ManPrintStats( Sym_Man_t * p )Sym_ManPrintStats135,4278
Sim_Man_t * Sim_ManStart( Abc_Ntk_t * pNtk, int fLightweight )Sim_ManStart166,5408
void Sim_ManStop( Sim_Man_t * p )Sim_ManStop208,6941
void Sim_ManPrintStats( Sim_Man_t * p )Sim_ManPrintStats233,7771
Sim_Pat_t * Sim_ManPatAlloc( Sim_Man_t * p )Sim_ManPatAlloc261,8715
void Sim_ManPatFree( Sim_Man_t * p, Sim_Pat_t * pPat )Sim_ManPatFree282,9285

src/opt/sim/simSym.c,92
int Sim_ComputeTwoVarSymms( Abc_Ntk_t * pNtk, int fVerbose )Sim_ComputeTwoVarSymms46,1312

src/opt/dsc/dsc.h,123
#define ABC__DSC___hABC__DSC___h24,945
#define DSC_MAX_VAR DSC_MAX_VAR40,1509
#define DSC_MAX_STR DSC_MAX_STR41,1585

src/opt/dsc/dsc.c,2045
typedef struct Dsc_node_t_ Dsc_node_t;Dsc_node_t39,1414
struct Dsc_node_t_Dsc_node_t_40,1453
    word *pNegCof;pNegCof42,1474
    word *pPosCof;pPosCof43,1493
    word *pBoolDiff;pBoolDiff44,1512
    unsigned int on[DSC_MAX_VAR+1]; // pos cofactor spec - first element denotes the size of the arrayon45,1533
    unsigned int off[DSC_MAX_VAR+1]; // neg cofactor spec - first element denotes the size of the arrayoff46,1636
    char exp[DSC_MAX_STR];exp47,1740
static inline void xorInPlace( word * pOut, word * pIn2, int nWords)xorInPlace54,1991
static inline void dsc_debug_node(Dsc_node_t * pNode, int nVars, const int TRUTH_WORDS) {dsc_debug_node61,2139
static inline int dsc_and_test(Dsc_node_t *ni, Dsc_node_t *nj, const int TRUTH_WORDS, int* ci, int* cj) {dsc_and_test78,2842
static inline int dsc_xor_test(Dsc_node_t *ni, Dsc_node_t *nj, const int TRUTH_WORDS) {dsc_xor_test86,3344
static inline void concat(char* target, char begin, char end, char* s1, int s1Polarity, char* s2, int s2Polarity) {concat90,3502
static inline void cubeCofactor(word * const pTruth, const unsigned int * const cubeCof, const int TRUTH_WORDS) {cubeCofactor107,3909
static inline void merge(unsigned int * const pOut, const unsigned int * const pIn) {merge120,4306
void dsc_and_group(Dsc_node_t * pOut, Dsc_node_t * ni, int niPolarity, Dsc_node_t * nj, int njPolarity, int nVars, const int TRUTH_WORDS) {dsc_and_group129,4575
void dsc_xor_group(Dsc_node_t * pOut, Dsc_node_t * ni, Dsc_node_t * nj, int nVars, const int TRUTH_WORDS) {dsc_xor_group196,6936
extern word * Dsc_alloc_pool(int nVars) {Dsc_alloc_pool290,9883
extern void Dsc_free_pool(word * pool) {Dsc_free_pool297,10027
extern int Dsc_Decompose(word * pTruth, const int nVarsInit, char * const pRes, word *pool) {Dsc_Decompose311,10944
int * Dsc_ComputeMatches( char * p )Dsc_ComputeMatches450,16310
int Dsc_CountAnds_rec( char * pStr, char ** p, int * pMatches )Dsc_CountAnds_rec472,17100
extern int Dsc_CountAnds( char * pDsd )Dsc_CountAnds513,18498

src/opt/res/resSim.c,1715
Res_Sim_t * Res_SimAlloc( int nWords )Res_SimAlloc46,1277
void Res_SimAdjust( Res_Sim_t * p, Abc_Ntk_t * pAig, int nTruePis )Res_SimAdjust80,2332
void Res_SimFree( Res_Sim_t * p )Res_SimFree127,3720
void Abc_InfoRandomBytes( unsigned * p, int nWords ) Abc_InfoRandomBytes149,4192
void Res_SimSetRandomBytes( Res_Sim_t * p )Res_SimSetRandomBytes174,4863
void Res_SimSetDerivedBytes( Res_Sim_t * p, int fUseWalk )Res_SimSetDerivedBytes211,5828
void Res_SimSetGiven( Res_Sim_t * p, Vec_Ptr_t * vInfo )Res_SimSetGiven344,9782
void Res_SimPerformOne( Abc_Obj_t * pNode, Vec_Ptr_t * vSimInfo, int nSimWords )Res_SimPerformOne371,10464
void Res_SimTransferOne( Abc_Obj_t * pNode, Vec_Ptr_t * vSimInfo, int nSimWords )Res_SimTransferOne407,11716
void Res_SimPerformRound( Res_Sim_t * p, int nWords )Res_SimPerformRound435,12541
void Res_SimPadSimInfo( Vec_Ptr_t * vPats, int nPats, int nWords )Res_SimPadSimInfo458,13177
void Res_SimDeriveInfoReplicate( Res_Sim_t * p )Res_SimDeriveInfoReplicate491,14116
void Res_SimDeriveInfoComplement( Res_Sim_t * p )Res_SimDeriveInfoComplement517,14819
void Res_SimPrintOutPatterns( Res_Sim_t * p, Abc_Ntk_t * pAig )Res_SimPrintOutPatterns544,15579
void Res_SimPrintNodePatterns( Res_Sim_t * p, Abc_Ntk_t * pAig )Res_SimPrintNodePatterns568,16151
void Res_SimCountResults( Res_Sim_t * p, int * pnDcs, int * pnOnes, int * pnZeros, int fVerbose )Res_SimCountResults587,16671
void Res_SimCollectPatterns( Res_Sim_t * p, int fVerbose )Res_SimCollectPatterns624,17787
int Res_SimVerifyValue( Res_Sim_t * p, int fOnSet )Res_SimVerifyValue691,19939
int Res_SimPrepare( Res_Sim_t * p, Abc_Ntk_t * pAig, int nTruePis, int fVerbose )Res_SimPrepare731,21078

src/opt/res/resDivs.c,529
void Res_WinDivisors( Res_Win_t * p, int nLevDivMax )Res_WinDivisors48,1367
void Res_WinMarkTfi_rec( Res_Win_t * p, Abc_Obj_t * pObj )Res_WinMarkTfi_rec150,4849
void Res_WinMarkTfi( Res_Win_t * p )Res_WinMarkTfi174,5463
void Res_WinSweepLeafTfo_rec( Abc_Obj_t * pObj, int nLevelLimit )Res_WinSweepLeafTfo_rec196,6022
int Res_NodeDeref_rec( Abc_Obj_t * pNode )Res_NodeDeref_rec220,6668
int Res_NodeRef_rec( Abc_Obj_t * pNode )Res_NodeRef_rec247,7331
int Res_WinVisitMffc( Abc_Obj_t * pNode )Res_WinVisitMffc272,7927

src/opt/res/resFilter.c,570
int Res_FilterCandidates( Res_Win_t * pWin, Abc_Ntk_t * pAig, Res_Sim_t * pSim, Vec_Vec_t * vResubs, Vec_Vec_t * vResubsW, int nFaninsMax, int fArea )Res_FilterCandidates49,1473
int Res_FilterCandidatesArea( Res_Win_t * pWin, Abc_Ntk_t * pAig, Res_Sim_t * pSim, Vec_Vec_t * vResubs, Vec_Vec_t * vResubsW, int nFaninsMax )Res_FilterCandidatesArea241,9401
unsigned * Res_FilterCollectFaninInfo( Res_Win_t * pWin, Res_Sim_t * pSim, unsigned uMask )Res_FilterCollectFaninInfo383,14430
int Res_FilterCriticalFanin( Abc_Obj_t * pNode )Res_FilterCriticalFanin410,15171

src/opt/res/resSim_old.c,1235
Res_Sim_t * Res_SimAlloc( int nWords )Res_SimAlloc46,1277
void Res_SimAdjust( Res_Sim_t * p, Abc_Ntk_t * pAig )Res_SimAdjust77,2200
void Res_SimFree( Res_Sim_t * p )Res_SimFree121,3540
void Res_SimSetRandom( Res_Sim_t * p )Res_SimSetRandom143,4008
void Res_SimSetGiven( Res_Sim_t * p, Vec_Ptr_t * vInfo )Res_SimSetGiven166,4520
void Res_SimPerformOne( Abc_Obj_t * pNode, Vec_Ptr_t * vSimInfo, int nSimWords )Res_SimPerformOne191,5127
void Res_SimTransferOne( Abc_Obj_t * pNode, Vec_Ptr_t * vSimInfo, int nSimWords )Res_SimTransferOne227,6343
void Res_SimPerformRound( Res_Sim_t * p )Res_SimPerformRound255,7144
void Res_SimProcessPats( Res_Sim_t * p )Res_SimProcessPats277,7741
void Res_SimPadSimInfo( Vec_Ptr_t * vPats, int nPats, int nWords )Res_SimPadSimInfo325,9223
void Res_SimDeriveInfoReplicate( Res_Sim_t * p )Res_SimDeriveInfoReplicate358,10162
void Res_SimDeriveInfoComplement( Res_Sim_t * p )Res_SimDeriveInfoComplement384,10841
void Res_SimReportOne( Res_Sim_t * p )Res_SimReportOne411,11577
void Res_SimPrintOutPatterns( Res_Sim_t * p, Abc_Ntk_t * pAig )Res_SimPrintOutPatterns453,12828
int Res_SimPrepare( Res_Sim_t * p, Abc_Ntk_t * pAig, int nTruePis, int fVerbose )Res_SimPrepare477,13414

src/opt/res/resInt.h,3226
#define ABC__opt__res__resInt_hABC__opt__res__resInt_h22,538
typedef struct Res_Win_t_ Res_Win_t;Res_Win_t44,1281
struct Res_Win_t_Res_Win_t_45,1318
    Abc_Obj_t *      pNode;        // the node in the centerpNode48,1366
    int              nWinTfiMax;   // the fanin levelsnWinTfiMax49,1427
    int              nWinTfoMax;   // the fanout levelsnWinTfoMax50,1482
    int              nLevDivMax;   // the maximum divisor levelnLevDivMax51,1538
    int              nFanoutLimit; // the limit on the fanout count of a TFO node (if more, the node is treated as a root)nFanoutLimit53,1639
    int              nLevTfiMinus; // the number of additional levels to search from TFO below the level of leavesnLevTfiMinus54,1762
    int              nLevLeafMin;  // the minimum level of a leafnLevLeafMin56,1913
    int              nLevTravMin;  // the minimum level to search from TFOnLevTravMin57,1979
    int              nDivsPlus;    // the number of additional divisorsnDivsPlus58,2054
    Vec_Ptr_t *      vRoots;       // outputs of the windowvRoots60,2149
    Vec_Ptr_t *      vLeaves;      // inputs of the windowvLeaves61,2209
    Vec_Ptr_t *      vBranches;    // side nodes of the windowvBranches62,2268
    Vec_Ptr_t *      vNodes;       // internal nodes of the windowvNodes63,2331
    Vec_Ptr_t *      vDivs;        // candidate divisors of the nodevDivs64,2398
    Vec_Vec_t *      vMatrix;      // TFI nodes below the given nodevMatrix66,2489
typedef struct Res_Sim_t_ Res_Sim_t;Res_Sim_t69,2562
struct Res_Sim_t_Res_Sim_t_70,2599
    Abc_Ntk_t *      pAig;         // AIG for simulationpAig72,2619
    int              nTruePis;     // the number of true PIs of the windownTruePis73,2676
    int              fConst0;      // the node can be replaced by constant 0fConst074,2751
    int              fConst1;      // the node can be replaced by constant 0fConst175,2828
    int              nWords;       // the number of simulation wordsnWords77,2934
    int              nPats;        // the number of patternsnPats78,3003
    int              nWordsIn;     // the number of simulation words in the input patternsnWordsIn79,3064
    int              nPatsIn;      // the number of patterns in the input patterns nPatsIn80,3155
    int              nBytesIn;     // the number of bytes in the input patternsnBytesIn81,3239
    int              nWordsOut;    // the number of simulation words in the output patternsnWordsOut82,3319
    int              nPatsOut;     // the number of patterns in the output patterns nPatsOut83,3411
    Vec_Ptr_t *      vPats;        // input simulation patternsvPats85,3519
    Vec_Ptr_t *      vPats0;       // input simulation patternsvPats086,3583
    Vec_Ptr_t *      vPats1;       // input simulation patternsvPats187,3647
    Vec_Ptr_t *      vOuts;        // output simulation infovOuts88,3711
    int              nPats0;       // the number of 0-patterns accumulatednPats089,3772
    int              nPats1;       // the number of 1-patterns accumulatednPats190,3847
    Vec_Vec_t *      vCands;       // resubstitution candidatesvCands92,3946
    abctime          timeSat;timeSat94,4028

src/opt/res/res_.c,0

src/opt/res/resStrash.c,65
Abc_Ntk_t * Res_WndStrash( Res_Win_t * p )Res_WndStrash49,1530

src/opt/res/resWin.c,1236
Res_Win_t * Res_WinAlloc()Res_WinAlloc46,1272
void Res_WinFree( Res_Win_t * p )Res_WinFree76,2034
int Res_WinCollectLeavesAndNodes( Res_Win_t * p )Res_WinCollectLeavesAndNodes100,2557
static inline int Res_WinComputeRootsCheck( Abc_Obj_t * pNode, int nLevelMax, int nFanoutLimit )Res_WinComputeRootsCheck169,4809
void Res_WinComputeRoots_rec( Abc_Obj_t * pNode, int nLevelMax, int nFanoutLimit, Vec_Ptr_t * vRoots )Res_WinComputeRoots_rec196,5651
int Res_WinComputeRoots( Res_Win_t * p )Res_WinComputeRoots223,6566
int Res_WinMarkPaths_rec( Abc_Obj_t * pNode, Abc_Obj_t * pPivot, int nLevelMin )Res_WinMarkPaths_rec247,7270
void Res_WinMarkPaths( Res_Win_t * p )Res_WinMarkPaths283,8410
void Res_WinFinalizeRoots_rec( Abc_Obj_t * pObj, Vec_Ptr_t * vRoots )Res_WinFinalizeRoots_rec313,9287
int Res_WinFinalizeRoots( Res_Win_t * p )Res_WinFinalizeRoots343,10309
void Res_WinAddMissing_rec( Res_Win_t * p, Abc_Obj_t * pObj, int nLevTravMin )Res_WinAddMissing_rec369,11039
void Res_WinAddMissing( Res_Win_t * p )Res_WinAddMissing404,12163
int Res_WinIsTrivial( Res_Win_t * p )Res_WinIsTrivial435,13037
int Res_WinCompute( Abc_Obj_t * pNode, int nWinTfiMax, int nWinTfoMax, Res_Win_t * p )Res_WinCompute451,13416

src/opt/res/resCore.c,3154
typedef struct Res_Man_t_ Res_Man_t;Res_Man_t33,868
struct Res_Man_t_Res_Man_t_34,905
    Res_Par_t *   pPars;pPars37,951
    Res_Win_t *   pWin;          // windowing managerpWin39,1003
    Abc_Ntk_t *   pAig;          // the strashed windowpAig40,1057
    Res_Sim_t *   pSim;          // simulation managerpSim41,1113
    Sto_Man_t *   pCnf;          // the CNF of the SAT problempCnf42,1168
    Int_Man_t *   pMan;          // interpolation manager;pMan43,1231
    Vec_Int_t *   vMem;          // memory for intermediate SOPsvMem44,1290
    Vec_Vec_t *   vResubs;       // resubstitution candidates of the AIGvResubs45,1355
    Vec_Vec_t *   vResubsW;      // resubstitution candidates of the windowvResubsW46,1428
    Vec_Vec_t *   vLevels;       // levelized structure for updatingvLevels47,1504
    int           nWins;         // the number of windows triednWins49,1591
    int           nWinNodes;     // the total number of window nodesnWinNodes50,1655
    int           nDivNodes;     // the total number of divisorsnDivNodes51,1724
    int           nWinsTriv;     // the total number of trivial windowsnWinsTriv52,1789
    int           nWinsUsed;     // the total number of useful windows (with at least one candidate)nWinsUsed53,1861
    int           nConstsUsed;   // the total number of constant nodes under ODCnConstsUsed54,1962
    int           nCandSets;     // the total number of candidatesnCandSets55,2043
    int           nProvedSets;   // the total number of proved groupsnProvedSets56,2110
    int           nSimEmpty;     // the empty simulation infonSimEmpty57,2180
    int           nTotalNets;    // the total number of netsnTotalNets58,2242
    int           nTotalNodes;   // the total number of nodessnTotalNodes59,2303
    int           nTotalNets2;   // the total number of netsnTotalNets260,2366
    int           nTotalNodes2;  // the total number of nodessnTotalNodes261,2427
    abctime       timeWin;       // windowingtimeWin63,2505
    abctime       timeDiv;       // divisorstimeDiv64,2551
    abctime       timeAig;       // strashingtimeAig65,2596
    abctime       timeSim;       // simulationtimeSim66,2642
    abctime       timeCand;      // resubstitution candidatestimeCand67,2689
    abctime       timeSatTotal;  // SAT solving total timeSatTotal68,2751
    abctime       timeSatSat;    // SAT solving (sat calls)timeSatSat69,2806
    abctime       timeSatUnsat;  // SAT solving (unsat calls)timeSatUnsat70,2866
    abctime       timeSatSim;    // SAT solving (simulation)timeSatSim71,2928
    abctime       timeInt;       // interpolation timeInt72,2989
    abctime       timeUpd;       // updating  timeUpd73,3040
    abctime       timeTotal;     // total runtimetimeTotal74,3087
Res_Man_t * Res_ManAlloc( Res_Par_t * pPars )Res_ManAlloc96,3731
void Res_ManFree( Res_Man_t * p )Res_ManFree125,4567
void Res_UpdateNetwork( Abc_Obj_t * pObj, Vec_Ptr_t * vFanins, Hop_Obj_t * pFunc, Vec_Vec_t * vLevels )Res_UpdateNetwork185,6964
int Abc_NtkResynthesize( Abc_Ntk_t * pNtk, Res_Par_t * pPars )Abc_NtkResynthesize213,7846

src/opt/res/resSat.c,587
void * Res_SatProveUnsat( Abc_Ntk_t * pAig, Vec_Ptr_t * vFanins )Res_SatProveUnsat52,1637
void * Res_SatSimulateConstr( Abc_Ntk_t * pAig, int fOnSet )Res_SatSimulateConstr141,4876
int Res_SatSimulate( Res_Sim_t * p, int nPatsLimit, int fOnSet )Res_SatSimulate212,7555
int Res_SatAddConst1( sat_solver * pSat, int iVar, int fCompl )Res_SatAddConst1338,11030
int Res_SatAddEqual( sat_solver * pSat, int iVar0, int iVar1, int fCompl )Res_SatAddEqual357,11497
int Res_SatAddAnd( sat_solver * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1 )Res_SatAddAnd385,12198

src/opt/res/res.h,825
#define ABC__opt__res__res_hABC__opt__res__res_h22,529
typedef struct Res_Par_t_ Res_Par_t;Res_Par_t42,1251
struct Res_Par_t_Res_Par_t_43,1288
    int           nWindow;       // window sizenWindow46,1334
    int           nGrowthLevel;  // the maximum allowed growth in level after one iteration of resynthesisnGrowthLevel47,1382
    int           nSimWords;     // the number of simulation words nSimWords48,1489
    int           nCands;        // the number of candidates to trynCands49,1557
    int           fArea;         // performs optimization for areafArea50,1625
    int           fDelay;        // performs optimization for delayfDelay51,1692
    int           fVerbose;      // enable basic statsfVerbose52,1760
    int           fVeryVerbose;  // enable detailed statsfVeryVerbose53,1815

src/opt/csw/csw_.c,0

src/opt/csw/csw.h,57
#define ABC__aig__csw__csw_hABC__aig__csw__csw_h22,519

src/opt/csw/cswMan.c,162
Csw_Man_t * Csw_ManStart( Aig_Man_t * pMan, int nCutsMax, int nLeafMax, int fVerbose )Csw_ManStart45,1227
void Csw_ManStop( Csw_Man_t * p )Csw_ManStop99,3426

src/opt/csw/cswTable.c,309
unsigned Csw_CutHash( Csw_Cut_t * pCut )Csw_CutHash45,1230
int Csw_TableCountCuts( Csw_Man_t * p )Csw_TableCountCuts82,2672
void Csw_TableCutInsert( Csw_Man_t * p, Csw_Cut_t * pCut )Csw_TableCutInsert103,3175
Aig_Obj_t * Csw_TableCutLookup( Csw_Man_t * p, Csw_Cut_t * pCut )Csw_TableCutLookup121,3632

src/opt/csw/cswInt.h,5112
#define ABC__aig__csw__cswInt_hABC__aig__csw__cswInt_h22,528
typedef struct Csw_Man_t_            Csw_Man_t;Csw_Man_t52,1428
typedef struct Csw_Cut_t_            Csw_Cut_t;Csw_Cut_t53,1476
struct Csw_Cut_t_Csw_Cut_t_56,1570
    Csw_Cut_t *     pNext;           // the next cut in the table pNext58,1590
    int             Cost;            // the cost of the cutCost59,1657
    unsigned        uSign;           // cut signatureuSign61,1779
    int             iNode;           // the node, for which it is the cutiNode62,1833
    short           nCutSize;        // the number of bytes in the cutnCutSize63,1907
    char            nLeafMax;        // the maximum number of faninsnLeafMax64,1978
    char            nFanins;         // the current number of faninsnFanins65,2047
    int             pFanins[0];      // the fanins (followed by the truth table)pFanins66,2116
struct Csw_Man_t_Csw_Man_t_70,2232
    Aig_Man_t *     pManAig;         // the input AIG managerpManAig73,2271
    Aig_Man_t *     pManRes;         // the output AIG managerpManRes74,2333
    Aig_Obj_t **    pEquiv;          // the equivalent nodes in the resulting managerpEquiv75,2396
    Csw_Cut_t **    pCuts;           // the cuts for each node in the output managerpCuts76,2482
    int *           pnRefs;          // the number of references of each new nodepnRefs77,2567
    Csw_Cut_t **    pTable;          // the table composed of cuts pTable79,2676
    int             nTableSize;      // the size of hash tablenTableSize80,2744
    int             nCutsMax;        // the max number of cuts at the nodenCutsMax82,2825
    int             nLeafMax;        // the max number of leaves of a cutnLeafMax83,2900
    int             fVerbose;        // enables verbose outputfVerbose84,2974
    int             nCutSize;        // the number of bytes needed to store one cutnCutSize86,3063
    int             nTruthWords;     // the number of truth table wordsnTruthWords87,3147
    Aig_MmFixed_t * pMemCuts;        // memory manager for cutspMemCuts88,3219
    unsigned *      puTemp[4];       // used for the truth table computationpuTemp89,3283
    int             nNodesTriv0;     // the number of trivial nodesnNodesTriv091,3378
    int             nNodesTriv1;     // the number of trivial nodesnNodesTriv192,3446
    int             nNodesTriv2;     // the number of trivial nodesnNodesTriv293,3514
    int             nNodesCuts;      // the number of rewritten nodesnNodesCuts94,3582
    int             nNodesTried;     // the number of nodes triednNodesTried95,3652
    abctime         timeCuts;        // time to compute the cut and its truth tabletimeCuts96,3718
    abctime         timeHash;        // time for hashing cutstimeHash97,3802
    abctime         timeOther;       // other timetimeOther98,3864
    abctime         timeTotal;       // total timetimeTotal99,3915
static inline int          Csw_CutLeaveNum( Csw_Cut_t * pCut )          { return pCut->nFanins;                                   }Csw_CutLeaveNum102,3970
static inline int *        Csw_CutLeaves( Csw_Cut_t * pCut )            { return pCut->pFanins;                                   }Csw_CutLeaves103,4102
static inline unsigned *   Csw_CutTruth( Csw_Cut_t * pCut )             { return (unsigned *)(pCut->pFanins + pCut->nLeafMax);    }Csw_CutTruth104,4234
static inline Csw_Cut_t *  Csw_CutNext( Csw_Cut_t * pCut )              { return (Csw_Cut_t *)(((char *)pCut) + pCut->nCutSize);  }Csw_CutNext105,4366
static inline int          Csw_ObjRefs( Csw_Man_t * p, Aig_Obj_t * pObj )                         { return p->pnRefs[pObj->Id];   }Csw_ObjRefs107,4499
static inline void         Csw_ObjAddRefs( Csw_Man_t * p, Aig_Obj_t * pObj, int nRefs )           { p->pnRefs[pObj->Id] += nRefs; }Csw_ObjAddRefs108,4631
static inline Csw_Cut_t *  Csw_ObjCuts( Csw_Man_t * p, Aig_Obj_t * pObj )                         { return p->pCuts[pObj->Id];    }Csw_ObjCuts110,4764
static inline void         Csw_ObjSetCuts( Csw_Man_t * p, Aig_Obj_t * pObj, Csw_Cut_t * pCuts )   { p->pCuts[pObj->Id] = pCuts;   }Csw_ObjSetCuts111,4896
static inline Aig_Obj_t *  Csw_ObjEquiv( Csw_Man_t * p, Aig_Obj_t * pObj )                        { return p->pEquiv[pObj->Id];   }Csw_ObjEquiv113,5029
static inline void         Csw_ObjSetEquiv( Csw_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pEquiv ) { p->pEquiv[pObj->Id] = pEquiv; }Csw_ObjSetEquiv114,5161
static inline Aig_Obj_t *  Csw_ObjChild0Equiv( Csw_Man_t * p, Aig_Obj_t * pObj ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond(Csw_ObjEquiv(p, Aig_ObjFanin0(pObj)), Aig_ObjFaninC0(pObj)) : NULL;  }Csw_ObjChild0Equiv116,5294
static inline Aig_Obj_t *  Csw_ObjChild1Equiv( Csw_Man_t * p, Aig_Obj_t * pObj ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond(Csw_ObjEquiv(p, Aig_ObjFanin1(pObj)), Aig_ObjFaninC1(pObj)) : NULL;  }Csw_ObjChild1Equiv117,5523
#define Csw_ObjForEachCut(Csw_ObjForEachCut128,6227
#define Csw_CutForEachLeaf(Csw_CutForEachLeaf131,6432

src/opt/csw/cswCore.c,102
Aig_Man_t * Csw_Sweep( Aig_Man_t * pAig, int nCutsMax, int nLeafMax, int fVerbose )Csw_Sweep45,1197

src/opt/csw/cswCut.c,1386
static inline int Csw_CutFindCost( Csw_Man_t * p, Csw_Cut_t * pCut )Csw_CutFindCost45,1223
static inline float Csw_CutFindCost2( Csw_Man_t * p, Csw_Cut_t * pCut )Csw_CutFindCost271,1872
static inline Csw_Cut_t * Csw_CutFindFree( Csw_Man_t * p, Aig_Obj_t * pObj )Csw_CutFindFree93,2418
static inline unsigned Cut_TruthPhase( Csw_Cut_t * pCut, Csw_Cut_t * pCut1 )Cut_TruthPhase121,3140
unsigned * Csw_CutComputeTruth( Csw_Man_t * p, Csw_Cut_t * pCut, Csw_Cut_t * pCut0, Csw_Cut_t * pCut1, int fCompl0, int fCompl1 )Csw_CutComputeTruth149,3831
int Csw_CutSupportMinimize( Csw_Man_t * p, Csw_Cut_t * pCut )Csw_CutSupportMinimize180,5124
static inline int Csw_CutCheckDominance( Csw_Cut_t * pDom, Csw_Cut_t * pCut )Csw_CutCheckDominance217,6329
int Csw_CutFilter( Csw_Man_t * p, Aig_Obj_t * pObj, Csw_Cut_t * pCut )Csw_CutFilter243,7048
static inline int Csw_CutMergeOrdered( Csw_Man_t * p, Csw_Cut_t * pC0, Csw_Cut_t * pC1, Csw_Cut_t * pC )Csw_CutMergeOrdered294,8416
int Csw_CutMerge( Csw_Man_t * p, Csw_Cut_t * pCut0, Csw_Cut_t * pCut1, Csw_Cut_t * pCut )Csw_CutMerge380,10819
Aig_Obj_t * Csw_ObjTwoVarCut( Csw_Man_t * p, Csw_Cut_t * pCut )Csw_ObjTwoVarCut409,11567
Csw_Cut_t * Csw_ObjPrepareCuts( Csw_Man_t * p, Aig_Obj_t * pObj, int fTriv )Csw_ObjPrepareCuts453,12999
Aig_Obj_t * Csw_ObjSweep( Csw_Man_t * p, Aig_Obj_t * pObj, int fTriv )Csw_ObjSweep492,14089

src/opt/sbd/sbd.c,140
int Sbd_CountConfigVars( Vec_Int_t * vSet, int nVars, int Degree )Sbd_CountConfigVars46,1255
void Sbd_CountTopos()Sbd_CountTopos67,1884

src/opt/sbd/sbdCut.c,7245
#define SBD_MAX_CUTSIZE SBD_MAX_CUTSIZE30,794
#define SBD_MAX_CUTNUM SBD_MAX_CUTNUM31,824
#define SBD_MAX_TT_WORDS SBD_MAX_TT_WORDS32,855
#define SBD_CUT_NO_LEAF SBD_CUT_NO_LEAF34,938
typedef struct Sbd_Cut_t_ Sbd_Cut_t; Sbd_Cut_t36,969
struct Sbd_Cut_t_Sbd_Cut_t_37,1007
    word            Sign;                      // signatureSign39,1027
    int             iFunc;                     // functionalityiFunc40,1087
    int             Cost;                      // cut costCost41,1151
    int             CostLev;                   // cut costCostLev42,1210
    unsigned        nTreeLeaves  :  9;         // tree leavesnTreeLeaves43,1269
    unsigned        nSlowLeaves  :  9;         // slow leavesnSlowLeaves44,1331
    unsigned        nTopLeaves   : 10;         // top leavesnTopLeaves45,1393
    unsigned        nLeaves      :  4;         // leaf countnLeaves46,1454
    int             pLeaves[SBD_MAX_CUTSIZE];  // leavespLeaves47,1515
struct Sbd_Sto_t_Sbd_Sto_t_50,1576
    int             nLutSize;nLutSize52,1596
    int             nCutSize;nCutSize53,1626
    int             nCutNum;nCutNum54,1656
    int             fCutMin;fCutMin55,1685
    int             fVerbose;fVerbose56,1714
    Gia_Man_t *     pGia;                      // user's AIG manager (will be modified by adding nodes)pGia57,1744
    Vec_Int_t *     vMirrors;                  // mirrors for each nodevMirrors58,1848
    Vec_Int_t *     vDelays;                   // delays for each nodevDelays59,1920
    Vec_Int_t *     vLevels;                   // levels for each nodevLevels60,1991
    Vec_Int_t *     vRefs;                     // refs for each nodevRefs61,2062
    Vec_Wec_t *     vCuts;                     // cuts for each nodevCuts62,2131
    Vec_Mem_t *     vTtMem;                    // truth tablesvTtMem63,2200
    Sbd_Cut_t       pCuts[3][SBD_MAX_CUTNUM];  // temporary cutspCuts64,2263
    Sbd_Cut_t *     ppCuts[SBD_MAX_CUTNUM];    // temporary cut pointersppCuts65,2328
    int             nCutsR;                    // the number of cutsnCutsR66,2401
    int             Pivot;                     // current objectPivot67,2470
    int             iCutBest;                  // best-delay cutiCutBest68,2535
    int             nCutsSpec;                 // special cutsnCutsSpec69,2600
    int             nCutsOver;                 // overflow cutsnCutsOver70,2663
    int             DelayMin;                  // minimum delayDelayMin71,2727
    double          CutCount[4];               // cut countersCutCount72,2791
    abctime         clkStart;                  // starting timeclkStart73,2854
static inline word * Sbd_CutTruth( Sbd_Sto_t * p, Sbd_Cut_t * pCut ) { return Vec_MemReadEntry(p->vTtMem, Abc_Lit2Var(pCut->iFunc));           }Sbd_CutTruth76,2922
#define Sbd_ForEachCut(Sbd_ForEachCut78,3068
static inline word Sbd_CutGetSign( Sbd_Cut_t * pCut )Sbd_CutGetSign95,3662
static inline int Sbd_CutCheck( Sbd_Cut_t * pBase, Sbd_Cut_t * pCut ) // check if pCut is contained in pBaseSbd_CutCheck102,3867
static inline int Sbd_CutSetCheckArray( Sbd_Cut_t ** ppCuts, int nCuts )Sbd_CutSetCheckArray118,4318
static inline int Sbd_CutMergeOrder( Sbd_Cut_t * pCut0, Sbd_Cut_t * pCut1, Sbd_Cut_t * pCut, int nCutSize )Sbd_CutMergeOrder158,5399
static inline int Sbd_CutMergeOrder2( Sbd_Cut_t * pCut0, Sbd_Cut_t * pCut1, Sbd_Cut_t * pCut, int nCutSize )Sbd_CutMergeOrder2221,7121
static inline int Sbd_CutSetCutIsContainedOrder( Sbd_Cut_t * pBase, Sbd_Cut_t * pCut ) // check if pCut is contained in pBaseSbd_CutSetCutIsContainedOrder242,7857
static inline int Sbd_CutSetLastCutIsContained( Sbd_Cut_t ** pCuts, int nCuts )Sbd_CutSetLastCutIsContained268,8582
static inline int Sbd_CutCompare( Sbd_Cut_t * pCut0, Sbd_Cut_t * pCut1 )Sbd_CutCompare288,9156
static inline int Sbd_CutCompare2( Sbd_Cut_t * pCut0, Sbd_Cut_t * pCut1 )Sbd_CutCompare2316,10382
static inline int Sbd_CutSetLastCutContains( Sbd_Cut_t ** pCuts, int nCuts )Sbd_CutSetLastCutContains332,11161
static inline void Sbd_CutSetSortByCost( Sbd_Cut_t ** pCuts, int nCuts )Sbd_CutSetSortByCost350,11821
static inline int Sbd_CutSetAddCut( Sbd_Cut_t ** pCuts, int nCuts, int nCutNum )Sbd_CutSetAddCut360,12098
static inline int Sbd_CutComputeTruth6( Sbd_Sto_t * p, Sbd_Cut_t * pCut0, Sbd_Cut_t * pCut1, int fCompl0, int fCompl1, Sbd_Cut_t * pCutR, int fIsXor )Sbd_CutComputeTruth6382,12664
static inline int Sbd_CutComputeTruth( Sbd_Sto_t * p, Sbd_Cut_t * pCut0, Sbd_Cut_t * pCut1, int fCompl0, int fCompl1, Sbd_Cut_t * pCutR, int fIsXor )Sbd_CutComputeTruth400,13651
static inline int Sbd_CutCountBits( word i )Sbd_CutCountBits440,15502
static inline int Sbd_CutCost( Sbd_Sto_t * p, Sbd_Cut_t * pCut )Sbd_CutCost447,15752
static inline int Sbd_CutCostLev( Sbd_Sto_t * p, Sbd_Cut_t * pCut )Sbd_CutCostLev454,15968
static inline int Sbd_CutTreeLeaves( Sbd_Sto_t * p, Sbd_Cut_t * pCut )Sbd_CutTreeLeaves461,16187
static inline int Sbd_CutSlowLeaves( Sbd_Sto_t * p, int iObj, Sbd_Cut_t * pCut )Sbd_CutSlowLeaves468,16412
static inline int Sbd_CutTopLeaves( Sbd_Sto_t * p, int iObj, Sbd_Cut_t * pCut )Sbd_CutTopLeaves475,16701
static inline void Sbd_CutAddUnit( Sbd_Sto_t * p, int iObj )Sbd_CutAddUnit482,16989
static inline void Sbd_CutAddZero( Sbd_Sto_t * p, int iObj )Sbd_CutAddZero493,17320
static inline int Sbd_StoPrepareSet( Sbd_Sto_t * p, int iObj, int Index )Sbd_StoPrepareSet501,17567
static inline void Sbd_StoInitResult( Sbd_Sto_t * p )Sbd_StoInitResult521,18419
static inline void Sbd_StoStoreResult( Sbd_Sto_t * p, int iObj, Sbd_Cut_t ** pCuts, int nCuts )Sbd_StoStoreResult527,18572
static inline void Sbd_StoComputeDelay( Sbd_Sto_t * p, int iObj, Sbd_Cut_t ** pCuts, int nCuts )Sbd_StoComputeDelay540,19028
static inline void Sbd_StoComputeSpec( Sbd_Sto_t * p, int iObj, Sbd_Cut_t ** pCuts, int nCuts )Sbd_StoComputeSpec567,20064
static inline void Sbd_CutPrint( Sbd_Sto_t * p, int iObj, Sbd_Cut_t * pCut )Sbd_CutPrint577,20418
void Sbd_StoMergeCuts( Sbd_Sto_t * p, int iObj )Sbd_StoMergeCuts594,21259
Sbd_Sto_t * Sbd_StoAlloc( Gia_Man_t * pGia, Vec_Int_t * vMirrors, int nLutSize, int nCutSize, int nCutNum, int fCutMin, int fVerbose )Sbd_StoAlloc667,24437
void Sbd_StoFree( Sbd_Sto_t * p )Sbd_StoFree690,25347
void Sbd_StoComputeCutsObj( Sbd_Sto_t * p, int iObj, int Delay, int Level )Sbd_StoComputeCutsObj702,25640
void Sbd_StoComputeCutsConst0( Sbd_Sto_t * p, int iObj )Sbd_StoComputeCutsConst0719,26176
void Sbd_StoComputeCutsCi( Sbd_Sto_t * p, int iObj, int Delay, int Level )Sbd_StoComputeCutsCi724,26312
int Sbd_StoComputeCutsNode( Sbd_Sto_t * p, int iObj )Sbd_StoComputeCutsNode729,26474
void Sbd_StoSaveBestDelayCut( Sbd_Sto_t * p, int iObj, int * pCut )Sbd_StoSaveBestDelayCut738,26874
int Sbd_StoObjRefs( Sbd_Sto_t * p, int iObj )Sbd_StoObjRefs746,27162
void Sbd_StoRefObj( Sbd_Sto_t * p, int iObj, int iMirror )Sbd_StoRefObj750,27253
void Sbd_StoDerefObj( Sbd_Sto_t * p, int iObj )Sbd_StoDerefObj778,28351
int Sbd_StoObjBestCut( Sbd_Sto_t * p, int iObj, int nSize, int * pLeaves )Sbd_StoObjBestCut802,29256
void Sbd_StoComputeCutsTest( Gia_Man_t * pGia )Sbd_StoComputeCutsTest833,30396

src/opt/sbd/sbdSim.c,760
static inline word * Sbd_ObjSims( Gia_Man_t * p, int i ) { return Vec_WrdEntryP( p->vSims,   p->iPatsPi * i );  }Sbd_ObjSims30,789
static inline word * Sbd_ObjCtrl( Gia_Man_t * p, int i ) { return Vec_WrdEntryP( p->vSimsPi, p->iPatsPi * i );  }Sbd_ObjCtrl31,903
void Sbd_GiaSimRoundBack2( Gia_Man_t * p )Sbd_GiaSimRoundBack248,1491
int Sbd_GiaSatOne_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int Value, int fFirst, int iPat )Sbd_GiaSatOne_rec93,2890
int Sbd_GiaSatOne( Gia_Man_t * p, Vec_Int_t * vPairs )Sbd_GiaSatOne116,3846
void Sbd_GiaSimRoundBack( Gia_Man_t * p )Sbd_GiaSimRoundBack175,5552
void Sbd_GiaSimRound( Gia_Man_t * p, int fTry, Vec_Int_t ** pvMap )Sbd_GiaSimRound217,6940
void Sbd_GiaSimTest( Gia_Man_t * pGia )Sbd_GiaSimTest278,9183

src/opt/sbd/sbdCore.c,7200
#define SBD_MAX_LUTSIZE SBD_MAX_LUTSIZE31,846
typedef struct Sbd_Man_t_ Sbd_Man_t;Sbd_Man_t33,873
struct Sbd_Man_t_Sbd_Man_t_34,910
    Sbd_Par_t *     pPars;       // user's parameterspPars36,930
    Gia_Man_t *     pGia;        // user's AIG manager (will be modified by adding nodes)pGia37,984
    Vec_Wec_t *     vTfos;       // TFO for each node (roots are marked) (windowing)vTfos38,1074
    Vec_Int_t *     vLutLevs;    // LUT level for each node after resynthesisvLutLevs39,1159
    Vec_Int_t *     vLutCuts;    // LUT cut for each nodes after resynthesisvLutCuts40,1237
    Vec_Int_t *     vLutCuts2;   // LUT cut for each nodes after resynthesisvLutCuts241,1314
    Vec_Int_t *     vMirrors;    // alternative nodevMirrors42,1391
    Vec_Wrd_t *     vSims[4];    // simulation information (main, backup, controlability)vSims43,1444
    Vec_Int_t *     vCover;      // temporaryvCover44,1534
    Vec_Int_t *     vLits;       // temporaryvLits45,1580
    Vec_Int_t *     vLits2;      // temporaryvLits246,1626
    int             nLuts[6];    // 0=const, 1=1lut, 2=2lut, 3=3lutnLuts47,1672
    int             nTried;  nTried48,1740
    int             nUsed;  nUsed49,1770
    abctime         timeWin;timeWin50,1799
    abctime         timeCut;timeCut51,1828
    abctime         timeCov;timeCov52,1857
    abctime         timeCnf;timeCnf53,1886
    abctime         timeSat;timeSat54,1915
    abctime         timeQbf;timeQbf55,1944
    abctime         timeNew;timeNew56,1973
    abctime         timeOther;timeOther57,2002
    abctime         timeTotal;timeTotal58,2033
    Sbd_Sto_t *     pSto;pSto59,2064
    Sbd_Srv_t *     pSrv;pSrv60,2090
    int             Pivot;       // target nodePivot62,2135
    int             DivCutoff;   // the place where D-2 divisors beginDivCutoff63,2183
    Vec_Int_t *     vTfo;        // TFO (excludes node, includes roots) - precomputedvTfo64,2254
    Vec_Int_t *     vRoots;      // TFO root nodesvRoots65,2340
    Vec_Int_t *     vWinObjs;    // TFI + Pivot + sideTFI + TFO (including roots)vWinObjs66,2391
    Vec_Int_t *     vObj2Var;    // SAT variables for the window (indexes of objects in vWinObjs)vObj2Var67,2473
    Vec_Int_t *     vDivSet;     // divisor variablesvDivSet68,2571
    Vec_Int_t *     vDivVars;    // divisor variablesvDivVars69,2625
    Vec_Int_t *     vDivValues;  // SAT variables values for the divisor variablesvDivValues70,2679
    Vec_Wec_t *     vDivLevels;  // divisors collected by levelsvDivLevels71,2762
    Vec_Int_t *     vCounts[2];  // counters of zeros and onesvCounts72,2827
    Vec_Wrd_t *     vMatrix;     // covering matrixvMatrix73,2890
    sat_solver *    pSat;        // SAT solverpSat74,2942
static inline int *  Sbd_ObjCut( Sbd_Man_t * p, int i )  { return Vec_IntEntryP( p->vLutCuts,  (p->pPars->nLutSize + 1) * i ); }Sbd_ObjCut77,2993
static inline int *  Sbd_ObjCut2( Sbd_Man_t * p, int i ) { return Vec_IntEntryP( p->vLutCuts2, (p->pPars->nLutSize + 1) * i ); }Sbd_ObjCut278,3122
static inline word * Sbd_ObjSim0( Sbd_Man_t * p, int i ) { return Vec_WrdEntryP( p->vSims[0], p->pPars->nWords * i );         }Sbd_ObjSim080,3252
static inline word * Sbd_ObjSim1( Sbd_Man_t * p, int i ) { return Vec_WrdEntryP( p->vSims[1], p->pPars->nWords * i );         }Sbd_ObjSim181,3380
static inline word * Sbd_ObjSim2( Sbd_Man_t * p, int i ) { return Vec_WrdEntryP( p->vSims[2], p->pPars->nWords * i );         }Sbd_ObjSim282,3508
static inline word * Sbd_ObjSim3( Sbd_Man_t * p, int i ) { return Vec_WrdEntryP( p->vSims[3], p->pPars->nWords * i );         }Sbd_ObjSim383,3636
void Sbd_ParSetDefault( Sbd_Par_t * pPars )Sbd_ParSetDefault100,4219
Vec_Wec_t * Sbd_ManWindowRoots( Gia_Man_t * p, int nTfoLevels, int nTfoFanMax )Sbd_ManWindowRoots135,5802
Sbd_Man_t * Sbd_ManStart( Gia_Man_t * pGia, Sbd_Par_t * pPars )Sbd_ManStart200,8012
void Sbd_ManStop( Sbd_Man_t * p )Sbd_ManStop249,10049
void Sbd_ManPropagateControlOne( Sbd_Man_t * p, int Node )Sbd_ManPropagateControlOne289,11109
void Sbd_ManPropagateControl( Sbd_Man_t * p, int Pivot )Sbd_ManPropagateControl322,12331
void Sbd_ManUpdateOrder( Sbd_Man_t * p, int Pivot )Sbd_ManUpdateOrder340,13182
void Sbd_ManWindowSim_rec( Sbd_Man_t * p, int NodeInit )Sbd_ManWindowSim_rec389,15223
int Sbd_ManWindow( Sbd_Man_t * p, int Pivot )Sbd_ManWindow444,17617
int Sbd_ManCheckConst( Sbd_Man_t * p, int Pivot )Sbd_ManCheckConst519,20448
static inline void Sbd_TransposeMatrix64( word A[64] )Sbd_TransposeMatrix64625,24190
static inline void Sbd_PrintMatrix64( word A[64] )Sbd_PrintMatrix64639,24553
void Sbd_ManPrintObj( Sbd_Man_t * p, int Pivot )Sbd_ManPrintObj659,25030
void Sbd_ManMatrPrint( Sbd_Man_t * p, word Cover[], int nCol, int nRows )Sbd_ManMatrPrint816,30197
static inline void Sbd_ManCoverReverseOrder( word Cover[64] )Sbd_ManCoverReverseOrder829,30662
static inline int Sbd_ManAddCube1( int nRowLimit, word Cover[], int nRows, word Cube )Sbd_ManAddCube1840,30874
static inline int Sbd_ManAddCube2( word Cover[2][64], int nRows, word Cube[2] )Sbd_ManAddCube2866,31671
static inline int Sbd_ManFindCandsSimple( Sbd_Man_t * p, word Cover[], int nDivs )Sbd_ManFindCandsSimple894,32525
static inline int Sbd_ManFindCands( Sbd_Man_t * p, word Cover[64], int nDivs )Sbd_ManFindCands943,33946
int Sbd_ManExplore( Sbd_Man_t * p, int Pivot, word * pTruth )Sbd_ManExplore1009,35963
int Sbd_ManExplore2( Sbd_Man_t * p, int Pivot, word * pTruth )Sbd_ManExplore21170,41597
int Sbd_ManExploreCut( Sbd_Man_t * p, int Pivot, int nLeaves, int * pLeaves, int * pnStrs, Sbd_Str_t * Strs, int * pFreeVar )Sbd_ManExploreCut1287,45795
int Sbd_ManExplore3( Sbd_Man_t * p, int Pivot, int * pnStrs, Sbd_Str_t * Strs )Sbd_ManExplore31564,56361
int Sbd_CutMergeSimple( Sbd_Man_t * p, int * pCut1, int * pCut2, int * pCut )Sbd_CutMergeSimple1610,57996
int Sbd_ManMergeCuts( Sbd_Man_t * p, int Node )Sbd_ManMergeCuts1670,60161
int Sbd_ManDelay( Sbd_Man_t * p )Sbd_ManDelay1718,62472
void Sbd_ManMergeTest( Sbd_Man_t * p )Sbd_ManMergeTest1725,62669
void Sbd_ManFindCut_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Sbd_ManFindCut_rec1733,62851
void Sbd_ManFindCutUnmark_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Sbd_ManFindCutUnmark_rec1744,63150
void Sbd_ManFindCut( Sbd_Man_t * p, int Node, Vec_Int_t * vCutLits )Sbd_ManFindCut1755,63468
int Sbd_ManImplement( Sbd_Man_t * p, int Pivot, word Truth )Sbd_ManImplement1780,64515
int Sbd_ManImplement2( Sbd_Man_t * p, int Pivot, int nStrs, Sbd_Str_t * pStrs )Sbd_ManImplement21842,67087
void Sbd_ManDeriveMapping_rec( Sbd_Man_t * p, Gia_Man_t * pNew, int iObj )Sbd_ManDeriveMapping_rec1945,71361
void Sbd_ManDeriveMapping( Sbd_Man_t * p, Gia_Man_t * pNew )Sbd_ManDeriveMapping1964,72056
void Sbd_ManDerive_rec( Gia_Man_t * pNew, Gia_Man_t * p, int Node, Vec_Int_t * vMirrors )Sbd_ManDerive_rec2009,73934
Gia_Man_t * Sbd_ManDerive( Sbd_Man_t * pMan, Gia_Man_t * p, Vec_Int_t * vMirrors )Sbd_ManDerive2030,74860
void Sbd_NtkPerformOne( Sbd_Man_t * p, int Pivot )Sbd_NtkPerformOne2073,76299
Gia_Man_t * Sbd_NtkPerform( Gia_Man_t * pGia, Sbd_Par_t * pPars )Sbd_NtkPerform2117,78179

src/opt/sbd/sbdCut2.c,3526
#define SBD_MAX_CUTSIZE SBD_MAX_CUTSIZE30,796
#define SBD_MAX_CUTNUM SBD_MAX_CUTNUM31,825
#define SBD_CUT_NO_LEAF SBD_CUT_NO_LEAF33,856
typedef struct Sbd_Cut_t_ Sbd_Cut_t; Sbd_Cut_t35,887
struct Sbd_Cut_t_Sbd_Cut_t_36,925
    word            Sign;                      // signatureSign38,945
    int             iFunc;                     // functionalityiFunc39,1005
    int             Cost;                      // cut costCost40,1069
    int             CostLev;                   // cut costCostLev41,1128
    unsigned        nTreeLeaves  :  9;         // tree leavesnTreeLeaves42,1187
    unsigned        nSlowLeaves  :  9;         // slow leavesnSlowLeaves43,1249
    unsigned        nTopLeaves   : 10;         // top leavesnTopLeaves44,1311
    unsigned        nLeaves      :  4;         // leaf countnLeaves45,1372
    int             pLeaves[SBD_MAX_CUTSIZE];  // leavespLeaves46,1433
struct Sbd_Srv_t_Sbd_Srv_t_49,1494
    int             nLutSize;nLutSize51,1514
    int             nCutSize;nCutSize52,1544
    int             nCutNum;nCutNum53,1574
    int             fVerbose;fVerbose54,1603
    Gia_Man_t *     pGia;                      // user's AIG manager (will be modified by adding nodes)pGia55,1633
    Vec_Int_t *     vMirrors;                  // mirrors for each nodevMirrors56,1737
    Vec_Int_t *     vLutLevs;                  // delays for each nodevLutLevs57,1809
    Vec_Int_t *     vLevs;                     // levels for each nodevLevs58,1880
    Vec_Int_t *     vRefs;                     // refs for each nodevRefs59,1951
    Sbd_Cut_t       pCuts[SBD_MAX_CUTNUM];     // temporary cutspCuts60,2020
    Sbd_Cut_t *     ppCuts[SBD_MAX_CUTNUM];    // temporary cut pointersppCuts61,2085
    abctime         clkStart;                  // starting timeclkStart62,2158
    Vec_Int_t *     vCut0;                     // current cutvCut063,2222
    Vec_Int_t *     vCut;                      // current cutvCut64,2284
    Vec_Int_t *     vCutTop;                   // current cutvCutTop65,2346
    Vec_Int_t *     vCutBot;                   // current cutvCutBot66,2408
Sbd_Srv_t * Sbd_ManCutServerStart( Gia_Man_t * pGia, Vec_Int_t * vMirrors, Sbd_ManCutServerStart84,2928
void Sbd_ManCutServerStop( Sbd_Srv_t * p )Sbd_ManCutServerStop110,3884
int Sbd_ManCutIsTopo_rec( Gia_Man_t * p, Vec_Int_t * vMirrors, int iObj )Sbd_ManCutIsTopo_rec130,4304
int Sbd_ManCutIsTopo( Gia_Man_t * p, Vec_Int_t * vMirrors, Vec_Int_t * vCut, int iObj )Sbd_ManCutIsTopo147,4934
static inline int Sbd_ManCutExpandOne( Gia_Man_t * p, Vec_Int_t * vMirrors, Vec_Int_t * vLutLevs, Vec_Int_t * vCut, int iThis, int iObj )Sbd_ManCutExpandOne171,5608
void Vec_IntIsOrdered( Vec_Int_t * vCut )Vec_IntIsOrdered196,6700
void Sbd_ManCutExpand( Gia_Man_t * p, Vec_Int_t * vMirrors, Vec_Int_t * vLutLevs, Vec_Int_t * vCut )Sbd_ManCutExpand206,6922
void Sbd_ManCutReload( Vec_Int_t * vMirrors, Vec_Int_t * vLutLevs, int LevStop, Vec_Int_t * vCut, Vec_Int_t * vCutTop, Vec_Int_t * vCutBot )Sbd_ManCutReload217,7251
int Sbd_ManCutCollect_rec( Gia_Man_t * p, Vec_Int_t * vMirrors, int iObj, int LevStop, Vec_Int_t * vLutLevs, Vec_Int_t * vCut )Sbd_ManCutCollect_rec234,7851
int Sbd_ManCutReduceTop( Gia_Man_t * p, Vec_Int_t * vMirrors, int iObj, Vec_Int_t * vLutLevs, Vec_Int_t * vCut, Vec_Int_t * vCutTop, int nCutSize )Sbd_ManCutReduceTop266,8950
int Sbd_ManCutServerFirst( Sbd_Srv_t * p, int iObj, int * pLeaves )Sbd_ManCutServerFirst308,10630

src/opt/sbd/sbdPath.c,507
int Sbc_ManAddInternalToPath_rec( Gia_Man_t * p, int iObj, Vec_Bit_t * vPath )Sbc_ManAddInternalToPath_rec46,1274
void Sbc_ManAddInternalToPath( Gia_Man_t * p, Vec_Bit_t * vPath )Sbc_ManAddInternalToPath63,1863
void Sbc_ManCriticalPath_rec( Gia_Man_t * p, int * pLevels, int iObj, int LevelFan, Vec_Bit_t * vPath, int Slack )Sbc_ManCriticalPath_rec88,2489
Vec_Bit_t * Sbc_ManCriticalPath( Gia_Man_t * p )Sbc_ManCriticalPath119,3860
void Sbc_ManDelayTrace( Gia_Man_t * p )Sbc_ManDelayTrace148,4757

src/opt/sbd/sbdSat.c,2386
#define MAX_M MAX_M31,805
#define MAX_N MAX_N32,836
#define MAX_K MAX_K33,866
#define MAX_D MAX_D34,898
typedef struct Sbd_Pro_t_ Sbd_Pro_t;Sbd_Pro_t41,1169
struct Sbd_Pro_t_Sbd_Pro_t_42,1206
    int             nLuts;  // LUT countnLuts44,1226
    int             nSize;  // LUT sizenSize45,1267
    int             nDivs;  // divisor countnDivs46,1307
    int             nVars;  // intermediate variables (nLuts * nSize)nVars47,1352
    int             nPars;  // total parameter count (nLuts * (1 << nSize) + nLuts * nSize * nDivs) nPars48,1422
    int             pPars1[SBD_LUTS_MAX][1<<SBD_SIZE_MAX];            // lut parameterspPars149,1523
    int             pPars2[SBD_LUTS_MAX][SBD_SIZE_MAX][SBD_DIV_MAX];  // topo parameterspPars250,1611
    int             pVars[SBD_LUTS_MAX][SBD_SIZE_MAX+1];              // internal variablespVars51,1700
    int             pDivs[SBD_DIV_MAX];                               // divisor variables (external)pDivs52,1792
Vec_Int_t * Sbd_ProblemSetup( Sbd_Pro_t * p, int nLuts, int nSize, int nDivs )Sbd_ProblemSetup66,2132
void Sbd_ProblemLoad1( Sbd_Pro_t * p, Vec_Int_t * vCnf, int iStartVar, int * pDivVars, int iTopVar, sat_solver * pSat )Sbd_ProblemLoad1144,4710
void Sbd_ProblemLoad2( Sbd_Pro_t * p, Vec_Wec_t * vCnf, int iStartVar, int * pDivVarValues, int iTopVarValue, sat_solver * pSat )Sbd_ProblemLoad2171,5861
sat_solver * Sbd_SolverTopo( int M, int N, int K, int pVars[MAX_N][MAX_M+MAX_N][MAX_K], int pVars2[MAX_M+MAX_N][MAX_D], int pDelays[], int Req, int * pnVars ) // inputs, nodes, lutsizeSbd_SolverTopo220,7353
void Sbd_SolverTopoPrint( sat_solver * pSat, int M, int N, int K, int pVars[MAX_N][MAX_M+MAX_N][MAX_K] ) Sbd_SolverTopoPrint370,13038
void Sbd_SolverTopoTest()Sbd_SolverTopoTest393,13760
void Sbd_SolverSynth( int M, int N, int K, int pLuts[MAX_N][MAX_K] )Sbd_SolverSynth449,15527
word Sbd_SolverTruth( int M, int N, int K, int pLuts[MAX_N][MAX_K], int pValues[MAX_N*((1<<MAX_K)-1)] )Sbd_SolverTruth525,17403
word * Sbd_SolverTruthWord( int M, int N, int K, int pLuts[MAX_N][MAX_K], int pValues[MAX_N*((1<<MAX_K)-1)], word * pTruthsElem, int fCompl )Sbd_SolverTruthWord548,18134
int Sbd_SolverFunc( int M, int N, int K, int pLuts[MAX_N][MAX_K], word * pTruthInit, int * pValues ) Sbd_SolverFunc589,19400
void Sbd_SolverFuncTest() Sbd_SolverFuncTest716,24014

src/opt/sbd/sbdCnf.c,288
void Sbd_PrintCnf( Vec_Str_t * vCnf )Sbd_PrintCnf45,1248
int Sbd_TruthToCnf( word Truth, int nVars, Vec_Int_t * vCover, Vec_Str_t * vCnf )Sbd_TruthToCnf70,1789
void Sbd_TranslateCnf( Vec_Wec_t * vRes, Vec_Str_t * vCnf, Vec_Int_t * vFaninMap, int iPivotVar )Sbd_TranslateCnf121,3388

src/opt/sbd/sbdLut.c,682
int Sbd_ProblemCountParams( int nStrs, Sbd_Str_t * pStr0 )Sbd_ProblemCountParams46,1340
int Sbd_ProblemAddClauses( sat_solver * pSat, int nVars, int nStrs, int * pVars, Sbd_Str_t * pStr0 )Sbd_ProblemAddClauses54,1613
void Sbd_ProblemAddClausesInit( sat_solver * pSat, int nVars, int nStrs, int * pVars, Sbd_Str_t * pStr0 )Sbd_ProblemAddClausesInit101,3390
void Sbd_ProblemPrintSolution( int nStrs, Sbd_Str_t * pStr0, Vec_Int_t * vLits )Sbd_ProblemPrintSolution128,4512
void Sbd_ProblemCollectSolution( int nStrs, Sbd_Str_t * pStr0, Vec_Int_t * vLits )Sbd_ProblemCollectSolution146,5196
int Sbd_ProblemSolve( Gia_Man_t * p, Vec_Int_t * vMirrors, Sbd_ProblemSolve187,6395

src/opt/sbd/sbdWin.c,1276
sat_solver * Sbd_ManSatSolver( sat_solver * pSat, Gia_Man_t * p, Vec_Int_t * vMirrors, Sbd_ManSatSolver52,1762
word Sbd_ManSolve( sat_solver * pSat, int PivotVar, int FreeVar, Vec_Int_t * vDivSet, Vec_Int_t * vDivVars, Vec_Int_t * vDivValues, Vec_Int_t * vTemp )Sbd_ManSolve178,7169
int Sbd_ManSolve2( sat_solver * pSat, int PivotVar, int FreeVar, Vec_Int_t * vDivVars, Vec_Int_t * vDivValues, Vec_Int_t * vTemp, Vec_Int_t * vSop )Sbd_ManSolve2267,10767
word Sbd_ManSolverSupp( Vec_Int_t * vSop, int * pInds, int * pnVars )Sbd_ManSolverSupp327,13342
void Sbd_ManSolverPrint( Vec_Int_t * vSop )Sbd_ManSolverPrint344,13810
void Sbd_ManSolveSelect( Gia_Man_t * p, Vec_Int_t * vMirrors, int Pivot, Vec_Int_t * vDivVars, Vec_Int_t * vDivValues, Vec_Int_t * vWinObjs, Vec_Int_t * vObj2Var, Vec_Int_t * vTfo, Vec_Int_t * vRoots )Sbd_ManSolveSelect365,14398
static void sat_solver_random_polarity(sat_solver* s)sat_solver_random_polarity401,15831
int Sbd_ManCollectConstants( sat_solver * pSat, int nCareMints[2], int PivotVar, word * pVarSims[], Vec_Int_t * vInds )Sbd_ManCollectConstants411,16121
int Sbd_ManCollectConstantsNew( sat_solver * pSat, Vec_Int_t * vDivVars, int nConsts, int PivotVar, word * pOnset, word * pOffset )Sbd_ManCollectConstantsNew433,16946

src/opt/sbd/sbd.h,1456
#define ABC__opt_sbd__hABC__opt_sbd__h22,551
typedef struct Sbd_Par_t_ Sbd_Par_t;Sbd_Par_t38,1264
struct Sbd_Par_t_Sbd_Par_t_39,1301
    int             nLutSize;     // target LUT sizenLutSize41,1321
    int             nLutNum;      // target LUT countnLutNum42,1374
    int             nCutSize;     // target cut sizenCutSize43,1428
    int             nCutNum;      // target cut countnCutNum44,1481
    int             nTfoLevels;   // the number of TFO levels (windowing)nTfoLevels45,1535
    int             nTfoFanMax;   // the max number of fanouts (windowing)nTfoFanMax46,1609
    int             nWinSizeMax;  // maximum window size (windowing)nWinSizeMax47,1684
    int             nBTLimit;     // maximum number of SAT conflicts nBTLimit48,1753
    int             nWords;       // simulation word countnWords49,1823
    int             fMapping;     // generate mappingfMapping50,1882
    int             fMoreCuts;    // use several cutsfMoreCuts51,1936
    int             fFindDivs;    // perform divisor searchfFindDivs52,1990
    int             fUsePath;     // optimize only critical pathfUsePath53,2050
    int             fArea;        // area-oriented optimizationfArea54,2115
    int             fCover;       // use complete cover procedurefCover55,2179
    int             fVerbose;     // verbose flagfVerbose56,2245
    int             fVeryVerbose; // verbose flagfVeryVerbose57,2295

src/opt/sbd/sbdInt.h,808
#define ABC__opt_sbdInt__hABC__opt_sbdInt__h22,560
#define SBD_SAT_UNDEC SBD_SAT_UNDEC52,1434
#define SBD_SAT_SAT SBD_SAT_SAT53,1475
#define SBD_LUTS_MAX SBD_LUTS_MAX55,1517
#define SBD_SIZE_MAX SBD_SIZE_MAX56,1543
#define SBD_DIV_MAX SBD_DIV_MAX57,1569
#define SBD_FVAR_MAX SBD_FVAR_MAX58,1595
typedef struct Sbd_Sto_t_ Sbd_Sto_t;Sbd_Sto_t64,1842
typedef struct Sbd_Srv_t_ Sbd_Srv_t; Sbd_Srv_t65,1879
typedef struct Sbd_Str_t_ Sbd_Str_t;Sbd_Str_t67,1918
struct Sbd_Str_t_Sbd_Str_t_68,1955
    int               fLut;                 // LUT or SELfLut70,1975
    int               nVarIns;              // input countnVarIns71,2033
    int               VarIns[SBD_DIV_MAX];  // input varsVarIns72,2092
    word              Res;                  // result of solvingRes73,2150

src/opt/sfm/sfmDec.c,12203
typedef struct Sfm_Dec_t_ Sfm_Dec_t;Sfm_Dec_t38,1016
struct Sfm_Dec_t_Sfm_Dec_t_39,1053
    Sfm_Par_t *       pPars;       // parameterspPars42,1089
    Sfm_Lib_t *       pLib;        // librarypLib43,1138
    Sfm_Tim_t *       pTim;        // timingpTim44,1184
    Sfm_Mit_t *       pMit;        // timingpMit45,1229
    Abc_Ntk_t *       pNtk;        // networkpNtk46,1274
    Vec_Int_t         vGateSizes;  // fanin countsvGateSizes48,1335
    Vec_Wrd_t         vGateFuncs;  // gate truth tablesvGateFuncs49,1386
    Vec_Wec_t         vGateCnfs;   // gate CNFsvGateCnfs50,1442
    Vec_Ptr_t         vGateHands;  // gate handlesvGateHands51,1490
    int               GateConst0;  // special gatesGateConst052,1541
    int               GateConst1;  // special gatesGateConst153,1593
    int               GateBuffer;  // special gatesGateBuffer54,1645
    int               GateInvert;  // special gatesGateInvert55,1697
    int               GateAnd[4];  // special gatesGateAnd56,1749
    int               GateOr[4];   // special gatesGateOr57,1801
    int               nDivs;       // the number of divisorsnDivs59,1868
    int               nMffc;       // the number of divisorsnMffc60,1929
    int               AreaMffc;    // the area of gates in MFFCAreaMffc61,1990
    int               DelayMin;    // temporary min delayDelayMin62,2054
    int               iTarget;     // target nodeiTarget63,2112
    int               iUseThis;    // next cofactoring var to tryiUseThis64,2162
    int               DeltaCrit;   // critical deltaDeltaCrit65,2228
    int               AreaInv;     // inverter areaAreaInv66,2281
    int               DelayInv;    // inverter delayDelayInv67,2333
    Mio_Gate_t *      pGateInv;    // inverterpGateInv68,2386
    word              uCareSet;    // computed caresetuCareSet69,2433
    Vec_Int_t         vObjRoots;   // roots of the windowvObjRoots70,2488
    Vec_Int_t         vObjGates;   // functionalityvObjGates71,2546
    Vec_Wec_t         vObjFanins;  // fanin IDsvObjFanins72,2598
    Vec_Int_t         vObjMap;     // object mapvObjMap73,2646
    Vec_Int_t         vObjDec;     // decompositionvObjDec74,2695
    Vec_Int_t         vObjMffc;    // MFFC nodesvObjMffc75,2747
    Vec_Int_t         vObjInMffc;  // inputs of MFFC nodesvObjInMffc76,2796
    Vec_Wrd_t         vObjSims;    // simulation patternsvObjSims77,2855
    Vec_Wrd_t         vObjSims2;   // simulation patternsvObjSims278,2913
    Vec_Ptr_t         vMatchGates; // matched gatesvMatchGates79,2971
    Vec_Ptr_t         vMatchFans;  // matched faninsvMatchFans80,3023
    sat_solver *      pSat;        // reusable solver pSat82,3090
    Vec_Wec_t         vClauses;    // CNF clauses for the nodevClauses83,3145
    Vec_Int_t         vImpls[2];   // onset/offset implicationsvImpls84,3208
    Vec_Wrd_t         vSets[2];    // onset/offset patternsvSets85,3272
    int               nPats[2];    // CEX countnPats86,3332
    int               nPatWords[2];// CEX wordsnPatWords87,3380
    int               nDivWords;   // div wordsnDivWords88,3428
    int               nDivWordsAlloc; // div wordsnDivWordsAlloc89,3476
    word              TtElems[SFM_SUPP_MAX][SFM_WORD_MAX];TtElems90,3527
    word *            pTtElems[SFM_SUPP_MAX];pTtElems91,3586
    word *            pDivWords[SFM_SUPP_MAX];pDivWords92,3632
    Vec_Int_t         vNewNodes;vNewNodes94,3696
    Vec_Int_t         vGateTfi;vGateTfi95,3729
    Vec_Int_t         vGateTfo;vGateTfo96,3761
    Vec_Int_t         vGateCut;vGateCut97,3793
    Vec_Int_t         vGateTemp;vGateTemp98,3825
    Vec_Int_t         vGateMffc;vGateMffc99,3858
    Vec_Int_t         vCands;vCands100,3891
    word              Copy[4];Copy101,3921
    int               nSuppVars;nSuppVars102,3952
    abctime           timeLib;timeLib104,4003
    abctime           timeWin;timeWin105,4034
    abctime           timeCnf;timeCnf106,4065
    abctime           timeSat;timeSat107,4096
    abctime           timeSatSat;timeSatSat108,4127
    abctime           timeSatUnsat;timeSatUnsat109,4161
    abctime           timeEval;timeEval110,4197
    abctime           timeTime;timeTime111,4229
    abctime           timeOther;timeOther112,4261
    abctime           timeStart;timeStart113,4294
    abctime           timeTotal;timeTotal114,4327
    int               nTotalNodesBeg;nTotalNodesBeg115,4360
    int               nTotalEdgesBeg;nTotalEdgesBeg116,4398
    int               nTotalNodesEnd;nTotalNodesEnd117,4436
    int               nTotalEdgesEnd;nTotalEdgesEnd118,4474
    int               nNodesTried;nNodesTried119,4512
    int               nNodesChanged;nNodesChanged120,4547
    int               nNodesConst0;nNodesConst0121,4584
    int               nNodesConst1;nNodesConst1122,4620
    int               nNodesBuf;nNodesBuf123,4656
    int               nNodesInv;nNodesInv124,4689
    int               nNodesAndOr;nNodesAndOr125,4722
    int               nNodesResyn;nNodesResyn126,4757
    int               nSatCalls;nSatCalls127,4792
    int               nSatCallsSat;nSatCallsSat128,4825
    int               nSatCallsUnsat;nSatCallsUnsat129,4861
    int               nSatCallsOver;nSatCallsOver130,4899
    int               nTimeOuts;nTimeOuts131,4936
    int               nNoDecs;nNoDecs132,4969
    int               nEfforts;nEfforts133,5000
    int               nMaxDivs;nMaxDivs134,5032
    int               nMaxWin;nMaxWin135,5064
    word              nAllDivs;nAllDivs136,5095
    word              nAllWin;nAllWin137,5127
    int               nLuckySizes[SFM_SUPP_MAX+1];nLuckySizes138,5158
    int               nLuckyGates[SFM_SUPP_MAX+1];nLuckyGates139,5209
#define SFM_MASK_PI SFM_MASK_PI142,5264
#define SFM_MASK_INPUT SFM_MASK_INPUT143,5338
#define SFM_MASK_FANIN SFM_MASK_FANIN144,5418
#define SFM_MASK_MFFC SFM_MASK_MFFC145,5521
#define SFM_MASK_PIVOT SFM_MASK_PIVOT146,5589
static inline Sfm_Dec_t * Sfm_DecMan( Abc_Obj_t * p )                        { return (Sfm_Dec_t *)p->pNtk->pData;                  }Sfm_DecMan148,5636
static inline word        Sfm_DecObjSim( Sfm_Dec_t * p, Abc_Obj_t * pObj )   { return Vec_WrdEntry(&p->vObjSims, Abc_ObjId(pObj));  }Sfm_DecObjSim149,5770
static inline word        Sfm_DecObjSim2( Sfm_Dec_t * p, Abc_Obj_t * pObj )  { return Vec_WrdEntry(&p->vObjSims2, Abc_ObjId(pObj)); }Sfm_DecObjSim2150,5904
static inline word *      Sfm_DecDivPats( Sfm_Dec_t * p, int d, int c )      { return Vec_WrdEntryP(&p->vSets[c], d*SFM_SIM_WORDS); }Sfm_DecDivPats151,6038
static inline int         Sfm_ManReadObjDelay( Sfm_Dec_t * p, int Id )       { return p->pMit ? Sfm_MitReadObjDelay(p->pMit, Id) : Sfm_TimReadObjDelay(p->pTim, Id); }Sfm_ManReadObjDelay153,6173
static inline int         Sfm_ManReadNtkDelay( Sfm_Dec_t * p )               { return p->pMit ? Sfm_MitReadNtkDelay(p->pMit)     : Sfm_TimReadNtkDelay(p->pTim);     }Sfm_ManReadNtkDelay154,6340
static inline int         Sfm_ManReadNtkMinSlack( Sfm_Dec_t * p )            { return p->pMit ? Sfm_MitReadNtkMinSlack(p->pMit)  : 0;                                }Sfm_ManReadNtkMinSlack155,6507
void Sfm_ParSetDefault3( Sfm_Par_t * pPars )Sfm_ParSetDefault3174,7142
Sfm_Dec_t * Sfm_DecStart( Sfm_Par_t * pPars, Mio_Library_t * pLib, Abc_Ntk_t * pNtk )Sfm_DecStart209,8701
void Sfm_DecStop( Sfm_Dec_t * p )Sfm_DecStop249,10641
static inline word Sfm_ObjSimulate( Abc_Obj_t * pObj )Sfm_ObjSimulate309,12419
static inline word Sfm_ObjSimulate2( Abc_Obj_t * pObj )Sfm_ObjSimulate2319,12835
static inline void Sfm_NtkSimulate( Abc_Ntk_t * pNtk )Sfm_NtkSimulate331,13329
static inline void Sfm_ObjSimulateNode( Abc_Obj_t * pObj )Sfm_ObjSimulateNode357,14338
static inline void Sfm_ObjFlipNode( Abc_Obj_t * pObj )Sfm_ObjFlipNode366,14693
static inline word Sfm_ObjFindCareSet( Abc_Ntk_t * pNtk, Vec_Int_t * vRoots )Sfm_ObjFindCareSet373,14920
static inline void Sfm_ObjSetupSimInfo( Abc_Obj_t * pObj )Sfm_ObjSetupSimInfo383,15278
static inline void Sfm_ObjSetdownSimInfo( Abc_Obj_t * pObj )Sfm_ObjSetdownSimInfo428,17082
int Sfm_DecPrepareSolver( Sfm_Dec_t * p )Sfm_DecPrepareSolver480,18702
int Sfm_DecFindCost( Sfm_Dec_t * p, int c, int iLit, word * pMask )Sfm_DecFindCost567,21899
void Sfm_DecPrint( Sfm_Dec_t * p, word Masks[2][SFM_SIM_WORDS] )Sfm_DecPrint572,22125
void Sfm_DecVarCost( Sfm_Dec_t * p, word Masks[2][SFM_SIM_WORDS], int d, int Counts[2][2] )Sfm_DecVarCost619,23704
int Sfm_DecFindBestVar2( Sfm_Dec_t * p, word Masks[2][SFM_SIM_WORDS] )Sfm_DecFindBestVar2632,24254
int Sfm_DecFindBestVar( Sfm_Dec_t * p, word Masks[2][SFM_SIM_WORDS] )Sfm_DecFindBestVar650,24824
int Sfm_DecMffcArea( Abc_Ntk_t * pNtk, Vec_Int_t * vMffc )Sfm_DecMffcArea681,25649
int Sfm_MffcDeref_rec( Abc_Obj_t * pObj )Sfm_MffcDeref_rec689,25911
int Sfm_MffcRef_rec( Abc_Obj_t * pObj, Vec_Int_t * vMffc )Sfm_MffcRef_rec701,26293
int Sfm_DecMffcAreaReal( Abc_Obj_t * pPivot, Vec_Int_t * vCut, Vec_Int_t * vMffc )Sfm_DecMffcAreaReal714,26715
void Sfm_DecPrepareVec( Vec_Int_t * vMap, int * pNodes, int nNodes, Vec_Int_t * vCut )Sfm_DecPrepareVec731,27267
int Sfm_DecComputeFlipInvGain( Sfm_Dec_t * p, Abc_Obj_t * pPivot, int * pfNeedInv )Sfm_DecComputeFlipInvGain738,27494
int Sfm_DecCombineDec( Sfm_Dec_t * p, word * pTruth0, word * pTruth1, int * pSupp0, int * pSupp1, int nSupp0, int nSupp1, word * pTruth, int * pSupp, int Var )Sfm_DecCombineDec783,28814
int Sfm_DecPeformDec_rec( Sfm_Dec_t * p, word * pTruth, int * pSupp, int * pAssump, int nAssump, word Masks[2][SFM_SIM_WORDS], int fCofactor, int nSuppAdd )Sfm_DecPeformDec_rec815,30282
int Sfm_DecPeformDec2( Sfm_Dec_t * p, Abc_Obj_t * pObj )Sfm_DecPeformDec21098,40633
int Sfm_DecPeformDec3( Sfm_Dec_t * p, Abc_Obj_t * pObj )Sfm_DecPeformDec31205,44983
void Abc_NtkUpdateIncLevel_rec( Abc_Obj_t * pObj )Abc_NtkUpdateIncLevel_rec1356,51522
int Abc_NtkDfsCheck_rec( Abc_Obj_t * pObj, Abc_Obj_t * pPivot )Abc_NtkDfsCheck_rec1379,52149
void Abc_NtkDfsReverseOne_rec( Abc_Obj_t * pObj, Vec_Int_t * vTfo, int nLevelMax, int nFanoutMax )Abc_NtkDfsReverseOne_rec1395,52604
int Abc_NtkDfsOne_rec( Abc_Obj_t * pObj, Vec_Int_t * vTfi, int nLevelMin, int CiLabel )Abc_NtkDfsOne_rec1416,53402
void Sfm_DecAddNode( Abc_Obj_t * pObj, Vec_Int_t * vMap, Vec_Int_t * vGates, int fSkip, int fVeryVerbose )Sfm_DecAddNode1435,54136
static inline int Sfm_DecNodeIsMffc( Abc_Obj_t * p, int nLevelMin )Sfm_DecNodeIsMffc1444,54542
static inline int Sfm_DecNodeIsMffcInput( Abc_Obj_t * p, int nLevelMin, Sfm_Tim_t * pTim, Abc_Obj_t * pPivot )Sfm_DecNodeIsMffcInput1448,54762
static inline int Sfm_DecNodeIsMffcInput2( Abc_Obj_t * p, int nLevelMin, Sfm_Mit_t * pMit, Abc_Obj_t * pPivot )Sfm_DecNodeIsMffcInput21452,54961
void Sfm_DecMarkMffc( Abc_Obj_t * pPivot, int nLevelMin, int nMffcMax, int fVeryVerbose, Vec_Int_t * vMffc, Vec_Int_t * vInMffc, Sfm_Tim_t * pTim, Sfm_Mit_t * pMit )Sfm_DecMarkMffc1456,55161
int Sfm_DecExtract( Abc_Ntk_t * pNtk, Sfm_Par_t * pPars, Abc_Obj_t * pPivot, Vec_Int_t * vRoots, Vec_Int_t * vGates, Vec_Wec_t * vFanins, Vec_Int_t * vMap, Vec_Int_t * vTfi, Vec_Int_t * vTfo, Vec_Int_t * vMffc, Vec_Int_t * vInMffc, Sfm_Tim_t * pTim, Sfm_Mit_t * pMit )Sfm_DecExtract1565,60269
Abc_Obj_t * Sfm_DecInsert( Abc_Ntk_t * pNtk, Abc_Obj_t * pPivot, int Limit, Vec_Int_t * vGates, Vec_Wec_t * vFanins, Vec_Int_t * vMap, Vec_Ptr_t * vGateHandles, int GateBuf, int GateInv, Vec_Wrd_t * vFuncs, Vec_Int_t * vNewNodes, Sfm_Mit_t * pMit )Sfm_DecInsert1701,65996
void Sfm_DecPrintStats( Sfm_Dec_t * p )Sfm_DecPrintStats1791,69951
void Abc_NtkCountStats( Sfm_Dec_t * p, int Limit )Abc_NtkCountStats1830,72262
Abc_Obj_t * Abc_NtkAreaOptOne( Sfm_Dec_t * p, int i )Abc_NtkAreaOptOne1861,73036
void Abc_NtkAreaOpt( Sfm_Dec_t * p )Abc_NtkAreaOpt1928,75617
void Abc_NtkAreaOpt2( Sfm_Dec_t * p )Abc_NtkAreaOpt21939,75914
void Abc_NtkDelayOpt( Sfm_Dec_t * p )Abc_NtkDelayOpt1984,77434
void Abc_NtkPerformMfs3( Abc_Ntk_t * pNtk, Sfm_Par_t * pPars )Abc_NtkPerformMfs32095,82567

src/opt/sfm/sfmWin.c,2728
int Sfm_ObjRef_rec( Sfm_Ntk_t * p, int iObj )Sfm_ObjRef_rec45,1284
int Sfm_ObjRef( Sfm_Ntk_t * p, int iObj )Sfm_ObjRef60,1687
int Sfm_ObjDeref_rec( Sfm_Ntk_t * p, int iObj )Sfm_ObjDeref_rec67,1873
int Sfm_ObjDeref( Sfm_Ntk_t * p, int iObj )Sfm_ObjDeref82,2280
int Sfm_ObjMffcSize( Sfm_Ntk_t * p, int iObj )Sfm_ObjMffcSize89,2470
static inline void  Sfm_NtkIncrementTravId( Sfm_Ntk_t * p )            { p->nTravIds++;                                            }       Sfm_NtkIncrementTravId114,3082
static inline void  Sfm_ObjSetTravIdCurrent( Sfm_Ntk_t * p, int Id )   { Vec_IntWriteEntry( &p->vTravIds, Id, p->nTravIds );       }Sfm_ObjSetTravIdCurrent115,3222
static inline int   Sfm_ObjIsTravIdCurrent( Sfm_Ntk_t * p, int Id )    { return (Vec_IntEntry(&p->vTravIds, Id) == p->nTravIds);   }   Sfm_ObjIsTravIdCurrent116,3355
static inline int   Sfm_ObjIsTravIdPrevious( Sfm_Ntk_t * p, int Id )   { return (Vec_IntEntry(&p->vTravIds, Id) == p->nTravIds-1); }   Sfm_ObjIsTravIdPrevious117,3491
static inline void  Sfm_NtkIncrementTravId2( Sfm_Ntk_t * p )           { p->nTravIds2++;                                           }       Sfm_NtkIncrementTravId2119,3628
static inline void  Sfm_ObjSetTravIdCurrent2( Sfm_Ntk_t * p, int Id )  { Vec_IntWriteEntry( &p->vTravIds2, Id, p->nTravIds2 );     }Sfm_ObjSetTravIdCurrent2120,3768
static inline int   Sfm_ObjIsTravIdCurrent2( Sfm_Ntk_t * p, int Id )   { return (Vec_IntEntry(&p->vTravIds2, Id) == p->nTravIds2); }   Sfm_ObjIsTravIdCurrent2121,3901
void Sfm_NtkDfs_rec( Sfm_Ntk_t * p, int iNode, Vec_Int_t * vNodes, Vec_Wec_t * vGroups, Vec_Int_t * vGroupMap, Vec_Int_t * vBoxesLeft )Sfm_NtkDfs_rec136,4454
Vec_Int_t * Sfm_NtkDfs( Sfm_Ntk_t * p, Vec_Wec_t * vGroups, Vec_Int_t * vGroupMap, Vec_Int_t * vBoxesLeft, int fAllBoxes )Sfm_NtkDfs166,5661
int Sfm_NtkCheckOverlap_rec( Sfm_Ntk_t * p, int iThis, int iNode )Sfm_NtkCheckOverlap_rec195,6567
int Sfm_NtkCheckOverlap( Sfm_Ntk_t * p, int iFan, int iNode )Sfm_NtkCheckOverlap209,7027
static inline int Sfm_NtkCheckRoot( Sfm_Ntk_t * p, int iNode, int nLevelMax )Sfm_NtkCheckRoot226,7457
void Sfm_NtkComputeRoots_rec( Sfm_Ntk_t * p, int iNode, int nLevelMax, Vec_Int_t * vRoots, Vec_Int_t * vTfo )Sfm_NtkComputeRoots_rec240,8140
void Sfm_NtkAddDivisors( Sfm_Ntk_t * p, int iNode, int nLevelMax )Sfm_NtkAddDivisors268,9049
static inline int Sfm_ObjIsUseful( Sfm_Ntk_t * p, int iNode )Sfm_ObjIsUseful306,10381
int Sfm_NtkCollectTfi_rec( Sfm_Ntk_t * p, int iNode, Vec_Int_t * vNodes )Sfm_NtkCollectTfi_rec328,10912
int Sfm_NtkCreateWindow( Sfm_Ntk_t * p, int iNode, int fVerbose )Sfm_NtkCreateWindow340,11358
void Sfm_NtkWindowTest( Sfm_Ntk_t * p, int iNode )Sfm_NtkWindowTest468,15966

src/opt/sfm/sfmMit.c,2077
struct Sfm_Mit_t_Sfm_Mit_t_29,792
    int      Value1;Value131,812
    int      Value2;Value232,833
    int      Value3;Value333,854
    int      Value4;Value434,875
Sfm_Mit_t *  Sfm_MitStart( Mio_Library_t * pLib, SC_Lib * pScl, Scl_Con_t * pExt, Abc_Ntk_t * pNtk, int DeltaCrit ) { return NULL; }Sfm_MitStart52,1378
void         Sfm_MitStop( Sfm_Mit_t * p )                                                           {}Sfm_MitStop53,1511
int          Sfm_MitReadNtkDelay( Sfm_Mit_t * p )                                                   { return 0;}Sfm_MitReadNtkDelay54,1614
int          Sfm_MitReadNtkMinSlack( Sfm_Mit_t * p )                                                { return 0;}Sfm_MitReadNtkMinSlack55,1727
int          Sfm_MitReadObjDelay( Sfm_Mit_t * p, int iObj )                                         { return 0;}Sfm_MitReadObjDelay56,1840
void         Sfm_MitTransferLoad( Sfm_Mit_t * p, Abc_Obj_t * pNew, Abc_Obj_t * pOld )               {};Sfm_MitTransferLoad57,1953
void         Sfm_MitTimingGrow( Sfm_Mit_t * p )                                                     {};Sfm_MitTimingGrow58,2057
void         Sfm_MitUpdateLoad( Sfm_Mit_t * p, Vec_Int_t * vTimeNodes, int fAdd )                   {}Sfm_MitUpdateLoad59,2161
void         Sfm_MitUpdateTiming( Sfm_Mit_t * p, Vec_Int_t * vTimeNodes )                           {}Sfm_MitUpdateTiming60,2264
int          Sfm_MitSortArrayByArrival( Sfm_Mit_t * p, Vec_Int_t * vNodes, int iPivot )             { return 0;}Sfm_MitSortArrayByArrival61,2367
int          Sfm_MitPriorityNodes( Sfm_Mit_t * p, Vec_Int_t * vCands, int Window )                  { return 0;}Sfm_MitPriorityNodes62,2480
int          Sfm_MitNodeIsNonCritical( Sfm_Mit_t * p, Abc_Obj_t * pPivot, Abc_Obj_t * pNode )       { return 0;}Sfm_MitNodeIsNonCritical63,2593
int          Sfm_MitEvalRemapping( Sfm_Mit_t * p, Vec_Int_t * vMffc, Abc_Obj_t * pObj, Vec_Int_t * vFanins, Vec_Int_t * vMap, Mio_Gate_t * pGate1, char * pFans1, Mio_Gate_t * pGate2, char * pFans2 ) { return 0;}Sfm_MitEvalRemapping64,2706

src/opt/sfm/sfmInt.h,9433
#define ABC__opt_sfmInt__hABC__opt_sfmInt__h22,560
#define SFM_FANIN_MAX SFM_FANIN_MAX50,1375
#define SFM_SAT_UNDEC SFM_SAT_UNDEC51,1399
#define SFM_SAT_SAT SFM_SAT_SAT52,1440
#define SFM_SUPP_MAX SFM_SUPP_MAX54,1482
#define SFM_WORD_MAX SFM_WORD_MAX55,1506
#define SFM_WIN_MAX SFM_WIN_MAX56,1574
#define SFM_DEC_MAX SFM_DEC_MAX57,1601
#define SFM_SIM_WORDS SFM_SIM_WORDS58,1625
typedef struct Sfm_Fun_t_ Sfm_Fun_t; Sfm_Fun_t64,1870
typedef struct Sfm_Lib_t_ Sfm_Lib_t; Sfm_Lib_t65,1908
typedef struct Sfm_Tim_t_ Sfm_Tim_t;Sfm_Tim_t66,1946
typedef struct Sfm_Mit_t_ Sfm_Mit_t;Sfm_Mit_t67,1983
struct Sfm_Ntk_t_Sfm_Ntk_t_69,2021
    Sfm_Par_t *       pPars;       // parameterspPars72,2059
    int               nPis;        // PI count (PIs should be first objects)nPis74,2123
    int               nPos;        // PO count (POs should be last objects)nPos75,2200
    int               nNodes;      // internal nodesnNodes76,2276
    int               nObjs;       // total objectsnObjs77,2329
    int               nLevelMax;   // maximum levelnLevelMax78,2381
    Vec_Str_t *       vFixed;      // persistent objectsvFixed80,2450
    Vec_Str_t *       vEmpty;      // transparent objectsvEmpty81,2507
    Vec_Wrd_t *       vTruths;     // truth tablesvTruths82,2565
    Vec_Wec_t         vFanins;     // faninsvFanins83,2616
    Vec_Int_t *       vStarts;     // offsetsvStarts84,2661
    Vec_Wrd_t *       vTruths2;    // truth tables (large)vTruths285,2707
    Vec_Wec_t         vFanouts;    // fanoutsvFanouts87,2784
    Vec_Int_t         vLevels;     // logic levelvLevels88,2830
    Vec_Int_t         vLevelsR;    // logic levelvLevelsR89,2880
    Vec_Int_t         vCounts;     // fanin countersvCounts90,2930
    Vec_Int_t         vId2Var;     // ObjId -> SatVarvId2Var91,2983
    Vec_Int_t         vVar2Id;     // SatVar -> ObjIdvVar2Id92,3037
    Vec_Wec_t *       vCnfs;       // CNFsvCnfs93,3091
    Vec_Int_t *       vCover;      // temporaryvCover94,3134
    Vec_Int_t         vTravIds;    // traversal IDsvTravIds96,3203
    Vec_Int_t         vTravIds2;   // traversal IDsvTravIds297,3255
    int               nTravIds;    // traversal IDsnTravIds98,3307
    int               nTravIds2;   // traversal IDsnTravIds299,3359
    int               iPivotNode;  // window pivotiPivotNode101,3425
    Vec_Int_t *       vNodes;      // internalvNodes102,3476
    Vec_Int_t *       vDivs;       // divisorsvDivs103,3523
    Vec_Int_t *       vRoots;      // rootsvRoots104,3570
    Vec_Int_t *       vTfo;        // TFO (excluding iNode)vTfo105,3614
    sat_solver *      pSat;        // SAT solverpSat107,3693
    int               nSatVars;    // the number of variablesnSatVars108,3742
    int               nTryRemoves; // number of fanin removalsnTryRemoves109,3804
    int               nTryResubs;  // number of resubstitutionsnTryResubs110,3867
    int               nRemoves;    // number of fanin removalsnRemoves111,3931
    int               nResubs;     // number of resubstitutionsnResubs112,3994
    int               nCexes;      // number of CEXesnCexes114,4082
    Vec_Wrd_t *       vDivCexes;   // counter-examplesvDivCexes115,4136
    Vec_Int_t *       vOrder;      // object ordervOrder117,4216
    Vec_Int_t *       vDivVars;    // divisor SAT variablesvDivVars118,4267
    Vec_Int_t *       vDivIds;     // divisors indexesvDivIds119,4327
    Vec_Int_t *       vLits;       // literalsvLits120,4382
    Vec_Int_t *       vValues;     // SAT variable valuesvValues121,4429
    Vec_Wec_t *       vClauses;    // CNF clauses for the nodevClauses122,4487
    Vec_Int_t *       vFaninMap;   // mapping fanins into their SAT varsvFaninMap123,4550
    int               nTotalNodesBeg;nTotalNodesBeg125,4636
    int               nTotalEdgesBeg;nTotalEdgesBeg126,4674
    int               nTotalNodesEnd;nTotalNodesEnd127,4712
    int               nTotalEdgesEnd;nTotalEdgesEnd128,4750
    int               nNodesTried;nNodesTried129,4788
    int               nTotalDivs;nTotalDivs130,4823
    int               nSatCalls;nSatCalls131,4857
    int               nTimeOuts;nTimeOuts132,4890
    int               nMaxDivs;nMaxDivs133,4923
    abctime           timeWin;timeWin135,4970
    abctime           timeDiv;timeDiv136,5001
    abctime           timeCnf;timeCnf137,5032
    abctime           timeSat;timeSat138,5063
    abctime           timeOther;timeOther139,5094
    abctime           timeTotal;timeTotal140,5127
static inline int  Sfm_NtkPiNum( Sfm_Ntk_t * p )                        { return p->nPis;                                   }Sfm_NtkPiNum144,5195
static inline int  Sfm_NtkPoNum( Sfm_Ntk_t * p )                        { return p->nPos;                                   }Sfm_NtkPoNum145,5321
static inline int  Sfm_NtkNodeNum( Sfm_Ntk_t * p )                      { return p->nObjs - p->nPis - p->nPos;              }Sfm_NtkNodeNum146,5447
static inline int  Sfm_ObjIsPi( Sfm_Ntk_t * p, int i )                  { return i < p->nPis;                               }Sfm_ObjIsPi148,5574
static inline int  Sfm_ObjIsPo( Sfm_Ntk_t * p, int i )                  { return i + p->nPos >= p->nObjs;                   }Sfm_ObjIsPo149,5700
static inline int  Sfm_ObjIsNode( Sfm_Ntk_t * p, int i )                { return i >= p->nPis && i + p->nPos < p->nObjs;    }Sfm_ObjIsNode150,5826
static inline int  Sfm_ObjIsFixed( Sfm_Ntk_t * p, int i )               { return Vec_StrEntry(p->vFixed, i);                }Sfm_ObjIsFixed151,5952
static inline int  Sfm_ObjAddsLevelArray( Vec_Str_t * p, int i )        { return p == NULL || Vec_StrEntry(p, i) == 0;      }Sfm_ObjAddsLevelArray152,6078
static inline int  Sfm_ObjAddsLevel( Sfm_Ntk_t * p, int i )             { return Sfm_ObjAddsLevelArray(p->vEmpty, i);       }Sfm_ObjAddsLevel153,6204
static inline Vec_Int_t * Sfm_ObjFiArray( Sfm_Ntk_t * p, int i )        { return Vec_WecEntry(&p->vFanins, i);              }Sfm_ObjFiArray155,6331
static inline Vec_Int_t * Sfm_ObjFoArray( Sfm_Ntk_t * p, int i )        { return Vec_WecEntry(&p->vFanouts, i);             }Sfm_ObjFoArray156,6457
static inline int  Sfm_ObjFaninNum( Sfm_Ntk_t * p, int i )              { return Vec_IntSize(Sfm_ObjFiArray(p, i));         }Sfm_ObjFaninNum158,6584
static inline int  Sfm_ObjFanoutNum( Sfm_Ntk_t * p, int i )             { return Vec_IntSize(Sfm_ObjFoArray(p, i));         }Sfm_ObjFanoutNum159,6710
static inline int  Sfm_ObjRefIncrement( Sfm_Ntk_t * p, int iObj )       { return ++Sfm_ObjFoArray(p, iObj)->nSize;          } Sfm_ObjRefIncrement161,6837
static inline int  Sfm_ObjRefDecrement( Sfm_Ntk_t * p, int iObj )       { return --Sfm_ObjFoArray(p, iObj)->nSize;          } Sfm_ObjRefDecrement162,6964
static inline int  Sfm_ObjFanin( Sfm_Ntk_t * p, int i, int k )          { return Vec_IntEntry(Sfm_ObjFiArray(p, i), k);     }Sfm_ObjFanin164,7092
static inline int  Sfm_ObjFanout( Sfm_Ntk_t * p, int i, int k )         { return Vec_IntEntry(Sfm_ObjFoArray(p, i), k);     }Sfm_ObjFanout165,7218
static inline int  Sfm_ObjSatVar( Sfm_Ntk_t * p, int iObj )             { assert(Vec_IntEntry(&p->vId2Var, iObj) > 0); return Vec_IntEntry(&p->vId2Var, iObj);  }Sfm_ObjSatVar167,7345
static inline void Sfm_ObjSetSatVar( Sfm_Ntk_t * p, int iObj, int Num ) { assert(Vec_IntEntry(&p->vId2Var, iObj) == -1); Vec_IntWriteEntry(&p->vId2Var, iObj, Num);  Vec_IntWriteEntry(&p->vVar2Id, Num, iObj);  }Sfm_ObjSetSatVar168,7507
static inline void Sfm_ObjCleanSatVar( Sfm_Ntk_t * p, int Num )         { int iObj = Vec_IntEntry(&p->vVar2Id, Num); assert(Vec_IntEntry(&p->vId2Var, iObj) > 0); Vec_IntWriteEntry(&p->vId2Var, iObj, -1);  Vec_IntWriteEntry(&p->vVar2Id, Num, -1); }Sfm_ObjCleanSatVar169,7718
static inline void Sfm_NtkCleanVars( Sfm_Ntk_t * p )                    { int i; for ( i = 1; i < p->nSatVars; i++ )  if ( Vec_IntEntry(&p->vVar2Id, i) != -1 ) Sfm_ObjCleanSatVar( p, i ); }Sfm_NtkCleanVars170,7966
static inline int  Sfm_ObjLevel( Sfm_Ntk_t * p, int iObj )              { return Vec_IntEntry( &p->vLevels, iObj );                         }Sfm_ObjLevel172,8157
static inline void Sfm_ObjSetLevel( Sfm_Ntk_t * p, int iObj, int Lev )  { Vec_IntWriteEntry( &p->vLevels, iObj, Lev );                      }Sfm_ObjSetLevel173,8299
static inline int  Sfm_ObjLevelR( Sfm_Ntk_t * p, int iObj )             { return Vec_IntEntry( &p->vLevelsR, iObj );                        }Sfm_ObjLevelR175,8442
static inline void Sfm_ObjSetLevelR( Sfm_Ntk_t * p, int iObj, int Lev ) { Vec_IntWriteEntry( &p->vLevelsR, iObj, Lev );                     }Sfm_ObjSetLevelR176,8584
static inline int  Sfm_ObjUpdateFaninCount( Sfm_Ntk_t * p, int iObj )   { return Vec_IntAddToEntry(&p->vCounts, iObj, -1);                  }Sfm_ObjUpdateFaninCount178,8727
static inline void Sfm_ObjResetFaninCount( Sfm_Ntk_t * p, int iObj )    { Vec_IntWriteEntry(&p->vCounts, iObj, Sfm_ObjFaninNum(p, iObj)-1); }Sfm_ObjResetFaninCount179,8869
#define Sfm_NtkForEachPi(Sfm_NtkForEachPi187,9307
#define Sfm_NtkForEachPo(Sfm_NtkForEachPo188,9388
#define Sfm_NtkForEachNode(Sfm_NtkForEachNode189,9487
#define Sfm_NtkForEachNodeReverse(Sfm_NtkForEachNodeReverse190,9585
#define Sfm_ObjForEachFanin(Sfm_ObjForEachFanin191,9688
#define Sfm_ObjForEachFanout(Sfm_ObjForEachFanout192,9829

src/opt/sfm/sfmArea.c,1249
Vec_Int_t * Abc_NtkPrecomputeCellPairs( Mio_Cell2_t * pCells, int nCells )Abc_NtkPrecomputeCellPairs51,1449
Vec_Int_t * Abc_NtkPrecomputeFirsts( Mio_Cell2_t * pCells, int nCells )Abc_NtkPrecomputeFirsts123,4295
int Abc_NtkPrecomputePrint( Mio_Cell2_t * pCells, int nCells, Vec_Int_t * vInfo )Abc_NtkPrecomputePrint135,4637
void Abc_NtkPrecomputeCellPairsTest()Abc_NtkPrecomputeCellPairsTest163,5671
int Abc_NodeCheckFanoutHasFanin( Abc_Obj_t * pNode, Abc_Obj_t * pFanin )Abc_NodeCheckFanoutHasFanin178,6264
int Abc_ObjHasDupFanins( Abc_Obj_t * pObj )Abc_ObjHasDupFanins199,6761
int Abc_ObjHasDupFanouts( Abc_Obj_t * pObj )Abc_ObjHasDupFanouts209,7051
int Abc_ObjChangeEval( Abc_Obj_t * pObj, Vec_Int_t * vInfo, Vec_Int_t * vFirst, int InvArea, int * pfUseInv )Abc_ObjChangeEval219,7344
void Abc_ObjChangeUpdate( Abc_Obj_t * pObj, int iFanin, Mio_Cell2_t * pCells, int * pNodeInfo, Vec_Int_t * vTemp )Abc_ObjChangeUpdate267,8965
void Abc_ObjChangePerform( Abc_Obj_t * pObj, Vec_Int_t * vInfo, Vec_Int_t * vFirst, int fUseInv, Vec_Int_t * vTemp, Vec_Ptr_t * vFanout, Vec_Ptr_t * vFanout2, Mio_Cell2_t * pCells )Abc_ObjChangePerform281,9732
void Abc_NtkChangePerform( Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkChangePerform333,11847

src/opt/sfm/sfmLib.c,4765
struct Sfm_Fun_t_Sfm_Fun_t_38,1026
    int             Next;          // next function in the listNext40,1046
    int             Area;          // area of this functionArea41,1110
    char            pFansT[SFM_SUPP_MAX+1];     // top gate ID, followed by fanin permpFansT42,1170
    char            pFansB[SFM_SUPP_MAX+1];     // bottom gate ID, followed by fanin permpFansB43,1257
struct Sfm_Lib_t_Sfm_Lib_t_45,1350
    int             nVars;         // variable countnVars47,1370
    int             nWords;        // truth table wordsnWords48,1423
    int             fVerbose;      // verbose statisticsfVerbose49,1479
    Mio_Cell2_t *   pCells;        // library gatespCells50,1536
    int             nCells;        // library gate countnCells51,1588
    int             fDelay;        // uses delay profilefDelay52,1645
    int             nObjs;         // object countnObjs53,1702
    int             nObjsAlloc;    // object countnObjsAlloc54,1753
    Sfm_Fun_t *     pObjs;         // objects  pObjs55,1804
    Vec_Mem_t *     vTtMem;        // truth tablesvTtMem56,1852
    Vec_Int_t       vLists;        // lists of funcs for each truth tablevLists57,1903
    Vec_Int_t       vCounts;       // counters of functions for each truth tablevCounts58,1977
    Vec_Int_t       vHits;         // the number of times this function was usedvHits59,2058
    Vec_Int_t       vProfs;        // area/delay profilesvProfs60,2139
    Vec_Int_t       vStore;        // storage for area/delay profilesvStore61,2197
    Vec_Int_t       vTemp;         // temporary storage for candidatesvTemp62,2267
    int             nObjSkipped;nObjSkipped63,2338
    int             nObjRemoved;nObjRemoved64,2371
static inline Sfm_Fun_t * Sfm_LibFun( Sfm_Lib_t * p, int i )              { return i == -1 ? NULL : p->pObjs + i; }Sfm_LibFun67,2408
static inline int         Sfm_LibFunId( Sfm_Lib_t * p, Sfm_Fun_t * pFun ) { return pFun - p->pObjs;               }Sfm_LibFunId68,2524
#define Sfm_LibForEachSuper(Sfm_LibForEachSuper70,2641
static word s_Truth8[8][4] = {s_Truth874,2795
void Sfm_DecCreateCnf( Vec_Int_t * vGateSizes, Vec_Wrd_t * vGateFuncs, Vec_Wec_t * vGateCnfs )Sfm_DecCreateCnf100,4315
void Sfm_LibPreprocess( Mio_Library_t * pLib, Vec_Int_t * vGateSizes, Vec_Wrd_t * vGateFuncs, Vec_Wec_t * vGateCnfs, Vec_Ptr_t * vGateHands )Sfm_LibPreprocess131,5285
int Sfm_LibFindComplInputGate( Vec_Wrd_t * vFuncs, int iGate, int nFanins, int iFanin, int * piFaninNew )Sfm_LibFindComplInputGate161,6232
Sfm_Lib_t * Sfm_LibStart( int nVars, int fDelay, int fVerbose )Sfm_LibStart204,7574
void Sfm_LibStop( Sfm_Lib_t * p )Sfm_LibStop226,8385
word Sfm_LibTruth6Two( Mio_Cell2_t * pCellBot, Mio_Cell2_t * pCellTop, int InTop )Sfm_LibTruth6Two252,8985
void Sfm_LibTruth8Two( Mio_Cell2_t * pCellBot, Mio_Cell2_t * pCellTop, int InTop, word * pRes )Sfm_LibTruth8Two266,9610
void Sfm_LibCellProfile( Mio_Cell2_t * pCellBot, Mio_Cell2_t * pCellTop, int InTop, int nFanins, int * Perm, int * pProf )Sfm_LibCellProfile304,11092
static inline int Sfm_LibNewIsContained( Sfm_Fun_t * pObj, int * pProf, int Area, int * pProfNew, int nFanins )Sfm_LibNewIsContained315,11558
static inline int Sfm_LibNewContains( Sfm_Fun_t * pObj, int * pProf, int Area, int * pProfNew, int nFanins )Sfm_LibNewContains325,11842
void Sfm_LibPrepareAdd( Sfm_Lib_t * p, word * pTruth, int * Perm, int nFanins, Mio_Cell2_t * pCellBot, Mio_Cell2_t * pCellTop, int InTop )Sfm_LibPrepareAdd335,12123
Sfm_Lib_t * Sfm_LibPrepare( int nVars, int fTwo, int fDelay, int fVerbose, int fLibVerbose )Sfm_LibPrepare438,15859
void Sfm_LibPrintGate( Mio_Cell2_t * pCell, char * pFanins, Mio_Cell2_t * pCell2, char * pFanins2 )Sfm_LibPrintGate537,19844
void Sfm_LibPrintObj( Sfm_Lib_t * p, Sfm_Fun_t * pObj )Sfm_LibPrintObj548,20226
void Sfm_LibPrint( Sfm_Lib_t * p )Sfm_LibPrint567,21042
void Sfm_LibTest()Sfm_LibTest587,21680
int Sfm_LibFindAreaMatch( Sfm_Lib_t * p, word * pTruth, int nFanins, int * piObj )Sfm_LibFindAreaMatch613,22217
int Sfm_LibFindDelayMatches( Sfm_Lib_t * p, word * pTruth, int * pFanins, int nFanins, Vec_Ptr_t * vGates, Vec_Ptr_t * vFans )Sfm_LibFindDelayMatches625,22564
int Sfm_LibImplementSimple( Sfm_Lib_t * p, word * pTruth, int * pFanins, int nFanins, Vec_Int_t * vGates, Vec_Wec_t * vFanins )Sfm_LibImplementSimple679,24308
int Sfm_LibImplementGatesArea( Sfm_Lib_t * p, int * pFanins, int nFanins, int iObj, Vec_Int_t * vGates, Vec_Wec_t * vFanins )Sfm_LibImplementGatesArea704,25373
int Sfm_LibImplementGatesDelay( Sfm_Lib_t * p, int * pFanins, Mio_Gate_t * pGateB, Mio_Gate_t * pGateT, char * pFansB, char * pFansT, Vec_Int_t * vGates, Vec_Wec_t * vFanins )Sfm_LibImplementGatesDelay736,26705

src/opt/sfm/sfm.h,2808
#define ABC__opt_sfm__hABC__opt_sfm__h22,551
typedef struct Sfm_Ntk_t_ Sfm_Ntk_t;Sfm_Ntk_t41,1295
typedef struct Sfm_Par_t_ Sfm_Par_t;Sfm_Par_t42,1332
struct Sfm_Par_t_Sfm_Par_t_43,1369
    int             nTfoLevMax;    // the maximum fanout levelsnTfoLevMax45,1389
    int             nTfiLevMax;    // the maximum fanin levelsnTfiLevMax46,1453
    int             nFanoutMax;    // the maximum number of fanoutsnFanoutMax47,1516
    int             nDepthMax;     // the maximum depth to trynDepthMax48,1584
    int             nVarMax;       // the maximum variable countnVarMax49,1647
    int             nMffcMin;      // the minimum MFFC sizenMffcMin50,1712
    int             nMffcMax;      // the maximum MFFC sizenMffcMax51,1772
    int             nDecMax;       // the maximum number of decompositionsnDecMax52,1832
    int             nWinSizeMax;   // the maximum window sizenWinSizeMax53,1907
    int             nGrowthLevel;  // the maximum allowed growth in levelnGrowthLevel54,1969
    int             nBTLimit;      // the maximum number of conflicts in one SAT runnBTLimit55,2043
    int             nNodesMax;     // the maximum number of nodes to trynNodesMax56,2128
    int             iNodeOne;      // one particular node to tryiNodeOne57,2201
    int             nFirstFixed;   // the number of first nodes to be treated as fixednFirstFixed58,2266
    int             nTimeWin;      // the size of timing window in percentsnTimeWin59,2353
    int             DeltaCrit;     // delay delta in picosecondsDeltaCrit60,2429
    int             DelAreaRatio;  // delay/area tradeoff (how many ps we trade for a unit of area)DelAreaRatio61,2494
    int             fRrOnly;       // perform redundance removalfRrOnly62,2594
    int             fArea;         // performs optimization for areafArea63,2659
    int             fAreaRev;      // performs optimization for area in reverse orderfAreaRev64,2728
    int             fMoreEffort;   // performs high-affort minimizationfMoreEffort65,2814
    int             fUseAndOr;     // enable internal detection of AND/OR gatesfUseAndOr66,2886
    int             fZeroCost;     // enable zero-cost replacementfZeroCost67,2966
    int             fUseSim;       // enable simulationfUseSim68,3033
    int             fPrintDecs;    // enable printing decompositionsfPrintDecs69,3089
    int             fAllBoxes;     // enable preserving all boxesfAllBoxes70,3158
    int             fLibVerbose;   // enable library statsfLibVerbose71,3224
    int             fDelayVerbose; // enable delay statsfDelayVerbose72,3283
    int             fVerbose;      // enable basic statsfVerbose73,3340
    int             fVeryVerbose;  // enable detailed statsfVeryVerbose74,3397

src/opt/sfm/sfmTim.c,4241
struct Sfm_Tim_t_Sfm_Tim_t_30,793
    Mio_Library_t *   pLib;        // librarypLib33,829
    Scl_Con_t *       pExt;        // external timingpExt34,875
    Abc_Ntk_t *       pNtk;        // mapped networkpNtk35,929
    int               Delay;       // the largest delayDelay36,982
    int               DeltaCrit;   // critical delay deltaDeltaCrit37,1038
    Vec_Int_t         vTimArrs;    // arrivals (rise/fall)vTimArrs39,1116
    Vec_Int_t         vTimReqs;    // required (rise/fall)vTimReqs40,1175
    Vec_Wec_t         vLevels;     // levelsvLevels42,1260
    Vec_Int_t         vPath;       // critical pathvPath44,1326
    Vec_Wrd_t         vSortData;   // node priority ordervSortData45,1378
static inline int * Sfm_TimArrId( Sfm_Tim_t * p, int Id )                    { return Vec_IntEntryP( &p->vTimArrs,  Abc_Var2Lit(Id, 0) );               }Sfm_TimArrId48,1440
static inline int * Sfm_TimReqId( Sfm_Tim_t * p, int Id )                    { return Vec_IntEntryP( &p->vTimReqs,  Abc_Var2Lit(Id, 0) );               }Sfm_TimReqId49,1594
static inline int * Sfm_TimArr( Sfm_Tim_t * p, Abc_Obj_t * pNode )           { return Vec_IntEntryP( &p->vTimArrs,  Abc_Var2Lit(Abc_ObjId(pNode), 0) ); }Sfm_TimArr51,1749
static inline int * Sfm_TimReq( Sfm_Tim_t * p, Abc_Obj_t * pNode )           { return Vec_IntEntryP( &p->vTimReqs,  Abc_Var2Lit(Abc_ObjId(pNode), 0) ); }Sfm_TimReq52,1903
static inline int   Sfm_TimArrMaxId( Sfm_Tim_t * p, int Id )                 { int * a = Sfm_TimArrId(p, Id); return Abc_MaxInt(a[0], a[1]);            }Sfm_TimArrMaxId54,2058
static inline int   Sfm_TimArrMax( Sfm_Tim_t * p, Abc_Obj_t * pNode )        { int * a = Sfm_TimArr(p, pNode); return Abc_MaxInt(a[0], a[1]);           }Sfm_TimArrMax56,2213
static inline void  Sfm_TimSetReq( Sfm_Tim_t * p, Abc_Obj_t * pNode, int t ) { int * r = Sfm_TimReq(p, pNode); r[0] = r[1] = t;                         }Sfm_TimSetReq57,2367
static inline int   Sfm_TimSlack( Sfm_Tim_t * p, Abc_Obj_t * pNode )         { int * r = Sfm_TimReq(p, pNode), * a = Sfm_TimArr(p, pNode); return Abc_MinInt(r[0]-a[0], r[1]-a[1]); }Sfm_TimSlack58,2521
static inline void Sfm_TimEdgeArrival( Sfm_Tim_t * p, Mio_Pin_t * pPin, int * pTimeIn, int * pTimeOut )Sfm_TimEdgeArrival75,3158
static inline void Sfm_TimGateArrival( Sfm_Tim_t * p, Mio_Gate_t * pGate, int ** pTimesIn, int * pTimeOut )Sfm_TimGateArrival91,3938
static inline void Sfm_TimNodeArrival( Sfm_Tim_t * p, Abc_Obj_t * pNode )Sfm_TimNodeArrival99,4267
static inline void Sfm_TimEdgeRequired( Sfm_Tim_t * p, Mio_Pin_t * pPin, int * pTimeIn, int * pTimeOut )Sfm_TimEdgeRequired109,4638
static inline void Sfm_TimGateRequired( Sfm_Tim_t * p, Mio_Gate_t * pGate, int ** pTimesIn, int * pTimeOut )Sfm_TimGateRequired125,5415
void Sfm_TimNodeRequired( Sfm_Tim_t * p, Abc_Obj_t * pNode )Sfm_TimNodeRequired132,5711
void Sfm_TimCriticalPath_int( Sfm_Tim_t * p, Abc_Obj_t * pObj, Vec_Int_t * vPath, int SlackMax )Sfm_TimCriticalPath_int154,6305
int Sfm_TimCriticalPath( Sfm_Tim_t * p, int Window )Sfm_TimCriticalPath172,6949
int Sfm_TimTrace( Sfm_Tim_t * p )Sfm_TimTrace201,7763
Sfm_Tim_t * Sfm_TimStart( Mio_Library_t * pLib, Scl_Con_t * pExt, Abc_Ntk_t * pNtk, int DeltaCrit )Sfm_TimStart229,8660
void Sfm_TimStop( Sfm_Tim_t * p )Sfm_TimStop242,9140
int Sfm_TimReadNtkDelay( Sfm_Tim_t * p )Sfm_TimReadNtkDelay251,9364
int Sfm_TimReadObjDelay( Sfm_Tim_t * p, int iObj )Sfm_TimReadObjDelay255,9430
void Sfm_TimTest( Abc_Ntk_t * pNtk )Sfm_TimTest271,9757
static inline void Sfm_TimUpdateClean( Sfm_Tim_t * p )Sfm_TimUpdateClean290,10323
void Sfm_TimUpdateTiming( Sfm_Tim_t * p, Vec_Int_t * vTimeNodes )Sfm_TimUpdateTiming317,10919
int Sfm_TimSortArrayByArrival( Sfm_Tim_t * p, Vec_Int_t * vNodes, int iPivot )Sfm_TimSortArrayByArrival336,11566
int Sfm_TimPriorityNodes( Sfm_Tim_t * p, Vec_Int_t * vCands, int Window )Sfm_TimPriorityNodes374,12802
int Sfm_TimNodeIsNonCritical( Sfm_Tim_t * p, Abc_Obj_t * pPivot, Abc_Obj_t * pNode )Sfm_TimNodeIsNonCritical412,14035
int Sfm_TimEvalRemapping( Sfm_Tim_t * p, Vec_Int_t * vFanins, Vec_Int_t * vMap, Mio_Gate_t * pGate1, char * pFans1, Mio_Gate_t * pGate2, char * pFans2 )Sfm_TimEvalRemapping428,14438

src/opt/sfm/sfmSat.c,283
static word s_Truths6[6] = {s_Truths630,799
int Sfm_NtkWindowToSolver( Sfm_Ntk_t * p )Sfm_NtkWindowToSolver54,1531
word Sfm_ComputeInterpolant( Sfm_Ntk_t * p )Sfm_ComputeInterpolant162,6020
void Sfm_ComputeInterpolantCheck( Sfm_Ntk_t * p )Sfm_ComputeInterpolantCheck240,9068

src/opt/sfm/sfmNtk.c,1843
void Sfm_CheckConsistency( Vec_Wec_t * vFanins, int nPis, int nPos, Vec_Str_t * vFixed )Sfm_CheckConsistency45,1246
void Sfm_CreateFanout( Vec_Wec_t * vFanins, Vec_Wec_t * vFanouts )Sfm_CreateFanout76,2243
static inline int Sfm_ObjLevelNew( Vec_Int_t * vArray, Vec_Int_t * vLevels, int fAddLevel )Sfm_ObjLevelNew111,3274
void Sfm_CreateLevel( Vec_Wec_t * vFanins, Vec_Int_t * vLevels, Vec_Str_t * vEmpty )Sfm_CreateLevel118,3540
static inline int Sfm_ObjLevelNewR( Vec_Int_t * vArray, Vec_Int_t * vLevelsR, int fAddLevel )Sfm_ObjLevelNewR139,4148
void Sfm_CreateLevelR( Vec_Wec_t * vFanouts, Vec_Int_t * vLevelsR, Vec_Str_t * vEmpty )Sfm_CreateLevelR146,4424
Sfm_Ntk_t * Sfm_NtkConstruct( Vec_Wec_t * vFanins, int nPis, int nPos, Vec_Str_t * vFixed, Vec_Str_t * vEmpty, Vec_Wrd_t * vTruths, Vec_Int_t * vStarts, Vec_Wrd_t * vTruths2 )Sfm_NtkConstruct167,5049
void Sfm_NtkPrepare( Sfm_Ntk_t * p )Sfm_NtkPrepare197,6208
void Sfm_NtkFree( Sfm_Ntk_t * p )Sfm_NtkFree215,6919
void Sfm_NtkRemoveFanin( Sfm_Ntk_t * p, int iNode, int iFanin )Sfm_NtkRemoveFanin263,8278
void Sfm_NtkAddFanin( Sfm_Ntk_t * p, int iNode, int iFanin )Sfm_NtkAddFanin273,8622
void Sfm_NtkDeleteObj_rec( Sfm_Ntk_t * p, int iNode )Sfm_NtkDeleteObj_rec284,9047
void Sfm_NtkUpdateLevel_rec( Sfm_Ntk_t * p, int iNode )Sfm_NtkUpdateLevel_rec298,9570
void Sfm_NtkUpdateLevelR_rec( Sfm_Ntk_t * p, int iNode )Sfm_NtkUpdateLevelR_rec308,9955
void Sfm_NtkUpdate( Sfm_Ntk_t * p, int iNode, int f, int iFaninNew, word uTruth )Sfm_NtkUpdate318,10342
Vec_Int_t *  Sfm_NodeReadFanins( Sfm_Ntk_t * p, int i )Sfm_NodeReadFanins363,11839
word * Sfm_NodeReadTruth( Sfm_Ntk_t * p, int i )Sfm_NodeReadTruth367,11942
int Sfm_NodeReadFixed( Sfm_Ntk_t * p, int i )Sfm_NodeReadFixed371,12127
int Sfm_NodeReadUsed( Sfm_Ntk_t * p, int i )Sfm_NodeReadUsed375,12223

src/opt/sfm/sfmCnf.c,369
void Sfm_PrintCnf( Vec_Str_t * vCnf )Sfm_PrintCnf46,1274
int Sfm_TruthToCnf( word Truth, word * pTruth, int nVars, Vec_Int_t * vCover, Vec_Str_t * vCnf )Sfm_TruthToCnf71,1815
Vec_Wec_t * Sfm_CreateCnf( Sfm_Ntk_t * p )Sfm_CreateCnf161,4518
void Sfm_TranslateCnf( Vec_Wec_t * vRes, Vec_Str_t * vCnf, Vec_Int_t * vFaninMap, int iPivotVar )Sfm_TranslateCnf194,5598

src/opt/sfm/sfmCore.c,445
void Sfm_ParSetDefault( Sfm_Par_t * pPars )Sfm_ParSetDefault45,1261
void Sfm_NtkPrintStats( Sfm_Ntk_t * p )Sfm_NtkPrintStats73,2373
int Sfm_NodeResubSolve( Sfm_Ntk_t * p, int iNode, int f, int fRemoveOnly )Sfm_NodeResubSolve109,4170
int Sfm_NodeResub( Sfm_Ntk_t * p, int iNode )Sfm_NodeResub217,8055
void Sfm_NtkPrint( Sfm_Ntk_t * p )Sfm_NtkPrint266,9514
int Sfm_NtkPerform( Sfm_Ntk_t * p, Sfm_Par_t * pPars )Sfm_NtkPerform293,10246

src/opt/nwk/nwkMan.c,618
Nwk_Man_t * Nwk_ManAlloc()Nwk_ManAlloc45,1247
void Nwk_ManFree( Nwk_Man_t * p )Nwk_ManFree71,1883
void Nwk_ManPrintLutSizes( Nwk_Man_t * p, If_LibLut_t * pLutLib )Nwk_ManPrintLutSizes97,2713
int Nwk_ManCompareAndSaveBest( Nwk_Man_t * pNtk, void * pNtl )Nwk_ManCompareAndSaveBest121,3550
char * Nwk_FileNameGeneric( char * FileName )Nwk_FileNameGeneric178,5686
float Nwl_ManComputeTotalSwitching( Nwk_Man_t * pNtk )Nwl_ManComputeTotalSwitching198,6147
void Nwk_ManPrintStats( Nwk_Man_t * pNtk, If_LibLut_t * pLutLib, int fSaveBest, int fDumpResult, int fPower, Ntl_Man_t * pNtl )Nwk_ManPrintStats234,7213

src/opt/nwk/nwkSpeedup.c,550
int Aig_ManSpeedupNode_rec( Aig_Man_t * pAig, Aig_Obj_t * pNode, Vec_Ptr_t * vNodes )Aig_ManSpeedupNode_rec45,1294
void Aig_ManSpeedupNode( Nwk_Man_t * pNtk, Aig_Man_t * pAig, Nwk_Obj_t * pNode, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vTimes )Aig_ManSpeedupNode72,2075
unsigned Nwk_ManDelayTraceTCEdges( Nwk_Man_t * pNtk, Nwk_Obj_t * pNode, float tDelta, int fUseLutLib )Nwk_ManDelayTraceTCEdges158,5175
Aig_Man_t * Nwk_ManSpeedup( Nwk_Man_t * pNtk, int fUseLutLib, int Percentage, int Degree, int fVerbose, int fVeryVerbose )Nwk_ManSpeedup203,6656

src/opt/nwk/nwkFlow_depth.c,3065
int DepthFwd, DepthBwd, DepthFwdMax, DepthBwdMax;DepthFwd34,893
int DepthFwd, DepthBwd, DepthFwdMax, DepthBwdMax;DepthBwd34,893
int DepthFwd, DepthBwd, DepthFwdMax, DepthBwdMax;DepthFwdMax34,893
int DepthFwd, DepthBwd, DepthFwdMax, DepthBwdMax;DepthBwdMax34,893
static inline Nwk_Obj_t * Nwk_ObjPred( Nwk_Obj_t * pObj )                   { return pObj->pCopy;        }Nwk_ObjPred41,1180
static inline int         Nwk_ObjSetPred( Nwk_Obj_t * pObj, Nwk_Obj_t * p ) { pObj->pCopy = p; return 1; }Nwk_ObjSetPred42,1287
static inline int         Nwk_ObjIsSink( Nwk_Obj_t * pObj )                 { return pObj->MarkA;        }Nwk_ObjIsSink44,1402
static inline void        Nwk_ObjSetSink( Nwk_Obj_t * pObj )                { pObj->MarkA = 1;           }Nwk_ObjSetSink45,1509
static inline int         Nwk_ObjHasFlow( Nwk_Obj_t * pObj )                { return pObj->MarkB;        }Nwk_ObjHasFlow47,1624
static inline void        Nwk_ObjSetFlow( Nwk_Obj_t * pObj )                { pObj->MarkB = 1;           }Nwk_ObjSetFlow48,1731
static inline void        Nwk_ObjClearFlow( Nwk_Obj_t * pObj )              { pObj->MarkB = 0;           }Nwk_ObjClearFlow49,1838
static inline int  Nwk_ObjVisitedBotOnly( Nwk_Obj_t * pObj )   Nwk_ObjVisitedBotOnly56,2216
static inline int  Nwk_ObjVisitedBot( Nwk_Obj_t * pObj )     Nwk_ObjVisitedBot60,2337
static inline int  Nwk_ObjVisitedTop( Nwk_Obj_t * pObj )     Nwk_ObjVisitedTop64,2498
static inline void Nwk_ObjSetVisitedBot( Nwk_Obj_t * pObj )  Nwk_ObjSetVisitedBot68,2659
static inline void Nwk_ObjSetVisitedTop( Nwk_Obj_t * pObj )  Nwk_ObjSetVisitedTop77,2957
static inline Nwk_ManIncrementTravIdFlow( Nwk_Man_t * pMan )Nwk_ManIncrementTravIdFlow86,3255
void Nwk_ManMarkTfiCone_rec( Nwk_Obj_t * pObj )Nwk_ManMarkTfiCone_rec114,4217
void Nwk_ManMarkTfoCone_rec( Nwk_Obj_t * pObj )Nwk_ManMarkTfoCone_rec136,4703
int Nwk_ManPushForwardFast_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushForwardFast_rec158,5194
int Nwk_ManPushBackwardFast_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushBackwardFast_rec192,6048
int Nwk_ManPushForwardBot_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushForwardBot_rec226,6931
int Nwk_ManPushForwardTop_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushForwardTop_rec274,8203
int Nwk_ManPushBackwardBot_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushBackwardBot_rec317,9362
int Nwk_ManPushBackwardTop_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushBackwardTop_rec348,10226
int Nwk_ManVerifyCut_rec( Nwk_Obj_t * pObj )Nwk_ManVerifyCut_rec387,11395
int Nwk_ManRetimeVerifyCutForward( Nwk_Man_t * pMan, Vec_Ptr_t * vNodes )Nwk_ManRetimeVerifyCutForward415,12047
int Nwk_ManRetimeVerifyCutBackward( Nwk_Man_t * pMan, Vec_Ptr_t * vNodes )Nwk_ManRetimeVerifyCutBackward447,12930
Vec_Ptr_t * Nwk_ManRetimeCutForward( Nwk_Man_t * pMan, int nLatches, int fVerbose )Nwk_ManRetimeCutForward463,13300
Vec_Ptr_t * Nwk_ManRetimeCutBackward( Nwk_Man_t * pMan, int nLatches, int fVerbose )Nwk_ManRetimeCutBackward548,15947

src/opt/nwk/nwkFanio.c,1037
void Nwk_ObjCollectFanins( Nwk_Obj_t * pNode, Vec_Ptr_t * vNodes )Nwk_ObjCollectFanins45,1271
void Nwk_ObjCollectFanouts( Nwk_Obj_t * pNode, Vec_Ptr_t * vNodes )Nwk_ObjCollectFanouts65,1750
int Nwk_ObjFindFanin( Nwk_Obj_t * pObj, Nwk_Obj_t * pFanin )Nwk_ObjFindFanin85,2249
int Nwk_ObjFindFanout( Nwk_Obj_t * pObj, Nwk_Obj_t * pFanout )Nwk_ObjFindFanout106,2740
static inline int Nwk_ObjReallocIsNeeded( Nwk_Obj_t * pObj )Nwk_ObjReallocIsNeeded127,3234
static Nwk_Obj_t * Nwk_ManReallocNode( Nwk_Obj_t * pObj )Nwk_ManReallocNode143,3624
void Nwk_ObjAddFanin( Nwk_Obj_t * pObj, Nwk_Obj_t * pFanin )Nwk_ObjAddFanin165,4342
void Nwk_ObjDeleteFanin( Nwk_Obj_t * pObj, Nwk_Obj_t * pFanin )Nwk_ObjDeleteFanin192,5258
void Nwk_ObjPatchFanin( Nwk_Obj_t * pObj, Nwk_Obj_t * pFaninOld, Nwk_Obj_t * pFaninNew )Nwk_ObjPatchFanin231,6717
void Nwk_ObjTransferFanout( Nwk_Obj_t * pNodeFrom, Nwk_Obj_t * pNodeTo )Nwk_ObjTransferFanout272,8128
void Nwk_ObjReplace( Nwk_Obj_t * pNodeOld, Nwk_Obj_t * pNodeNew )Nwk_ObjReplace302,9181

src/opt/nwk/nwk_.c,0

src/opt/nwk/nwkDfs.c,1527
int Nwk_ManVerifyTopoOrder( Nwk_Man_t * pNtk )Nwk_ManVerifyTopoOrder45,1269
int Nwk_ManLevelBackup( Nwk_Man_t * pNtk )Nwk_ManLevelBackup102,3146
void Nwk_ManLevel_rec( Nwk_Obj_t * pObj )Nwk_ManLevel_rec160,4966
int Nwk_ManLevel( Nwk_Man_t * pNtk )Nwk_ManLevel215,6692
int Nwk_ManLevelMax( Nwk_Man_t * pNtk )Nwk_ManLevelMax248,7601
Vec_Vec_t * Nwk_ManLevelize( Nwk_Man_t * pNtk )Nwk_ManLevelize269,8139
void Nwk_ManDfs_rec( Nwk_Obj_t * pObj, Vec_Ptr_t * vNodes )Nwk_ManDfs_rec298,8822
Vec_Ptr_t * Nwk_ManDfs( Nwk_Man_t * pNtk )Nwk_ManDfs321,9427
void Nwk_ManDfsNodes_rec( Nwk_Obj_t * pObj, Vec_Ptr_t * vNodes )Nwk_ManDfsNodes_rec352,10153
Vec_Ptr_t * Nwk_ManDfsNodes( Nwk_Man_t * pNtk, Nwk_Obj_t ** ppNodes, int nNodes )Nwk_ManDfsNodes378,10847
void Nwk_ManDfsReverse_rec( Nwk_Obj_t * pObj, Vec_Ptr_t * vNodes )Nwk_ManDfsReverse_rec406,11647
Vec_Ptr_t * Nwk_ManDfsReverse( Nwk_Man_t * pNtk )Nwk_ManDfsReverse451,13007
void Nwk_ManSupportNodes_rec( Nwk_Obj_t * pNode, Vec_Ptr_t * vNodes )Nwk_ManSupportNodes_rec478,13741
Vec_Ptr_t * Nwk_ManSupportNodes( Nwk_Man_t * pNtk, Nwk_Obj_t ** ppNodes, int nNodes )Nwk_ManSupportNodes510,14618
void Nwk_ManSupportSum( Nwk_Man_t * pNtk )Nwk_ManSupportSum538,15454
int Nwk_ObjDeref_rec( Nwk_Obj_t * pNode )Nwk_ObjDeref_rec564,16072
int Nwk_ObjRef_rec( Nwk_Obj_t * pNode )Nwk_ObjRef_rec590,16682
void Nwk_ObjMffcLabel_rec( Nwk_Obj_t * pNode, int fTopmost )Nwk_ObjMffcLabel_rec615,17282
int Nwk_ObjMffcLabel( Nwk_Obj_t * pNode )Nwk_ObjMffcLabel644,18141

src/opt/nwk/nwkMap.c,656
void Nwk_ManSetIfParsDefault( If_Par_t * pPars )Nwk_ManSetIfParsDefault46,1298
If_Man_t * Nwk_ManToIf( Aig_Man_t * p, If_Par_t * pPars, Vec_Ptr_t * vAigToIf )Nwk_ManToIf103,2848
Hop_Obj_t * Nwk_NodeIfToHop2_rec( Hop_Man_t * pHopMan, If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited )Nwk_NodeIfToHop2_rec188,6198
Hop_Obj_t * Nwk_NodeIfToHop( Hop_Man_t * pHopMan, If_Man_t * pIfMan, If_Obj_t * pIfObj )Nwk_NodeIfToHop235,7821
Nwk_Man_t * Nwk_ManFromIf( If_Man_t * pIfMan, Aig_Man_t * p, Vec_Ptr_t * vAigToIf )Nwk_ManFromIf275,9071
Nwk_Man_t * Nwk_MappingIf( Aig_Man_t * p, Tim_Man_t * pManTime, If_Par_t * pPars )Nwk_MappingIf360,12076

src/opt/nwk/nwkUtil.c,1587
void Nwk_ManIncrementTravId( Nwk_Man_t * pNtk )Nwk_ManIncrementTravId47,1323
int Nwk_ManGetFaninMax( Nwk_Man_t * pNtk )Nwk_ManGetFaninMax71,1862
int Nwk_ManGetTotalFanins( Nwk_Man_t * pNtk )Nwk_ManGetTotalFanins94,2407
int Nwk_ManPiNum( Nwk_Man_t * pNtk )Nwk_ManPiNum115,2875
int Nwk_ManPoNum( Nwk_Man_t * pNtk )Nwk_ManPoNum135,3329
int Nwk_ManGetAigNodeNum( Nwk_Man_t * pNtk )Nwk_ManGetAigNodeNum155,3782
int Nwk_NodeCompareLevelsIncrease( Nwk_Obj_t ** pp1, Nwk_Obj_t ** pp2 )Nwk_NodeCompareLevelsIncrease184,4540
int Nwk_NodeCompareLevelsDecrease( Nwk_Obj_t ** pp1, Nwk_Obj_t ** pp2 )Nwk_NodeCompareLevelsDecrease205,5057
void Nwk_ObjPrint( Nwk_Obj_t * pObj )Nwk_ObjPrint226,5526
void Nwk_ManDumpBlif( Nwk_Man_t * pNtk, char * pFileName, Vec_Ptr_t * vPiNames, Vec_Ptr_t * vPoNames )Nwk_ManDumpBlif257,6316
void Nwk_ManPrintFanioNew( Nwk_Man_t * pNtk )Nwk_ManPrintFanioNew357,9997
void Nwk_ManCleanMarks( Nwk_Man_t * pMan )Nwk_ManCleanMarks464,13954
int Nwk_ManMinimumBaseNode( Nwk_Obj_t * pObj, Vec_Int_t * vTruth, int fVerbose )Nwk_ManMinimumBaseNode483,14382
int Nwk_ManMinimumBaseInt( Nwk_Man_t * pNtk, int fVerbose )Nwk_ManMinimumBaseInt519,15741
void Nwk_ManMinimumBaseRec( Nwk_Man_t * pNtk, int fVerbose )Nwk_ManMinimumBaseRec544,16452
void Nwk_ManMinimumBase( Nwk_Man_t * pNtk, int fVerbose )Nwk_ManMinimumBase563,16939
void Nwk_ManRemoveDupFaninsNode( Nwk_Obj_t * pObj, int iFan0, int iFan1, Vec_Int_t * vTruth )Nwk_ManRemoveDupFaninsNode587,17628
void Nwk_ManRemoveDupFanins( Nwk_Man_t * pNtk, int fVerbose )Nwk_ManRemoveDupFanins608,18335

src/opt/nwk/nwkCheck.c,55
int Nwk_ManCheck( Nwk_Man_t * p )Nwk_ManCheck45,1287

src/opt/nwk/nwkMerge.h,3289
#define __NWK_MERGE_H____NWK_MERGE_H__22,540
#define NWK_MAX_LIST NWK_MAX_LIST38,1037
typedef struct Nwk_LMPars_t_  Nwk_LMPars_t;Nwk_LMPars_t45,1313
struct Nwk_LMPars_t_Nwk_LMPars_t_46,1357
    int    nMaxLutSize;    // the max LUT size for merging (N=5)nMaxLutSize48,1380
    int    nMaxSuppSize;   // the max total support size after merging (S=5)nMaxSuppSize49,1445
    int    nMaxDistance;   // the max number of nodes separating LUTsnMaxDistance50,1522
    int    nMaxLevelDiff;  // the max difference in levelsnMaxLevelDiff51,1592
    int    nMaxFanout;     // the max number of fanouts to traversenMaxFanout52,1651
    int    fUseDiffSupp;   // enables the use of nodes with different supportfUseDiffSupp53,1719
    int    fUseTfiTfo;     // enables the use of TFO/TFO nodes as candidatesfUseTfiTfo54,1797
    int    fVeryVerbose;   // enables additional verbose outputfVeryVerbose55,1874
    int    fVerbose;       // enables verbose outputfVerbose56,1938
typedef struct Nwk_Edg_t_  Nwk_Edg_t;Nwk_Edg_t60,2016
struct Nwk_Edg_t_Nwk_Edg_t_61,2054
    int             iNode1;      // the first nodeiNode163,2074
    int             iNode2;      // the second nodeiNode264,2125
    Nwk_Edg_t *     pNext;       // the next edgepNext65,2177
typedef struct Nwk_Vrt_t_  Nwk_Vrt_t;Nwk_Vrt_t69,2254
struct Nwk_Vrt_t_Nwk_Vrt_t_70,2292
    int             Id;          // the vertex numberId72,2312
    int             iPrev;       // the previous vertex in the listiPrev73,2366
    int             iNext;       // the next vertex in the listiNext74,2434
    int             nEdges;      // the number of edgesnEdges75,2498
    int             pEdges[0];   // the array of edgespEdges76,2554
typedef struct Nwk_Grf_t_  Nwk_Grf_t;Nwk_Grf_t80,2639
struct Nwk_Grf_t_Nwk_Grf_t_81,2677
    int             nObjs;       // the number of objectsnObjs84,2737
    int             nVertsMax;   // the upper bound on the number of verticesnVertsMax85,2795
    int             nEdgeHash;   // an approximate number of edgesnEdgeHash86,2873
    Nwk_Edg_t **    pEdgeHash;   // hash table for edgespEdgeHash87,2940
    Aig_MmFixed_t * pMemEdges;   // memory for edgespMemEdges88,2997
    int             nEdges;      // the number of edgesnEdges90,3078
    int             nVerts;      // the number of verticesnVerts91,3134
    Nwk_Vrt_t **    pVerts;      // the array of verticespVerts92,3193
    Aig_MmFlex_t *  pMemVerts;   // memory for verticespMemVerts93,3251
    int pLists1[NWK_MAX_LIST+1]; // lists of nodes with one edgepLists195,3332
    int pLists2[NWK_MAX_LIST+1]; // lists of nodes with more than one edgepLists296,3397
    Vec_Int_t *     vPairs;      // pairs matched in the graphvPairs98,3503
    int *           pMapLut2Id;  // LUT numbers into vertex IDspMapLut2Id100,3589
    int *           pMapId2Lut;  // vertex IDs into LUT numberspMapId2Lut101,3653
    int             nMemBytes1;  // memory usage in bytesnMemBytes1103,3737
    int             nMemBytes2;  // memory usage in bytesnMemBytes2104,3795
#define Nwk_GraphForEachEdge(Nwk_GraphForEachEdge111,4077
#define Nwk_ListForEachVertex(Nwk_ListForEachVertex115,4263
#define Nwk_VertexForEachAdjacent(Nwk_VertexForEachAdjacent119,4442

src/opt/nwk/nwkMerge.c,2606
Nwk_Grf_t * Nwk_ManGraphAlloc( int nVertsMax )Nwk_ManGraphAlloc46,1270
void Nwk_ManGraphFree( Nwk_Grf_t * p )Nwk_ManGraphFree70,1939
void Nwk_ManGraphReportMemoryUsage( Nwk_Grf_t * p )Nwk_ManGraphReportMemoryUsage93,2567
void Nwk_ManGraphHashEdge( Nwk_Grf_t * p, int iLut1, int iLut2 )Nwk_ManGraphHashEdge119,3328
static inline void Nwk_ManGraphListAdd( Nwk_Grf_t * p, int * pList, Nwk_Vrt_t * pVertex )Nwk_ManGraphListAdd157,4365
static inline void Nwk_ManGraphListDelete( Nwk_Grf_t * p, int * pList, Nwk_Vrt_t * pVertex )Nwk_ManGraphListDelete181,4944
static inline void Nwk_ManGraphListInsert( Nwk_Grf_t * p, Nwk_Vrt_t * pVertex )Nwk_ManGraphListInsert210,5783
static inline void Nwk_ManGraphListExtract( Nwk_Grf_t * p, Nwk_Vrt_t * pVertex )Nwk_ManGraphListExtract243,6740
void Nwk_ManGraphPrepare( Nwk_Grf_t * p )Nwk_ManGraphPrepare276,7706
void Nwk_ManGraphSortPairs( Nwk_Grf_t * p )Nwk_ManGraphSortPairs363,10589
void Nwk_ManGraphCheckLists( Nwk_Grf_t * p )Nwk_ManGraphCheckLists402,11679
static inline void Nwk_ManGraphVertexRemoveEdge( Nwk_Vrt_t * pThis, Nwk_Vrt_t * pNext )Nwk_ManGraphVertexRemoveEdge437,12731
void Nwk_ManGraphUpdate( Nwk_Grf_t * p, Nwk_Vrt_t * pVertex, Nwk_Vrt_t * pNext )Nwk_ManGraphUpdate460,13360
int Nwk_ManGraphListLength( Nwk_Grf_t * p, int List )Nwk_ManGraphListLength540,15990
Nwk_Vrt_t * Nwk_ManGraphListFindMinEdge( Nwk_Grf_t * p, Nwk_Vrt_t * pVert )Nwk_ManGraphListFindMinEdge567,16655
Nwk_Vrt_t * Nwk_ManGraphListFindMin( Nwk_Grf_t * p, int List )Nwk_ManGraphListFindMin590,17241
void Nwk_ManGraphSolve( Nwk_Grf_t * p )Nwk_ManGraphSolve621,18089
Nwk_Grf_t * Nwk_ManLutMergeReadGraph( char * pFileName )Nwk_ManLutMergeReadGraph674,19870
int Nwk_ManLutMergeGraphTest( char * pFileName )Nwk_ManLutMergeGraphTest703,20701
void Nwk_ManMarkFanins_rec( Nwk_Obj_t * pLut, int nLevMin )Nwk_ManMarkFanins_rec735,21548
void Nwk_ManMarkFanouts_rec( Nwk_Obj_t * pLut, int nLevMax, int nFanMax )Nwk_ManMarkFanouts_rec761,22226
void Nwk_ManCollectCircle( Vec_Ptr_t * vStart, Vec_Ptr_t * vNext, int nFanMax )Nwk_ManCollectCircle789,22984
void Nwk_ManCollectNonOverlapCands( Nwk_Obj_t * pLut, Vec_Ptr_t * vStart, Vec_Ptr_t * vNext, Vec_Ptr_t * vCands, Nwk_LMPars_t * pPars )Nwk_ManCollectNonOverlapCands830,24173
int Nwk_ManCountTotalFanins( Nwk_Obj_t * pLut, Nwk_Obj_t * pCand )Nwk_ManCountTotalFanins900,26526
void Nwk_ManCollectOverlapCands( Nwk_Obj_t * pLut, Vec_Ptr_t * vCands, Nwk_LMPars_t * pPars )Nwk_ManCollectOverlapCands920,27034
Vec_Int_t * Nwk_ManLutMerge( Nwk_Man_t * pNtk, void * pParsInit )Nwk_ManLutMerge970,28709

src/opt/nwk/nwkBidec.c,915
static inline int  Extra_TruthWordNum( int nVars )  { return nVars <= 5 ? 1 : (1 << (nVars - 5)); }Extra_TruthWordNum30,794
static inline void Extra_TruthNot( unsigned * pOut, unsigned * pIn, int nVars )Extra_TruthNot31,894
static inline void Extra_TruthOr( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Extra_TruthOr37,1073
static inline void Extra_TruthSharp( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Extra_TruthSharp43,1279
static inline Hop_Obj_t * Bdc_FunCopyHop( Bdc_Fun_t * pObj )  { return Hop_NotCond( (Hop_Obj_t *)Bdc_FuncCopy(Bdc_Regular(pObj)), Bdc_IsComplement(pObj) );  }Bdc_FunCopyHop50,1490
Hop_Obj_t * Nwk_NodeIfNodeResyn( Bdc_Man_t * p, Hop_Man_t * pHop, Hop_Obj_t * pRoot, int nVars, Vec_Int_t * vTruth, unsigned * puCare, float dProb )Nwk_NodeIfNodeResyn67,2147
void Nwk_ManBidecResyn( Nwk_Man_t * pNtk, int fVerbose )Nwk_ManBidecResyn129,4307

src/opt/nwk/nwkAig.c,584
Nwk_Man_t * Nwk_ManDeriveFromAig( Aig_Man_t * p )Nwk_ManDeriveFromAig45,1268
Vec_Ptr_t * Nwk_ManDeriveRetimingCut( Aig_Man_t * p, int fForward, int fVerbose )Nwk_ManDeriveRetimingCut85,2539
void Nwk_ManColleacReached_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes, Vec_Int_t * vLeaves )Nwk_ManColleacReached_rec124,3589
Nwk_Man_t * Nwk_ManCreateFromGia( Gia_Man_t * p, Vec_Int_t * vPPis, Vec_Int_t * vNodes, Vec_Int_t * vLeaves, Vec_Int_t ** pvMapInv )Nwk_ManCreateFromGia152,4401
void Nwk_ManDeriveMinCut( Gia_Man_t * p, int fVerbose )Nwk_ManDeriveMinCut218,7089

src/opt/nwk/nwkObj.c,575
Nwk_Obj_t * Nwk_ManCreateObj( Nwk_Man_t * p, int nFanins, int nFanouts )Nwk_ManCreateObj45,1250
Nwk_Obj_t * Nwk_ManCreateCi( Nwk_Man_t * p, int nFanouts )Nwk_ManCreateCi70,2040
Nwk_Obj_t * Nwk_ManCreateCo( Nwk_Man_t * p )Nwk_ManCreateCo92,2582
Nwk_Obj_t * Nwk_ManCreateLatch( Nwk_Man_t * p )Nwk_ManCreateLatch114,3094
Nwk_Obj_t * Nwk_ManCreateNode( Nwk_Man_t * p, int nFanins, int nFanouts )Nwk_ManCreateNode134,3538
void Nwk_ManDeleteNode( Nwk_Obj_t * pObj )Nwk_ManDeleteNode155,4022
void Nwk_ManDeleteNode_rec( Nwk_Obj_t * pObj )Nwk_ManDeleteNode_rec183,4823

src/opt/nwk/ntlnwk.h,177
#define __NTLNWK_abc_opt_nwk_h__NTLNWK_abc_opt_nwk_h22,549
typedef struct Ntl_Man_t_    Ntl_Man_t;Ntl_Man_t40,1271
typedef struct Nwk_Man_t_    Nwk_Man_t;Nwk_Man_t41,1311

src/opt/nwk/nwkTiming.c,1446
void Nwk_ManCleanTiming( Nwk_Man_t * pNtk )Nwk_ManCleanTiming45,1290
void Nwk_ManDelayTraceSortPins( Nwk_Obj_t * pNode, int * pPinPerm, float * pPinDelays )Nwk_ManDelayTraceSortPins67,1791
int Nwk_ManWhereIsPin( Nwk_Obj_t * pFanout, Nwk_Obj_t * pFanin, int * pPinPerm )Nwk_ManWhereIsPin111,3226
float Nwk_NodeComputeArrival( Nwk_Obj_t * pObj, int fUseSorting )Nwk_NodeComputeArrival131,3755
float Nwk_NodeComputeRequired( Nwk_Obj_t * pObj, int fUseSorting )Nwk_NodeComputeRequired191,5761
float Nwk_NodePropagateRequired( Nwk_Obj_t * pObj, int fUseSorting )Nwk_NodePropagateRequired264,8333
float Nwk_ManDelayTraceLut( Nwk_Man_t * pNtk )Nwk_ManDelayTraceLut326,10356
int Nwk_ManVerifyTiming(  Nwk_Man_t * pNtk )Nwk_ManVerifyTiming427,13508
void Nwk_ManDelayTracePrint( Nwk_Man_t * pNtk )Nwk_ManDelayTracePrint459,14677
void Nwk_NodeUpdateAddToQueue( Vec_Ptr_t * vQueue, Nwk_Obj_t * pObj, int iCurrent, int fArrival )Nwk_NodeUpdateAddToQueue517,16728
void Nwk_NodeUpdateArrival( Nwk_Obj_t * pObj )Nwk_NodeUpdateArrival562,18111
void Nwk_NodeUpdateRequired( Nwk_Obj_t * pObj )Nwk_NodeUpdateRequired641,21157
int Nwk_ObjLevelNew( Nwk_Obj_t * pObj )Nwk_ObjLevelNew725,24374
void Nwk_ManUpdateLevel( Nwk_Obj_t * pObj )Nwk_ManUpdateLevel766,25695
int Nwk_ManVerifyLevel( Nwk_Man_t * pNtk )Nwk_ManVerifyLevel832,27871
void Nwk_ManUpdate( Nwk_Obj_t * pObj, Nwk_Obj_t * pObjNew, Vec_Vec_t * vLevels )Nwk_ManUpdate860,28599

src/opt/nwk/nwkFlow.c,2812
static inline Nwk_Obj_t * Nwk_ObjPred( Nwk_Obj_t * pObj )                   { return (Nwk_Obj_t *)pObj->pCopy;        }Nwk_ObjPred39,1129
static inline int         Nwk_ObjSetPred( Nwk_Obj_t * pObj, Nwk_Obj_t * p ) { pObj->pCopy = p; return 1; }Nwk_ObjSetPred40,1249
static inline int         Nwk_ObjIsSink( Nwk_Obj_t * pObj )                 { return pObj->MarkA;        }Nwk_ObjIsSink42,1364
static inline void        Nwk_ObjSetSink( Nwk_Obj_t * pObj )                { pObj->MarkA = 1;           }Nwk_ObjSetSink43,1471
static inline int         Nwk_ObjHasFlow( Nwk_Obj_t * pObj )                { return pObj->MarkB;        }Nwk_ObjHasFlow45,1586
static inline void        Nwk_ObjSetFlow( Nwk_Obj_t * pObj )                { pObj->MarkB = 1;           }Nwk_ObjSetFlow46,1693
static inline void        Nwk_ObjClearFlow( Nwk_Obj_t * pObj )              { pObj->MarkB = 0;           }Nwk_ObjClearFlow47,1800
static inline int  Nwk_ObjVisitedBotOnly( Nwk_Obj_t * pObj )   Nwk_ObjVisitedBotOnly54,2178
static inline int  Nwk_ObjVisitedBot( Nwk_Obj_t * pObj )     Nwk_ObjVisitedBot58,2299
static inline int  Nwk_ObjVisitedTop( Nwk_Obj_t * pObj )     Nwk_ObjVisitedTop62,2460
static inline void Nwk_ObjSetVisitedBot( Nwk_Obj_t * pObj )  Nwk_ObjSetVisitedBot66,2621
static inline void Nwk_ObjSetVisitedTop( Nwk_Obj_t * pObj )  Nwk_ObjSetVisitedTop75,2919
static inline void Nwk_ManIncrementTravIdFlow( Nwk_Man_t * pMan )Nwk_ManIncrementTravIdFlow84,3217
void Nwk_ManMarkTfiCone_rec( Nwk_Obj_t * pObj )Nwk_ManMarkTfiCone_rec112,4184
void Nwk_ManMarkTfoCone_rec( Nwk_Obj_t * pObj )Nwk_ManMarkTfoCone_rec134,4670
int Nwk_ManPushForwardFast_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushForwardFast_rec156,5161
int Nwk_ManPushBackwardFast_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushBackwardFast_rec190,6015
int Nwk_ManPushForwardBot_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushForwardBot_rec224,6898
int Nwk_ManPushForwardTop_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushForwardTop_rec261,7952
int Nwk_ManPushBackwardBot_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushBackwardBot_rec296,8945
int Nwk_ManPushBackwardTop_rec( Nwk_Obj_t * pObj, Nwk_Obj_t * pPred )Nwk_ManPushBackwardTop_rec327,9809
int Nwk_ManVerifyCut_rec( Nwk_Obj_t * pObj )Nwk_ManVerifyCut_rec366,10978
int Nwk_ManRetimeVerifyCutForward( Nwk_Man_t * pMan, Vec_Ptr_t * vNodes )Nwk_ManRetimeVerifyCutForward394,11631
int Nwk_ManRetimeVerifyCutBackward( Nwk_Man_t * pMan, Vec_Ptr_t * vNodes )Nwk_ManRetimeVerifyCutBackward426,12514
Vec_Ptr_t * Nwk_ManRetimeCutForward( Nwk_Man_t * pMan, int nLatches, int fVerbose )Nwk_ManRetimeCutForward442,12884
Vec_Ptr_t * Nwk_ManRetimeCutBackward( Nwk_Man_t * pMan, int nLatches, int fVerbose )Nwk_ManRetimeCutBackward523,15399

src/opt/nwk/nwk.h,10682
#define __NWK_abc_opt_nwk_h__NWK_abc_opt_nwk_h22,534
typedef struct Nwk_Obj_t_    Nwk_Obj_t;Nwk_Obj_t49,1454
    NWK_OBJ_NONE,                      // 0: non-existant objectNWK_OBJ_NONE53,1527
    NWK_OBJ_CI,                        // 1: combinational inputNWK_OBJ_CI54,1592
    NWK_OBJ_CO,                        // 2: combinational outputNWK_OBJ_CO55,1657
    NWK_OBJ_NODE,                      // 3: logic nodeNWK_OBJ_NODE56,1723
    NWK_OBJ_LATCH,                     // 4: registerNWK_OBJ_LATCH57,1779
    NWK_OBJ_VOID                       // 5: unused objectNWK_OBJ_VOID58,1833
} Nwk_Type_t;Nwk_Type_t59,1892
struct Nwk_Man_t_Nwk_Man_t_61,1907
    char *             pName;          // the name of this designpName64,1956
    char *             pSpec;          // the name of input filepSpec65,2022
    Vec_Ptr_t *        vCis;           // the primary inputs of the extracted partvCis67,2114
    Vec_Ptr_t *        vCos;           // the primary outputs of the extracted part vCos68,2197
    Vec_Ptr_t *        vObjs;          // the objects in the topological ordervObjs69,2282
    int                nObjs[NWK_OBJ_VOID]; // counter of objects of each typenObjs70,2361
    int                nFanioPlus;     // the number of extra fanins/fanouts alloc by defaultnFanioPlus71,2440
    Hop_Man_t *        pManHop;        // the functionality representationpManHop73,2576
    Tim_Man_t *        pManTime;       // the timing managerpManTime74,2651
    If_LibLut_t *         pLutLib;        // the LUT librarypLutLib75,2712
    Aig_MmFlex_t *     pMemObjs;       // memory for objectspMemObjs76,2773
    Vec_Ptr_t *        vTemp;          // array used for incremental updatesvTemp77,2834
    int                nTravIds;       // the counter of traversal IDsnTravIds78,2911
    int                nRealloced;     // the number of realloced nodesnRealloced79,2982
    int                nLatches;       // the total number of latches nLatches81,3084
    int                nTruePis;       // the number of true primary inputsnTruePis82,3155
    int                nTruePos;       // the number of true primary outputsnTruePos83,3231
struct Nwk_Obj_t_Nwk_Obj_t_86,3312
    Nwk_Man_t *        pMan;           // the manager  pMan88,3332
    Hop_Obj_t *        pFunc;          // functionalitypFunc89,3388
    void *             pCopy;          // temporary pointerpCopy90,3444
        void *         pNext;          // temporary pointerpNext92,3516
        int            iTemp;          // temporary numberiTemp93,3576
    unsigned           Type     :  3;  // object typeType96,3666
    unsigned           fInvert  :  1;  // complemented attributefInvert97,3720
    unsigned           MarkA    :  1;  // temporary mark  MarkA98,3785
    unsigned           MarkB    :  1;  // temporary markMarkB99,3844
    unsigned           MarkC    :  1;  // temporary markMarkC100,3901
    unsigned           PioId    : 25;  // number of this node in the PI/PO listPioId101,3958
    int                Id;             // unique IDId102,4038
    int                TravId;         // traversal IDTravId103,4090
    int                Level;          // the topological levelLevel105,4171
    float              tArrival;       // the arrival timetArrival106,4235
    float              tRequired;      // the required timetRequired107,4294
    float              tSlack;         // the slacktSlack108,4354
    int                nFanins;        // the number of faninsnFanins110,4441
    int                nFanouts;       // the number of fanoutsnFanouts111,4504
    int                nFanioAlloc;    // the number of allocated fanins/fanoutsnFanioAlloc112,4568
    Nwk_Obj_t **       pFanio;         // fanins/fanoutspFanio113,4649
static inline int         Nwk_ManCiNum( Nwk_Man_t * p )           { return p->nObjs[NWK_OBJ_CI];                } Nwk_ManCiNum125,5151
static inline int         Nwk_ManCoNum( Nwk_Man_t * p )           { return p->nObjs[NWK_OBJ_CO];                } Nwk_ManCoNum126,5266
static inline int         Nwk_ManNodeNum( Nwk_Man_t * p )         { return p->nObjs[NWK_OBJ_NODE];              } Nwk_ManNodeNum127,5381
static inline int         Nwk_ManLatchNum( Nwk_Man_t * p )        { return p->nObjs[NWK_OBJ_LATCH];             } Nwk_ManLatchNum128,5496
static inline int         Nwk_ManObjNumMax( Nwk_Man_t * p )       { return Vec_PtrSize(p->vObjs);               }Nwk_ManObjNumMax129,5611
static inline Nwk_Obj_t * Nwk_ManCi( Nwk_Man_t * p, int i )       { return (Nwk_Obj_t *)Vec_PtrEntry( p->vCis, i );          } Nwk_ManCi131,5726
static inline Nwk_Obj_t * Nwk_ManCo( Nwk_Man_t * p, int i )       { return (Nwk_Obj_t *)Vec_PtrEntry( p->vCos, i );          } Nwk_ManCo132,5854
static inline Nwk_Obj_t * Nwk_ManObj( Nwk_Man_t * p, int i )      { return (Nwk_Obj_t *)Vec_PtrEntry( p->vObjs, i );         } Nwk_ManObj133,5982
static inline int         Nwk_ObjId( Nwk_Obj_t * p )              { return p->Id;                               } Nwk_ObjId135,6111
static inline int         Nwk_ObjPioNum( Nwk_Obj_t * p )          { return p->PioId;                            } Nwk_ObjPioNum136,6226
static inline int         Nwk_ObjFaninNum( Nwk_Obj_t * p )        { return p->nFanins;                          } Nwk_ObjFaninNum137,6341
static inline int         Nwk_ObjFanoutNum( Nwk_Obj_t * p )       { return p->nFanouts;                         } Nwk_ObjFanoutNum138,6456
static inline Nwk_Obj_t * Nwk_ObjFanin0( Nwk_Obj_t * p )          { return p->pFanio[0];                        } Nwk_ObjFanin0140,6572
static inline Nwk_Obj_t * Nwk_ObjFanout0( Nwk_Obj_t * p )         { return p->pFanio[p->nFanins];               } Nwk_ObjFanout0141,6687
static inline Nwk_Obj_t * Nwk_ObjFanin( Nwk_Obj_t * p, int i )    { return p->pFanio[i];                        } Nwk_ObjFanin142,6802
static inline Nwk_Obj_t * Nwk_ObjFanout( Nwk_Obj_t * p, int i )   { return p->pFanio[p->nFanins+1];             } Nwk_ObjFanout143,6917
static inline int         Nwk_ObjIsNone( Nwk_Obj_t * p )          { return p->Type == NWK_OBJ_NONE;             } Nwk_ObjIsNone145,7033
static inline int         Nwk_ObjIsCi( Nwk_Obj_t * p )            { return p->Type == NWK_OBJ_CI;               } Nwk_ObjIsCi146,7148
static inline int         Nwk_ObjIsCo( Nwk_Obj_t * p )            { return p->Type == NWK_OBJ_CO;               } Nwk_ObjIsCo147,7263
static inline int         Nwk_ObjIsNode( Nwk_Obj_t * p )          { return p->Type == NWK_OBJ_NODE;             } Nwk_ObjIsNode148,7378
static inline int         Nwk_ObjIsLatch( Nwk_Obj_t * p )         { return p->Type == NWK_OBJ_LATCH;            } Nwk_ObjIsLatch149,7493
static inline int         Nwk_ObjIsPi( Nwk_Obj_t * p )            { return Nwk_ObjIsCi(p) && (p->pMan->pManTime == NULL || Tim_ManBoxForCi(p->pMan->pManTime, p->PioId) == -1); } Nwk_ObjIsPi150,7608
static inline int         Nwk_ObjIsPo( Nwk_Obj_t * p )            { return Nwk_ObjIsCo(p) && (p->pMan->pManTime == NULL || Tim_ManBoxForCo(p->pMan->pManTime, p->PioId) == -1);  }Nwk_ObjIsPo151,7787
static inline int         Nwk_ObjIsLi( Nwk_Obj_t * p )            { return p->pMan->nTruePos && Nwk_ObjIsCo(p) && (int)p->PioId >= p->pMan->nTruePos;       } Nwk_ObjIsLi152,7966
static inline int         Nwk_ObjIsLo( Nwk_Obj_t * p )            { return p->pMan->nTruePis && Nwk_ObjIsCi(p) && (int)p->PioId >= p->pMan->nTruePis;       } Nwk_ObjIsLo153,8125
static inline float       Nwk_ObjArrival( Nwk_Obj_t * pObj )                 { return pObj->tArrival;           }Nwk_ObjArrival155,8285
static inline float       Nwk_ObjRequired( Nwk_Obj_t * pObj )                { return pObj->tRequired;          }Nwk_ObjRequired156,8399
static inline float       Nwk_ObjSlack( Nwk_Obj_t * pObj )                   { return pObj->tSlack;             }Nwk_ObjSlack157,8513
static inline void        Nwk_ObjSetArrival( Nwk_Obj_t * pObj, float Time )  { pObj->tArrival   = Time;         }Nwk_ObjSetArrival158,8627
static inline void        Nwk_ObjSetRequired( Nwk_Obj_t * pObj, float Time ) { pObj->tRequired  = Time;         }Nwk_ObjSetRequired159,8741
static inline void        Nwk_ObjSetSlack( Nwk_Obj_t * pObj, float Time )    { pObj->tSlack     = Time;         }Nwk_ObjSetSlack160,8855
static inline int         Nwk_ObjLevel( Nwk_Obj_t * pObj )                   { return pObj->Level;              }Nwk_ObjLevel162,8970
static inline void        Nwk_ObjSetLevel( Nwk_Obj_t * pObj, int Level )     { pObj->Level = Level;             }Nwk_ObjSetLevel163,9084
static inline void        Nwk_ObjSetTravId( Nwk_Obj_t * pObj, int TravId )   { pObj->TravId = TravId;                           }Nwk_ObjSetTravId165,9199
static inline void        Nwk_ObjSetTravIdCurrent( Nwk_Obj_t * pObj )        { pObj->TravId = pObj->pMan->nTravIds;             }Nwk_ObjSetTravIdCurrent166,9329
static inline void        Nwk_ObjSetTravIdPrevious( Nwk_Obj_t * pObj )       { pObj->TravId = pObj->pMan->nTravIds - 1;         }Nwk_ObjSetTravIdPrevious167,9459
static inline int         Nwk_ObjIsTravIdCurrent( Nwk_Obj_t * pObj )         { return pObj->TravId == pObj->pMan->nTravIds;     }Nwk_ObjIsTravIdCurrent168,9589
static inline int         Nwk_ObjIsTravIdPrevious( Nwk_Obj_t * pObj )        { return pObj->TravId == pObj->pMan->nTravIds - 1; }Nwk_ObjIsTravIdPrevious169,9719
static inline int         Nwk_ManTimeEqual( float f1, float f2, float Eps )  { return (f1 < f2 + Eps) && (f2 < f1 + Eps);  }Nwk_ManTimeEqual171,9850
static inline int         Nwk_ManTimeLess( float f1, float f2, float Eps )   { return (f1 < f2 + Eps);                     }Nwk_ManTimeLess172,9975
static inline int         Nwk_ManTimeMore( float f1, float f2, float Eps )   { return (f1 + Eps > f2);                     }Nwk_ManTimeMore173,10100
#define Nwk_ManForEachCi(Nwk_ManForEachCi179,10446
#define Nwk_ManForEachCo(Nwk_ManForEachCo181,10580
#define Nwk_ManForEachPi(Nwk_ManForEachPi183,10714
#define Nwk_ManForEachPo(Nwk_ManForEachPo186,10923
#define Nwk_ManForEachObj(Nwk_ManForEachObj189,11132
#define Nwk_ManForEachNode(Nwk_ManForEachNode192,11357
#define Nwk_ManForEachLatch(Nwk_ManForEachLatch195,11608
#define Nwk_ObjForEachFanin(Nwk_ObjForEachFanin199,11861
#define Nwk_ObjForEachFanout(Nwk_ObjForEachFanout201,12028
#define Nwk_ManForEachPiSeq(Nwk_ManForEachPiSeq205,12238
#define Nwk_ManForEachPoSeq(Nwk_ManForEachPoSeq207,12400
#define Nwk_ManForEachLoSeq(Nwk_ManForEachLoSeq209,12562
#define Nwk_ManForEachLiSeq(Nwk_ManForEachLiSeq211,12763
#define Nwk_ManForEachLiLoSeq(Nwk_ManForEachLiLoSeq213,12964

src/opt/nwk/nwkStrash.c,251
void Nwk_ManStrashNode_rec( Aig_Man_t * p, Hop_Obj_t * pObj )Nwk_ManStrashNode_rec45,1307
Aig_Obj_t * Nwk_ManStrashNode( Aig_Man_t * p, Nwk_Obj_t * pObj )Nwk_ManStrashNode68,2067
Aig_Man_t * Nwk_ManStrash( Nwk_Man_t * pNtk )Nwk_ManStrash99,3132

src/opt/dar/darCut.c,2201
void Dar_CutPrint( Dar_Cut_t * pCut )Dar_CutPrint45,1250
void Dar_ObjCutPrint( Aig_Man_t * p, Aig_Obj_t * pObj )Dar_ObjCutPrint65,1684
static inline int Dar_WordCountOnes( unsigned uWord )Dar_WordCountOnes86,2195
static inline int Dar_CutFindValue( Dar_Man_t * p, Dar_Cut_t * pCut )Dar_CutFindValue106,2812
static inline Dar_Cut_t * Dar_CutFindFree( Dar_Man_t * p, Aig_Obj_t * pObj )Dar_CutFindFree142,3716
static inline int Dar_CutCheckDominance( Dar_Cut_t * pDom, Dar_Cut_t * pCut )Dar_CutCheckDominance190,4938
static inline int Dar_CutFilter( Aig_Obj_t * pObj, Dar_Cut_t * pCut )Dar_CutFilter217,5699
static inline int Dar_CutMergeOrdered( Dar_Cut_t * pC, Dar_Cut_t * pC0, Dar_Cut_t * pC1 )Dar_CutMergeOrdered267,7034
static inline int Dar_CutMerge( Dar_Cut_t * pCut, Dar_Cut_t * pCut0, Dar_Cut_t * pCut1 )Dar_CutMerge359,9578
static inline unsigned Dar_CutTruthPhase( Dar_Cut_t * pCut, Dar_Cut_t * pCut1 )Dar_CutTruthPhase390,10341
static inline unsigned Dar_CutTruthSwapAdjacentVars( unsigned uTruth, int iVar )Dar_CutTruthSwapAdjacentVars418,11092
static inline unsigned Dar_CutTruthSwapPolarity( unsigned uTruth, int iVar )Dar_CutTruthSwapPolarity442,11875
static inline unsigned Dar_CutTruthStretch( unsigned uTruth, int nVars, unsigned Phase )Dar_CutTruthStretch470,12874
static inline unsigned Dar_CutTruthShrink( unsigned uTruth, int nVars, unsigned Phase )Dar_CutTruthShrink497,13744
unsigned Dar_CutSortVars( unsigned uTruth, int * pVars )Dar_CutSortVars521,14352
static inline unsigned Dar_CutTruth( Dar_Cut_t * pCut, Dar_Cut_t * pCut0, Dar_Cut_t * pCut1, int fCompl0, int fCompl1 )Dar_CutTruth580,15680
static inline int Dar_CutSuppMinimize( Dar_Cut_t * pCut )Dar_CutSuppMinimize600,16458
void Dar_ManCutsFree( Dar_Man_t * p )Dar_ManCutsFree648,17832
Dar_Cut_t * Dar_ObjPrepareCuts( Dar_Man_t * p, Aig_Obj_t * pObj )Dar_ObjPrepareCuts668,18248
void Dar_ManCutsRestart( Dar_Man_t * p, Aig_Obj_t * pRoot )Dar_ManCutsRestart714,19563
Dar_Cut_t * Dar_ObjComputeCuts( Dar_Man_t * p, Aig_Obj_t * pObj, int fSkipTtMin )Dar_ObjComputeCuts738,20213
Dar_Cut_t * Dar_ObjComputeCuts_rec( Dar_Man_t * p, Aig_Obj_t * pObj )Dar_ObjComputeCuts_rec818,22702

src/opt/dar/dar_.c,0

src/opt/dar/darPrec.c,761
char ** Dar_ArrayAlloc( int nCols, int nRows, int Size )Dar_ArrayAlloc45,1269
int Dar_Factorial( int n )Dar_Factorial70,1934
void Dar_Permutations_rec( char ** pRes, int nFact, int n, char Array[] )Dar_Permutations_rec89,2319
char ** Dar_Permutations( int n )Dar_Permutations144,3827
void Dar_TruthPermute_int( int * pMints, int nMints, char * pPerm, int nVars, int * pMintsP )Dar_TruthPermute_int183,4687
unsigned Dar_TruthPermute( unsigned Truth, char * pPerms, int nVars, int fReverse )Dar_TruthPermute206,5351
unsigned Dar_TruthPolarize( unsigned uTruth, int Polarity, int nVars )Dar_TruthPolarize254,6437
void Dar_Truth4VarNPN( unsigned short ** puCanons, char ** puPhases, char ** puPerms, unsigned char ** puMap )Dar_Truth4VarNPN293,7657

src/opt/dar/darMan.c,262
Dar_Man_t * Dar_ManStart( Aig_Man_t * pAig, Dar_RwrPar_t * pPars )Dar_ManStart44,1247
void Dar_ManStop( Dar_Man_t * p )Dar_ManStop69,1926
void Dar_ManPrintStats( Dar_Man_t * p )Dar_ManPrintStats93,2495
void Dar_ManPrintScript()Dar_ManPrintScript151,4551

src/opt/dar/darBalance.c,1656
int Dar_ObjCompareLits( Aig_Obj_t ** pp1, Aig_Obj_t ** pp2 )Dar_ObjCompareLits48,1315
void Dar_BalanceUniqify( Aig_Obj_t * pObj, Vec_Ptr_t * vNodes, int fExor )Dar_BalanceUniqify57,1529
void Dar_BalanceCone_rec( Aig_Obj_t * pRoot, Aig_Obj_t * pObj, Vec_Ptr_t * vSuper )Dar_BalanceCone_rec106,2993
Vec_Ptr_t * Dar_BalanceCone( Aig_Obj_t * pObj, Vec_Vec_t * vStore, int Level )Dar_BalanceCone119,3580
int Dar_BalanceFindLeft( Vec_Ptr_t * vSuper )Dar_BalanceFindLeft236,7824
void Dar_BalancePermute( Aig_Man_t * p, Vec_Ptr_t * vSuper, int LeftBound, int fExor )Dar_BalancePermute274,9186
int Aig_NodeCompareLevelsDecrease( Aig_Obj_t ** pp1, Aig_Obj_t ** pp2 )Aig_NodeCompareLevelsDecrease340,11494
void Dar_BalancePushUniqueOrderByLevel( Vec_Ptr_t * vStore, Aig_Obj_t * pObj, int fExor )Dar_BalancePushUniqueOrderByLevel366,12172
Aig_Obj_t * Dar_BalanceBuildSuper( Aig_Man_t * p, Vec_Ptr_t * vSuper, Aig_Type_t Type, int fUpdateLevel )Dar_BalanceBuildSuper399,13069
int Aig_BaseSize( Aig_Man_t * p, Aig_Obj_t * pObj, int nLutSize )Aig_BaseSize433,14307
Aig_Obj_t * Dar_BalanceBuildSuperTop( Aig_Man_t * p, Vec_Ptr_t * vSuper, Aig_Type_t Type, int fUpdateLevel, int nLutSize )Dar_BalanceBuildSuperTop458,14918
Aig_Obj_t * Dar_Balance_rec( Aig_Man_t * pNew, Aig_Obj_t * pObjOld, Vec_Vec_t * vStore, int Level, int fUpdateLevel )Dar_Balance_rec502,16514
Aig_Man_t * Dar_ManBalance( Aig_Man_t * p, int fUpdateLevel )Dar_ManBalance554,18546
Aig_Man_t * Dar_ManBalanceXor( Aig_Man_t * pAig, int fExor, int fUpdateLevel, int fVerbose )Dar_ManBalanceXor687,23401
void Dar_BalancePrintStats( Aig_Man_t * p )Dar_BalancePrintStats716,24128

src/opt/dar/darResub.c,0

src/opt/dar/darScript.c,1508
Aig_Man_t * Dar_ManRewriteDefault( Aig_Man_t * pAig )Dar_ManRewriteDefault48,1351
Aig_Man_t * Dar_ManRwsat( Aig_Man_t * pAig, int fBalance, int fVerbose )Dar_ManRwsat71,1986
Aig_Man_t * Dar_ManCompress( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fPower, int fVerbose )Dar_ManCompress162,4647
Aig_Man_t * Dar_ManCompress2( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fFanout, int fPower, int fVerbose )Dar_ManCompress2235,6681
Vec_Ptr_t * Dar_ManChoiceSynthesis( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fPower, int fVerbose )Dar_ManChoiceSynthesis345,9968
Aig_Man_t * Dar_ManChoice( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fConstruct, int nConfMax, int nLevelMax, int fVerbose )Dar_ManChoice378,10916
Aig_Man_t * Dar_NewCompress( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fPower, int fVerbose )Dar_NewCompress431,12390
Aig_Man_t * Dar_NewCompress2( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fFanout, int fPower, int fLightSynth, int fVerbose )Dar_NewCompress2496,14215
int Dar_NewChoiceSynthesisGuard( Aig_Man_t * pAig )Dar_NewChoiceSynthesisGuard611,17813
Gia_Man_t * Dar_NewChoiceSynthesis( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fPower, int fLightSynth, int fVerbose )Dar_NewChoiceSynthesis632,18392
Aig_Man_t * Dar_ManChoiceNewAig( Aig_Man_t * pAig, Dch_Pars_t * pPars )Dar_ManChoiceNewAig778,22650
Aig_Man_t * Dar_ManChoiceNew( Aig_Man_t * pAig, Dch_Pars_t * pPars )Dar_ManChoiceNew849,24748

src/opt/dar/darInt.h,3557
#define ABC__aig__dar__darInt_hABC__aig__dar__darInt_h22,539
typedef struct Dar_Man_t_            Dar_Man_t;Dar_Man_t51,1414
typedef struct Dar_Cut_t_            Dar_Cut_t;Dar_Cut_t52,1462
struct Dar_Cut_t_  // 6 wordsDar_Cut_t_55,1528
    unsigned         uSign;          // cut signatureuSign57,1560
    unsigned         uTruth  : 16;   // the truth table of the cut functionuTruth58,1614
    unsigned         Value   : 11;   // the value of the cut Value59,1690
    unsigned         fBest   :  1;   // marks the best cutfBest60,1752
    unsigned         fUsed   :  1;   // marks the cut currently in usefUsed61,1811
    unsigned         nLeaves :  3;   // the number of leavesnLeaves62,1882
    int              pLeaves[4];     // the array of leavespLeaves63,1943
struct Dar_Man_t_Dar_Man_t_67,2026
    Dar_RwrPar_t *   pPars;          // rewriting parameterspPars70,2064
    Aig_Man_t *      pAig;           // AIG manager pAig71,2125
    Aig_MmFixed_t *  pMemCuts;       // memory manager for cutspMemCuts73,2206
    void *           pManCnf;        // CNF managerspManCnf74,2270
    Vec_Ptr_t *      vCutNodes;      // the nodes with cuts allocatedvCutNodes75,2323
    Vec_Ptr_t *      vLeavesBest;    // the best set of leavesvLeavesBest77,2423
    int              OutBest;        // the best output (in the library)OutBest78,2486
    int              OutNumBest;     // the best number of the outputOutNumBest79,2559
    int              GainBest;       // the best gainGainBest80,2629
    int              LevelBest;      // the level of node with the best gainLevelBest81,2683
    int              ClassBest;      // the equivalence class of the best replacementClassBest82,2760
    int              nTotalSubgs;    // the total number of subgraphs triednTotalSubgs84,2873
    int              ClassTimes[222];// the runtimes for each classClassTimes85,2949
    int              ClassGains[222];// the gains for each classClassGains86,3017
    int              ClassSubgs[222];// the graphs for each classClassSubgs87,3082
    int              nCutMemUsed;    // memory used for cutsnCutMemUsed88,3148
    int              nNodesInit;     // the original number of nodesnNodesInit90,3237
    int              nNodesTried;    // the number of nodes attemptednNodesTried91,3306
    int              nCutsAll;       // all cut pairsnCutsAll92,3376
    int              nCutsTried;     // computed cutsnCutsTried93,3430
    int              nCutsUsed;      // used cutsnCutsUsed94,3484
    int              nCutsBad;       // bad cuts due to absent faninnCutsBad95,3534
    int              nCutsGood;      // good cutsnCutsGood96,3603
    int              nCutsSkipped;   // skipped bad cutsnCutsSkipped97,3653
    abctime          timeCuts;timeCuts99,3735
    abctime          timeEval;timeEval100,3766
    abctime          timeOther;timeOther101,3797
    abctime          timeTotal;timeTotal102,3829
    abctime          time1;time1103,3861
    abctime          time2;time2104,3889
static inline Dar_Cut_t *  Dar_ObjCuts( Aig_Obj_t * pObj )                         { return (Dar_Cut_t *)pObj->pData;    }Dar_ObjCuts107,3921
static inline void         Dar_ObjSetCuts( Aig_Obj_t * pObj, Dar_Cut_t * pCuts )   { assert( !Aig_ObjIsNone(pObj) ); pObj->pData = pCuts;   }Dar_ObjSetCuts108,4044
#define Dar_ObjForEachCutAll(Dar_ObjForEachCutAll119,4665
#define Dar_ObjForEachCut(Dar_ObjForEachCut121,4831
#define Dar_CutForEachLeaf(Dar_CutForEachLeaf124,5063

src/opt/dar/darData.c,585
const int s_nDataSize1 = 2*43906;s_nDataSize133,998
unsigned int s_Data1[2*43906] = {s_Data134,1032
const int s_nDataSize2 = 24772;s_nDataSize27355,535259
unsigned int s_Data2[24772] = {s_Data27356,535291
const int s_nDataSize3 = 24772;s_nDataSize39425,686024
unsigned int s_Data3[24772] = {s_Data39426,686056
Vec_Int_t * Dar_LibReadNodes()Dar_LibReadNodes11094,797983
Vec_Int_t * Dar_LibReadOuts()Dar_LibReadOuts11115,798463
Vec_Int_t * Dar_LibReadPrios()Dar_LibReadPrios11136,798942
void Aig_NtkGenerateArrays( Abc_Ntk_t * pNtk )Aig_NtkGenerateArrays11164,799474

src/opt/dar/darLib.c,7357
typedef struct Dar_Lib_t_            Dar_Lib_t;Dar_Lib_t32,839
typedef struct Dar_LibObj_t_         Dar_LibObj_t;Dar_LibObj_t33,887
typedef struct Dar_LibDat_t_         Dar_LibDat_t;Dar_LibDat_t34,938
struct Dar_LibObj_t_ // library object (2 words)Dar_LibObj_t_36,990
    unsigned         Fan0    : 16;  // the first faninFan038,1041
    unsigned         Fan1    : 16;  // the second faninFan139,1096
    unsigned         fCompl0 :  1;  // the first compl attributefCompl040,1152
    unsigned         fCompl1 :  1;  // the second compl attributefCompl141,1217
    unsigned         fPhase  :  1;  // the phase of the nodefPhase42,1283
    unsigned         fTerm   :  1;  // indicates a PIfTerm43,1344
    unsigned         Num     : 28;  // internal useNum44,1398
struct Dar_LibDat_t_ // library object dataDar_LibDat_t_47,1454
    Aig_Obj_t *      pFunc;         // the corresponding AIG node if it existspFunc50,1513
    int              iGunc; };      // the corresponding AIG node if it existsiGunc51,1592
    int              Level;         // level of this node after it is constructuredLevel52,1671
    int              TravId;        // traversal ID of the library object dataTravId53,1755
    float            dProb;         // probability of the node being 1dProb54,1834
    unsigned char    fMffc;         // set to one if node is part of MFFCfMffc55,1905
    unsigned char    nLats[3];      // the number of latches on the input/output stemnLats56,1979
struct Dar_Lib_t_ // library Dar_Lib_t_59,2069
    Dar_LibObj_t *   pObjs;         // the set of library objectspObjs62,2116
    int              nObjs;         // the number of objects usednObjs63,2182
    int              iObj;          // the current objectiObj64,2248
    int              nSubgr[222];   // the number of subgraphs by classnSubgr66,2333
    int *            pSubgr[222];   // the subgraphs for each classpSubgr67,2405
    int *            pSubgrMem;     // memory for subgraph pointerspSubgrMem68,2473
    int              nSubgrTotal;   // the total number of subgraphnSubgrTotal69,2541
    int *            pPriosMem;     // memory for priority of structurespPriosMem71,2637
    int *            pPrios[222];   // pointers to the priority numberspPrios72,2710
    int *            pPlaceMem;     // memory for places of structures in the priority listspPlaceMem74,2824
    int *            pPlace[222];   // pointers to the places numberspPlace75,2917
    int *            pScoreMem;     // memory for scores of structurespScoreMem77,3011
    int *            pScore[222];   // pointers to the scores numberspScore78,3082
    int              nNodes[222];   // the number of nodes by classnNodes80,3174
    int *            pNodes[222];   // the nodes for each classpNodes81,3242
    int *            pNodesMem;     // memory for nodes pointerspNodesMem82,3306
    int              nNodesTotal;   // the total number of nodesnNodesTotal83,3371
    int              nSubgraphs;nSubgraphs85,3460
    int              nNodes0Max;nNodes0Max86,3493
    int              nNodes0[222];   // the number of nodes by classnNodes088,3548
    int *            pNodes0[222];   // the nodes for each classpNodes089,3617
    int *            pNodes0Mem;     // memory for nodes pointerspNodes0Mem90,3682
    int              nNodes0Total;   // the total number of nodesnNodes0Total91,3748
    int              nSubgr0[222];   // the number of subgraphs by classnSubgr093,3841
    int *            pSubgr0[222];   // the subgraphs for each classpSubgr094,3914
    int *            pSubgr0Mem;     // memory for subgraph pointerspSubgr0Mem95,3983
    int              nSubgr0Total;   // the total number of subgraphnSubgr0Total96,4052
    Dar_LibDat_t *   pDatas;pDatas98,4140
    int              nDatas;nDatas99,4169
    char **          pPerms4;pPerms4101,4235
    unsigned short * puCanons; puCanons102,4265
    char *           pPhases; pPhases103,4297
    char *           pPerms; pPerms104,4328
    unsigned char *  pMap;pMap105,4358
static Dar_Lib_t * s_DarLib = NULL;s_DarLib108,4389
static inline Dar_LibObj_t * Dar_LibObj( Dar_Lib_t * p, int Id )    { return p->pObjs + Id; }Dar_LibObj110,4426
static inline int            Dar_LibObjTruth( Dar_LibObj_t * pObj ) { return pObj->Num < (0xFFFF & ~pObj->Num) ? pObj->Num : (0xFFFF & ~pObj->Num); }Dar_LibObjTruth111,4520
Dar_Lib_t * Dar_LibAlloc( int nObjs )Dar_LibAlloc128,5144
void Dar_LibFree( Dar_Lib_t * p )Dar_LibFree164,6154
int Dar_LibReturnClass( unsigned uTruth )Dar_LibReturnClass194,6879
void Dar_LibReturnCanonicals( unsigned * pCanons )Dar_LibReturnCanonicals211,7236
void Dar_LibAddNode( Dar_Lib_t * p, int Id0, int Id1, int fCompl0, int fCompl1 )Dar_LibAddNode236,7841
void Dar_LibSetup_rec( Dar_Lib_t * p, Dar_LibObj_t * pObj, int Class, int fCollect )Dar_LibSetup_rec260,8612
void Dar_LibSetup( Dar_Lib_t * p, Vec_Int_t * vOuts, Vec_Int_t * vPrios )Dar_LibSetup284,9316
void Dar_LibCreateData( Dar_Lib_t * p, int nDatas )Dar_LibCreateData432,14229
void Dar_LibSetup0_rec( Dar_Lib_t * p, Dar_LibObj_t * pObj, int Class, int fCollect )Dar_LibSetup0_rec454,14778
void Dar_LibPrepare( int nSubgraphs )Dar_LibPrepare478,15479
Dar_Lib_t * Dar_LibRead()Dar_LibRead559,17946
void Dar_LibStart()Dar_LibStart593,18854
void Dar_LibStop()Dar_LibStop615,19438
void Dar_LibIncrementScore( int Class, int Out, int Gain )Dar_LibIncrementScore633,19848
void Dar_LibDumpPriorities()Dar_LibDumpPriorities668,20948
int Dar_LibCutMatch( Dar_Man_t * p, Dar_Cut_t * pCut )Dar_LibCutMatch706,22032
int Dar_LibCutMarkMffc( Aig_Man_t * p, Aig_Obj_t * pRoot, int nLeaves, float * pPower )Dar_LibCutMarkMffc752,23399
void Dar_LibObjPrint_rec( Dar_LibObj_t * pObj )Dar_LibObjPrint_rec777,24132
void Dar_LibEvalAssignNums( Dar_Man_t * p, int Class, Aig_Obj_t * pRoot )Dar_LibEvalAssignNums806,24832
int Dar_LibEval_rec( Dar_LibObj_t * pObj, int Out, int nNodesSaved, int Required, float * pPower )Dar_LibEval_rec863,27139
void Dar_LibEval( Dar_Man_t * p, Aig_Obj_t * pRoot, Dar_Cut_t * pCut, int Required, int * pnMffcSize )Dar_LibEval920,29029
void Dar_LibBuildClear_rec( Dar_LibObj_t * pObj, int * pCounter )Dar_LibBuildClear_rec984,31594
Aig_Obj_t * Dar_LibBuildBest_rec( Dar_Man_t * p, Dar_LibObj_t * pObj )Dar_LibBuildBest_rec1005,32189
Aig_Obj_t * Dar_LibBuildBest( Dar_Man_t * p )Dar_LibBuildBest1031,33080
int Dar2_LibCutMatch( Gia_Man_t * p, Vec_Int_t * vCutLits, unsigned uTruth )Dar2_LibCutMatch1056,33719
void Dar2_LibEvalAssignNums( Gia_Man_t * p, int Class )Dar2_LibEvalAssignNums1088,34900
int Dar2_LibEval_rec( Dar_LibObj_t * pObj, int Out )Dar2_LibEval_rec1149,37245
int Dar2_LibEval( Gia_Man_t * p, Vec_Int_t * vCutLits, unsigned uTruth, int fKeepLevel, Vec_Int_t * vLeavesBest2 )Dar2_LibEval1184,38232
void Dar2_LibBuildClear_rec( Dar_LibObj_t * pObj, int * pCounter )Dar2_LibBuildClear_rec1256,40960
int Dar2_LibBuildBest_rec( Gia_Man_t * p, Dar_LibObj_t * pObj )Dar2_LibBuildBest_rec1277,41556
int Dar2_LibBuildBest( Gia_Man_t * p, Vec_Int_t * vLeavesBest2, int OutBest )Dar2_LibBuildBest1308,42569
int Dar_LibEvalBuild( Gia_Man_t * p, Vec_Int_t * vCutLits, unsigned uTruth, int fKeepLevel, Vec_Int_t * vLeavesBest2 )Dar_LibEvalBuild1329,43229

src/opt/dar/darRefact.c,2960
typedef struct Ref_Man_t_            Ref_Man_t;Ref_Man_t35,880
struct Ref_Man_t_Ref_Man_t_36,928
    Dar_RefPar_t *   pPars;          // rewriting parameterspPars39,966
    Aig_Man_t *      pAig;           // AIG manager pAig40,1027
    Vec_Vec_t *      vCuts;          // the storage for cutsvCuts42,1101
    Vec_Ptr_t *      vTruthElem;     // elementary truth tablesvTruthElem44,1190
    Vec_Ptr_t *      vTruthStore;    // storage for truth tablesvTruthStore45,1254
    Vec_Int_t *      vMemory;        // storage for ISOPvMemory46,1319
    Vec_Ptr_t *      vCutNodes;      // storage for internal nodes of the cutvCutNodes47,1376
    Vec_Ptr_t *      vLeavesBest;    // the best set of leavesvLeavesBest49,1482
    Kit_Graph_t *    pGraphBest;     // the best factored formpGraphBest50,1545
    int              GainBest;       // the best gainGainBest51,1608
    int              LevelBest;      // the level of node with the best gainLevelBest52,1662
    Bdc_Par_t        DecPars;        // decomposition parametersDecPars54,1763
    Bdc_Man_t *      pManDec;        // decomposition managerpManDec55,1828
    int              nNodesInit;     // the initial number of nodesnNodesInit57,1913
    int              nNodesTried;    // the number of nodes triednNodesTried58,1981
    int              nNodesBelow;    // the number of nodes below the level limitnNodesBelow59,2047
    int              nNodesExten;    // the number of nodes with extended cutnNodesExten60,2129
    int              nCutsUsed;      // the number of rewriting stepsnCutsUsed61,2207
    int              nCutsTried;     // the number of cuts triesnCutsTried62,2277
    abctime          timeCuts;timeCuts64,2367
    abctime          timeEval;timeEval65,2398
    abctime          timeOther;timeOther66,2429
    abctime          timeTotal;timeTotal67,2461
void Dar_ManDefaultRefParams( Dar_RefPar_t * pPars )Dar_ManDefaultRefParams85,3011
Ref_Man_t * Dar_ManRefStart( Aig_Man_t * pAig, Dar_RefPar_t * pPars )Dar_ManRefStart108,3719
void Dar_ManRefPrintStats( Ref_Man_t * p )Dar_ManRefPrintStats142,4833
void Dar_ManRefStop( Ref_Man_t * p )Dar_ManRefStop166,5693
void Ref_ObjComputeCuts( Aig_Man_t * pAig, Aig_Obj_t * pRoot, Vec_Vec_t * vCuts )Ref_ObjComputeCuts192,6307
void Ref_ObjPrint( Aig_Obj_t * pObj )Ref_ObjPrint207,6628
int Dar_RefactTryGraph( Aig_Man_t * pAig, Aig_Obj_t * pRoot, Vec_Ptr_t * vCut, Kit_Graph_t * pGraph, int NodeMax, int LevelMax )Dar_RefactTryGraph228,7341
Aig_Obj_t * Dar_RefactBuildGraph( Aig_Man_t * pAig, Vec_Ptr_t * vCut, Kit_Graph_t * pGraph )Dar_RefactBuildGraph313,10303
int Dar_ManRefactorTryCuts( Ref_Man_t * p, Aig_Obj_t * pObj, int nNodesSaved, int Required )Dar_ManRefactorTryCuts359,11915
int Dar_ObjCutLevelAchieved( Vec_Ptr_t * vCut, int nLevelMin )Dar_ObjCutLevelAchieved475,16235
int Dar_ManRefactor( Aig_Man_t * pAig, Dar_RefPar_t * pPars )Dar_ManRefactor496,16728

src/opt/dar/dar.h,1786
#define ABC__aig__dar__dar_hABC__aig__dar__dar_h22,530
typedef struct Dar_RwrPar_t_            Dar_RwrPar_t;Dar_RwrPar_t42,1253
typedef struct Dar_RefPar_t_            Dar_RefPar_t;Dar_RefPar_t43,1307
struct Dar_RwrPar_t_  Dar_RwrPar_t_45,1362
    int              nCutsMax;       // the maximum number of cuts to trynCutsMax47,1387
    int              nSubgMax;       // the maximum number of subgraphs to trynSubgMax48,1461
    int              fFanout;        // support fanout representationfFanout49,1540
    int              fUpdateLevel;   // update level fUpdateLevel50,1610
    int              fUseZeros;      // performs zero-cost replacementfUseZeros51,1664
    int              fPower;         // enables power-aware rewritingfPower52,1735
    int              fRecycle;       // enables cut recyclingfRecycle53,1805
    int              fVerbose;       // enables verbose outputfVerbose54,1867
    int              fVeryVerbose;   // enables very verbose outputfVeryVerbose55,1930
struct Dar_RefPar_t_  Dar_RefPar_t_58,2002
    int              nMffcMin;       // the min MFFC size for which refactoring is usednMffcMin60,2027
    int              nLeafMax;       // the max number of leaves of a cutnLeafMax61,2115
    int              nCutsMax;       // the max number of cuts to consider  nCutsMax62,2189
    int              fExtend;        // extends the cut below MFFCfExtend63,2266
    int              fUpdateLevel;   // updates the level after each movefUpdateLevel64,2333
    int              fUseZeros;      // perform zero-cost replacementsfUseZeros65,2407
    int              fVerbose;       // verbosity levelfVerbose66,2478
    int              fVeryVerbose;   // enables very verbose outputfVeryVerbose67,2534

src/opt/dar/darCore.c,477
#define Aig_ManForEachNodeInOrder(Aig_ManForEachNodeInOrder31,837
void Dar_ManDefaultRwrParams( Dar_RwrPar_t * pPars )Dar_ManDefaultRwrParams51,1649
#define MAX_VAL MAX_VAL65,2053
int Dar_ManRewrite( Aig_Man_t * pAig, Dar_RwrPar_t * pPars )Dar_ManRewrite78,2307
int Dar_ManCutCount( Aig_Man_t * pAig, int * pnCutsK )Dar_ManCutCount259,8887
Aig_MmFixed_t * Dar_ManComputeCuts( Aig_Man_t * pAig, int nCutsMax, int fSkipTtMin, int fVerbose )Dar_ManComputeCuts287,9514

src/opt/fret/fretTime.c,1538
void trace2(Abc_Obj_t *pObj) {trace239,1222
void Abc_FlowRetime_InitTiming( Abc_Ntk_t *pNtk ) {Abc_FlowRetime_InitTiming67,1901
void Abc_FlowRetime_ConstrainConserv( Abc_Ntk_t * pNtk ) {  Abc_FlowRetime_ConstrainConserv90,2528
void Abc_FlowRetime_ConstrainConserv_forw( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_ConstrainConserv_forw119,3209
void Abc_FlowRetime_ConstrainConserv_back( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_ConstrainConserv_back256,6711
void Abc_FlowRetime_ConstrainExact( Abc_Obj_t * pObj ) {Abc_FlowRetime_ConstrainExact407,10518
void Abc_FlowRetime_ConstrainExact_forw_rec( Abc_Obj_t * pObj, Vec_Ptr_t *vNodes, int latch ) {Abc_FlowRetime_ConstrainExact_forw_rec423,10860
void Abc_FlowRetime_ConstrainExact_forw( Abc_Obj_t * pObj ) {Abc_FlowRetime_ConstrainExact_forw452,11442
void Abc_FlowRetime_ConstrainExact_back_rec( Abc_Obj_t * pObj, Vec_Ptr_t *vNodes, int latch ) {Abc_FlowRetime_ConstrainExact_back_rec497,12805
void Abc_FlowRetime_ConstrainExact_back( Abc_Obj_t * pObj ) {Abc_FlowRetime_ConstrainExact_back527,13389
void Abc_FlowRetime_ConstrainExactAll( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_ConstrainExactAll584,15042
void Abc_FlowRetime_FreeTiming( Abc_Ntk_t *pNtk ) {Abc_FlowRetime_FreeTiming617,15904
void Abc_FlowRetime_Dfs_forw( Abc_Obj_t * pObj, Vec_Ptr_t *vNodes ) {Abc_FlowRetime_Dfs_forw646,16558
void Abc_FlowRetime_Dfs_back( Abc_Obj_t * pObj, Vec_Ptr_t *vNodes ) {Abc_FlowRetime_Dfs_back662,16902
int Abc_FlowRetime_RefineConstraints( ) {Abc_FlowRetime_RefineConstraints693,17809

src/opt/fret/fretime.h,3497
#define RETIME_H_RETIME_H_22,545
#define DEBUG_CHECKDEBUG_CHECK36,753
#define MAX_DIST MAX_DIST43,1024
#define VISITED_E VISITED_E46,1083
#define VISITED_R VISITED_R47,1113
#define VISITED VISITED48,1143
#define FLOW FLOW49,1184
#define CROSS_BOUNDARY CROSS_BOUNDARY50,1214
#define BLOCK BLOCK51,1244
#define INIT_0 INIT_052,1274
#define INIT_1 INIT_153,1304
#define INIT_CARE INIT_CARE54,1334
#define CONSERVATIVE CONSERVATIVE55,1370
#define BLOCK_OR_CONS BLOCK_OR_CONS56,1400
#define BIAS_NODE BIAS_NODE57,1445
#define MAX(MAX60,1477
#define MIN(MIN61,1512
typedef struct Flow_Data_t_ {Flow_Data_t_64,1549
  unsigned int mark : 16;mark65,1579
    Abc_Obj_t   *pred;pred68,1616
    Abc_Obj_t   *pInitObj;pInitObj70,1667
    Abc_Obj_t   *pCopy;pCopy71,1694
    Vec_Ptr_t   *vNodes;vNodes72,1718
  unsigned int e_dist : 16;e_dist75,1749
  unsigned int r_dist : 16;r_dist76,1777
} Flow_Data_t;Flow_Data_t77,1805
#define FDATA(FDATA80,1878
#define FSET(FSET81,1935
#define FUNSET(FUNSET82,1978
#define FTEST(FTEST83,2022
#define FTIMEEDGES(FTIMEEDGES84,2066
typedef struct NodeLag_T_ {NodeLag_T_86,2130
  int id;id87,2158
  int lag;lag88,2168
} NodeLag_t;NodeLag_t89,2179
typedef struct InitConstraint_t_ {InitConstraint_t_91,2193
  Abc_Obj_t *pBiasNode;pBiasNode92,2228
  Vec_Int_t  vNodes;vNodes94,2253
  Vec_Int_t  vLags;vLags95,2274
} InitConstraint_t;InitConstraint_t97,2295
typedef struct MinRegMan_t_ {MinRegMan_t_99,2316
  int         maxDelay;maxDelay102,2374
  int        fComputeInitState, fGuaranteeInitState, fBlockConst;fComputeInitState103,2398
  int        fComputeInitState, fGuaranteeInitState, fBlockConst;fGuaranteeInitState103,2398
  int        fComputeInitState, fGuaranteeInitState, fBlockConst;fBlockConst103,2398
  int         nNodes, nLatches;nNodes104,2464
  int         nNodes, nLatches;nLatches104,2464
  int        fForwardOnly, fBackwardOnly;fForwardOnly105,2496
  int        fForwardOnly, fBackwardOnly;fBackwardOnly105,2496
  int        fConservTimingOnly;fConservTimingOnly106,2538
  int         nMaxIters;nMaxIters107,2571
  int        fVerbose;fVerbose108,2596
  Abc_Ntk_t  *pNtk;pNtk109,2619
  int         nPreRefine;nPreRefine111,2640
  int        fIsForward;fIsForward114,2686
  int        fSinkDistTerminate;fSinkDistTerminate115,2711
  int         nExactConstraints, nConservConstraints;nExactConstraints116,2744
  int         nExactConstraints, nConservConstraints;nConservConstraints116,2744
  int         fSolutionIsDc;fSolutionIsDc117,2798
  int         constraintMask;constraintMask118,2827
  int         iteration, subIteration;iteration119,2857
  int         iteration, subIteration;subIteration119,2857
  Vec_Int_t  *vLags;vLags120,2896
  Vec_Int_t   *vSinkDistHist;vSinkDistHist123,2938
  Flow_Data_t *pDataArray;pDataArray124,2968
  Vec_Ptr_t   *vTimeEdges;vTimeEdges125,2995
  Vec_Ptr_t   *vExactNodes;vExactNodes126,3022
  Vec_Ptr_t   *vInitConstraints;vInitConstraints127,3050
  Abc_Ntk_t   *pInitNtk;pInitNtk128,3083
  Vec_Ptr_t   *vNodes; // re-useable structvNodes129,3108
  NodeLag_t   *pInitToOrig;pInitToOrig131,3155
  int          sizeInitToOrig;sizeInitToOrig132,3183
} MinRegMan_t ;MinRegMan_t134,3217
#define vprintf vprintf138,3263
static inline void FSETPRED(Abc_Obj_t *pObj, Abc_Obj_t *pPred) {FSETPRED140,3310
static inline Abc_Obj_t * FGETPRED(Abc_Obj_t *pObj) {FGETPRED144,3493

src/opt/fret/fretFlow.c,520
#define FDIST(FDIST33,881
void dfsfast_preorder( Abc_Ntk_t *pNtk ) {dfsfast_preorder54,1679
int dfsfast_e( Abc_Obj_t *pObj, Abc_Obj_t *pPred ) {dfsfast_e210,6205
int dfsfast_r( Abc_Obj_t *pObj, Abc_Obj_t *pPred ) {dfsfast_r313,8431
dfsfast_e_retreat(Abc_Obj_t *pObj) {dfsfast_e_retreat408,10427
dfsfast_r_retreat(Abc_Obj_t *pObj) {dfsfast_r_retreat467,11989
int dfsplain_e( Abc_Obj_t *pObj, Abc_Obj_t *pPred ) {dfsplain_e528,13627
int dfsplain_r( Abc_Obj_t *pObj, Abc_Obj_t *pPred ) {dfsplain_r617,15448

src/opt/fret/fretInit.c,2566
#undef DEBUG_PRINT_INIT_NTKDEBUG_PRINT_INIT_NTK34,711
Abc_FlowRetime_InitState( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_InitState75,2302
Abc_FlowRetime_ObjFirstNonLatchBox( Abc_Obj_t * pOrigObj, Abc_Obj_t ** pResult ) {Abc_FlowRetime_ObjFirstNonLatchBox98,2861
Abc_FlowRetime_PrintInitStateInfo( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_PrintInitStateInfo133,3727
void Abc_FlowRetime_UpdateForwardInit( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_UpdateForwardInit163,4591
void Abc_FlowRetime_UpdateForwardInit_rec( Abc_Obj_t * pObj ) {Abc_FlowRetime_UpdateForwardInit_rec184,5076
static void Abc_FlowRetime_EvalHop_rec( Hop_Man_t *pHop, Hop_Obj_t *pObj, int *f, int *dc ) {Abc_FlowRetime_EvalHop_rec214,5826
static inline void Abc_FlowRetime_SetInitValue( Abc_Obj_t * pObj,Abc_FlowRetime_SetInitValue267,6960
void Abc_FlowRetime_SimulateNode( Abc_Obj_t * pObj ) {Abc_FlowRetime_SimulateNode293,7532
void Abc_FlowRetime_SimulateSop( Abc_Obj_t * pObj, char *pSop ) {Abc_FlowRetime_SimulateSop437,11330
void Abc_FlowRetime_SetupBackwardInit( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_SetupBackwardInit489,12582
int Abc_FlowRetime_SolveBackwardInit( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_SolveBackwardInit552,14364
void Abc_FlowRetime_UpdateBackwardInit( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_UpdateBackwardInit665,17567
Abc_Obj_t *Abc_FlowRetime_CopyNodeToInitNtk( Abc_Obj_t *pOrigObj ) {Abc_FlowRetime_CopyNodeToInitNtk737,19541
Abc_Obj_t* Abc_FlowRetime_UpdateBackwardInit_rec( Abc_Obj_t *pOrigObj) {Abc_FlowRetime_UpdateBackwardInit_rec831,22767
void Abc_FlowRetime_VerifyBackwardInit( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_VerifyBackwardInit894,24604
void Abc_FlowRetime_VerifyBackwardInit_rec( Abc_Obj_t * pObj ) {Abc_FlowRetime_VerifyBackwardInit_rec918,25291
int Abc_FlowRetime_PartialSat(Vec_Ptr_t *vNodes, int cut) {Abc_FlowRetime_PartialSat956,26231
void Abc_FlowRetime_ConstrainInit( ) {Abc_FlowRetime_ConstrainInit1023,27988
void Abc_FlowRetime_RemoveInitBias( ) {Abc_FlowRetime_RemoveInitBias1126,30527
static void Abc_FlowRetime_ConnectBiasNode(Abc_Obj_t *pBiasNode, Abc_Obj_t *pObj, int biasLag) {Abc_FlowRetime_ConnectBiasNode1159,31512
void Abc_FlowRetime_AddInitBias( ) {Abc_FlowRetime_AddInitBias1218,32988
void Abc_FlowRetime_ClearInitToOrig( Abc_Obj_t *pInit )Abc_FlowRetime_ClearInitToOrig1257,34250
void Abc_FlowRetime_SetInitToOrig( Abc_Obj_t *pInit, Abc_Obj_t *pOrig)Abc_FlowRetime_SetInitToOrig1285,35070
void Abc_FlowRetime_GetInitToOrig( Abc_Obj_t *pInit, Abc_Obj_t **pOrig, int *lag ) {Abc_FlowRetime_GetInitToOrig1324,36258

src/opt/fret/fretMain.c,2485
MinRegMan_t *pManMR;pManMR52,1620
int          fPathError = 0;fPathError54,1642
Abc_FlowRetime_MinReg( Abc_Ntk_t * pNtk, int fVerbose, Abc_FlowRetime_MinReg72,2173
Abc_FlowRetime_MainLoop( ) {Abc_FlowRetime_MainLoop230,7241
Abc_FlowRetime_RemoveLatchBubbles( Abc_Obj_t * pLatch ) {Abc_FlowRetime_RemoveLatchBubbles372,11210
Abc_FlowRetime_MarkBlocks( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_MarkBlocks416,12418
Abc_FlowRetime_PushFlows( Abc_Ntk_t * pNtk, int fVerbose ) {Abc_FlowRetime_PushFlows479,14065
Abc_FlowRetime_FixLatchBoxes( Abc_Ntk_t *pNtk, Vec_Ptr_t *vBoxIns ) {Abc_FlowRetime_FixLatchBoxes545,15730
Abc_FlowRetime_VerifyPathLatencies( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_VerifyPathLatencies662,19162
Abc_FlowRetime_VerifyPathLatencies_rec( Abc_Obj_t * pObj, int markD ) {Abc_FlowRetime_VerifyPathLatencies_rec697,19890
Abc_FlowRetime_CopyInitState( Abc_Obj_t * pSrc, Abc_Obj_t * pDest ) {Abc_FlowRetime_CopyInitState777,21970
Abc_FlowRetime_ImplementCut( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_ImplementCut813,22823
Abc_FlowRetime_AddDummyFanin( Abc_Obj_t * pObj ) {Abc_FlowRetime_AddDummyFanin923,26101
print_node(Abc_Obj_t *pObj) {print_node945,26624
print_node2(Abc_Obj_t *pObj) {print_node2969,27304
print_node3(Abc_Obj_t *pObj) {print_node3992,27798
Abc_ObjBetterTransferFanout( Abc_Obj_t * pFrom, Abc_Obj_t * pTo, int complement ) {Abc_ObjBetterTransferFanout1032,28678
Abc_FlowRetime_IsAcrossCut( Abc_Obj_t *pObj, Abc_Obj_t *pNext ) {Abc_FlowRetime_IsAcrossCut1054,29257
void Abc_FlowRetime_ClearFlows( int fClearAll ) {Abc_FlowRetime_ClearFlows1087,30159
static Abc_Ntk_t* Abc_FlowRetime_NtkDup( Abc_Ntk_t * pNtk ) {Abc_FlowRetime_NtkDup1115,30897
Abc_Ntk_t * Abc_FlowRetime_NtkSilentRestrash( Abc_Ntk_t * pNtk, int fCleanup )Abc_FlowRetime_NtkSilentRestrash1184,32895
Abc_FlowRetime_UpdateLags_forw_rec( Abc_Obj_t *pObj ) {Abc_FlowRetime_UpdateLags_forw_rec1227,34324
Abc_FlowRetime_UpdateLags_back_rec( Abc_Obj_t *pObj ) {Abc_FlowRetime_UpdateLags_back_rec1261,35076
Abc_FlowRetime_UpdateLags( ) {Abc_FlowRetime_UpdateLags1294,35797
Abc_FlowRetime_GetLag( Abc_Obj_t *pObj ) {Abc_FlowRetime_GetLag1323,36490
Abc_FlowRetime_SetLag( Abc_Obj_t *pObj, int lag ) {Abc_FlowRetime_SetLag1342,36955
static void Abc_ObjPrintNeighborhood_rec( Abc_Obj_t *pObj, Vec_Ptr_t *vNodes, int depth ) {Abc_ObjPrintNeighborhood_rec1350,37166
void Abc_ObjPrintNeighborhood( Abc_Obj_t *pObj, int depth ) {Abc_ObjPrintNeighborhood1369,37629

src/opt/fxch/Fxch.c,282
void Fxch_CubesGruping(Fxch_Man_t* pFxchMan)Fxch_CubesGruping37,934
void Fxch_CubesUnGruping(Fxch_Man_t* pFxchMan)Fxch_CubesUnGruping106,3193
int Fxch_FastExtract( Vec_Wec_t* vCubes,Fxch_FastExtract160,4997
int Abc_NtkFxchPerform( Abc_Ntk_t* pNtk,Abc_NtkFxchPerform229,6923

src/opt/fxch/FxchDiv.c,572
static inline int Fxch_DivNormalize( Vec_Int_t* vCubeFree )Fxch_DivNormalize26,845
int Fxch_DivCreate( Fxch_Man_t* pFxchMan,Fxch_DivCreate112,4119
int Fxch_DivAdd( Fxch_Man_t* pFxchMan,Fxch_DivAdd228,8254
int Fxch_DivRemove( Fxch_Man_t* pFxchMan,Fxch_DivRemove291,10354
void Fxch_DivSepareteCubes( Vec_Int_t* vDiv,Fxch_DivSepareteCubes339,11954
int Fxch_DivRemoveLits( Vec_Int_t* vCube0,Fxch_DivRemoveLits380,13160
void Fxch_DivPrint( Fxch_Man_t* pFxchMan,Fxch_DivPrint446,15108
int Fxch_DivIsNotConstant1( Vec_Int_t* vDiv )Fxch_DivIsNotConstant1470,15786

src/opt/fxch/FxchMan.c,1724
static inline int Fxch_ManSCAddRemove( Fxch_Man_t* pFxchMan,Fxch_ManSCAddRemove25,702
static inline int Fxch_ManDivSingleCube( Fxch_Man_t* pFxchMan,Fxch_ManDivSingleCube52,1595
static inline void Fxch_ManDivDoubleCube( Fxch_Man_t* pFxchMan,Fxch_ManDivDoubleCube103,3128
static inline void Fxch_ManCompressCubes( Vec_Wec_t* vCubes,Fxch_ManCompressCubes152,4821
Fxch_Man_t* Fxch_ManAlloc( Vec_Wec_t* vCubes )Fxch_ManAlloc169,5416
void Fxch_ManFree( Fxch_Man_t* pFxchMan )Fxch_ManFree192,6100
void Fxch_ManMapLiteralsIntoCubes( Fxch_Man_t* pFxchMan,Fxch_ManMapLiteralsIntoCubes215,6775
void Fxch_ManGenerateLitHashKeys( Fxch_Man_t* pFxchMan )Fxch_ManGenerateLitHashKeys255,8237
void Fxch_ManSCHashTablesInit( Fxch_Man_t* pFxchMan )Fxch_ManSCHashTablesInit265,8606
void Fxch_ManSCHashTablesFree( Fxch_Man_t* pFxchMan )Fxch_ManSCHashTablesFree283,9075
void Fxch_ManDivCreate( Fxch_Man_t* pFxchMan )Fxch_ManDivCreate288,9188
int Fxch_ManComputeLevelDiv( Fxch_Man_t* pFxchMan,Fxch_ManComputeLevelDiv312,9883
int Fxch_ManComputeLevelCube( Fxch_Man_t* pFxchMan,Fxch_ManComputeLevelCube325,10225
void Fxch_ManComputeLevel( Fxch_Man_t* pFxchMan )Fxch_ManComputeLevel338,10536
static inline void Fxch_ManExtractDivFromCube( Fxch_Man_t* pFxchMan,Fxch_ManExtractDivFromCube361,11197
static inline void Fxch_ManExtractDivFromCubePairs( Fxch_Man_t* pFxchMan,Fxch_ManExtractDivFromCubePairs388,12169
static inline int Fxch_ManCreateCube( Fxch_Man_t* pFxchMan,Fxch_ManCreateCube512,16845
void Fxch_ManUpdate( Fxch_Man_t* pFxchMan,Fxch_ManUpdate584,19375
void Fxch_ManPrintDivs( Fxch_Man_t* pFxchMan )Fxch_ManPrintDivs764,25682
void Fxch_ManPrintStats( Fxch_Man_t* pFxchMan )Fxch_ManPrintStats772,25864

src/opt/fxch/Fxch.h,3413
#define ABC__opt__fxch__fxch_hABC__opt__fxch__fxch_h20,496
typedef unsigned char uint8_t;uint8_t31,700
typedef unsigned int  uint32_t;uint32_t32,731
typedef struct Fxch_Man_t_               Fxch_Man_t;Fxch_Man_t37,983
typedef struct Fxch_SubCube_t_           Fxch_SubCube_t;Fxch_SubCube_t38,1036
typedef struct Fxch_SCHashTable_t_       Fxch_SCHashTable_t;Fxch_SCHashTable_t39,1093
typedef struct Fxch_SCHashTable_Entry_t_ Fxch_SCHashTable_Entry_t;Fxch_SCHashTable_Entry_t40,1154
struct Fxch_SubCube_t_Fxch_SubCube_t_59,2106
    uint32_t Id,Id61,2131
             iCube;iCube62,2148
    uint32_t iLit0 : 16,iLit063,2168
             iLit1 : 16;iLit164,2193
struct Fxch_SCHashTable_Entry_t_Fxch_SCHashTable_Entry_t_69,2249
    Fxch_SubCube_t* vSCData;vSCData71,2284
    uint32_t Size : 16,Size72,2313
             Cap : 16;Cap73,2337
struct Fxch_SCHashTable_t_Fxch_SCHashTable_t_76,2364
    Fxch_Man_t* pFxchMan;pFxchMan78,2393
    Fxch_SCHashTable_Entry_t* pBins;pBins80,2443
    unsigned int nEntries,nEntries81,2480
                 SizeMask;SizeMask82,2507
    Vec_Int_t    vSubCube0;vSubCube085,2560
    Vec_Int_t    vSubCube1;vSubCube186,2588
struct Fxch_Man_t_Fxch_Man_t_89,2620
    Vec_Wec_t* vCubes;vCubes92,2663
    int nCubesInit;nCubesInit93,2686
    int LitCountMax;LitCountMax94,2706
    Fxch_SCHashTable_t* pSCHashTable;pSCHashTable97,2752
    Vec_Wec_t*    vLits;        /* lit -> cube */vLits99,2791
    Vec_Int_t*    vLitCount;    /* literal counts (currently not used) */vLitCount100,2841
    Vec_Int_t*    vLitHashKeys; /* Literal hash keys used to generate subcube hash */vLitHashKeys101,2915
    Hsh_VecMan_t* pDivHash;pDivHash103,3002
    Vec_Flt_t*    vDivWeights;   /* divisor weights */vDivWeights104,3030
    Vec_Que_t*    vDivPrio;      /* priority queue for divisors by weight */vDivPrio105,3085
    Vec_Wec_t*    vDivCubePairs; /* cube pairs for each div */vDivCubePairs106,3162
    Vec_Int_t*    vLevels;       /* variable levels */vLevels108,3226
    Vec_Int_t* vTranslation;vTranslation111,3303
    Vec_Int_t* vOutputID;vOutputID112,3332
    int* pTempOutputID;pTempOutputID113,3358
    int  nSizeOutputID;nSizeOutputID114,3382
    Vec_Int_t* vCubesS;    /* cubes for the given single cube divisor */vCubesS117,3486
    Vec_Int_t* vPairs;     /* cube pairs for the given double cube divisor */vPairs118,3559
    Vec_Int_t* vCubeFree;  // cube-free divisorvCubeFree119,3637
    Vec_Int_t* vDiv;       // selected divisorvDiv120,3685
    Vec_Int_t* vCubesToRemove;vCubesToRemove122,3733
    Vec_Int_t* vCubesToUpdate;vCubesToUpdate123,3764
    Vec_Int_t* vSCC;vSCC124,3795
    abctime timeInit;   /* Initialization time */timeInit127,3838
    abctime timeExt;    /* Extraction time */timeExt128,3888
    int     nVars;      // original problem variablesnVars129,3934
    int     nLits;      // the number of SOP literalsnLits130,3988
    int     nPairsS;    // number of lit pairsnPairsS131,4042
    int     nPairsD;    // number of cube pairsnPairsD132,4089
    int     nExtDivs;   /* Number of extracted divisor */nExtDivs133,4137
static inline int Fxch_CountOnes( unsigned num )Fxch_CountOnes147,4817
static inline Vec_Int_t* Fxch_ManGetCube( Fxch_Man_t* pFxchMan,Fxch_ManGetCube184,6978
static inline int Fxch_ManGetLit( Fxch_Man_t* pFxchMan,Fxch_ManGetLit190,7153

src/opt/fxch/FxchSCHashTable.c,904
static inline void MurmurHash3_x86_32 ( const void* key,MurmurHash3_x86_3225,718
Fxch_SCHashTable_t* Fxch_SCHashTableCreate( Fxch_Man_t* pFxchMan,Fxch_SCHashTableCreate89,2016
void Fxch_SCHashTableDelete( Fxch_SCHashTable_t* pSCHashTable )Fxch_SCHashTableDelete103,2476
static inline Fxch_SCHashTable_Entry_t* Fxch_SCHashTableBin( Fxch_SCHashTable_t* pSCHashTable,Fxch_SCHashTableBin114,2824
static inline int Fxch_SCHashTableEntryCompare( Fxch_SCHashTable_t* pSCHashTable,Fxch_SCHashTableEntryCompare120,3081
int Fxch_SCHashTableInsert( Fxch_SCHashTable_t* pSCHashTable,Fxch_SCHashTableInsert175,5525
int Fxch_SCHashTableRemove( Fxch_SCHashTable_t* pSCHashTable,Fxch_SCHashTableRemove271,8904
unsigned int Fxch_SCHashTableMemory( Fxch_SCHashTable_t* pHashTable )Fxch_SCHashTableMemory358,11852
void Fxch_SCHashTablePrint( Fxch_SCHashTable_t* pHashTable )Fxch_SCHashTablePrint367,12076

src/generic.h,45
#define ABC__generic_hABC__generic_h22,494

src/template.c,622
typedef struct Xyz_ParTry_t_ Xyz_ParTry_t;Xyz_ParTry_t30,744
struct Xyz_ParTry_t_Xyz_ParTry_t_31,787
    int                Par;Par33,810
typedef struct Xyz_ManTry_t_ Xyz_ManTry_t;Xyz_ManTry_t37,864
struct Xyz_ManTry_t_Xyz_ManTry_t_38,907
    Xyz_ParTry_t *     pPar;           // parameterspPar40,930
    Aig_Man_t *        pAig;           // user's AIG pAig41,983
Xyz_ManTry_t * Xyz_ManTryAlloc( Aig_Man_t * pAig, Xyz_ParTry_t * pPar )Xyz_ManTryAlloc59,1496
void Xyz_ManTryFree( Xyz_ManTry_t * p )Xyz_ManTryFree79,1928
int Xyz_ManPerform( Aig_Man_t * pAig, Xyz_ParTry_t * pPar )Xyz_ManPerform95,2226

src/aig/ivy/ivyMan.c,1020
Ivy_Man_t * Ivy_ManStart()Ivy_ManStart45,1238
Ivy_Man_t * Ivy_ManStartFrom( Ivy_Man_t * p )Ivy_ManStartFrom85,2333
Ivy_Man_t * Ivy_ManDup( Ivy_Man_t * p )Ivy_ManDup110,2929
Ivy_Man_t * Ivy_ManFrames( Ivy_Man_t * pMan, int nLatches, int nFrames, int fInit, Vec_Ptr_t ** pvMapping )Ivy_ManFrames172,5098
void Ivy_ManStop( Ivy_Man_t * p )Ivy_ManStop238,7548
int Ivy_ManCleanup( Ivy_Man_t * p )Ivy_ManCleanup265,8437
void Ivy_ManCleanupSeq_rec( Ivy_Obj_t * pObj )Ivy_ManCleanupSeq_rec289,9208
int Ivy_ManCleanupSeq( Ivy_Man_t * p )Ivy_ManCleanupSeq311,9830
int Ivy_ManLatchIsSelfFeed_rec( Ivy_Obj_t * pLatch, Ivy_Obj_t * pLatchRoot )Ivy_ManLatchIsSelfFeed_rec375,11773
int Ivy_ManLatchIsSelfFeed( Ivy_Obj_t * pLatch )Ivy_ManLatchIsSelfFeed395,12326
int Ivy_ManPropagateBuffers( Ivy_Man_t * p, int fUpdateLevel )Ivy_ManPropagateBuffers414,12786
void Ivy_ManPrintStats( Ivy_Man_t * p )Ivy_ManPrintStats456,14271
void Ivy_ManMakeSeq( Ivy_Man_t * p, int nLatches, int * pInits )Ivy_ManMakeSeq482,15150

src/aig/ivy/ivyMulti8.c,1434
typedef struct Ivy_Eval_t_ Ivy_Eval_t;Ivy_Eval_t30,795
struct Ivy_Eval_t_Ivy_Eval_t_31,834
    unsigned Mask   :  5;  // the mask of covered nodesMask33,855
    unsigned Weight :  3;  // the number of covered nodesWeight34,911
    unsigned Cost   :  4;  // the number of overlapping nodesCost35,969
    unsigned Level  : 12;  // the level of this nodeLevel36,1031
    unsigned Fan0   :  4;  // the first faninFan037,1084
    unsigned Fan1   :  4;  // the second faninFan138,1130
Ivy_Obj_t * Ivy_Multi_rec( Ivy_Obj_t ** ppObjs, int nObjs, Ivy_Type_t Type )Ivy_Multi_rec62,2101
Ivy_Obj_t * Ivy_Multi( Ivy_Obj_t ** pArgsInit, int nArgs, Ivy_Type_t Type )Ivy_Multi83,2741
Ivy_Obj_t * Ivy_MultiBuild_rec( Ivy_Eval_t * pEvals, int iNum, Ivy_Obj_t ** pArgs, int nArgs, Ivy_Type_t Type )Ivy_MultiBuild_rec218,7488
void Ivy_MultiSort( Ivy_Obj_t ** pArgs, int nArgs )Ivy_MultiSort239,8192
int Ivy_MultiPushUniqueOrderByLevel( Ivy_Obj_t ** pArray, int nArgs, Ivy_Obj_t * pNode )Ivy_MultiPushUniqueOrderByLevel267,8878
Ivy_Obj_t * Ivy_MultiBalance_rec( Ivy_Obj_t ** pArgs, int nArgs, Ivy_Type_t Type )Ivy_MultiBalance_rec301,9790
Ivy_Obj_t * Ivy_MultiEval( Ivy_Obj_t ** pArgs, int nArgs, Ivy_Type_t Type )Ivy_MultiEval329,10659
Ivy_Obj_t * Ivy_Multi1( Ivy_Obj_t ** pArgs, int nArgs, Ivy_Type_t Type )Ivy_Multi1363,11595
Ivy_Obj_t * Ivy_Multi2( Ivy_Obj_t ** pArgs, int nArgs, Ivy_Type_t Type )Ivy_Multi2419,13318

src/aig/ivy/ivy.h,21033
#define ABC__aig__ivy__ivy_hABC__aig__ivy__ivy_h22,531
typedef struct Ivy_Man_t_            Ivy_Man_t;Ivy_Man_t46,1330
typedef struct Ivy_Obj_t_            Ivy_Obj_t;Ivy_Obj_t47,1378
typedef int                          Ivy_Edge_t;Ivy_Edge_t48,1426
typedef struct Ivy_FraigParams_t_    Ivy_FraigParams_t;Ivy_FraigParams_t49,1475
    IVY_NONE,                        // 0: non-existent objectIVY_NONE53,1564
    IVY_PI,                          // 1: primary input (and constant 1 node)IVY_PI54,1627
    IVY_PO,                          // 2: primary outputIVY_PO55,1706
    IVY_ASSERT,                      // 3: assertionIVY_ASSERT56,1764
    IVY_LATCH,                       // 4: sequential elementIVY_LATCH57,1817
    IVY_AND,                         // 5: AND nodeIVY_AND58,1879
    IVY_EXOR,                        // 6: EXOR nodeIVY_EXOR59,1931
    IVY_BUF,                         // 7: buffer (temporary)IVY_BUF60,1984
    IVY_VOID                         // 8: unused objectIVY_VOID61,2046
} Ivy_Type_t;Ivy_Type_t62,2103
    IVY_INIT_NONE,                   // 0: not a latchIVY_INIT_NONE66,2158
    IVY_INIT_0,                      // 1: zeroIVY_INIT_067,2213
    IVY_INIT_1,                      // 2: oneIVY_INIT_168,2261
    IVY_INIT_DC                      // 3: don't-careIVY_INIT_DC69,2308
} Ivy_Init_t;Ivy_Init_t70,2362
struct Ivy_Obj_t_  // 24 bytes (32-bit) or 32 bytes (64-bit)   // 10 words - 16 wordsIvy_Obj_t_73,2393
    int              Id;             // integer IDId75,2481
    int              TravId;         // traversal IDTravId76,2532
    unsigned         Type     :  4;  // object typeType77,2585
    unsigned         fMarkA   :  1;  // multipurpose maskfMarkA78,2637
    unsigned         fMarkB   :  1;  // multipurpose maskfMarkB79,2695
    unsigned         fExFan   :  1;  // set to 1 if last fanout added is EXORfExFan80,2753
    unsigned         fPhase   :  1;  // value under 000...0 patternfPhase81,2831
    unsigned         fFailTfo :  1;  // the TFO of the failed nodefFailTfo82,2899
    unsigned         Init     :  2;  // latch initial valueInit83,2966
    unsigned         Level    : 21;  // logic levelLevel84,3026
    int              nRefs;          // reference counternRefs85,3078
    Ivy_Obj_t *      pFanin0;        // faninpFanin086,3136
    Ivy_Obj_t *      pFanin1;        // faninpFanin187,3182
    Ivy_Obj_t *      pFanout;        // fanoutpFanout88,3228
    Ivy_Obj_t *      pNextFan0;      // next fanout of the first faninpNextFan089,3275
    Ivy_Obj_t *      pNextFan1;      // next fanout of the second faninpNextFan190,3346
    Ivy_Obj_t *      pPrevFan0;      // prev fanout of the first faninpPrevFan091,3418
    Ivy_Obj_t *      pPrevFan1;      // prev fanout of the second faninpPrevFan192,3489
    Ivy_Obj_t *      pEquiv;         // equivalent nodepEquiv93,3561
struct Ivy_Man_t_Ivy_Man_t_97,3640
    Vec_Ptr_t *      vPis;           // the array of PIsvPis100,3677
    Vec_Ptr_t *      vPos;           // the array of POsvPos101,3734
    Vec_Ptr_t *      vBufs;          // the array of buffersvBufs102,3791
    Vec_Ptr_t *      vObjs;          // the array of objectsvObjs103,3852
    Ivy_Obj_t *      pConst1;        // the constant 1 nodepConst1104,3913
    Ivy_Obj_t        Ghost;          // the ghost nodeGhost105,3973
    int              nObjs[IVY_VOID];// the number of objects by typenObjs107,4053
    int              nCreated;       // the number of created objectsnCreated108,4123
    int              nDeleted;       // the number of deleted objectsnDeleted109,4193
    int *            pTable;         // structural hash tablepTable111,4291
    int              nTableSize;     // structural hash table sizenTableSize112,4353
    int              fCatchExor;     // set to 1 to detect EXORsfCatchExor114,4448
    int              nTravIds;       // the traversal IDnTravIds115,4513
    int              nLevelMax;      // the maximum levelnLevelMax116,4570
    Vec_Int_t *      vRequired;      // required timesvRequired117,4628
    int              fFanout;        // fanout is allocatedfFanout118,4683
    void *           pData;          // the temporary datapData119,4743
    void *           pCopy;          // the temporary datapCopy120,4802
    Ivy_Man_t *      pHaig;          // history AIG if presentpHaig121,4861
    int              nClassesSkip;   // the number of skipped classesnClassesSkip122,4924
    Vec_Ptr_t *      vChunks;        // allocated memory piecesvChunks124,5019
    Vec_Ptr_t *      vPages;         // memory pages used by nodesvPages125,5083
    Ivy_Obj_t *      pListFree;      // the list of free nodes pListFree126,5150
    abctime          time1;time1128,5239
    abctime          time2;time2129,5267
struct Ivy_FraigParams_t_Ivy_FraigParams_t_132,5299
    int              nSimWords;         // the number of words in the simulation infonSimWords134,5327
    double           dSimSatur;         // the ratio of refined classes when saturation is reacheddSimSatur135,5413
    int              fPatScores;        // enables simulation pattern scoringfPatScores136,5512
    int              MaxScore;          // max score after which resimulation is usedMaxScore137,5590
    double           dActConeRatio;     // the ratio of cone to be bumpeddActConeRatio138,5676
    double           dActConeBumpMax;   // the largest bump in activitydActConeBumpMax139,5750
    int              fProve;            // prove the miter outputsfProve140,5822
    int              fVerbose;          // verbose outputfVerbose141,5889
    int              fDoSparse;         // skip sparse functionsfDoSparse142,5947
    int              nBTLimitNode;      // conflict limit at a nodenBTLimitNode143,6012
    int              nBTLimitMiter;     // conflict limit at an outputnBTLimitMiter144,6080
#define IVY_CUT_LIMIT IVY_CUT_LIMIT152,6439
#define IVY_CUT_INPUT IVY_CUT_INPUT153,6469
typedef struct Ivy_Cut_t_ Ivy_Cut_t;Ivy_Cut_t155,6500
struct Ivy_Cut_t_Ivy_Cut_t_156,6537
    int         nLatches;nLatches158,6557
    short       nSize;nSize159,6583
    short       nSizeMax;nSizeMax160,6606
    int         pArray[IVY_CUT_INPUT];pArray161,6632
    unsigned    uHash;uHash162,6671
typedef struct Ivy_Store_t_ Ivy_Store_t;Ivy_Store_t165,6698
struct Ivy_Store_t_Ivy_Store_t_166,6739
    int         nCuts;nCuts168,6761
    int         nCutsM;nCutsM169,6784
    int         nCutsMax;nCutsMax170,6808
    int         fSatur;fSatur171,6834
    Ivy_Cut_t   pCuts[IVY_CUT_LIMIT]; // storage for cutspCuts172,6858
#define IVY_LEAF_MASK IVY_LEAF_MASK175,6920
#define IVY_LEAF_BITS IVY_LEAF_BITS176,6950
#define IVY_MIN(IVY_MIN182,7201
#define IVY_MAX(IVY_MAX183,7253
static inline int          Ivy_BitWordNum( int nBits )            { return (nBits>>5) + ((nBits&31) > 0);           }Ivy_BitWordNum187,7354
static inline int          Ivy_TruthWordNum( int nVars )          { return nVars <= 5 ? 1 : (1 << (nVars - 5));     }Ivy_TruthWordNum188,7472
static inline int          Ivy_InfoHasBit( unsigned * p, int i )  { return (p[(i)>>5] & (1<<((i) & 31))) > 0;       }Ivy_InfoHasBit189,7590
static inline void         Ivy_InfoSetBit( unsigned * p, int i )  { p[(i)>>5] |= (1<<((i) & 31));                   }Ivy_InfoSetBit190,7708
static inline void         Ivy_InfoXorBit( unsigned * p, int i )  { p[(i)>>5] ^= (1<<((i) & 31));                   }Ivy_InfoXorBit191,7826
static inline Ivy_Obj_t *  Ivy_Regular( Ivy_Obj_t * p )           { return (Ivy_Obj_t *)((ABC_PTRUINT_T)(p) & ~01); }Ivy_Regular193,7945
static inline Ivy_Obj_t *  Ivy_Not( Ivy_Obj_t * p )               { return (Ivy_Obj_t *)((ABC_PTRUINT_T)(p) ^  01); }Ivy_Not194,8063
static inline Ivy_Obj_t *  Ivy_NotCond( Ivy_Obj_t * p, int c )    { return (Ivy_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c)); }Ivy_NotCond195,8181
static inline int          Ivy_IsComplement( Ivy_Obj_t * p )      { return (int)((ABC_PTRUINT_T)(p) & 01);          }Ivy_IsComplement196,8299
static inline Ivy_Obj_t *  Ivy_ManConst0( Ivy_Man_t * p )         { return Ivy_Not(p->pConst1);                     }Ivy_ManConst0198,8418
static inline Ivy_Obj_t *  Ivy_ManConst1( Ivy_Man_t * p )         { return p->pConst1;                              }Ivy_ManConst1199,8536
static inline Ivy_Obj_t *  Ivy_ManGhost( Ivy_Man_t * p )          { return &p->Ghost;                               }Ivy_ManGhost200,8654
static inline Ivy_Obj_t *  Ivy_ManPi( Ivy_Man_t * p, int i )      { return (Ivy_Obj_t *)Vec_PtrEntry(p->vPis, i);   }Ivy_ManPi201,8772
static inline Ivy_Obj_t *  Ivy_ManPo( Ivy_Man_t * p, int i )      { return (Ivy_Obj_t *)Vec_PtrEntry(p->vPos, i);   }Ivy_ManPo202,8890
static inline Ivy_Obj_t *  Ivy_ManObj( Ivy_Man_t * p, int i )     { return (Ivy_Obj_t *)Vec_PtrEntry(p->vObjs, i);  }Ivy_ManObj203,9008
static inline Ivy_Edge_t   Ivy_EdgeCreate( int Id, int fCompl )            { return (Id << 1) | fCompl;             }Ivy_EdgeCreate205,9127
static inline int          Ivy_EdgeId( Ivy_Edge_t Edge )                   { return Edge >> 1;                      }Ivy_EdgeId206,9245
static inline int          Ivy_EdgeIsComplement( Ivy_Edge_t Edge )         { return Edge & 1;                       }Ivy_EdgeIsComplement207,9363
static inline Ivy_Edge_t   Ivy_EdgeRegular( Ivy_Edge_t Edge )              { return (Edge >> 1) << 1;               }Ivy_EdgeRegular208,9481
static inline Ivy_Edge_t   Ivy_EdgeNot( Ivy_Edge_t Edge )                  { return Edge ^ 1;                       }Ivy_EdgeNot209,9599
static inline Ivy_Edge_t   Ivy_EdgeNotCond( Ivy_Edge_t Edge, int fCond )   { return Edge ^ fCond;                   }Ivy_EdgeNotCond210,9717
static inline Ivy_Edge_t   Ivy_EdgeFromNode( Ivy_Obj_t * pNode )           { return Ivy_EdgeCreate( Ivy_Regular(pNode)->Id, Ivy_IsComplement(pNode) );          }Ivy_EdgeFromNode211,9835
static inline Ivy_Obj_t *  Ivy_EdgeToNode( Ivy_Man_t * p, Ivy_Edge_t Edge ){ return Ivy_NotCond( Ivy_ManObj(p, Ivy_EdgeId(Edge)), Ivy_EdgeIsComplement(Edge) ); }Ivy_EdgeToNode212,9997
static inline int          Ivy_LeafCreate( int Id, int Lat )      { return (Id << IVY_LEAF_BITS) | Lat;         }Ivy_LeafCreate214,10160
static inline int          Ivy_LeafId( int Leaf )                 { return Leaf >> IVY_LEAF_BITS;               }Ivy_LeafId215,10274
static inline int          Ivy_LeafLat( int Leaf )                { return Leaf & IVY_LEAF_MASK;                }Ivy_LeafLat216,10388
static inline int          Ivy_ManPiNum( Ivy_Man_t * p )          { return p->nObjs[IVY_PI];                    }Ivy_ManPiNum218,10503
static inline int          Ivy_ManPoNum( Ivy_Man_t * p )          { return p->nObjs[IVY_PO];                    }Ivy_ManPoNum219,10617
static inline int          Ivy_ManAssertNum( Ivy_Man_t * p )      { return p->nObjs[IVY_ASSERT];                }Ivy_ManAssertNum220,10731
static inline int          Ivy_ManLatchNum( Ivy_Man_t * p )       { return p->nObjs[IVY_LATCH];                 }Ivy_ManLatchNum221,10845
static inline int          Ivy_ManAndNum( Ivy_Man_t * p )         { return p->nObjs[IVY_AND];                   }Ivy_ManAndNum222,10959
static inline int          Ivy_ManExorNum( Ivy_Man_t * p )        { return p->nObjs[IVY_EXOR];                  }Ivy_ManExorNum223,11073
static inline int          Ivy_ManBufNum( Ivy_Man_t * p )         { return p->nObjs[IVY_BUF];                   }Ivy_ManBufNum224,11187
static inline int          Ivy_ManObjNum( Ivy_Man_t * p )         { return p->nCreated - p->nDeleted;           }Ivy_ManObjNum225,11301
static inline int          Ivy_ManObjIdMax( Ivy_Man_t * p )       { return Vec_PtrSize(p->vObjs)-1;             }Ivy_ManObjIdMax226,11415
static inline int          Ivy_ManNodeNum( Ivy_Man_t * p )        { return p->nObjs[IVY_AND]+p->nObjs[IVY_EXOR];}Ivy_ManNodeNum227,11529
static inline int          Ivy_ManHashObjNum( Ivy_Man_t * p )     { return p->nObjs[IVY_AND]+p->nObjs[IVY_EXOR]+p->nObjs[IVY_LATCH];     }Ivy_ManHashObjNum228,11643
static inline int          Ivy_ManGetCost( Ivy_Man_t * p )        { return p->nObjs[IVY_AND]+3*p->nObjs[IVY_EXOR]+8*p->nObjs[IVY_LATCH]; }Ivy_ManGetCost229,11782
static inline Ivy_Type_t   Ivy_ObjType( Ivy_Obj_t * pObj )        { return (Ivy_Type_t)pObj->Type;               }Ivy_ObjType231,11922
static inline Ivy_Init_t   Ivy_ObjInit( Ivy_Obj_t * pObj )        { return (Ivy_Init_t)pObj->Init;               }Ivy_ObjInit232,12037
static inline int          Ivy_ObjIsConst1( Ivy_Obj_t * pObj )    { return pObj->Id == 0;            }Ivy_ObjIsConst1233,12152
static inline int          Ivy_ObjIsGhost( Ivy_Obj_t * pObj )     { return pObj->Id < 0;             }Ivy_ObjIsGhost234,12255
static inline int          Ivy_ObjIsNone( Ivy_Obj_t * pObj )      { return pObj->Type == IVY_NONE;   }Ivy_ObjIsNone235,12358
static inline int          Ivy_ObjIsPi( Ivy_Obj_t * pObj )        { return pObj->Type == IVY_PI;     }Ivy_ObjIsPi236,12461
static inline int          Ivy_ObjIsPo( Ivy_Obj_t * pObj )        { return pObj->Type == IVY_PO;     }Ivy_ObjIsPo237,12564
static inline int          Ivy_ObjIsCi( Ivy_Obj_t * pObj )        { return pObj->Type == IVY_PI || pObj->Type == IVY_LATCH; }Ivy_ObjIsCi238,12667
static inline int          Ivy_ObjIsCo( Ivy_Obj_t * pObj )        { return pObj->Type == IVY_PO || pObj->Type == IVY_LATCH; }Ivy_ObjIsCo239,12793
static inline int          Ivy_ObjIsAssert( Ivy_Obj_t * pObj )    { return pObj->Type == IVY_ASSERT; }Ivy_ObjIsAssert240,12919
static inline int          Ivy_ObjIsLatch( Ivy_Obj_t * pObj )     { return pObj->Type == IVY_LATCH;  }Ivy_ObjIsLatch241,13022
static inline int          Ivy_ObjIsAnd( Ivy_Obj_t * pObj )       { return pObj->Type == IVY_AND;    }Ivy_ObjIsAnd242,13125
static inline int          Ivy_ObjIsExor( Ivy_Obj_t * pObj )      { return pObj->Type == IVY_EXOR;   }Ivy_ObjIsExor243,13228
static inline int          Ivy_ObjIsBuf( Ivy_Obj_t * pObj )       { return pObj->Type == IVY_BUF;    }Ivy_ObjIsBuf244,13331
static inline int          Ivy_ObjIsNode( Ivy_Obj_t * pObj )      { return pObj->Type == IVY_AND || pObj->Type == IVY_EXOR; }Ivy_ObjIsNode245,13434
static inline int          Ivy_ObjIsTerm( Ivy_Obj_t * pObj )      { return pObj->Type == IVY_PI  || pObj->Type == IVY_PO || pObj->Type == IVY_ASSERT; }Ivy_ObjIsTerm246,13560
static inline int          Ivy_ObjIsHash( Ivy_Obj_t * pObj )      { return pObj->Type == IVY_AND || pObj->Type == IVY_EXOR || pObj->Type == IVY_LATCH; }Ivy_ObjIsHash247,13712
static inline int          Ivy_ObjIsOneFanin( Ivy_Obj_t * pObj )  { return pObj->Type == IVY_PO  || pObj->Type == IVY_ASSERT || pObj->Type == IVY_BUF || pObj->Type == IVY_LATCH; }Ivy_ObjIsOneFanin248,13865
static inline int          Ivy_ObjIsMarkA( Ivy_Obj_t * pObj )     { return pObj->fMarkA;  }Ivy_ObjIsMarkA250,14046
static inline void         Ivy_ObjSetMarkA( Ivy_Obj_t * pObj )    { pObj->fMarkA = 1;     }Ivy_ObjSetMarkA251,14138
static inline void         Ivy_ObjClearMarkA( Ivy_Obj_t * pObj )  { pObj->fMarkA = 0;     }Ivy_ObjClearMarkA252,14230
static inline void         Ivy_ObjSetTravId( Ivy_Obj_t * pObj, int TravId )                { pObj->TravId = TravId;                               }Ivy_ObjSetTravId254,14324
static inline void         Ivy_ObjSetTravIdCurrent( Ivy_Man_t * p, Ivy_Obj_t * pObj )      { pObj->TravId = p->nTravIds;                          }Ivy_ObjSetTravIdCurrent255,14472
static inline void         Ivy_ObjSetTravIdPrevious( Ivy_Man_t * p, Ivy_Obj_t * pObj )     { pObj->TravId = p->nTravIds - 1;                      }Ivy_ObjSetTravIdPrevious256,14620
static inline int          Ivy_ObjIsTravIdCurrent( Ivy_Man_t * p, Ivy_Obj_t * pObj )       { return (int )((int)pObj->TravId == p->nTravIds);     }Ivy_ObjIsTravIdCurrent257,14768
static inline int          Ivy_ObjIsTravIdPrevious( Ivy_Man_t * p, Ivy_Obj_t * pObj )      { return (int )((int)pObj->TravId == p->nTravIds - 1); }Ivy_ObjIsTravIdPrevious258,14916
static inline int          Ivy_ObjId( Ivy_Obj_t * pObj )          { return pObj->Id;                               }Ivy_ObjId260,15065
static inline int          Ivy_ObjTravId( Ivy_Obj_t * pObj )      { return pObj->TravId;                           }Ivy_ObjTravId261,15182
static inline int          Ivy_ObjPhase( Ivy_Obj_t * pObj )       { return pObj->fPhase;                           }Ivy_ObjPhase262,15299
static inline int          Ivy_ObjExorFanout( Ivy_Obj_t * pObj )  { return pObj->fExFan;                           }Ivy_ObjExorFanout263,15416
static inline int          Ivy_ObjRefs( Ivy_Obj_t * pObj )        { return pObj->nRefs;                            }Ivy_ObjRefs264,15533
static inline void         Ivy_ObjRefsInc( Ivy_Obj_t * pObj )     { pObj->nRefs++;                                 }Ivy_ObjRefsInc265,15650
static inline void         Ivy_ObjRefsDec( Ivy_Obj_t * pObj )     { assert( pObj->nRefs > 0 ); pObj->nRefs--;      }Ivy_ObjRefsDec266,15767
static inline int          Ivy_ObjFaninId0( Ivy_Obj_t * pObj )    { return pObj->pFanin0? Ivy_ObjId(Ivy_Regular(pObj->pFanin0)) : 0; }Ivy_ObjFaninId0267,15884
static inline int          Ivy_ObjFaninId1( Ivy_Obj_t * pObj )    { return pObj->pFanin1? Ivy_ObjId(Ivy_Regular(pObj->pFanin1)) : 0; }Ivy_ObjFaninId1268,16019
static inline int          Ivy_ObjFaninC0( Ivy_Obj_t * pObj )     { return Ivy_IsComplement(pObj->pFanin0);        }Ivy_ObjFaninC0269,16154
static inline int          Ivy_ObjFaninC1( Ivy_Obj_t * pObj )     { return Ivy_IsComplement(pObj->pFanin1);        }Ivy_ObjFaninC1270,16271
static inline Ivy_Obj_t *  Ivy_ObjFanin0( Ivy_Obj_t * pObj )      { return Ivy_Regular(pObj->pFanin0);             }Ivy_ObjFanin0271,16388
static inline Ivy_Obj_t *  Ivy_ObjFanin1( Ivy_Obj_t * pObj )      { return Ivy_Regular(pObj->pFanin1);             }Ivy_ObjFanin1272,16505
static inline Ivy_Obj_t *  Ivy_ObjChild0( Ivy_Obj_t * pObj )      { return pObj->pFanin0;                          }Ivy_ObjChild0273,16622
static inline Ivy_Obj_t *  Ivy_ObjChild1( Ivy_Obj_t * pObj )      { return pObj->pFanin1;                          }Ivy_ObjChild1274,16739
static inline Ivy_Obj_t *  Ivy_ObjChild0Equiv( Ivy_Obj_t * pObj ) { assert( !Ivy_IsComplement(pObj) ); return Ivy_ObjFanin0(pObj)? Ivy_NotCond(Ivy_ObjFanin0(pObj)->pEquiv, Ivy_ObjFaninC0(pObj)) : NULL;  }Ivy_ObjChild0Equiv275,16856
static inline Ivy_Obj_t *  Ivy_ObjChild1Equiv( Ivy_Obj_t * pObj ) { assert( !Ivy_IsComplement(pObj) ); return Ivy_ObjFanin1(pObj)? Ivy_NotCond(Ivy_ObjFanin1(pObj)->pEquiv, Ivy_ObjFaninC1(pObj)) : NULL;  }Ivy_ObjChild1Equiv276,17061
static inline Ivy_Obj_t *  Ivy_ObjEquiv( Ivy_Obj_t * pObj )       { return Ivy_Regular(pObj)->pEquiv? Ivy_NotCond(Ivy_Regular(pObj)->pEquiv, Ivy_IsComplement(pObj)) : NULL; }Ivy_ObjEquiv277,17266
static inline int          Ivy_ObjLevel( Ivy_Obj_t * pObj )       { return pObj->Level;                            }Ivy_ObjLevel278,17441
static inline int          Ivy_ObjLevelNew( Ivy_Obj_t * pObj )    { return 1 + Ivy_ObjIsExor(pObj) + IVY_MAX(Ivy_ObjFanin0(pObj)->Level, Ivy_ObjFanin1(pObj)->Level);       }Ivy_ObjLevelNew279,17558
static inline int          Ivy_ObjFaninPhase( Ivy_Obj_t * pObj )  { return Ivy_IsComplement(pObj)? !Ivy_Regular(pObj)->fPhase : pObj->fPhase; }Ivy_ObjFaninPhase280,17732
static inline void         Ivy_ObjClean( Ivy_Obj_t * pObj )       Ivy_ObjClean282,17877
static inline void         Ivy_ObjOverwrite( Ivy_Obj_t * pBase, Ivy_Obj_t * pData )   Ivy_ObjOverwrite288,18046
static inline int          Ivy_ObjWhatFanin( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanin )    Ivy_ObjWhatFanin294,18250
static inline int          Ivy_ObjFanoutC( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanout )    Ivy_ObjFanoutC300,18474
static inline Ivy_Obj_t *  Ivy_ObjCreateGhost( Ivy_Man_t * p, Ivy_Obj_t * p0, Ivy_Obj_t * p1, Ivy_Type_t Type, Ivy_Init_t Init )    Ivy_ObjCreateGhost308,18774
static Ivy_Init_t Ivy_InitNotCond( Ivy_Init_t Init, int fCompl )Ivy_InitNotCond327,19653
static Ivy_Init_t Ivy_InitAnd( Ivy_Init_t InitA, Ivy_Init_t InitB )Ivy_InitAnd340,20004
static Ivy_Init_t Ivy_InitExor( Ivy_Init_t InitA, Ivy_Init_t InitB )Ivy_InitExor351,20392
static inline Ivy_Obj_t * Ivy_ManFetchMemory( Ivy_Man_t * p )  Ivy_ManFetchMemory364,20826
static inline void Ivy_ManRecycleMemory( Ivy_Man_t * p, Ivy_Obj_t * pEntry )Ivy_ManRecycleMemory374,21112
#define Ivy_ManForEachPi(Ivy_ManForEachPi387,21593
#define Ivy_ManForEachPo(Ivy_ManForEachPo390,21769
#define Ivy_ManForEachObj(Ivy_ManForEachObj393,21973
#define Ivy_ManForEachCi(Ivy_ManForEachCi396,22185
#define Ivy_ManForEachCo(Ivy_ManForEachCo399,22380
#define Ivy_ManForEachNode(Ivy_ManForEachNode402,22582
#define Ivy_ManForEachLatch(Ivy_ManForEachLatch405,22767
#define Ivy_ManForEachNodeVec(Ivy_ManForEachNodeVec408,22983
#define Ivy_ObjForEachFanout(Ivy_ObjForEachFanout411,23203

src/aig/ivy/ivyFastMap.c,5482
#define IVY_INFINITY IVY_INFINITY30,777
typedef struct Ivy_SuppMan_t_ Ivy_SuppMan_t;Ivy_SuppMan_t32,807
struct Ivy_SuppMan_t_ Ivy_SuppMan_t_33,852
    int         nLimit;    // the limit on the number of inputsnLimit35,877
    int         nObjs;     // the number of entriesnObjs36,941
    int         nSize;     // size of each entry in bytesnSize37,993
    char *      pMem;      // memory allocatedpMem38,1051
    Vec_Vec_t * vLuts;     // the array of nodes used in the mappingvLuts39,1098
typedef struct Ivy_Supp_t_ Ivy_Supp_t;Ivy_Supp_t42,1171
struct Ivy_Supp_t_ Ivy_Supp_t_43,1210
    char        nSize;     // the number of support nodesnSize45,1232
    char        fMark;     // multipurpose maskfMark46,1290
    char        fMark2;    // multipurpose mask fMark247,1338
    char        fMark3;    // multipurpose mask fMark348,1387
    int         nRefs;     // the number of referencesnRefs49,1436
    short       Delay;     // the delay of the nodeDelay50,1491
    short       DelayR;    // the reverse delay of the nodeDelayR51,1543
    int         pArray[0]; // the support nodespArray52,1603
static inline Ivy_Supp_t * Ivy_ObjSupp( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )      Ivy_ObjSupp55,1655
static inline Ivy_Supp_t * Ivy_ObjSuppStart( Ivy_Man_t * pAig, Ivy_Obj_t * pObj ) Ivy_ObjSuppStart59,1858
void Ivy_FastMapPerform( Ivy_Man_t * pAig, int nLimit, int fRecovery, int fVerbose )Ivy_FastMapPerform105,3784
void Ivy_FastMapStop( Ivy_Man_t * pAig )Ivy_FastMapStop194,6713
void Ivy_FastMapPrint( Ivy_Man_t * pAig, int Delay, int Area, abctime Time, char * pStr )Ivy_FastMapPrint214,7162
int Ivy_FastMapDelay( Ivy_Man_t * pAig )Ivy_FastMapDelay231,7620
int Ivy_FastMapArea_rec( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, Vec_Vec_t * vLuts )Ivy_FastMapArea_rec259,8283
int Ivy_FastMapArea( Ivy_Man_t * pAig )Ivy_FastMapArea288,9130
static inline int Ivy_ObjIsNodeInt1( Ivy_Obj_t * pObj )Ivy_ObjIsNodeInt1316,9913
static inline int Ivy_ObjIsNodeInt2( Ivy_Obj_t * pObj )Ivy_ObjIsNodeInt2332,10301
static inline int Vec_IntRemoveDup( int * pArray, int nSize )Vec_IntRemoveDup348,10689
void Ivy_FastMapNodeArea2( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit )Ivy_FastMapNodeArea2370,11211
void Ivy_FastMapNodeArea( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit )Ivy_FastMapNodeArea441,13509
void Ivy_FastMapNode( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit )Ivy_FastMapNode541,16670
int Ivy_FastMapMerge( Ivy_Supp_t * pSupp0, Ivy_Supp_t * pSupp1, Ivy_Supp_t * pSupp, int nLimit )Ivy_FastMapMerge707,23484
void Ivy_FastMapReadSupp( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, Vec_Int_t * vLeaves )Ivy_FastMapReadSupp793,25941
void Ivy_FastMapRequired_rec( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, Ivy_Obj_t * pRoot, int DelayR )Ivy_FastMapRequired_rec813,26475
void Ivy_FastMapRequired( Ivy_Man_t * pAig, int Delay, int fSetInter )Ivy_FastMapRequired836,27277
void Ivy_FastMapRecover( Ivy_Man_t * pAig, int nLimit )Ivy_FastMapRecover917,29656
int Ivy_FastMapNodeDelay( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapNodeDelay943,30408
int Ivy_FastMapNodeRef( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapNodeRef968,31078
int Ivy_FastMapNodeDeref( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapNodeDeref1003,32080
int Ivy_FastMapNodeAreaRefed( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapNodeAreaRefed1038,33051
int Ivy_FastMapNodeAreaDerefed( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapNodeAreaDerefed1064,33764
int Ivy_FastMapCutCost( Ivy_Man_t * pAig, Vec_Ptr_t * vFront )Ivy_FastMapCutCost1093,34486
void Ivy_FastMapMark_rec( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapMark_rec1118,35091
int Ivy_FastMapNodeWillGrow( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapNodeWillGrow1139,35683
int Ivy_FastMapNodeFaninCost( Ivy_Man_t * pAig, Ivy_Obj_t * pObj )Ivy_FastMapNodeFaninCost1159,36289
void Ivy_FastMapNodeFaninUpdate( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, Vec_Ptr_t * vFront )Ivy_FastMapNodeFaninUpdate1193,37325
int Ivy_FastMapNodeFaninCompact0( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront )Ivy_FastMapNodeFaninCompact01223,38147
int Ivy_FastMapNodeFaninCompact1( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront )Ivy_FastMapNodeFaninCompact11253,38942
int Ivy_FastMapNodeFaninCompact2( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront )Ivy_FastMapNodeFaninCompact21281,39661
int Ivy_FastMapNodeFaninCompact_int( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront )Ivy_FastMapNodeFaninCompact_int1309,40381
void Ivy_FastMapNodeFaninCompact( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront )Ivy_FastMapNodeFaninCompact1332,41145
void Ivy_FastMapNodePrepare( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vFrontOld )Ivy_FastMapNodePrepare1348,41586
void Ivy_FastMapNodeUpdate( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, Vec_Ptr_t * vFront )Ivy_FastMapNodeUpdate1380,42522
void Ivy_FastMapNodeRecover2( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vFrontOld )Ivy_FastMapNodeRecover21407,43272
void Ivy_FastMapNodeRecover( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vFrontOld )Ivy_FastMapNodeRecover1463,44956
void Ivy_FastMapNodeRecover4( Ivy_Man_t * pAig, Ivy_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vFrontOld )Ivy_FastMapNodeRecover41512,46631

src/aig/ivy/ivyFanout.c,1653
static inline Ivy_Obj_t * Ivy_ObjNextFanout( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanout )Ivy_ObjNextFanout31,834
static inline Ivy_Obj_t * Ivy_ObjPrevFanout( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanout )Ivy_ObjPrevFanout44,1258
static inline Ivy_Obj_t ** Ivy_ObjNextFanoutPlace( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanout )Ivy_ObjNextFanoutPlace57,1699
static inline Ivy_Obj_t ** Ivy_ObjPrevFanoutPlace( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanout )Ivy_ObjPrevFanoutPlace68,2100
static inline Ivy_Obj_t ** Ivy_ObjPrevNextFanoutPlace( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanout )Ivy_ObjPrevNextFanoutPlace79,2501
static inline Ivy_Obj_t ** Ivy_ObjNextPrevFanoutPlace( Ivy_Obj_t * pObj, Ivy_Obj_t * pFanout )Ivy_ObjNextPrevFanoutPlace94,3023
#define Ivy_ObjForEachFanoutInt(Ivy_ObjForEachFanoutInt109,3511
#define Ivy_ObjForEachFanoutIntSafe(Ivy_ObjForEachFanoutIntSafe114,3750
void Ivy_ManStartFanout( Ivy_Man_t * p )Ivy_ManStartFanout136,4629
void Ivy_ManStopFanout( Ivy_Man_t * p )Ivy_ManStopFanout162,5263
void Ivy_ObjAddFanout( Ivy_Man_t * p, Ivy_Obj_t * pFanin, Ivy_Obj_t * pFanout )Ivy_ObjAddFanout183,5774
void Ivy_ObjDeleteFanout( Ivy_Man_t * p, Ivy_Obj_t * pFanin, Ivy_Obj_t * pFanout )Ivy_ObjDeleteFanout205,6344
void Ivy_ObjPatchFanout( Ivy_Man_t * p, Ivy_Obj_t * pFanin, Ivy_Obj_t * pFanoutOld, Ivy_Obj_t * pFanoutNew )Ivy_ObjPatchFanout237,7276
void Ivy_ObjCollectFanouts( Ivy_Man_t * p, Ivy_Obj_t * pObj, Vec_Ptr_t * vArray )Ivy_ObjCollectFanouts262,8174
Ivy_Obj_t * Ivy_ObjReadFirstFanout( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_ObjReadFirstFanout283,8758
int Ivy_ObjFanoutNum( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_ObjFanoutNum299,9153

src/aig/ivy/ivyHaig.c,1219
static inline Ivy_Obj_t * Ivy_HaigObjRepr( Ivy_Obj_t * pObj )Ivy_HaigObjRepr46,1708
static inline int Ivy_HaigObjCountClass( Ivy_Obj_t * pObj )Ivy_HaigObjCountClass64,2490
void Ivy_ManHaigStart( Ivy_Man_t * p, int fVerbose )Ivy_ManHaigStart94,3390
void Ivy_ManHaigTrasfer( Ivy_Man_t * p, Ivy_Man_t * pNew )Ivy_ManHaigTrasfer137,4351
void Ivy_ManHaigStop( Ivy_Man_t * p )Ivy_ManHaigStop159,4917
void Ivy_ManHaigCreateObj( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_ManHaigCreateObj183,5502
int Ivy_ObjIsInTfi_rec( Ivy_Obj_t * pObjNew, Ivy_Obj_t * pObjOld, int Levels )Ivy_ObjIsInTfi_rec222,7111
void Ivy_ManHaigCreateChoice( Ivy_Man_t * p, Ivy_Obj_t * pObjOld, Ivy_Obj_t * pObjNew )Ivy_ManHaigCreateChoice246,7842
int Ivy_ManHaigCountChoices( Ivy_Man_t * p, int * pnChoices )Ivy_ManHaigCountChoices317,10689
void Ivy_ManHaigPostprocess( Ivy_Man_t * p, int fVerbose )Ivy_ManHaigPostprocess350,11635
static inline Ivy_Init_t Ivy_ManHaigSimulateAnd( Ivy_Init_t In0, Ivy_Init_t In1 )Ivy_ManHaigSimulateAnd393,12683
static inline Ivy_Init_t Ivy_ManHaigSimulateChoice( Ivy_Init_t In0, Ivy_Init_t In1 )Ivy_ManHaigSimulateChoice414,13273
void Ivy_ManHaigSimulate( Ivy_Man_t * p )Ivy_ManHaigSimulate440,14033

src/aig/ivy/ivyShow.c,200
void Ivy_ManShow( Ivy_Man_t * pMan, int fHaig, Vec_Ptr_t * vBold )Ivy_ManShow47,1327
void Ivy_WriteDotAig( Ivy_Man_t * pMan, char * pFileName, int fHaig, Vec_Ptr_t * vBold )Ivy_WriteDotAig81,2386

src/aig/ivy/attr.h,2444
#define ABC__aig__ivy__attr_hABC__aig__ivy__attr_h22,528
typedef struct Attr_ManStruct_t_     Attr_Man_t;Attr_Man_t44,1282
struct Attr_ManStruct_t_Attr_ManStruct_t_45,1331
    int                        nAttrSize;     // the size of each attribute in bytesnAttrSize48,1380
    Extra_MmFixed_t *          pManMem;       // memory manager for attributespManMem49,1465
    int                        nAttrs;        // the number of attributes allocatednAttrs50,1544
    void **                    pAttrs;        // the array of attributespAttrs51,1628
    int                        fUseInt;       // uses integer attributesfUseInt52,1701
    void *                     pManAttr;      // the manager for this attributepManAttr54,1805
    void (*pFuncFreeMan) (void *);            // the procedure to call to free attribute-specific managerpFuncFreeMan55,1885
    void (*pFuncFreeObj) (void *, void *);    // the procedure to call to free attribute-specific datapFuncFreeObj56,1991
static inline Attr_Man_t * Attr_ManAlloc( int nAttrSize, int fManMem )Attr_ManAlloc83,3098
static inline Attr_Man_t * Attr_ManStartInt( int nAttrs )Attr_ManStartInt105,3658
static inline Attr_Man_t * Attr_ManStartPtr( int nAttrs )Attr_ManStartPtr127,4221
static inline Attr_Man_t * Attr_ManStartPtrMem( int nAttrs, int nAttrSize )Attr_ManStartPtrMem148,4769
static inline void Attr_ManStop( Attr_Man_t * p )Attr_ManStop174,5420
static inline int Attr_ManReadAttrInt( Attr_Man_t * p, int Id )Attr_ManReadAttrInt215,6525
static inline void * Attr_ManReadAttrPtr( Attr_Man_t * p, int Id )Attr_ManReadAttrPtr234,6975
static inline void Attr_ManWriteAttrInt( Attr_Man_t * p, int Id, int Attr )Attr_ManWriteAttrInt253,7424
static inline void Attr_ManWriteAttrPtr( Attr_Man_t * p, int Id, void * pAttr )Attr_ManWriteAttrPtr270,7842
static inline int * Attr_ManFetchSpotInt( Attr_Man_t * p, int Id )Attr_ManFetchSpotInt288,8318
static inline void ** Attr_ManFetchSpotPtr( Attr_Man_t * p, int Id )Attr_ManFetchSpotPtr316,9132
static inline int Attr_ManFetchAttrInt( Attr_Man_t * p, int Id )Attr_ManFetchAttrInt351,10170
static inline void * Attr_ManFetchAttrPtr( Attr_Man_t * p, int Id )Attr_ManFetchAttrPtr367,10570
static inline void Attr_ManSetAttrInt( Attr_Man_t * p, int Id, int Attr )Attr_ManSetAttrInt383,10959
static inline void Attr_ManSetAttrPtr( Attr_Man_t * p, int Id, void * pAttr )Attr_ManSetAttrPtr399,11354

src/aig/ivy/ivyCut.c,2316
static inline int Ivy_NodeCutHashValue( int NodeId )  { return 1 << (NodeId % 31); }Ivy_NodeCutHashValue30,796
static inline int Ivy_NodeGetLeafCostOne( Ivy_Man_t * p, int Leaf, Vec_Int_t * vInside )Ivy_NodeGetLeafCostOne48,1532
int Ivy_ManSeqFindCut_int( Ivy_Man_t * p, Vec_Int_t * vFront, Vec_Int_t * vInside, int nSizeLimit )Ivy_ManSeqFindCut_int90,3153
void Ivy_ManSeqFindCut( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Vec_Int_t * vFront, Vec_Int_t * vInside, int nSize )Ivy_ManSeqFindCut183,6008
int Ivy_ManFindBoolCut_rec( Ivy_Man_t * p, Ivy_Obj_t * pObj, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vVolume, Ivy_Obj_t * pPivot )Ivy_ManFindBoolCut_rec221,7122
int Ivy_ManFindBoolCutCost( Ivy_Obj_t * pObj )Ivy_ManFindBoolCutCost276,8754
int Ivy_ManFindBoolCut( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Vec_Ptr_t * vFront, Vec_Ptr_t * vVolume, Vec_Ptr_t * vLeaves )Ivy_ManFindBoolCut304,9573
void Ivy_ManTestCutsBool( Ivy_Man_t * p )Ivy_ManTestCutsBool471,15013
static inline unsigned Ivy_NodeCutHash( Ivy_Cut_t * pCut )Ivy_NodeCutHash521,16299
static inline void Ivy_NodeCutShrink( Ivy_Cut_t * pCut, int iOld )Ivy_NodeCutShrink543,16874
static inline int Ivy_NodeCutExtend( Ivy_Cut_t * pCut, int iNew )Ivy_NodeCutExtend564,17442
static inline int Ivy_NodeCutPrescreen( Ivy_Cut_t * pCut, int Id0, int Id1 )Ivy_NodeCutPrescreen598,18317
static inline int Ivy_NodeCutDeriveNew( Ivy_Cut_t * pCut, Ivy_Cut_t * pCutNew, int IdOld, int IdNew0, int IdNew1 )Ivy_NodeCutDeriveNew620,18858
int Ivy_NodeCutFindOrAdd( Ivy_Store_t * pCutStore, Ivy_Cut_t * pCutNew )Ivy_NodeCutFindOrAdd680,20623
static inline int Ivy_CutCheckDominance( Ivy_Cut_t * pDom, Ivy_Cut_t * pCut )Ivy_CutCheckDominance716,21622
int Ivy_NodeCutFindOrAddFilter( Ivy_Store_t * pCutStore, Ivy_Cut_t * pCutNew )Ivy_NodeCutFindOrAddFilter742,22336
void Ivy_NodeCompactCuts( Ivy_Store_t * pCutStore )Ivy_NodeCompactCuts809,24332
void Ivy_NodePrintCut( Ivy_Cut_t * pCut )Ivy_NodePrintCut834,24890
void Ivy_NodePrintCuts( Ivy_Store_t * pCutStore )Ivy_NodePrintCuts855,25354
static inline Ivy_Obj_t * Ivy_ObjRealFanin( Ivy_Obj_t * pObj )Ivy_ObjRealFanin874,25807
Ivy_Store_t * Ivy_NodeFindCutsAll( Ivy_Man_t * p, Ivy_Obj_t * pObj, int nLeaves )Ivy_NodeFindCutsAll892,26213
void Ivy_ManTestCutsAll( Ivy_Man_t * p )Ivy_ManTestCutsAll968,28737

src/aig/ivy/ivyCanon.c,401
Ivy_Obj_t * Ivy_CanonPair_rec( Ivy_Man_t * p, Ivy_Obj_t * pGhost )Ivy_CanonPair_rec47,1425
Ivy_Obj_t * Ivy_CanonAnd( Ivy_Man_t * p, Ivy_Obj_t * pObj0, Ivy_Obj_t * pObj1 )Ivy_CanonAnd90,3052
Ivy_Obj_t * Ivy_CanonExor( Ivy_Man_t * p, Ivy_Obj_t * pObj0, Ivy_Obj_t * pObj1 )Ivy_CanonExor109,3587
Ivy_Obj_t * Ivy_CanonLatch( Ivy_Man_t * p, Ivy_Obj_t * pObj, Ivy_Init_t Init )Ivy_CanonLatch131,4279

src/aig/ivy/ivyCutTrav.c,1296
Ivy_Store_t * Ivy_NodeFindCutsTravAll( Ivy_Man_t * p, Ivy_Obj_t * pObj, int nLeaves, int nNodeLimit, Ivy_NodeFindCutsTravAll49,1580
unsigned * Ivy_NodeCutElementary( Vec_Int_t * vStore, int nWords, int NodeId )Ivy_NodeCutElementary141,4829
int Ivy_CompareNodesByLevel( Ivy_Obj_t ** ppObj1, Ivy_Obj_t ** ppObj2 )Ivy_CompareNodesByLevel161,5354
void Ivy_NodeComputeVolumeTrav1_rec( Ivy_Obj_t * pObj, int Depth )Ivy_NodeComputeVolumeTrav1_rec183,5897
void Ivy_NodeComputeVolumeTrav2_rec( Ivy_Obj_t * pObj, Vec_Ptr_t * vNodes )Ivy_NodeComputeVolumeTrav2_rec203,6449
void Ivy_NodeComputeVolume( Ivy_Obj_t * pObj, int nNodeLimit, Vec_Ptr_t * vNodes, Vec_Ptr_t * vFront )Ivy_NodeComputeVolume223,6972
void Ivy_NodeComputeVolume2( Ivy_Obj_t * pObj, int nNodeLimit, Vec_Ptr_t * vNodes, Vec_Ptr_t * vFront )Ivy_NodeComputeVolume2278,8609
static inline void Extra_TruthOrWords( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nWords )Extra_TruthOrWords357,10945
static inline int Extra_TruthIsImplyWords( unsigned * pIn1, unsigned * pIn2, int nWords )Extra_TruthIsImplyWords363,11138
void Ivy_NodeFindCutsMerge( Vec_Ptr_t * vCuts0, Vec_Ptr_t * vCuts1, Vec_Ptr_t * vCuts, Ivy_NodeFindCutsMerge383,11624
void Ivy_ManTestCutsTravAll( Ivy_Man_t * p )Ivy_ManTestCutsTravAll434,13356

src/aig/ivy/ivyDsd.c,3564
    IVY_DEC_PI,             // 0: varIVY_DEC_PI32,821
    IVY_DEC_CONST1,         // 1: CONST1IVY_DEC_CONST133,859
    IVY_DEC_BUF,            // 2: BUFIVY_DEC_BUF34,900
    IVY_DEC_AND,            // 3: ANDIVY_DEC_AND35,938
    IVY_DEC_EXOR,           // 4: EXORIVY_DEC_EXOR36,976
    IVY_DEC_MUX,            // 5: MUXIVY_DEC_MUX37,1015
    IVY_DEC_MAJ,            // 6: MAJIVY_DEC_MAJ38,1053
    IVY_DEC_PRIME           // 7: undecomposableIVY_DEC_PRIME39,1091
} Ivy_DecType_t;Ivy_DecType_t40,1140
typedef struct Ivy_Dec_t_ Ivy_Dec_t;Ivy_Dec_t42,1158
struct Ivy_Dec_t_Ivy_Dec_t_43,1195
    unsigned  Type   : 4;   // the node type (PI, CONST1, AND, EXOR, MUX, PRIME)Type45,1215
    unsigned  fCompl : 1;   // shows if node is complemented (root node only)fCompl46,1296
    unsigned  nFans  : 3;   // the number of faninsnFans47,1374
    unsigned  Fan0   : 4;   // fanin 0Fan048,1426
    unsigned  Fan1   : 4;   // fanin 1 Fan149,1465
    unsigned  Fan2   : 4;   // fanin 2Fan250,1505
    unsigned  Fan3   : 4;   // fanin 3 Fan351,1544
    unsigned  Fan4   : 4;   // fanin 4 Fan452,1584
    unsigned  Fan5   : 4;   // fanin 5Fan553,1624
static inline int        Ivy_DecToInt( Ivy_Dec_t m )        { union { Ivy_Dec_t x; int y; } v; v.x = m; return v.y;  }Ivy_DecToInt56,1667
static inline Ivy_Dec_t  Ivy_IntToDec( int m )              { union { Ivy_Dec_t x; int y; } v; v.y = m; return v.x;  }Ivy_IntToDec57,1786
static inline void       Ivy_DecClear( Ivy_Dec_t * pNode )  { *pNode = Ivy_IntToDec(0);                              }Ivy_DecClear58,1905
static unsigned s_Masks[6][2] = {s_Masks65,2315
static inline int        Ivy_TruthWordCountOnes( unsigned uWord )Ivy_TruthWordCountOnes74,2544
static inline int        Ivy_TruthCofactorIsConst( unsigned uTruth, int Var, int Cof, int Const )Ivy_TruthCofactorIsConst83,2911
static inline int        Ivy_TruthCofactorIsOne( unsigned uTruth, int Var )Ivy_TruthCofactorIsOne91,3161
static inline unsigned   Ivy_TruthCofactor( unsigned uTruth, int Var )Ivy_TruthCofactor96,3286
static inline unsigned   Ivy_TruthCofactor2( unsigned uTruth, int Var0, int Var1 )Ivy_TruthCofactor2105,3579
static inline int        Ivy_TruthDepends( unsigned uTruth, int Var )Ivy_TruthDepends111,3820
static inline void       Ivy_DecSetVar( Ivy_Dec_t * pNode, int iNum, unsigned Var )Ivy_DecSetVar116,3988
static inline unsigned   Ivy_DecGetVar( Ivy_Dec_t * pNode, int iNum )Ivy_DecGetVar130,4398
int Ivy_TruthDsd( unsigned uTruth, Vec_Int_t * vTree )Ivy_TruthDsd166,5570
int Ivy_TruthDecompose_rec( unsigned uTruth, Vec_Int_t * vTree )Ivy_TruthDecompose_rec219,7143
int Ivy_TruthRecognizeMuxMaj( unsigned uTruth, int * pSupp, int nSupp, Vec_Int_t * vTree )Ivy_TruthRecognizeMuxMaj319,10551
unsigned Ivy_TruthDsdCompute_rec( int iNode, Vec_Int_t * vTree )Ivy_TruthDsdCompute_rec404,13402
unsigned Ivy_TruthDsdCompute( Vec_Int_t * vTree )Ivy_TruthDsdCompute478,16115
void Ivy_TruthDsdPrint_rec( FILE * pFile, int iNode, Vec_Int_t * vTree )Ivy_TruthDsdPrint_rec494,16501
void Ivy_TruthDsdPrint( FILE * pFile, Vec_Int_t * vTree )Ivy_TruthDsdPrint568,19072
Ivy_Obj_t * Ivy_ManDsdConstruct_rec( Ivy_Man_t * p, Vec_Int_t * vFront, int iNode, Vec_Int_t * vTree )Ivy_ManDsdConstruct_rec586,19517
Ivy_Obj_t * Ivy_ManDsdConstruct( Ivy_Man_t * p, Vec_Int_t * vFront, Vec_Int_t * vTree )Ivy_ManDsdConstruct655,22122
void Ivy_TruthDsdComputePrint( unsigned uTruth )Ivy_TruthDsdComputePrint678,22744
void Ivy_TruthTestOne( unsigned uTruth )Ivy_TruthTestOne700,23262

src/aig/ivy/ivyObj.c,1015
Ivy_Obj_t * Ivy_ObjCreatePi( Ivy_Man_t * p )Ivy_ObjCreatePi45,1276
Ivy_Obj_t * Ivy_ObjCreatePo( Ivy_Man_t * p, Ivy_Obj_t * pDriver )Ivy_ObjCreatePo61,1696
Ivy_Obj_t * Ivy_ObjCreate( Ivy_Man_t * p, Ivy_Obj_t * pGhost )Ivy_ObjCreate77,2140
void Ivy_ObjConnect( Ivy_Man_t * p, Ivy_Obj_t * pObj, Ivy_Obj_t * pFan0, Ivy_Obj_t * pFan1 )Ivy_ObjConnect150,4672
void Ivy_ObjDisconnect( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_ObjDisconnect185,5750
void Ivy_ObjPatchFanin0( Ivy_Man_t * p, Ivy_Obj_t * pObj, Ivy_Obj_t * pFaninNew )Ivy_ObjPatchFanin0224,6940
void Ivy_ObjDelete( Ivy_Man_t * p, Ivy_Obj_t * pObj, int fFreeTop )Ivy_ObjDelete255,7917
void Ivy_ObjDelete_rec( Ivy_Man_t * p, Ivy_Obj_t * pObj, int fFreeTop )Ivy_ObjDelete_rec299,9149
void Ivy_ObjReplace( Ivy_Man_t * p, Ivy_Obj_t * pObjOld, Ivy_Obj_t * pObjNew, int fDeleteOld, int fFreeTop, int fUpdateLevel )Ivy_ObjReplace328,10208
void Ivy_NodeFixBufferFanins( Ivy_Man_t * p, Ivy_Obj_t * pNode, int fUpdateLevel )Ivy_NodeFixBufferFanins442,14496

src/aig/ivy/ivyRwr.c,1195
int Ivy_ManRewritePre( Ivy_Man_t * p, int fUpdateLevel, int fUseZeroCost, int fVerbose )Ivy_ManRewritePre55,1962
int Ivy_NodeRewrite( Ivy_Man_t * pMan, Rwt_Man_t * p, Ivy_Obj_t * pNode, int fUpdateLevel, int fUseZeroCost )Ivy_NodeRewrite153,5659
unsigned Ivy_NodeGetTruth_rec( Ivy_Obj_t * pObj, int * pNums, int nNums )Ivy_NodeGetTruth_rec312,10927
unsigned Ivy_NodeGetTruth( Ivy_Obj_t * pObj, int * pNums, int nNums )Ivy_NodeGetTruth344,11911
Dec_Graph_t * Rwt_CutEvaluate( Ivy_Man_t * pMan, Rwt_Man_t * p, Ivy_Obj_t * pRoot, Vec_Ptr_t * vFaninsCur, int nNodesSaved, int LevelMax, int * pGainBest, unsigned uTruth )Rwt_CutEvaluate361,12318
int Ivy_GraphToNetworkCount( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Dec_Graph_t * pGraph, int NodeMax, int LevelMax )Ivy_GraphToNetworkCount413,14312
Ivy_Obj_t * Ivy_GraphToNetwork( Ivy_Man_t * p, Dec_Graph_t * pGraph )Ivy_GraphToNetwork485,17128
void Ivy_GraphUpdateNetwork( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Dec_Graph_t * pGraph, int fUpdateLevel, int nGain )Ivy_GraphUpdateNetwork518,18457
void Ivy_GraphUpdateNetwork3( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Dec_Graph_t * pGraph, int fUpdateLevel, int nGain )Ivy_GraphUpdateNetwork3559,19877

src/aig/ivy/ivyBalance.c,1054
Ivy_Man_t * Ivy_ManBalance( Ivy_Man_t * p, int fUpdateLevel )Ivy_ManBalance51,1766
int Ivy_NodeCompareLevelsDecrease( Ivy_Obj_t ** pp1, Ivy_Obj_t ** pp2 )Ivy_NodeCompareLevelsDecrease99,3373
int Ivy_NodeBalance_rec( Ivy_Man_t * pNew, Ivy_Obj_t * pObjOld, Vec_Vec_t * vStore, int Level, int fUpdateLevel )Ivy_NodeBalance_rec125,4020
Ivy_Obj_t * Ivy_NodeBalanceBuildSuper( Ivy_Man_t * p, Vec_Ptr_t * vSuper, Ivy_Type_t Type, int fUpdateLevel )Ivy_NodeBalanceBuildSuper175,5901
int Ivy_NodeBalanceCone_rec( Ivy_Obj_t * pRoot, Ivy_Obj_t * pObj, Vec_Ptr_t * vSuper )Ivy_NodeBalanceCone_rec208,7133
Vec_Ptr_t * Ivy_NodeBalanceCone( Ivy_Obj_t * pObj, Vec_Vec_t * vStore, int Level )Ivy_NodeBalanceCone254,8792
int Ivy_NodeBalanceFindLeft( Vec_Ptr_t * vSuper )Ivy_NodeBalanceFindLeft293,10378
void Ivy_NodeBalancePermute( Ivy_Man_t * p, Vec_Ptr_t * vSuper, int LeftBound, int fExor )Ivy_NodeBalancePermute331,11716
void Ivy_NodeBalancePushUniqueOrderByLevel( Vec_Ptr_t * vStore, Ivy_Obj_t * pObj )Ivy_NodeBalancePushUniqueOrderByLevel389,13682

src/aig/ivy/ivySeq.c,2621
static inline int Ivy_CutHashValue( int NodeId )  { return 1 << (NodeId % 31); }Ivy_CutHashValue41,1704
int Ivy_ManRewriteSeq( Ivy_Man_t * p, int fUseZeroCost, int fVerbose )Ivy_ManRewriteSeq63,2343
int Ivy_NodeRewriteSeq( Ivy_Man_t * pMan, Rwt_Man_t * p, Ivy_Obj_t * pNode, int fUseZeroCost )Ivy_NodeRewriteSeq145,5323
Dec_Graph_t * Rwt_CutEvaluateSeq( Ivy_Man_t * pMan, Rwt_Man_t * p, Ivy_Obj_t * pRoot, Ivy_Cut_t * pCut, char * pPerm, Vec_Ptr_t * vFaninsCur, int nNodesSaved, int * pGainBest, unsigned uTruth )Rwt_CutEvaluateSeq311,10884
void Ivy_GraphPrepare( Dec_Graph_t * pGraph, Ivy_Cut_t * pCut, Vec_Ptr_t * vFanins, char * pPerm )Ivy_GraphPrepare364,12729
int Ivy_GraphToNetworkSeqCountSeq( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Dec_Graph_t * pGraph, int NodeMax )Ivy_GraphToNetworkSeqCountSeq403,14231
Ivy_Obj_t * Ivy_GraphToNetworkSeq( Ivy_Man_t * p, Dec_Graph_t * pGraph )Ivy_GraphToNetworkSeq477,17217
void Ivy_GraphUpdateNetworkSeq( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Dec_Graph_t * pGraph, int nGain )Ivy_GraphUpdateNetworkSeq526,19214
unsigned Ivy_CutGetTruth_rec( Ivy_Man_t * p, int Leaf, int * pNums, int nNums )Ivy_CutGetTruth_rec560,19991
unsigned Ivy_CutGetTruth( Ivy_Man_t * p, Ivy_Obj_t * pObj, int * pNums, int nNums )Ivy_CutGetTruth602,21386
static inline int Ivy_CutPrescreen( Ivy_Cut_t * pCut, int Id0, int Id1 )Ivy_CutPrescreen624,21906
static inline int Ivy_CutDeriveNew2( Ivy_Cut_t * pCut, Ivy_Cut_t * pCutNew, int IdOld, int IdNew0, int IdNew1 )Ivy_CutDeriveNew2646,22443
static inline int Ivy_CutDeriveNew( Ivy_Cut_t * pCut, Ivy_Cut_t * pCutNew, int IdOld, int IdNew0, int IdNew1 )Ivy_CutDeriveNew722,24611
static inline unsigned Ivy_NodeCutHash( Ivy_Cut_t * pCut )Ivy_NodeCutHash782,26331
static inline int Ivy_CutDeriveNew3( Ivy_Cut_t * pCut, Ivy_Cut_t * pCutNew, int IdOld, int IdNew0, int IdNew1 )Ivy_CutDeriveNew3802,26795
static inline int Ivy_CutCheckDominance( Ivy_Cut_t * pDom, Ivy_Cut_t * pCut )Ivy_CutCheckDominance846,28066
int Ivy_CutFindOrAddFilter( Ivy_Store_t * pCutStore, Ivy_Cut_t * pCutNew )Ivy_CutFindOrAddFilter873,28843
void Ivy_CutCompactAll( Ivy_Store_t * pCutStore )Ivy_CutCompactAll936,30684
void Ivy_CutPrintForNode( Ivy_Cut_t * pCut )Ivy_CutPrintForNode964,31344
void Ivy_CutPrintForNodes( Ivy_Store_t * pCutStore )Ivy_CutPrintForNodes985,31811
static inline int Ivy_CutReadLeaf( Ivy_Obj_t * pFanin )Ivy_CutReadLeaf1004,32271
Ivy_Store_t * Ivy_CutComputeForNode( Ivy_Man_t * p, Ivy_Obj_t * pObj, int nLeaves )Ivy_CutComputeForNode1027,32855
void Ivy_CutComputeAll( Ivy_Man_t * p, int nInputs )Ivy_CutComputeAll1108,35592

src/aig/ivy/ivyUtil.c,2157
void Ivy_ManIncrementTravId( Ivy_Man_t * p )Ivy_ManIncrementTravId45,1277
void Ivy_ManCleanTravId( Ivy_Man_t * p )Ivy_ManCleanTravId63,1691
void Ivy_ManCollectCut_rec( Ivy_Man_t * p, Ivy_Obj_t * pNode, Vec_Int_t * vNodes )Ivy_ManCollectCut_rec83,2119
void Ivy_ManCollectCut( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Vec_Int_t * vLeaves, Vec_Int_t * vNodes )Ivy_ManCollectCut106,2897
unsigned * Ivy_ObjGetTruthStore( int ObjNum, Vec_Int_t * vTruth )Ivy_ObjGetTruthStore134,3677
void Ivy_ManCutTruthOne( Ivy_Man_t * p, Ivy_Obj_t * pNode, Vec_Int_t * vTruth, int nWords )Ivy_ManCutTruthOne150,4073
unsigned * Ivy_ManCutTruth( Ivy_Man_t * p, Ivy_Obj_t * pRoot, Vec_Int_t * vLeaves, Vec_Int_t * vNodes, Vec_Int_t * vTruth )Ivy_ManCutTruth186,5579
Vec_Int_t * Ivy_ManLatches( Ivy_Man_t * p )Ivy_ManLatches227,7555
int Ivy_ManLevels( Ivy_Man_t * p )Ivy_ManLevels249,8070
int Ivy_ManResetLevels_rec( Ivy_Obj_t * pObj )Ivy_ManResetLevels_rec269,8540
void Ivy_ManResetLevels( Ivy_Man_t * p )Ivy_ManResetLevels292,9236
int Ivy_ObjRefDeref( Ivy_Man_t * p, Ivy_Obj_t * pNode, int fReference, int fLabel )Ivy_ObjRefDeref313,9753
int Ivy_ObjMffcLabel( Ivy_Man_t * p, Ivy_Obj_t * pNode )Ivy_ObjMffcLabel359,11166
void Ivy_ObjUpdateLevel_rec( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_ObjUpdateLevel_rec382,11833
int Ivy_ObjLevelRNew( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_ObjLevelRNew417,12784
void Ivy_ObjUpdateLevelR_rec( Ivy_Man_t * p, Ivy_Obj_t * pObj, int ReqNew )Ivy_ObjUpdateLevelR_rec444,13516
int Ivy_ObjIsMuxType( Ivy_Obj_t * pNode )Ivy_ObjIsMuxType479,14614
Ivy_Obj_t * Ivy_ObjRecognizeMux( Ivy_Obj_t * pNode, Ivy_Obj_t ** ppNodeT, Ivy_Obj_t ** ppNodeE )Ivy_ObjRecognizeMux517,16324
Ivy_Obj_t * Ivy_ObjReal( Ivy_Obj_t * pObj )Ivy_ObjReal609,20102
void Ivy_ObjPrintVerbose( Ivy_Man_t * p, Ivy_Obj_t * pObj, int fHaig )Ivy_ObjPrintVerbose629,20632
void Ivy_ManPrintVerbose( Ivy_Man_t * p, int fHaig )Ivy_ManPrintVerbose714,23787
int Ivy_CutTruthPrint2( Ivy_Man_t * p, Ivy_Cut_t * pCut, unsigned uTruth )Ivy_CutTruthPrint2749,24787
int Ivy_CutTruthPrint( Ivy_Man_t * p, Ivy_Cut_t * pCut, unsigned uTruth )Ivy_CutTruthPrint771,25415

src/aig/ivy/ivyMem.c,286
#define IVY_PAGE_SIZE IVY_PAGE_SIZE31,808
#define IVY_PAGE_MASK IVY_PAGE_MASK32,891
void Ivy_ManStartMemory( Ivy_Man_t * p )Ivy_ManStartMemory49,1454
void Ivy_ManStopMemory( Ivy_Man_t * p )Ivy_ManStopMemory66,1843
void Ivy_ManAddMemory( Ivy_Man_t * p )Ivy_ManAddMemory89,2484

src/aig/ivy/ivyCheck.c,271
int Ivy_ManCheck( Ivy_Man_t * p )Ivy_ManCheck45,1275
int Ivy_ManCheckFanoutNums( Ivy_Man_t * p )Ivy_ManCheckFanoutNums148,5099
int Ivy_ManCheckFanouts( Ivy_Man_t * p )Ivy_ManCheckFanouts171,5678
int Ivy_ManCheckChoices( Ivy_Man_t * p )Ivy_ManCheckChoices255,8701

src/aig/ivy/ivyMulti.c,829
#define IVY_EVAL_LIMIT IVY_EVAL_LIMIT30,795
typedef struct Ivy_Eva_t_ Ivy_Eva_t;Ivy_Eva_t32,826
struct Ivy_Eva_t_Ivy_Eva_t_33,863
    Ivy_Obj_t * pArg;     // the argument nodepArg35,883
    unsigned    Mask;     // the mask of covered nodesMask36,930
    int         Weight;   // the number of covered nodesWeight37,985
int Ivy_MultiPlus( Ivy_Man_t * p, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vCone, Ivy_Type_t Type, int nLimit, Vec_Ptr_t * vSols )Ivy_MultiPlus58,1811
void Ivy_MultiPrint( Ivy_Man_t * p, Ivy_Eva_t * pEvals, int nLeaves, int nEvals )Ivy_MultiPrint173,5614
static inline int Ivy_MultiWeight( unsigned uMask, int nMaskOnes, unsigned uFound )Ivy_MultiWeight203,6423
int Ivy_MultiCover( Ivy_Man_t * p, Ivy_Eva_t * pEvals, int nLeaves, int nEvals, int nLimit, Vec_Ptr_t * vSols )Ivy_MultiCover222,6935

src/aig/ivy/ivyFraig.c,15884
typedef struct Ivy_FraigMan_t_        Ivy_FraigMan_t;Ivy_FraigMan_t33,863
typedef struct Ivy_FraigSim_t_        Ivy_FraigSim_t;Ivy_FraigSim_t34,917
typedef struct Ivy_FraigList_t_       Ivy_FraigList_t;Ivy_FraigList_t35,971
struct Ivy_FraigList_t_Ivy_FraigList_t_37,1027
    Ivy_Obj_t *         pHead;pHead39,1053
    Ivy_Obj_t *         pTail;pTail40,1084
    int                 nItems;nItems41,1115
struct Ivy_FraigSim_t_Ivy_FraigSim_t_44,1151
    int                 Type;Type46,1176
    Ivy_FraigSim_t *    pNext;pNext47,1206
    Ivy_FraigSim_t *    pFanin0;pFanin048,1237
    Ivy_FraigSim_t *    pFanin1;pFanin149,1270
    unsigned            pData[0];pData50,1303
struct Ivy_FraigMan_t_Ivy_FraigMan_t_53,1341
    Ivy_FraigParams_t * pParams;        // various parameterspParams56,1387
    ABC_INT64_T              nBTLimitGlobal; // global limit on the number of backtracksnBTLimitGlobal58,1548
    ABC_INT64_T              nInsLimitGlobal;// global limit on the number of clause inspectsnInsLimitGlobal59,1637
    Ivy_Man_t *         pManAig;        // the starting AIG managerpManAig61,1750
    Ivy_Man_t *         pManFraig;      // the final AIG managerpManFraig62,1818
    int                 nSimWords;      // the number of wordsnSimWords64,1913
    char *              pSimWords;      // the simulation infopSimWords65,1976
    Ivy_FraigSim_t *    pSimStart;      // the list of simulation info for internal nodespSimStart66,2039
    int                 nPatWords;      // the number of words in the counter examplenPatWords68,2160
    unsigned *          pPatWords;      // the counter examplepPatWords69,2246
    int *               pPatScores;     // the scores of each patternpPatScores70,2309
    Ivy_FraigList_t     lClasses;       // equivalence classeslClasses72,2407
    Ivy_FraigList_t     lCand;          // candidatateslCand73,2470
    int                 nPairs;         // the number of pairs of nodesnPairs74,2526
    sat_solver *        pSat;           // SAT solverpSat76,2626
    int                 nSatVars;       // the number of variables currently usednSatVars77,2680
    Vec_Ptr_t *         vPiVars;        // the PIs of the cone used vPiVars78,2762
    ProgressBar *       pProgress;pProgress80,2845
    int                 nSimRounds;nSimRounds82,2898
    int                 nNodesMiter;nNodesMiter83,2934
    int                 nClassesZero;nClassesZero84,2971
    int                 nClassesBeg;nClassesBeg85,3009
    int                 nClassesEnd;nClassesEnd86,3046
    int                 nPairsBeg;nPairsBeg87,3083
    int                 nPairsEnd;nPairsEnd88,3118
    int                 nSatCalls;nSatCalls89,3153
    int                 nSatCallsSat;nSatCallsSat90,3188
    int                 nSatCallsUnsat;nSatCallsUnsat91,3226
    int                 nSatProof;nSatProof92,3266
    int                 nSatFails;nSatFails93,3301
    int                 nSatFailsReal;nSatFailsReal94,3336
    abctime             timeSim;timeSim96,3390
    abctime             timeTrav;timeTrav97,3423
    abctime             timeSat;timeSat98,3457
    abctime             timeSatUnsat;timeSatUnsat99,3490
    abctime             timeSatSat;timeSatSat100,3528
    abctime             timeSatFail;timeSatFail101,3564
    abctime             timeRef;timeRef102,3601
    abctime             timeTotal;timeTotal103,3634
    abctime             time1;time1104,3669
    abctime             time2;time2105,3700
typedef struct Prove_ParamsStruct_t_      Prove_Params_t;Prove_Params_t108,3735
struct Prove_ParamsStruct_t_Prove_ParamsStruct_t_109,3793
    int     fUseFraiging;          // enables fraigingfUseFraiging112,3850
    int     fUseRewriting;         // enables rewritingfUseRewriting113,3905
    int     fUseBdds;              // enables BDD construction when other methods failfUseBdds114,3961
    int     fVerbose;              // prints verbose statsfVerbose115,4048
    int     nItersMax;             // the number of iterationsnItersMax117,4125
    int     nMiteringLimitStart;   // starting mitering limitnMiteringLimitStart119,4205
    float   nMiteringLimitMulti;   // multiplicative coefficient to increase the limit in each iterationnMiteringLimitMulti120,4267
    int     nRewritingLimitStart;  // the number of rewriting iterationsnRewritingLimitStart122,4390
    float   nRewritingLimitMulti;  // multiplicative coefficient to increase the limit in each iterationnRewritingLimitMulti123,4463
    int     nFraigingLimitStart;   // starting backtrack(conflict) limitnFraigingLimitStart125,4585
    float   nFraigingLimitMulti;   // multiplicative coefficient to increase the limit in each iterationnFraigingLimitMulti126,4658
    int     nBddSizeLimit;         // the number of BDD nodes when construction is abortednBddSizeLimit128,4797
    int     fBddReorder;           // enables dynamic BDD variable reorderingfBddReorder129,4888
    int     nMiteringLimitLast;    // final mitering limitnMiteringLimitLast131,4992
    ABC_INT64_T  nTotalBacktrackLimit;  // global limit on the number of backtracksnTotalBacktrackLimit133,5083
    ABC_INT64_T  nTotalInspectLimit;    // global limit on the number of clause inspectsnTotalInspectLimit134,5167
    ABC_INT64_T  nTotalBacktracksMade;  // the total number of backtracks madenTotalBacktracksMade136,5288
    ABC_INT64_T  nTotalInspectsMade;    // the total number of inspects madenTotalInspectsMade137,5367
static inline Ivy_FraigSim_t * Ivy_ObjSim( Ivy_Obj_t * pObj )                            { return (Ivy_FraigSim_t *)pObj->pFanout;  }Ivy_ObjSim140,5448
static inline Ivy_Obj_t * Ivy_ObjClassNodeLast( Ivy_Obj_t * pObj )                       { return pObj->pNextFan0;  }Ivy_ObjClassNodeLast141,5582
static inline Ivy_Obj_t * Ivy_ObjClassNodeRepr( Ivy_Obj_t * pObj )                       { return pObj->pNextFan0;  }Ivy_ObjClassNodeRepr142,5700
static inline Ivy_Obj_t * Ivy_ObjClassNodeNext( Ivy_Obj_t * pObj )                       { return pObj->pNextFan1;  }Ivy_ObjClassNodeNext143,5818
static inline Ivy_Obj_t * Ivy_ObjNodeHashNext( Ivy_Obj_t * pObj )                        { return pObj->pPrevFan0;  }Ivy_ObjNodeHashNext144,5936
static inline Ivy_Obj_t * Ivy_ObjEquivListNext( Ivy_Obj_t * pObj )                       { return pObj->pPrevFan0;  }Ivy_ObjEquivListNext145,6054
static inline Ivy_Obj_t * Ivy_ObjEquivListPrev( Ivy_Obj_t * pObj )                       { return pObj->pPrevFan1;  }Ivy_ObjEquivListPrev146,6172
static inline Ivy_Obj_t * Ivy_ObjFraig( Ivy_Obj_t * pObj )                               { return pObj->pEquiv;     }Ivy_ObjFraig147,6290
static inline int         Ivy_ObjSatNum( Ivy_Obj_t * pObj )                              { return (int)(ABC_PTRUINT_T)pObj->pNextFan0;         }Ivy_ObjSatNum148,6408
static inline Vec_Ptr_t * Ivy_ObjFaninVec( Ivy_Obj_t * pObj )                            { return (Vec_Ptr_t *)pObj->pNextFan1; }Ivy_ObjFaninVec149,6553
static inline void        Ivy_ObjSetSim( Ivy_Obj_t * pObj, Ivy_FraigSim_t * pSim )       { pObj->pFanout = (Ivy_Obj_t *)pSim; }Ivy_ObjSetSim151,6684
static inline void        Ivy_ObjSetClassNodeLast( Ivy_Obj_t * pObj, Ivy_Obj_t * pLast ) { pObj->pNextFan0 = pLast; }Ivy_ObjSetClassNodeLast152,6812
static inline void        Ivy_ObjSetClassNodeRepr( Ivy_Obj_t * pObj, Ivy_Obj_t * pRepr ) { pObj->pNextFan0 = pRepr; }Ivy_ObjSetClassNodeRepr153,6930
static inline void        Ivy_ObjSetClassNodeNext( Ivy_Obj_t * pObj, Ivy_Obj_t * pNext ) { pObj->pNextFan1 = pNext; }Ivy_ObjSetClassNodeNext154,7048
static inline void        Ivy_ObjSetNodeHashNext( Ivy_Obj_t * pObj, Ivy_Obj_t * pNext )  { pObj->pPrevFan0 = pNext; }Ivy_ObjSetNodeHashNext155,7166
static inline void        Ivy_ObjSetEquivListNext( Ivy_Obj_t * pObj, Ivy_Obj_t * pNext ) { pObj->pPrevFan0 = pNext; }Ivy_ObjSetEquivListNext156,7284
static inline void        Ivy_ObjSetEquivListPrev( Ivy_Obj_t * pObj, Ivy_Obj_t * pPrev ) { pObj->pPrevFan1 = pPrev; }Ivy_ObjSetEquivListPrev157,7402
static inline void        Ivy_ObjSetFraig( Ivy_Obj_t * pObj, Ivy_Obj_t * pNode )         { pObj->pEquiv    = pNode; }Ivy_ObjSetFraig158,7520
static inline void        Ivy_ObjSetSatNum( Ivy_Obj_t * pObj, int Num )                  { pObj->pNextFan0 = (Ivy_Obj_t *)(ABC_PTRUINT_T)Num;     }Ivy_ObjSetSatNum159,7638
static inline void        Ivy_ObjSetFaninVec( Ivy_Obj_t * pObj, Vec_Ptr_t * vFanins )    { pObj->pNextFan1 = (Ivy_Obj_t *)vFanins; }Ivy_ObjSetFaninVec160,7786
static inline unsigned    Ivy_ObjRandomSim()                       { return (rand() << 24) ^ (rand() << 12) ^ rand(); }Ivy_ObjRandomSim162,7920
#define Ivy_FraigForEachEquivClass(Ivy_FraigForEachEquivClass165,8080
#define Ivy_FraigForEachEquivClassSafe(Ivy_FraigForEachEquivClassSafe169,8330
#define Ivy_FraigForEachClassNode(Ivy_FraigForEachClassNode176,8767
#define Ivy_FraigForEachBinNode(Ivy_FraigForEachBinNode181,9060
static ABC_INT64_T s_nBTLimitGlobal = 0;s_nBTLimitGlobal207,11039
static ABC_INT64_T s_nInsLimitGlobal = 0;s_nInsLimitGlobal208,11080
void Ivy_FraigParamsDefault( Ivy_FraigParams_t * pParams )Ivy_FraigParamsDefault225,11613
int Ivy_FraigProve( Ivy_Man_t ** ppManAig, void * pPars )Ivy_FraigProve255,13035
Ivy_Man_t * Ivy_FraigPerform_int( Ivy_Man_t * pManAig, Ivy_FraigParams_t * pParams, ABC_INT64_T nBTLimitGlobal, ABC_INT64_T nInsLimitGlobal, ABC_INT64_T * pnSatConfs, ABC_INT64_T * pnSatInspects )Ivy_FraigPerform_int414,19680
Ivy_Man_t * Ivy_FraigPerform( Ivy_Man_t * pManAig, Ivy_FraigParams_t * pParams )Ivy_FraigPerform451,20849
Ivy_Man_t * Ivy_FraigMiter( Ivy_Man_t * pManAig, Ivy_FraigParams_t * pParams )Ivy_FraigMiter480,21624
Ivy_FraigMan_t * Ivy_FraigStartSimple( Ivy_Man_t * pManAig, Ivy_FraigParams_t * pParams )Ivy_FraigStartSimple530,23208
Ivy_FraigMan_t * Ivy_FraigStart( Ivy_Man_t * pManAig, Ivy_FraigParams_t * pParams )Ivy_FraigStart554,23867
void Ivy_FraigStop( Ivy_FraigMan_t * p )Ivy_FraigStop621,26368
void Ivy_FraigPrint( Ivy_FraigMan_t * p )Ivy_FraigPrint644,26955
void Ivy_NodeAssignRandom( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj )Ivy_NodeAssignRandom680,28572
void Ivy_NodeAssignConst( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj, int fConst1 )Ivy_NodeAssignConst701,29107
void Ivy_FraigAssignRandom( Ivy_FraigMan_t * p )Ivy_FraigAssignRandom722,29663
void Ivy_FraigAssignDist1( Ivy_FraigMan_t * p, unsigned * pPat )Ivy_FraigAssignDist1741,30116
int Ivy_NodeHasZeroSim( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj )Ivy_NodeHasZeroSim768,30892
void Ivy_NodeComplementSim( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj )Ivy_NodeComplementSim790,31425
int Ivy_NodeCompareSims( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj0, Ivy_Obj_t * pObj1 )Ivy_NodeCompareSims810,31925
void Ivy_NodeSimulateSim( Ivy_FraigMan_t * p, Ivy_FraigSim_t * pSims )Ivy_NodeSimulateSim833,32510
void Ivy_NodeSimulate( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj )Ivy_NodeSimulate888,33995
unsigned Ivy_NodeHash( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj )Ivy_NodeHash951,36170
void Ivy_FraigSimulateOne( Ivy_FraigMan_t * p )Ivy_FraigSimulateOne990,37714
void Ivy_FraigSimulateOneSim( Ivy_FraigMan_t * p )Ivy_FraigSimulateOneSim1023,38651
void Ivy_NodeAddToClass( Ivy_Obj_t * pClass, Ivy_Obj_t * pObj )Ivy_NodeAddToClass1045,39197
void Ivy_FraigAddClass( Ivy_FraigList_t * pList, Ivy_Obj_t * pClass )Ivy_FraigAddClass1067,39856
void Ivy_FraigInsertClass( Ivy_FraigList_t * pList, Ivy_Obj_t * pBase, Ivy_Obj_t * pClass )Ivy_FraigInsertClass1097,40664
void Ivy_FraigRemoveClass( Ivy_FraigList_t * pList, Ivy_Obj_t * pClass )Ivy_FraigRemoveClass1120,41404
int Ivy_FraigCountPairsClasses( Ivy_FraigMan_t * p )Ivy_FraigCountPairsClasses1147,42323
void Ivy_FraigCreateClasses( Ivy_FraigMan_t * p )Ivy_FraigCreateClasses1174,43001
int Ivy_FraigRefineClass_rec( Ivy_FraigMan_t * p, Ivy_Obj_t * pClass )Ivy_FraigRefineClass_rec1244,45324
void Ivy_FraigCheckOutputSimsSavePattern( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj )Ivy_FraigCheckOutputSimsSavePattern1307,47527
int Ivy_FraigCheckOutputSims( Ivy_FraigMan_t * p )Ivy_FraigCheckOutputSims1349,48762
int Ivy_FraigRefineClasses( Ivy_FraigMan_t * p )Ivy_FraigRefineClasses1387,50212
void Ivy_FraigPrintClass( Ivy_Obj_t * pClass )Ivy_FraigPrintClass1426,51301
int Ivy_FraigCountClassNodes( Ivy_Obj_t * pClass )Ivy_FraigCountClassNodes1446,51823
void Ivy_FraigPrintSimClasses( Ivy_FraigMan_t * p )Ivy_FraigPrintSimClasses1466,52267
void Ivy_FraigSavePattern0( Ivy_FraigMan_t * p )Ivy_FraigSavePattern01488,52804
void Ivy_FraigSavePattern1( Ivy_FraigMan_t * p )Ivy_FraigSavePattern11504,53183
int * Ivy_FraigCreateModel( Ivy_FraigMan_t * p )Ivy_FraigCreateModel1520,53589
void Ivy_FraigSavePattern( Ivy_FraigMan_t * p )Ivy_FraigSavePattern1543,54255
void Ivy_FraigSavePattern2( Ivy_FraigMan_t * p )Ivy_FraigSavePattern21567,55037
void Ivy_FraigSavePattern3( Ivy_FraigMan_t * p )Ivy_FraigSavePattern31591,55820
void Ivy_FraigSimulate( Ivy_FraigMan_t * p )Ivy_FraigSimulate1615,56611
void Ivy_FraigCleanPatScores( Ivy_FraigMan_t * p )Ivy_FraigCleanPatScores1664,58392
void Ivy_FraigAddToPatScores( Ivy_FraigMan_t * p, Ivy_Obj_t * pClass, Ivy_Obj_t * pClassNew )Ivy_FraigAddToPatScores1682,58809
int Ivy_FraigSelectBestPat( Ivy_FraigMan_t * p )Ivy_FraigSelectBestPat1713,59718
void Ivy_FraigResimulate( Ivy_FraigMan_t * p )Ivy_FraigResimulate1752,60825
void Ivy_FraigMiterPrint( Ivy_Man_t * pNtk, char * pString, abctime clk, int fVerbose )Ivy_FraigMiterPrint1796,62238
int Ivy_FraigMiterStatus( Ivy_Man_t * pMan )Ivy_FraigMiterStatus1815,62767
void Ivy_FraigMiterProve( Ivy_FraigMan_t * p )Ivy_FraigMiterProve1880,64487
void Ivy_FraigSweep( Ivy_FraigMan_t * p )Ivy_FraigSweep1968,67752
Ivy_Obj_t * Ivy_FraigAnd( Ivy_FraigMan_t * p, Ivy_Obj_t * pObjOld )Ivy_FraigAnd2027,70027
void Ivy_FraigPrintActivity( Ivy_FraigMan_t * p )Ivy_FraigPrintActivity2080,72143
int Ivy_FraigNodesAreEquiv( Ivy_FraigMan_t * p, Ivy_Obj_t * pOld, Ivy_Obj_t * pNew )Ivy_FraigNodesAreEquiv2099,72602
int Ivy_FraigNodeIsConst( Ivy_FraigMan_t * p, Ivy_Obj_t * pNew )Ivy_FraigNodeIsConst2266,77716
void Ivy_FraigAddClausesMux( Ivy_FraigMan_t * p, Ivy_Obj_t * pNode )Ivy_FraigAddClausesMux2352,80235
void Ivy_FraigAddClausesSuper( Ivy_FraigMan_t * p, Ivy_Obj_t * pNode, Vec_Ptr_t * vSuper )Ivy_FraigAddClausesSuper2435,82749
void Ivy_FraigCollectSuper_rec( Ivy_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Ivy_FraigCollectSuper_rec2473,84102
Vec_Ptr_t * Ivy_FraigCollectSuper( Ivy_Obj_t * pObj, int fUseMuxes )Ivy_FraigCollectSuper2498,84928
void Ivy_FraigObjAddToFrontier( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj, Vec_Ptr_t * vFrontier )Ivy_FraigObjAddToFrontier2519,85480
void Ivy_FraigNodeAddToSolver( Ivy_FraigMan_t * p, Ivy_Obj_t * pOld, Ivy_Obj_t * pNew )Ivy_FraigNodeAddToSolver2545,86252
int Ivy_FraigSetActivityFactors_rec( Ivy_FraigMan_t * p, Ivy_Obj_t * pObj, int LevelMin, int LevelMax )Ivy_FraigSetActivityFactors_rec2600,88385
int Ivy_FraigSetActivityFactors( Ivy_FraigMan_t * p, Ivy_Obj_t * pOld, Ivy_Obj_t * pNew )Ivy_FraigSetActivityFactors2636,89733
DdNode * Ivy_FraigNodesAreEquivBdd_int( DdManager * dd, DdNode * bFunc, Vec_Ptr_t * vFront, int Level )Ivy_FraigNodesAreEquivBdd_int2681,91056
int Ivy_FraigNodesAreEquivBdd( Ivy_Obj_t * pObj1, Ivy_Obj_t * pObj2 )Ivy_FraigNodesAreEquivBdd2772,93665
void Ivy_FraigExtractCone_rec( Ivy_Man_t * p, Ivy_Obj_t * pNode, Vec_Int_t * vLeaves, Vec_Int_t * vNodes )Ivy_FraigExtractCone_rec2840,95694
Aig_Man_t * Ivy_FraigExtractCone( Ivy_Man_t * p, Ivy_Obj_t * pObj1, Ivy_Obj_t * pObj2, Vec_Int_t * vLeaves )Ivy_FraigExtractCone2867,96456
int Ivy_FraigCheckCone( Ivy_FraigMan_t * pGlo, Ivy_Man_t * p, Ivy_Obj_t * pObj1, Ivy_Obj_t * pObj2, int nConfLimit )Ivy_FraigCheckCone2928,98392

src/aig/ivy/ivyRwrAlg.c,802
int Ivy_ManRewriteAlg( Ivy_Man_t * p, int fUpdateLevel, int fUseZeroCost )Ivy_ManRewriteAlg49,1590
Ivy_Obj_t * Ivy_NodeRewriteAlg( Ivy_Obj_t * pObj, Vec_Ptr_t * vFront, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vCone, Vec_Ptr_t * vSols, int LevelR, int fUseZeroCost )Ivy_NodeRewriteAlg125,4335
int Ivy_NodeCountMffc_rec( Ivy_Obj_t * pNode )Ivy_NodeCountMffc_rec217,7218
int Ivy_NodeCountMffc( Ivy_Obj_t * pNode )Ivy_NodeCountMffc240,7913
int Ivy_ManFindAlgCutCompare( Ivy_Obj_t ** pp1, Ivy_Obj_t ** pp2 )Ivy_ManFindAlgCutCompare257,8363
int Ivy_ManFindAlgCut_rec( Ivy_Obj_t * pObj, Ivy_Type_t Type, Vec_Ptr_t * vFront, Vec_Ptr_t * vCone )Ivy_ManFindAlgCut_rec279,9002
int Ivy_ManFindAlgCut( Ivy_Obj_t * pRoot, Vec_Ptr_t * vFront, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vCone )Ivy_ManFindAlgCut350,11335

src/aig/ivy/ivy_.c,0

src/aig/ivy/ivyResyn.c,279
Ivy_Man_t * Ivy_ManResyn0( Ivy_Man_t * pMan, int fUpdateLevel, int fVerbose )Ivy_ManResyn045,1278
Ivy_Man_t * Ivy_ManResyn( Ivy_Man_t * pMan, int fUpdateLevel, int fVerbose )Ivy_ManResyn86,2502
Ivy_Man_t * Ivy_ManRwsat( Ivy_Man_t * pMan, int fVerbose )Ivy_ManRwsat155,4733

src/aig/ivy/ivyDfs.c,927
void Ivy_ManDfs_rec( Ivy_Man_t * p, Ivy_Obj_t * pObj, Vec_Int_t * vNodes )Ivy_ManDfs_rec45,1263
Vec_Int_t * Ivy_ManDfs( Ivy_Man_t * p )Ivy_ManDfs87,2627
Vec_Int_t * Ivy_ManDfsSeq( Ivy_Man_t * p, Vec_Int_t ** pvLatches )Ivy_ManDfsSeq121,3689
void Ivy_ManCollectCone_rec( Ivy_Obj_t * pObj, Vec_Ptr_t * vCone )Ivy_ManCollectCone_rec168,5150
void Ivy_ManCollectCone( Ivy_Obj_t * pObj, Vec_Ptr_t * vFront, Vec_Ptr_t * vCone )Ivy_ManCollectCone195,5868
Vec_Vec_t * Ivy_ManLevelize( Ivy_Man_t * p )Ivy_ManLevelize224,6692
Vec_Int_t * Ivy_ManRequiredLevels( Ivy_Man_t * p )Ivy_ManRequiredLevels250,7343
int Ivy_ManIsAcyclic_rec( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_ManIsAcyclic_rec294,8860
int Ivy_ManIsAcyclic( Ivy_Man_t * p )Ivy_ManIsAcyclic373,11993
int Ivy_ManSetLevels_rec( Ivy_Obj_t * pObj, int fHaig )Ivy_ManSetLevels_rec408,13141
int Ivy_ManSetLevels( Ivy_Man_t * p, int fHaig )Ivy_ManSetLevels457,14758

src/aig/ivy/ivyTable.c,707
static unsigned Ivy_Hash( Ivy_Obj_t * pObj, int TableSize ) Ivy_Hash31,801
static int * Ivy_TableFind( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_TableFind43,1207
Ivy_Obj_t * Ivy_TableLookup( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_TableLookup71,2118
void Ivy_TableInsert( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_TableInsert105,3288
void Ivy_TableDelete( Ivy_Man_t * p, Ivy_Obj_t * pObj )Ivy_TableDelete132,3950
void Ivy_TableUpdate( Ivy_Man_t * p, Ivy_Obj_t * pObj, int ObjIdNew )Ivy_TableUpdate165,5007
int Ivy_TableCountEntries( Ivy_Man_t * p )Ivy_TableCountEntries187,5590
void Ivy_TableResize( Ivy_Man_t * p )Ivy_TableResize206,6062
void Ivy_TableProfile( Ivy_Man_t * p )Ivy_TableProfile250,7466

src/aig/ivy/ivyOper.c,1094
static inline int Ivy_ObjIsExorType( Ivy_Obj_t * p0, Ivy_Obj_t * p1, Ivy_Obj_t ** ppFan0, Ivy_Obj_t ** ppFan1 )Ivy_ObjIsExorType31,804
Ivy_Obj_t * Ivy_Oper( Ivy_Man_t * p, Ivy_Obj_t * p0, Ivy_Obj_t * p1, Ivy_Type_t Type )Ivy_Oper63,1936
Ivy_Obj_t * Ivy_And( Ivy_Man_t * p, Ivy_Obj_t * p0, Ivy_Obj_t * p1 )Ivy_And84,2494
Ivy_Obj_t * Ivy_Exor( Ivy_Man_t * p, Ivy_Obj_t * p0, Ivy_Obj_t * p1 )Ivy_Exor113,3419
Ivy_Obj_t * Ivy_Or( Ivy_Man_t * p, Ivy_Obj_t * p0, Ivy_Obj_t * p1 )Ivy_Or142,4225
Ivy_Obj_t * Ivy_Mux( Ivy_Man_t * p, Ivy_Obj_t * pC, Ivy_Obj_t * p1, Ivy_Obj_t * p0 )Ivy_Mux158,4619
Ivy_Obj_t * Ivy_Maj( Ivy_Man_t * p, Ivy_Obj_t * pA, Ivy_Obj_t * pB, Ivy_Obj_t * pC )Ivy_Maj209,6756
Ivy_Obj_t * Ivy_Multi_rec( Ivy_Man_t * p, Ivy_Obj_t ** ppObjs, int nObjs, Ivy_Type_t Type )Ivy_Multi_rec225,7263
Ivy_Obj_t * Ivy_Multi( Ivy_Man_t * p, Ivy_Obj_t ** pArgs, int nArgs, Ivy_Type_t Type )Ivy_Multi246,7875
Ivy_Obj_t * Ivy_Miter( Ivy_Man_t * p, Vec_Ptr_t * vPairs )Ivy_Miter264,8349
Ivy_Obj_t * Ivy_Latch( Ivy_Man_t * p, Ivy_Obj_t * pObj, Ivy_Init_t Init )Ivy_Latch287,9105

src/aig/gia/giaGen.c,1374
static inline word * Gia_ManObjSim( Gia_Man_t * p, int iObj )Gia_ManObjSim47,1269
static inline void Gia_ManObjSimPi( Gia_Man_t * p, int iObj )Gia_ManObjSimPi51,1394
static inline void Gia_ManObjSimPo( Gia_Man_t * p, int iObj )Gia_ManObjSimPo59,1616
static inline void Gia_ManObjSimAnd( Gia_Man_t * p, int iObj )Gia_ManObjSimAnd72,2061
int Gia_ManSimulateWords( Gia_Man_t * p, int nWords )Gia_ManSimulateWords92,2911
int Gia_ManSimulateWordsInit( Gia_Man_t * p, Vec_Wrd_t * vSimsIn )Gia_ManSimulateWordsInit113,3502
void Gia_ManDumpFiles( Gia_Man_t * p, int nCexesT, int nCexesV, int Seed, char * pFileName )Gia_ManDumpFiles150,4636
void Gia_ManDumpPlaFiles( Gia_Man_t * p, int nCexesT, int nCexesV, int Seed, char * pFileName )Gia_ManDumpPlaFiles254,9008
void Gia_ManSimLogStats( Gia_Man_t * p, char * pDumpFile, int Total, int Correct, int Guess )Gia_ManSimLogStats313,10978
int Gia_ManSimParamRead( char * pFileName, int * pnIns, int * pnWords )Gia_ManSimParamRead328,11717
void Gia_ManSimFileRead( char * pFileName, int nIns, int nWords, Vec_Wrd_t * vSimsIn, Vec_Int_t * vValues )Gia_ManSimFileRead376,13088
void Gia_ManCompareValues( Gia_Man_t * p, Vec_Wrd_t * vSimsIn, Vec_Int_t * vValues, char * pDumpFile )Gia_ManCompareValues413,14245
void Gia_ManTestOneFile( Gia_Man_t * p, char * pFileName, char * pDumpFile )Gia_ManTestOneFile446,15570

src/aig/gia/giaScl.c,793
int Gia_ManCombMarkUsed_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCombMarkUsed_rec45,1277
int Gia_ManCombMarkUsed( Gia_Man_t * p )Gia_ManCombMarkUsed60,1939
Gia_Man_t * Gia_ManCleanup( Gia_Man_t * p )Gia_ManCleanup84,2625
Gia_Man_t * Gia_ManCleanupOutputs( Gia_Man_t * p, int nOutputs )Gia_ManCleanupOutputs101,3010
int Gia_ManSeqMarkUsed_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vRoots )Gia_ManSeqMarkUsed_rec128,3656
int Gia_ManSeqMarkUsed( Gia_Man_t * p )Gia_ManSeqMarkUsed156,4494
Gia_Man_t * Gia_ManSeqCleanup( Gia_Man_t * p )Gia_ManSeqCleanup183,5184
Gia_Man_t * Gia_ManReduceEquiv( Gia_Man_t * p, int fVerbose )Gia_ManReduceEquiv200,5625
Gia_Man_t * Gia_ManSeqStructSweep( Gia_Man_t * p, int fConst, int fEquiv, int fVerbose )Gia_ManSeqStructSweep258,7657

src/aig/gia/giaPf.c,10966
#define PF_LEAF_MAX PF_LEAF_MAX38,1006
#define PF_CUT_MAX PF_CUT_MAX39,1029
#define PF_NO_LEAF PF_NO_LEAF40,1052
#define PF_NO_FUNC PF_NO_FUNC41,1075
#define PF_INFINITY PF_INFINITY42,1105
typedef struct Pf_Cut_t_ Pf_Cut_t; Pf_Cut_t44,1134
struct Pf_Cut_t_Pf_Cut_t_45,1170
    word            Sign;           // signatureSign47,1189
    int             Delay;          // delayDelay48,1238
    float           Flow;           // flowFlow49,1283
    unsigned        iFunc   : 26;   // function (PF_NO_FUNC)iFunc50,1327
    unsigned        Useless :  1;   // functionUseless51,1388
    unsigned        nLeaves :  5;   // leaf number (PF_NO_LEAF)nLeaves52,1436
    int             pLeaves[PF_LEAF_MAX+1]; // leavespLeaves53,1500
typedef struct Pf_Mat_t_ Pf_Mat_t; Pf_Mat_t55,1557
struct Pf_Mat_t_Pf_Mat_t_56,1593
    unsigned        fCompl  :  8;   // complementedfCompl58,1612
    unsigned        Phase   :  6;   // match phasePhase59,1664
    unsigned        Perm    : 18;   // match permutationPerm60,1715
typedef struct Pf_Obj_t_ Pf_Obj_t; Pf_Obj_t62,1775
struct Pf_Obj_t_Pf_Obj_t_63,1811
    float           Area;Area65,1830
    unsigned        Gate    :  7;   // gateGate66,1856
    unsigned        nLeaves :  3;   // fanin count  nLeaves67,1900
    unsigned        nRefs   : 22;   // ref countnRefs68,1953
    int             pLeaves[6];     // leaf literalspLeaves69,2002
typedef struct Pf_Man_t_ Pf_Man_t; Pf_Man_t71,2058
struct Pf_Man_t_Pf_Man_t_72,2094
    Gia_Man_t *     pGia;           // derived managerpGia75,2130
    Jf_Par_t *      pPars;          // parameterspPars76,2185
    Vec_Mem_t *     vTtMem;         // truth tablesvTtMem78,2251
    Vec_Wec_t *     vTt2Match;      // matches for truth tablesvTt2Match79,2303
    Mio_Cell_t *    pCells;         // library gatespCells80,2367
    int             nCells;         // library gate countnCells81,2420
    Pf_Obj_t *      pPfObjs;        // best cutspPfObjs83,2494
    Vec_Ptr_t       vPages;         // cut memoryvPages84,2543
    Vec_Int_t       vCutSets;       // cut offsetsvCutSets85,2593
    Vec_Flt_t       vCutFlows;      // temporary cut areavCutFlows86,2644
    Vec_Int_t       vCutDelays;     // temporary cut delayvCutDelays87,2702
    int             iCur;           // current positioniCur88,2761
    int             Iter;           // mapping iterationsIter89,2817
    int             fUseEla;        // use exact areafUseEla90,2875
    int             nInvs;          // the inverter countnInvs91,2929
    float           InvDelay;       // inverter delayInvDelay92,2987
    float           InvArea;        // inverter area InvArea93,3041
    abctime         clkStart;       // starting timeclkStart95,3113
    double          CutCount[6];    // cut countsCutCount96,3166
    int             nCutUseAll;     // objects with useful cutsnCutUseAll97,3216
static inline int         Pf_Mat2Int( Pf_Mat_t Mat )                                { union { int x; Pf_Mat_t y; } v; v.y = Mat; return v.x;           }Pf_Mat2Int100,3284
static inline Pf_Mat_t    Pf_Int2Mat( int Int )                                     { union { int x; Pf_Mat_t y; } v; v.x = Int; return v.y;           }Pf_Int2Mat101,3437
static inline Pf_Obj_t *  Pf_ManObj( Pf_Man_t * p, int i )                          { return p->pPfObjs + i;                                           }Pf_ManObj103,3591
static inline Mio_Cell_t* Pf_ManCell( Pf_Man_t * p, int i )                         { return p->pCells + i;                                            }Pf_ManCell104,3744
static inline int *       Pf_ManCutSet( Pf_Man_t * p, int i )                       { return (int *)Vec_PtrEntry(&p->vPages, i >> 16) + (i & 0xFFFF);  }Pf_ManCutSet105,3897
static inline int         Pf_ObjCutSetId( Pf_Man_t * p, int i )                     { return Vec_IntEntry( &p->vCutSets, i );                          }Pf_ObjCutSetId106,4050
static inline int *       Pf_ObjCutSet( Pf_Man_t * p, int i )                       { return Pf_ManCutSet(p, Pf_ObjCutSetId(p, i));                    }Pf_ObjCutSet107,4203
static inline int         Pf_ObjHasCuts( Pf_Man_t * p, int i )                      { return (int)(Vec_IntEntry(&p->vCutSets, i) > 0);                 }Pf_ObjHasCuts108,4356
static inline int         Pf_ObjCutUseless( Pf_Man_t * p, int TruthId )             { return (int)(TruthId >= Vec_WecSize(p->vTt2Match));              } Pf_ObjCutUseless109,4509
static inline float       Pf_ObjCutFlow( Pf_Man_t * p, int i )                      { return Vec_FltEntry(&p->vCutFlows, i);                           } Pf_ObjCutFlow111,4664
static inline int         Pf_ObjCutDelay( Pf_Man_t * p, int i )                     { return Vec_IntEntry(&p->vCutDelays, i);                          } Pf_ObjCutDelay112,4818
static inline void        Pf_ObjSetCutFlow( Pf_Man_t * p, int i, float a )          { Vec_FltWriteEntry(&p->vCutFlows, i, a);                          } Pf_ObjSetCutFlow113,4972
static inline void        Pf_ObjSetCutDelay( Pf_Man_t * p, int i, int d )           { Vec_IntWriteEntry(&p->vCutDelays, i, d);                         } Pf_ObjSetCutDelay114,5126
static inline int         Pf_CutSize( int * pCut )                                  { return pCut[0] & PF_NO_LEAF;                                     }Pf_CutSize116,5281
static inline int         Pf_CutFunc( int * pCut )                                  { return ((unsigned)pCut[0] >> 5);                                 }Pf_CutFunc117,5434
static inline int *       Pf_CutLeaves( int * pCut )                                { return pCut + 1;                                                 }Pf_CutLeaves118,5587
static inline int         Pf_CutSetBoth( int n, int f )                             { return n | (f << 5);                                             }Pf_CutSetBoth119,5740
static inline int         Pf_CutIsTriv( int * pCut, int i )                         { return Pf_CutSize(pCut) == 1 && pCut[1] == i;                    } Pf_CutIsTriv120,5893
static inline int         Pf_CutHandle( int * pCutSet, int * pCut )                 { assert( pCut > pCutSet ); return pCut - pCutSet;                 } Pf_CutHandle121,6047
static inline int *       Pf_CutFromHandle( int * pCutSet, int h )                  { assert( h > 0 ); return pCutSet + h;                             }Pf_CutFromHandle122,6201
static inline int         Pf_CutConfLit( int Conf, int i )                          { return 15 & (Conf >> (i << 2));                                  }Pf_CutConfLit123,6354
static inline int         Pf_CutConfVar( int Conf, int i )                          { return Abc_Lit2Var( Pf_CutConfLit(Conf, i) );                    }Pf_CutConfVar124,6507
static inline int         Pf_CutConfC( int Conf, int i )                            { return Abc_LitIsCompl( Pf_CutConfLit(Conf, i) );                 }Pf_CutConfC125,6660
#define Pf_SetForEachCut(Pf_SetForEachCut127,6814
#define Pf_ObjForEachCut(Pf_ObjForEachCut128,6946
#define Pf_CutForEachLit(Pf_CutForEachLit129,7027
#define Pf_CutForEachVar(Pf_CutForEachVar130,7188
void Pf_StoCreateGateAdd( Pf_Man_t * pMan, word uTruth, int * pFans, int nFans, int CellId )Pf_StoCreateGateAdd147,7825
void Pf_StoCreateGate( Pf_Man_t * pMan, Mio_Cell_t * pCell, int ** pComp, int ** pPerm, int * pnPerms )Pf_StoCreateGate174,8829
void Pf_StoDeriveMatches( Pf_Man_t * p, int fVerbose )Pf_StoDeriveMatches204,9897
void Pf_StoPrintOne( Pf_Man_t * p, int Count, int t, int i, int GateId, Pf_Mat_t Mat )Pf_StoPrintOne225,10630
void Pf_StoPrint( Pf_Man_t * p, int fVerbose )Pf_StoPrint249,11447
Pf_Man_t * Pf_StoCreate( Gia_Man_t * pGia, Jf_Par_t * pPars )Pf_StoCreate293,12540
void Pf_StoDelete( Pf_Man_t * p )Pf_StoDelete336,14269
static inline int Pf_CutComputeTruth6( Pf_Man_t * p, Pf_Cut_t * pCut0, Pf_Cut_t * pCut1, int fCompl0, int fCompl1, Pf_Cut_t * pCutR, int fIsXor )Pf_CutComputeTruth6366,14912
static inline int Pf_CutComputeTruthMux6( Pf_Man_t * p, Pf_Cut_t * pCut0, Pf_Cut_t * pCut1, Pf_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, Pf_Cut_t * pCutR )Pf_CutComputeTruthMux6386,16074
static inline int Pf_CutCountBits( word i )Pf_CutCountBits421,17651
static inline word Pf_CutGetSign( int * pLeaves, int nLeaves )Pf_CutGetSign428,17900
static inline int Pf_CutCreateUnit( Pf_Cut_t * p, int i )Pf_CutCreateUnit435,18097
static inline void Pf_Cutprintf( Pf_Man_t * p, Pf_Cut_t * pCut )Pf_Cutprintf445,18333
static inline int Pf_ManPrepareCuts( Pf_Cut_t * pCuts, Pf_Man_t * p, int iObj, int fAddUnit )Pf_ManPrepareCuts460,18974
static inline int Pf_ManSaveCuts( Pf_Man_t * p, Pf_Cut_t ** pCuts, int nCuts, int fUseful )Pf_ManSaveCuts483,19872
static inline int Pf_ManCountUseful( Pf_Cut_t ** pCuts, int nCuts )Pf_ManCountUseful505,20783
static inline int Pf_ManCountMatches( Pf_Man_t * p, Pf_Cut_t ** pCuts, int nCuts )Pf_ManCountMatches512,20966
static inline int Pf_CutCheck( Pf_Cut_t * pBase, Pf_Cut_t * pCut ) // check if pCut is contained in pBasePf_CutCheck532,21518
static inline int Pf_SetCheckArray( Pf_Cut_t ** ppCuts, int nCuts )Pf_SetCheckArray548,21966
static inline int Pf_CutMergeOrder( Pf_Cut_t * pCut0, Pf_Cut_t * pCut1, Pf_Cut_t * pCut, int nLutSize )Pf_CutMergeOrder588,23060
static inline int Pf_CutMergeOrderMux( Pf_Cut_t * pCut0, Pf_Cut_t * pCut1, Pf_Cut_t * pCut2, Pf_Cut_t * pCut, int nLutSize )Pf_CutMergeOrderMux651,24802
static inline int Pf_SetCutIsContainedOrder( Pf_Cut_t * pBase, Pf_Cut_t * pCut ) // check if pCut is contained in pBasePf_SetCutIsContainedOrder675,25747
static inline int Pf_SetLastCutIsContained( Pf_Cut_t ** pCuts, int nCuts )Pf_SetLastCutIsContained701,26466
static inline int Pf_SetLastCutContainsArea( Pf_Cut_t ** pCuts, int nCuts )Pf_SetLastCutContainsArea709,26796
static inline int Pf_CutCompareArea( Pf_Cut_t * pCut0, Pf_Cut_t * pCut1 )Pf_CutCompareArea727,27440
static inline void Pf_SetSortByArea( Pf_Cut_t ** pCuts, int nCuts )Pf_SetSortByArea739,27972
static inline int Pf_SetAddCut( Pf_Cut_t ** pCuts, int nCuts, int nCutNum )Pf_SetAddCut749,28246
static inline int Pf_CutArea( Pf_Man_t * p, int nLeaves )Pf_CutArea757,28506
static inline void Pf_CutParams( Pf_Man_t * p, Pf_Cut_t * pCut, int nGiaRefs )Pf_CutParams763,28652
void Pf_ObjMergeOrder( Pf_Man_t * p, int iObj )Pf_ObjMergeOrder777,29174
void Pf_ManComputeCuts( Pf_Man_t * p )Pf_ManComputeCuts878,33668
void Pf_ManPrintStats( Pf_Man_t * p, char * pTitle )Pf_ManPrintStats906,34311
void Pf_ManPrintInit( Pf_Man_t * p )Pf_ManPrintInit919,34793
void Pf_ManPrintQuit( Pf_Man_t * p )Pf_ManPrintQuit938,35481
void Pf_ManComputeMapping( Pf_Man_t * p )Pf_ManComputeMapping1262,48125
void Pf_ManSetDefaultPars( Jf_Par_t * pPars )Pf_ManSetDefaultPars1277,48426
Gia_Man_t * Pf_ManPerformMapping( Gia_Man_t * pGia, Jf_Par_t * pPars )Pf_ManPerformMapping1303,49209

src/aig/gia/giaCCof.c,1559
typedef struct Ccf_Man_t_ Ccf_Man_t; // managerCcf_Man_t31,828
struct Ccf_Man_t_Ccf_Man_t_32,876
    Gia_Man_t *  pGia;       // single-output AIG managerpGia35,913
    int          nFrameMax;  // maximum number of framesnFrameMax36,971
    int          nConfMax;   // maximum number of conflictsnConfMax37,1028
    int          nTimeMax;   // maximum runtime in secondsnTimeMax38,1088
    int          fVerbose;   // verbose flagfVerbose39,1147
    void *       pUnr;       // unrolling managerpUnr41,1213
    Gia_Man_t *  pFrames;    // unrolled timeframespFrames42,1263
    Vec_Int_t *  vCopies;    // copy pointers of the AIGvCopies43,1315
    sat_solver * pSat;       // SAT solverpSat44,1372
Ccf_Man_t * Ccf_ManStart( Gia_Man_t * pGia, int nFrameMax, int nConfMax, int nTimeMax, int fVerbose )Ccf_ManStart62,1888
void Ccf_ManStop( Ccf_Man_t * p )Ccf_ManStop97,2901
void Gia_ManCofExtendSolver( Ccf_Man_t * p )Gia_ManCofExtendSolver118,3345
static inline int Gia_Obj0Copy( Vec_Int_t * vCopies, int Fan0, int fCompl0 )  Gia_Obj0Copy136,3896
static inline int Gia_Obj1Copy( Vec_Int_t * vCopies, int Fan1, int fCompl1 )  Gia_Obj1Copy139,4043
void Gia_ManCofOneDerive_rec( Ccf_Man_t * p, int Id )Gia_ManCofOneDerive_rec153,4520
int Gia_ManCofOneDerive( Ccf_Man_t * p, int LitProp )Gia_ManCofOneDerive191,5788
int Gia_ManCofGetReachable( Ccf_Man_t * p, int Lit )Gia_ManCofGetReachable220,6798
Gia_Man_t * Gia_ManCofTest( Gia_Man_t * pGia, int nFrameMax, int nConfMax, int nTimeMax, int fVerbose )Gia_ManCofTest266,8267

src/aig/gia/giaMan.c,2666
Gia_Man_t * Gia_ManStart( int nObjsMax )Gia_ManStart57,1451
void Gia_ManStop( Gia_Man_t * p )Gia_ManStop82,2082
double Gia_ManMemory( Gia_Man_t * p )Gia_ManMemory189,5420
void Gia_ManStopP( Gia_Man_t ** p )Gia_ManStopP218,6351
void Gia_ManPrintClasses_old( Gia_Man_t * p )Gia_ManPrintClasses_old237,6727
void Gia_ManPrintPlacement( Gia_Man_t * p )Gia_ManPrintPlacement269,7544
void Gia_ManPrintTents_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vObjs )Gia_ManPrintTents_rec294,8198
void Gia_ManPrintTents( Gia_Man_t * p )Gia_ManPrintTents306,8625
void Gia_ManPrintInitClasses( Vec_Int_t * vInits )Gia_ManPrintInitClasses355,10219
void Gia_ManPrintChoiceStats( Gia_Man_t * p )Gia_ManPrintChoiceStats400,11392
int Gia_ManPrintEdges( Gia_Man_t * p )Gia_ManPrintEdges431,12189
void Gia_ManLogAigStats( Gia_Man_t * p, char * pDumpFile )Gia_ManLogAigStats464,13197
void Gia_ManPrintStats( Gia_Man_t * p, Gps_Par_t * pPars )Gia_ManPrintStats488,13985
void Gia_ManPrintStatsShort( Gia_Man_t * p )Gia_ManPrintStatsShort649,20020
void Gia_ManPrintMiterStatus( Gia_Man_t * p )Gia_ManPrintMiterStatus670,20639
void Gia_ManPrintStatsMiter( Gia_Man_t * p, int fVerbose )Gia_ManPrintStatsMiter721,22027
void Gia_ManSetRegNum( Gia_Man_t * p, int nRegs )Gia_ManSetRegNum755,23077
void Gia_ManReportImprovement( Gia_Man_t * p, Gia_Man_t * pNew )Gia_ManReportImprovement773,23451
void Gia_ManPrintNpnClasses( Gia_Man_t * p )Gia_ManPrintNpnClasses795,24223
void Gia_ManDfsCollect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vObjs )Gia_ManDfsCollect_rec886,27612
Vec_Int_t * Gia_ManDfsCollect( Gia_Man_t * p )Gia_ManDfsCollect946,29673
Vec_Int_t * Gia_ManDfsArrivals( Gia_Man_t * p, Vec_Int_t * vObjs )Gia_ManDfsArrivals969,30297
static inline void Gia_ManDfsUpdateRequired( Vec_Int_t * vTimes, int iObj, int Req )Gia_ManDfsUpdateRequired1044,33113
Vec_Int_t * Gia_ManDfsRequireds( Gia_Man_t * p, Vec_Int_t * vObjs, int ReqTime )Gia_ManDfsRequireds1050,33310
Vec_Int_t * Gia_ManDfsSlacks( Gia_Man_t * p )Gia_ManDfsSlacks1123,36123
void Gia_ManDfsSlacksPrint( Gia_Man_t * p )Gia_ManDfsSlacksPrint1154,37269
Vec_Bit_t * Gia_ManGenUsed( Gia_Man_t * p, int fBuf )Gia_ManGenUsed1201,38624
int Gia_ManNameIsLegalInVerilog( char * pName )Gia_ManNameIsLegalInVerilog1220,39325
char * Gia_ObjGetDumpName( Vec_Ptr_t * vNames, char c, int i, int d )Gia_ObjGetDumpName1236,40032
void Gia_ManWriteNames( FILE * pFile, char c, int n, Vec_Ptr_t * vNames, int Start, int Skip, Vec_Bit_t * vObjs )Gia_ManWriteNames1251,40461
void Gia_ManDumpVerilog( Gia_Man_t * p, char * pFileName, Vec_Int_t * vObjs )Gia_ManDumpVerilog1272,41101

src/aig/gia/giaCTas.c,11955
typedef struct Tas_Par_t_ Tas_Par_t;Tas_Par_t33,863
struct Tas_Par_t_Tas_Par_t_34,900
    int           nBTLimit;     // limit on the number of conflictsnBTLimit37,943
    int           nJustLimit;   // limit on the size of justification queuenJustLimit38,1011
    int           nBTThis;      // number of conflictsnBTThis40,1113
    int           nBTThisNc;    // number of conflictsnBTThisNc41,1168
    int           nJustThis;    // max size of the frontiernJustThis42,1223
    int           nBTTotal;     // total number of conflictsnBTTotal43,1283
    int           nJustTotal;   // total size of the frontiernJustTotal44,1344
    float         VarDecay;     // variable activity decayVarDecay46,1422
    int           VarInc;       // variable incrementVarInc47,1481
    int           fUseActive;   // use most activefUseActive49,1562
    int           fUseHighest;  // use node with the highest IDfUseHighest50,1613
    int           fUseLowest;   // use node with the highest IDfUseLowest51,1677
    int           fUseMaxFF;    // use node with the largest fanin fanoutfUseMaxFF52,1741
    int           fVerbose;fVerbose54,1828
typedef struct Tas_Cls_t_ Tas_Cls_t;Tas_Cls_t57,1860
struct Tas_Cls_t_Tas_Cls_t_58,1897
    int           iNext[2];     // beginning of the queueiNext60,1917
    int           nLits;        // the number of literalsnLits61,1975
    int           pLits[0];     // clause literalspLits62,2033
typedef struct Tas_Sto_t_ Tas_Sto_t;Tas_Sto_t65,2088
struct Tas_Sto_t_Tas_Sto_t_66,2125
    int           iCur;         // current positioniCur68,2145
    int           nSize;        // allocated sizenSize69,2197
    int *         pData;        // clause informationpData70,2247
typedef struct Tas_Que_t_ Tas_Que_t;Tas_Que_t73,2305
struct Tas_Que_t_Tas_Que_t_74,2342
    int           iHead;        // beginning of the queueiHead76,2362
    int           iTail;        // end of the queueiTail77,2420
    int           nSize;        // allocated sizenSize78,2472
    Gia_Obj_t **  pData;        // nodes stored in the queuepData79,2522
struct Tas_Man_t_Tas_Man_t_82,2588
    Tas_Par_t     Pars;         // parametersPars84,2608
    Gia_Man_t *   pAig;         // AIG managerpAig85,2654
    Tas_Que_t     pProp;        // propagation queuepProp86,2701
    Tas_Que_t     pJust;        // justification queuepJust87,2754
    Tas_Que_t     pClauses;     // clause queuepClauses88,2809
    Gia_Obj_t **  pIter;        // iterator through clause varspIter89,2857
    Vec_Int_t *   vLevReas;     // levels and decisionsvLevReas90,2921
    Vec_Int_t *   vModel;       // satisfying assignmentvModel91,2977
    Vec_Ptr_t *   vTemp;        // temporary storagevTemp92,3034
    Tas_Sto_t     pStore;       // storage for watched clausespStore94,3110
    int *         pWatches;     // watched lists for each literalpWatches95,3173
    Vec_Int_t *   vWatchLits;   // lits whose watched are assignedvWatchLits96,3239
    int           nClauses;     // the counter of clausesnClauses97,3306
    float *       pActivity;    // variable activitypActivity99,3380
    Vec_Int_t *   vActiveVars;  // variables with activityvActiveVars100,3433
    int           nSatUnsat;    // the number of proofsnSatUnsat102,3520
    int           nSatSat;      // the number of failurenSatSat103,3576
    int           nSatUndec;    // the number of timeoutsnSatUndec104,3633
    int           nSatTotal;    // the number of callsnSatTotal105,3691
    int           nConfUnsat;   // conflicts in unsat problemsnConfUnsat107,3763
    int           nConfSat;     // conflicts in sat problemsnConfSat108,3826
    int           nConfUndec;   // conflicts in undec problemsnConfUndec109,3887
    abctime       timeSatUnsat; // unsattimeSatUnsat111,3971
    abctime       timeSatSat;   // sattimeSatSat112,4012
    abctime       timeSatUndec; // undecidedtimeSatUndec113,4051
    abctime       timeTotal;    // total runtimetimeTotal114,4096
static inline int   Tas_VarIsAssigned( Gia_Obj_t * pVar )      { return pVar->fMark0;                        }Tas_VarIsAssigned117,4149
static inline void  Tas_VarAssign( Gia_Obj_t * pVar )          { assert(!pVar->fMark0); pVar->fMark0 = 1;    }Tas_VarAssign118,4260
static inline void  Tas_VarUnassign( Gia_Obj_t * pVar )        { assert(pVar->fMark0);  pVar->fMark0 = 0; pVar->fMark1 = 0; pVar->Value = ~0; }Tas_VarUnassign119,4371
static inline int   Tas_VarValue( Gia_Obj_t * pVar )           { assert(pVar->fMark0);  return pVar->fMark1; }Tas_VarValue120,4515
static inline void  Tas_VarSetValue( Gia_Obj_t * pVar, int v ) { assert(pVar->fMark0);  pVar->fMark1 = v;    }Tas_VarSetValue121,4626
static inline int   Tas_VarIsJust( Gia_Obj_t * pVar )          { return Gia_ObjIsAnd(pVar) && !Tas_VarIsAssigned(Gia_ObjFanin0(pVar)) && !Tas_VarIsAssigned(Gia_ObjFanin1(pVar)); } Tas_VarIsJust122,4737
static inline int   Tas_VarFanin0Value( Gia_Obj_t * pVar )     { return !Tas_VarIsAssigned(Gia_ObjFanin0(pVar)) ? 2 : (Tas_VarValue(Gia_ObjFanin0(pVar)) ^ Gia_ObjFaninC0(pVar)); }Tas_VarFanin0Value123,4918
static inline int   Tas_VarFanin1Value( Gia_Obj_t * pVar )     { return !Tas_VarIsAssigned(Gia_ObjFanin1(pVar)) ? 2 : (Tas_VarValue(Gia_ObjFanin1(pVar)) ^ Gia_ObjFaninC1(pVar)); }Tas_VarFanin1Value124,5098
static inline int   Tas_VarToLit( Tas_Man_t * p, Gia_Obj_t * pObj ) { assert( Tas_VarIsAssigned(pObj) ); return Abc_Var2Lit( Gia_ObjId(p->pAig, pObj), !Tas_VarValue(pObj) );     }Tas_VarToLit125,5278
static inline int   Tas_LitIsTrue( Gia_Obj_t * pObj, int Lit ) { assert( Tas_VarIsAssigned(pObj) ); return Tas_VarValue(pObj) != Abc_LitIsCompl(Lit);                             }Tas_LitIsTrue126,5458
static inline int         Tas_ClsHandle( Tas_Man_t * p, Tas_Cls_t * pClause ) { return ((int *)pClause) - p->pStore.pData;   }Tas_ClsHandle128,5639
static inline Tas_Cls_t * Tas_ClsFromHandle( Tas_Man_t * p, int h )           { return (Tas_Cls_t *)(p->pStore.pData + h);   }Tas_ClsFromHandle129,5766
static inline int         Tas_VarDecLevel( Tas_Man_t * p, Gia_Obj_t * pVar )  { assert( pVar->Value != ~0 ); return Vec_IntEntry(p->vLevReas, 3*pVar->Value);          }Tas_VarDecLevel131,5894
static inline Gia_Obj_t * Tas_VarReason0( Tas_Man_t * p, Gia_Obj_t * pVar )   { assert( pVar->Value != ~0 ); return pVar + Vec_IntEntry(p->vLevReas, 3*pVar->Value+1); }Tas_VarReason0132,6063
static inline Gia_Obj_t * Tas_VarReason1( Tas_Man_t * p, Gia_Obj_t * pVar )   { assert( pVar->Value != ~0 ); return pVar + Vec_IntEntry(p->vLevReas, 3*pVar->Value+2); }Tas_VarReason1133,6232
static inline int         Tas_ClauseDecLevel( Tas_Man_t * p, int hClause )    { return Tas_VarDecLevel( p, p->pClauses.pData[hClause] );                               }Tas_ClauseDecLevel134,6401
static inline int         Tas_VarHasReasonCls( Tas_Man_t * p, Gia_Obj_t * pVar ) { assert( pVar->Value != ~0 ); return Vec_IntEntry(p->vLevReas, 3*pVar->Value+1) == 0 && Vec_IntEntry(p->vLevReas, 3*pVar->Value+2) != 0; }Tas_VarHasReasonCls136,6571
static inline Tas_Cls_t * Tas_VarReasonCls( Tas_Man_t * p, Gia_Obj_t * pVar )    { assert( pVar->Value != ~0 ); return Tas_ClsFromHandle( p, Vec_IntEntry(p->vLevReas, 3*pVar->Value+2) );                                 }Tas_VarReasonCls137,6792
#define Tas_QueForEachEntry(Tas_QueForEachEntry139,7014
#define Tas_ClauseForEachVar(Tas_ClauseForEachVar142,7166
#define Tas_ClauseForEachVar1(Tas_ClauseForEachVar1144,7322
void Tas_SetDefaultParams( Tas_Par_t * pPars )Tas_SetDefaultParams162,7971
Tas_Man_t * Tas_ManAlloc( Gia_Man_t * pAig, int nBTLimit )Tas_ManAlloc187,8952
void Tas_ManStop( Tas_Man_t * p )Tas_ManStop223,10217
Vec_Int_t * Tas_ReadModel( Tas_Man_t * p )Tas_ReadModel250,10890
static inline int Tas_ManCheckLimits( Tas_Man_t * p )Tas_ManCheckLimits269,11238
static inline void Tas_ManSaveModel( Tas_Man_t * p, Vec_Int_t * vCex )Tas_ManSaveModel285,11676
static inline int Tas_QueIsEmpty( Tas_Que_t * p )Tas_QueIsEmpty322,12778
static inline void Tas_QuePush( Tas_Que_t * p, Gia_Obj_t * pObj )Tas_QuePush338,13100
static inline int Tas_QueHasNode( Tas_Que_t * p, Gia_Obj_t * pObj )Tas_QueHasNode359,13610
static inline void Tas_QueStore( Tas_Que_t * p, int * piHeadOld, int * piTailOld )Tas_QueStore380,14056
static inline void Tas_QueRestore( Tas_Que_t * p, int iHeadOld, int iTailOld )Tas_QueRestore401,14557
static inline int Tas_QueFinish( Tas_Que_t * p )Tas_QueFinish418,14946
static inline int Tas_VarFaninFanoutMax( Tas_Man_t * p, Gia_Obj_t * pObj )Tas_VarFaninFanoutMax439,15402
static inline Gia_Obj_t * Tas_ManFindActive( Tas_Man_t * p )Tas_ManFindActive462,16016
static inline Gia_Obj_t * Tas_ManDecideHighestFanin( Tas_Man_t * p )Tas_ManDecideHighestFanin499,17238
static inline Gia_Obj_t * Tas_ManDecideHighest( Tas_Man_t * p )Tas_ManDecideHighest526,17994
static inline Gia_Obj_t * Tas_ManDecideHighestA( Tas_Man_t * p )Tas_ManDecideHighestA551,18647
static inline Gia_Obj_t * Tas_ManDecideLowest( Tas_Man_t * p )Tas_ManDecideLowest575,19271
static inline Gia_Obj_t * Tas_ManDecideMaxFF( Tas_Man_t * p )Tas_ManDecideMaxFF596,19821
static inline void Tas_ManCancelUntil( Tas_Man_t * p, int iBound )Tas_ManCancelUntil627,20500
int s_Counter2 = 0;s_Counter2639,20825
int s_Counter3 = 0;s_Counter3640,20845
int s_Counter4 = 0;s_Counter4641,20865
static inline void Tas_ManAssign( Tas_Man_t * p, Gia_Obj_t * pObj, int Level, Gia_Obj_t * pRes0, Gia_Obj_t * pRes1 )Tas_ManAssign654,21190
static inline int Tas_ManClauseSize( Tas_Man_t * p, int hClause )Tas_ManClauseSize691,22314
static inline void Tas_ManPrintClause( Tas_Man_t * p, int Level, int hClause )Tas_ManPrintClause710,22808
static inline void Tas_ManPrintClauseNew( Tas_Man_t * p, int Level, int hClause )Tas_ManPrintClauseNew733,23474
static inline void Tas_ManDeriveReason( Tas_Man_t * p, int Level )Tas_ManDeriveReason756,24149
static inline int Tas_ManAnalyze( Tas_Man_t * p, int Level, Gia_Obj_t * pVar, Gia_Obj_t * pFan0, Gia_Obj_t * pFan1 )Tas_ManAnalyze845,27172
static inline int Tas_ManResolve( Tas_Man_t * p, int Level, int hClause0, int hClause1 )Tas_ManResolve873,27995
static inline Tas_Cls_t * Tas_ManAllocCls( Tas_Man_t * p, int nSize )Tas_ManAllocCls929,29719
static inline void Tas_ManWatchClause( Tas_Man_t * p, Tas_Cls_t * pClause, int Lit )Tas_ManWatchClause954,30418
static inline Tas_Cls_t * Tas_ManCreateCls( Tas_Man_t * p, int hClause )Tas_ManCreateCls979,31264
static inline int Tas_ManCreateFromCls( Tas_Man_t * p, Tas_Cls_t * pCls, int Level )Tas_ManCreateFromCls1021,32479
static inline int Tas_ManPropagateWatch( Tas_Man_t * p, int Level, int Lit )Tas_ManPropagateWatch1050,33295
static inline int Tas_ManPropagateOne( Tas_Man_t * p, Gia_Obj_t * pVar, int Level )Tas_ManPropagateOne1142,36668
static inline int Tas_ManPropagateTwo( Tas_Man_t * p, Gia_Obj_t * pVar, int Level )Tas_ManPropagateTwo1210,39189
int Tas_ManPropagate( Tas_Man_t * p, int Level )Tas_ManPropagate1244,40405
int Tas_ManSolve_rec( Tas_Man_t * p, int Level )Tas_ManSolve_rec1285,41520
int Tas_ManSolve( Tas_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pObj2 )Tas_ManSolve1366,44551
int Tas_ManSolveArray( Tas_Man_t * p, Vec_Ptr_t * vObjs )Tas_ManSolveArray1423,46613
void Tas_ManSatPrintStats( Tas_Man_t * p )Tas_ManSatPrintStats1487,48718
Vec_Int_t * Tas_ManSolveMiterNc( Gia_Man_t * pAig, int nConfs, Vec_Str_t ** pvStatus, int fVerbose )Tas_ManSolveMiterNc1517,50043
int Tas_StorePatternTry( Vec_Ptr_t * vInfo, Vec_Ptr_t * vPres, int iBit, int * pLits, int nLits )Tas_StorePatternTry1642,54163
int Tas_StorePattern( Vec_Ptr_t * vSimInfo, Vec_Ptr_t * vPres, Vec_Int_t * vCex )Tas_StorePattern1676,55271
void Tas_ManSolveMiterNc2( Gia_Man_t * pAig, int nConfs, Gia_Man_t * pAigOld, Vec_Ptr_t * vOldRoots, Vec_Ptr_t * vSimInfo )Tas_ManSolveMiterNc21696,55819

src/aig/gia/giaSplit.c,2749
typedef struct Spl_Man_t_ Spl_Man_t;Spl_Man_t31,805
struct Spl_Man_t_Spl_Man_t_32,842
    Gia_Man_t *      pGia;       // user AIG with nodes markedpGia35,880
    int              iObj;       // object IDiObj36,943
    int              Limit;      // limit on AIG nodesLimit37,989
    int              fReverse;   // enable reverse searchfReverse38,1044
    Vec_Bit_t *      vMarksCIO;  // CI/CO marksvMarksCIO40,1122
    Vec_Bit_t *      vMarksIn;   // input marksvMarksIn41,1170
    Vec_Bit_t *      vMarksNo;   // node marksvMarksNo42,1218
    Vec_Bit_t *      vMarksAnd;  // AND node marksvMarksAnd43,1265
    Vec_Int_t *      vRoots;     // nodes pointing to NodesvRoots44,1316
    Vec_Int_t *      vNodes;     // nodes used in the windowvNodes45,1376
    Vec_Int_t *      vLeaves;    // nodes pointed by NodesvLeaves46,1437
    Vec_Int_t *      vAnds;      // AND nodes used in the windowvAnds47,1496
    Vec_Int_t *      vFanouts;   // fanouts of the nodevFanouts49,1579
    Vec_Int_t *      vCands;     // candidate nodesvCands50,1635
    Vec_Int_t *      vInputs;    // non-trivial inputsvInputs51,1687
Vec_Wec_t * Spl_ManToWecMapping( Gia_Man_t * p )Spl_ManToWecMapping69,2248
Vec_Int_t * Spl_ManFromWecMapping( Gia_Man_t * p, Vec_Wec_t * vMap )Spl_ManFromWecMapping79,2571
Spl_Man_t * Spl_ManAlloc( Gia_Man_t * pGia, int Limit, int fReverse )Spl_ManAlloc110,3601
void Spl_ManStop( Spl_Man_t * p )Spl_ManStop148,4965
void Spl_ManWinFindLeavesRoots( Spl_Man_t * p )Spl_ManWinFindLeavesRoots184,5960
void Spl_ManLutFanouts_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vFanouts, Vec_Bit_t * vMarksNo, Vec_Bit_t * vMarksCIO )Spl_ManLutFanouts_rec254,8277
int Spl_ManLutFanouts( Gia_Man_t * p, int iObj, Vec_Int_t * vFanouts, Vec_Bit_t * vMarksNo, Vec_Bit_t * vMarksCIO )Spl_ManLutFanouts268,8793
int Spl_ManCountMarkedFanins( Gia_Man_t * p, int iObj, Vec_Bit_t * vMarks )Spl_ManCountMarkedFanins293,9568
int Spl_ManFindGoodCand( Spl_Man_t * p )Spl_ManFindGoodCand302,9855
int Spl_ManFindOne( Spl_Man_t * p )Spl_ManFindOne336,10743
int Spl_ManLutMffcSize( Gia_Man_t * p, int iObj, Vec_Int_t * vTemp, Vec_Bit_t * vMarksAnd )Spl_ManLutMffcSize439,14124
void Spl_ManAddNode( Spl_Man_t * p, int iPivot, Vec_Int_t * vCands )Spl_ManAddNode452,14623
int Spl_ManComputeOne( Spl_Man_t * p, int iPivot )Spl_ManComputeOne461,14934
int Gia_ManComputeOneWin( Gia_Man_t * pGia, int iPivot, Vec_Int_t ** pvRoots, Vec_Int_t ** pvNodes, Vec_Int_t ** pvLeaves, Vec_Int_t ** pvAnds )Gia_ManComputeOneWin516,16777
void Gia_ManComputeOneWinStart( Gia_Man_t * pGia, int nAnds, int fReverse )Gia_ManComputeOneWinStart541,17474
void Spl_ManComputeOneTest( Gia_Man_t * pGia )Spl_ManComputeOneTest558,17915

src/aig/gia/giaGig.c,2343
#define MAX_LINE MAX_LINE32,854
    GLS_NONE = -1,  // not usedGLS_NONE36,905
    GLS_ZERO =  0,  // zeroGLS_ZERO37,937
    GLS_ONE  =  1,  // oneGLS_ONE38,965
    GLS_PI   =  2,  // primary inputGLS_PI39,992
    GLS_PO   =  3,  // primary outputGLS_PO40,1029
    GLS_BAR  =  4,  // barrierGLS_BAR41,1067
    GLS_SEQ  =  5,  // sequentialGLS_SEQ42,1098
    GLS_SEL  =  6,  // fanGLS_SEL43,1132
    GLS_LUT4 =  7,  // LUT4GLS_LUT444,1159
    GLS_LUT6 =  8,  // LUT6GLS_LUT645,1187
    GLS_BOX  =  9,  // sequential boxGLS_BOX46,1215
    GLS_DEL  = 10,  // delay boxGLS_DEL47,1253
    GLS_FINALGLS_FINAL48,1286
static char * s_Strs[GLS_FINAL] =s_Strs51,1304
typedef struct Gls_Man_t_ Gls_Man_t;Gls_Man_t66,1825
struct Gls_Man_t_Gls_Man_t_67,1862
    Vec_Str_t *    vLines;       // line typesvLines70,1897
    Vec_Str_t *    vTypes;       // gate typesvTypes71,1944
    Vec_Int_t *    vIndexes;     // gate indexesvIndexes72,1991
    Vec_Int_t *    vLut4s;       // 4-LUTs (4-tuples)vLut4s74,2062
    Vec_Int_t *    vLut4TTs;     // truth tablesvLut4TTs75,2116
    Vec_Int_t *    vLut6s;       // 6-LUTs (6-tuples)vLut6s76,2165
    Vec_Wrd_t *    vLut6TTs;     // truth tablesvLut6TTs77,2219
    Vec_Int_t *    vBoxes;       // boxes (5-tuples)vBoxes78,2268
    Vec_Wec_t *    vDelayIns;    // delay faninsvDelayIns79,2321
    Vec_Wec_t *    vDelayOuts;   // delay fanoutsvDelayOuts80,2370
    Vec_Int_t *    vDelays;      // delay valuesvDelays81,2420
    Vec_Int_t *    vOrderPis;  vOrderPis83,2485
    Vec_Int_t *    vOrderPos;  vOrderPos84,2517
    Vec_Int_t *    vOrderBoxes;  vOrderBoxes85,2549
    Vec_Int_t *    vOrderDelays;  vOrderDelays86,2583
    Vec_Int_t *    vOrderLuts;  vOrderLuts87,2618
    Vec_Int_t *    vOrderSeqs;  vOrderSeqs88,2651
Gls_Man_t * Gls_ManAlloc( Vec_Str_t * vLines, int * pCounts )Gls_ManAlloc106,3142
void Gls_ManStop( Gls_Man_t * p )Gls_ManStop129,4262
Vec_Str_t * Gls_ManCount( FILE * pFile, int pCounts[GLS_FINAL] )Gls_ManCount163,5119
int Gls_ManParseOne( char ** ppLine )Gls_ManParseOne217,6668
int Gls_ManParse( FILE * pFile, Gls_Man_t * p )Gls_ManParse236,7177
Gia_Man_t * Gls_ManConstruct( Gls_Man_t * p, char * pFileName )Gls_ManConstruct380,12210
Gia_Man_t * Gia_ManReadGig( char * pFileName )Gia_ManReadGig470,15929

src/aig/gia/giaRetime.c,602
int Gia_ManMarkAutonomous_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManMarkAutonomous_rec45,1307
void Gia_ManMarkAutonomous( Gia_Man_t * p )Gia_ManMarkAutonomous74,2338
void Gia_ManRetimeDup_rec( Gia_Man_t * pNew, Gia_Obj_t * pObj )Gia_ManRetimeDup_rec100,2999
Gia_Man_t * Gia_ManRetimeDupForward( Gia_Man_t * p, Vec_Ptr_t * vCut )Gia_ManRetimeDupForward121,3637
Gia_Man_t * Gia_ManRetimeForwardOne( Gia_Man_t * p, int * pnRegFixed, int * pnRegMoves )Gia_ManRetimeForwardOne180,5724
Gia_Man_t * Gia_ManRetimeForward( Gia_Man_t * p, int nMaxIters, int fVerbose )Gia_ManRetimeForward267,9162

src/aig/gia/giaBalAig.c,4653
typedef struct Dam_Man_t_ Dam_Man_t;Dam_Man_t34,873
struct Dam_Man_t_Dam_Man_t_35,910
    Gia_Man_t *      pGia;      // user's AIGpGia37,930
    Vec_Int_t *      vNod2Set;  // node ID into fanin setvNod2Set38,976
    Vec_Int_t *      vDiv2Nod;  // div ID into root node setvDiv2Nod39,1034
    Vec_Int_t *      vSetStore; // fanin set storagevSetStore40,1095
    Vec_Int_t *      vNodStore; // root node set storagevNodStore41,1148
    Vec_Flt_t *      vCounts;   // occur countsvCounts42,1205
    Vec_Int_t *      vNodLevR;  // node reverse levelvNodLevR43,1253
    Vec_Int_t *      vDivLevR;  // divisor reverse levelvDivLevR44,1307
    Vec_Int_t *      vVisit;    // visited MUXesvVisit45,1364
    Vec_Que_t *      vQue;      // pairs by their weightvQue46,1413
    Hash_IntMan_t *  vHash;     // pair hash tablevHash47,1470
    abctime          clkStart;  // starting the clockclkStart48,1521
    int              nLevelMax; // maximum levelnLevelMax49,1575
    int              nDivs;     // extracted divisor countnDivs50,1624
    int              nAnds;     // total AND node countnAnds51,1683
    int              nGain;     // total gain in AND nodesnGain52,1739
    int              nGainX;    // gain from XOR nodesnGainX53,1798
static inline int    Dam_ObjHand( Dam_Man_t * p, int i )     { return i < Vec_IntSize(p->vNod2Set) ? Vec_IntEntry(p->vNod2Set, i) : 0;                      }Dam_ObjHand56,1857
static inline int *  Dam_ObjSet( Dam_Man_t * p, int i )      { int h = Dam_ObjHand(p, i); if ( h == 0 ) return NULL; return Vec_IntEntryP(p->vSetStore, h); }Dam_ObjSet57,2015
static inline int    Dam_DivHand( Dam_Man_t * p, int d )     { return d < Vec_IntSize(p->vDiv2Nod) ? Vec_IntEntry(p->vDiv2Nod, d) : 0;                      }Dam_DivHand59,2174
static inline int *  Dam_DivSet( Dam_Man_t * p, int d )      { int h = Dam_DivHand(p, d); if ( h == 0 ) return NULL; return Vec_IntEntryP(p->vNodStore, h); }Dam_DivSet60,2332
void Gia_ManSimplifyXor( Vec_Int_t * vSuper )Gia_ManSimplifyXor78,2975
void Gia_ManSimplifyAnd( Vec_Int_t * vSuper )Gia_ManSimplifyAnd98,3573
void Gia_ManSuperCollectXor_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int fStrict )Gia_ManSuperCollectXor_rec128,4420
void Gia_ManSuperCollectAnd_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int fStrict )Gia_ManSuperCollectAnd_rec144,5126
void Gia_ManSuperCollect( Gia_Man_t * p, Gia_Obj_t * pObj, int fStrict )Gia_ManSuperCollect159,5769
int Gia_ManFindSharedNode( Gia_Man_t * pNew, Vec_Int_t * vSuper, int iLit0 )Gia_ManFindSharedNode204,7239
void Gia_ManPrepareLastTwo( Gia_Man_t * pNew, Vec_Int_t * vSuper )Gia_ManPrepareLastTwo226,8092
void Gia_ManCreateGate( Gia_Man_t * pNew, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Gia_ManCreateGate260,9416
int Gia_ManBalanceGate( Gia_Man_t * pNew, Gia_Obj_t * pObj, Vec_Int_t * vSuper, int * pLits, int nLits )Gia_ManBalanceGate285,10396
void Gia_ManBalance_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, int fStrict )Gia_ManBalance_rec341,12224
Gia_Man_t * Gia_ManBalanceInt( Gia_Man_t * p, int fStrict )Gia_ManBalanceInt378,13765
Gia_Man_t * Gia_ManBalance( Gia_Man_t * p, int fSimpleAnd, int fStrict, int fVerbose )Gia_ManBalance441,15907
Dam_Man_t * Dam_ManAlloc( Gia_Man_t * pGia )Dam_ManAlloc474,16843
void Dam_ManFree( Dam_Man_t * p )Dam_ManFree483,17050
void Dam_ManCollectSets_rec( Dam_Man_t * p, int Id )Dam_ManCollectSets_rec509,17713
void Dam_ManCollectSets( Dam_Man_t * p )Dam_ManCollectSets547,19040
int Dam_ManDivSlack( Dam_Man_t * p, int iLit0, int iLit1, int LevR )Dam_ManDivSlack574,19814
void Dam_ManCreateMultiRefs( Dam_Man_t * p, Vec_Int_t ** pvRefsAnd, Vec_Int_t ** pvRefsXor )  Dam_ManCreateMultiRefs581,20171
void Dam_ManCreatePairs( Dam_Man_t * p, int fVerbose )Dam_ManCreatePairs607,21076
void Dam_ManMultiAig_rec( Dam_Man_t * pMan, Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Dam_ManMultiAig_rec753,27233
Gia_Man_t * Dam_ManMultiAig( Dam_Man_t * pMan )Dam_ManMultiAig787,28703
void Dam_PrintDiv( Dam_Man_t * p, int iDiv )Dam_PrintDiv840,30463
void Dam_PrintQue( Dam_Man_t * p )Dam_PrintQue862,31411
int Dam_ManUpdateNode( Dam_Man_t * p, int iObj, int iLit0, int iLit1, int iLitNew, Vec_Int_t * vDivs )Dam_ManUpdateNode878,32104
void Dam_ManUpdate( Dam_Man_t * p, int iDiv )Dam_ManUpdate937,34116
Gia_Man_t * Dam_ManAreaBalanceInt( Gia_Man_t * pGia, Vec_Int_t * vCiLevels, int nNewNodesMax, int fVerbose, int fVeryVerbose )Dam_ManAreaBalanceInt1013,36984
Gia_Man_t * Gia_ManAreaBalance( Gia_Man_t * p, int fSimpleAnd, int nNewNodesMax, int fVerbose, int fVeryVerbose )Gia_ManAreaBalance1047,38363

src/aig/gia/giaForce.c,8154
typedef struct Frc_Obj_t_ Frc_Obj_t;Frc_Obj_t36,993
struct Frc_Obj_t_Frc_Obj_t_37,1030
    unsigned       fCi      :  1;    // terminal node CIfCi39,1050
    unsigned       fCo      :  1;    // terminal node COfCo40,1107
    unsigned       fMark0   :  1;    // first user-controlled markfMark041,1164
    unsigned       fMark1   :  1;    // second user-controlled markfMark142,1231
    unsigned       nFanins  : 28;    // the number of faninsnFanins43,1299
    unsigned       nFanouts;         // the number of fanoutsnFanouts44,1360
    unsigned       iFanout;          // the current number of fanoutsiFanout45,1422
    int            hHandle;          // the handle of the nodehHandle46,1492
    int            pPlace;           // the placement of each nodepPlace47,1555
    float          fEdgeCenter;      // center-of-gravity of the edgefEdgeCenter49,1634
    unsigned       iFanin; iFanin50,1704
    int            Fanios[0];        // the array of fanins/fanoutsFanios52,1739
typedef struct Frc_Man_t_ Frc_Man_t;Frc_Man_t55,1811
struct Frc_Man_t_Frc_Man_t_56,1848
    Gia_Man_t *    pGia;             // the original AIG managerpGia58,1868
    Vec_Int_t *    vCis;             // the vector of CIs (PIs + LOs)vCis59,1933
    Vec_Int_t *    vCos;             // the vector of COs (POs + LIs)vCos60,2003
    int            nObjs;            // the number of objectsnObjs61,2073
    int            nRegs;            // the number of registersnRegs62,2135
    int *          pObjData;         // the array containing data for objectspObjData63,2199
    int            nObjData;         // the size of array to store the logic networknObjData64,2277
    int            fVerbose;         // verbose output flagfVerbose65,2362
    int            nCutCur;          // current cut nCutCur66,2422
    int            nCutMax;          // max cut seennCutMax67,2475
static inline int         Frc_ManRegNum( Frc_Man_t * p )              { return p->nRegs;                                                     }Frc_ManRegNum70,2532
static inline int         Frc_ManCiNum( Frc_Man_t * p )               { return Vec_IntSize(p->vCis);                                         }Frc_ManCiNum71,2675
static inline int         Frc_ManCoNum( Frc_Man_t * p )               { return Vec_IntSize(p->vCos);                                         }Frc_ManCoNum72,2818
static inline int         Frc_ManPiNum( Frc_Man_t * p )               { return Vec_IntSize(p->vCis) - p->nRegs;                              }Frc_ManPiNum73,2961
static inline int         Frc_ManPoNum( Frc_Man_t * p )               { return Vec_IntSize(p->vCos) - p->nRegs;                              }Frc_ManPoNum74,3104
static inline int         Frc_ManObjNum( Frc_Man_t * p )              { return p->nObjs;                                                     } Frc_ManObjNum75,3247
static inline int         Frc_ManNodeNum( Frc_Man_t * p )             { return p->nObjs - Vec_IntSize(p->vCis) - Vec_IntSize(p->vCos);       } Frc_ManNodeNum76,3391
static inline Frc_Obj_t * Frc_ManObj( Frc_Man_t * p, int hHandle )    { return (Frc_Obj_t *)(p->pObjData + hHandle);                         } Frc_ManObj78,3536
static inline Frc_Obj_t * Frc_ManCi( Frc_Man_t * p, int i )           { return Frc_ManObj( p, Vec_IntEntry(p->vCis,i) );                     }Frc_ManCi79,3680
static inline Frc_Obj_t * Frc_ManCo( Frc_Man_t * p, int i )           { return Frc_ManObj( p, Vec_IntEntry(p->vCos,i) );                     }Frc_ManCo80,3823
static inline int         Frc_ObjIsTerm( Frc_Obj_t * pObj )           { return pObj->fCi || pObj->fCo;                                       } Frc_ObjIsTerm82,3967
static inline int         Frc_ObjIsCi( Frc_Obj_t * pObj )             { return pObj->fCi;                                                    } Frc_ObjIsCi83,4111
static inline int         Frc_ObjIsCo( Frc_Obj_t * pObj )             { return pObj->fCo;                                                    } Frc_ObjIsCo84,4255
static inline int         Frc_ObjIsPi( Frc_Obj_t * pObj )             { return pObj->fCi && pObj->nFanins == 0;                              } Frc_ObjIsPi85,4399
static inline int         Frc_ObjIsPo( Frc_Obj_t * pObj )             { return pObj->fCo && pObj->nFanouts == 0;                             } Frc_ObjIsPo86,4543
static inline int         Frc_ObjIsNode( Frc_Obj_t * pObj )           { return!Frc_ObjIsTerm(pObj) && pObj->nFanins > 0;                     } Frc_ObjIsNode87,4687
static inline int         Frc_ObjIsConst0( Frc_Obj_t * pObj )         { return!Frc_ObjIsTerm(pObj) && pObj->nFanins == 0;                    } Frc_ObjIsConst088,4831
static inline int         Frc_ObjSize( Frc_Obj_t * pObj )             { return sizeof(Frc_Obj_t) / 4 + pObj->nFanins + pObj->nFanouts;       } Frc_ObjSize90,4976
static inline int         Frc_ObjFaninNum( Frc_Obj_t * pObj )         { return pObj->nFanins;                                                } Frc_ObjFaninNum91,5120
static inline int         Frc_ObjFanoutNum( Frc_Obj_t * pObj )        { return pObj->nFanouts;                                               } Frc_ObjFanoutNum92,5264
static inline Frc_Obj_t * Frc_ObjFanin( Frc_Obj_t * pObj, int i )     { return (Frc_Obj_t *)(((int *)pObj) - pObj->Fanios[i]);               } Frc_ObjFanin93,5408
static inline Frc_Obj_t * Frc_ObjFanout( Frc_Obj_t * pObj, int i )    { return (Frc_Obj_t *)(((int *)pObj) + pObj->Fanios[pObj->nFanins+i]); } Frc_ObjFanout94,5552
#define Frc_ManForEachObj(Frc_ManForEachObj96,5697
#define Frc_ManForEachObjVec(Frc_ManForEachObjVec98,5842
#define Frc_ManForEachNode(Frc_ManForEachNode101,6015
#define Frc_ManForEachCi(Frc_ManForEachCi103,6195
#define Frc_ManForEachCo(Frc_ManForEachCo105,6354
#define Frc_ObjForEachFanin(Frc_ObjForEachFanin108,6514
#define Frc_ObjForEachFaninReverse(Frc_ObjForEachFaninReverse110,6653
#define Frc_ObjForEachFanout(Frc_ObjForEachFanout112,6797
void Frc_ObjAddFanin( Frc_Obj_t * pObj, Frc_Obj_t * pFanin )Frc_ObjAddFanin131,7420
Frc_Man_t * Frc_ManStartSimple( Gia_Man_t * pGia )Frc_ManStartSimple150,7996
void Frc_ManCollectSuper_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper, Vec_Int_t * vVisit )  Frc_ManCollectSuper_rec261,11759
void Frc_ManCollectSuper( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper, Vec_Int_t * vVisit )  Frc_ManCollectSuper289,12520
void Frc_ManCreateRefsSpecial( Gia_Man_t * p )  Frc_ManCreateRefsSpecial313,13205
void Frc_ManTransformRefs( Gia_Man_t * p, int * pnObjs, int * pnFanios )  Frc_ManTransformRefs359,14681
Frc_Man_t * Frc_ManStart( Gia_Man_t * pGia )Frc_ManStart428,16650
void Frc_ManPrintStats( Frc_Man_t * p )Frc_ManPrintStats557,20924
void Frc_ManStop( Frc_Man_t * p )Frc_ManStop584,21776
int Frc_ManCrossCut_rec( Frc_Man_t * p, Frc_Obj_t * pObj )Frc_ManCrossCut_rec604,22205
int Frc_ManCrossCut2_rec( Frc_Man_t * p, Frc_Obj_t * pObj )Frc_ManCrossCut2_rec631,22948
int Frc_ManCrossCut( Frc_Man_t * p, Vec_Int_t * vOrder, int fReverse )Frc_ManCrossCut658,23700
Vec_Int_t * Frc_ManCollectCos( Frc_Man_t * p )Frc_ManCollectCos692,24647
void Frc_ManCrossCutTest( Frc_Man_t * p, Vec_Int_t * vOrderInit )Frc_ManCrossCutTest714,25195
void Frc_ManPlaceRandom( Frc_Man_t * p )Frc_ManPlaceRandom743,26093
void Frc_ManArrayShuffle( Vec_Int_t * vArray )Frc_ManArrayShuffle775,26929
void Frc_ManPlaceDfs_rec( Frc_Man_t * p, Frc_Obj_t * pObj, int * piPlace )Frc_ManPlaceDfs_rec798,27519
void Frc_ManPlaceDfs( Frc_Man_t * p, Vec_Int_t * vCoOrder )Frc_ManPlaceDfs823,28171
int Frc_ManPlaceDfsBoth( Frc_Man_t * p, Vec_Int_t * vCoOrder, int * piCutSize2 )Frc_ManPlaceDfsBoth853,29024
void Frc_ManPlacementRefine( Frc_Man_t * p, int nIters, int fVerbose )Frc_ManPlacementRefine886,29939
int Frc_ObjFanoutsAreCos( Frc_Obj_t * pThis )Frc_ObjFanoutsAreCos981,33215
void Frc_DumpGraphIntoFile( Frc_Man_t * p )Frc_DumpGraphIntoFile1002,33742
void For_ManExperiment( Gia_Man_t * pGia, int nIters, int fClustered, int fVerbose )For_ManExperiment1039,34774
void For_ManFileExperiment()For_ManFileExperiment1066,35479

src/aig/gia/giaResub2.c,7072
typedef struct Gia_Rsb2Man_t_ Gia_Rsb2Man_t;Gia_Rsb2Man_t33,840
struct Gia_Rsb2Man_t_Gia_Rsb2Man_t_34,885
    int            nDivsMax;nDivsMax37,933
    int            nLevelIncrease;nLevelIncrease38,962
    int            fUseXor;fUseXor39,997
    int            fUseZeroCost;fUseZeroCost40,1025
    int            fDebug;fDebug41,1058
    int            fVerbose;fVerbose42,1085
    int            nObjs;nObjs44,1131
    int            nPis;nPis45,1157
    int            nNodes;nNodes46,1182
    int            nPos;nPos47,1209
    int            iFirstPo;iFirstPo48,1234
    int            Level;Level49,1263
    int            nMffc;nMffc50,1289
    Vec_Int_t      vObjs;vObjs52,1340
    Vec_Wrd_t      vSims;vSims53,1366
    Vec_Ptr_t      vpDivs;vpDivs54,1392
    Vec_Int_t      vDivs;vDivs55,1419
    Vec_Int_t      vLevels;vLevels56,1445
    Vec_Int_t      vRefs;vRefs57,1473
    Vec_Int_t      vCopies;vCopies58,1499
    Vec_Int_t      vTried;vTried59,1527
    word           Truth0;Truth060,1554
    word           Truth1;Truth161,1581
    word           CareSet;CareSet62,1608
Gia_Rsb2Man_t * Gia_Rsb2ManAlloc()Gia_Rsb2ManAlloc83,2318
void Gia_Rsb2ManFree( Gia_Rsb2Man_t * p )Gia_Rsb2ManFree88,2427
void Gia_Rsb2ManStart( Gia_Rsb2Man_t * p, int * pObjs, int nObjs, int nDivsMax, int nLevelIncrease, int fUseXor, int fUseZeroCost, int fDebug, int fVerbose )Gia_Rsb2ManStart100,2755
void Gia_Rsb2ManPrint( Gia_Rsb2Man_t * p )Gia_Rsb2ManPrint166,4743
int Gia_Rsb2ManLevel( Gia_Rsb2Man_t * p )Gia_Rsb2ManLevel179,5344
word Gia_Rsb2ManOdcs( Gia_Rsb2Man_t * p, int iNode )Gia_Rsb2ManOdcs191,5785
int Gia_Rsb2ManDeref_rec( Gia_Rsb2Man_t * p, int * pObjs, int * pRefs, int iNode )Gia_Rsb2ManDeref_rec223,7043
int Gia_Rsb2ManMffc( Gia_Rsb2Man_t * p, int iNode )Gia_Rsb2ManMffc234,7509
int Gia_Rsb2ManDivs( Gia_Rsb2Man_t * p, int iNode )Gia_Rsb2ManDivs256,8396
int Gia_Rsb2AddNode( Vec_Int_t * vRes, int iLit0, int iLit1, int iRes0, int iRes1 )Gia_Rsb2AddNode301,9841
int Gia_Rsb2ManInsert_rec( Vec_Int_t * vRes, int nPis, Vec_Int_t * vObjs, int iNode, Vec_Int_t * vResub, Vec_Int_t * vDivs, Vec_Int_t * vCopies, int iObj )Gia_Rsb2ManInsert_rec337,11052
Vec_Int_t * Gia_Rsb2ManInsert( int nPis, int nPos, Vec_Int_t * vObjs, int iNode, Vec_Int_t * vResub, Vec_Int_t * vDivs, Vec_Int_t * vCopies )Gia_Rsb2ManInsert383,13374
void Abc_ResubPrintDivs( void ** ppDivs, int nDivs )Abc_ResubPrintDivs415,14478
int Abc_ResubNodeToTry( Vec_Int_t * vTried, int iFirst, int iLast )Abc_ResubNodeToTry425,14710
int Abc_ResubComputeWindow( int * pObjs, int nObjs, int nDivsMax, int nLevelIncrease, int fUseXor, int fUseZeroCost, int fDebug, int fVerbose, int ** ppArray, int * pnResubs )Abc_ResubComputeWindow434,14995
int Abc_ResubComputeWindow2( int * pObjs, int nObjs, int nDivsMax, int nLevelIncrease, int fUseXor, int fUseZeroCost, int fDebug, int fVerbose, int ** ppArray, int * pnResubs )Abc_ResubComputeWindow2477,16912
int * Gia_ManToResub( Gia_Man_t * p )Gia_ManToResub497,17486
Gia_Man_t * Gia_ManFromResub( int * pObjs, int nObjs, int nIns )Gia_ManFromResub515,18037
Gia_Man_t * Gia_ManResub2Test( Gia_Man_t * p )Gia_ManResub2Test533,18661
int Gia_WinTryAddingNode( Gia_Man_t * p, int iPivot, int iPivot2, Vec_Wec_t * vLevels, Vec_Int_t * vNodes )Gia_WinTryAddingNode568,19904
int Gia_WinAddCiWithMaxFanouts( Gia_Man_t * p )Gia_WinAddCiWithMaxFanouts623,22586
int Gia_WinAddCiWithMaxDivisors( Gia_Man_t * p, Vec_Wec_t * vLevels )Gia_WinAddCiWithMaxDivisors636,22989
int Gia_WinNodeHasUnmarkedFanouts( Gia_Man_t * p, int iPivot )Gia_WinNodeHasUnmarkedFanouts654,23501
Vec_Int_t * Gia_RsbCiTranslate( Gia_Man_t * p, Vec_Int_t * vObjs, Vec_Int_t * vMap )Gia_RsbCiTranslate665,23952
Vec_Int_t * Gia_RsbCiWindow( Gia_Man_t * p, int nPis )Gia_RsbCiWindow688,25135
void Gia_RsbCiWindowTest( Gia_Man_t * p )Gia_RsbCiWindowTest715,26061
static inline int  Gia_ObjFaninId( Gia_Obj_t * pObj, int iObj, int n )          { return n ? Gia_ObjFaninId1(pObj, iObj) : Gia_ObjFaninId0(pObj, iObj);  }Gia_ObjFaninId736,26487
static inline int  Gia_ObjTravIsTopTwo( Gia_Man_t * p, int iNodeA )            { return (p->pTravIds[iNodeA] >= p->nTravIds - 1);       }Gia_ObjTravIsTopTwo738,26643
static inline int  Gia_ObjTravIsSame( Gia_Man_t * p, int iNodeA, int iNodeB )  { return (p->pTravIds[iNodeA] == p->pTravIds[iNodeB]);   }Gia_ObjTravIsSame739,26781
static inline void Gia_ObjTravSetSame( Gia_Man_t * p, int iNodeA, int iNodeB ) { p->pTravIds[iNodeA] = p->pTravIds[iNodeB];             }Gia_ObjTravSetSame740,26919
void Gia_RsbWindowGather( Gia_Man_t * p, Vec_Int_t * vPaths, int iNode, Vec_Int_t * vVisited )Gia_RsbWindowGather743,27156
int Gia_RsbWindowExplore( Gia_Man_t * p, Vec_Int_t * vVisited, int iStart, Vec_Int_t * vPaths, int * piMeet, int * piNode )Gia_RsbWindowExplore756,27594
Vec_Int_t * Gia_RsbWindowInit( Gia_Man_t * p, Vec_Int_t * vPaths, int iPivot, int nIter )Gia_RsbWindowInit789,28848
Vec_Int_t * Gia_RsbCreateWindowInputs( Gia_Man_t * p, Vec_Int_t * vWin )Gia_RsbCreateWindowInputs830,30447
void Gia_RsbAddSideInputs( Gia_Man_t * p, Vec_Wec_t * vLevels, Vec_Int_t * vWin )Gia_RsbAddSideInputs866,31478
void Gia_RsbExpandInputs( Gia_Man_t * p, Vec_Wec_t * vLevels, Vec_Int_t * vWin, Vec_Int_t * vInputs )Gia_RsbExpandInputs902,33183
int Gia_RsbSelectOneInput( Gia_Man_t * p, Vec_Wec_t * vLevels, Vec_Int_t * vIns )Gia_RsbSelectOneInput933,34405
void Gia_RsbWindowGrow( Gia_Man_t * p, Vec_Wec_t * vLevels, Vec_Int_t * vWin, Vec_Int_t * vIns, int nInputsMax )Gia_RsbWindowGrow953,35187
void Gia_WinCreateFromCut( Gia_Man_t * p, Vec_Int_t * vIn, Vec_Wec_t * vLevels, Vec_Int_t * vWin )Gia_WinCreateFromCut983,36402
int Gia_RsbExpandCut( Gia_Man_t * p, Vec_Int_t * vIns )Gia_RsbExpandCut1030,38500
int Gia_RsbFindFaninAdd( int iFan, int pFanins[32], int pFaninCounts[32], int nFanins )Gia_RsbFindFaninAdd1073,39933
int Gia_RsbFindFaninToAddToCut( Gia_Man_t * p, Vec_Int_t * vIns )Gia_RsbFindFaninToAddToCut1083,40232
void Gia_RsbWindowGrow2( Gia_Man_t * p, Vec_Wec_t * vLevels, Vec_Int_t * vWin, Vec_Int_t * vIns, int nInputsMax )Gia_RsbWindowGrow21111,41400
int Gia_RsbWindowCompute( Gia_Man_t * p, int iObj, int nInputsMax, int nLevelsMax, Vec_Wec_t * vLevels, Vec_Int_t * vPaths, Vec_Int_t ** pvWin, Vec_Int_t ** pvIns )Gia_RsbWindowCompute1170,43412
Vec_Int_t * Gia_RsbFindOutputs( Gia_Man_t * p, Vec_Int_t * vWin, Vec_Int_t * vIns, Vec_Int_t * vRefs )Gia_RsbFindOutputs1210,44630
Gia_Man_t * Gia_RsbDeriveGiaFromWindows( Gia_Man_t * p, Vec_Int_t * vWin, Vec_Int_t * vIns, Vec_Int_t * vOuts )Gia_RsbDeriveGiaFromWindows1234,45623
word Gia_LutComputeTruth66_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_LutComputeTruth66_rec1267,46698
int Gia_ManVerifyTwoTruths( Gia_Man_t * p1, Gia_Man_t * p2 )Gia_ManVerifyTwoTruths1283,47229
void Gia_RsbEnumerateWindows( Gia_Man_t * p, int nInputsMax, int nLevelsMax )Gia_RsbEnumerateWindows1323,48458
Gia_Man_t * Gia_RsbTryOneWindow( Gia_Man_t * p )Gia_RsbTryOneWindow1413,51516

src/aig/gia/giaSatMap.c,2907
typedef struct Sbm_Man_t_ Sbm_Man_t;Sbm_Man_t36,893
struct Sbm_Man_t_Sbm_Man_t_37,930
    sat_solver *     pSat;      // SAT solverpSat39,950
    Vec_Int_t *      vCardVars; // candinality variablesvCardVars40,996
    int              LogN;      // max varsLogN41,1053
    int              FirstVar;  // first variable to be usedFirstVar42,1097
    int              LitShift;  // shift in terms of literals (2*Gia_ManCiNum(pGia)+2)LitShift43,1158
    int              nInputs;   // the number of inputsnInputs44,1245
    Vec_Int_t *      vRoots;    // output drivers to be mapped (root -> lit)vRoots46,1315
    Vec_Wec_t *      vCuts;     // cuts (cut -> node lit + fanin lits)vCuts47,1392
    Vec_Wec_t *      vObjCuts;  // cuts (obj -> node lit + cut lits)vObjCuts48,1463
    Vec_Int_t *      vSolCuts;  // current solution (index -> cut)vSolCuts49,1532
    Vec_Int_t *      vCutGates; // gates (cut -> gate)vCutGates50,1599
    Vec_Wrd_t *      vCutAreas; // area of each cutvCutAreas51,1654
    Vec_Int_t *      vAssump;   // assumptions (root nodes)vAssump53,1720
    Vec_Int_t *      vPolar;    // polarity of nodes and cutsvPolar54,1780
    Vec_Int_t *      vArrs;     // arrivals for the inputs (input -> time)vArrs56,1856
    Vec_Int_t *      vReqs;     // required for the outputs (root -> time)vReqs57,1931
    Vec_Int_t *      vLit2Used; // current solution (lit -> used)vLit2Used59,2022
    Vec_Int_t *      vDelays;   // node arrivals (lit -> time)vDelays60,2088
    Vec_Int_t *      vReason;   // timing reasons (lit -> cut)vReason61,2151
int Sbm_ManCheckSol( Sbm_Man_t * p, Vec_Int_t * vSol )Sbm_ManCheckSol85,2964
int Sbm_ManCreateCnf( Sbm_Man_t * p )Sbm_ManCreateCnf149,5238
static inline int sat_solver_add_and1( sat_solver * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1, int fCompl )sat_solver_add_and1225,8067
static inline int sat_solver_add_and2( sat_solver * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1, int fCompl )sat_solver_add_and2249,8777
static inline void Sbm_AddSorter( sat_solver * p, int * pVars, int i, int k, int * pnVars )Sbm_AddSorter283,9776
static inline void Sbm_AddCardinConstrMerge( sat_solver * p, int * pVars, int lo, int hi, int r, int * pnVars )Sbm_AddCardinConstrMerge308,10593
static inline void Sbm_AddCardinConstrRange( sat_solver * p, int * pVars, int lo, int hi, int * pnVars )Sbm_AddCardinConstrRange325,11254
int Sbm_AddCardinConstrPairWise( sat_solver * p, Vec_Int_t * vVars, int K )Sbm_AddCardinConstrPairWise337,11744
sat_solver * Sbm_AddCardinSolver( int LogN, Vec_Int_t ** pvVars )Sbm_AddCardinSolver344,11986
void Sbm_AddCardinConstrTest()Sbm_AddCardinConstrTest357,12452
Sbm_Man_t * Sbm_ManAlloc( int LogN )Sbm_ManAlloc400,13833
void Sbm_ManStop( Sbm_Man_t * p )Sbm_ManStop426,14643
int Sbm_ManTestSat( void * pMan )Sbm_ManTestSat450,15235

src/aig/gia/giaGiarf.c,3791
typedef struct Hcd_Man_t_ Hcd_Man_t;Hcd_Man_t30,775
struct Hcd_Man_t_Hcd_Man_t_31,812
    Gia_Man_t *      pGia;           // the AIG to be used for simulationpGia34,850
    int              nBTLimit;       // internal backtrack limit nBTLimit35,924
    int              fVerbose;       // internal verbose flag fVerbose36,990
    unsigned *       pSimInfo;       // simulation info for each objectpSimInfo38,1079
    Vec_Ptr_t *      vSimInfo;       // pointers to the CI simulation infovSimInfo39,1151
    Vec_Ptr_t *      vSimPres;       // pointers to the presense of simulation infovSimPres40,1226
    Vec_Int_t *      vClassOld;      // old class numbersvClassOld42,1329
    Vec_Int_t *      vClassNew;      // new class numbersvClassNew43,1387
    Vec_Int_t *      vClassTemp;     // temporary storagevClassTemp44,1445
    Vec_Int_t *      vRefinedC;      // refined const reprsvRefinedC45,1503
static inline unsigned   Hcd_ObjSim( Hcd_Man_t * p, int Id )                  { return p->pSimInfo[Id];      }Hcd_ObjSim48,1567
static inline unsigned * Hcd_ObjSimP( Hcd_Man_t * p, int Id )                 { return p->pSimInfo + Id;     }Hcd_ObjSimP49,1678
static inline unsigned   Hcd_ObjSetSim( Hcd_Man_t * p, int Id, unsigned n )   { return p->pSimInfo[Id] = n;  }Hcd_ObjSetSim50,1789
Hcd_Man_t * Gia_ManEquivStart( Gia_Man_t * pGia, int nBTLimit, int fVerbose )Gia_ManEquivStart67,2383
void Gia_ManEquivStop( Hcd_Man_t * p )Gia_ManEquivStop100,3391
static inline int Hcd_ManCompareEqual( unsigned s0, unsigned s1 )Hcd_ManCompareEqual124,3945
static inline int Hcd_ManCompareConst( unsigned s )Hcd_ManCompareConst143,4370
void Hcd_ManClassCreate( Gia_Man_t * pGia, Vec_Int_t * vClass )Hcd_ManClassCreate162,4763
int Hcd_ManClassClassRemoveOne( Hcd_Man_t * p, int i )Hcd_ManClassClassRemoveOne195,5565
int Hcd_ManClassRefineOne( Hcd_Man_t * p, int i )Hcd_ManClassRefineOne237,6691
int Hcd_ManHashKey( unsigned * pSim, int nWords, int nTableSize )Hcd_ManHashKey273,7729
void Hcd_ManClassesRehash( Hcd_Man_t * p, Vec_Int_t * vRefined )Hcd_ManClassesRehash301,8497
void Hcd_ManClassesRefine( Hcd_Man_t * p )Hcd_ManClassesRefine343,9865
void Hcd_ManClassesCreate( Hcd_Man_t * p )Hcd_ManClassesCreate374,10694
void Hcd_ManSimulationInit( Hcd_Man_t * p )Hcd_ManSimulationInit396,11327
void Hcd_ManSimulateSimple( Hcd_Man_t * p )Hcd_ManSimulateSimple415,11794
unsigned Gia_Resimulate_rec( Hcd_Man_t * p, int iObj )Gia_Resimulate_rec441,12485
void Gia_ResimulateAndRefine( Hcd_Man_t * p, int i )Gia_ResimulateAndRefine470,13550
static inline Gia_Obj_t * Gia_ObjTempRepr( Gia_Man_t * p, int i, int Level )Gia_ObjTempRepr494,14321
Gia_Man_t * Gia_GenerateReducedLevel( Gia_Man_t * p, int Level, Vec_Ptr_t ** pvRoots )Gia_GenerateReducedLevel532,15331
Vec_Ptr_t * Gia_CollectRelatedClasses( Gia_Man_t * pGia, Vec_Ptr_t * vRoots )Gia_CollectRelatedClasses582,17109
Gia_Obj_t * Gia_CollectClassMembers( Gia_Man_t * p, Gia_Obj_t * pRepr, Vec_Ptr_t * vMembers, int Level )Gia_CollectClassMembers614,18007
int Gia_GiarfStorePatternTry( Vec_Ptr_t * vInfo, Vec_Ptr_t * vPres, int iBit, int * pLits, int nLits )Gia_GiarfStorePatternTry642,18835
int Gia_GiarfStorePattern( Vec_Ptr_t * vSimInfo, Vec_Ptr_t * vPres, Vec_Int_t * vCex )Gia_GiarfStorePattern676,19948
void Gia_GiarfInsertPattern( Hcd_Man_t * p, Vec_Int_t * vCex, int k )Gia_GiarfInsertPattern696,20518
void Gia_GiarfPrintClasses( Gia_Man_t * pGia )Gia_GiarfPrintClasses721,21210
int Gia_ComputeEquivalencesLevel( Hcd_Man_t * p, Gia_Man_t * pGiaLev, Vec_Ptr_t * vOldRoots, int Level, int fUseMiniSat )Gia_ComputeEquivalencesLevel757,22101
void Gia_ComputeEquivalences( Gia_Man_t * pGia, int nBTLimit, int fUseMiniSat, int fVerbose )Gia_ComputeEquivalences1030,33089

src/aig/gia/giaIf.c,6651
void Gia_ManSetIfParsDefault( void * pp )Gia_ManSetIfParsDefault57,1704
int Gia_ManLutFaninCount( Gia_Man_t * p )Gia_ManLutFaninCount106,2964
int Gia_ManLutSizeMax( Gia_Man_t * p )Gia_ManLutSizeMax125,3386
int Gia_ManLutNum( Gia_Man_t * p )Gia_ManLutNum144,3832
int Gia_ManLutLevel( Gia_Man_t * p, int ** ppLevels )Gia_ManLutLevel163,4226
void Gia_ManLutParams( Gia_Man_t * p, int * pnCurLuts, int * pnCurEdges, int * pnCurLevels )Gia_ManLutParams201,5190
void Gia_ManSetRefsMapped( Gia_Man_t * p )  Gia_ManSetRefsMapped251,6610
void Gia_ManSetLutRefs( Gia_Man_t * p )  Gia_ManSetLutRefs275,7236
int Gia_ManComputeOverlap2One_rec( Gia_Man_t * p, int iObj, Vec_Str_t * vLabel, Vec_Int_t * vVisit )Gia_ManComputeOverlap2One_rec299,7882
int Gia_ManComputeOverlap2One( Gia_Man_t * p, int iObj, Vec_Str_t * vLabel, Vec_Int_t * vVisit )Gia_ManComputeOverlap2One313,8441
int Gia_ManComputeOverlap2( Gia_Man_t * p )Gia_ManComputeOverlap2326,8957
int Gia_ManComputeOverlapOne_rec( Gia_Man_t * p, int iObj )Gia_ManComputeOverlapOne_rec352,9639
int Gia_ManComputeOverlapOne( Gia_Man_t * p, int iObj )Gia_ManComputeOverlapOne363,10052
int Gia_ManComputeOverlap( Gia_Man_t * p )Gia_ManComputeOverlap371,10302
void Gia_ManPrintGetMuxFanins( Gia_Man_t * p, Gia_Obj_t * pObj, int * pFanins )Gia_ManPrintGetMuxFanins391,10783
int Gia_ManCountDupLut( Gia_Man_t * p )Gia_ManCountDupLut399,11127
void Gia_ManPrintMappingStats( Gia_Man_t * p, char * pDumpFile )Gia_ManPrintMappingStats453,13127
void Gia_ManPrintPackingStats( Gia_Man_t * p )Gia_ManPrintPackingStats580,18211
void Gia_ManPrintNodeProfile( int * pCounts, int nSizeMax )Gia_ManPrintNodeProfile631,19730
void Gia_ManPrintLutStats( Gia_Man_t * p )Gia_ManPrintLutStats644,20186
void Gia_ManChoiceLevel_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManChoiceLevel_rec669,20851
int Gia_ManChoiceLevel( Gia_Man_t * p )Gia_ManChoiceLevel730,22985
static inline If_Obj_t * If_ManFanin0Copy( If_Man_t * pIfMan, Gia_Obj_t * pObj ) { return If_NotCond( If_ManObj(pIfMan, Gia_ObjValue(Gia_ObjFanin0(pObj))), Gia_ObjFaninC0(pObj) ); }If_ManFanin0Copy771,24094
static inline If_Obj_t * If_ManFanin1Copy( If_Man_t * pIfMan, Gia_Obj_t * pObj ) { return If_NotCond( If_ManObj(pIfMan, Gia_ObjValue(Gia_ObjFanin1(pObj))), Gia_ObjFaninC1(pObj) ); }If_ManFanin1Copy772,24276
If_Man_t * Gia_ManToIf( Gia_Man_t * p, If_Par_t * pPars )Gia_ManToIf773,24458
int Gia_ManBuildFromMiniInt( Gia_Man_t * pNew, Vec_Int_t * vLeaves, Vec_Int_t * vAig, int fHash )Gia_ManBuildFromMiniInt841,27229
int Gia_ManBuildFromMini( Gia_Man_t * pNew, If_Man_t * pIfMan, If_Cut_t * pCut, Vec_Int_t * vLeaves, Vec_Int_t * vAig, int fHash, int fUseDsd )Gia_ManBuildFromMini879,28864
int Gia_ManFromIfAig_rec( Gia_Man_t * pNew, If_Man_t * pIfMan, If_Obj_t * pIfObj )Gia_ManFromIfAig_rec899,29474
Gia_Man_t * Gia_ManFromIfAig( If_Man_t * pIfMan )Gia_ManFromIfAig911,29964
int Gia_ManFromIfLogicCreateLut( Gia_Man_t * pNew, word * pRes, Vec_Int_t * vLeaves, Vec_Int_t * vCover, Vec_Int_t * vMapping, Vec_Int_t * vMapping2 )Gia_ManFromIfLogicCreateLut983,32629
int Gia_ManFromIfLogicCreateLutSpecial( Gia_Man_t * pNew, word * pRes, Vec_Int_t * vLeaves, Vec_Int_t * vLeavesTemp, Vec_Int_t * vCover, Vec_Int_t * vMapping, Vec_Int_t * vMapping2, Vec_Int_t * vPacking )Gia_ManFromIfLogicCreateLutSpecial1015,33857
int Gia_ManFromIfLogicNode( void * pIfMan, Gia_Man_t * pNew, int iObj, Vec_Int_t * vLeaves, Vec_Int_t * vLeavesTemp, Gia_ManFromIfLogicNode1068,35735
int Gia_ManNodeIfToGia_rec( Gia_Man_t * pNew, If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited, int fHash )Gia_ManNodeIfToGia_rec1363,47732
int Gia_ManNodeIfToGia( Gia_Man_t * pNew, If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vLeaves, int fHash )Gia_ManNodeIfToGia1401,49224
int Gia_ManFromIfLogicFindLut( If_Man_t * pIfMan, Gia_Man_t * pNew, If_Cut_t * pCutBest, sat_solver * pSat, Vec_Int_t * vLeaves, Vec_Int_t * vLits, Vec_Int_t * vCover, Vec_Int_t * vMapping, Vec_Int_t * vMapping2, Vec_Int_t * vPacking )Gia_ManFromIfLogicFindLut1439,50473
void Gia_ManFromIfGetConfig( Vec_Int_t * vConfigs, If_Man_t * pIfMan, If_Cut_t * pCutBest, int iLit, Vec_Str_t * vConfigsStr )Gia_ManFromIfGetConfig1529,54044
int Gia_ManFromIfLogicFindCell( If_Man_t * pIfMan, Gia_Man_t * pNew, Gia_Man_t * pTemp, If_Cut_t * pCutBest, Ifn_Ntk_t * pNtkCell, int nLutMax, Vec_Int_t * vLeaves, Vec_Int_t * vLits, Vec_Int_t * vCover, Vec_Int_t * vMapping, Vec_Int_t * vMapping2, Vec_Int_t * vConfigs )Gia_ManFromIfLogicFindCell1596,57021
int Gia_ManFromIfLogicCofVars( Gia_Man_t * pNew, If_Man_t * pIfMan, If_Cut_t * pCutBest, Vec_Int_t * vLeaves, Vec_Int_t * vLeaves2, Vec_Int_t * vCover, Vec_Int_t * vMapping, Vec_Int_t * vMapping2 )Gia_ManFromIfLogicCofVars1650,59427
int Gia_ManFromIfLogicAndVars( Gia_Man_t * pNew, If_Man_t * pIfMan, If_Cut_t * pCutBest, Vec_Int_t * vLeaves, Vec_Int_t * vLeaves2, Vec_Int_t * vCover, Vec_Int_t * vMapping, Vec_Int_t * vMapping2 )Gia_ManFromIfLogicAndVars1726,62921
Gia_Man_t * Gia_ManFromIfLogic( If_Man_t * pIfMan )Gia_ManFromIfLogic1782,65638
int Gia_ManMappingVerify_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManMappingVerify_rec2015,77033
void Gia_ManMappingVerify( Gia_Man_t * p )Gia_ManMappingVerify2034,77664
void Gia_ManTransferMapping( Gia_Man_t * p, Gia_Man_t * pGia )Gia_ManTransferMapping2082,79146
void Gia_ManTransferPacking( Gia_Man_t * p, Gia_Man_t * pGia )Gia_ManTransferPacking2113,80522
void Gia_ManTransferTiming( Gia_Man_t * p, Gia_Man_t * pGia )Gia_ManTransferTiming2147,81769
void Abc_FrameMiniAigSetCiArrivals( Abc_Frame_t * pAbc, int * pArrivals )Abc_FrameMiniAigSetCiArrivals2195,83592
void Abc_FrameMiniAigSetCoRequireds( Abc_Frame_t * pAbc, int * pRequireds )Abc_FrameMiniAigSetCoRequireds2208,84158
int * Abc_FrameMiniAigReadCoArrivals( Abc_Frame_t * pAbc )Abc_FrameMiniAigReadCoArrivals2221,84729
void Abc_FrameMiniAigSetAndGateDelay( Abc_Frame_t * pAbc, int Delay )Abc_FrameMiniAigSetAndGateDelay2237,85378
Gia_Man_t * Gia_ManPerformMappingInt( Gia_Man_t * p, If_Par_t * pPars )Gia_ManPerformMappingInt2259,86008
Gia_Man_t * Gia_ManPerformMapping( Gia_Man_t * p, void * pp )Gia_ManPerformMapping2371,90486
Gia_Man_t * Gia_ManPerformSopBalance( Gia_Man_t * p, int nCutNum, int nRelaxRatio, int fVerbose )Gia_ManPerformSopBalance2424,92118
Gia_Man_t * Gia_ManPerformDsdBalance( Gia_Man_t * p, int nLutSize, int nCutNum, int nRelaxRatio, int fVerbose )Gia_ManPerformDsdBalance2451,92996
void Gia_ManTestStruct( Gia_Man_t * p )Gia_ManTestStruct2496,94459
Gia_Man_t * Gia_ManDupHashMapping( Gia_Man_t * p )Gia_ManDupHashMapping2545,96126

src/aig/gia/giaSatEdge.c,2204
typedef struct Seg_Man_t_ Seg_Man_t;Seg_Man_t32,811
struct Seg_Man_t_Seg_Man_t_33,848
    sat_solver *   pSat;         // SAT solverpSat35,868
    int            nVars;        // max vars (edge num)nVars37,975
    int            LogN;         // base-2 log of max varsLogN38,1031
    int            Power2;       // power-2 of LogNPower239,1090
    int            FirstVar;     // first variable to be usedFirstVar40,1142
    int            nBTLimit;     // conflictsnBTLimit42,1222
    int            DelayMax;     // external delayDelayMax43,1268
    int            nEdges;       // the number of edgesnEdges44,1319
    int            fDelay;       // delay modefDelay45,1375
    int            fReverse;     // reverse windowingfReverse46,1422
    int            fVerbose;     // verbosefVerbose47,1476
    Gia_Man_t *    pGia;pGia49,1534
    Vec_Int_t *    vPolars;      // polarityvPolars50,1559
    Vec_Int_t *    vToSkip;      // edges to skipvToSkip51,1604
    Vec_Int_t *    vEdges;       // edges as fanin/fanout pairs vEdges52,1654
    Vec_Int_t *    vFirsts;      // first SAT variablevFirsts53,1719
    Vec_Int_t *    vNvars;       // number of SAT variablesvNvars54,1774
    Vec_Int_t *    vLits;        // literalsvLits55,1834
    int *          pLevels;      // levelspLevels56,1879
    abctime        timeStart;timeStart59,1941
Vec_Int_t * Seg_ManCountIntEdges( Gia_Man_t * p, Vec_Int_t * vPolars, Vec_Int_t * vToSkip, int nFanouts )Seg_ManCountIntEdges79,2553
Vec_Wec_t * Seg_ManCollectObjEdges( Vec_Int_t * vEdges, int nObjs )Seg_ManCollectObjEdges102,3456
int Seg_ManCountIntLevels( Seg_Man_t * p, int iStartVar )Seg_ManCountIntLevels113,3767
Seg_Man_t * Seg_ManAlloc( Gia_Man_t * pGia, int nFanouts )Seg_ManAlloc155,5063
void Seg_ManClean( Seg_Man_t * p )Seg_ManClean181,6050
void Seg_ManStop( Seg_Man_t * p )Seg_ManStop196,6443
void Seg_ManCreateCnf( Seg_Man_t * p, int fTwo, int fVerbose )Seg_ManCreateCnf223,7043
Vec_Int_t * Seg_ManConvertResult( Seg_Man_t * p )Seg_ManConvertResult418,14716
void Seg_ManComputeDelay( Gia_Man_t * pGia, int DelayInit, int nFanouts, int fTwo, int fVerbose )Seg_ManComputeDelay439,15261

src/aig/gia/giaMem.c,3859
struct Gia_MmFixed_t_Gia_MmFixed_t_30,754
    int           nEntrySize;    // the size of one entrynEntrySize33,822
    int           nEntriesAlloc; // the total number of entries allocatednEntriesAlloc34,880
    int           nEntriesUsed;  // the number of entries in usenEntriesUsed35,954
    int           nEntriesMax;   // the max number of entries in usenEntriesMax36,1019
    char *        pEntriesFree;  // the linked list of free entriespEntriesFree37,1088
    int           nChunkSize;    // the size of one chunknChunkSize40,1199
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc41,1257
    int           nChunks;       // the current number of memory chunks nChunks42,1330
    char **       pChunks;       // the allocated memorypChunks43,1403
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed46,1479
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc47,1552
struct Gia_MmFlex_t_Gia_MmFlex_t_50,1609
    int           nEntriesUsed;  // the number of entries allocatednEntriesUsed53,1676
    char *        pCurrent;      // the current pointer to free memorypCurrent54,1744
    char *        pEnd;          // the first entry outside the free memorypEnd55,1815
    int           nChunkSize;    // the size of one chunknChunkSize58,1934
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc59,1992
    int           nChunks;       // the current number of memory chunks nChunks60,2065
    char **       pChunks;       // the allocated memorypChunks61,2138
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed64,2214
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc65,2287
struct Gia_MmStep_t_Gia_MmStep_t_68,2344
    int               nMems;    // the number of fixed memory managers employednMems70,2367
    Gia_MmFixed_t **  pMems;    // memory managers: 2^1 words, 2^2 words, etcpMems71,2447
    int               nMapSize; // the size of the memory arraynMapSize72,2525
    Gia_MmFixed_t **  pMap;     // maps the number of bytes into its memory managerpMap73,2589
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc75,2705
    int           nChunks;       // the current number of memory chunks nChunks76,2778
    char **       pChunks;       // the allocated memorypChunks77,2851
Gia_MmFixed_t * Gia_MmFixedStart( int nEntrySize, int nEntriesMax )Gia_MmFixedStart96,3531
void Gia_MmFixedStop( Gia_MmFixed_t * p, int fVerbose )Gia_MmFixedStop132,4337
char * Gia_MmFixedEntryFetch( Gia_MmFixed_t * p )Gia_MmFixedEntryFetch161,5177
void Gia_MmFixedEntryRecycle( Gia_MmFixed_t * p, char * pEntry )Gia_MmFixedEntryRecycle212,6782
void Gia_MmFixedRestart( Gia_MmFixed_t * p )Gia_MmFixedRestart232,7330
int Gia_MmFixedReadMemUsage( Gia_MmFixed_t * p )Gia_MmFixedReadMemUsage271,8346
int Gia_MmFixedReadMaxEntriesUsed( Gia_MmFixed_t * p )Gia_MmFixedReadMaxEntriesUsed287,8662
Gia_MmFlex_t * Gia_MmFlexStart()Gia_MmFlexStart305,9071
void Gia_MmFlexStop( Gia_MmFlex_t * p, int fVerbose )Gia_MmFlexStop337,9747
char * Gia_MmFlexEntryFetch( Gia_MmFlex_t * p, int nBytes )Gia_MmFlexEntryFetch366,10507
void Gia_MmFlexRestart( Gia_MmFlex_t * p )Gia_MmFlexRestart411,11961
int Gia_MmFlexReadMemUsage( Gia_MmFlex_t * p )Gia_MmFlexReadMemUsage439,12658
Gia_MmStep_t * Gia_MmStepStart( int nSteps )Gia_MmStepStart468,13674
void Gia_MmStepStop( Gia_MmStep_t * p, int fVerbose )Gia_MmStepStop507,14920
char * Gia_MmStepEntryFetch( Gia_MmStep_t * p, int nBytes )Gia_MmStepEntryFetch534,15552
void Gia_MmStepEntryRecycle( Gia_MmStep_t * p, char * pEntry, int nBytes )Gia_MmStepEntryRecycle563,16294
int Gia_MmStepReadMemUsage( Gia_MmStep_t * p )Gia_MmStepReadMemUsage586,16793

src/aig/gia/giaSatLut.c,6560
typedef struct Sbl_Man_t_ Sbl_Man_t;Sbl_Man_t35,897
struct Sbl_Man_t_Sbl_Man_t_36,934
    sat_solver *   pSat;         // SAT solverpSat38,954
    Vec_Int_t *    vCardVars;    // candinality variablesvCardVars39,1001
    int            nVars;        // max varsnVars40,1059
    int            LogN;         // base-2 log of max varsLogN41,1104
    int            Power2;       // power-2 of LogNPower242,1163
    int            FirstVar;     // first variable to be usedFirstVar43,1215
    int            nTried;       // nodes triednTried45,1295
    int            nImproved;    // nodes improvednImproved46,1343
    int            nRuns;        // the number of runsnRuns47,1394
    int            nHashWins;    // the number of hashed windowsnHashWins48,1449
    int            nSmallWins;   // the number of small windowsnSmallWins49,1514
    int            nLargeWins;   // the number of large windowsnLargeWins50,1578
    int            nIterOuts;    // the number of iters exceedednIterOuts51,1642
    int            LutSize;      // LUT sizeLutSize53,1725
    int            nBTLimit;     // conflictsnBTLimit54,1770
    int            DelayMax;     // external delayDelayMax55,1816
    int            nEdges;       // the number of edgesnEdges56,1867
    int            fDelay;       // delay modefDelay57,1923
    int            fReverse;     // reverse windowingfReverse58,1970
    int            fVerbose;     // verbosefVerbose59,2024
    int            fVeryVerbose; // verbosefVeryVerbose60,2068
    int            fVeryVeryVerbose; // verbosefVeryVeryVerbose61,2112
    Gia_Man_t *    pGia;pGia63,2174
    Vec_Int_t *    vLeaves;      // leaf nodesvLeaves64,2199
    Vec_Int_t *    vAnds;        // AND-gatesvAnds65,2246
    Vec_Int_t *    vNodes;       // internal LUTsvNodes66,2292
    Vec_Int_t *    vRoots;       // driver nodes (a subset of vAnds)vRoots67,2342
    Vec_Int_t *    vRootVars;    // driver nodes (as SAT variables)vRootVars68,2411
    Hsh_VecMan_t * pHash;        // hash table for windowspHash69,2479
    Vec_Int_t *    vArrs;        // arrival times  vArrs71,2553
    Vec_Int_t *    vReqs;        // required times  vReqs72,2605
    Vec_Wec_t *    vWindow;      // fanins of each node in the windowvWindow73,2658
    Vec_Int_t *    vPath;        // critical path (as SAT variables)vPath74,2728
    Vec_Int_t *    vEdges;       // fanin edgesvEdges75,2797
    Vec_Wrd_t *    vCutsI1;      // input bit patternsvCutsI177,2857
    Vec_Wrd_t *    vCutsI2;      // input bit patternsvCutsI278,2912
    Vec_Wrd_t *    vCutsN1;      // node bit patternsvCutsN179,2967
    Vec_Wrd_t *    vCutsN2;      // node bit patternsvCutsN280,3021
    Vec_Int_t *    vCutsNum;     // cut counts for each objvCutsNum81,3075
    Vec_Int_t *    vCutsStart;   // starting cuts for each objvCutsStart82,3135
    Vec_Int_t *    vCutsObj;     // object to which this cut belongsvCutsObj83,3198
    Vec_Wrd_t *    vTempI1;      // temporary cutsvTempI184,3267
    Vec_Wrd_t *    vTempI2;      // temporary cutsvTempI285,3318
    Vec_Wrd_t *    vTempN1;      // temporary cutsvTempN186,3369
    Vec_Wrd_t *    vTempN2;      // temporary cutsvTempN287,3420
    Vec_Int_t *    vSolInit;     // initial solutionvSolInit88,3471
    Vec_Int_t *    vSolCur;      // current solutionvSolCur89,3524
    Vec_Int_t *    vSolBest;     // best solutionvSolBest90,3577
    Vec_Int_t *    vLits;        // literalsvLits92,3644
    Vec_Int_t *    vAssump;      // literalsvAssump93,3689
    Vec_Int_t *    vPolar;       // variables polarityvPolar94,3734
    abctime        timeWin;      // windowingtimeWin96,3807
    abctime        timeCut;      // cut computationtimeCut97,3853
    abctime        timeSat;      // SAT runtimetimeSat98,3905
    abctime        timeSatSat;   // satisfiable timetimeSatSat99,3953
    abctime        timeSatUns;   // unsatisfiable timetimeSatUns100,4006
    abctime        timeSatUnd;   // undecided timetimeSatUnd101,4061
    abctime        timeTime;     // timing timetimeTime102,4112
    abctime        timeStart;    // starting timetimeStart103,4160
    abctime        timeTotal;    // all runtimetimeTotal104,4210
    abctime        timeOther;    // other timetimeOther105,4258
Sbl_Man_t * Sbl_ManAlloc( Gia_Man_t * pGia, int Number )Sbl_ManAlloc125,4838
void Sbl_ManClean( Sbl_Man_t * p )Sbl_ManClean171,6683
void Sbl_ManStop( Sbl_Man_t * p )Sbl_ManStop210,7790
void Sbl_ManGetCurrentMapping( Sbl_Man_t * p )Sbl_ManGetCurrentMapping261,9128
int Sbl_ManComputeDelay( Sbl_Man_t * p, int iLut, Vec_Int_t * vFanins )Sbl_ManComputeDelay307,10659
int Sbl_ManCreateTiming( Sbl_Man_t * p, int DelayStart )Sbl_ManCreateTiming314,10896
int Sbl_ManEvaluateMappingEdge( Sbl_Man_t * p, int DelayGlo )Sbl_ManEvaluateMappingEdge426,15130
int Sbl_ManCriticalFanin( Sbl_Man_t * p, int iLut, Vec_Int_t * vFanins )Sbl_ManCriticalFanin458,16159
int Sbl_ManEvaluateMapping( Sbl_Man_t * p, int DelayGlo )Sbl_ManEvaluateMapping466,16432
void Sbl_ManUpdateMapping( Sbl_Man_t * p )Sbl_ManUpdateMapping530,18420
static int Sbl_ManPrintCut( word CutI1, word CutI2, word CutN1, word CutN2 )Sbl_ManPrintCut601,20928
static int Sbl_ManFindAndPrintCut( Sbl_Man_t * p, int c )Sbl_ManFindAndPrintCut621,21537
static inline int Sbl_CutIsFeasible( word CutI1, word CutI2, word CutN1, word CutN2, int LutSize )Sbl_CutIsFeasible625,21745
static inline int Sbl_CutPushUncontained( Vec_Wrd_t * vCutsI1, Vec_Wrd_t * vCutsI2, Vec_Wrd_t * vCutsN1, Vec_Wrd_t * vCutsN2, word CutI1, word CutI2, word CutN1, word CutN2 )Sbl_CutPushUncontained639,22917
static inline void Sbl_ManComputeCutsOne( Sbl_Man_t * p, int Fan0, int Fan1, int Obj )Sbl_ManComputeCutsOne672,24389
static inline int Sbl_ManFindCut( Sbl_Man_t * p, int Obj, word CutI1, word CutI2, word CutN1, word CutN2 )Sbl_ManFindCut713,26206
int Sbl_ManComputeCuts( Sbl_Man_t * p )Sbl_ManComputeCuts733,26968
int Sbl_ManCreateCnf( Sbl_Man_t * p )Sbl_ManCreateCnf849,31445
void Sbl_ManWindow( Sbl_Man_t * p )Sbl_ManWindow922,34119
int Sbl_ManWindow2( Sbl_Man_t * p, int iPivot )Sbl_ManWindow2939,34597
int Sbl_ManTestSat( Sbl_Man_t * p, int iPivot )Sbl_ManTestSat960,35462
void Sbl_ManPrintRuntime( Sbl_Man_t * p )Sbl_ManPrintRuntime1169,43446
void Gia_ManLutSat( Gia_Man_t * pGia, int LutSize, int nNumber, int nImproves, int nBTLimit, int DelayMax, int nEdges, int fDelay, int fReverse, int fVerbose, int fVeryVerbose )Gia_ManLutSat1183,44120

src/aig/gia/giaAigerExt.c,1403
Gia_Rpr_t * Gia_AigerReadEquivClasses( unsigned char ** ppPos, int nSize )Gia_AigerReadEquivClasses45,1264
unsigned char * Gia_WriteEquivClassesInt( Gia_Man_t * p, int * pEquivSize )Gia_WriteEquivClassesInt75,2084
Vec_Str_t * Gia_WriteEquivClasses( Gia_Man_t * p )Gia_WriteEquivClasses118,3698
static inline unsigned Gia_AigerReadDiffValue( unsigned char ** ppPos, int iPrev )Gia_AigerReadDiffValue136,4161
int * Gia_AigerReadMapping( unsigned char ** ppPos, int nSize )Gia_AigerReadMapping143,4383
static inline int Gia_AigerWriteDiffValue( unsigned char * pPos, int iPos, int iPrev, int iThis )Gia_AigerWriteDiffValue164,5065
unsigned char * Gia_AigerWriteMappingInt( Gia_Man_t * p, int * pMapSize )Gia_AigerWriteMappingInt170,5368
Vec_Str_t * Gia_AigerWriteMapping( Gia_Man_t * p )Gia_AigerWriteMapping201,6403
int * Gia_AigerReadMappingSimple( unsigned char ** ppPos, int nSize )Gia_AigerReadMappingSimple219,6860
Vec_Str_t * Gia_AigerWriteMappingSimple( Gia_Man_t * p )Gia_AigerWriteMappingSimple226,7080
Vec_Int_t * Gia_AigerReadMappingDoc( unsigned char ** ppPos, int nObjs )Gia_AigerReadMappingDoc245,7703
Vec_Str_t * Gia_AigerWriteMappingDoc( Gia_Man_t * p )Gia_AigerWriteMappingDoc267,8535
Vec_Int_t * Gia_AigerReadPacking( unsigned char ** ppPos, int nSize )Gia_AigerReadPacking302,9646
Vec_Str_t * Gia_WritePacking( Vec_Int_t * vPacking )Gia_WritePacking311,9944

src/aig/gia/giaIso2.c,4089
#define ISO_MASK ISO_MASK29,579
static unsigned int s_256Primes[ISO_MASK+1] = s_256Primes30,601
static int s_PrimeC = 49;s_PrimeC66,3629
typedef struct Gia_Iso2Man_t_       Gia_Iso2Man_t;Gia_Iso2Man_t73,3903
struct Gia_Iso2Man_t_ Gia_Iso2Man_t_74,3954
    Gia_Man_t *      pGia;pGia76,3979
    int              nObjs;nObjs77,4006
    int              nUniques;nUniques78,4034
    Vec_Int_t *      vUniques;      // unique numbersvUniques80,4086
    Vec_Int_t *      vTied;         // tied objects   vTied81,4140
    Vec_Int_t *      vTable;        // hash tablevTable82,4195
    Vec_Int_t *      vPlaces;       // used places in the tablevPlaces83,4245
    Vec_Ptr_t *      vSingles;      // singleton objectsvSingles84,4309
    Vec_Int_t *      vVec0;         // isomorphism mapvVec086,4391
    Vec_Int_t *      vVec1;         // isomorphism mapvVec187,4446
    Vec_Int_t *      vMap0;         // isomorphism mapvMap088,4501
    Vec_Int_t *      vMap1;         // isomorphism mapvMap189,4556
    int              nIters;nIters91,4630
    abctime          timeStart;timeStart92,4659
    abctime          timeSim;timeSim93,4691
    abctime          timeRefine;timeRefine94,4721
    abctime          timeSort;timeSort95,4754
    abctime          timeOther;timeOther96,4785
    abctime          timeTotal;timeTotal97,4817
Vec_Int_t * Gia_Iso2ManCollectTies( Gia_Man_t * p )Gia_Iso2ManCollectTies115,5307
void Gia_Iso2ManPrepare( Gia_Man_t * p )Gia_Iso2ManPrepare125,5554
void Gia_Iso2ManPropagate( Gia_Man_t * p )Gia_Iso2ManPropagate140,6233
unsigned Gia_Iso2ManCone_rec( Gia_Man_t * p, int Id, int Level )Gia_Iso2ManCone_rec172,7314
unsigned Gia_Iso2ManCone( Gia_Man_t * p, int Id, int Level )Gia_Iso2ManCone190,8028
void Gia_Iso2ManUpdate( Gia_Iso2Man_t * p, int Level )Gia_Iso2ManUpdate195,8174
Gia_Iso2Man_t * Gia_Iso2ManStart( Gia_Man_t * pGia )Gia_Iso2ManStart214,8640
void Gia_Iso2ManStop( Gia_Iso2Man_t * p )Gia_Iso2ManStop235,9387
void Gia_Iso2ManPrint( Gia_Iso2Man_t * p, abctime Time, int fVerbose )Gia_Iso2ManPrint248,9722
int Gia_ObjCompareByValue2( Gia_Obj_t ** pp1, Gia_Obj_t ** pp2 ) { return (int)(*pp1)->Value - (int)(*pp2)->Value; }Gia_ObjCompareByValue2275,10661
int Gia_Iso2ManUniqify( Gia_Iso2Man_t * p )Gia_Iso2ManUniqify276,10778
Vec_Wec_t * Gia_Iso2ManDerivePoClasses( Gia_Man_t * pGia )Gia_Iso2ManDerivePoClasses353,13162
void Gia_Iso2ManCollectOrder2_rec( Gia_Man_t * p, int Id, Vec_Int_t * vVec )Gia_Iso2ManCollectOrder2_rec381,13865
Vec_Int_t * Gia_Iso2ManCollectOrder2( Gia_Man_t * pGia, int * pPos, int nPos )Gia_Iso2ManCollectOrder2411,14826
void Gia_Iso2ManCollectOrder_rec( Gia_Man_t * p, int Id, Vec_Int_t * vRoots, Vec_Int_t * vVec, Vec_Int_t * vMap )Gia_Iso2ManCollectOrder_rec433,15391
void Gia_Iso2ManCollectOrder( Gia_Man_t * pGia, int * pPos, int nPos, Vec_Int_t * vRoots, Vec_Int_t * vVec, Vec_Int_t * vMap )Gia_Iso2ManCollectOrder466,16614
int Gia_Iso2ManCheckIsoPair( Gia_Man_t * p, Vec_Int_t * vVec0, Vec_Int_t * vVec1, Vec_Int_t * vMap0, Vec_Int_t * vMap1 )Gia_Iso2ManCheckIsoPair489,17311
int Gia_Iso2ManCheckIsoClassOneSkip( Gia_Man_t * p, Vec_Int_t * vClass, Vec_Int_t * vRoots, Vec_Int_t * vVec0, Vec_Int_t * vVec1, Vec_Int_t * vMap0, Vec_Int_t * vMap1 )Gia_Iso2ManCheckIsoClassOneSkip553,20156
Vec_Wec_t * Gia_Iso2ManCheckIsoClassesSkip( Gia_Man_t * p, Vec_Wec_t * vEquivs )Gia_Iso2ManCheckIsoClassesSkip569,20805
void Gia_Iso2ManCheckIsoClassOne( Gia_Man_t * p, Vec_Int_t * vClass, Vec_Int_t * vRoots, Vec_Int_t * vVec0, Vec_Int_t * vVec1, Vec_Int_t * vMap0, Vec_Int_t * vMap1, Vec_Int_t * vNewClass )Gia_Iso2ManCheckIsoClassOne609,22206
Vec_Wec_t * Gia_Iso2ManCheckIsoClasses( Gia_Man_t * p, Vec_Wec_t * vEquivs )Gia_Iso2ManCheckIsoClasses628,23031
Vec_Wec_t * Gia_Iso2ManPerform( Gia_Man_t * pGia, int fVerbose )Gia_Iso2ManPerform680,24700
Gia_Man_t * Gia_ManIsoReduce2( Gia_Man_t * pGia, Vec_Ptr_t ** pvPosEquivs, Vec_Ptr_t ** pvPiPerms, int fEstimate, int fBetterQual, int fDualOut, int fVerbose, int fVeryVerbose )Gia_ManIsoReduce2718,25733

src/aig/gia/giaIso3.c,1344
static unsigned Iso_Nodes[6] = { 0x04892ed6, 0xc2523d7d, 0xdc36cd2e, 0xf2db64f8, 0xde3126bb, 0xdebbdff0 }; // ab, a!b, !a!b, pi, po, const0Iso_Nodes30,748
static unsigned Iso_Fanio[2] = { 0x855ee0cf, 0x946e1b5f }; // fanin, fanoutIso_Fanio31,888
static unsigned Iso_Compl[2] = { 0x8ba63e50, 0x14d87f02 }; // non-compl, complIso_Compl32,964
static inline unsigned Gia_Iso3Node( Gia_Obj_t * pObj )Gia_Iso3Node49,1498
void Gia_Iso3Init( Gia_Man_t * p )Gia_Iso3Init59,1800
static inline void Gia_Iso3ComputeEdge( Gia_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pFanin, int fCompl, Vec_Int_t * vSign )Gia_Iso3ComputeEdge78,2187
void Gia_Iso3Compute( Gia_Man_t * p, Vec_Int_t * vSign )Gia_Iso3Compute83,2514
static inline Vec_Int_t * Gia_Iso3Save( Gia_Man_t * p )Gia_Iso3Save107,3168
int Gia_Iso3Unique( Vec_Int_t * vSign )Gia_Iso3Unique117,3427
void Gia_Iso3Test( Gia_Man_t * p )Gia_Iso3Test138,3877
Vec_Wec_t * Gia_Iso4Gia( Gia_Man_t * p )Gia_Iso4Gia172,4766
void Gia_Iso4Test( Gia_Man_t * p )Gia_Iso4Test201,5700
Vec_Int_t * Gia_IsoCollectData( Gia_Man_t * p, Vec_Int_t * vObjs )Gia_IsoCollectData214,6100
void Gia_IsoCompareVecs( Gia_Man_t * pGia0, Vec_Wec_t * vLevs0, Gia_Man_t * pGia1, Vec_Wec_t * vLevs1 )Gia_IsoCompareVecs222,6368
void Gia_Iso4TestTwo( Gia_Man_t * pGia0, Gia_Man_t * pGia1 )Gia_Iso4TestTwo243,7325

src/aig/gia/giaIso.c,4373
#define ISO_MASK ISO_MASK26,545
static unsigned int s_256Primes[ISO_MASK+1] = s_256Primes27,567
typedef struct Gia_IsoMan_t_       Gia_IsoMan_t;Gia_IsoMan_t67,3815
struct Gia_IsoMan_t_ Gia_IsoMan_t_68,3864
    Gia_Man_t *      pGia;pGia70,3888
    int              nObjs;nObjs71,3915
    int              nUniques;nUniques72,3943
    int              nSingles;nSingles73,3974
    int              nEntries;nEntries74,4005
    int *            pLevels;pLevels76,4057
    int *            pUniques;pUniques77,4087
    word *           pStoreW;pStoreW78,4118
    unsigned *       pStoreU;pStoreU79,4148
    Vec_Int_t *      vLevCounts;vLevCounts81,4205
    Vec_Int_t *      vClasses;vClasses82,4238
    Vec_Int_t *      vClasses2;vClasses283,4269
    abctime          timeStart;timeStart85,4320
    abctime          timeSim;timeSim86,4352
    abctime          timeRefine;timeRefine87,4382
    abctime          timeSort;timeSort88,4415
    abctime          timeOther;timeOther89,4446
    abctime          timeTotal;timeTotal90,4478
static inline unsigned  Gia_IsoGetValue( Gia_IsoMan_t * p, int i )             { return (unsigned)(p->pStoreW[i]);       }Gia_IsoGetValue93,4514
static inline unsigned  Gia_IsoGetItem( Gia_IsoMan_t * p, int i )              { return (unsigned)(p->pStoreW[i] >> 32); }Gia_IsoGetItem94,4637
static inline void      Gia_IsoSetValue( Gia_IsoMan_t * p, int i, unsigned v ) { ((unsigned *)(p->pStoreW + i))[0] = v;  }Gia_IsoSetValue96,4761
static inline void      Gia_IsoSetItem( Gia_IsoMan_t * p, int i, unsigned v )  { ((unsigned *)(p->pStoreW + i))[1] = v;  }Gia_IsoSetItem97,4884
Gia_IsoMan_t * Gia_IsoManStart( Gia_Man_t * pGia )Gia_IsoManStart114,5462
void Gia_IsoManStop( Gia_IsoMan_t * p )Gia_IsoManStop131,5998
void Gia_IsoManTransferUnique( Gia_IsoMan_t * p )Gia_IsoManTransferUnique142,6260
void Gia_IsoPrintClasses( Gia_IsoMan_t * p )Gia_IsoPrintClasses163,6705
void Gia_IsoPrint( Gia_IsoMan_t * p, int Iter, abctime Time )Gia_IsoPrint181,7274
void Gia_IsoPrepare( Gia_IsoMan_t * p )Gia_IsoPrepare204,7920
void Gia_IsoAssignUnique( Gia_IsoMan_t * p )Gia_IsoAssignUnique265,9929
int Gia_IsoSort( Gia_IsoMan_t * p )Gia_IsoSort299,10795
Vec_Ptr_t * Gia_IsoCollectCosClasses( Gia_IsoMan_t * p, int fVerbose )Gia_IsoCollectCosClasses386,13457
static inline unsigned Gia_IsoUpdateValue( int Value, int fCompl )Gia_IsoUpdateValue442,15066
static inline unsigned Gia_IsoUpdate( Gia_IsoMan_t * p, int Iter, int iObj, int fCompl )Gia_IsoUpdate446,15212
void Gia_IsoSimulate( Gia_IsoMan_t * p, int Iter )Gia_IsoSimulate453,15575
void Gia_IsoSimulateBack( Gia_IsoMan_t * p, int Iter )Gia_IsoSimulateBack480,16690
void Gia_IsoAssignOneClass2( Gia_IsoMan_t * p )Gia_IsoAssignOneClass2512,17652
void Gia_IsoAssignOneClass3( Gia_IsoMan_t * p )Gia_IsoAssignOneClass3554,18913
void Gia_IsoAssignOneClass( Gia_IsoMan_t * p, int fVerbose )Gia_IsoAssignOneClass587,20011
void Gia_IsoReportTopmost( Gia_IsoMan_t * p )Gia_IsoReportTopmost631,21586
void Gia_IsoRecognizeMuxes( Gia_Man_t * pGia )Gia_IsoRecognizeMuxes682,23250
Vec_Ptr_t * Gia_IsoDeriveEquivPos( Gia_Man_t * pGia, int fForward, int fVerbose )Gia_IsoDeriveEquivPos720,24343
int Gia_ObjCompareByValue( Gia_Obj_t ** pp1, Gia_Obj_t ** pp2 )Gia_ObjCompareByValue848,29222
void Gia_ManFindCaninicalOrder_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vAnds )Gia_ManFindCaninicalOrder_rec855,29446
void Gia_ManFindCaninicalOrder( Gia_Man_t * p, Vec_Int_t * vCis, Vec_Int_t * vAnds, Vec_Int_t * vCos, Vec_Int_t ** pvPiPerm )Gia_ManFindCaninicalOrder882,30481
Gia_Man_t * Gia_ManIsoCanonicize( Gia_Man_t * p, int fVerbose )Gia_ManIsoCanonicize958,32885
Vec_Str_t * Gia_ManIsoFindString( Gia_Man_t * p, int iPo, int fVerbose, Vec_Int_t ** pvPiPerm )Gia_ManIsoFindString998,34053
int Vec_IntCountNonTrivial( Vec_Ptr_t * vEquivs, int * pnUsed )Vec_IntCountNonTrivial1049,35631
Gia_Man_t * Gia_ManIsoReduce( Gia_Man_t * pInit, Vec_Ptr_t ** pvPosEquivs, Vec_Ptr_t ** pvPiPerms, int fEstimate, int fDualOut, int fVerbose, int fVeryVerbose )Gia_ManIsoReduce1075,36215
void Gia_IsoTestOld( Gia_Man_t * p, int fVerbose )Gia_IsoTestOld1241,41821
Vec_Int_t * Gia_IsoTestGenPerm( int nPis )Gia_IsoTestGenPerm1267,42642
void Gia_IsoTest( Gia_Man_t * p, Abc_Cex_t * pCex, int fVerbose )Gia_IsoTest1280,42957

src/aig/gia/giaEmbed.c,11117
#define GIA_PLACE_SIZE GIA_PLACE_SIZE43,1335
typedef float  Emb_Dat_t;Emb_Dat_t46,1442
typedef struct Emb_Obj_t_ Emb_Obj_t;Emb_Obj_t48,1469
struct Emb_Obj_t_Emb_Obj_t_49,1506
    unsigned       fCi      :  1;    // terminal node CIfCi51,1526
    unsigned       fCo      :  1;    // terminal node COfCo52,1583
    unsigned       fMark0   :  1;    // first user-controlled markfMark053,1640
    unsigned       fMark1   :  1;    // second user-controlled markfMark154,1707
    unsigned       nFanins  : 28;    // the number of faninsnFanins55,1775
    unsigned       nFanouts;         // the number of fanoutsnFanouts56,1836
    int            hHandle;          // the handle of the nodehHandle57,1898
    unsigned       TravId;           // user-specified valueTravId59,1973
    unsigned       iFanin; iFanin60,2034
    unsigned       Value;            // user-specified valueValue63,2081
    unsigned       iFanout; iFanout64,2142
    int            Fanios[0];        // the array of fanins/fanoutsFanios66,2178
typedef struct Emb_Man_t_ Emb_Man_t;Emb_Man_t69,2250
struct Emb_Man_t_Emb_Man_t_70,2287
    Gia_Man_t *    pGia;             // the original AIG managerpGia72,2307
    Vec_Int_t *    vCis;             // the vector of CIs (PIs + LOs)vCis73,2372
    Vec_Int_t *    vCos;             // the vector of COs (POs + LIs)vCos74,2442
    int            nObjs;            // the number of objectsnObjs75,2512
    int            nRegs;            // the number of registersnRegs76,2574
    int            nTravIds;         // traversal ID of the networknTravIds77,2638
    int *          pObjData;         // the array containing data for objectspObjData78,2706
    int            nObjData;         // the size of array to store the logic networknObjData79,2784
    int            fVerbose;         // verbose output flagfVerbose80,2869
    Emb_Dat_t *    pVecs;            // array of vectors of size nObjs * nDimspVecs81,2929
    int            nReached;         // the number of nodes reachable from the pivotnReached82,3008
    int            nDistMax;         // the maximum distance from the nodenDistMax83,3093
    float **       pMatr;            // covariance matrix nDims * nDimspMatr84,3168
    float **       pEigen;           // the first several eigen values of the matrixpEigen85,3240
    float *        pSols;            // solutions to the problem nObjs * nSols;pSols86,3325
    unsigned short*pPlacement;       // (x,y) coordinates for each cellpPlacement87,3405
static inline int         Emb_ManRegNum( Emb_Man_t * p )                              { return p->nRegs;                                    }Emb_ManRegNum90,3481
static inline int         Emb_ManCiNum( Emb_Man_t * p )                               { return Vec_IntSize(p->vCis);                        }Emb_ManCiNum91,3623
static inline int         Emb_ManCoNum( Emb_Man_t * p )                               { return Vec_IntSize(p->vCos);                        }Emb_ManCoNum92,3765
static inline int         Emb_ManPiNum( Emb_Man_t * p )                               { return Vec_IntSize(p->vCis) - p->nRegs;             }Emb_ManPiNum93,3907
static inline int         Emb_ManPoNum( Emb_Man_t * p )                               { return Vec_IntSize(p->vCos) - p->nRegs;             }Emb_ManPoNum94,4049
static inline int         Emb_ManObjNum( Emb_Man_t * p )                              { return p->nObjs;                                    } Emb_ManObjNum95,4191
static inline int         Emb_ManNodeNum( Emb_Man_t * p )                             { return p->nObjs - Vec_IntSize(p->vCis) - Vec_IntSize(p->vCos); } Emb_ManNodeNum96,4334
static inline Emb_Obj_t * Emb_ManObj( Emb_Man_t * p, unsigned hHandle )               { return (Emb_Obj_t *)(p->pObjData + hHandle);        } Emb_ManObj98,4489
static inline Emb_Obj_t * Emb_ManCi( Emb_Man_t * p, int i )                           { return Emb_ManObj( p, Vec_IntEntry(p->vCis,i) );    }Emb_ManCi99,4632
static inline Emb_Obj_t * Emb_ManCo( Emb_Man_t * p, int i )                           { return Emb_ManObj( p, Vec_IntEntry(p->vCos,i) );    }Emb_ManCo100,4774
static inline int         Emb_ObjIsTerm( Emb_Obj_t * pObj )                           { return pObj->fCi || pObj->fCo;                      } Emb_ObjIsTerm102,4917
static inline int         Emb_ObjIsCi( Emb_Obj_t * pObj )                             { return pObj->fCi;                                   } Emb_ObjIsCi103,5060
static inline int         Emb_ObjIsCo( Emb_Obj_t * pObj )                             { return pObj->fCo;                                   } Emb_ObjIsCo104,5203
static inline int         Emb_ObjIsNode( Emb_Obj_t * pObj )                           { return!Emb_ObjIsTerm(pObj) && pObj->nFanins > 0;    } Emb_ObjIsNode107,5636
static inline int         Emb_ObjSize( Emb_Obj_t * pObj )                             { return sizeof(Emb_Obj_t) / 4 + pObj->nFanins + pObj->nFanouts;  } Emb_ObjSize110,5925
static inline int         Emb_ObjFaninNum( Emb_Obj_t * pObj )                         { return pObj->nFanins;                               } Emb_ObjFaninNum111,6080
static inline int         Emb_ObjFanoutNum( Emb_Obj_t * pObj )                        { return pObj->nFanouts;                              } Emb_ObjFanoutNum112,6223
static inline Emb_Obj_t * Emb_ObjFanin( Emb_Obj_t * pObj, int i )                     { return (Emb_Obj_t *)(((int *)pObj) - pObj->Fanios[i]);               } Emb_ObjFanin113,6366
static inline Emb_Obj_t * Emb_ObjFanout( Emb_Obj_t * pObj, int i )                    { return (Emb_Obj_t *)(((int *)pObj) + pObj->Fanios[pObj->nFanins+i]); } Emb_ObjFanout114,6526
static inline void        Emb_ManResetTravId( Emb_Man_t * p )                         { extern void Emb_ManCleanTravId( Emb_Man_t * p ); Emb_ManCleanTravId( p ); p->nTravIds = 1;  }Emb_ManResetTravId116,6687
static inline void        Emb_ManIncrementTravId( Emb_Man_t * p )                     { p->nTravIds++;                                      }Emb_ManIncrementTravId117,6869
static inline void        Emb_ObjSetTravId( Emb_Obj_t * pObj, int TravId )            { pObj->TravId = TravId;                              }Emb_ObjSetTravId118,7011
static inline void        Emb_ObjSetTravIdCurrent( Emb_Man_t * p, Emb_Obj_t * pObj )  { pObj->TravId = p->nTravIds;                         }Emb_ObjSetTravIdCurrent119,7153
static inline void        Emb_ObjSetTravIdPrevious( Emb_Man_t * p, Emb_Obj_t * pObj ) { pObj->TravId = p->nTravIds - 1;                     }Emb_ObjSetTravIdPrevious120,7295
static inline int         Emb_ObjIsTravIdCurrent( Emb_Man_t * p, Emb_Obj_t * pObj )   { return ((int)pObj->TravId == p->nTravIds);          }Emb_ObjIsTravIdCurrent121,7437
static inline int         Emb_ObjIsTravIdPrevious( Emb_Man_t * p, Emb_Obj_t * pObj )  { return ((int)pObj->TravId == p->nTravIds - 1);      }Emb_ObjIsTravIdPrevious122,7579
static inline Emb_Dat_t * Emb_ManVec( Emb_Man_t * p, int v )                          { return p->pVecs + v * p->nObjs;                     }Emb_ManVec124,7722
static inline float *     Emb_ManSol( Emb_Man_t * p, int v )                          { return p->pSols + v * p->nObjs;                     }Emb_ManSol125,7864
#define Emb_ManForEachObj(Emb_ManForEachObj127,8007
#define Emb_ManForEachNode(Emb_ManForEachNode129,8152
#define Emb_ManForEachObjVec(Emb_ManForEachObjVec131,8332
#define Emb_ObjForEachFanin(Emb_ObjForEachFanin133,8504
#define Emb_ObjForEachFanout(Emb_ObjForEachFanout135,8643
void Emb_ObjAddFanin( Emb_Obj_t * pObj, Emb_Obj_t * pFanin )Emb_ObjAddFanin153,9265
Emb_Man_t * Emb_ManStartSimple( Gia_Man_t * pGia )Emb_ManStartSimple172,9837
void Emb_ManCollectSuper_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper, Vec_Int_t * vVisit )  Emb_ManCollectSuper_rec284,13804
void Emb_ManCollectSuper( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper, Vec_Int_t * vVisit )  Emb_ManCollectSuper312,14565
void Emb_ManCreateRefsSpecial( Gia_Man_t * p )  Emb_ManCreateRefsSpecial336,15250
void Emb_ManTransformRefs( Gia_Man_t * p, int * pnObjs, int * pnFanios )  Emb_ManTransformRefs382,16726
void Emb_ManCleanTravId( Emb_Man_t * p )  Emb_ManCleanTravId451,18662
void Emb_ManSetValue( Emb_Man_t * p )  Emb_ManSetValue470,19056
Emb_Man_t * Emb_ManStart( Gia_Man_t * pGia )Emb_ManStart493,19680
void Emb_ManPrintStats( Emb_Man_t * p )Emb_ManPrintStats622,24113
void Emb_ManStop( Emb_Man_t * p )Emb_ManStop651,24999
void Emb_ManPrintFanio( Emb_Man_t * p )Emb_ManPrintFanio675,25569
int Emb_ManComputeDistance_old( Emb_Man_t * p, Emb_Obj_t * pPivot )Emb_ManComputeDistance_old783,29569
void Gia_ManTestDistanceInternal( Emb_Man_t * p )Gia_ManTestDistanceInternal838,31402
void Gia_ManTestDistance( Gia_Man_t * pGia )Gia_ManTestDistance904,33548
Emb_Obj_t * Emb_ManPerformBfs( Emb_Man_t * p, Vec_Int_t * vThis, Vec_Int_t * vNext, Emb_Dat_t * pDist )Emb_ManPerformBfs930,34145
Vec_Int_t * Emb_ManConnectedComponents( Emb_Man_t * p )Emb_ManConnectedComponents977,35763
Emb_Obj_t * Emb_ManFindDistances( Emb_Man_t * p, Vec_Int_t * vStart, Emb_Dat_t * pDist )Emb_ManFindDistances1016,36921
Emb_Obj_t * Emb_ManRandomVertex( Emb_Man_t * p )Emb_ManRandomVertex1047,37775
void Emb_DumpGraphIntoFile( Emb_Man_t * p )Emb_DumpGraphIntoFile1072,38504
void Emb_ManComputeDimensions( Emb_Man_t * p, int nDims )Emb_ManComputeDimensions1102,39251
float ** Emb_ManMatrAlloc( int nDims )Emb_ManMatrAlloc1170,41658
void Emb_ManComputeCovariance( Emb_Man_t * p, int nDims )Emb_ManComputeCovariance1191,42213
void Emb_ManVecRandom( float * pVec, int nDims )Emb_ManVecRandom1244,43607
void Emb_ManVecNormal( float * pVec, int nDims )Emb_ManVecNormal1262,44004
float Emb_ManVecMultiplyOne( float * pVec0, float * pVec1, int nDims )Emb_ManVecMultiplyOne1284,44511
void Emb_ManVecCopyOne( float * pVecDest, float * pVecSour, int nDims )Emb_ManVecCopyOne1304,44957
void Emb_ManVecMultiply( float ** pMatr, float * pVec, int nDims, float * pRes )Emb_ManVecMultiply1322,45376
void Emb_ManVecOrthogonolizeOne( float * pEigen, float * pVecI, int nDims, float * pVecRes )Emb_ManVecOrthogonolizeOne1340,45835
void Emb_ManComputeEigenvectors( Emb_Man_t * p, int nDims, int nSols )Emb_ManComputeEigenvectors1358,46342
void Emb_ManComputeSolutions( Emb_Man_t * p, int nDims, int nSols )Emb_ManComputeSolutions1397,47634
void Emb_ManDerivePlacement( Emb_Man_t * p, int nSols )Emb_ManDerivePlacement1427,48418
double Emb_ManComputeHPWL( Emb_Man_t * p )Emb_ManComputeHPWL1489,50314
void Emb_ManPlacementRefine( Emb_Man_t * p, int nIters, int fVerbose )Emb_ManPlacementRefine1524,51401
void Emb_ManPrintSolutions( Emb_Man_t * p, int nSols )Emb_ManPrintSolutions1609,54404
Vec_Int_t * Emb_ManDumpGnuplotPrepare( Emb_Man_t * p )Emb_ManDumpGnuplotPrepare1633,54955
void Emb_ManDumpGnuplot( Emb_Man_t * p, char * pName, int fDumpLarge, int fShowImage )Emb_ManDumpGnuplot1695,56656
void Gia_ManSolveProblem( Gia_Man_t * pGia, Emb_Par_t * pPars )Gia_ManSolveProblem1791,60069

src/aig/gia/giaBidec.c,502
unsigned * Gia_ManConvertAigToTruth_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vTruth, int nWords, Vec_Int_t * vVisited )Gia_ManConvertAigToTruth_rec46,1314
unsigned * Gia_ManConvertAigToTruth( Gia_Man_t * p, Gia_Obj_t * pRoot, Vec_Int_t * vLeaves, Vec_Int_t * vTruth, Vec_Int_t * vVisited )Gia_ManConvertAigToTruth90,3289
int Gia_ObjPerformBidec( Bdc_Man_t * pManDec, Gia_ObjPerformBidec166,6607
Gia_Man_t * Gia_ManPerformBidec( Gia_Man_t * p, int fVerbose )Gia_ManPerformBidec233,8922

src/aig/gia/giaSim.c,5519
static inline unsigned * Gia_SimData( Gia_ManSim_t * p, int i )    { return p->pDataSim + i * p->nWords;    }Gia_SimData31,805
static inline unsigned * Gia_SimDataCi( Gia_ManSim_t * p, int i )  { return p->pDataSimCis + i * p->nWords; }Gia_SimDataCi32,915
static inline unsigned * Gia_SimDataCo( Gia_ManSim_t * p, int i )  { return p->pDataSimCos + i * p->nWords; }Gia_SimDataCo33,1025
unsigned * Gia_SimDataExt( Gia_ManSim_t * p, int i )    { return Gia_SimData(p, i);    }Gia_SimDataExt35,1136
unsigned * Gia_SimDataCiExt( Gia_ManSim_t * p, int i )  { return Gia_SimDataCi(p, i);  }Gia_SimDataCiExt36,1225
unsigned * Gia_SimDataCoExt( Gia_ManSim_t * p, int i )  { return Gia_SimDataCo(p, i);  }Gia_SimDataCoExt37,1314
void Gia_ManSimCollect_rec( Gia_Man_t * pGia, Gia_Obj_t * pObj, Vec_Int_t * vVec )Gia_ManSimCollect_rec55,1859
void Gia_ManSimCollect( Gia_Man_t * pGia, Gia_Obj_t * pObj, Vec_Int_t * vVec )Gia_ManSimCollect76,2489
Vec_Int_t * Gia_ManSimDeriveResets( Gia_Man_t * pGia )Gia_ManSimDeriveResets94,2965
void Gia_ManSimSetDefaultParams( Gia_ParSim_t * p )Gia_ManSimSetDefaultParams165,5193
void Gia_ManSimDelete( Gia_ManSim_t * p )Gia_ManSimDelete189,5989
Gia_ManSim_t * Gia_ManSimCreate( Gia_Man_t * pAig, Gia_ParSim_t * pPars )Gia_ManSimCreate211,6511
static inline void Gia_ManSimInfoRandom( Gia_ManSim_t * p, unsigned * pInfo )Gia_ManSimInfoRandom257,8200
static inline void Gia_ManSimInfoZero( Gia_ManSim_t * p, unsigned * pInfo )Gia_ManSimInfoZero275,8608
static inline int Gia_ManSimInfoIsZero( Gia_ManSim_t * p, unsigned * pInfo )Gia_ManSimInfoIsZero293,9044
static inline void Gia_ManSimInfoOne( Gia_ManSim_t * p, unsigned * pInfo )Gia_ManSimInfoOne313,9508
static inline void Gia_ManSimInfoCopy( Gia_ManSim_t * p, unsigned * pInfo, unsigned * pInfo0 )Gia_ManSimInfoCopy331,9897
static inline void Gia_ManSimulateCi( Gia_ManSim_t * p, Gia_Obj_t * pObj, int iCi )Gia_ManSimulateCi349,10313
static inline void Gia_ManSimulateCo( Gia_ManSim_t * p, int iCo, Gia_Obj_t * pObj )Gia_ManSimulateCo369,10829
static inline void Gia_ManSimulateNode( Gia_ManSim_t * p, Gia_Obj_t * pObj )Gia_ManSimulateNode393,11475
void Gia_ManSimInfoInit( Gia_ManSim_t * p )Gia_ManSimInfoInit430,12557
void Gia_ManSimInfoTransfer( Gia_ManSim_t * p )Gia_ManSimInfoTransfer453,13101
void Gia_ManSimulateRound( Gia_ManSim_t * p )Gia_ManSimulateRound476,13720
static inline int Gia_ManCheckPos( Gia_ManSim_t * p, int * piPo, int * piPat )Gia_ManCheckPos516,14886
Abc_Cex_t * Gia_ManGenerateCounter( Gia_Man_t * pAig, int iFrame, int iOut, int nWords, int iPat, Vec_Int_t * vCis2Ids )Gia_ManGenerateCounter543,15505
void Gia_ManResetRandom( Gia_ParSim_t * pPars )Gia_ManResetRandom580,16600
int Gia_ManSimSimulate( Gia_Man_t * pAig, Gia_ParSim_t * pPars )Gia_ManSimSimulate599,16994
Vec_Int_t * Gia_ManSimReadFile( char * pFileIn )Gia_ManSimReadFile668,19512
int Gia_ManSimWriteFile( char * pFileOut, Vec_Int_t * vPat, int nOuts )Gia_ManSimWriteFile685,19935
Vec_Int_t * Gia_ManSimSimulateOne( Gia_Man_t * p, Vec_Int_t * vPat )Gia_ManSimSimulateOne704,20408
void Gia_ManSimSimulatePattern( Gia_Man_t * p, char * pFileIn, char * pFileOut )Gia_ManSimSimulatePattern732,21512
static inline word * Gia_ManBuiltInDataPi( Gia_Man_t * p, int iCiId )Gia_ManBuiltInDataPi764,22529
static inline word * Gia_ManBuiltInData( Gia_Man_t * p, int iObj )Gia_ManBuiltInData768,22665
static inline void Gia_ManBuiltInDataPrint( Gia_Man_t * p, int iObj )Gia_ManBuiltInDataPrint772,22795
void Gia_ManBuiltInSimStart( Gia_Man_t * p, int nWords, int nObjs )Gia_ManBuiltInSimStart776,22998
void Gia_ManBuiltInSimPerformInt( Gia_Man_t * p, int iObj )Gia_ManBuiltInSimPerformInt797,23724
void Gia_ManBuiltInSimPerform( Gia_Man_t * p, int iObj )Gia_ManBuiltInSimPerform824,24728
void Gia_ManBuiltInSimResimulateCone_rec( Gia_Man_t * p, int iObj )Gia_ManBuiltInSimResimulateCone_rec832,24922
void Gia_ManBuiltInSimResimulateCone( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManBuiltInSimResimulateCone846,25424
void Gia_ManBuiltInSimResimulate( Gia_Man_t * p )Gia_ManBuiltInSimResimulate852,25669
int Gia_ManBuiltInSimCheckOver( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManBuiltInSimCheckOver859,25844
int Gia_ManBuiltInSimCheckEqual( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManBuiltInSimCheckEqual902,27114
int Gia_ManBuiltInSimPack( Gia_Man_t * p, Vec_Int_t * vPat )Gia_ManBuiltInSimPack946,28390
int Gia_ManBuiltInSimAddPat( Gia_Man_t * p, Vec_Int_t * vPat )Gia_ManBuiltInSimAddPat963,29021
int Gia_ManObjCheckSat_rec( Gia_Man_t * p, int iLit, Vec_Int_t * vObjs )Gia_ManObjCheckSat_rec1072,33271
int Gia_ManObjCheckOverlap1( Gia_Man_t * p, int iLit0, int iLit1, Vec_Int_t * vObjs )Gia_ManObjCheckOverlap11095,34074
int Gia_ManObjCheckOverlap( Gia_Man_t * p, int iLit0, int iLit1, Vec_Int_t * vObjs )Gia_ManObjCheckOverlap1109,34578
void Gia_ManIncrSimUpdate( Gia_Man_t * p )Gia_ManIncrSimUpdate1131,35095
void Gia_ManIncrSimStart( Gia_Man_t * p, int nWords, int nObjs )Gia_ManIncrSimStart1150,35807
void Gia_ManIncrSimStop( Gia_Man_t * p )Gia_ManIncrSimStop1164,36209
void Gia_ManIncrSimSet( Gia_Man_t * p, Vec_Int_t * vObjLits )Gia_ManIncrSimSet1174,36441
void Gia_ManIncrSimCone_rec( Gia_Man_t * p, int iObj )Gia_ManIncrSimCone_rec1191,37154
int Gia_ManIncrSimCheckOver( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManIncrSimCheckOver1205,37713
int Gia_ManIncrSimCheckEqual( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManIncrSimCheckEqual1214,38044

src/aig/gia/giaCSat2.c,13114
typedef struct Cbs2_Par_t_ Cbs2_Par_t;Cbs2_Par_t33,863
struct Cbs2_Par_t_Cbs2_Par_t_34,902
    int           nBTLimit;     // limit on the number of conflictsnBTLimit37,946
    int           nJustLimit;   // limit on the size of justification queuenJustLimit38,1014
    int           nBTThis;      // number of conflictsnBTThis40,1116
    int           nBTThisNc;    // number of conflictsnBTThisNc41,1171
    int           nJustThis;    // max size of the frontiernJustThis42,1226
    int           nBTTotal;     // total number of conflictsnBTTotal43,1286
    int           nJustTotal;   // total size of the frontiernJustTotal44,1347
    int           fUseHighest;  // use node with the highest IDfUseHighest46,1436
    int           fUseLowest;   // use node with the highest IDfUseLowest47,1500
    int           fUseMaxFF;    // use node with the largest fanin fanoutfUseMaxFF48,1564
    int           fUseFanout;   // use node with the largest fanin fanoutfUseFanout49,1638
    int           fVerbose;fVerbose51,1725
typedef struct Cbs2_Que_t_ Cbs2_Que_t;Cbs2_Que_t54,1757
struct Cbs2_Que_t_Cbs2_Que_t_55,1796
    int           iHead;        // beginning of the queueiHead57,1817
    int           iTail;        // end of the queueiTail58,1875
    int           nSize;        // allocated sizenSize59,1927
    int *         pData;        // nodes stored in the queuepData60,1977
typedef struct Cbs2_Man_t_ Cbs2_Man_t;Cbs2_Man_t63,2043
struct Cbs2_Man_t_Cbs2_Man_t_64,2082
    Cbs2_Par_t    Pars;         // parametersPars66,2103
    Gia_Man_t *   pAig;         // AIG managerpAig67,2149
    Cbs2_Que_t    pProp;        // propagation queuepProp68,2196
    Cbs2_Que_t    pJust;        // justification queuepJust69,2249
    Cbs2_Que_t    pClauses;     // clause queuepClauses70,2304
    Vec_Int_t *   vModel;       // satisfying assignmentvModel71,2352
    Vec_Int_t *   vTemp;        // temporary storagevTemp72,2409
    Vec_Str_t     vAssign;vAssign74,2483
    Vec_Str_t     vMark;vMark75,2510
    Vec_Int_t     vLevReason;vLevReason76,2535
    Vec_Int_t     vWatches;vWatches77,2565
    Vec_Int_t     vWatchUpds;vWatchUpds78,2593
    Vec_Int_t     vFanoutN;vFanoutN79,2623
    Vec_Int_t     vFanout0;vFanout080,2651
    Vec_Int_t     vActivity;vActivity81,2679
    Vec_Int_t     vActStore;vActStore82,2708
    Vec_Int_t     vJStore;vJStore83,2737
    int           nSatUnsat;    // the number of proofsnSatUnsat85,2792
    int           nSatSat;      // the number of failurenSatSat86,2848
    int           nSatUndec;    // the number of timeoutsnSatUndec87,2905
    int           nSatTotal;    // the number of callsnSatTotal88,2963
    int           nConfUnsat;   // conflicts in unsat problemsnConfUnsat90,3035
    int           nConfSat;     // conflicts in sat problemsnConfSat91,3098
    int           nConfUndec;   // conflicts in undec problemsnConfUndec92,3159
    abctime       timeJFront;timeJFront94,3243
    abctime       timeSatUnsat; // unsattimeSatUnsat95,3273
    abctime       timeSatSat;   // sattimeSatSat96,3314
    abctime       timeSatUndec; // undecidedtimeSatUndec97,3353
    abctime       timeTotal;    // total runtimetimeTotal98,3398
    int           nPropCalls[3];nPropCalls100,3471
    int           nFails[2];nFails101,3504
    int           nClauseConf;nClauseConf102,3533
static inline int   Cbs2_VarUnused( Cbs2_Man_t * p, int iVar )                     { return Vec_IntEntry(&p->vLevReason, 3*iVar) == -1; }Cbs2_VarUnused105,3568
static inline void  Cbs2_VarSetUnused( Cbs2_Man_t * p, int iVar )                  { Vec_IntWriteEntry(&p->vLevReason, 3*iVar, -1);     } Cbs2_VarSetUnused106,3706
static inline int   Cbs2_VarMark0( Cbs2_Man_t * p, int iVar )                      { return Vec_StrEntry(&p->vMark, iVar);              }Cbs2_VarMark0126,6010
static inline void  Cbs2_VarSetMark0( Cbs2_Man_t * p, int iVar, int Value )        { Vec_StrWriteEntry(&p->vMark, iVar, (char)Value);   } Cbs2_VarSetMark0127,6148
static inline int   Cbs2_VarIsAssigned( Cbs2_Man_t * p, int iVar )                 { return Vec_StrEntry(&p->vAssign, iVar) < 2;        }Cbs2_VarIsAssigned132,6602
static inline void  Cbs2_VarUnassign( Cbs2_Man_t * p, int iVar )                   { assert( Cbs2_VarIsAssigned(p, iVar)); Vec_StrWriteEntry(&p->vAssign, iVar, (char)(2+Vec_StrEntry(&p->vAssign, iVar))); Cbs2_VarSetUnused(p, iVar); }Cbs2_VarUnassign133,6740
static inline int   Cbs2_VarValue( Cbs2_Man_t * p, int iVar )                      { return Vec_StrEntry(&p->vAssign, iVar);            }Cbs2_VarValue135,6975
static inline void  Cbs2_VarSetValue( Cbs2_Man_t * p, int iVar, int v )            { assert( !Cbs2_VarIsAssigned(p, iVar)); Vec_StrWriteEntry(&p->vAssign, iVar, (char)v);                                  }Cbs2_VarSetValue136,7113
static inline int   Cbs2_VarIsJust( Cbs2_Man_t * p, Gia_Obj_t * pVar, int iVar )      { return Gia_ObjIsAnd(pVar) && !Cbs2_VarIsAssigned(p, Gia_ObjFaninId0(pVar, iVar)) && !Cbs2_VarIsAssigned(p, Gia_ObjFaninId1(pVar, iVar));  } Cbs2_VarIsJust138,7320
static inline int   Cbs2_VarFanin0Value( Cbs2_Man_t * p, Gia_Obj_t * pVar, int iVar ) { return Cbs2_VarValue(p, Gia_ObjFaninId0(pVar, iVar)) ^ Gia_ObjFaninC0(pVar);   }Cbs2_VarFanin0Value139,7549
static inline int   Cbs2_VarFanin1Value( Cbs2_Man_t * p, Gia_Obj_t * pVar, int iVar ) { return Cbs2_VarValue(p, Gia_ObjFaninId1(pVar, iVar)) ^ Gia_ObjFaninC1(pVar);   }Cbs2_VarFanin1Value140,7718
static inline int   Cbs2_VarDecLevel( Cbs2_Man_t * p, int iVar )                   { assert( !Cbs2_VarUnused(p, iVar) ); return Vec_IntEntry(&p->vLevReason, 3*iVar);    }Cbs2_VarDecLevel143,7889
static inline int   Cbs2_VarReason0( Cbs2_Man_t * p, int iVar )                    { assert( !Cbs2_VarUnused(p, iVar) ); return Vec_IntEntry(&p->vLevReason, 3*iVar+1);  }Cbs2_VarReason0144,8060
static inline int   Cbs2_VarReason1( Cbs2_Man_t * p, int iVar )                    { assert( !Cbs2_VarUnused(p, iVar) ); return Vec_IntEntry(&p->vLevReason, 3*iVar+2);  }Cbs2_VarReason1145,8231
static inline int * Cbs2_VarReasonP( Cbs2_Man_t * p, int iVar )                    { assert( !Cbs2_VarUnused(p, iVar) ); return Vec_IntEntryP(&p->vLevReason, 3*iVar+1); }Cbs2_VarReasonP146,8402
static inline int   Cbs2_ClauseSize( Cbs2_Man_t * p, int hClause )                 { return p->pClauses.pData[hClause];                                                  }Cbs2_ClauseSize149,8747
static inline int * Cbs2_ClauseLits( Cbs2_Man_t * p, int hClause )                 { return p->pClauses.pData+hClause+1;                                                 }Cbs2_ClauseLits150,8918
static inline int   Cbs2_ClauseLit( Cbs2_Man_t * p, int hClause, int i )           { return p->pClauses.pData[hClause+1+i];                                              }Cbs2_ClauseLit151,9089
static inline int * Cbs2_ClauseNext1p( Cbs2_Man_t * p, int hClause )               { return p->pClauses.pData+hClause+Cbs2_ClauseSize(p, hClause)+2;                     }Cbs2_ClauseNext1p152,9260
static inline void  Cbs2_ClauseSetSize( Cbs2_Man_t * p, int hClause, int x )       { p->pClauses.pData[hClause] = x;                                                     }Cbs2_ClauseSetSize154,9432
static inline void  Cbs2_ClauseSetLit( Cbs2_Man_t * p, int hClause, int i, int x ) { p->pClauses.pData[hClause+i+1] = x;                                                 }Cbs2_ClauseSetLit155,9603
static inline void  Cbs2_ClauseSetNext( Cbs2_Man_t * p, int hClause, int n, int x ){ p->pClauses.pData[hClause+Cbs2_ClauseSize(p, hClause)+1+n] = x;                     }Cbs2_ClauseSetNext156,9774
#define Cbs2_QueForEachEntry(Cbs2_QueForEachEntry159,9947
#define Cbs2_ClauseForEachEntry(Cbs2_ClauseForEachEntry162,10100
#define Cbs2_ClauseForEachEntry1(Cbs2_ClauseForEachEntry1164,10271
#define Cbs2_ObjForEachFanout(Cbs2_ObjForEachFanout167,10448
void Cbs2_SetDefaultParams( Cbs2_Par_t * pPars )Cbs2_SetDefaultParams185,11125
void Cbs2_ManSetConflictNum( Cbs2_Man_t * p, int Num )Cbs2_ManSetConflictNum196,11673
Cbs2_Man_t * Cbs2_ManAlloc( Gia_Man_t * pGia )Cbs2_ManAlloc212,11995
void Cbs2_ManStop( Cbs2_Man_t * p )Cbs2_ManStop249,13323
Vec_Int_t * Cbs2_ReadModel( Cbs2_Man_t * p )Cbs2_ReadModel280,14146
static inline int Cbs2_ManCheckLimits( Cbs2_Man_t * p )Cbs2_ManCheckLimits299,14496
static inline void Cbs2_ManSaveModel( Cbs2_Man_t * p, Vec_Int_t * vCex )Cbs2_ManSaveModel317,15052
static inline void Cbs2_ManSaveModelAll( Cbs2_Man_t * p, Vec_Int_t * vCex )Cbs2_ManSaveModelAll329,15451
static inline int Cbs2_QueIsEmpty( Cbs2_Que_t * p )Cbs2_QueIsEmpty352,16003
static inline void Cbs2_QuePush( Cbs2_Que_t * p, int iObj )Cbs2_QuePush368,16327
static inline void Cbs2_QueGrow( Cbs2_Que_t * p, int Plus )Cbs2_QueGrow377,16551
static inline int Cbs2_QueHasNode( Cbs2_Que_t * p, int iObj )Cbs2_QueHasNode398,17063
static inline void Cbs2_QueStore( Cbs2_Que_t * p, int * piHeadOld, int * piTailOld )Cbs2_QueStore418,17488
static inline void Cbs2_QueRestore( Cbs2_Que_t * p, int iHeadOld, int iTailOld )Cbs2_QueRestore439,17992
static inline int Cbs2_VarFaninFanoutMax( Cbs2_Man_t * p, Gia_Obj_t * pObj )Cbs2_VarFaninFanoutMax457,18392
static inline int Cbs2_ManDecideHighest( Cbs2_Man_t * p )Cbs2_ManDecideHighest478,19000
static inline Gia_Obj_t * Cbs2_ManDecideLowest( Cbs2_Man_t * p )Cbs2_ManDecideLowest498,19500
static inline Gia_Obj_t * Cbs2_ManDecideMaxFF( Cbs2_Man_t * p )Cbs2_ManDecideMaxFF518,20050
static inline void Cbs2_ManCancelUntil( Cbs2_Man_t * p, int iBound )Cbs2_ManCancelUntil549,20780
static inline void Cbs2_ManAssign( Cbs2_Man_t * p, int iLit, int Level, int iRes0, int iRes1 )Cbs2_ManAssign570,21369
static inline void Cbs2_ManPrintClause( Cbs2_Man_t * p, int Level, int hClause )Cbs2_ManPrintClause602,22151
static inline void Cbs2_ManPrintCube( Cbs2_Man_t * p, int Level, int hClause )Cbs2_ManPrintCube612,22603
static inline void Cbs2_ManBumpClause( Cbs2_Man_t * p, int hClause )Cbs2_ManBumpClause621,22924
static inline void Cbs2_ManBumpClean( Cbs2_Man_t * p )Cbs2_ManBumpClean632,23285
static inline void Cbs2_ManCleanWatch( Cbs2_Man_t * p )Cbs2_ManCleanWatch650,23720
static inline void Cbs2_ManWatchClause( Cbs2_Man_t * p, int hClause, int Lit )Cbs2_ManWatchClause659,24018
static inline int Cbs2_QueFinish( Cbs2_Man_t * p, int Level )Cbs2_QueFinish679,24692
static inline int Cbs2_ManDeriveReason( Cbs2_Man_t * p, int Level )Cbs2_ManDeriveReason720,26145
static inline int Cbs2_ManAnalyze( Cbs2_Man_t * p, int Level, int iVar, int iFan0, int iFan1 )Cbs2_ManAnalyze781,28386
static inline int Cbs2_ManPropagateClauses( Cbs2_Man_t * p, int Level, int Lit )Cbs2_ManPropagateClauses823,29742
static inline int Cbs2_ManResolve( Cbs2_Man_t * p, int Level, int hClause0, int hClause1 )Cbs2_ManResolve921,33263
static inline int Cbs2_ManPropagateOne( Cbs2_Man_t * p, int iVar, int Level )Cbs2_ManPropagateOne980,35510
static inline int Cbs2_ManPropagateTwo( Cbs2_Man_t * p, int iVar, int Level )Cbs2_ManPropagateTwo1039,37941
static inline void Cbs2_ManPropagateUnassigned( Cbs2_Man_t * p, int iVar, int Level )Cbs2_ManPropagateUnassigned1073,39293
int Cbs2_ManPropagate( Cbs2_Man_t * p, int Level )Cbs2_ManPropagate1103,40639
int Cbs2_ManPropagate2( Cbs2_Man_t * p, int Level )Cbs2_ManPropagate21130,41404
static inline int Cbs2_ManUpdateDecVar2( Cbs2_Man_t * p, int iObj, int iDecLit )Cbs2_ManUpdateDecVar21164,42456
static inline int Cbs2_ManUpdateDecVar3( Cbs2_Man_t * p, int iObj, int iDecLit )Cbs2_ManUpdateDecVar31178,43036
static inline int Cbs2_ManUpdateDecVar( Cbs2_Man_t * p, int iObj, int iDecLit )Cbs2_ManUpdateDecVar1192,43632
int Cbs2_ManUpdateFrontier( Cbs2_Man_t * p, int iPropHeadOld, int * piDecLit )Cbs2_ManUpdateFrontier1206,44215
int Cbs2_ManSolve1_rec( Cbs2_Man_t * p, int Level )Cbs2_ManSolve1_rec1253,45737
int Cbs2_ManSolve2_rec( Cbs2_Man_t * p, int Level )Cbs2_ManSolve2_rec1307,47868
int Cbs2_ManSolve_rec( Cbs2_Man_t * p, int Level )Cbs2_ManSolve_rec1371,50357
int Cbs2_ManSolve( Cbs2_Man_t * p, int iLit )Cbs2_ManSolve1389,50989
int Cbs2_ManSolve2( Cbs2_Man_t * p, int iLit, int iLit2 )Cbs2_ManSolve21412,51844
void Cbs2_ManSatPrintStats( Cbs2_Man_t * p )Cbs2_ManSatPrintStats1449,53041
void Cbs2_ObjPrintFanouts( Cbs2_Man_t * p, int iObj )Cbs2_ObjPrintFanouts1479,54345
void Cbs2_ManPrintFanouts( Cbs2_Man_t * p )Cbs2_ManPrintFanouts1488,54578
void Cbs2_ObjCreateFanout( Cbs2_Man_t * p, int iObj, int iFan0, int iFan1 )Cbs2_ObjCreateFanout1495,54796
void Cbs2_ObjDeleteFanout( Cbs2_Man_t * p, int iObj )Cbs2_ObjDeleteFanout1502,55204
void Cbs2_ManCreateFanout_rec( Cbs2_Man_t * p, int iObj )Cbs2_ManCreateFanout_rec1508,55438
void Cbs2_ManDeleteFanout_rec( Cbs2_Man_t * p, int iObj )Cbs2_ManDeleteFanout_rec1524,55997
void Cbs2_ManCheckFanouts( Cbs2_Man_t * p )Cbs2_ManCheckFanouts1536,56494
Vec_Int_t * Cbs2_ManSolveMiterNc( Gia_Man_t * pAig, int nConfs, Vec_Str_t ** pvStatus, int fVerbose )Cbs2_ManSolveMiterNc1559,57110

src/aig/gia/giaMf.c,9898
#define MF_LEAF_MAX MF_LEAF_MAX34,902
#define MF_CUT_MAX MF_CUT_MAX35,927
#define MF_LOG_PAGE MF_LOG_PAGE36,952
#define MF_NO_LEAF MF_NO_LEAF37,977
#define MF_TT_WORDS MF_TT_WORDS38,1002
#define MF_NO_FUNC MF_NO_FUNC39,1070
#define MF_EPSILON MF_EPSILON40,1119
typedef struct Mf_Cut_t_ Mf_Cut_t; Mf_Cut_t42,1145
struct Mf_Cut_t_Mf_Cut_t_43,1181
    word            Sign;           // signatureSign45,1200
    int             Delay;          // delayDelay46,1249
    float           Flow;           // flowFlow47,1294
    unsigned        iFunc   : 27;   // function (MF_NO_FUNC)iFunc48,1338
    unsigned        nLeaves :  5;   // leaf number (MF_NO_LEAF)nLeaves49,1399
    int             pLeaves[MF_LEAF_MAX+1]; // leavespLeaves50,1463
typedef struct Mf_Obj_t_ Mf_Obj_t; Mf_Obj_t52,1520
struct Mf_Obj_t_Mf_Obj_t_53,1556
    int             iCutSet;        // cutsetiCutSet55,1575
    float           Flow;           // areaFlow56,1621
    float           nFlowRefs;      // flow referencesnFlowRefs57,1665
    unsigned        Delay    : 16;  // delay Delay58,1720
    unsigned        nMapRefs : 16;  // map referencesnMapRefs59,1766
typedef struct Mf_Man_t_ Mf_Man_t; Mf_Man_t61,1823
struct Mf_Man_t_Mf_Man_t_62,1859
    Gia_Man_t *     pGia0;          // original managerpGia065,1895
    Gia_Man_t *     pGia;           // derived managerpGia66,1951
    Jf_Par_t *      pPars;          // parameterspPars67,2006
    Mf_Obj_t *      pLfObjs;        // best cutspLfObjs69,2072
    Vec_Ptr_t       vPages;         // cut memoryvPages70,2121
    Vec_Mem_t *     vTtMem;         // truth tablesvTtMem71,2171
    Vec_Int_t       vCnfSizes;      // handles to CNFvCnfSizes72,2223
    Vec_Int_t       vCnfMem;        // memory for CNFvCnfMem73,2277
    Vec_Int_t       vTemp;          // temporary arrayvTemp74,2331
    int             iCur;           // current positioniCur75,2386
    int             Iter;           // mapping iterationsIter76,2442
    int             fUseEla;        // use exact areafUseEla77,2500
    abctime         clkStart;       // starting timeclkStart79,2572
    double          CutCount[4];    // cut countsCutCount80,2625
    int             nCutCounts[MF_LEAF_MAX+1];nCutCounts81,2675
static inline Mf_Obj_t * Mf_ManObj( Mf_Man_t * p, int i )            { return p->pLfObjs + i;                                          }Mf_ManObj84,2726
static inline int *      Mf_ManCutSet( Mf_Man_t * p, int i )         { return (int *)Vec_PtrEntry(&p->vPages, i >> 16) + (i & 0xFFFF); }Mf_ManCutSet85,2863
static inline int *      Mf_ObjCutSet( Mf_Man_t * p, int i )         { return Mf_ManCutSet(p, Mf_ManObj(p, i)->iCutSet);               }Mf_ObjCutSet86,3000
static inline int *      Mf_ObjCutBest( Mf_Man_t * p, int i )        { return Mf_ObjCutSet(p, i) + 1;                                  }Mf_ObjCutBest87,3137
static inline int        Mf_ObjMapRefNum( Mf_Man_t * p, int i )      { return Mf_ManObj(p, i)->nMapRefs;                               }Mf_ObjMapRefNum89,3275
static inline int        Mf_ObjMapRefInc( Mf_Man_t * p, int i )      { return Mf_ManObj(p, i)->nMapRefs++;                             }Mf_ObjMapRefInc90,3412
static inline int        Mf_ObjMapRefDec( Mf_Man_t * p, int i )      { return --Mf_ManObj(p, i)->nMapRefs;                             }Mf_ObjMapRefDec91,3549
static inline int        Mf_CutSize( int * pCut )                    { return pCut[0] & MF_NO_LEAF;                                    }Mf_CutSize93,3687
static inline int        Mf_CutFunc( int * pCut )                    { return ((unsigned)pCut[0] >> 5);                                }Mf_CutFunc94,3824
static inline int        Mf_CutSetBoth( int n, int f )               { return n | (f << 5);                                            }Mf_CutSetBoth95,3961
static inline int        Mf_CutIsTriv( int * pCut, int i )           { return Mf_CutSize(pCut) == 1 && pCut[1] == i;                   } Mf_CutIsTriv96,4098
#define Mf_SetForEachCut(Mf_SetForEachCut98,4237
#define Mf_ObjForEachCut(Mf_ObjForEachCut99,4366
static int s_nCalls = 0;s_nCalls118,5090
static Vec_Mem_t * s_vTtMem = NULL;s_vTtMem119,5115
int Mf_ManTruthCanonicize( word * t, int nVars )Mf_ManTruthCanonicize120,5151
void Mf_ManTruthQuit()Mf_ManTruthQuit139,5689
Vec_Wrd_t * Mf_ManTruthCollect( int Limit )Mf_ManTruthCollect150,5972
int Mf_ManTruthCount()Mf_ManTruthCount197,7564
void Mf_ManProfileTruths( Mf_Man_t * p )Mf_ManProfileTruths216,8010
static inline void Mf_CutPrintOne( int * pCut )Mf_CutPrintOne252,9084
static inline int Mf_CubeLit( int Cube, int iVar ) { return (Cube >> (iVar << 1)) & 3; }Mf_CubeLit260,9290
static inline int Mf_ManCountLits( int * pCnf, int nCubes, int nVars )Mf_ManCountLits261,9379
Vec_Int_t * Mf_ManDeriveCnfs( Mf_Man_t * p, int * pnVars, int * pnClas, int * pnLits )Mf_ManDeriveCnfs270,9642
Cnf_Dat_t * Mf_ManDeriveCnf( Mf_Man_t * p, int fCnfObjIds, int fAddOrCla )Mf_ManDeriveCnf336,12209
static inline int Mf_CutComputeTruth6( Mf_Man_t * p, Mf_Cut_t * pCut0, Mf_Cut_t * pCut1, int fCompl0, int fCompl1, Mf_Cut_t * pCutR, int fIsXor )Mf_CutComputeTruth6543,20383
static inline int Mf_CutComputeTruth( Mf_Man_t * p, Mf_Cut_t * pCut0, Mf_Cut_t * pCut1, int fCompl0, int fCompl1, Mf_Cut_t * pCutR, int fIsXor )Mf_CutComputeTruth567,21759
static inline int Mf_CutComputeTruthMux6( Mf_Man_t * p, Mf_Cut_t * pCut0, Mf_Cut_t * pCut1, Mf_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, Mf_Cut_t * pCutR )Mf_CutComputeTruthMux6597,23592
static inline int Mf_CutComputeTruthMux( Mf_Man_t * p, Mf_Cut_t * pCut0, Mf_Cut_t * pCut1, Mf_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, Mf_Cut_t * pCutR )Mf_CutComputeTruthMux620,25023
static inline int Mf_CutCountBits( word i )Mf_CutCountBits664,27244
static inline word Mf_CutGetSign( int * pLeaves, int nLeaves )Mf_CutGetSign671,27493
static inline int Mf_CutCreateUnit( Mf_Cut_t * p, int i )Mf_CutCreateUnit678,27690
static inline void Mf_CutPrint( Mf_Man_t * p, Mf_Cut_t * pCut )Mf_CutPrint688,27926
static inline int Mf_ManPrepareCuts( Mf_Cut_t * pCuts, Mf_Man_t * p, int iObj, int fAddUnit )Mf_ManPrepareCuts707,28674
static inline int Mf_ManSaveCuts( Mf_Man_t * p, Mf_Cut_t ** pCuts, int nCuts )Mf_ManSaveCuts729,29496
static inline void Mf_ObjSetBestCut( int * pCuts, int * pCut )Mf_ObjSetBestCut749,30247
static inline int Mf_CutCheck( Mf_Cut_t * pBase, Mf_Cut_t * pCut ) // check if pCut is contained in pBaseMf_CutCheck774,30936
static inline int Mf_SetCheckArray( Mf_Cut_t ** ppCuts, int nCuts )Mf_SetCheckArray790,31384
static inline int Mf_CutMergeOrder( Mf_Cut_t * pCut0, Mf_Cut_t * pCut1, Mf_Cut_t * pCut, int nLutSize )Mf_CutMergeOrder830,32478
static inline int Mf_CutMergeOrderMux( Mf_Cut_t * pCut0, Mf_Cut_t * pCut1, Mf_Cut_t * pCut2, Mf_Cut_t * pCut, int nLutSize )Mf_CutMergeOrderMux893,34220
static inline int Mf_SetCutIsContainedOrder( Mf_Cut_t * pBase, Mf_Cut_t * pCut ) // check if pCut is contained in pBaseMf_SetCutIsContainedOrder917,35165
static inline int Mf_SetLastCutIsContained( Mf_Cut_t ** pCuts, int nCuts )Mf_SetLastCutIsContained943,35884
static inline int Mf_SetLastCutContainsArea( Mf_Cut_t ** pCuts, int nCuts )Mf_SetLastCutContainsArea951,36214
static inline int Mf_CutCompareArea( Mf_Cut_t * pCut0, Mf_Cut_t * pCut1 )Mf_CutCompareArea969,36858
static inline void Mf_SetSortByArea( Mf_Cut_t ** pCuts, int nCuts )Mf_SetSortByArea979,37300
static inline int Mf_SetAddCut( Mf_Cut_t ** pCuts, int nCuts, int nCutNum )Mf_SetAddCut989,37574
static inline int Mf_CutArea( Mf_Man_t * p, int nLeaves, int iFunc )Mf_CutArea997,37834
static inline void Mf_CutParams( Mf_Man_t * p, Mf_Cut_t * pCut, float FlowRefs )Mf_CutParams1007,38132
void Mf_ObjMergeOrder( Mf_Man_t * p, int iObj )Mf_ObjMergeOrder1023,38677
void Mf_ManSetFlowRefs( Gia_Man_t * p, Vec_Int_t * vRefs )Mf_ManSetFlowRefs1134,43288
int Mf_ManSetMapRefs( Mf_Man_t * p )Mf_ManSetMapRefs1168,44689
Gia_Man_t * Mf_ManDeriveMapping( Mf_Man_t * p )Mf_ManDeriveMapping1226,46833
Gia_Man_t * Mf_ManDeriveMappingCoarse( Mf_Man_t * p )Mf_ManDeriveMappingCoarse1248,47696
Gia_Man_t * Mf_ManDeriveMappingGia( Mf_Man_t * p )Mf_ManDeriveMappingGia1289,49764
Mf_Man_t * Mf_ManAlloc( Gia_Man_t * pGia, Jf_Par_t * pPars )Mf_ManAlloc1378,53350
void Mf_ManFree( Mf_Man_t * p )Mf_ManFree1411,54483
void Mf_ManSetDefaultPars( Jf_Par_t * pPars )Mf_ManSetDefaultPars1438,55199
void Mf_ManPrintStats( Mf_Man_t * p, char * pTitle )Mf_ManPrintStats1462,55911
void Mf_ManPrintInit( Mf_Man_t * p )Mf_ManPrintInit1475,56380
void Mf_ManPrintQuit( Mf_Man_t * p, Gia_Man_t * pNew )Mf_ManPrintQuit1490,56930
void Mf_ManComputeCuts( Mf_Man_t * p )Mf_ManComputeCuts1524,58563
int Mf_CutRef2_rec( Mf_Man_t * p, int * pCut, Vec_Int_t * vTemp, int Limit )Mf_CutRef2_rec1544,59056
static inline int Mf_CutAreaDerefed2( Mf_Man_t * p, int * pCut )Mf_CutAreaDerefed21556,59521
int Mf_CutRef_rec( Mf_Man_t * p, int * pCut )Mf_CutRef_rec1566,59796
int Mf_CutDeref_rec( Mf_Man_t * p, int * pCut )Mf_CutDeref_rec1574,60126
static inline int Mf_CutAreaDerefed( Mf_Man_t * p, int * pCut )Mf_CutAreaDerefed1582,60460
static inline float Mf_CutFlow( Mf_Man_t * p, int * pCut, int * pTime )Mf_CutFlow1589,60657
static inline void Mf_ObjComputeBestCut( Mf_Man_t * p, int iObj )Mf_ObjComputeBestCut1603,61063
void Mf_ManComputeMapping( Mf_Man_t * p )Mf_ManComputeMapping1647,62612
Gia_Man_t * Mf_ManPerformMapping( Gia_Man_t * pGia, Jf_Par_t * pPars )Mf_ManPerformMapping1655,62863
void * Mf_ManGenerateCnf( Gia_Man_t * pGia, int nLutSize, int fCnfObjIds, int fAddOrCla, int fMapping, int fVerbose )Mf_ManGenerateCnf1709,64678
void Mf_ManDumpCnf( Gia_Man_t * p, char * pFileName, int nLutSize, int fCnfObjIds, int fAddOrCla, int fVerbose )Mf_ManDumpCnf1727,65334

src/aig/gia/giaShrink7.c,1546
typedef struct Unm_Man_t_ Unm_Man_t;Unm_Man_t33,893
struct Unm_Man_t_Unm_Man_t_34,930
    Gia_Man_t *        pGia;           // user's AIGpGia36,950
    Gia_Man_t *        pNew;           // constructed AIGpNew37,1003
    Hash_IntMan_t *    pHash;          // hash tablepHash38,1061
    int                nNewSize;       // expected size of new managernNewSize39,1114
    Vec_Int_t *        vUsed;          // used nodesvUsed40,1185
    Vec_Int_t *        vId2Used;       // mapping of obj IDs into used node IDsvId2Used41,1238
    Vec_Wrd_t *        vTruths;        // truth tablesvTruths42,1318
    Vec_Int_t *        vLeaves;        // temporary storage for leavesvLeaves43,1373
    abctime            clkStart;       // starting the clockclkStart44,1444
Unm_Man_t * Unm_ManAlloc( Gia_Man_t * pGia )Unm_ManAlloc64,2060
Gia_Man_t * Unm_ManFree( Unm_Man_t * p )Unm_ManFree86,2770
int Unm_ManPrintPairStats( Hash_IntMan_t * pHash, int nTotal0, int nPairs0, int nPairs1, int fUseLit )Unm_ManPrintPairStats118,3539
Vec_Int_t * Unm_ManComputePairs( Unm_Man_t * p, int fVerbose )Unm_ManComputePairs153,5129
Vec_Int_t * Unm_ManFindUsedNodes( Vec_Int_t * vPairs, int nObjs )Unm_ManFindUsedNodes208,7232
Vec_Wrd_t * Unm_ManComputeTruths( Unm_Man_t * p )Unm_ManComputeTruths222,7792
Vec_Int_t * Unm_ManCollectDecomp( Unm_Man_t * p, Vec_Int_t * vPairs, int fVerbose )Unm_ManCollectDecomp258,8956
void Unm_ManWork( Unm_Man_t * p )Unm_ManWork328,11493
Gia_Man_t * Unm_ManTest( Gia_Man_t * pGia )Unm_ManTest357,12296

src/aig/gia/giaBalMap.c,1038
void Gia_ManHighlight_rec( Gia_Man_t * p, int iObj )Gia_ManHighlight_rec45,1229
void Gia_ManPrepareWin( Gia_Man_t * p, Vec_Int_t * vOuts, Vec_Int_t ** pvPis, Vec_Int_t ** pvPos, Vec_Int_t ** pvAnds, int fPoOnly )Gia_ManPrepareWin57,1631
Gia_Man_t * Gia_ManExtractWin( Gia_Man_t * p, Vec_Int_t * vOuts, int fPoOnly )Gia_ManExtractWin114,3266
Gia_Man_t * Gia_ManInsertWin( Gia_Man_t * p, Vec_Int_t * vOuts, Gia_Man_t * pWin )Gia_ManInsertWin136,4117
Vec_Int_t * Gia_ManFindLatest( Gia_Man_t * p, int LevelMax, int nTimeWindow )Gia_ManFindLatest186,5858
Gia_Man_t * Gia_ManExtractWindow( Gia_Man_t * p, int LevelMax, int nTimeWindow, int fVerbose )Gia_ManExtractWindow236,7525
Gia_Man_t * Gia_ManPerformSopBalanceWin( Gia_Man_t * p, int LevelMax, int nTimeWindow, int nCutNum, int nRelaxRatio, int fVerbose )Gia_ManPerformSopBalanceWin265,8297
Gia_Man_t * Gia_ManPerformDsdBalanceWin( Gia_Man_t * p, int LevelMax, int nTimeWindow, int nLutSize, int nCutNum, int nRelaxRatio, int fVerbose )Gia_ManPerformDsdBalanceWin298,9308

src/aig/gia/giaCSat.c,8297
typedef struct Cbs_Par_t_ Cbs_Par_t;Cbs_Par_t33,863
struct Cbs_Par_t_Cbs_Par_t_34,900
    int           nBTLimit;     // limit on the number of conflictsnBTLimit37,943
    int           nJustLimit;   // limit on the size of justification queuenJustLimit38,1011
    int           nBTThis;      // number of conflictsnBTThis40,1113
    int           nBTThisNc;    // number of conflictsnBTThisNc41,1168
    int           nJustThis;    // max size of the frontiernJustThis42,1223
    int           nBTTotal;     // total number of conflictsnBTTotal43,1283
    int           nJustTotal;   // total size of the frontiernJustTotal44,1344
    int           fUseHighest;  // use node with the highest IDfUseHighest46,1433
    int           fUseLowest;   // use node with the highest IDfUseLowest47,1497
    int           fUseMaxFF;    // use node with the largest fanin fanoutfUseMaxFF48,1561
    int           fVerbose;fVerbose50,1648
typedef struct Cbs_Que_t_ Cbs_Que_t;Cbs_Que_t53,1680
struct Cbs_Que_t_Cbs_Que_t_54,1717
    int           iHead;        // beginning of the queueiHead56,1737
    int           iTail;        // end of the queueiTail57,1795
    int           nSize;        // allocated sizenSize58,1847
    Gia_Obj_t **  pData;        // nodes stored in the queuepData59,1897
struct Cbs_Man_t_Cbs_Man_t_63,2002
    Cbs_Par_t     Pars;         // parametersPars65,2022
    Gia_Man_t *   pAig;         // AIG managerpAig66,2068
    Cbs_Que_t     pProp;        // propagation queuepProp67,2115
    Cbs_Que_t     pJust;        // justification queuepJust68,2168
    Cbs_Que_t     pClauses;     // clause queuepClauses69,2223
    Gia_Obj_t **  pIter;        // iterator through clause varspIter70,2271
    Vec_Int_t *   vLevReas;     // levels and decisionsvLevReas71,2335
    Vec_Int_t *   vModel;       // satisfying assignmentvModel72,2391
    Vec_Ptr_t *   vTemp;        // temporary storagevTemp73,2448
    int           nSatUnsat;    // the number of proofsnSatUnsat75,2529
    int           nSatSat;      // the number of failurenSatSat76,2585
    int           nSatUndec;    // the number of timeoutsnSatUndec77,2642
    int           nSatTotal;    // the number of callsnSatTotal78,2700
    int           nConfUnsat;   // conflicts in unsat problemsnConfUnsat80,2772
    int           nConfSat;     // conflicts in sat problemsnConfSat81,2835
    int           nConfUndec;   // conflicts in undec problemsnConfUndec82,2896
    abctime       timeSatUnsat; // unsattimeSatUnsat84,2980
    abctime       timeSatSat;   // sattimeSatSat85,3021
    abctime       timeSatUndec; // undecidedtimeSatUndec86,3060
    abctime       timeTotal;    // total runtimetimeTotal87,3105
static inline int   Cbs_VarIsAssigned( Gia_Obj_t * pVar )      { return pVar->fMark0;                        }Cbs_VarIsAssigned90,3158
static inline void  Cbs_VarAssign( Gia_Obj_t * pVar )          { assert(!pVar->fMark0); pVar->fMark0 = 1;    }Cbs_VarAssign91,3269
static inline void  Cbs_VarUnassign( Gia_Obj_t * pVar )        { assert(pVar->fMark0);  pVar->fMark0 = 0; pVar->fMark1 = 0; pVar->Value = ~0; }Cbs_VarUnassign92,3380
static inline int   Cbs_VarValue( Gia_Obj_t * pVar )           { assert(pVar->fMark0);  return pVar->fMark1; }Cbs_VarValue93,3524
static inline void  Cbs_VarSetValue( Gia_Obj_t * pVar, int v ) { assert(pVar->fMark0);  pVar->fMark1 = v;    }Cbs_VarSetValue94,3635
static inline int   Cbs_VarIsJust( Gia_Obj_t * pVar )          { return Gia_ObjIsAnd(pVar) && !Cbs_VarIsAssigned(Gia_ObjFanin0(pVar)) && !Cbs_VarIsAssigned(Gia_ObjFanin1(pVar)); } Cbs_VarIsJust95,3746
static inline int   Cbs_VarFanin0Value( Gia_Obj_t * pVar )     { return !Cbs_VarIsAssigned(Gia_ObjFanin0(pVar)) ? 2 : (Cbs_VarValue(Gia_ObjFanin0(pVar)) ^ Gia_ObjFaninC0(pVar)); }Cbs_VarFanin0Value96,3927
static inline int   Cbs_VarFanin1Value( Gia_Obj_t * pVar )     { return !Cbs_VarIsAssigned(Gia_ObjFanin1(pVar)) ? 2 : (Cbs_VarValue(Gia_ObjFanin1(pVar)) ^ Gia_ObjFaninC1(pVar)); }Cbs_VarFanin1Value97,4107
static inline int         Cbs_VarDecLevel( Cbs_Man_t * p, Gia_Obj_t * pVar )  { assert( pVar->Value != ~0 ); return Vec_IntEntry(p->vLevReas, 3*pVar->Value);          }Cbs_VarDecLevel99,4288
static inline Gia_Obj_t * Cbs_VarReason0( Cbs_Man_t * p, Gia_Obj_t * pVar )   { assert( pVar->Value != ~0 ); return pVar + Vec_IntEntry(p->vLevReas, 3*pVar->Value+1); }Cbs_VarReason0100,4457
static inline Gia_Obj_t * Cbs_VarReason1( Cbs_Man_t * p, Gia_Obj_t * pVar )   { assert( pVar->Value != ~0 ); return pVar + Vec_IntEntry(p->vLevReas, 3*pVar->Value+2); }Cbs_VarReason1101,4626
static inline int         Cbs_ClauseDecLevel( Cbs_Man_t * p, int hClause )    { return Cbs_VarDecLevel( p, p->pClauses.pData[hClause] );                               }Cbs_ClauseDecLevel102,4795
#define Cbs_QueForEachEntry(Cbs_QueForEachEntry104,4965
#define Cbs_ClauseForEachVar(Cbs_ClauseForEachVar107,5117
#define Cbs_ClauseForEachVar1(Cbs_ClauseForEachVar1109,5273
void Cbs_SetDefaultParams( Cbs_Par_t * pPars )Cbs_SetDefaultParams127,5922
void Cbs_ManSetConflictNum( Cbs_Man_t * p, int Num )Cbs_ManSetConflictNum137,6435
Cbs_Man_t * Cbs_ManAlloc( Gia_Man_t * pGia )Cbs_ManAlloc153,6755
void Cbs_ManStop( Cbs_Man_t * p )Cbs_ManStop181,7597
Vec_Int_t * Cbs_ReadModel( Cbs_Man_t * p )Cbs_ReadModel203,8109
static inline int Cbs_ManCheckLimits( Cbs_Man_t * p )Cbs_ManCheckLimits222,8457
static inline void Cbs_ManSaveModel( Cbs_Man_t * p, Vec_Int_t * vCex )Cbs_ManSaveModel238,8895
static inline void Cbs_ManSaveModelAll( Cbs_Man_t * p, Vec_Int_t * vCex )Cbs_ManSaveModelAll249,9313
static inline int Cbs_QueIsEmpty( Cbs_Que_t * p )Cbs_QueIsEmpty270,9843
static inline void Cbs_QuePush( Cbs_Que_t * p, Gia_Obj_t * pObj )Cbs_QuePush286,10165
static inline int Cbs_QueHasNode( Cbs_Que_t * p, Gia_Obj_t * pObj )Cbs_QueHasNode308,10714
static inline void Cbs_QueStore( Cbs_Que_t * p, int * piHeadOld, int * piTailOld )Cbs_QueStore329,11160
static inline void Cbs_QueRestore( Cbs_Que_t * p, int iHeadOld, int iTailOld )Cbs_QueRestore350,11661
static inline int Cbs_QueFinish( Cbs_Que_t * p )Cbs_QueFinish367,12050
static inline int Cbs_VarFaninFanoutMax( Cbs_Man_t * p, Gia_Obj_t * pObj )Cbs_VarFaninFanoutMax388,12506
static inline Gia_Obj_t * Cbs_ManDecideHighest( Cbs_Man_t * p )Cbs_ManDecideHighest409,13112
static inline Gia_Obj_t * Cbs_ManDecideLowest( Cbs_Man_t * p )Cbs_ManDecideLowest430,13641
static inline Gia_Obj_t * Cbs_ManDecideMaxFF( Cbs_Man_t * p )Cbs_ManDecideMaxFF451,14191
static inline void Cbs_ManCancelUntil( Cbs_Man_t * p, int iBound )Cbs_ManCancelUntil482,14870
int s_Counter = 0;s_Counter494,15195
static inline void Cbs_ManAssign( Cbs_Man_t * p, Gia_Obj_t * pObj, int Level, Gia_Obj_t * pRes0, Gia_Obj_t * pRes1 )Cbs_ManAssign507,15519
static inline int Cbs_ManClauseSize( Cbs_Man_t * p, int hClause )Cbs_ManClauseSize537,16513
static inline void Cbs_ManPrintClause( Cbs_Man_t * p, int Level, int hClause )Cbs_ManPrintClause556,17007
static inline void Cbs_ManPrintClauseNew( Cbs_Man_t * p, int Level, int hClause )Cbs_ManPrintClauseNew579,17673
static inline void Cbs_ManDeriveReason( Cbs_Man_t * p, int Level )Cbs_ManDeriveReason602,18348
static inline int Cbs_ManAnalyze( Cbs_Man_t * p, int Level, Gia_Obj_t * pVar, Gia_Obj_t * pFan0, Gia_Obj_t * pFan1 )Cbs_ManAnalyze664,20184
static inline int Cbs_ManResolve( Cbs_Man_t * p, int Level, int hClause0, int hClause1 )Cbs_ManResolve692,21007
static inline int Cbs_ManPropagateOne( Cbs_Man_t * p, Gia_Obj_t * pVar, int Level )Cbs_ManPropagateOne746,22770
static inline int Cbs_ManPropagateTwo( Cbs_Man_t * p, Gia_Obj_t * pVar, int Level )Cbs_ManPropagateTwo803,24951
int Cbs_ManPropagate( Cbs_Man_t * p, int Level )Cbs_ManPropagate836,26149
int Cbs_ManSolve_rec( Cbs_Man_t * p, int Level )Cbs_ManSolve_rec875,27201
int Cbs_ManSolve( Cbs_Man_t * p, Gia_Obj_t * pObj )Cbs_ManSolve947,29984
int Cbs_ManSolve2( Cbs_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pObj2 )Cbs_ManSolve2970,30841
void Cbs_ManSatPrintStats( Cbs_Man_t * p )Cbs_ManSatPrintStats1007,32053
Vec_Int_t * Cbs_ManSolveMiterNc( Gia_Man_t * pAig, int nConfs, Vec_Str_t ** pvStatus, int fVerbose )Cbs_ManSolveMiterNc1037,33378

src/aig/gia/giaFront.c,386
static inline int Gia_ManFrontFindNext( char * pFront, int nFront, int iFront )Gia_ManFrontFindNext45,1264
void Gia_ManFrontTransform( Gia_Man_t * p )Gia_ManFrontTransform65,1807
int Gia_ManCrossCutSimple( Gia_Man_t * p )Gia_ManCrossCutSimple106,2948
Gia_Man_t * Gia_ManFront( Gia_Man_t * p )Gia_ManFront147,3956
void Gia_ManFrontTest( Gia_Man_t * p )Gia_ManFrontTest262,8292

src/aig/gia/giaDfs.c,2304
void Gia_ManCollectCis_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp )Gia_ManCollectCis_rec45,1251
void Gia_ManCollectCis( Gia_Man_t * p, int * pNodes, int nNodes, Vec_Int_t * vSupp )Gia_ManCollectCis71,1952
void Gia_ManCollectAnds_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vNodes )Gia_ManCollectAnds_rec99,2715
void Gia_ManCollectAnds( Gia_Man_t * p, int * pNodes, int nNodes, Vec_Int_t * vNodes, Vec_Int_t * vLeaves )Gia_ManCollectAnds125,3461
Vec_Int_t * Gia_ManCollectAndsAll( Gia_Man_t * p )Gia_ManCollectAndsAll155,4388
void Gia_ManCollectNodesCis_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Gia_ManCollectNodesCis_rec175,4891
Vec_Int_t * Gia_ManCollectNodesCis( Gia_Man_t * p, int * pNodes, int nNodes )Gia_ManCollectNodesCis202,5658
void Gia_ManCollectTest( Gia_Man_t * p )Gia_ManCollectTest232,6465
int Gia_ManSuppSize_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuppSize_rec260,7156
int Gia_ManSuppSizeOne( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuppSizeOne283,7782
int Gia_ManSuppSizeTest( Gia_Man_t * p )Gia_ManSuppSizeTest300,8189
int Gia_ManSuppSize( Gia_Man_t * p, int * pNodes, int nNodes )Gia_ManSuppSize324,8856
int Gia_ManConeSize_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManConeSize_rec352,9594
int Gia_ManConeSize( Gia_Man_t * p, int * pNodes, int nNodes )Gia_ManConeSize375,10213
Vec_Vec_t * Gia_ManLevelize( Gia_Man_t * p )Gia_ManLevelize403,10948
Vec_Wec_t * Gia_ManLevelizeR( Gia_Man_t * p )Gia_ManLevelizeR430,11596
Vec_Int_t * Gia_ManOrderReverse( Gia_Man_t * p )Gia_ManOrderReverse459,12438
void Gia_ManCollectSeq_rec( Gia_Man_t * p, int Id, Vec_Int_t * vRoots, Vec_Int_t * vObjs )Gia_ManCollectSeq_rec497,13652
Vec_Int_t * Gia_ManCollectSeq( Gia_Man_t * p, int * pPos, int nPos )Gia_ManCollectSeq519,14419
void Gia_ManCollectSeqTest( Gia_Man_t * p )Gia_ManCollectSeqTest538,15026
void Gia_ManCollectTfi_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vNodes )Gia_ManCollectTfi_rec567,15701
void Gia_ManCollectTfi( Gia_Man_t * p, Vec_Int_t * vRoots, Vec_Int_t * vNodes )Gia_ManCollectTfi581,16186
void Gia_ManCollectTfo_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vNodes )Gia_ManCollectTfo_rec601,16698
void Gia_ManCollectTfo( Gia_Man_t * p, Vec_Int_t * vRoots, Vec_Int_t * vNodes )Gia_ManCollectTfo615,17161

src/aig/gia/giaConstr.c,0

src/aig/gia/giaGlitch.c,8749
typedef struct Gli_Obj_t_ Gli_Obj_t;Gli_Obj_t30,770
struct Gli_Obj_t_Gli_Obj_t_31,807
    unsigned       fTerm    :  1;    // terminal nodefTerm33,827
    unsigned       fPhase   :  1;    // value under 000 patternfPhase34,881
    unsigned       fPhase2  :  1;    // value under 000 patternfPhase235,945
    unsigned       fMark    :  1;    // user-controlled markfMark36,1009
    unsigned       nFanins  :  3;    // the number of faninsnFanins37,1070
    unsigned       nFanouts : 25;    // total number of fanoutsnFanouts38,1131
    unsigned       Handle;           // ID of the nodeHandle39,1195
    word *         pTruth;           // truth table of the nodepTruth40,1250
    unsigned       uSimInfo;         // simulation info of the nodeuSimInfo41,1314
        int        iFanin;           // the number of fanins addediFanin44,1399
        int        nSwitches;        // the number of switchesnSwitches45,1466
        int        iFanout;          // the number of fanouts addediFanout49,1553
        int        nGlitches;        // the number of glitches ( nGlitches >= nSwitches )nGlitches50,1621
    int            Fanios[0];        // the array of fanins/fanoutsFanios52,1718
typedef struct Gli_Man_t_ Gli_Man_t;Gli_Man_t55,1790
struct Gli_Man_t_Gli_Man_t_56,1827
    Vec_Int_t *    vCis;             // the vector of CIs (PIs + LOs)vCis58,1847
    Vec_Int_t *    vCos;             // the vector of COs (POs + LIs)vCos59,1917
    Vec_Int_t *    vCisChanged;      // the changed CIsvCisChanged60,1987
    Vec_Int_t *    vAffected;        // the affected nodesvAffected61,2043
    Vec_Int_t *    vFrontier;        // the fanouts of these nodesvFrontier62,2102
    int            nObjs;            // the number of objectsnObjs63,2169
    int            nRegs;            // the number of registersnRegs64,2231
    int            nTravIds;         // traversal ID of the networknTravIds65,2295
    int            iObjData;         // pointer to the current dataiObjData66,2363
    int            nObjData;         // the size of array to store the logic networknObjData67,2431
    int *          pObjData;         // the internal nodespObjData68,2516
    unsigned *     pSimInfoPrev;     // previous values of the CIspSimInfoPrev69,2575
static inline int         Gli_ManCiNum( Gli_Man_t * p )            { return Vec_IntSize(p->vCis);                                         }Gli_ManCiNum73,2647
static inline int         Gli_ManCoNum( Gli_Man_t * p )            { return Vec_IntSize(p->vCos);                                         }Gli_ManCoNum74,2787
static inline int         Gli_ManPiNum( Gli_Man_t * p )            { return Vec_IntSize(p->vCis) - p->nRegs;                              }Gli_ManPiNum75,2927
static inline int         Gli_ManPoNum( Gli_Man_t * p )            { return Vec_IntSize(p->vCos) - p->nRegs;                              }Gli_ManPoNum76,3067
static inline int         Gli_ManRegNum( Gli_Man_t * p )           { return p->nRegs;                                                     }Gli_ManRegNum77,3207
static inline int         Gli_ManObjNum( Gli_Man_t * p )           { return p->nObjs;                                                     } Gli_ManObjNum78,3347
static inline int         Gli_ManNodeNum( Gli_Man_t * p )          { return p->nObjs - Vec_IntSize(p->vCis) - Vec_IntSize(p->vCos);       } Gli_ManNodeNum79,3488
static inline Gli_Obj_t * Gli_ManObj( Gli_Man_t * p, int v )       { return (Gli_Obj_t *)(p->pObjData + v);                               } Gli_ManObj81,3630
static inline Gli_Obj_t * Gli_ManCi( Gli_Man_t * p, int v )        { return Gli_ManObj( p, Vec_IntEntry(p->vCis,v) );                     }Gli_ManCi82,3771
static inline Gli_Obj_t * Gli_ManCo( Gli_Man_t * p, int v )        { return Gli_ManObj( p, Vec_IntEntry(p->vCos,v) );                     }Gli_ManCo83,3911
static inline Gli_Obj_t * Gli_ManPi( Gli_Man_t * p, int v )        { assert( v < Gli_ManPiNum(p) );  return Gli_ManCi( p, v );            }Gli_ManPi84,4051
static inline Gli_Obj_t * Gli_ManPo( Gli_Man_t * p, int v )        { assert( v < Gli_ManPoNum(p) );  return Gli_ManCo( p, v );            }Gli_ManPo85,4191
static inline Gli_Obj_t * Gli_ManRo( Gli_Man_t * p, int v )        { assert( v < Gli_ManRegNum(p) ); return Gli_ManCi( p, Gli_ManRegNum(p)+v );      }Gli_ManRo86,4331
static inline Gli_Obj_t * Gli_ManRi( Gli_Man_t * p, int v )        { assert( v < Gli_ManRegNum(p) ); return Gli_ManCo( p, Gli_ManRegNum(p)+v );      }Gli_ManRi87,4482
static inline int         Gli_ObjIsTerm( Gli_Obj_t * pObj )        { return pObj->fTerm;                                                  } Gli_ObjIsTerm89,4634
static inline int         Gli_ObjIsCi( Gli_Obj_t * pObj )          { return pObj->fTerm && pObj->nFanins == 0;                            } Gli_ObjIsCi90,4775
static inline int         Gli_ObjIsCo( Gli_Obj_t * pObj )          { return pObj->fTerm && pObj->nFanins == 1;                            } Gli_ObjIsCo91,4916
static inline int         Gli_ObjIsNode( Gli_Obj_t * pObj )        { return!pObj->fTerm;                                                  } Gli_ObjIsNode92,5057
static inline int         Gli_ObjFaninNum( Gli_Obj_t * pObj )      { return pObj->nFanins;                                                } Gli_ObjFaninNum94,5199
static inline int         Gli_ObjFanoutNum( Gli_Obj_t * pObj )     { return pObj->nFanouts;                                               } Gli_ObjFanoutNum95,5340
static inline int         Gli_ObjSize( Gli_Obj_t * pObj )          { return sizeof(Gli_Obj_t) / 4 + pObj->nFanins + pObj->nFanouts;       } Gli_ObjSize96,5481
static inline Gli_Obj_t * Gli_ObjFanin( Gli_Obj_t * pObj, int i )  { return (Gli_Obj_t *)(((int *)pObj) - pObj->Fanios[i]);               } Gli_ObjFanin98,5623
static inline Gli_Obj_t * Gli_ObjFanout( Gli_Obj_t * pObj, int i ) { return (Gli_Obj_t *)(((int *)pObj) + pObj->Fanios[pObj->nFanins+i]); } Gli_ObjFanout99,5764
#define Gli_ManForEachObj(Gli_ManForEachObj101,5906
#define Gli_ManForEachNode(Gli_ManForEachNode103,6053
#define Gli_ManForEachEntry(Gli_ManForEachEntry106,6236
#define Gli_ManForEachCi(Gli_ManForEachCi108,6389
#define Gli_ManForEachCo(Gli_ManForEachCo110,6548
#define Gli_ManForEachPi(Gli_ManForEachPi113,6708
#define Gli_ManForEachPo(Gli_ManForEachPo115,6858
#define Gli_ManForEachRo(Gli_ManForEachRo117,7008
#define Gli_ManForEachRi(Gli_ManForEachRi119,7175
#define Gli_ManForEachRiRo(Gli_ManForEachRiRo121,7342
#define Gli_ObjForEachFanin(Gli_ObjForEachFanin124,7560
#define Gli_ObjForEachFanout(Gli_ObjForEachFanout126,7701
Gli_Man_t * Gli_ManAlloc( int nObjs, int nRegs, int nFanioPairs )Gli_ManAlloc144,8321
void Gli_ManStop( Gli_Man_t * p )Gli_ManStop170,9120
void Gli_ManPrintObjects( Gli_Man_t * p )Gli_ManPrintObjects192,9623
void Gli_ManFinalize( Gli_Man_t * p )Gli_ManFinalize221,10354
void Gli_ObjAddFanin( Gli_Obj_t * pObj, Gli_Obj_t * pFanin )Gli_ObjAddFanin246,10943
Gli_Obj_t * Gli_ObjAlloc( Gli_Man_t * p, int nFanins, int nFanouts )Gli_ObjAlloc265,11491
int Gli_ManCreateCi( Gli_Man_t * p, int nFanouts )Gli_ManCreateCi288,12041
int Gli_ManCreateCo( Gli_Man_t * p, int iFanin )Gli_ManCreateCo308,12495
static inline int Gli_NodeComputeValue( Gli_Obj_t * pNode )Gli_NodeComputeValue331,13078
static inline int Gli_NodeComputeValue2( Gli_Obj_t * pNode )Gli_NodeComputeValue2350,13579
int Gli_ManCreateNode( Gli_Man_t * p, Vec_Int_t * vFanins, int nFanouts, word * pGateTruth )Gli_ManCreateNode369,14082
int Gli_ObjNumSwitches( Gli_Man_t * p, int iNode )Gli_ObjNumSwitches393,14815
int Gli_ObjNumGlitches( Gli_Man_t * p, int iNode )Gli_ObjNumGlitches409,15194
void Gli_ManSetPiRandom( Gli_Man_t * p, float PiTransProb )Gli_ManSetPiRandom426,15584
void Gli_ManSetPiFromSaved( Gli_Man_t * p, int iBit )Gli_ManSetPiFromSaved455,16397
void Gli_ManSwitching( Gli_Man_t * p )Gli_ManSwitching482,17105
void Gli_ManGlitching( Gli_Man_t * p )Gli_ManGlitching506,17653
void Gli_ManVerify( Gli_Man_t * p )Gli_ManVerify558,19286
unsigned Gli_ManSimulateSeqNode( Gli_Man_t * p, Gli_Obj_t * pNode )Gli_ManSimulateSeqNode580,19764
static inline unsigned Gli_ManUpdateRandomInput( unsigned uInfo, float PiTransProb )Gli_ManUpdateRandomInput612,20627
void Gli_ManSimulateSeqPref( Gli_Man_t * p, int nPref )Gli_ManSimulateSeqPref635,21274
void Gli_ManSetDataSaved( Gli_Man_t * p, int iBit )Gli_ManSetDataSaved675,22661
void Gli_ManSetPiRandomSeq( Gli_Man_t * p, float PiTransProb )Gli_ManSetPiRandomSeq696,23254
void Gli_ManSwitchesAndGlitches( Gli_Man_t * p, int nPatterns, float PiTransProb, int fVerbose )Gli_ManSwitchesAndGlitches740,24546

src/aig/gia/giaCSatOld.c,6008
typedef struct Cbs0_Par_t_ Cbs0_Par_t;Cbs0_Par_t30,778
struct Cbs0_Par_t_Cbs0_Par_t_31,817
    int           nBTLimit;     // limit on the number of conflictsnBTLimit34,861
    int           nJustLimit;   // limit on the size of justification queuenJustLimit35,929
    int           nBTThis;      // number of conflictsnBTThis37,1031
    int           nJustThis;    // max size of the frontiernJustThis38,1086
    int           nBTTotal;     // total number of conflictsnBTTotal39,1146
    int           nJustTotal;   // total size of the frontiernJustTotal40,1207
    int           fUseHighest;  // use node with the highest IDfUseHighest42,1296
    int           fUseLowest;   // use node with the highest IDfUseLowest43,1360
    int           fUseMaxFF;    // use node with the largest fanin fanoutfUseMaxFF44,1424
    int           fVerbose;fVerbose46,1511
typedef struct Cbs0_Que_t_ Cbs0_Que_t;Cbs0_Que_t49,1543
struct Cbs0_Que_t_Cbs0_Que_t_50,1582
    int           iHead;        // beginning of the queueiHead52,1603
    int           iTail;        // end of the queueiTail53,1661
    int           nSize;        // allocated sizenSize54,1713
    Gia_Obj_t **  pData;        // nodes stored in the queuepData55,1763
typedef struct Cbs0_Man_t_ Cbs0_Man_t;Cbs0_Man_t58,1829
struct Cbs0_Man_t_Cbs0_Man_t_59,1868
    Cbs0_Par_t    Pars;         // parametersPars61,1889
    Gia_Man_t *   pAig;         // AIG managerpAig62,1935
    Cbs0_Que_t    pProp;        // propagation queuepProp63,1982
    Cbs0_Que_t    pJust;        // justification queuepJust64,2035
    Vec_Int_t *   vModel;       // satisfying assignmentvModel65,2090
    int           nSatUnsat;    // the number of proofsnSatUnsat67,2175
    int           nSatSat;      // the number of failurenSatSat68,2231
    int           nSatUndec;    // the number of timeoutsnSatUndec69,2288
    int           nSatTotal;    // the number of callsnSatTotal70,2346
    int           nConfUnsat;   // conflicts in unsat problemsnConfUnsat72,2418
    int           nConfSat;     // conflicts in sat problemsnConfSat73,2481
    int           nConfUndec;   // conflicts in undec problemsnConfUndec74,2542
    abctime       timeSatUnsat; // unsattimeSatUnsat76,2626
    abctime       timeSatSat;   // sattimeSatSat77,2667
    abctime       timeSatUndec; // undecidedtimeSatUndec78,2706
    abctime       timeTotal;    // total runtimetimeTotal79,2751
static inline int   Cbs0_VarIsAssigned( Gia_Obj_t * pVar )      { return pVar->fMark0;                        }Cbs0_VarIsAssigned82,2804
static inline void  Cbs0_VarAssign( Gia_Obj_t * pVar )          { assert(!pVar->fMark0); pVar->fMark0 = 1;    }Cbs0_VarAssign83,2916
static inline void  Cbs0_VarUnassign( Gia_Obj_t * pVar )        { assert(pVar->fMark0);  pVar->fMark0 = 0; pVar->fMark1 = 0;         }Cbs0_VarUnassign84,3028
static inline int   Cbs0_VarValue( Gia_Obj_t * pVar )           { assert(pVar->fMark0);  return pVar->fMark1; }Cbs0_VarValue85,3163
static inline void  Cbs0_VarSetValue( Gia_Obj_t * pVar, int v ) { assert(pVar->fMark0);  pVar->fMark1 = v;    }Cbs0_VarSetValue86,3275
static inline int   Cbs0_VarIsJust( Gia_Obj_t * pVar )          { return Gia_ObjIsAnd(pVar) && !Cbs0_VarIsAssigned(Gia_ObjFanin0(pVar)) && !Cbs0_VarIsAssigned(Gia_ObjFanin1(pVar)); } Cbs0_VarIsJust87,3387
static inline int   Cbs0_VarFanin0Value( Gia_Obj_t * pVar )     { return !Cbs0_VarIsAssigned(Gia_ObjFanin0(pVar)) ? 2 : (Cbs0_VarValue(Gia_ObjFanin0(pVar)) ^ Gia_ObjFaninC0(pVar)); }Cbs0_VarFanin0Value88,3571
static inline int   Cbs0_VarFanin1Value( Gia_Obj_t * pVar )     { return !Cbs0_VarIsAssigned(Gia_ObjFanin1(pVar)) ? 2 : (Cbs0_VarValue(Gia_ObjFanin1(pVar)) ^ Gia_ObjFaninC1(pVar)); }Cbs0_VarFanin1Value89,3754
#define Cbs0_QueForEachEntry(Cbs0_QueForEachEntry91,3938
void Cbs0_SetDefaultParams( Cbs0_Par_t * pPars )Cbs0_SetDefaultParams109,4578
Cbs0_Man_t * Cbs0_ManAlloc()Cbs0_ManAlloc131,5329
void Cbs0_ManStop( Cbs0_Man_t * p )Cbs0_ManStop154,5916
Vec_Int_t * Cbs0_ReadModel( Cbs0_Man_t * p )Cbs0_ReadModel173,6334
static inline int Cbs0_ManCheckLimits( Cbs0_Man_t * p )Cbs0_ManCheckLimits192,6684
static inline void Cbs0_ManSaveModel( Cbs0_Man_t * p, Vec_Int_t * vCex )Cbs0_ManSaveModel208,7124
static inline int Cbs0_QueIsEmpty( Cbs0_Que_t * p )Cbs0_QueIsEmpty231,7782
static inline void Cbs0_QuePush( Cbs0_Que_t * p, Gia_Obj_t * pObj )Cbs0_QuePush247,8106
static inline int Cbs0_QueHasNode( Cbs0_Que_t * p, Gia_Obj_t * pObj )Cbs0_QueHasNode268,8618
static inline void Cbs0_QueStore( Cbs0_Que_t * p, int * piHeadOld, int * piTailOld )Cbs0_QueStore289,9067
static inline void Cbs0_QueRestore( Cbs0_Que_t * p, int iHeadOld, int iTailOld )Cbs0_QueRestore310,9571
static inline int Cbs0_VarFaninFanoutMax( Cbs0_Man_t * p, Gia_Obj_t * pObj )Cbs0_VarFaninFanoutMax328,9971
static inline Gia_Obj_t * Cbs0_ManDecideHighest( Cbs0_Man_t * p )Cbs0_ManDecideHighest349,10579
static inline Gia_Obj_t * Cbs0_ManDecideLowest( Cbs0_Man_t * p )Cbs0_ManDecideLowest370,11111
static inline Gia_Obj_t * Cbs0_ManDecideMaxFF( Cbs0_Man_t * p )Cbs0_ManDecideMaxFF391,11664
static inline void Cbs0_ManCancelUntil( Cbs0_Man_t * p, int iBound )Cbs0_ManCancelUntil422,12346
static inline void Cbs0_ManAssign( Cbs0_Man_t * p, Gia_Obj_t * pObj )Cbs0_ManAssign444,12935
static inline int Cbs0_ManPropagateOne( Cbs0_Man_t * p, Gia_Obj_t * pVar )Cbs0_ManPropagateOne465,13550
static inline int Cbs0_ManPropagateTwo( Cbs0_Man_t * p, Gia_Obj_t * pVar )Cbs0_ManPropagateTwo515,15150
int Cbs0_ManPropagate( Cbs0_Man_t * p )Cbs0_ManPropagate548,16204
int Cbs0_ManSolve_rec( Cbs0_Man_t * p )Cbs0_ManSolve_rec586,17178
int Cbs0_ManSolve( Cbs0_Man_t * p, Gia_Obj_t * pObj )Cbs0_ManSolve646,19264
void Cbs0_ManSatPrintStats( Cbs0_Man_t * p )Cbs0_ManSatPrintStats678,20322
Vec_Int_t * Cbs_ManSolveMiter( Gia_Man_t * pAig, int nConfs, Vec_Str_t ** pvStatus, int fVerbose )Cbs_ManSolveMiter708,21649

src/aig/gia/giaUtil.c,8504
#define NUMBER1 NUMBER131,798
#define NUMBER2 NUMBER232,827
unsigned Gia_ManRandom( int fReset )Gia_ManRandom49,1400
word Gia_ManRandomW( int fReset )Gia_ManRandomW62,1719
void Gia_ManRandomInfo( Vec_Ptr_t * vInfo, int iInputStart, int iWordStart, int iWordStop )Gia_ManRandomInfo80,2123
char * Gia_TimeStamp()Gia_TimeStamp101,2690
char * Gia_FileNameGenericAppend( char * pBase, char * pSuffix )Gia_FileNameGenericAppend125,3237
void Gia_ManIncrementTravId( Gia_Man_t * p )                     Gia_ManIncrementTravId149,3831
void Gia_ManCleanMark01( Gia_Man_t * p )  Gia_ManCleanMark01177,4679
void Gia_ManSetMark0( Gia_Man_t * p )  Gia_ManSetMark0196,5105
void Gia_ManCleanMark0( Gia_Man_t * p )  Gia_ManCleanMark0215,5513
void Gia_ManCheckMark0( Gia_Man_t * p )  Gia_ManCheckMark0234,5923
void Gia_ManSetMark1( Gia_Man_t * p )  Gia_ManSetMark1253,6344
void Gia_ManCleanMark1( Gia_Man_t * p )  Gia_ManCleanMark1272,6752
void Gia_ManCheckMark1( Gia_Man_t * p )  Gia_ManCheckMark1291,7162
void Gia_ManCleanValue( Gia_Man_t * p )  Gia_ManCleanValue310,7566
void Gia_ManFillValue( Gia_Man_t * p )  Gia_ManFillValue328,7943
void Gia_ObjSetPhase( Gia_Man_t * p, Gia_Obj_t * pObj )  Gia_ObjSetPhase346,8332
void Gia_ManSetPhase( Gia_Man_t * p )  Gia_ManSetPhase379,9382
void Gia_ManSetPhasePattern( Gia_Man_t * p, Vec_Int_t * vCiValues )  Gia_ManSetPhasePattern386,9531
void Gia_ManSetPhase1( Gia_Man_t * p )  Gia_ManSetPhase1409,10160
void Gia_ManCleanPhase( Gia_Man_t * p )  Gia_ManCleanPhase431,10678
int Gia_ManCheckCoPhase( Gia_Man_t * p )Gia_ManCheckCoPhase450,11097
void Gia_ManCleanLevels( Gia_Man_t * p, int Size )Gia_ManCleanLevels470,11541
void Gia_ManCleanTruth( Gia_Man_t * p )Gia_ManCleanTruth487,11973
int Gia_ManLevelNum( Gia_Man_t * p )  Gia_ManLevelNum505,12405
int Gia_ManLevelRNum( Gia_Man_t * p )  Gia_ManLevelRNum525,13003
float Gia_ManLevelAve( Gia_Man_t * p )  Gia_ManLevelAve547,13797
Vec_Int_t * Gia_ManGetCiLevels( Gia_Man_t * p )  Gia_ManGetCiLevels568,14301
int Gia_ManSetLevels( Gia_Man_t * p, Vec_Int_t * vCiLevels )  Gia_ManSetLevels580,14629
Vec_Int_t * Gia_ManReverseLevel( Gia_Man_t * p )  Gia_ManReverseLevel617,15680
Vec_Int_t * Gia_ManRequiredLevel( Gia_Man_t * p )  Gia_ManRequiredLevel661,17097
Vec_Int_t * Gia_ManComputeSlacks( Gia_Man_t * p )Gia_ManComputeSlacks685,17822
void Gia_ManCreateValueRefs( Gia_Man_t * p )  Gia_ManCreateValueRefs709,18534
void Gia_ManCreateRefs( Gia_Man_t * p )  Gia_ManCreateRefs738,19206
int * Gia_ManCreateMuxRefs( Gia_Man_t * p )  Gia_ManCreateMuxRefs770,20026
Vec_Int_t * Gia_ManBfsForCrossCut( Gia_Man_t * p )Gia_ManBfsForCrossCut798,20799
void Gia_ManDfsForCrossCut_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Gia_ManDfsForCrossCut_rec812,21227
Vec_Int_t * Gia_ManDfsForCrossCut( Gia_Man_t * p, int fReverse )Gia_ManDfsForCrossCut836,22016
int Gia_ManCrossCut( Gia_Man_t * p, int fReverse )Gia_ManCrossCut858,22645
Vec_Int_t * Gia_ManCollectPoIds( Gia_Man_t * p )Gia_ManCollectPoIds902,23788
int Gia_ObjIsMuxType( Gia_Obj_t * pNode )Gia_ObjIsMuxType924,24343
int Gia_ObjRecognizeExor( Gia_Obj_t * pObj, Gia_Obj_t ** ppFan0, Gia_Obj_t ** ppFan1 )Gia_ObjRecognizeExor960,25797
Gia_Obj_t * Gia_ObjRecognizeMux( Gia_Obj_t * pNode, Gia_Obj_t ** ppNodeT, Gia_Obj_t ** ppNodeE )Gia_ObjRecognizeMux998,27190
int Gia_ObjRecognizeMuxLits( Gia_Man_t * p, Gia_Obj_t * pNode, int * iLitT, int * iLitE )Gia_ObjRecognizeMuxLits1075,30484
int Gia_NodeDeref_rec( Gia_Man_t * p, Gia_Obj_t * pNode )Gia_NodeDeref_rec1097,31092
int Gia_NodeRef_rec( Gia_Man_t * p, Gia_Obj_t * pNode, int fMark )Gia_NodeRef_rec1126,31910
int Gia_ManPoMffcSize( Gia_Man_t * p )Gia_ManPoMffcSize1155,32712
int Gia_NodeMffcSize( Gia_Man_t * p, Gia_Obj_t * pNode )Gia_NodeMffcSize1172,33134
int Gia_NodeMffcSizeMark( Gia_Man_t * p, Gia_Obj_t * pNode )Gia_NodeMffcSizeMark1183,33486
void Gia_NodeCollect_rec( Gia_Man_t * p, Gia_Obj_t * pNode, Vec_Int_t * vSupp )Gia_NodeCollect_rec1207,34159
int Gia_NodeMffcSizeSupp( Gia_Man_t * p, Gia_Obj_t * pNode, Vec_Int_t * vSupp )Gia_NodeMffcSizeSupp1221,34631
int Gia_ManHasDangling( Gia_Man_t * p )Gia_ManHasDangling1248,35454
int Gia_ManMarkDangling( Gia_Man_t * p )Gia_ManMarkDangling1286,36434
Vec_Int_t * Gia_ManGetDangling( Gia_Man_t * p )Gia_ManGetDangling1317,37187
void Gia_ObjPrint( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ObjPrint1351,38056
void Gia_ManPrint( Gia_Man_t * p )Gia_ManPrint1438,41496
void Gia_ManPrintCo_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManPrintCo_rec1447,41802
void Gia_ManPrintCo( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManPrintCo1458,42142
void Gia_ManPrintCollect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Gia_ManPrintCollect_rec1466,42379
void Gia_ManPrintCone( Gia_Man_t * p, Gia_Obj_t * pObj, int * pLeaves, int nLeaves, Vec_Int_t * vNodes )Gia_ManPrintCone1477,42849
void Gia_ManPrintConeMulti( Gia_Man_t * p, Vec_Int_t * vObjs, Vec_Int_t * vLeaves, Vec_Int_t * vNodes )Gia_ManPrintConeMulti1488,43271
void Gia_ManPrintCollect2_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Gia_ManPrintCollect2_rec1501,43725
void Gia_ManPrintCone2( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManPrintCone21513,44254
void Gia_ManInvertConstraints( Gia_Man_t * pAig )Gia_ManInvertConstraints1536,44878
void Gia_ManInvertPos( Gia_Man_t * pAig )Gia_ManInvertPos1546,45162
void Gia_ManCollectObjs_rec( Gia_Man_t * p, int iObjId, Vec_Int_t * vObjs, int Limit )Gia_ManCollectObjs_rec1565,45603
unsigned * Gia_ManComputePoTruthTables( Gia_Man_t * p, int nBytesMax )Gia_ManComputePoTruthTables1585,46270
int Gia_ManCompare( Gia_Man_t * p1, Gia_Man_t * p2 )Gia_ManCompare1632,47687
void Gia_ManMarkFanoutDrivers( Gia_Man_t * p )Gia_ManMarkFanoutDrivers1674,48800
void Gia_ManSwapPos( Gia_Man_t * p, int i )Gia_ManSwapPos1703,49456
Vec_Int_t * Gia_ManSaveValue( Gia_Man_t * p )Gia_ManSaveValue1726,50048
void Gia_ManLoadValue( Gia_Man_t * p, Vec_Int_t * vValues )Gia_ManLoadValue1736,50305
Vec_Int_t * Gia_ManFirstFanouts( Gia_Man_t * p )Gia_ManFirstFanouts1756,50783
int Gia_ManHasChoices_very_old( Gia_Man_t * p )Gia_ManHasChoices_very_old1792,51965
Vec_Int_t * Gia_ManGroupProve( Gia_Man_t * pInit, char * pCommLine, int nGroupSize, int fVerbose )Gia_ManGroupProve1884,54688
Vec_Int_t * Gia_ManPoXSim( Gia_Man_t * p, int nFrames, int fVerbose )Gia_ManPoXSim1970,58017
#define MAX_LUT_SIZE MAX_LUT_SIZE2013,59389
typedef struct Gia_MapLut_t_Gia_MapLut_t_2014,59412
    int        Type;          // node type: PI=1, PO=2, LUT=3Type2016,59443
    int        Out;           // IDOut2017,59505
    int        StartId;       // -1StartId2018,59541
    int        nFans;         // fanin countnFans2019,59577
    float      Delay;         // 0.0Delay2020,59622
    int        pFans[MAX_LUT_SIZE];  // fanin IDspFans2021,59659
    unsigned   pTruth[MAX_LUT_SIZE<6?1:(1<<(MAX_LUT_SIZE-5))]; // the truth tablepTruth2022,59709
} Gia_MapLut_t;Gia_MapLut_t2023,59791
void Gia_AigerWriteLut( Gia_Man_t * p, char * pFileName )Gia_AigerWriteLut2036,60042
void Gia_DumpLutSizeDistrib( Gia_Man_t * p, char * pFileName )Gia_DumpLutSizeDistrib2116,62705
void Gia_ManCheckSuppMark_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCheckSuppMark_rec2141,63431
void Gia_ManCheckSuppUnmark_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCheckSuppUnmark_rec2151,63719
int Gia_ManCheckSupp_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCheckSupp_rec2161,64014
int Gia_ManCheckSuppOverlap( Gia_Man_t * p, int iNode1, int iNode2 )Gia_ManCheckSuppOverlap2171,64302
int Gia_ManCountPisWithFanout( Gia_Man_t * p )Gia_ManCountPisWithFanout2194,64905
int Gia_ManCountPosWithNonZeroDrivers( Gia_Man_t * p )Gia_ManCountPosWithNonZeroDrivers2225,65685
void Gia_ManUpdateCopy( Vec_Int_t * vCopy, Gia_Man_t * p )Gia_ManUpdateCopy2245,66143
Gia_Man_t * Gia_ManDupWithMuxPos( Gia_Man_t * p )Gia_ManDupWithMuxPos2272,66816
void Gia_ManRingAdd( Gia_Man_t * p, int iObj, Vec_Int_t * vRes, Vec_Int_t * vDists, int Dist )Gia_ManRingAdd2339,69615
void Gia_ManCollectRing( Gia_Man_t * p, Vec_Int_t * vStart, Vec_Int_t * vRes, Vec_Int_t * vDists )Gia_ManCollectRing2347,69891
Vec_Int_t * Gia_ManComputeDistanceInt( Gia_Man_t * p, int iTarg, Vec_Int_t * vObjs, int fVerbose )Gia_ManComputeDistanceInt2364,70661
Vec_Int_t * Gia_ManComputeDistance( Gia_Man_t * p, int iObj, Vec_Int_t * vObjs, int fVerbose )Gia_ManComputeDistance2401,71788

src/aig/gia/giaEsop.c,2179
typedef struct Eso_Man_t_ Eso_Man_t;Eso_Man_t33,853
struct Eso_Man_t_Eso_Man_t_34,890
    Gia_Man_t *     pGia;     // user's AIGpGia36,910
    int             nVars;    // number of variablesnVars37,954
    int             Cube1;    // ID of const1 cubeCube138,1007
    Vec_Wec_t *     vEsops;   // ESOP for each nodevEsops39,1058
    Hsh_VecMan_t *  pHash;    // hash table for cubespHash40,1110
    Vec_Wec_t *     vCubes;   // cover during minimizationvCubes41,1164
    Vec_Int_t *     vCube1;   // first cubevCube143,1239
    Vec_Int_t *     vCube2;   // second cubevCube244,1283
    Vec_Int_t *     vCube;    // resulting cubevCube45,1328
static inline Vec_Int_t * Eso_ManCube( Eso_Man_t * p, int iCube ) { assert( iCube >= 0 ); return Hsh_VecReadEntry(p->pHash, iCube); }Eso_ManCube48,1380
Eso_Man_t * Eso_ManAlloc( Gia_Man_t * pGia )Eso_ManAlloc65,1993
void Eso_ManStop( Eso_Man_t * p )Eso_ManStop89,2789
void Eso_ManCoverPrint( Eso_Man_t * p, Vec_Int_t * vEsop )Eso_ManCoverPrint112,3299
Vec_Wec_t * Eso_ManCoverDerive( Eso_Man_t * p, Vec_Ptr_t * vCover )Eso_ManCoverDerive146,4334
Gia_Man_t * Eso_ManCoverConvert( Eso_Man_t * p, Vec_Ptr_t * vCover )Eso_ManCoverConvert173,5228
int Eso_ManFindDistOneLitEqual( int * pCube1, int * pCube2, int nLits ) // pCube1 and pCube2 both have nLitsEso_ManFindDistOneLitEqual223,6748
int Eso_ManFindDistOneLitNotEqual( int * pCube1, int * pCube2, int nLits ) // pCube1 has nLits; pCube2 has nLits + 1Eso_ManFindDistOneLitNotEqual237,7170
void Eso_ManMinimizeAdd( Eso_Man_t * p, int Cube )Eso_ManMinimizeAdd252,7580
void Eso_ManMinimizeCopy( Eso_Man_t * p, Vec_Int_t * vEsop )Eso_ManMinimizeCopy352,11111
int Eso_ManComputeAnd( Eso_Man_t * p, Vec_Int_t * vCube1, Vec_Int_t * vCube2, Vec_Int_t * vCube )Eso_ManComputeAnd381,11822
void Eso_ManComputeOne( Eso_Man_t * p, Vec_Int_t * vEsop1, Vec_Int_t * vEsop2, Vec_Int_t * vEsop )Eso_ManComputeOne409,12786
Vec_Int_t * Eso_ManTransformOne( Eso_Man_t * p, Vec_Int_t * vEsop, int fCompl, Vec_Int_t * vRes )Eso_ManTransformOne454,14158
Gia_Man_t * Eso_ManCompute( Gia_Man_t * pGia, int fVerbose, Vec_Wec_t ** pvRes )Eso_ManCompute489,15103

src/aig/gia/giaSweep.c,2146
void Gia_ManMarkSeqGiaWithBoxes_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vRoots )Gia_ManMarkSeqGiaWithBoxes_rec48,1413
void Gia_ManMarkSeqGiaWithBoxes( Gia_Man_t * p, int fSeq )Gia_ManMarkSeqGiaWithBoxes87,2986
Gia_Man_t * Gia_ManDupWithBoxes( Gia_Man_t * p, int fSeq )Gia_ManDupWithBoxes124,4399
int Gia_ManFraigCheckCis( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManFraigCheckCis221,7978
Gia_Obj_t * Gia_ManFraigMarkCis( Gia_Man_t * p, Gia_Obj_t * pObj, int fMark )Gia_ManFraigMarkCis228,8192
Gia_Obj_t * Gia_ManFraigMarkCos( Gia_Man_t * p, Gia_Obj_t * pObj, int fMark )Gia_ManFraigMarkCos235,8427
Gia_Obj_t * Gia_ManFraigMarkAnd( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManFraigMarkAnd245,8745
Gia_Man_t * Gia_ManFraigCreateGia( Gia_Man_t * p )Gia_ManFraigCreateGia255,9095
int Gia_ObjFanin0CopyRepr( Gia_Man_t * p, Gia_Obj_t * pObj, int * pReprs )Gia_ObjFanin0CopyRepr330,11710
int Gia_ObjFanin1CopyRepr( Gia_Man_t * p, Gia_Obj_t * pObj, int * pReprs )Gia_ObjFanin1CopyRepr338,12110
Gia_Man_t * Gia_ManFraigReduceGia( Gia_Man_t * p, int * pReprs )Gia_ManFraigReduceGia346,12510
Vec_Int_t * Gia_ManComputeCarryOuts( Gia_Man_t * p )Gia_ManComputeCarryOuts385,13759
void Gia_ManCheckIntegrityWithBoxes( Gia_Man_t * p )Gia_ManCheckIntegrityWithBoxes418,14807
int * Gia_ManFraigSelectReprs( Gia_Man_t * p, Gia_Man_t * pClp, int fVerbose, int pFlopTypes[3] )Gia_ManFraigSelectReprs455,15983
void Gia_ManFraigSweepPerform( Gia_Man_t * p, void * pPars )Gia_ManFraigSweepPerform562,19665
Gia_Man_t * Gia_ManFraigSweepSimple( Gia_Man_t * p, void * pPars )Gia_ManFraigSweepSimple583,20200
void Gia_ManSweepComputeOneDomainEquivs( Gia_Man_t * p, Vec_Int_t * vRegClasses, int iDom, void * pParsS, int fConst, int fEquiv, int fVerbose )Gia_ManSweepComputeOneDomainEquivs606,20830
Gia_Man_t * Gia_ManSweepWithBoxesAndDomains( Gia_Man_t * p, void * pParsS, int fConst, int fEquiv, int fVerbose, int fVerbEquivs )Gia_ManSweepWithBoxesAndDomains648,22379
Gia_Man_t * Gia_ManSweepWithBoxes( Gia_Man_t * p, void * pParsC, void * pParsS, int fConst, int fEquiv, int fVerbose, int fVerbEquivs )Gia_ManSweepWithBoxes716,24943

src/aig/gia/giaFanout.c,1670
static inline int   Gia_FanoutCreate( int FanId, int Num )    { assert( Num < 2 ); return (FanId << 1) | Num;   } Gia_FanoutCreate36,838
static inline int * Gia_FanoutObj( int * pData, int ObjId )   { return pData + 5*ObjId;                         }Gia_FanoutObj37,953
static inline int * Gia_FanoutPrev( int * pData, int iFan )   { return pData + 5*(iFan >> 1) + 1 + (iFan & 1);  }Gia_FanoutPrev38,1067
static inline int * Gia_FanoutNext( int * pData, int iFan )   { return pData + 5*(iFan >> 1) + 3 + (iFan & 1);  }Gia_FanoutNext39,1181
static inline int     Gia_ObjFanout0Int( Gia_Man_t * p, int ObjId )  { assert(ObjId < p->nFansAlloc);  return p->pFanData[5*ObjId];                         }Gia_ObjFanout0Int42,1366
static inline int     Gia_ObjFanoutNext( Gia_Man_t * p, int iFan )   { assert(iFan/2 < p->nFansAlloc); return p->pFanData[5*(iFan >> 1) + 3 + (iFan & 1)];  }Gia_ObjFanoutNext43,1524
#define Gia_ObjForEachFanout(Gia_ObjForEachFanout46,1712
void Gia_ManFanoutStart( Gia_Man_t * p )Gia_ManFanoutStart66,2539
void Gia_ManFanoutStop( Gia_Man_t * p )Gia_ManFanoutStop98,3475
void Gia_ObjAddFanout( Gia_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pFanout )Gia_ObjAddFanout116,3878
void Gia_ObjRemoveFanout( Gia_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pFanout )Gia_ObjRemoveFanout163,5555
Vec_Int_t * Gia_ManStartFanoutMap( Gia_Man_t * p, Vec_Int_t * vFanoutNums )Gia_ManStartFanoutMap211,6975
void Gia_ManStaticFanoutStart( Gia_Man_t * p )Gia_ManStaticFanoutStart238,7770
void Gia_ManStaticFanoutStop( Gia_Man_t * p )Gia_ManStaticFanoutStop297,9783
void Gia_ManStaticFanoutTest( Gia_Man_t * p )Gia_ManStaticFanoutTest315,10159

src/aig/gia/giaIiff.c,380
int Gia_ManDeriveMatches( Vec_Ptr_t ** pvNames, Vec_Wrd_t ** pvTruths, Vec_Int_t ** pvTt2Match4, Vec_Int_t ** pvConfigs, Vec_Mem_t * pvTtMem2[3], Vec_Int_t * pvTt2Match2[3] )Gia_ManDeriveMatches47,1268
Gia_Man_t * Gia_ManIiffTest( char * pFileName, Gia_Man_t * pGia, int nLutSize, int nNumCuts, int fUseGates, int fUseCells, int fUseLuts, int fVerbose )Gia_ManIiffTest51,1461

src/aig/gia/giaMuxes.c,4204
void Gia_ManCountMuxXor( Gia_Man_t * p, int * pnMuxes, int * pnXors )Gia_ManCountMuxXor49,1380
void Gia_ManPrintMuxStats( Gia_Man_t * p )Gia_ManPrintMuxStats63,1760
Gia_Man_t * Gia_ManDupMuxes( Gia_Man_t * p, int Limit )Gia_ManDupMuxes98,2894
Gia_Man_t * Gia_ManDupNoMuxes( Gia_Man_t * p, int fSkipBufs )Gia_ManDupNoMuxes161,5745
Gia_Man_t * Gia_ManDupMuxesTest( Gia_Man_t * p )Gia_ManDupMuxesTest207,7411
Gia_Man_t * Gia_ManMuxRestructure( Gia_Man_t * p )Gia_ManMuxRestructure232,8011
Gia_Man_t * Gia_ManDupMuxRestructure( Gia_Man_t * p )Gia_ManDupMuxRestructure287,10650
int Gia_MuxRef_rec( Gia_Man_t * p, int iObj )Gia_MuxRef_rec306,11197
int Gia_MuxRef( Gia_Man_t * p, int iObj )Gia_MuxRef318,11594
int Gia_MuxDeref_rec( Gia_Man_t * p, int iObj )Gia_MuxDeref_rec326,11910
int Gia_MuxDeref( Gia_Man_t * p, int iObj )Gia_MuxDeref338,12315
int Gia_MuxMffcSize( Gia_Man_t * p, int iObj )Gia_MuxMffcSize346,12639
void Gia_MuxStructPrint_rec( Gia_Man_t * p, int iObj, int fFirst )Gia_MuxStructPrint_rec368,13128
void Gia_MuxStructPrint( Gia_Man_t * p, int iObj )Gia_MuxStructPrint403,14182
void Gia_MuxStructDump_rec( Gia_Man_t * p, int iObj, int fFirst, Vec_Str_t * vStr, int nDigitsId )Gia_MuxStructDump_rec425,14703
int Gia_MuxStructDump( Gia_Man_t * p, int iObj, Vec_Str_t * vStr, int nDigitsNum, int nDigitsId )Gia_MuxStructDump454,15826
int Gia_ManMuxCompare( char ** pp1, char ** pp2 )Gia_ManMuxCompare479,16519
int Gia_ManMuxCountOne( char * p )Gia_ManMuxCountOne488,16702
typedef struct Mux_Man_t_ Mux_Man_t; Mux_Man_t496,16831
struct Mux_Man_t_Mux_Man_t_497,16869
    Gia_Man_t *     pGia;      // managerpGia499,16889
    Abc_Nam_t *     pNames;    // hashing name into IDpNames500,16931
    Vec_Wec_t *     vTops;     // top nodes for each structvTops501,16986
Mux_Man_t * Mux_ManAlloc( Gia_Man_t * pGia )Mux_ManAlloc515,17284
void Mux_ManFree( Mux_Man_t * p )Mux_ManFree525,17539
int Gia_ManMuxProfile( Mux_Man_t * p, int fWidth )Gia_ManMuxProfile543,17890
void Gia_ManMuxProfiling( Gia_Man_t * p )Gia_ManMuxProfiling589,19205
#define GIA_FOREACH_ITEM(GIA_FOREACH_ITEM686,22556
#define GENERATE_ENUM(GENERATE_ENUM713,23040
typedef enum { GIA_FOREACH_ITEM(GENERATE_ENUM) } Gia_ObjType_t;GIA_FOREACH_ITEM714,23074
typedef enum { GIA_FOREACH_ITEM(GENERATE_ENUM) } Gia_ObjType_t;Gia_ObjType_t714,23074
#define GENERATE_STRING(GENERATE_STRING716,23139
static const char * GIA_TYPE_STRINGS[] = { GIA_FOREACH_ITEM(GENERATE_STRING) };GIA_TYPE_STRINGS717,23180
void Gia_ManProfileStructuresTest( Gia_Man_t * p )Gia_ManProfileStructuresTest719,23261
int Gia_ManEncodeObj( Gia_Man_t * p, int i )Gia_ManEncodeObj729,23441
int Gia_ManEncodeFanin( Gia_Man_t * p, int iLit )Gia_ManEncodeFanin749,23944
Gia_ObjType_t Gia_ManEncodeFanout( Gia_Man_t * p, Gia_Obj_t * pObj, int i )Gia_ManEncodeFanout770,24480
void Gia_ManProfileCollect( Gia_Man_t * p, int i, Vec_Int_t * vCode, Vec_Int_t * vCodeOffsets, Vec_Int_t * vArray )Gia_ManProfileCollect790,25019
void Gia_ManProfilePrintOne( Gia_Man_t * p, int i, Vec_Int_t * vArray )Gia_ManProfilePrintOne798,25322
Vec_Int_t * Gia_ManProfileHash( Gia_Man_t * p, Vec_Int_t * vCode, Vec_Int_t * vCodeOffsets )Gia_ManProfileHash833,26454
void Gia_ManProfileStructuresInt( Gia_Man_t * p, int nLimit, int fVerbose )Gia_ManProfileStructuresInt857,27169
void Gia_ManProfileStructures( Gia_Man_t * p, int nLimit, int fVerbose )Gia_ManProfileStructures972,31515
void Gia_ManMarkTfi_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManMarkTfi_rec995,32095
Vec_Int_t * Gia_ManFindSharedInputs( Gia_Man_t * p )Gia_ManFindSharedInputs1005,32402
Vec_Wec_t * Gia_ManFindCofs( Gia_Man_t * p, Vec_Int_t * vRes, Gia_Man_t ** ppNew )Gia_ManFindCofs1027,33185
Vec_Int_t * Gia_ManFindEquivClasses( Vec_Wec_t * vCofs )Gia_ManFindEquivClasses1058,34465
int Gia_ManFindMuxTree_rec( Gia_Man_t * pNew, int * pCtrl, int nCtrl, Vec_Int_t * vData, int Shift )Gia_ManFindMuxTree_rec1079,35213
void Gia_ManFindDerive( Gia_Man_t * pNew, int nOuts, Vec_Int_t * vIns, Vec_Wec_t * vCofs, Vec_Int_t * vMap )Gia_ManFindDerive1088,35629
Gia_Man_t * Gia_ManCofStructure( Gia_Man_t * p )Gia_ManCofStructure1143,38044

src/aig/gia/giaCone.c,1930
typedef struct Opa_Man_t_ Opa_Man_t;Opa_Man_t33,836
struct Opa_Man_t_Opa_Man_t_34,873
    Gia_Man_t *    pGia;pGia36,893
    Vec_Int_t *    vFront;vFront37,918
    Vec_Int_t *    pvParts;pvParts38,945
    int *          pId2Part; pId2Part39,973
    int            nParts;nParts40,1003
static inline Opa_Man_t * Opa_ManStart( Gia_Man_t * pGia)Opa_ManStart58,1492
static inline void Opa_ManStop( Opa_Man_t * p )Opa_ManStop77,2089
static inline void Opa_ManPrint( Opa_Man_t * p )Opa_ManPrint87,2350
static inline void Opa_ManPrint2( Opa_Man_t * p )Opa_ManPrint2101,2729
void Opa_ManMoveOne( Opa_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pFanin )Opa_ManMoveOne130,3445
void Opa_ManPerform( Gia_Man_t * pGia )Opa_ManPerform171,5062
int Gia_ManConeMark_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vRoots, int nLimit )Gia_ManConeMark_rec222,6359
int Gia_ManConeMark( Gia_Man_t * p, int iOut, int Limit )Gia_ManConeMark246,7158
int Gia_ManCountFlops( Gia_Man_t * p, Vec_Int_t * vOuts )Gia_ManCountFlops277,7990
Gia_Man_t * Gia_ManFindPoPartition3( Gia_Man_t * p, int iOut, int nDelta, int nOutsMin, int nOutsMax, int fVerbose, Vec_Ptr_t ** pvPosEquivs )Gia_ManFindPoPartition3312,8937
Vec_Int_t * Gia_ManFindPivots( Gia_Man_t * p, int SelectShift, int fOnlyCis, int fVerbose )Gia_ManFindPivots341,9709
Vec_Wrd_t * Gia_ManDeriveSigns( Gia_Man_t * p, Vec_Int_t * vPivots, int fVerbose )Gia_ManDeriveSigns427,12361
Vec_Ptr_t * Gia_ManHashOutputs( Gia_Man_t * p, Vec_Wrd_t * vSigns, int fVerbose )Gia_ManHashOutputs482,14113
Gia_Man_t * Gia_ManFindPoPartition2( Gia_Man_t * p, int iStartNum, int nDelta, int nOutsMin, int nOutsMax, int fSetLargest, int fVerbose, Vec_Ptr_t ** pvPosEquivs )Gia_ManFindPoPartition2538,15925
Gia_Man_t * Gia_ManFindPoPartition( Gia_Man_t * p, int SelectShift, int fOnlyCis, int fSetLargest, int fVerbose, Vec_Ptr_t ** pvPosEquivs )Gia_ManFindPoPartition555,16347

src/aig/gia/giaEnable.c,1087
void Gia_CollectSuper_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Gia_CollectSuper_rec45,1266
void Gia_CollectSuper( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Gia_CollectSuper70,2015
void Gia_ManPrintSignals( Gia_Man_t * p, int * pFreq, char * pStr )Gia_ManPrintSignals96,2711
void Gia_ManDetectSeqSignals( Gia_Man_t * p, int fSetReset, int fVerbose )Gia_ManDetectSeqSignals130,3650
Vec_Int_t * Gia_ManDetectSeqSignalsWithFanout( Gia_Man_t * p, int nFanMax, int fVerbose )Gia_ManDetectSeqSignalsWithFanout224,6576
Vec_Int_t * Gia_ManTransferFrames( Gia_Man_t * pAig, Gia_Man_t * pFrames, int nFrames, Gia_Man_t * pNew, Vec_Int_t * vSigs )Gia_ManTransferFrames330,10001
Gia_Man_t * Gia_ManUnrollInit( Gia_Man_t * p, int nFrames )Gia_ManUnrollInit360,10867
Gia_Man_t * Gia_ManUnrollAndCofactor( Gia_Man_t * p, int nFrames, int nFanMax, int fVerbose )Gia_ManUnrollAndCofactor403,12436
Gia_Man_t * Gia_ManRemoveEnables2( Gia_Man_t * p )Gia_ManRemoveEnables2436,13494
Gia_Man_t * Gia_ManRemoveEnables( Gia_Man_t * p )Gia_ManRemoveEnables514,16248

src/aig/gia/giaCex.c,1454
int Gia_ManVerifyCex( Gia_Man_t * pAig, Abc_Cex_t * p, int fDualOut )Gia_ManVerifyCex48,1361
int Gia_ManFindFailedPoCex( Gia_Man_t * pAig, Abc_Cex_t * p, int nOutputs )Gia_ManFindFailedPoCex91,2807
int Gia_ManSetFailedPoCex( Gia_Man_t * pAig, Abc_Cex_t * p )Gia_ManSetFailedPoCex139,4409
void Gia_ManCounterExampleValueStart( Gia_Man_t * pGia, Abc_Cex_t * pCex )Gia_ManCounterExampleValueStart188,6043
void Gia_ManCounterExampleValueStop( Gia_Man_t * pGia )Gia_ManCounterExampleValueStop246,8948
int Gia_ManCounterExampleValueLookup(  Gia_Man_t * pGia, int Id, int iFrame )Gia_ManCounterExampleValueLookup266,9655
void Gia_ManCounterExampleValueTest( Gia_Man_t * pGia, Abc_Cex_t * pCex )Gia_ManCounterExampleValueTest283,10146
Abc_Cex_t * Gia_ManCexExtendToIncludeCurrentStates( Gia_Man_t * p, Abc_Cex_t * pCex )Gia_ManCexExtendToIncludeCurrentStates306,11001
Abc_Cex_t * Gia_ManCexExtendToIncludeAllObjects( Gia_Man_t * p, Abc_Cex_t * pCex )Gia_ManCexExtendToIncludeAllObjects353,12690
Gia_Man_t * Gia_ManFramesForCexMin( Gia_Man_t * p, int nFrames )Gia_ManFramesForCexMin401,14318
void Gia_ManMinCex( Gia_Man_t * p, Abc_Cex_t * pCex )Gia_ManMinCex442,15738
Abc_Cex_t * Bmc_CexCareDeriveCex( Abc_Cex_t * pCex, int iFirstVar, int * pLits, int nLits )Bmc_CexCareDeriveCex503,18012
Abc_Cex_t * Bmc_CexCareSatBasedMinimizeAig( Gia_Man_t * p, Abc_Cex_t * pCex, int fHighEffort, int fVerbose )Bmc_CexCareSatBasedMinimizeAig517,18536

src/aig/gia/giaIiff.h,65
#define ABC__aig__gia__giaIiff_hABC__aig__gia__giaIiff_h22,539

src/aig/gia/giaSim4.c,204
int Gia_Sim4Try( char * pFileName0, char * pFileName1, char * pFileName2, int nWords, int nBeam, int LevL, int LevU, int fOrder, int fFancy, int fUseBuf, int fSkipMffc, int fVerbose )Gia_Sim4Try44,1204

src/aig/gia/giaExist.c,3076
static inline word * Gia_ManQuantInfoId( Gia_Man_t * p, int iObj )       { return Vec_WrdEntryP( p->vSuppWords, p->nSuppWords * iObj ); }Gia_ManQuantInfoId46,1307
static inline word * Gia_ManQuantInfo( Gia_Man_t * p, Gia_Obj_t * pObj ) { return Gia_ManQuantInfoId( p, Gia_ObjId(p, pObj) );      }Gia_ManQuantInfo47,1445
static inline void   Gia_ObjCopyGetTwoArray( Gia_Man_t * p, int iObj, int LitsOut[2] )      Gia_ObjCopyGetTwoArray49,1580
static inline void   Gia_ObjCopySetTwoArray( Gia_Man_t * p, int iObj, int LitsIn[2] )      Gia_ObjCopySetTwoArray55,1791
int Gia_ManQuantVerify_rec( Gia_Man_t * p, int iObj, int CiId )Gia_ManQuantVerify_rec74,2278
void Gia_ManQuantVerify( Gia_Man_t * p, int iObj )Gia_ManQuantVerify86,2733
void Gia_ManQuantSetSuppStart( Gia_Man_t * p )Gia_ManQuantSetSuppStart100,3188
void Gia_ManQuantSetSuppZero( Gia_Man_t * p )Gia_ManQuantSetSuppZero110,3485
void Gia_ManQuantSetSuppCi( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManQuantSetSuppCi117,3707
void Gia_ManQuantSetSuppAnd( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManQuantSetSuppAnd144,4703
int Gia_ManQuantCheckSupp( Gia_Man_t * p, int iObj, int iSupp )Gia_ManQuantCheckSupp153,5082
void Gia_ManQuantUpdateCiSupp( Gia_Man_t * p, int iObj )Gia_ManQuantUpdateCiSupp157,5213
int Gia_ManQuantCheckOverlap( Gia_Man_t * p, int iObj )Gia_ManQuantCheckOverlap163,5480
void Gia_ManQuantMarkUsedCis( Gia_Man_t * p, int(*pFuncCiToKeep)(void *, int), void * pData )Gia_ManQuantMarkUsedCis167,5643
int Gia_ManQuantCountUsed_rec( Gia_Man_t * p, int iObj )Gia_ManQuantCountUsed_rec178,6045
int Gia_ManQuantCountUsed( Gia_Man_t * p, int iObj )Gia_ManQuantCountUsed193,6659
void Gia_ManQuantDupConeSupp_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vCis, Vec_Int_t * vObjs, int(*pFuncCiToKeep)(void *, int), void * pData )Gia_ManQuantDupConeSupp_rec199,6799
Gia_Man_t * Gia_ManQuantDupConeSupp( Gia_Man_t * p, int iLit, int(*pFuncCiToKeep)(void *, int), void * pData, Vec_Int_t ** pvCis, int * pOutLit )Gia_ManQuantDupConeSupp230,8201
void Gia_ManQuantExist_rec( Gia_Man_t * p, int iObj, int pRes[2] )Gia_ManQuantExist_rec258,9514
int Gia_ManQuantExist2( Gia_Man_t * p0, int iLit, int(*pFuncCiToKeep)(void *, int), void * pData )Gia_ManQuantExist2291,10789
void Gia_ManQuantCollect_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vQuantCis, Vec_Int_t * vQuantSide, Vec_Int_t * vQuantAnds )Gia_ManQuantCollect_rec382,14199
void Gia_ManQuantCollect( Gia_Man_t * p, int iObj, int(*pFuncCiToKeep)(void *, int), void * pData, Vec_Int_t * vQuantCis, Vec_Int_t * vQuantSide, Vec_Int_t * vQuantAnds )Gia_ManQuantCollect403,14937
Gia_Man_t * Gia_ManQuantExist2Dup( Gia_Man_t * p, int iLit, Vec_Int_t * vCis, Vec_Int_t * vSide, Vec_Int_t * vAnds, int * pOutLit )Gia_ManQuantExist2Dup412,15466
int Gia_ManQuantExistInt( Gia_Man_t * p0, int iLit, Vec_Int_t * vCis, Vec_Int_t * vSide, Vec_Int_t * vAnds )Gia_ManQuantExistInt452,17225
int Gia_ManQuantExist( Gia_Man_t * p0, int iLit, int(*pFuncCiToKeep)(void *, int), void * pData )Gia_ManQuantExist505,19546

src/aig/gia/giaEra2.c,14390
#define MAX_CALL_NUM MAX_CALL_NUM38,1037
#define MAX_ITEM_NUM MAX_ITEM_NUM39,1109
#define MAX_PAGE_NUM MAX_PAGE_NUM40,1177
#define MAX_VARS_NUM MAX_VARS_NUM41,1246
#define MAX_CUBE_NUM MAX_CUBE_NUM42,1321
typedef struct Gia_PtrAre_t_ Gia_PtrAre_t;Gia_PtrAre_t45,1445
struct Gia_PtrAre_t_Gia_PtrAre_t_46,1488
    unsigned       nItem    : 20;  // item number (related to MAX_ITEM_NUM)nItem48,1511
    unsigned       nPage    : 11;  // page number (related to MAX_PAGE_NUM)nPage49,1587
    unsigned       fMark    :  1;  // user markfMark50,1663
typedef union Gia_PtrAreInt_t_ Gia_PtrAreInt_t;Gia_PtrAreInt_t53,1715
union Gia_PtrAreInt_t_Gia_PtrAreInt_t_54,1763
    Gia_PtrAre_t   iGia;iGia56,1788
    unsigned       iInt;iInt57,1813
typedef struct Gia_ObjAre_t_ Gia_ObjAre_t;Gia_ObjAre_t61,1856
struct Gia_ObjAre_t_Gia_ObjAre_t_62,1899
    unsigned       iVar     : 14;  // variable     (related to MAX_VARS_NUM)iVar64,1922
    unsigned       nStas0   :  6;  // cube counter (related to MAX_CUBE_NUM)nStas065,1999
    unsigned       nStas1   :  6;  // cube counter (related to MAX_CUBE_NUM)nStas166,2076
    unsigned       nStas2   :  6;  // cube counter (related to MAX_CUBE_NUM)nStas267,2153
    Gia_PtrAre_t   F[3];           // branchesF68,2230
typedef struct Gia_StaAre_t_ Gia_StaAre_t;Gia_StaAre_t72,2295
struct Gia_StaAre_t_Gia_StaAre_t_73,2338
    Gia_PtrAre_t   iPrev;          // previous stateiPrev75,2361
    Gia_PtrAre_t   iNext;          // next cube in the listiNext76,2414
    unsigned       pData[0];       // state bitspData77,2474
typedef struct Gia_ManAre_t_ Gia_ManAre_t;Gia_ManAre_t81,2566
struct Gia_ManAre_t_Gia_ManAre_t_82,2609
    Gia_Man_t *    pAig;           // user's AIG managerpAig84,2632
    Gia_Man_t *    pNew;           // temporary AIG managerpNew85,2689
    unsigned **    ppObjs;         // storage for objects (MAX_PAGE_NUM pages)ppObjs86,2749
    unsigned **    ppStas;         // storage for states  (MAX_PAGE_NUM pages)ppStas87,2828
    int            fMiter;         // stops when a bug is discoveredfMiter91,3062
    int            fStopped;       // set high when reachability is stoppedfStopped92,3131
    int            fTree;          // working in the tree modefTree93,3207
    int            nWords;         // the size of bit info in wordsnWords95,3297
    int            nSize;          // the size of state structure in wordsnSize96,3365
    int            nObjPages;      // the number of pages used for objectsnObjPages97,3440
    int            nStaPages;      // the number of pages used for statesnStaPages98,3515
    int            nObjs;          // the number of objects nObjs99,3589
    int            nStas;          // the number of states  nStas100,3650
    int            iStaCur;        // the next state to be explorediStaCur101,3711
    Gia_PtrAre_t   Root;           // root of the treeRoot102,3779
    Vec_Vec_t *    vCiTfos;        // storage for nodes in the CI TFOsvCiTfos103,3834
    Vec_Vec_t *    vCiLits;        // storage for literals of these nodesvCiLits104,3905
    Vec_Int_t *    vCubesA;        // checked cubesvCubesA105,3979
    Vec_Int_t *    vCubesB;        // unchecked cubesvCubesB106,4031
    void *         pSat;           // SAT solverpSat108,4117
    Vec_Int_t *    vSatNumCis;     // SAT variables for CIsvSatNumCis109,4166
    Vec_Int_t *    vSatNumCos;     // SAT variables for COs vSatNumCos110,4226
    Vec_Int_t *    vCofVars;       // variables used to cofactorvCofVars111,4287
    Vec_Int_t *    vAssumps;       // temporary storage for assumptionsvAssumps112,4352
    Gia_StaAre_t * pTarget;        // state that needs to be reachedpTarget113,4424
    int            iOutFail;       // the number of the failed outputiOutFail114,4493
    int            nChecks;        // the number of timea cube was checkednChecks116,4581
    int            nEquals;        // total number of equalnEquals117,4656
    int            nCompares;      // the number of comparesnCompares118,4716
    int            nRecCalls;      // the number of rec callsnRecCalls119,4777
    int            nDisjs;         // the number of disjoint cube pairsnDisjs120,4839
    int            nDisjs2;        // the number of disjoint cube pairsnDisjs2121,4911
    int            nDisjs3;        // the number of disjoint cube pairsnDisjs3122,4983
    int            timeAig;        // AIG cofactoring timetimeAig124,5067
    int            timeCube;       // cube checking time timeCube125,5126
static inline Gia_PtrAre_t    Gia_Int2Ptr( unsigned n )                               { Gia_PtrAreInt_t g; g.iInt = n; return g.iGia;            }Gia_Int2Ptr128,5189
static inline unsigned        Gia_Ptr2Int( Gia_PtrAre_t n )                           { Gia_PtrAreInt_t g; g.iGia = n; return g.iInt & 0x7fffffff; }Gia_Ptr2Int129,5336
static inline int             Gia_ObjHasBranch0( Gia_ObjAre_t * q )                   { return !q->nStas0 && (q->F[0].nPage || q->F[0].nItem);   }Gia_ObjHasBranch0131,5486
static inline int             Gia_ObjHasBranch1( Gia_ObjAre_t * q )                   { return !q->nStas1 && (q->F[1].nPage || q->F[1].nItem);   }Gia_ObjHasBranch1132,5633
static inline int             Gia_ObjHasBranch2( Gia_ObjAre_t * q )                   { return !q->nStas2 && (q->F[2].nPage || q->F[2].nItem);   }Gia_ObjHasBranch2133,5780
static inline Gia_ObjAre_t *  Gia_ManAreObj( Gia_ManAre_t * p, Gia_PtrAre_t n )       { return (Gia_ObjAre_t *)(p->ppObjs[n.nPage] + (n.nItem << 2));      }Gia_ManAreObj135,5928
static inline Gia_StaAre_t *  Gia_ManAreSta( Gia_ManAre_t * p, Gia_PtrAre_t n )       { return (Gia_StaAre_t *)(p->ppStas[n.nPage] +  n.nItem * p->nSize); }Gia_ManAreSta136,6085
static inline Gia_ObjAre_t *  Gia_ManAreObjInt( Gia_ManAre_t * p, int n )             { return Gia_ManAreObj( p, Gia_Int2Ptr(n) );               }Gia_ManAreObjInt137,6242
static inline Gia_StaAre_t *  Gia_ManAreStaInt( Gia_ManAre_t * p, int n )             { return Gia_ManAreSta( p, Gia_Int2Ptr(n) );               }Gia_ManAreStaInt138,6389
static inline Gia_ObjAre_t *  Gia_ManAreObjLast( Gia_ManAre_t * p )                   { return Gia_ManAreObjInt( p, p->nObjs-1 );                }Gia_ManAreObjLast139,6536
static inline Gia_StaAre_t *  Gia_ManAreStaLast( Gia_ManAre_t * p )                   { return Gia_ManAreStaInt( p, p->nStas-1 );                }Gia_ManAreStaLast140,6683
static inline Gia_ObjAre_t *  Gia_ObjNextObj0( Gia_ManAre_t * p, Gia_ObjAre_t * q )   { return Gia_ManAreObj( p, q->F[0] );                      }Gia_ObjNextObj0142,6831
static inline Gia_ObjAre_t *  Gia_ObjNextObj1( Gia_ManAre_t * p, Gia_ObjAre_t * q )   { return Gia_ManAreObj( p, q->F[1] );                      }Gia_ObjNextObj1143,6978
static inline Gia_ObjAre_t *  Gia_ObjNextObj2( Gia_ManAre_t * p, Gia_ObjAre_t * q )   { return Gia_ManAreObj( p, q->F[2] );                      }Gia_ObjNextObj2144,7125
static inline int             Gia_StaHasValue0( Gia_StaAre_t * p, int iReg )          { return Abc_InfoHasBit( p->pData,  iReg << 1 );           }Gia_StaHasValue0146,7273
static inline int             Gia_StaHasValue1( Gia_StaAre_t * p, int iReg )          { return Abc_InfoHasBit( p->pData, (iReg << 1) + 1 );      }Gia_StaHasValue1147,7420
static inline void            Gia_StaSetValue0( Gia_StaAre_t * p, int iReg )          { Abc_InfoSetBit( p->pData,  iReg << 1 );                  }Gia_StaSetValue0149,7568
static inline void            Gia_StaSetValue1( Gia_StaAre_t * p, int iReg )          { Abc_InfoSetBit( p->pData, (iReg << 1) + 1 );             }Gia_StaSetValue1150,7715
static inline Gia_StaAre_t *  Gia_StaPrev( Gia_ManAre_t * p, Gia_StaAre_t * pS )      { return Gia_ManAreSta(p, pS->iPrev);                      }Gia_StaPrev152,7863
static inline Gia_StaAre_t *  Gia_StaNext( Gia_ManAre_t * p, Gia_StaAre_t * pS )      { return Gia_ManAreSta(p, pS->iNext);                      }Gia_StaNext153,8010
static inline int             Gia_StaIsGood( Gia_ManAre_t * p, Gia_StaAre_t * pS )    { return ((unsigned *)pS) != p->ppStas[0];                         }Gia_StaIsGood154,8157
static inline void            Gia_StaSetUnused( Gia_StaAre_t * pS )                   { pS->iPrev.fMark = 1;                                     }Gia_StaSetUnused156,8313
static inline int             Gia_StaIsUnused( Gia_StaAre_t * pS )                    { return  pS->iPrev.fMark;                                 }Gia_StaIsUnused157,8460
static inline int             Gia_StaIsUsed( Gia_StaAre_t * pS )                      { return !pS->iPrev.fMark;                                 }Gia_StaIsUsed158,8607
#define Gia_ManAreForEachCubeList(Gia_ManAreForEachCubeList160,8755
#define Gia_ManAreForEachCubeList2(Gia_ManAreForEachCubeList2162,8916
#define Gia_ManAreForEachCubeStore(Gia_ManAreForEachCubeStore166,9230
#define Gia_ManAreForEachCubeVec(Gia_ManAreForEachCubeVec168,9382
void Gia_ManCountMintermsInCube( Gia_StaAre_t * pCube, int nVars, unsigned * pStore )Gia_ManCountMintermsInCube186,10058
int Gia_ManCountMinterms( Gia_ManAre_t * p )Gia_ManCountMinterms223,11051
int Gia_ManDeriveCiTfo_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vRes )Gia_ManDeriveCiTfo_rec252,11912
Vec_Int_t * Gia_ManDeriveCiTfoOne( Gia_Man_t * p, Gia_Obj_t * pPivot )Gia_ManDeriveCiTfoOne280,12756
Vec_Vec_t * Gia_ManDeriveCiTfo( Gia_Man_t * p )Gia_ManDeriveCiTfo312,13619
static inline int Gia_StaAreEqual( Gia_StaAre_t * p1, Gia_StaAre_t * p2, int nWords )Gia_StaAreEqual337,14256
static inline int Gia_StaAreDisjoint( Gia_StaAre_t * p1, Gia_StaAre_t * p2, int nWords )Gia_StaAreDisjoint357,14740
static inline int Gia_StaAreContain( Gia_StaAre_t * p1, Gia_StaAre_t * p2, int nWords )Gia_StaAreContain377,15285
static inline int Gia_StaAreDashNum( Gia_StaAre_t * p1, Gia_StaAre_t * p2, int nWords )Gia_StaAreDashNum397,15816
static inline int Gia_StaAreSharpVar( Gia_StaAre_t * p1, Gia_StaAre_t * p2, int nWords )Gia_StaAreSharpVar418,16566
static inline int Gia_StaAreDisjointVar( Gia_StaAre_t * p1, Gia_StaAre_t * p2, int nWords )Gia_StaAreDisjointVar450,17533
Gia_ManAre_t * Gia_ManAreCreate( Gia_Man_t * pAig )Gia_ManAreCreate481,18386
void Gia_ManAreFree( Gia_ManAre_t * p )Gia_ManAreFree510,19291
static inline Gia_ObjAre_t * Gia_ManAreCreateObj( Gia_ManAre_t * p )Gia_ManAreCreateObj541,20058
static inline Gia_StaAre_t * Gia_ManAreCreateSta( Gia_ManAre_t * p )Gia_ManAreCreateSta568,20812
static inline void Gia_ManAreRycycleSta( Gia_ManAre_t * p, Gia_StaAre_t * pSta )Gia_ManAreRycycleSta607,22078
static inline Gia_StaAre_t * Gia_ManAreCreateStaNew( Gia_ManAre_t * p )Gia_ManAreCreateStaNew633,22698
static inline Gia_StaAre_t * Gia_ManAreCreateStaInit( Gia_ManAre_t * p )Gia_ManAreCreateStaInit660,23372
void Gia_ManArePrintCube( Gia_ManAre_t * p, Gia_StaAre_t * pSta )Gia_ManArePrintCube681,23846
int Gia_ManAreDepth( Gia_ManAre_t * p, int iState )Gia_ManAreDepth714,24804
static inline int Gia_ManAreListCountListUsed( Gia_ManAre_t * p, Gia_PtrAre_t Root )Gia_ManAreListCountListUsed734,25320
int Gia_ManAreListCountUsed_rec( Gia_ManAre_t * p, Gia_PtrAre_t Root, int fTree )Gia_ManAreListCountUsed_rec754,25862
static inline int Gia_ManAreListCountUsed( Gia_ManAre_t * p )Gia_ManAreListCountUsed776,26608
static inline int Gia_ManArePrintListUsed( Gia_ManAre_t * p, Gia_PtrAre_t Root )Gia_ManArePrintListUsed793,27004
int Gia_ManArePrintUsed_rec( Gia_ManAre_t * p, Gia_PtrAre_t Root, int fTree )Gia_ManArePrintUsed_rec813,27541
static inline int Gia_ManArePrintUsed( Gia_ManAre_t * p )Gia_ManArePrintUsed835,28253
int Gia_ManAreFindBestVar( Gia_ManAre_t * p, Gia_PtrAre_t List )Gia_ManAreFindBestVar853,28759
static inline void Gia_ManAreRebalance( Gia_ManAre_t * p, Gia_PtrAre_t * pRoot )Gia_ManAreRebalance903,30420
static inline void Gia_ManAreCompress( Gia_ManAre_t * p, Gia_PtrAre_t * pRoot )Gia_ManAreCompress940,31740
static inline int Gia_ManAreCubeCheckList( Gia_ManAre_t * p, Gia_PtrAre_t * pRoot, Gia_StaAre_t * pSta )Gia_ManAreCubeCheckList971,32628
static inline void Gia_ManAreCubeAddToList( Gia_ManAre_t * p, Gia_PtrAre_t * pRoot, Gia_StaAre_t * pSta )Gia_ManAreCubeAddToList1040,34561
int Gia_ManAreCubeCheckTree_rec( Gia_ManAre_t * p, Gia_ObjAre_t * pObj, Gia_StaAre_t * pSta )Gia_ManAreCubeCheckTree_rec1065,35190
void Gia_ManAreCubeAddToTree_rec( Gia_ManAre_t * p, Gia_ObjAre_t * pObj, Gia_StaAre_t * pSta )Gia_ManAreCubeAddToTree_rec1102,36388
static inline int Gia_ManAreCubeCollectList( Gia_ManAre_t * p, Gia_PtrAre_t * pRoot, Gia_StaAre_t * pSta )Gia_ManAreCubeCollectList1179,38774
int Gia_ManAreCubeCollectTree_rec( Gia_ManAre_t * p, Gia_ObjAre_t * pObj, Gia_StaAre_t * pSta )Gia_ManAreCubeCollectTree_rec1223,39965
int Gia_ManAreCubeCheckTree( Gia_ManAre_t * p, Gia_StaAre_t * pSta )Gia_ManAreCubeCheckTree1260,41200
static inline int Gia_ManAreCubeProcess( Gia_ManAre_t * p, Gia_StaAre_t * pSta )Gia_ManAreCubeProcess1357,44301
void Gia_ManAreMostUsedPi_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManAreMostUsedPi_rec1392,45309
static inline Gia_Obj_t * Gia_ManAreMostUsedPi( Gia_ManAre_t * p )Gia_ManAreMostUsedPi1418,45990
int Gia_ManCheckPOs_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCheckPOs_rec1452,46998
static inline int Gia_ManCheckPOs( Gia_ManAre_t * p )Gia_ManCheckPOs1475,47635
static inline int Gia_ManCheckPOstatus( Gia_ManAre_t * p )Gia_ManCheckPOstatus1505,48443
int Gia_ManAreDeriveNexts_rec( Gia_ManAre_t * p, Gia_PtrAre_t Sta )Gia_ManAreDeriveNexts_rec1541,49289
int Gia_ManAreDeriveNexts( Gia_ManAre_t * p, Gia_PtrAre_t Sta )Gia_ManAreDeriveNexts1618,51691
void Gia_ManArePrintReport( Gia_ManAre_t * p, abctime Time, int fFinal )Gia_ManArePrintReport1683,53700
int Gia_ManArePerform( Gia_Man_t * pAig, int nStatesMax, int fMiter, int fVerbose )Gia_ManArePerform1710,54537
void Gia_ManAreDeriveCexSatStart( Gia_ManAre_t * p )Gia_ManAreDeriveCexSatStart1799,57865
void Gia_ManAreDeriveCexSatStop( Gia_ManAre_t * p )Gia_ManAreDeriveCexSatStop1827,58667
void Gia_ManAreDeriveCexSat( Gia_ManAre_t * p, Gia_StaAre_t * pCur, Gia_StaAre_t * pNext, int iOutFailed )Gia_ManAreDeriveCexSat1852,59409
Abc_Cex_t * Gia_ManAreDeriveCex( Gia_ManAre_t * p, Gia_StaAre_t * pLast )Gia_ManAreDeriveCex1919,62155

src/aig/gia/giaCof.c,8809
typedef struct Cof_Fan_t_ Cof_Fan_t;Cof_Fan_t31,795
struct Cof_Fan_t_Cof_Fan_t_32,832
    unsigned       iFan     : 31;    // ID of the fanin/fanoutiFan34,852
    unsigned       fCompl   :  1;    // complemented attributefCompl35,915
typedef struct Cof_Obj_t_ Cof_Obj_t;Cof_Obj_t38,982
struct Cof_Obj_t_Cof_Obj_t_39,1019
    unsigned       fTerm    :  1;    // terminal node (CI/CO)fTerm41,1039
    unsigned       fPhase   :  1;    // value under 000 patternfPhase42,1101
    unsigned       fMark0   :  1;    // first user-controlled markfMark043,1165
    unsigned       fMark1   :  1;    // second user-controlled markfMark144,1232
    unsigned       nFanins  :  4;    // the number of faninsnFanins45,1300
    unsigned       nFanouts : 24;    // total number of fanoutsnFanouts46,1361
    unsigned       nFanoutsM;        // total number of MUX ctrl fanoutsnFanoutsM47,1425
    unsigned       Value;            // application specific dataValue48,1498
    int            Id;               // ID of the nodeId49,1564
    int            iNext;            // next one in the linked listiNext50,1619
    int            iLit;             // literal of the node after rehashingiLit51,1687
    Cof_Fan_t      Fanios[0];        // the array of fanins/fanoutsFanios52,1763
typedef struct Cof_Man_t_ Cof_Man_t;Cof_Man_t55,1835
struct Cof_Man_t_Cof_Man_t_56,1872
    Gia_Man_t *    pGia;             // the original AIG managerpGia58,1892
    Vec_Int_t *    vCis;             // the vector of CIs (PIs + LOs)vCis59,1957
    Vec_Int_t *    vCos;             // the vector of COs (POs + LIs)vCos60,2027
    int            nObjs;            // the number of objectsnObjs61,2097
    int            nNodes;           // the number of nodesnNodes62,2159
    int            nTravIds;         // traversal ID of the networknTravIds63,2219
    int *          pObjData;         // the logic network defined for the AIGpObjData64,2287
    int            nObjData;         // the size of array to store the logic networknObjData65,2365
    int *          pLevels;          // the linked lists of levelspLevels66,2450
    int            nLevels;          // the max number of logic levelsnLevels67,2517
static inline unsigned    Gia_ObjHandle( Gia_Obj_t * pObj )                           { return pObj->Value;                                 } Gia_ObjHandle70,2592
static inline int         Cof_ObjLevel( Cof_Man_t * p, Cof_Obj_t * pObj )             { return Gia_ObjLevel(p->pGia, Gia_ManObj(p->pGia,pObj->Id)); } Cof_ObjLevel72,2736
static inline unsigned    Cof_ObjHandle( Cof_Man_t * p, Cof_Obj_t * pObj )            { return (unsigned)(((int *)pObj) - p->pObjData);     } Cof_ObjHandle74,2888
static inline unsigned    Cof_ObjHandleDiff( Cof_Obj_t * pObj, Cof_Obj_t * pFanin )   { return (unsigned)(((int *)pObj) - ((int *)pFanin)); } Cof_ObjHandleDiff75,3031
static inline int         Cof_ObjIsTerm( Cof_Obj_t * pObj )                           { return pObj->fTerm;                                 } Cof_ObjIsTerm77,3175
static inline int         Cof_ObjIsCi( Cof_Obj_t * pObj )                             { return pObj->fTerm && pObj->nFanins == 0;           } Cof_ObjIsCi78,3318
static inline int         Cof_ObjIsCo( Cof_Obj_t * pObj )                             { return pObj->fTerm && pObj->nFanins == 1;           } Cof_ObjIsCo79,3461
static inline int         Cof_ObjIsNode( Cof_Obj_t * pObj )                           { return!pObj->fTerm && pObj->nFanins > 0;            } Cof_ObjIsNode80,3604
static inline int         Cof_ObjIsConst0( Cof_Obj_t * pObj )                         { return!pObj->fTerm && pObj->nFanins == 0;           } Cof_ObjIsConst081,3747
static inline int         Cof_ObjFaninNum( Cof_Obj_t * pObj )                         { return pObj->nFanins;                               } Cof_ObjFaninNum83,3891
static inline int         Cof_ObjFanoutNum( Cof_Obj_t * pObj )                        { return pObj->nFanouts;                              } Cof_ObjFanoutNum84,4034
static inline int         Cof_ObjSize( Cof_Obj_t * pObj )                             { return sizeof(Cof_Obj_t) / 4 + pObj->nFanins + pObj->nFanouts;  } Cof_ObjSize85,4177
static inline Cof_Obj_t * Cof_ManObj( Cof_Man_t * p, unsigned iHandle )               { return (Cof_Obj_t *)(p->pObjData + iHandle);        } Cof_ManObj87,4333
static inline Cof_Obj_t * Cof_ObjFanin( Cof_Obj_t * pObj, int i )                     { return (Cof_Obj_t *)(((int *)pObj) - pObj->Fanios[i].iFan);               } Cof_ObjFanin88,4476
static inline Cof_Obj_t * Cof_ObjFanout( Cof_Obj_t * pObj, int i )                    { return (Cof_Obj_t *)(((int *)pObj) + pObj->Fanios[pObj->nFanins+i].iFan); } Cof_ObjFanout89,4641
static inline int         Cof_ManObjNum( Cof_Man_t * p )                              { return p->nObjs;                                    } Cof_ManObjNum91,4807
static inline int         Cof_ManNodeNum( Cof_Man_t * p )                             { return p->nNodes;                                   } Cof_ManNodeNum92,4950
static inline void        Cof_ManResetTravId( Cof_Man_t * p )                         { extern void Cof_ManCleanValue( Cof_Man_t * p ); Cof_ManCleanValue( p ); p->nTravIds = 1;  }Cof_ManResetTravId94,5094
static inline void        Cof_ManIncrementTravId( Cof_Man_t * p )                     { p->nTravIds++;                                      }Cof_ManIncrementTravId95,5274
static inline void        Cof_ObjSetTravId( Cof_Obj_t * pObj, int TravId )            { pObj->Value = TravId;                               }Cof_ObjSetTravId96,5416
static inline void        Cof_ObjSetTravIdCurrent( Cof_Man_t * p, Cof_Obj_t * pObj )  { pObj->Value = p->nTravIds;                          }Cof_ObjSetTravIdCurrent97,5558
static inline void        Cof_ObjSetTravIdPrevious( Cof_Man_t * p, Cof_Obj_t * pObj ) { pObj->Value = p->nTravIds - 1;                      }Cof_ObjSetTravIdPrevious98,5700
static inline int         Cof_ObjIsTravIdCurrent( Cof_Man_t * p, Cof_Obj_t * pObj )   { return ((int)pObj->Value == p->nTravIds);           }Cof_ObjIsTravIdCurrent99,5842
static inline int         Cof_ObjIsTravIdPrevious( Cof_Man_t * p, Cof_Obj_t * pObj )  { return ((int)pObj->Value == p->nTravIds - 1);       }Cof_ObjIsTravIdPrevious100,5984
#define Cof_ManForEachObj(Cof_ManForEachObj102,6127
#define Cof_ManForEachNode(Cof_ManForEachNode104,6272
#define Cof_ObjForEachFanin(Cof_ObjForEachFanin106,6452
#define Cof_ObjForEachFanout(Cof_ObjForEachFanout108,6591
Cof_Man_t * Cof_ManCreateLogicSimple( Gia_Man_t * pGia )Cof_ManCreateLogicSimple126,7237
void Cof_ManStop( Cof_Man_t * p )Cof_ManStop203,10075
int Cof_ManTfoSize_rec( Cof_Man_t * p, Cof_Obj_t * pObj )Cof_ManTfoSize_rec224,10504
int Cof_ManTfoSize( Cof_Man_t * p, Cof_Obj_t ** ppObjs, int nObjs )Cof_ManTfoSize250,11196
int Cof_ManTfiSize_rec( Cof_Man_t * p, Cof_Obj_t * pObj )Cof_ManTfiSize_rec270,11697
int Cof_ManTfiSize( Cof_Man_t * p, Cof_Obj_t ** ppObjs, int nObjs )Cof_ManTfiSize296,12367
int Cof_ManSuppSize_rec( Cof_Man_t * p, Cof_Obj_t * pObj )Cof_ManSuppSize_rec319,12994
int Cof_ManSuppSize( Cof_Man_t * p, Cof_Obj_t ** ppObjs, int nObjs )Cof_ManSuppSize345,13662
void Cof_ManCleanValue( Cof_Man_t * p )  Cof_ManCleanValue369,14287
void Cof_ManInsertEntry_rec( Vec_Ptr_t * vNodes, Cof_Obj_t * pNode, int nNodeMax )Cof_ManInsertEntry_rec388,14719
Vec_Ptr_t * Cof_ManCollectHighFanout( Cof_Man_t * p, int nNodes )Cof_ManCollectHighFanout422,15633
int Cof_ManCountRemoved( Cof_Man_t * p, Cof_Obj_t * pRoot, int fConst1 )Cof_ManCountRemoved445,16260
void Cof_ManPrintHighFanoutOne( Cof_Man_t * p, Cof_Obj_t * pObj )Cof_ManPrintHighFanoutOne517,19057
void Cof_ManPrintHighFanout( Cof_Man_t * p, int nNodes )Cof_ManPrintHighFanout541,19927
int Cof_NodeDeref_rec( Cof_Obj_t * pNode )Cof_NodeDeref_rec564,20492
int Cof_NodeRef_rec( Cof_Obj_t * pNode )Cof_NodeRef_rec573,20758
static inline int Cof_ObjMffcSize( Cof_Obj_t * pNode )Cof_ObjMffcSize582,21018
void Cof_ManPrintFanio( Cof_Man_t * p )Cof_ManPrintFanio605,21620
void Gia_ManPrintFanio( Gia_Man_t * pGia, int nNodes )Gia_ManPrintFanio746,27103
Gia_Man_t * Gia_ManDupCofInt( Gia_Man_t * p, int iVar )Gia_ManDupCofInt780,27948
Gia_Man_t * Gia_ManDupCof( Gia_Man_t * p, int iVar )Gia_ManDupCof862,30557
Vec_Int_t * Gia_ManCofVars( Gia_Man_t * p, int nFanLim )Gia_ManCofVars883,31121
Vec_Int_t * Gia_ManTransfer( Gia_Man_t * pAig, Gia_Man_t * pCof, Gia_Man_t * pNew, Vec_Int_t * vSigs )Gia_ManTransfer909,31809
Gia_Man_t * Gia_ManDupCofAllInt( Gia_Man_t * p, Vec_Int_t * vSigs, int fVerbose )Gia_ManDupCofAllInt936,32620
Gia_Man_t * Gia_ManDupCofAll( Gia_Man_t * p, int nFanLim, int fVerbose )Gia_ManDupCofAll987,34162

src/aig/gia/giaScript.c,1779
void Gia_ManAigPrintPiLevels( Gia_Man_t * p )Gia_ManAigPrintPiLevels49,1358
Gia_Man_t * Gia_ManAigSyn2( Gia_Man_t * pInit, int fOldAlgo, int fCoarsen, int fCutMin, int nRelaxRatio, int fDelayMin, int fVerbose, int fVeryVerbose )Gia_ManAigSyn269,1796
Gia_Man_t * Gia_ManAigSyn3( Gia_Man_t * p, int fVerbose, int fVeryVerbose )Gia_ManAigSyn3156,4644
Gia_Man_t * Gia_ManAigSyn4( Gia_Man_t * p, int fVerbose, int fVeryVerbose )Gia_ManAigSyn4192,5972
Vec_Ptr_t * Gia_ManOrderPios( Aig_Man_t * p, Gia_Man_t * pOrder )Gia_ManOrderPios250,8055
Gia_Man_t * Gia_ManDupFromBarBufs( Gia_Man_t * p )Gia_ManDupFromBarBufs279,8867
Gia_Man_t * Gia_ManDupToBarBufs( Gia_Man_t * p, int nBarBufs )Gia_ManDupToBarBufs317,10222
Gia_Man_t * Gia_ManAigSynch2Choices( Gia_Man_t * pGia1, Gia_Man_t * pGia2, Gia_Man_t * pGia3, Dch_Pars_t * pPars )Gia_ManAigSynch2Choices371,12263
Gia_Man_t * Gia_ManAigSynch2( Gia_Man_t * pInit, void * pPars0, int nLutSize, int nRelaxRatio )Gia_ManAigSynch2398,13214
void Gia_ManPerformMap( int nAnds, int nLutSize, int nCutNum, int fMinAve, int fUseMfs, int fVerbose )Gia_ManPerformMap498,16768
void Gia_ManPerformRound( int fIsMapped, int nAnds, int nLevels, int nLutSize, int nCutNum, int fMinAve, int fUseMfs, int fVerbose )Gia_ManPerformRound538,18624
void Gia_ManPerformFlow( int fIsMapped, int nAnds, int nLevels, int nLutSize, int nCutNum, int fMinAve, int fUseMfs, int fVerbose )Gia_ManPerformFlow591,20795
void Gia_ManPerformFlow2( int fIsMapped, int nAnds, int nLevels, int nLutSize, int nCutNum, int fBalance, int fMinAve, int fUseMfs, int fVerbose )Gia_ManPerformFlow2622,21847
void Gia_ManPerformFlow3( int nLutSize, int nCutNum, int fBalance, int fMinAve, int fUseMfs, int fUseLutLib, int fVerbose )Gia_ManPerformFlow3755,26894

src/aig/gia/giaOf.c,16546
#define OF_LEAF_MAX OF_LEAF_MAX38,1018
#define OF_CUT_MAX OF_CUT_MAX39,1041
#define OF_NO_LEAF OF_NO_LEAF40,1064
#define OF_NO_FUNC OF_NO_FUNC41,1087
#define OF_CUT_EXTRA OF_CUT_EXTRA42,1117
typedef struct Of_Cut_t_ Of_Cut_t; Of_Cut_t44,1171
struct Of_Cut_t_Of_Cut_t_45,1207
    word            Sign;           // signatureSign47,1226
    int             Delay;          // delayDelay48,1275
    int             Flow;           // flowFlow49,1320
    unsigned        iFunc   : 27;   // function (OF_NO_FUNC)iFunc50,1364
    unsigned        nLeaves :  5;   // leaf number (OF_NO_LEAF)nLeaves51,1425
    int             pLeaves[OF_LEAF_MAX+1]; // leavespLeaves52,1489
typedef struct Of_Obj_t_ Of_Obj_t; Of_Obj_t54,1546
struct Of_Obj_t_Of_Obj_t_55,1582
    int             iCutH;          // best cutiCutH57,1601
    int             iCutH2;         // best cutiCutH258,1649
    int             Delay1;         // arrival timeDelay159,1697
    int             Delay2;         // arrival timeDelay260,1749
    int             Required;       // requiredRequired61,1801
    int             nRefs;          // references nRefs62,1849
    int             Flow;           // area flowFlow63,1900
    int             Temp;           // unusedTemp64,1949
typedef struct Of_Man_t_ Of_Man_t; Of_Man_t66,1998
struct Of_Man_t_Of_Man_t_67,2034
    Gia_Man_t *     pGia;           // derived managerpGia70,2070
    Jf_Par_t *      pPars;          // parameterspPars71,2125
    Vec_Mem_t *     vTtMem;         // truth tablesvTtMem73,2191
    Vec_Ptr_t       vPages;         // cut memoryvPages74,2243
    Vec_Int_t       vCutSets;       // cut offsetsvCutSets75,2293
    Vec_Int_t       vCutFlows;      // temporary cut areavCutFlows76,2344
    Vec_Int_t       vCutDelays;     // temporary cut delayvCutDelays77,2402
    Vec_Int_t       vCutRefs;       // temporary cut referebcesvCutRefs78,2461
    int             iCur;           // current positioniCur79,2525
    int             Iter;           // mapping iterationsIter80,2581
    Of_Obj_t *      pObjs;          pObjs82,2658
    abctime         clkStart;       // starting timeclkStart84,2713
    double          CutCount[6];    // cut countsCutCount85,2766
#define OF_NUM OF_NUM88,2820
#define OF_NUMINV OF_NUMINV89,2844
static inline int         Of_Flt2Int( float f )                                     { return (int)(OF_NUM*f);                                          }Of_Flt2Int91,2869
static inline float       Of_Int2Flt( int i )                                       { return OF_NUMINV*i;                                              }Of_Int2Flt92,3022
static inline int *       Of_ManCutSet( Of_Man_t * p, int i )                       { return (int *)Vec_PtrEntry(&p->vPages, i >> 16) + (i & 0xFFFF);  }Of_ManCutSet94,3176
static inline int         Of_ObjCutSetId( Of_Man_t * p, int i )                     { return Vec_IntEntry( &p->vCutSets, i );                          }Of_ObjCutSetId95,3329
static inline int *       Of_ObjCutSet( Of_Man_t * p, int i )                       { return Of_ManCutSet(p, Of_ObjCutSetId(p, i));                    }Of_ObjCutSet96,3482
static inline int         Of_ObjHasCuts( Of_Man_t * p, int i )                      { return (int)(Vec_IntEntry(&p->vCutSets, i) > 0);                 }Of_ObjHasCuts97,3635
static inline int         Of_ObjCutFlow( Of_Man_t * p, int i )                      { return Vec_IntEntry(&p->vCutFlows, i);                           } Of_ObjCutFlow99,3789
static inline int         Of_ObjCutDelay( Of_Man_t * p, int i )                     { return Vec_IntEntry(&p->vCutDelays, i);                          } Of_ObjCutDelay100,3943
static inline void        Of_ObjSetCutFlow( Of_Man_t * p, int i, int a )            { Vec_IntWriteEntry(&p->vCutFlows, i, a);                          } Of_ObjSetCutFlow101,4097
static inline void        Of_ObjSetCutDelay( Of_Man_t * p, int i, int d )           { Vec_IntWriteEntry(&p->vCutDelays, i, d);                         } Of_ObjSetCutDelay102,4251
static inline int         Of_CutSize( int * pCut )                                  { return pCut[0] & OF_NO_LEAF;                                     }Of_CutSize104,4406
static inline int         Of_CutFunc( int * pCut )                                  { return ((unsigned)pCut[0] >> 5);                                 }Of_CutFunc105,4559
static inline int *       Of_CutLeaves( int * pCut )                                { return pCut + 1;                                                 }Of_CutLeaves106,4712
static inline int         Of_CutSetBoth( int n, int f )                             { return n | (f << 5);                                             }Of_CutSetBoth107,4865
static inline int         Of_CutHandle( int * pCutSet, int * pCut )                 { assert( pCut > pCutSet ); return pCut - pCutSet;                 } Of_CutHandle108,5018
static inline int *       Of_CutFromHandle( int * pCutSet, int h )                  { assert( h > 0 ); return pCutSet + h;                             }Of_CutFromHandle109,5172
static inline int         Of_CutDelay1( int * pCut )                                { return pCut[1 + Of_CutSize(pCut)];                               }Of_CutDelay1111,5326
static inline int         Of_CutDelay2( int * pCut )                                { return pCut[2 + Of_CutSize(pCut)];                               }Of_CutDelay2112,5479
static inline int         Of_CutAreaFlow( int * pCut )                              { return pCut[3 + Of_CutSize(pCut)];                               }Of_CutAreaFlow113,5632
static inline void        Of_CutSetDelay1( int * pCut, int d )                      { pCut[1 + Of_CutSize(pCut)] = d;                                  } Of_CutSetDelay1114,5785
static inline void        Of_CutSetDelay2( int * pCut, int d )                      { pCut[2 + Of_CutSize(pCut)] = d;                                  } Of_CutSetDelay2115,5939
static inline void        Of_CutSetAreaFlow( int * pCut, int d )                    { pCut[3 + Of_CutSize(pCut)] = d;                                  } Of_CutSetAreaFlow116,6093
static inline int         Of_CutVar( int * pCut, int v )                            { return Abc_Lit2Var(Of_CutLeaves(pCut)[v]);                       } Of_CutVar118,6248
static inline int         Of_CutFlag( int * pCut, int v )                           { return Abc_LitIsCompl(Of_CutLeaves(pCut)[v]);                    } Of_CutFlag119,6402
static inline void        Of_CutCleanFlag( int * pCut, int v )                      { Of_CutLeaves(pCut)[v] = Abc_LitRegular(Of_CutLeaves(pCut)[v]);   } Of_CutCleanFlag120,6556
static inline void        Of_CutSetFlag( int * pCut, int v, int x )                 { Of_CutLeaves(pCut)[v] = Abc_Var2Lit(Of_CutVar(pCut, v), x);      } Of_CutSetFlag121,6710
static inline Of_Obj_t *  Of_ObjData( Of_Man_t * p, int i )                         { return p->pObjs + i;                                             }Of_ObjData123,6865
static inline int         Of_ObjCutBest( Of_Man_t * p, int i )                      { return Of_ObjData(p, i)->iCutH;                                  }Of_ObjCutBest125,7019
static inline int         Of_ObjCutBest2( Of_Man_t * p, int i )                     { return Of_ObjData(p, i)->iCutH2;                                 }Of_ObjCutBest2126,7172
static inline int         Of_ObjDelay1( Of_Man_t * p, int i )                       { return Of_ObjData(p, i)->Delay1;                                 }Of_ObjDelay1127,7325
static inline int         Of_ObjDelay2( Of_Man_t * p, int i )                       { return Of_ObjData(p, i)->Delay2;                                 }Of_ObjDelay2128,7478
static inline int         Of_ObjRequired( Of_Man_t * p, int i )                     { return Of_ObjData(p, i)->Required;                               }Of_ObjRequired129,7631
static inline int         Of_ObjRefNum( Of_Man_t * p, int i )                       { return Of_ObjData(p, i)->nRefs;                                  }Of_ObjRefNum130,7784
static inline int         Of_ObjFlow( Of_Man_t * p, int i )                         { return Of_ObjData(p, i)->Flow;                                   }Of_ObjFlow131,7937
static inline void        Of_ObjSetCutBest( Of_Man_t * p, int i, int x )            { Of_ObjData(p, i)->iCutH = x;                                     }Of_ObjSetCutBest133,8091
static inline void        Of_ObjSetCutBest2( Of_Man_t * p, int i, int x )           { Of_ObjData(p, i)->iCutH2 = x;                                    }Of_ObjSetCutBest2134,8244
static inline void        Of_ObjSetDelay1( Of_Man_t * p, int i, int x )             { Of_ObjData(p, i)->Delay1 = x;                                    }Of_ObjSetDelay1135,8397
static inline void        Of_ObjSetDelay2( Of_Man_t * p, int i, int x )             { Of_ObjData(p, i)->Delay2 = x;                                    }Of_ObjSetDelay2136,8550
static inline void        Of_ObjSetRequired( Of_Man_t * p, int i, int x )           { Of_ObjData(p, i)->Required = x;                                  }Of_ObjSetRequired137,8703
static inline void        Of_ObjSetRefNum( Of_Man_t * p, int i, int x )             { Of_ObjData(p, i)->nRefs = x;                                     }Of_ObjSetRefNum138,8856
static inline void        Of_ObjSetFlow( Of_Man_t * p, int i, int x )               { Of_ObjData(p, i)->Flow = x;                                      }Of_ObjSetFlow139,9009
static inline void        Of_ObjUpdateRequired( Of_Man_t * p,int i, int x )         { if ( Of_ObjRequired(p, i) > x ) Of_ObjSetRequired(p, i, x);      }Of_ObjUpdateRequired140,9162
static inline int         Of_ObjRefInc( Of_Man_t * p, int i )                       { return Of_ObjData(p, i)->nRefs++;                                }Of_ObjRefInc141,9315
static inline int         Of_ObjRefDec( Of_Man_t * p, int i )                       { return --Of_ObjData(p, i)->nRefs;                                }Of_ObjRefDec142,9468
static inline int *       Of_ObjCutBestP( Of_Man_t * p, int iObj )                  { assert(iObj>0 && iObj<Gia_ManObjNum(p->pGia));return Of_ManCutSet( p, Of_ObjCutBest(p, iObj) );  }Of_ObjCutBestP144,9622
static inline void        Of_ObjSetCutBestP( Of_Man_t * p, int * pCutSet, int iObj, int * pCut ) { Of_ObjSetCutBest( p, iObj, Of_ObjCutSetId(p, iObj) + Of_CutHandle(pCutSet, pCut) ); }Of_ObjSetCutBestP145,9807
static inline int *       Of_ObjCutBestP2( Of_Man_t * p, int iObj )                 { assert(iObj>0 && iObj<Gia_ManObjNum(p->pGia));return Of_ManCutSet( p, Of_ObjCutBest2(p, iObj) );  }Of_ObjCutBestP2147,9993
static inline void        Of_ObjSetCutBestP2( Of_Man_t * p, int * pCutSet, int iObj, int * pCut ) { Of_ObjSetCutBest2( p, iObj, Of_ObjCutSetId(p, iObj) + Of_CutHandle(pCutSet, pCut) ); }Of_ObjSetCutBestP2148,10179
#define Of_SetForEachCut(Of_SetForEachCut150,10367
#define Of_ObjForEachCut(Of_ObjForEachCut151,10511
#define Of_CutForEachVar(Of_CutForEachVar152,10593
#define Of_CutForEachVarFlag(Of_CutForEachVarFlag153,10716
void Of_ManAreaFlow( Of_Man_t * p )Of_ManAreaFlow170,11340
Of_Man_t * Of_StoCreate( Gia_Man_t * pGia, Jf_Par_t * pPars )Of_StoCreate205,12414
void Of_StoDelete( Of_Man_t * p )Of_StoDelete244,13968
static inline int Of_CutComputeTruth6( Of_Man_t * p, Of_Cut_t * pCut0, Of_Cut_t * pCut1, int fCompl0, int fCompl1, Of_Cut_t * pCutR, int fIsXor )Of_CutComputeTruth6275,14641
static inline int Of_CutComputeTruthMux6( Of_Man_t * p, Of_Cut_t * pCut0, Of_Cut_t * pCut1, Of_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, Of_Cut_t * pCutR )Of_CutComputeTruthMux6294,15750
static inline int Of_CutCountBits( word i )Of_CutCountBits328,17274
static inline word Of_CutGetSign( int * pLeaves, int nLeaves )Of_CutGetSign335,17523
static inline int Of_CutCreateUnit( Of_Cut_t * p, int i )Of_CutCreateUnit342,17720
static inline void Of_Cutprintf( Of_Man_t * p, Of_Cut_t * pCut )Of_Cutprintf352,17956
static inline int Of_ManPrepareCuts( Of_Cut_t * pCuts, Of_Man_t * p, int iObj, int fAddUnit )Of_ManPrepareCuts367,18566
static inline int Of_ManSaveCuts( Of_Man_t * p, Of_Cut_t ** pCuts, int nCuts )Of_ManSaveCuts389,19383
static inline void Of_ManLiftCuts( Of_Man_t * p, int iObj )Of_ManLiftCuts411,20279
static inline void Of_CutPrint( int * pCut )Of_CutPrint421,20584
static inline int Of_CutCheck( Of_Cut_t * pBase, Of_Cut_t * pCut ) // check if pCut is contained in pBaseOf_CutCheck441,21132
static inline int Of_SetCheckArray( Of_Cut_t ** ppCuts, int nCuts )Of_SetCheckArray457,21580
static inline int Of_CutMergeOrder( Of_Cut_t * pCut0, Of_Cut_t * pCut1, Of_Cut_t * pCut, int nLutSize )Of_CutMergeOrder497,22674
static inline int Of_CutMergeOrderMux( Of_Cut_t * pCut0, Of_Cut_t * pCut1, Of_Cut_t * pCut2, Of_Cut_t * pCut, int nLutSize )Of_CutMergeOrderMux560,24416
static inline int Of_SetCutIsContainedOrder( Of_Cut_t * pBase, Of_Cut_t * pCut ) // check if pCut is contained in pBaseOf_SetCutIsContainedOrder584,25361
static inline int Of_SetLastCutIsContained( Of_Cut_t ** pCuts, int nCuts )Of_SetLastCutIsContained610,26080
static inline int Of_SetLastCutContainsArea( Of_Cut_t ** pCuts, int nCuts )Of_SetLastCutContainsArea618,26410
static inline int Of_CutCompareArea( Of_Cut_t * pCut0, Of_Cut_t * pCut1 )Of_CutCompareArea636,27054
static inline void Of_SetSortByArea( Of_Cut_t ** pCuts, int nCuts )Of_SetSortByArea646,27476
static inline int Of_SetAddCut( Of_Cut_t ** pCuts, int nCuts, int nCutNum )Of_SetAddCut656,27750
static inline int Of_CutArea( Of_Man_t * p, int nLeaves )Of_CutArea664,28010
static inline void Of_CutParams( Of_Man_t * p, Of_Cut_t * pCut, int nGiaRefs )Of_CutParams670,28156
void Of_ObjMergeOrder( Of_Man_t * p, int iObj )Of_ObjMergeOrder684,28684
void Of_ManComputeCuts( Of_Man_t * p )Of_ManComputeCuts780,32958
void Of_ManPrintStats( Of_Man_t * p, char * pTitle )Of_ManPrintStats811,33714
void Of_ManPrintInit( Of_Man_t * p )Of_ManPrintInit822,34100
void Of_ManPrintQuit( Of_Man_t * p )Of_ManPrintQuit840,34709
static inline int Of_ManComputeForwardCut( Of_Man_t * p, int iObj, int * pCut )Of_ManComputeForwardCut998,40061
static inline int Of_ManComputeForwardCutArea( Of_Man_t * p, int iObj, int * pCut )Of_ManComputeForwardCutArea1007,40379
static inline void Of_ManComputeForwardObj( Of_Man_t * p, int iObj )Of_ManComputeForwardObj1014,40662
void Of_ManComputeForward1( Of_Man_t * p )Of_ManComputeForward11036,41448
int Of_CutRef_rec( Of_Man_t * p, int * pCut )Of_CutRef_rec1047,41740
int Of_CutDeref_rec( Of_Man_t * p, int * pCut )Of_CutDeref_rec1055,42049
static inline int Of_CutAreaDerefed( Of_Man_t * p, int * pCut )Of_CutAreaDerefed1063,42362
int Of_CutRef2_rec( Of_Man_t * p, int * pCut )Of_CutRef2_rec1071,42560
static inline int Of_CutAreaDerefed2( Of_Man_t * p, int * pCut )Of_CutAreaDerefed21085,42977
static inline void Of_ManComputeForwardObj2( Of_Man_t * p, int iObj )Of_ManComputeForwardObj21097,43286
void Of_ManComputeForward2( Of_Man_t * p )Of_ManComputeForward21125,44266
static inline int Of_ManComputeOutputRequired( Of_Man_t * p, int fCleanRefs )Of_ManComputeOutputRequired1136,44559
static inline int Of_ManComputeBackwardCut( Of_Man_t * p, int * pCut )Of_ManComputeBackwardCut1158,45264
void Of_ManComputeBackward1( Of_Man_t * p )Of_ManComputeBackward11166,45502
void Of_ManComputeBackward2( Of_Man_t * p )Of_ManComputeBackward21214,47012
void Of_ManComputeBackward3( Of_Man_t * p )Of_ManComputeBackward31242,47903
void Of_ManComputeForwardDirconCut( Of_Man_t * p, int iObj, int * pCut, int * pDelay1, int * pDelay2 )Of_ManComputeForwardDirconCut1304,49804
int Of_ManComputeForwardDirconObj( Of_Man_t * p, int iObj )Of_ManComputeForwardDirconObj1376,52696
void Of_ManComputeForwardDircon1( Of_Man_t * p )Of_ManComputeForwardDircon11397,53502
void Of_ManComputeBackwardDircon1( Of_Man_t * p )Of_ManComputeBackwardDircon11409,53904
void Of_ManCreateSat( Of_Man_t * p, int nCutsAll, Vec_Int_t * vFirst, Vec_Int_t * vCutNum, Vec_Int_t * vBestNode, Vec_Int_t * vBestCut )Of_ManCreateSat1512,57159
void Of_ManPrintCuts( Of_Man_t * p )Of_ManPrintCuts1627,61239
void Of_ManSetDefaultPars( Jf_Par_t * pPars )Of_ManSetDefaultPars1698,63458
Gia_Man_t * Of_ManDeriveMapping( Of_Man_t * p )Of_ManDeriveMapping1725,64265
Gia_Man_t * Of_ManPerformMapping( Gia_Man_t * pGia, Jf_Par_t * pPars )Of_ManPerformMapping1770,66000

src/aig/gia/giaSatoko.c,949
void Gia_ManCollectVars_rec( int Var, Vec_Int_t * vMapping, Vec_Int_t * vRes, Vec_Bit_t * vVisit )Gia_ManCollectVars_rec48,1334
Vec_Int_t * Gia_ManCollectVars( int Root, Vec_Int_t * vMapping, int nVars )Gia_ManCollectVars62,1851
void Gia_ManSatokoReport( int iOutput, int status, abctime clk )Gia_ManSatokoReport83,2406
satoko_t * Gia_ManSatokoFromDimacs( char * pFileName, satoko_opts_t * opts )Gia_ManSatokoFromDimacs99,2841
void Gia_ManSatokoDimacs( char * pFileName, satoko_opts_t * opts )Gia_ManSatokoDimacs148,4364
satoko_t * Gia_ManSatokoInit( Cnf_Dat_t * pCnf, satoko_opts_t * opts )Gia_ManSatokoInit172,4957
satoko_t * Gia_ManSatokoCreate( Gia_Man_t * p, satoko_opts_t * opts )Gia_ManSatokoCreate188,5414
int Gia_ManSatokoCallOne( Gia_Man_t * p, satoko_opts_t * opts, int iOutput )Gia_ManSatokoCallOne199,5800
void Gia_ManSatokoCall( Gia_Man_t * p, satoko_opts_t * opts, int fSplit, int fIncrem )Gia_ManSatokoCall214,6244

src/aig/gia/giaStr.c,11322
#define STR_SUPER STR_SUPER32,847
#define MAX_TREE MAX_TREE33,870
    STR_NONE   =  0,STR_NONE36,902
    STR_CONST0 =  1,STR_CONST037,923
    STR_PI     =  2,STR_PI38,944
    STR_AND    =  3,STR_AND39,965
    STR_XOR    =  4,STR_XOR40,986
    STR_MUX    =  5,STR_MUX41,1007
    STR_BUF    =  6,STR_BUF42,1028
    STR_PO     =  7,STR_PO43,1049
    STR_UNUSED =  8      STR_UNUSED44,1070
typedef struct Str_Obj_t_ Str_Obj_t; Str_Obj_t47,1100
struct Str_Obj_t_Str_Obj_t_48,1138
    unsigned       Type    :  4;     // object typeType50,1158
    unsigned       nFanins : 28;     // fanin countnFanins51,1210
    int            iOffset;          // place where fanins are storediOffset52,1262
    int            iTop;             // top level MUXiTop53,1332
    int            iCopy;            // copy of this nodeiCopy54,1386
typedef struct Str_Ntk_t_ Str_Ntk_t; Str_Ntk_t56,1447
struct Str_Ntk_t_Str_Ntk_t_57,1485
    int            nObjs;            // object countnObjs59,1505
    int            nObjsAlloc;       // alloc objectsnObjsAlloc60,1558
    Str_Obj_t *    pObjs;            // objects pObjs61,1612
    Vec_Int_t      vFanins;          // object faninsvFanins62,1661
    int            nObjCount[STR_UNUSED];nObjCount63,1715
    int            nTrees;nTrees64,1757
    int            nGroups;nGroups65,1784
    int            DelayGain;DelayGain66,1812
typedef struct Str_Man_t_ Str_Man_t; Str_Man_t68,1845
struct Str_Man_t_Str_Man_t_69,1883
    Gia_Man_t *     pOld;            // managerpOld72,1920
    int             nLutSize;        // LUT sizenLutSize73,1968
    int             fCutMin;         // cut minimizationfCutMin74,2017
    Str_Ntk_t *     pNtk;            // balanced networkpNtk76,2095
    Gia_Man_t *     pNew;            // newly constructed pNew78,2182
    Vec_Int_t *     vDelays;         // delays of each objectvDelays79,2241
static inline Str_Obj_t * Str_NtkObj( Str_Ntk_t * p, int i )                         { assert( i < p->nObjs );  return p->pObjs + i;                                        }Str_NtkObj82,2307
static inline int         Str_ObjFaninId( Str_Ntk_t * p, Str_Obj_t * pObj, int i )   { return Abc_Lit2Var( Vec_IntEntry(&p->vFanins, pObj->iOffset + i) );                  }Str_ObjFaninId83,2481
static inline Str_Obj_t * Str_ObjFanin( Str_Ntk_t * p, Str_Obj_t * pObj, int i )     { return Str_NtkObj( p, Str_ObjFaninId(p, pObj, i) );                                  }Str_ObjFanin84,2655
static inline int         Str_ObjFaninC( Str_Ntk_t * p, Str_Obj_t * pObj, int i )    { return Abc_LitIsCompl( Vec_IntEntry(&p->vFanins, pObj->iOffset + i) );               }Str_ObjFaninC85,2829
static inline int         Str_ObjFaninCopy( Str_Ntk_t * p, Str_Obj_t * pObj, int i ) { return Abc_LitNotCond( Str_ObjFanin(p, pObj, i)->iCopy, Str_ObjFaninC(p, pObj, i) ); }Str_ObjFaninCopy86,3003
static inline int         Str_ObjId( Str_Ntk_t * p, Str_Obj_t * pObj )               { return pObj - p->pObjs;                                                              }Str_ObjId87,3177
#define Str_NtkManForEachObj(Str_NtkManForEachObj89,3352
#define Str_NtkManForEachObjVec(Str_NtkManForEachObjVec91,3462
static inline int Str_ObjCreate( Str_Ntk_t * p, int Type, int nFanins, int * pFanins )Str_ObjCreate109,4097
static inline Str_Ntk_t * Str_NtkCreate( int nObjsAlloc, int nFaninsAlloc )Str_NtkCreate125,4616
static inline void Str_NtkDelete( Str_Ntk_t * p )Str_NtkDelete135,4939
static inline void Str_NtkPs( Str_Ntk_t * p, abctime clk )Str_NtkPs142,5131
static inline void Str_ObjReadGroup( Str_Ntk_t * p, Str_Obj_t * pObj, int * pnGroups, int * pnMuxes )Str_ObjReadGroup148,5420
static inline void Str_NtkPrintGroups( Str_Ntk_t * p )Str_NtkPrintGroups159,5796
Gia_Man_t * Str_NtkToGia( Gia_Man_t * pGia, Str_Ntk_t * p )Str_NtkToGia172,6188
Gia_Man_t * Gia_ManDupMuxesNoHash( Gia_Man_t * p )Gia_ManDupMuxesNoHash225,8074
void Str_MuxInputsCollect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Str_MuxInputsCollect_rec298,10924
void Str_MuxInputsCollect( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Str_MuxInputsCollect309,11299
void Str_MuxStructCollect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Str_MuxStructCollect_rec317,11534
void Str_MuxStructCollect( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Str_MuxStructCollect325,11839
void Str_MuxStructDump_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Str_t * vStr )Str_MuxStructDump_rec333,12074
void Str_MuxStructDump( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Str_t * vStr )Str_MuxStructDump346,12619
int Str_ManMuxCountOne( char * p )Str_ManMuxCountOne355,12873
Vec_Wec_t * Str_ManDeriveTrees( Gia_Man_t * p )Str_ManDeriveTrees362,13001
Vec_Int_t * Str_ManCreateRoots( Vec_Wec_t * vGroups, int nObjs )Str_ManCreateRoots420,14921
void Str_MuxTraverse_rec( Gia_Man_t * p, int i )Str_MuxTraverse_rec432,15303
void Str_ManCheckOverlap( Gia_Man_t * p, Vec_Wec_t * vGroups )Str_ManCheckOverlap446,15748
static inline void Gia_ManSimplifyXor( Vec_Int_t * vSuper )Gia_ManSimplifyXor522,18247
static inline void Gia_ManSimplifyAnd( Vec_Int_t * vSuper )Gia_ManSimplifyAnd542,18859
static inline void Gia_ManSuperCollectXor_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuperCollectXor_rec572,19720
static inline void Gia_ManSuperCollectAnd_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuperCollectAnd_rec588,20403
static inline void Gia_ManSuperCollect( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuperCollect603,21027
void Str_ManNormalize_rec( Str_Ntk_t * pNtk, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Wec_t * vGroups, Vec_Int_t * vRoots )Str_ManNormalize_rec639,22127
Str_Ntk_t * Str_ManNormalizeInt( Gia_Man_t * p, Vec_Wec_t * vGroups, Vec_Int_t * vRoots )Str_ManNormalizeInt728,25954
Str_Ntk_t * Str_ManNormalize( Gia_Man_t * p )Str_ManNormalize755,26933
static inline int Str_Delay2( int d0, int d1, int nLutSize )Str_Delay2782,27690
static inline int Str_Delay3( int d0, int d1, int d2, int nLutSize )Str_Delay3789,27935
static inline int Str_ObjDelay( Gia_Man_t * pNew, int iObj, int nLutSize, Vec_Int_t * vDelay )Str_ObjDelay797,28252
static inline void transpose64( word A[64] )transpose64833,29407
static inline int  Str_ManNum( Gia_Man_t * p, int iObj )             { return Vec_IntEntry(&p->vCopies, iObj);     }Str_ManNum859,30024
static inline void Str_ManSetNum( Gia_Man_t * p, int iObj, int Num ) { Vec_IntWriteEntry(&p->vCopies, iObj, Num);  }Str_ManSetNum860,30141
int Str_ManVectorAffinity( Gia_Man_t * p, Vec_Int_t * vSuper, Vec_Int_t * vDelay, word Matrix[256], int nLimit )Str_ManVectorAffinity862,30259
static inline int Str_CountBits( word i )Str_CountBits997,34500
static inline void Str_PrintState( int * pCost, int * pSuper, word * pMatrix, int nSize )Str_PrintState1013,34902
void Str_NtkBalanceMulti2( Gia_Man_t * pNew, Str_Ntk_t * p, Str_Obj_t * pObj, Vec_Int_t * vDelay, int nLutSize )Str_NtkBalanceMulti21039,35566
int Str_NtkBalanceTwo( Gia_Man_t * pNew, Str_Ntk_t * p, Str_Obj_t * pObj, int i, int j, Vec_Int_t * vDelay, int * pCost, int * pSuper, word * pMatrix, int nSize, int nLutSize, int CostBest )Str_NtkBalanceTwo1053,36111
void Str_NtkBalanceMulti( Gia_Man_t * pNew, Str_Ntk_t * p, Str_Obj_t * pObj, Vec_Int_t * vDelay, int nLutSize )Str_NtkBalanceMulti1089,37300
void Str_NtkBalanceMux( Gia_Man_t * pNew, Str_Ntk_t * p, Str_Obj_t * pObj, Vec_Int_t * vDelay, int nLutSize, int nGroups, int nMuxes, int fRecursive, int fOptArea, int fVerbose )Str_NtkBalanceMux1253,43783
Gia_Man_t * Str_NtkBalance( Gia_Man_t * pGia, Str_Ntk_t * p, int nLutSize, int fUseMuxes, int fRecursive, int fOptArea, int fVerbose )Str_NtkBalance1287,45261
Gia_Man_t * Gia_ManLutBalance( Gia_Man_t * p, int nLutSize, int fUseMuxes, int fRecursive, int fOptArea, int fVerbose )Gia_ManLutBalance1378,48997
typedef struct Str_Edg_t_ Str_Edg_t; Str_Edg_t1434,50684
struct Str_Edg_t_Str_Edg_t_1435,50722
    int            Fan;      // fanin IDFan1437,50742
    int            fCompl;   // fanin complementfCompl1438,50783
    int            FanDel;   // fanin delayFanDel1439,50832
    int            Copy;     // fanin copyCopy1440,50876
typedef struct Str_Mux_t_ Str_Mux_t; // 64 bytesStr_Mux_t1443,50923
struct Str_Mux_t_Str_Mux_t_1444,50972
    int            Id;       // node IDId1446,50992
    int            Delay;    // node delayDelay1447,51032
    int            Copy;     // node copyCopy1448,51075
    int            nLutSize; // LUT sizenLutSize1449,51117
    Str_Edg_t      Edge[3];  // faninsEdge1450,51158
static inline Str_Mux_t * Str_MuxFanin( Str_Mux_t * pMux, int i )     { return pMux - pMux->Id + pMux->Edge[i].Fan;                         }Str_MuxFanin1453,51201
static inline int         Str_MuxHasFanin( Str_Mux_t * pMux, int i )  { return pMux->Edge[i].Fan > 0 && Str_MuxFanin(pMux, i)->Copy != -2;  }Str_MuxHasFanin1454,51343
void Str_MuxDelayPrint_rec( Str_Mux_t * pMux, int i )Str_MuxDelayPrint_rec1456,51486
int Str_MuxDelayEdge_rec( Str_Mux_t * pMux, int i )Str_MuxDelayEdge_rec1483,52202
void Str_MuxCreate( Str_Mux_t * pTree, Str_Ntk_t * pNtk, int iMux, int nMuxes, Vec_Int_t * vDelay, int nLutSize )Str_MuxCreate1494,52611
int Str_MuxToGia_rec( Gia_Man_t * pNew, Str_Mux_t * pMux, int i, Vec_Int_t * vDelay )Str_MuxToGia_rec1526,53795
void Str_MuxChangeOnce( Str_Mux_t * pTree, int * pPath, int i, int k, Str_Mux_t * pBackup, Gia_Man_t * pNew, Vec_Int_t * vDelay )Str_MuxChangeOnce1540,54458
void Str_MuxChangeUndo( Str_Mux_t * pTree, int * pPath, int i, int k, Str_Mux_t * pBackup )Str_MuxChangeUndo1602,56978
int Str_MuxFindPathEdge_rec( Str_Mux_t * pMux, int i, int * pPath, int * pnLength )Str_MuxFindPathEdge_rec1608,57227
int Str_MuxFindPath_rec( Str_Mux_t * pMux, int * pPath, int * pnLength )Str_MuxFindPath_rec1616,57584
Str_Mux_t * Str_MuxFindBranching( Str_Mux_t * pRoot, int i )Str_MuxFindBranching1628,58070
int Str_MuxTryOnce( Gia_Man_t * pNew, Str_Ntk_t * pNtk, Str_Mux_t * pTree, Str_Mux_t * pRoot, int Edge, Vec_Int_t * vDelay, int fVerbose )Str_MuxTryOnce1648,58650
int Str_MuxRestruct_rec( Gia_Man_t * pNew, Str_Ntk_t * pNtk, Str_Mux_t * pTree, Str_Mux_t * pRoot, int Edge, Vec_Int_t * vDelay, int fVerbose )Str_MuxRestruct_rec1687,60296
int Str_MuxRestructure2( Gia_Man_t * pNew, Str_Ntk_t * pNtk, int iMux, int nMuxes, Vec_Int_t * vDelay, int nLutSize, int fVerbose )Str_MuxRestructure21698,60857
int Str_MuxRestructure1( Gia_Man_t * pNew, Str_Ntk_t * pNtk, int iMux, int nMuxes, Vec_Int_t * vDelay, int nLutSize, int fVerbose )Str_MuxRestructure11721,61716
int Str_MuxRestructure( Gia_Man_t * pNew, Str_Ntk_t * pNtk, int iMux, int nMuxes, Vec_Int_t * vDelay, int nLutSize, int fRecursive, int fOptArea, int fVerbose )Str_MuxRestructure1744,62570
int Str_MuxRestructAreaThree( Gia_Man_t * pNew, Str_Mux_t * pMux, Vec_Int_t * vDelay, int fVerbose )Str_MuxRestructAreaThree1769,63603
int Str_MuxRestructArea_rec( Gia_Man_t * pNew, Str_Mux_t * pTree, Str_Mux_t * pRoot, int i, Vec_Int_t * vDelay, int fVerbose )Str_MuxRestructArea_rec1784,64235
int Str_MuxRestructureArea( Gia_Man_t * pNew, Str_Ntk_t * pNtk, int iMux, int nMuxes, Vec_Int_t * vDelay, int nLutSize, int fVerbose )Str_MuxRestructureArea1845,66925

src/aig/gia/giaCTas2.c,7158
typedef struct Tas_Par_t_ Tas_Par_t;Tas_Par_t30,775
struct Tas_Par_t_Tas_Par_t_31,812
    int           nBTLimit;     // limit on the number of conflictsnBTLimit34,855
    int           nBTThis;      // number of conflictsnBTThis36,949
    int           nBTTotal;     // total number of conflictsnBTTotal37,1004
    int           fUseHighest;  // use node with the highest IDfUseHighest39,1092
    int           fVerbose;fVerbose41,1180
typedef struct Tas_Sto_t_ Tas_Sto_t;Tas_Sto_t44,1212
struct Tas_Sto_t_Tas_Sto_t_45,1249
    int           iCur;         // currently usediCur47,1269
    int           nSize;        // allocated sizenSize48,1319
    char *        pBuffer;      // handles of objects stored in the queuepBuffer49,1369
typedef struct Tas_Que_t_ Tas_Que_t;Tas_Que_t52,1447
struct Tas_Que_t_Tas_Que_t_53,1484
    int           iHead;        // beginning of the queueiHead55,1504
    int           iTail;        // end of the queueiTail56,1562
    int           nSize;        // allocated sizenSize57,1614
    int *         pData;        // handles of objects stored in the queuepData58,1664
typedef struct Tas_Var_t_ Tas_Var_t;Tas_Var_t61,1742
struct Tas_Var_t_Tas_Var_t_62,1779
    unsigned      fTerm   :  1; // terminal nodefTerm64,1799
    unsigned      fVal    :  1; // current valuefVal65,1848
    unsigned      fValOld :  1; // previous valuefValOld66,1897
    unsigned      fAssign :  1; // assigned statusfAssign67,1947
    unsigned      fJQueue :  1; // part of J-frontierfJQueue68,1998
    unsigned      fCompl0 :  1; // complemented attributefCompl069,2052
    unsigned      fCompl1 :  1; // complemented attributefCompl170,2110
    unsigned      fMark0  :  1; // multi-purpose markfMark071,2168
    unsigned      fMark1  :  1; // multi-purpose markfMark172,2222
    unsigned      fPhase  :  1; // polarityfPhase73,2276
    unsigned      Level   : 22; // decision level Level74,2320
    int           Id;           // unique ID of this variableId75,2371
    int           IdAig;        // original ID of this variableIdAig76,2433
    int           Reason0;      // reason of this variableReason077,2497
    int           Reason1;      // reason of this variableReason178,2556
    int           Diff0;        // difference for the first fanin Diff079,2615
    int           Diff1;        // difference for the second fanin Diff180,2682
    int           Watch0;       // handle of first watchWatch081,2750
    int           Watch1;       // handle of second watch   Watch182,2807
typedef struct Tas_Cls_t_ Tas_Cls_t;Tas_Cls_t85,2872
struct Tas_Cls_t_Tas_Cls_t_86,2909
    int           Watch0;       // next clause to watchWatch088,2929
    int           Watch1;       // next clause to watchWatch189,2985
    int           pVars[0];     // variable handlespVars90,3041
typedef struct Tas_Man_t_ Tas_Man_t;Tas_Man_t93,3098
struct Tas_Man_t_Tas_Man_t_94,3135
    Gia_Man_t *   pAig;         // AIG managerpAig97,3172
    Tas_Par_t     Pars;         // parametersPars98,3219
    Tas_Sto_t *   pVars;        // variablespVars100,3284
    Tas_Sto_t *   pClauses;     // clausespClauses101,3329
    Tas_Que_t     pProp;        // propagation queuepProp103,3400
    Tas_Que_t     pJust;        // justification queuepJust104,3453
    Vec_Int_t *   vModel;       // satisfying assignmentvModel105,3508
    Vec_Ptr_t *   vTemp;        // temporary storagevTemp106,3565
    int           nSatUnsat;    // the number of proofsnSatUnsat108,3646
    int           nSatSat;      // the number of failurenSatSat109,3702
    int           nSatUndec;    // the number of timeoutsnSatUndec110,3759
    int           nSatTotal;    // the number of callsnSatTotal111,3817
    int           nConfUnsat;   // conflicts in unsat problemsnConfUnsat113,3889
    int           nConfSat;     // conflicts in sat problemsnConfSat114,3952
    int           nConfUndec;   // conflicts in undec problemsnConfUndec115,4013
    int           nConfTotal;   // total conflictsnConfTotal116,4076
    clock_t       timeSatUnsat; // unsattimeSatUnsat118,4148
    clock_t       timeSatSat;   // sattimeSatSat119,4189
    clock_t       timeSatUndec; // undecidedtimeSatUndec120,4228
    clock_t       timeTotal;    // total runtimetimeTotal121,4273
static inline int         Tas_VarIsAssigned( Tas_Var_t * pVar )        { return pVar->fAssign;                                      }Tas_VarIsAssigned124,4326
static inline void        Tas_VarAssign( Tas_Var_t * pVar )            { assert(!pVar->fAssign); pVar->fAssign = 1;                 }Tas_VarAssign125,4460
static inline void        Tas_VarUnassign( Tas_Var_t * pVar )          { assert(pVar->fAssign);  pVar->fAssign = 0; pVar->fVal = 0; }Tas_VarUnassign126,4594
static inline int         Tas_VarValue( Tas_Var_t * pVar )             { assert(pVar->fAssign);  return pVar->fVal;                 }Tas_VarValue127,4728
static inline void        Tas_VarSetValue( Tas_Var_t * pVar, int v )   { assert(pVar->fAssign);  pVar->fVal = v;                    }Tas_VarSetValue128,4862
static inline int         Tas_VarIsJust( Tas_Var_t * pVar )            { return Gia_ObjIsAnd(pVar) && !Tas_VarIsAssigned(Gia_ObjFanin0(pVar)) && !Tas_VarIsAssigned(Gia_ObjFanin1(pVar)); } Tas_VarIsJust129,4996
static inline int         Tas_VarFanin0Value( Tas_Var_t * pVar )       { return !Tas_VarIsAssigned(Gia_ObjFanin0(pVar)) ? 2 : (Tas_VarValue(Gia_ObjFanin0(pVar)) ^ Gia_ObjFaninC0(pVar)); }Tas_VarFanin0Value130,5185
static inline int         Tas_VarFanin1Value( Tas_Var_t * pVar )       { return !Tas_VarIsAssigned(Gia_ObjFanin1(pVar)) ? 2 : (Tas_VarValue(Gia_ObjFanin1(pVar)) ^ Gia_ObjFaninC1(pVar)); }Tas_VarFanin1Value131,5373
static inline int         Tas_VarDecLevel( Tas_Man_t * p, Tas_Var_t * pVar )  { assert( pVar->Value != ~0 ); return Vec_IntEntry(p->vLevReas, 3*pVar->Value);          }Tas_VarDecLevel133,5562
static inline Tas_Var_t * Tas_VarReason0( Tas_Man_t * p, Tas_Var_t * pVar )   { assert( pVar->Value != ~0 ); return pVar + Vec_IntEntry(p->vLevReas, 3*pVar->Value+1); }Tas_VarReason0134,5731
static inline Tas_Var_t * Tas_VarReason1( Tas_Man_t * p, Tas_Var_t * pVar )   { assert( pVar->Value != ~0 ); return pVar + Vec_IntEntry(p->vLevReas, 3*pVar->Value+2); }Tas_VarReason1135,5900
static inline int         Tas_ClauseDecLevel( Tas_Man_t * p, int hClause )    { return Tas_VarDecLevel( p, p->pClauses.pData[hClause] );                               }Tas_ClauseDecLevel136,6069
static inline Tas_Var_t * Tas_ManVar( Tas_Man_t * p, int h )           { return (Tas_Var_t *)(p->pVars->pBuffer + h);               }Tas_ManVar138,6239
static inline Tas_Cls_t * Tas_ManClause( Tas_Man_t * p, int h )        { return (Tas_Cls_t *)(p->pClauses->pBuffer + h);            }Tas_ManClause139,6373
#define Tas_ClaForEachVar(Tas_ClaForEachVar141,6508
#define Tas_QueForEachVar(Tas_QueForEachVar144,6704
Tas_Var_t * Tas_ManCreateVar( Tas_Man_t * p )Tas_ManCreateVar163,7340
Tas_Var_t * Tas_ManObj2Var( Tas_Man_t * p, Gia_Obj_t * pObj )Tas_ManObj2Var189,8034

src/aig/gia/giaFx.c,1283
int Gia_ManGraphToAig( Gia_Man_t * p, Dec_Graph_t * pGraph )Gia_ManGraphToAig50,1390
int Gia_ManSopToAig( Gia_Man_t * p, char * pSop, Vec_Int_t * vLeaves )Gia_ManSopToAig70,2361
int Gia_ManFactorGraph( Gia_Man_t * p, Dec_Graph_t * pFForm, Vec_Int_t * vLeaves )Gia_ManFactorGraph99,3353
int Gia_ManFactorNode( Gia_Man_t * p, char * pSop, Vec_Int_t * vLeaves )Gia_ManFactorNode113,3745
Vec_Wrd_t * Gia_ManComputeTruths( Gia_Man_t * p, int nCutSize, int nLutNum, int fReverse )Gia_ManComputeTruths139,4556
int Gia_ManAssignNumbers( Gia_Man_t * p )Gia_ManAssignNumbers179,5963
Vec_Wec_t * Gia_ManFxRetrieve( Gia_Man_t * p, Vec_Str_t ** pvCompl, int fReverse )Gia_ManFxRetrieve190,6245
void Gia_ManFxTopoOrder_rec( Vec_Wec_t * vCubes, Vec_Int_t * vFirst, Vec_Int_t * vCount, Vec_Int_t * vVisit, Vec_Int_t * vOrder, int iObj )Gia_ManFxTopoOrder_rec257,8774
Vec_Int_t * Gia_ManFxTopoOrder( Vec_Wec_t * vCubes, int nInputs, int nStart, Vec_Int_t ** pvFirst, Vec_Int_t ** pvCount )Gia_ManFxTopoOrder274,9527
Gia_Man_t * Gia_ManFxInsert( Gia_Man_t * p, Vec_Wec_t * vCubes, Vec_Str_t * vCompls )Gia_ManFxInsert314,11024
Gia_Man_t * Gia_ManPerformFx( Gia_Man_t * p, int nNewNodesMax, int LitCountMax, int fReverse, int fVerbose, int fVeryVerbose )Gia_ManPerformFx456,16655

src/aig/gia/giaCut.c,5444
#define GIA_MAX_CUTSIZE GIA_MAX_CUTSIZE31,807
#define GIA_MAX_CUTNUM GIA_MAX_CUTNUM32,836
#define GIA_MAX_TT_WORDS GIA_MAX_TT_WORDS33,866
#define GIA_CUT_NO_LEAF GIA_CUT_NO_LEAF35,949
typedef struct Gia_Cut_t_ Gia_Cut_t; Gia_Cut_t37,980
struct Gia_Cut_t_Gia_Cut_t_38,1018
    word            Sign;                      // signatureSign40,1038
    int             iFunc;                     // functionalityiFunc41,1098
    int             Cost;                      // cut costCost42,1162
    int             CostLev;                   // cut costCostLev43,1221
    unsigned        nTreeLeaves  : 28;         // tree leavesnTreeLeaves44,1280
    unsigned        nLeaves      :  4;         // leaf countnLeaves45,1342
    int             pLeaves[GIA_MAX_CUTSIZE];  // leavespLeaves46,1403
typedef struct Gia_Sto_t_ Gia_Sto_t; Gia_Sto_t49,1464
struct Gia_Sto_t_Gia_Sto_t_50,1502
    int             nCutSize;nCutSize52,1522
    int             nCutNum;nCutNum53,1552
    int             fCutMin;fCutMin54,1581
    int             fTruthMin;fTruthMin55,1610
    int             fVerbose;fVerbose56,1641
    Gia_Man_t *     pGia;                      // user's AIG manager (will be modified by adding nodes)pGia57,1671
    Vec_Int_t *     vRefs;                     // refs for each nodevRefs58,1775
    Vec_Wec_t *     vCuts;                     // cuts for each nodevCuts59,1844
    Vec_Mem_t *     vTtMem;                    // truth tablesvTtMem60,1913
    Gia_Cut_t       pCuts[3][GIA_MAX_CUTNUM];  // temporary cutspCuts61,1976
    Gia_Cut_t *     ppCuts[GIA_MAX_CUTNUM];    // temporary cut pointersppCuts62,2041
    int             nCutsR;                    // the number of cutsnCutsR63,2114
    int             Pivot;                     // current objectPivot64,2183
    int             iCutBest;                  // best-delay cutiCutBest65,2248
    int             nCutsOver;                 // overflow cutsnCutsOver66,2313
    double          CutCount[4];               // cut countersCutCount67,2377
    abctime         clkStart;                  // starting timeclkStart68,2440
static inline word * Gia_CutTruth( Gia_Sto_t * p, Gia_Cut_t * pCut ) { return Vec_MemReadEntry(p->vTtMem, Abc_Lit2Var(pCut->iFunc));           }Gia_CutTruth71,2508
#define Sdb_ForEachCut(Sdb_ForEachCut73,2654
static inline word Gia_CutGetSign( Gia_Cut_t * pCut )Gia_CutGetSign90,3248
static inline int Gia_CutCheck( Gia_Cut_t * pBase, Gia_Cut_t * pCut ) // check if pCut is contained in pBaseGia_CutCheck97,3453
static inline int Gia_CutSetCheckArray( Gia_Cut_t ** ppCuts, int nCuts )Gia_CutSetCheckArray113,3904
static inline int Gia_CutMergeOrder( Gia_Cut_t * pCut0, Gia_Cut_t * pCut1, Gia_Cut_t * pCut, int nCutSize )Gia_CutMergeOrder153,4985
static inline int Gia_CutMergeOrder2( Gia_Cut_t * pCut0, Gia_Cut_t * pCut1, Gia_Cut_t * pCut, int nCutSize )Gia_CutMergeOrder2216,6707
static inline int Gia_CutSetCutIsContainedOrder( Gia_Cut_t * pBase, Gia_Cut_t * pCut ) // check if pCut is contained in pBaseGia_CutSetCutIsContainedOrder237,7443
static inline int Gia_CutSetLastCutIsContained( Gia_Cut_t ** pCuts, int nCuts )Gia_CutSetLastCutIsContained263,8168
static inline int Gia_CutCompare( Gia_Cut_t * pCut0, Gia_Cut_t * pCut1 )Gia_CutCompare283,8742
static inline int Gia_CutSetLastCutContains( Gia_Cut_t ** pCuts, int nCuts )Gia_CutSetLastCutContains291,9085
static inline void Gia_CutSetSortByCost( Gia_Cut_t ** pCuts, int nCuts )Gia_CutSetSortByCost309,9745
static inline int Gia_CutSetAddCut( Gia_Cut_t ** pCuts, int nCuts, int nCutNum )Gia_CutSetAddCut319,10022
static inline int Gia_CutComputeTruth6( Gia_Sto_t * p, Gia_Cut_t * pCut0, Gia_Cut_t * pCut1, int fCompl0, int fCompl1, Gia_Cut_t * pCutR, int fIsXor )Gia_CutComputeTruth6341,10588
static inline int Gia_CutComputeTruth( Gia_Sto_t * p, Gia_Cut_t * pCut0, Gia_Cut_t * pCut1, int fCompl0, int fCompl1, Gia_Cut_t * pCutR, int fIsXor )Gia_CutComputeTruth360,11603
static inline int Gia_CutCountBits( word i )Gia_CutCountBits401,13482
static inline void Gia_CutAddUnit( Gia_Sto_t * p, int iObj )Gia_CutAddUnit408,13732
static inline void Gia_CutAddZero( Gia_Sto_t * p, int iObj )Gia_CutAddZero419,14063
static inline int Gia_CutTreeLeaves( Gia_Sto_t * p, Gia_Cut_t * pCut )Gia_CutTreeLeaves427,14310
static inline int Gia_StoPrepareSet( Gia_Sto_t * p, int iObj, int Index )Gia_StoPrepareSet434,14535
static inline void Gia_StoInitResult( Gia_Sto_t * p )Gia_StoInitResult450,15132
static inline void Gia_StoStoreResult( Gia_Sto_t * p, int iObj, Gia_Cut_t ** pCuts, int nCuts )Gia_StoStoreResult456,15285
static inline void Gia_CutPrint( Gia_Sto_t * p, int iObj, Gia_Cut_t * pCut )Gia_CutPrint469,15741
void Gia_StoMergeCuts( Gia_Sto_t * p, int iObj )Gia_StoMergeCuts482,16294
Gia_Sto_t * Gia_StoAlloc( Gia_Man_t * pGia, int nCutSize, int nCutNum, int fCutMin, int fTruthMin, int fVerbose )Gia_StoAlloc549,18749
void Gia_StoFree( Gia_Sto_t * p )Gia_StoFree568,19475
void Gia_StoComputeCutsConst0( Gia_Sto_t * p, int iObj )Gia_StoComputeCutsConst0578,19706
void Gia_StoComputeCutsCi( Gia_Sto_t * p, int iObj )Gia_StoComputeCutsCi582,19798
void Gia_StoComputeCutsNode( Gia_Sto_t * p, int iObj )Gia_StoComputeCutsNode586,19886
void Gia_StoRefObj( Gia_Sto_t * p, int iObj )Gia_StoRefObj590,19978
void Gia_StoComputeCuts( Gia_Man_t * pGia )Gia_StoComputeCuts603,20444

src/aig/gia/giaPat.c,638
static inline int   Sat_ObjXValue( Gia_Obj_t * pObj )          { return (pObj->fMark1 << 1) | pObj->fMark0;             }Sat_ObjXValue30,740
static inline void  Sat_ObjSetXValue( Gia_Obj_t * pObj, int v) { pObj->fMark0 = (v & 1); pObj->fMark1 = ((v >> 1) & 1); }Sat_ObjSetXValue31,862
void Gia_SatCollectCone_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vVisit )Gia_SatCollectCone_rec48,1492
void Gia_SatCollectCone( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vVisit )Gia_SatCollectCone73,2225
void Gia_SatVerifyPattern( Gia_Man_t * p, Gia_Obj_t * pRoot, Vec_Int_t * vCex, Vec_Int_t * vVisit )Gia_SatVerifyPattern93,2845

src/aig/gia/giaBalLut.c,5906
#define BAL_LEAF_MAX BAL_LEAF_MAX33,852
#define BAL_CUT_MAX BAL_CUT_MAX34,878
#define BAL_SUPER BAL_SUPER35,904
#define BAL_NO_LEAF BAL_NO_LEAF36,930
#define BAL_NO_FUNC BAL_NO_FUNC37,956
typedef struct Bal_Cut_t_ Bal_Cut_t; Bal_Cut_t39,1007
struct Bal_Cut_t_Bal_Cut_t_40,1045
    word             Sign;           // signatureSign42,1065
    int              Delay;          // delayDelay43,1115
    unsigned         iFunc   : 27;   // function (BAL_NO_FUNC)iFunc44,1161
    unsigned         nLeaves :  5;   // leaf number (Bal_NO_LEAF)nLeaves45,1224
    int              pLeaves[BAL_LEAF_MAX]; // leavespLeaves46,1290
typedef struct Bal_Man_t_ Bal_Man_t;Bal_Man_t50,1369
struct Bal_Man_t_Bal_Man_t_51,1406
    Gia_Man_t *      pGia;           // user AIGpGia53,1426
    int              nLutSize;       // LUT sizenLutSize54,1475
    int              nCutNum;        // cut numbernCutNum55,1524
    int              fCutMin;        // cut minimizationfCutMin56,1575
    int              fVerbose;       // verbosefVerbose57,1632
    Gia_Man_t *      pNew;           // derived AIGpNew58,1680
    Vec_Int_t *      vCosts;         // cost of supergate nodesvCosts59,1732
    Vec_Ptr_t *      vCutSets;       // object cutsetsvCutSets60,1796
    abctime          clkStart;       // starting the clockclkStart61,1851
static inline Bal_Man_t * Bal_GiaMan( Gia_Man_t * p )                   { return (Bal_Man_t *)p->pData;           }Bal_GiaMan64,1914
static inline int         Bal_ObjCost( Bal_Man_t * p, int i )           { return Vec_IntEntry(p->vCosts, i);      }Bal_ObjCost66,2031
static inline int         Bal_LitCost( Bal_Man_t * p, int i )           { return Bal_ObjCost(p, Abc_Lit2Var(i));  }Bal_LitCost67,2147
static inline int         Bal_ObjDelay( Bal_Man_t * p, int i )          { return Bal_ObjCost(p, i) >> 4;          }Bal_ObjDelay68,2263
static inline int         Bal_LitDelay( Bal_Man_t * p, int i )          { return Bal_ObjDelay(p, Abc_Lit2Var(i)); }Bal_LitDelay69,2379
Bal_Man_t * Bal_ManAlloc( Gia_Man_t * pGia, Gia_Man_t * pNew, int nLutSize, int nCutNum, int fVerbose )Bal_ManAlloc86,2935
void Bal_ManFree( Bal_Man_t * p )Bal_ManFree103,3534
static inline int Bal_CutCountBits( word i )Bal_CutCountBits121,3877
static inline word Bal_CutGetSign( int * pLeaves, int nLeaves )Bal_CutGetSign128,4127
static inline int Bal_CutCreateUnit( Bal_Cut_t * p, int i, int Delay )Bal_CutCreateUnit135,4325
static inline int Bal_ManPrepareSet( Bal_Man_t * p, int iObj, int Index, int fUnit, Bal_Cut_t ** ppCutSet )Bal_ManPrepareSet144,4536
static inline int Bal_CutCheck( Bal_Cut_t * pBase, Bal_Cut_t * pCut ) // check if pCut is contained in pBaseBal_CutCheck168,5299
static inline int Bal_SetCheckArray( Bal_Cut_t ** ppCuts, int nCuts )Bal_SetCheckArray184,5750
static inline int Bal_CutMergeOrder( Bal_Cut_t * pCut0, Bal_Cut_t * pCut1, Bal_Cut_t * pCut, int nLutSize )Bal_CutMergeOrder223,6849
static inline int Bal_CutMergeOrderMux( Bal_Cut_t * pCut0, Bal_Cut_t * pCut1, Bal_Cut_t * pCut2, Bal_Cut_t * pCut, int nLutSize )Bal_CutMergeOrderMux287,8704
static inline int Bal_SetCutIsContainedOrder( Bal_Cut_t * pBase, Bal_Cut_t * pCut ) // check if pCut is contained in pBaseBal_SetCutIsContainedOrder312,9741
static inline int Bal_SetLastCutIsContained( Bal_Cut_t ** pCuts, int nCuts )Bal_SetLastCutIsContained338,10463
static inline int Bal_SetLastCutContains( Bal_Cut_t ** pCuts, int nCuts )Bal_SetLastCutContains346,10796
static inline int Bal_CutCompareArea( Bal_Cut_t * pCut0, Bal_Cut_t * pCut1 )Bal_CutCompareArea364,11442
static inline void Bal_SetSortByDelay( Bal_Cut_t ** pCuts, int nCuts )Bal_SetSortByDelay372,11757
static inline int Bal_SetAddCut( Bal_Cut_t ** pCuts, int nCuts, int nCutNum )Bal_SetAddCut382,12036
int Bal_ManDeriveCuts( Bal_Man_t * p, int iFan0, int iFan1, int iFan2, int fCompl0, int fCompl1, int fCompl2, int fUnit0, int fUnit1, int fUnit2, int fIsXor, int Target, int fSave )Bal_ManDeriveCuts402,12517
int Bal_ManSetGateLevel( Bal_Man_t * p, Gia_Obj_t * pObjOld, int iLitNew )Bal_ManSetGateLevel486,16084
int Bal_ManEvalTwo( Bal_Man_t * p, int iLitNew0, int iLitNew1, int iLitNew2, int fIsXor )Bal_ManEvalTwo526,17677
static inline void Vec_IntSelectSortCostLit( Vec_Int_t * vSuper, Vec_Int_t * vCosts )Vec_IntSelectSortCostLit557,18823
static inline void Vec_IntPushOrderCost2( Vec_Int_t * vSuper, Vec_Int_t * vCosts, int iLit )Vec_IntPushOrderCost2571,19317
static inline int Vec_IntFindFirstSameDelayAsLast( Bal_Man_t * p, Vec_Int_t * vSuper )Vec_IntFindFirstSameDelayAsLast584,19774
static inline int Bal_ManFindBestPair( Bal_Man_t * p, Vec_Int_t * vSuper, Gia_Obj_t * pObj )Bal_ManFindBestPair610,20476
static inline void Gia_ManSimplifyXor( Vec_Int_t * vSuper )Gia_ManSimplifyXor674,22523
static inline void Gia_ManSimplifyAnd( Vec_Int_t * vSuper )Gia_ManSimplifyAnd694,23135
static inline void Gia_ManSuperCollectXor_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuperCollectXor_rec724,23996
static inline void Gia_ManSuperCollectAnd_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuperCollectAnd_rec740,24679
static inline void Gia_ManSuperCollect( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSuperCollect755,25303
static inline void Gia_ManCreateGate( Gia_Man_t * pNew, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Gia_ManCreateGate800,26738
static inline int Gia_ManBalanceGate( Gia_Man_t * pNew, Gia_Obj_t * pObj, Vec_Int_t * vSuper, int * pLits, int nLits )Gia_ManBalanceGate825,27729
static inline void Gia_ManBalance_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManBalance_rec875,29391
static inline Gia_Man_t * Gia_ManBalanceInt( Gia_Man_t * p, int nLutSize, int nCutNum, int fVerbose )Gia_ManBalanceInt912,30923
Gia_Man_t * Gia_ManBalanceLut( Gia_Man_t * p, int nLutSize, int nCutNum, int fVerbose )Gia_ManBalanceLut959,32613

src/aig/gia/giaMini.c,3556
int Gia_ObjFromMiniFanin0Copy( Gia_Man_t * pGia, Vec_Int_t * vCopies, Mini_Aig_t * p, int Id )Gia_ObjFromMiniFanin0Copy50,1409
int Gia_ObjFromMiniFanin1Copy( Gia_Man_t * pGia, Vec_Int_t * vCopies, Mini_Aig_t * p, int Id )Gia_ObjFromMiniFanin1Copy55,1642
Gia_Man_t * Gia_ManFromMiniAig( Mini_Aig_t * p, Vec_Int_t ** pvCopies )Gia_ManFromMiniAig60,1875
Mini_Aig_t * Gia_ManToMiniAig( Gia_Man_t * pGia )Gia_ManToMiniAig111,3562
void Abc_FrameGiaInputMiniAig( Abc_Frame_t * pAbc, void * p )Abc_FrameGiaInputMiniAig144,4557
void * Abc_FrameGiaOutputMiniAig( Abc_Frame_t * pAbc )Abc_FrameGiaOutputMiniAig156,5011
Gia_Man_t * Gia_ManReadMiniAig( char * pFileName )Gia_ManReadMiniAig178,5650
void Gia_ManWriteMiniAig( Gia_Man_t * pGia, char * pFileName )Gia_ManWriteMiniAig187,5931
Gia_Man_t * Gia_ManFromMiniLut( Mini_Lut_t * p, Vec_Int_t ** pvCopies )Gia_ManFromMiniLut209,6423
Vec_Bit_t * Gia_ManFindComplLuts( Gia_Man_t * pGia )Gia_ManFindComplLuts276,8789
Mini_Lut_t * Gia_ManToMiniLut( Gia_Man_t * pGia )Gia_ManToMiniLut302,9703
char * Gia_ManToMiniLutAttr( Gia_Man_t * pGia, void * pMiniLut )Gia_ManToMiniLutAttr385,12972
void Abc_FrameGiaInputMiniLut( Abc_Frame_t * pAbc, void * p )Abc_FrameGiaInputMiniLut406,13591
void * Abc_FrameGiaOutputMiniLut( Abc_Frame_t * pAbc )Abc_FrameGiaOutputMiniLut415,13905
char * Abc_FrameGiaOutputMiniLutAttr( Abc_Frame_t * pAbc, void * pMiniLut )Abc_FrameGiaOutputMiniLutAttr430,14460
Gia_Man_t * Gia_ManReadMiniLut( char * pFileName )Gia_ManReadMiniLut452,15134
void Gia_ManWriteMiniLut( Gia_Man_t * pGia, char * pFileName )Gia_ManWriteMiniLut461,15415
int * Gia_ManMapMiniLut2MiniAig( Gia_Man_t * p, Gia_Man_t * p1, Gia_Man_t * p2, Vec_Int_t * vMap1, Vec_Int_t * vMap2 )Gia_ManMapMiniLut2MiniAig479,15821
void Gia_ManNameMapVerify( Gia_Man_t * p, Gia_Man_t * p1, Gia_Man_t * p2, Vec_Int_t * vMap1, Vec_Int_t * vMap2, int * pMap )Gia_ManNameMapVerify535,17743
int * Abc_FrameReadMiniLutNameMapping( Abc_Frame_t * pAbc )Abc_FrameReadMiniLutNameMapping564,19129
Vec_Int_t * Gia_ManMapEquivAfterScorr( Gia_Man_t * p, Vec_Int_t * vMap )Gia_ManMapEquivAfterScorr611,21285
int * Abc_FrameReadMiniAigEquivClasses( Abc_Frame_t * pAbc )Abc_FrameReadMiniAigEquivClasses648,22636
Gia_Man_t * Gia_MiniAigReduce( Mini_Aig_t * p, int * pEquivs )Gia_MiniAigReduce680,23822
Gia_Man_t * Gia_MiniAigMiter( Mini_Aig_t * p, int * pEquivs )Gia_MiniAigMiter716,25255
void Gia_MiniAigVerify( Abc_Frame_t * pAbc, char * pFileName )Gia_MiniAigVerify775,27389
void Gia_MiniAigSuperGates_rec( Mini_Aig_t * p, int iObj, Vec_Int_t * vRes, Vec_Int_t * vMap )Gia_MiniAigSuperGates_rec811,28553
Vec_Wec_t * Gia_MiniAigSuperGates( Mini_Aig_t * p )Gia_MiniAigSuperGates827,29141
void Gia_MiniAigSuperPrintDouble( Vec_Int_t * p, int nPis )Gia_MiniAigSuperPrintDouble858,30027
int Gia_MiniAigSuperMerge( Vec_Int_t * p, int nPis )Gia_MiniAigSuperMerge866,30269
int Gia_MiniAigSuperPreprocess( Mini_Aig_t * p, Vec_Wec_t * vSuper, int nPis, int fVerbose )Gia_MiniAigSuperPreprocess889,30846
Gia_Man_t * Gia_MiniAigSuperDeriveGia( Vec_Wec_t * p, int nPis, int Multi )Gia_MiniAigSuperDeriveGia923,31778
Gia_Man_t * Gia_MiniAigSuperDerive( char * pFileName, int fVerbose )Gia_MiniAigSuperDerive951,32712
Vec_Int_t * Gia_MiniAigProcessFile()Gia_MiniAigProcessFile973,33386
void Gia_MiniAigGenerate_rec( Mini_Aig_t * p, Vec_Int_t * vTriples, int iObj, Vec_Int_t * vDefs, Vec_Int_t * vMap )Gia_MiniAigGenerate_rec1005,34356
void Gia_MiniAigGenerateFromFile()Gia_MiniAigGenerateFromFile1021,35128

src/aig/gia/gia.c,3503
typedef struct Slv_Man_t_ Slv_Man_t;Slv_Man_t30,741
struct Slv_Man_t_Slv_Man_t_31,778
    Vec_Int_t      vCis;vCis33,798
    Vec_Int_t      vCos;vCos34,823
    Vec_Int_t      vFanins;vFanins35,848
    Vec_Int_t      vFanoutN;vFanoutN36,876
    Vec_Int_t      vFanout0;vFanout037,905
    Vec_Str_t      vValues;vValues38,934
    Vec_Int_t      vCopies;vCopies39,962
static inline int  Slv_ManObjNum       ( Slv_Man_t * p )                      { return Vec_IntSize(&p->vFanins)/2;                       }Slv_ManObjNum42,994
static inline int  Slv_ObjFaninLit     ( Slv_Man_t * p, int iObj, int f )     { return Vec_IntEntry(&p->vFanins, Abc_Var2Lit(iObj, f));  }Slv_ObjFaninLit44,1134
static inline int  Slv_ObjFanin        ( Slv_Man_t * p, int iObj, int f )     { return Abc_Lit2Var(Slv_ObjFaninLit(p, iObj, f));         }Slv_ObjFanin45,1273
static inline int  Slv_ObjFaninC       ( Slv_Man_t * p, int iObj, int f )     { return Abc_LitIsCompl(Slv_ObjFaninLit(p, iObj, f));      }Slv_ObjFaninC46,1412
static inline int  Slv_ObjIsCi         ( Slv_Man_t * p, int iObj )            { return !Slv_ObjFaninLit(p, iObj, 0) &&  Slv_ObjFaninLit(p, iObj, 1);  }Slv_ObjIsCi48,1552
static inline int  Slv_ObjIsCo         ( Slv_Man_t * p, int iObj )            { return  Slv_ObjFaninLit(p, iObj, 0) && !Slv_ObjFaninLit(p, iObj, 1);  }Slv_ObjIsCo49,1704
static inline int  Slv_ObjIsAnd        ( Slv_Man_t * p, int iObj )            { return  Slv_ObjFaninLit(p, iObj, 0) &&  Slv_ObjFaninLit(p, iObj, 1);  }Slv_ObjIsAnd50,1856
static inline int  Slv_ObjFanout0      ( Slv_Man_t * p, int iObj )            { return Vec_IntEntry(&p->vFanout0, iObj);      }Slv_ObjFanout052,2009
static inline void Slv_ObjSetFanout0   ( Slv_Man_t * p, int iObj, int iLit )  { Vec_IntWriteEntry(&p->vFanout0, iObj, iLit);  }Slv_ObjSetFanout053,2137
static inline int  Slv_ObjNextFanout   ( Slv_Man_t * p, int iLit )            { return Vec_IntEntry(&p->vFanoutN, iLit);      }Slv_ObjNextFanout55,2266
static inline void Slv_ObjSetNextFanout( Slv_Man_t * p, int iLit, int iLitF ) { Vec_IntWriteEntry(&p->vFanoutN, iLit, iLitF); }Slv_ObjSetNextFanout56,2394
static inline int  Slv_ObjCopyLit      ( Slv_Man_t * p, int iObj )            { return Vec_IntEntry(&p->vCopies, iObj);       }Slv_ObjCopyLit58,2523
static inline void Slv_ObjSetCopyLit   ( Slv_Man_t * p, int iObj, int iLit )  { Vec_IntWriteEntry(&p->vCopies, iObj, iLit);   }Slv_ObjSetCopyLit59,2651
#define Slv_ManForEachObj(Slv_ManForEachObj61,2780
#define Slv_ObjForEachFanout(Slv_ObjForEachFanout64,2907
Slv_Man_t * Slv_ManAlloc( int nObjs )Slv_ManAlloc82,3530
void Slv_ManFree( Slv_Man_t * p )Slv_ManFree97,4012
void Slv_ManPrintFanouts( Slv_Man_t * p )Slv_ManPrintFanouts108,4307
static inline int Slv_ManAppendObj( Slv_Man_t * p, int iLit0, int iLit1 )Slv_ManAppendObj119,4593
Slv_Man_t * Slv_ManFromGia( Gia_Man_t * p )Slv_ManFromGia151,5714
Gia_Man_t * Slv_ManToGia( Slv_Man_t * p )Slv_ManToGia170,6513
Gia_Man_t * Slv_ManToAig( Gia_Man_t * pGia )Slv_ManToAig194,7533
Gia_Man_t * Gia_ManCofPisVars( Gia_Man_t * p, int nVars )Gia_ManCofPisVars218,8072
void Gia_ManStructExperiment( Gia_Man_t * p )Gia_ManStructExperiment263,9353
int Gia_EnumFirstUnused( int * pUsed, int nVars )Gia_EnumFirstUnused311,10860
void Gia_EnumPerms_rec( int * pUsed, int nVars, int * pPerm, int nPerm, int * pCount, FILE * pFile, int nLogVars )Gia_EnumPerms_rec319,11025
void Gia_EnumPerms( int nVars )Gia_EnumPerms367,12449

src/aig/gia/giaStg.c,864
void Gia_ManPrintStateEncoding( Vec_Vec_t * vCodes, int nBits )Gia_ManPrintStateEncoding46,1224
int Gia_ManCreateOrGate( Gia_Man_t * p, Vec_Int_t * vLits )Gia_ManCreateOrGate78,1985
Vec_Vec_t * Gia_ManAssignCodes( int kHot, int nStates, int * pnBits )Gia_ManAssignCodes109,2829
Gia_Man_t * Gia_ManStgKHot( Vec_Int_t * vLines, int nIns, int nOuts, int nStates, int kHot, int fVerbose )Gia_ManStgKHot215,6049
Gia_Man_t * Gia_ManStgOneHot( Vec_Int_t * vLines, int nIns, int nOuts, int nStates )Gia_ManStgOneHot317,9322
void Gia_ManStgPrint( FILE * pFile, Vec_Int_t * vLines, int nIns, int nOuts, int nStates )Gia_ManStgPrint407,12252
Vec_Int_t * Gia_ManStgReadLines( char * pFileName, int * pnIns, int * pnOuts, int * pnStates )Gia_ManStgReadLines440,13488
Gia_Man_t * Gia_ManStgRead( char * pFileName, int kHot, int fVerbose )Gia_ManStgRead508,15523

src/aig/gia/giaAiger.c,1485
#define XAIG_VERBOSE XAIG_VERBOSE28,703
void Gia_FileFixName( char * pFileName )Gia_FileFixName49,1386
char * Gia_FileNameGeneric( char * FileName )Gia_FileNameGeneric56,1552
int Gia_FileSize( char * pFileName )Gia_FileSize64,1743
void Gia_FileWriteBufferSize( FILE * pFile, int nSize )Gia_FileWriteBufferSize79,2105
Vec_Int_t * Gia_AigerCollectLiterals( Gia_Man_t * p )Gia_AigerCollectLiterals97,2534
Vec_Int_t * Gia_AigerReadLiterals( unsigned char ** ppPos, int nEntries )Gia_AigerReadLiterals109,2897
Vec_Str_t * Gia_AigerWriteLiterals( Vec_Int_t * vLits )Gia_AigerWriteLiterals129,3543
Gia_Man_t * Gia_AigerReadFromMemory( char * pContents, int nFileSize, int fGiaSimple, int fSkipStrash, int fCheck )Gia_AigerReadFromMemory176,5046
Gia_Man_t * Gia_AigerRead( char * pFileName, int fGiaSimple, int fSkipStrash, int fCheck )Gia_AigerRead883,33824
Vec_Str_t * Gia_AigerWriteIntoMemoryStr( Gia_Man_t * p )Gia_AigerWriteIntoMemoryStr928,35096
Vec_Str_t * Gia_AigerWriteIntoMemoryStrPart( Gia_Man_t * p, Vec_Int_t * vCis, Vec_Int_t * vAnds, Vec_Int_t * vCos, int nRegs )Gia_AigerWriteIntoMemoryStrPart1002,37716
void Gia_AigerWrite( Gia_Man_t * pInit, char * pFileName, int fWriteSymbols, int fCompact, int fWriteNewLine )Gia_AigerWrite1086,40556
void Gia_DumpAiger( Gia_Man_t * p, char * pFilePrefix, int iFileNum, int nFileNumDigits )Gia_DumpAiger1439,53188
void Gia_AigerWriteSimple( Gia_Man_t * pInit, char * pFileName )Gia_AigerWriteSimple1457,53686

src/aig/gia/giaEdge.c,2932
static inline int Gia_ObjEdgeCount( int iObj, Vec_Int_t * vEdge1, Vec_Int_t * vEdge2 )Gia_ObjEdgeCount30,797
static inline int Gia_ObjEdgeAdd( int iObj, int iNext, Vec_Int_t * vEdge1, Vec_Int_t * vEdge2 )Gia_ObjEdgeAdd34,968
static inline void Gia_ObjEdgeRemove( int iObj, int iNext, Vec_Int_t * vEdge1, Vec_Int_t * vEdge2 )Gia_ObjEdgeRemove44,1321
static inline void Gia_ObjEdgeClean( int iObj, Vec_Int_t * vEdge1, Vec_Int_t * vEdge2 )Gia_ObjEdgeClean51,1675
void Gia_ManEdgeFromArray( Gia_Man_t * p, Vec_Int_t * vArray )Gia_ManEdgeFromArray72,2333
Vec_Int_t * Gia_ManEdgeToArray( Gia_Man_t * p )Gia_ManEdgeToArray88,2936
void Gia_ManConvertPackingToEdges( Gia_Man_t * p )Gia_ManConvertPackingToEdges118,3839
static inline int Gia_ObjHaveEdge( Gia_Man_t * p, int iObj, int iNext )Gia_ObjHaveEdge168,5520
int Gia_ObjCheckEdge( Gia_Man_t * p, int iObj, int iNext )Gia_ObjCheckEdge172,5689
static inline int Gia_ObjEvalEdgeDelay( Gia_Man_t * p, int iObj, Vec_Int_t * vDelay )Gia_ObjEvalEdgeDelay176,5798
int Gia_ManEvalEdgeDelay( Gia_Man_t * p )Gia_ManEvalEdgeDelay201,6657
int Gia_ManEvalEdgeCount( Gia_Man_t * p )Gia_ManEvalEdgeCount284,10014
int Gia_ObjComputeEdgeDelay( Gia_Man_t * p, int iObj, Vec_Int_t * vDelay, Vec_Int_t * vEdge1, Vec_Int_t * vEdge2, int fUseTwo )Gia_ObjComputeEdgeDelay301,10400
int Gia_ManComputeEdgeDelay( Gia_Man_t * p, int fUseTwo )Gia_ManComputeEdgeDelay390,13423
int Gia_ObjComputeEdgeDelay2( Gia_Man_t * p, int iObj, Vec_Int_t * vDelay, Vec_Int_t * vEdge1, Vec_Int_t * vEdge2, Vec_Int_t * vFanMax1, Vec_Int_t * vFanMax2, Vec_Int_t * vCountMax )Gia_ObjComputeEdgeDelay2489,17250
int Gia_ManComputeEdgeDelay2( Gia_Man_t * p )Gia_ManComputeEdgeDelay2568,20149
void Gia_ManUpdateMapping( Gia_Man_t * p, Vec_Int_t * vNodes, Vec_Wec_t * vWin )Gia_ManUpdateMapping610,21794
int Gia_ManEvalWindowInc( Gia_Man_t * p, Vec_Int_t * vLeaves, Vec_Int_t * vNodes, Vec_Wec_t * vWin, Vec_Int_t * vTemp, int fUseTwo )Gia_ManEvalWindowInc616,22032
int Gia_ManEvalWindow( Gia_Man_t * p, Vec_Int_t * vLeaves, Vec_Int_t * vNodes, Vec_Wec_t * vWin, Vec_Int_t * vTemp, int fUseTwo )Gia_ManEvalWindow633,22714
void Edg_ManToMapping( Gia_Man_t * p )Edg_ManToMapping657,23325
static inline int Edg_ObjEvalEdgeDelay( Gia_Man_t * p, int iObj, Vec_Int_t * vDelay )Edg_ObjEvalEdgeDelay687,24158
int Edg_ManEvalEdgeDelay( Gia_Man_t * p )Edg_ManEvalEdgeDelay701,24666
static inline int Edg_ObjEvalEdgeDelayR( Gia_Man_t * p, int iObj, Vec_Int_t * vDelay )Edg_ObjEvalEdgeDelayR718,25181
int Edg_ManEvalEdgeDelayR( Gia_Man_t * p )Edg_ManEvalEdgeDelayR732,25692
void Edg_ManCollectCritEdges( Gia_Man_t * p, Vec_Wec_t * vEdges, int DelayMax )Edg_ManCollectCritEdges752,26362
int Edg_ObjImprove( Gia_Man_t * p, int iObj, int nEdgeLimit, int DelayMax, int fVerbose )Edg_ObjImprove785,27353
int Edg_ManAssignEdgeNew( Gia_Man_t * p, int nEdges, int fVerbose )Edg_ManAssignEdgeNew919,31824

src/aig/gia/giaSweeper.c,5887
typedef struct Swp_Man_t_ Swp_Man_t;Swp_Man_t56,2458
struct Swp_Man_t_Swp_Man_t_57,2495
    Gia_Man_t *    pGia;        // GIA manager under constructionpGia59,2515
    int            nConfMax;    // conflict limit in secondsnConfMax60,2581
    int            nTimeOut;    // runtime limit in secondsnTimeOut61,2642
    Vec_Int_t *    vProbes;     // probesvProbes62,2702
    Vec_Int_t *    vCondProbes; // conditions as probesvCondProbes63,2744
    Vec_Int_t *    vCondAssump; // conditions as SAT solver literalsvCondAssump64,2800
    sat_solver *   pSat;        // SAT solver pSat66,2897
    Vec_Int_t *    vId2Lit;     // mapping of Obj IDs into SAT literalvId2Lit67,2944
    Vec_Int_t *    vFront;      // temporary frontiervFront68,3015
    Vec_Int_t *    vFanins;     // temporary faninsvFanins69,3069
    Vec_Int_t *    vCexSwp;     // sweeper counter-examplevCexSwp70,3121
    Vec_Int_t *    vCexUser;    // user-visible counter-examplevCexUser71,3180
    int            nSatVars;    // counter of SAT variablesnSatVars72,3244
    int            nSatCalls;nSatCalls74,3322
    int            nSatCallsSat;nSatCallsSat75,3352
    int            nSatCallsUnsat;nSatCallsUnsat76,3385
    int            nSatCallsUndec;nSatCallsUndec77,3420
    int            nSatProofs;nSatProofs78,3455
    abctime        timeStart;timeStart79,3486
    abctime        timeTotal;timeTotal80,3516
    abctime        timeCnf;timeCnf81,3546
    abctime        timeSat;timeSat82,3574
    abctime        timeSatSat;timeSatSat83,3602
    abctime        timeSatUnsat;timeSatUnsat84,3633
    abctime        timeSatUndec;timeSatUndec85,3666
static inline int  Swp_ManObj2Lit( Swp_Man_t * p, int Id )              { return Vec_IntGetEntry( p->vId2Lit, Id );              }Swp_ManObj2Lit88,3703
static inline int  Swp_ManLit2Lit( Swp_Man_t * p, int Lit )             { assert( Vec_IntEntry(p->vId2Lit, Abc_Lit2Var(Lit)) ); return Abc_Lit2LitL( Vec_IntArray(p->vId2Lit), Lit );  }Swp_ManLit2Lit89,3834
static inline void Swp_ManSetObj2Lit( Swp_Man_t * p, int Id, int Lit )  { assert( Lit > 0 ); Vec_IntSetEntry( p->vId2Lit, Id, Lit );                }Swp_ManSetObj2Lit90,4019
static inline Swp_Man_t * Swp_ManStart( Gia_Man_t * pGia )Swp_ManStart107,4658
static inline void Swp_ManStop( Gia_Man_t * pGia )Swp_ManStop131,5511
Gia_Man_t * Gia_SweeperStart( Gia_Man_t * pGia )Gia_SweeperStart145,5913
void Gia_SweeperStop( Gia_Man_t * pGia )Gia_SweeperStop157,6268
int Gia_SweeperIsRunning( Gia_Man_t * pGia )Gia_SweeperIsRunning164,6418
double Gia_SweeperMemUsage( Gia_Man_t * pGia )Gia_SweeperMemUsage168,6501
void Gia_SweeperPrintStats( Gia_Man_t * pGia )Gia_SweeperPrintStats181,6917
void Gia_SweeperSetConflictLimit( Gia_Man_t * p, int nConfMax )Gia_SweeperSetConflictLimit220,8564
void Gia_SweeperSetRuntimeLimit( Gia_Man_t * p, int nSeconds )Gia_SweeperSetRuntimeLimit225,8709
Vec_Int_t * Gia_SweeperGetCex( Gia_Man_t * p )Gia_SweeperGetCex230,8853
int Gia_SweeperProbeCreate( Gia_Man_t * p, int iLit )Gia_SweeperProbeCreate249,9324
int Gia_SweeperProbeDelete( Gia_Man_t * p, int ProbeId )Gia_SweeperProbeDelete258,9584
int Gia_SweeperProbeUpdate( Gia_Man_t * p, int ProbeId, int iLitNew )Gia_SweeperProbeUpdate267,9862
int Gia_SweeperProbeLit( Gia_Man_t * p, int ProbeId )Gia_SweeperProbeLit276,10178
Vec_Int_t * Gia_SweeperCollectValidProbeIds( Gia_Man_t * p )Gia_SweeperCollectValidProbeIds295,10681
void Gia_SweeperCondPush( Gia_Man_t * p, int ProbeId )Gia_SweeperCondPush319,11267
int Gia_SweeperCondPop( Gia_Man_t * p )Gia_SweeperCondPop324,11419
Vec_Int_t * Gia_SweeperCondVector( Gia_Man_t * p )Gia_SweeperCondVector329,11553
static void Gia_ManExtract_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vObjIds )Gia_ManExtract_rec347,11920
Gia_Man_t * Gia_SweeperExtractUserLogic( Gia_Man_t * p, Vec_Int_t * vProbeIds, Vec_Ptr_t * vInNames, Vec_Ptr_t * vOutNames )Gia_SweeperExtractUserLogic358,12321
void Gia_SweeperLogicDump( Gia_Man_t * p, Vec_Int_t * vProbeIds, int fDumpConds, char * pFileName )Gia_SweeperLogicDump428,14727
Gia_Man_t * Gia_SweeperCleanup( Gia_Man_t * p, char * pCommLime )Gia_SweeperCleanup461,16050
static void Gia_ManAddClausesMux( Swp_Man_t * p, Gia_Obj_t * pNode )Gia_ManAddClausesMux543,18833
static void Gia_ManAddClausesSuper( Swp_Man_t * p, Gia_Obj_t * pNode, Vec_Int_t * vSuper )Gia_ManAddClausesSuper622,21314
static void Gia_ManCollectSuper_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Gia_ManCollectSuper_rec659,22507
static void Gia_ManCollectSuper( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Gia_ManCollectSuper670,22963
static void Gia_ManObjAddToFrontier( Swp_Man_t * p, int Id, Vec_Int_t * vFront )Gia_ManObjAddToFrontier690,23536
static void Gia_ManCnfNodeAddToSolver( Swp_Man_t * p, int NodeId )Gia_ManCnfNodeAddToSolver701,23935
static Vec_Int_t * Gia_ManGetCex( Gia_Man_t * pGia, Vec_Int_t * vId2Lit, sat_solver * pSat, Vec_Int_t * vCex )Gia_ManGetCex753,25740
int Gia_SweeperCheckEquiv( Gia_Man_t * pGia, int Probe1, int Probe2 )Gia_SweeperCheckEquiv789,26729
int Gia_SweeperCondCheckUnsat( Gia_Man_t * pGia )Gia_SweeperCondCheckUnsat924,31332
Vec_Int_t * Gia_SweeperGraft( Gia_Man_t * pDst, Vec_Int_t * vProbes, Gia_Man_t * pSrc )Gia_SweeperGraft985,33272
Gia_Man_t * Gia_SweeperSweep( Gia_Man_t * p, Vec_Int_t * vProbeOuts, int nWords, int nConfs, int fVerify, int fVerbose )Gia_SweeperSweep1017,34489
int Gia_SweeperFraig( Gia_Man_t * p, Vec_Int_t * vProbeIds, char * pCommLime, int nWords, int nConfs, int fVerify, int fVerbose )Gia_SweeperFraig1064,36608
int Gia_SweeperRun( Gia_Man_t * p, Vec_Int_t * vProbeIds, char * pCommLime, int fVerbose )Gia_SweeperRun1106,38057
Gia_Man_t * Gia_SweeperFraigTest( Gia_Man_t * pInit, int nWords, int nConfs, int fVerbose )Gia_SweeperFraigTest1152,39626

src/aig/gia/giaTruth.c,4620
static word s_Truth6[6] = {s_Truth634,890
static inline word * Gla_ObjTruthElem( Gia_Man_t * p, int i )            { return (word *)Vec_PtrEntry( p->vTtInputs, i );                                           }Gla_ObjTruthElem43,1131
static inline word * Gla_ObjTruthNodeId( Gia_Man_t * p, int Id )         { return Vec_WrdArray(p->vTtMemory) + p->nTtWords * Id;                                     }Gla_ObjTruthNodeId44,1298
static inline word * Gla_ObjTruthNode( Gia_Man_t * p, Gia_Obj_t * pObj ) { return Vec_WrdArray(p->vTtMemory) + p->nTtWords * Gia_ObjNum(p, pObj);                    }Gla_ObjTruthNode45,1465
static inline word * Gla_ObjTruthFree1( Gia_Man_t * p )                  { return Vec_WrdArray(p->vTtMemory) + Vec_WrdSize(p->vTtMemory) - p->nTtWords * 1;          }Gla_ObjTruthFree146,1632
static inline word * Gla_ObjTruthFree2( Gia_Man_t * p )                  { return Vec_WrdArray(p->vTtMemory) + Vec_WrdSize(p->vTtMemory) - p->nTtWords * 2;          }Gla_ObjTruthFree247,1799
static inline word * Gla_ObjTruthConst0( Gia_Man_t * p, word * pDst )                   { int w; for ( w = 0; w < p->nTtWords; w++ ) pDst[w] = 0; return pDst;                      }Gla_ObjTruthConst048,1966
static inline word * Gla_ObjTruthDup( Gia_Man_t * p, word * pDst, word * pSrc, int c )  { int w; for ( w = 0; w < p->nTtWords; w++ ) pDst[w] = c ? ~pSrc[w] : pSrc[w]; return pDst; }Gla_ObjTruthDup49,2148
word Gia_LutComputeTruth6Simple_rec( Gia_Man_t * p, int iObj )Gia_LutComputeTruth6Simple_rec66,2805
word Gia_LutComputeTruth6Simple( Gia_Man_t * p, int iPo )Gia_LutComputeTruth6Simple81,3427
word Gia_LutComputeTruth6Map_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vMap )Gia_LutComputeTruth6Map_rec88,3665
word Gia_LutComputeTruth6Map( Gia_Man_t * p, int iPo, Vec_Int_t * vMap )Gia_LutComputeTruth6Map103,4328
static unsigned s_Truths5[5] = {s_Truths5121,4855
static inline int Abc_Tt5HasVar( unsigned t, int iVar )Abc_Tt5HasVar128,4971
static inline unsigned Abc_Tt5Cofactor0( unsigned t, int iVar )Abc_Tt5Cofactor0132,5105
static inline unsigned Abc_Tt5Cofactor1( unsigned t, int iVar )Abc_Tt5Cofactor1137,5285
int Gia_Truth5ToGia( Gia_Man_t * p, int * pVarLits, int nVars, unsigned Truth, int fHash )Gia_Truth5ToGia142,5463
int Gia_Truth6ToGia( Gia_Man_t * p, int * pVarLits, int nVars, word Truth, int fHash )Gia_Truth6ToGia175,6460
void Gia_Truth6ToGiaTest( Gia_Man_t * p )Gia_Truth6ToGiaTest196,7181
word Gia_LutComputeTruth6_rec( Gia_Man_t * p, int iNode, Vec_Wrd_t * vTruths )Gia_LutComputeTruth6_rec252,9117
word Gia_LutComputeTruth6( Gia_Man_t * p, int iObj, Vec_Wrd_t * vTruths )Gia_LutComputeTruth6270,9810
void Gia_ObjComputeTruthTable6Lut_rec( Gia_Man_t * p, int iObj, Vec_Wrd_t * vTemp )Gia_ObjComputeTruthTable6Lut_rec294,10459
word Gia_ObjComputeTruthTable6Lut( Gia_Man_t * p, int iObj, Vec_Wrd_t * vTemp )Gia_ObjComputeTruthTable6Lut310,11208
word Gia_ObjComputeTruth6( Gia_Man_t * p, int iObj, Vec_Int_t * vSupp, Vec_Wrd_t * vTemp )Gia_ObjComputeTruth6337,11999
void Gia_ObjComputeTruth6CisSupport_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vSupp )Gia_ObjComputeTruth6CisSupport_rec351,12492
word Gia_ObjComputeTruth6Cis( Gia_Man_t * p, int iLit, Vec_Int_t * vSupp, Vec_Wrd_t * vTemp )Gia_ObjComputeTruth6Cis366,13019
void Gia_ObjComputeTruthTable6_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Wrd_t * vTruths )Gia_ObjComputeTruthTable6_rec390,13801
word Gia_ObjComputeTruthTable6( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp, Vec_Wrd_t * vTruths )Gia_ObjComputeTruthTable6407,14558
void Gia_ObjCollectInternal_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ObjCollectInternal_rec438,15500
void Gia_ObjCollectInternal( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ObjCollectInternal450,15904
word * Gia_ObjComputeTruthTable( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ObjComputeTruthTable468,16456
void Gia_ObjComputeTruthTableTest( Gia_Man_t * p )Gia_ObjComputeTruthTableTest547,19602
void Gia_ObjComputeTruthTableStart( Gia_Man_t * p, int nVarsMax )Gia_ObjComputeTruthTableStart573,20221
void Gia_ObjComputeTruthTableStop( Gia_Man_t * p )Gia_ObjComputeTruthTableStop584,20704
void Gia_ObjCollectInternalCut_rec( Gia_Man_t * p, int iObj )Gia_ObjCollectInternalCut_rec605,21229
void Gia_ObjCollectInternalCut( Gia_Man_t * p, int iRoot, Vec_Int_t * vLeaves )Gia_ObjCollectInternalCut615,21660
word * Gia_ObjComputeTruthTableCut( Gia_Man_t * p, Gia_Obj_t * pRoot, Vec_Int_t * vLeaves )Gia_ObjComputeTruthTableCut644,22621
Gia_Man_t * Gia_ManIsoNpnReduce( Gia_Man_t * p, Vec_Ptr_t ** pvPosEquivs, int fVerbose )Gia_ManIsoNpnReduce709,25162

src/aig/gia/giaNf.c,16133
#define NF_LEAF_MAX NF_LEAF_MAX40,1065
#define NF_CUT_MAX NF_CUT_MAX41,1088
#define NF_NO_LEAF NF_NO_LEAF42,1111
#define NF_NO_FUNC NF_NO_FUNC43,1134
#define NF_EPSILON NF_EPSILON44,1164
typedef struct Nf_Cut_t_ Nf_Cut_t; Nf_Cut_t46,1191
struct Nf_Cut_t_Nf_Cut_t_47,1227
    word            Sign;           // signatureSign49,1246
    int             Delay;          // delayDelay50,1295
    float           Flow;           // flowFlow51,1340
    unsigned        iFunc   : 26;   // function (NF_NO_FUNC)iFunc52,1384
    unsigned        Useless :  1;   // functionUseless53,1445
    unsigned        nLeaves :  5;   // leaf number (NF_NO_LEAF)nLeaves54,1493
    int             pLeaves[NF_LEAF_MAX+1]; // leavespLeaves55,1557
typedef struct Nf_Cfg_t_ Nf_Cfg_t; Nf_Cfg_t57,1614
struct Nf_Cfg_t_Nf_Cfg_t_58,1650
    unsigned        fCompl  :  1;   // complementedfCompl60,1669
    unsigned        Phase   :  7;   // match phasePhase61,1721
    unsigned        Perm    : 24;   // match permutationPerm62,1772
typedef struct Nf_Mat_t_ Nf_Mat_t; Nf_Mat_t64,1832
struct Nf_Mat_t_Nf_Mat_t_65,1868
    unsigned        Gate    : 20;   // gateGate67,1887
    unsigned        CutH    : 10;   // cut handleCutH68,1931
    unsigned        fCompl  :  1;   // complementedfCompl69,1981
    unsigned        fBest   :  1;   // best cutfBest70,2033
    Nf_Cfg_t        Cfg;            // input literalsCfg71,2081
    int             D;              // delayD72,2135
    float           F;              // area F73,2180
typedef struct Nf_Obj_t_ Nf_Obj_t; Nf_Obj_t75,2228
struct Nf_Obj_t_Nf_Obj_t_76,2264
    Nf_Mat_t        M[2][2];         // del/area (2x)M78,2283
typedef struct Nf_Man_t_ Nf_Man_t; Nf_Man_t80,2340
struct Nf_Man_t_Nf_Man_t_81,2376
    Gia_Man_t *     pGia;           // derived managerpGia84,2412
    Jf_Par_t *      pPars;          // parameterspPars85,2467
    Vec_Mem_t *     vTtMem;         // truth tablesvTtMem87,2533
    Vec_Wec_t *     vTt2Match;      // matches for truth tablesvTt2Match88,2585
    Mio_Cell2_t *   pCells;         // library gatespCells89,2649
    int             nCells;         // library gate countnCells90,2702
    Nf_Obj_t *      pNfObjs;        // best cutspNfObjs92,2776
    Vec_Ptr_t       vPages;         // cut memoryvPages93,2825
    Vec_Int_t       vCutSets;       // cut offsetsvCutSets94,2875
    Vec_Int_t       vMapRefs;       // mapping refs   (2x)vMapRefs95,2926
    Vec_Flt_t       vFlowRefs;      // flow refs      (2x)vFlowRefs96,2985
    Vec_Int_t       vRequired;      // required times (2x)vRequired97,3044
    Vec_Flt_t       vCutFlows;      // temporary cut areavCutFlows98,3103
    Vec_Int_t       vCutDelays;     // temporary cut delayvCutDelays99,3161
    Vec_Int_t       vBackup;        // backup literalsvBackup100,3220
    int             iCur;           // current positioniCur101,3275
    int             Iter;           // mapping iterationsIter102,3331
    int             fUseEla;        // use exact areafUseEla103,3389
    int             nInvs;          // the inverter countnInvs104,3443
    int             InvDelayI;      // inverter delayInvDelayI105,3501
    word            InvAreaW;       // inverter delayInvAreaW106,3555
    float           InvAreaF;       // inverter area InvAreaF107,3609
    abctime         clkStart;       // starting timeclkStart109,3681
    double          CutCount[6];    // cut countsCutCount110,3734
    int             nCutUseAll;     // objects with useful cutsnCutUseAll111,3784
static inline int          Nf_Cfg2Int( Nf_Cfg_t Mat )                                { union { int x; Nf_Cfg_t y; } v; v.y = Mat; return v.x;           }Nf_Cfg2Int114,3852
static inline Nf_Cfg_t     Nf_Int2Cfg( int Int )                                     { union { int x; Nf_Cfg_t y; } v; v.x = Int; return v.y;           }Nf_Int2Cfg115,4006
static inline Nf_Obj_t *   Nf_ManObj( Nf_Man_t * p, int i )                          { return p->pNfObjs + i;                                           }Nf_ManObj117,4161
static inline Mio_Cell2_t* Nf_ManCell( Nf_Man_t * p, int i )                         { return p->pCells + i;                                            }Nf_ManCell118,4315
static inline int *        Nf_ManCutSet( Nf_Man_t * p, int i )                       { return (int *)Vec_PtrEntry(&p->vPages, i >> 16) + (i & 0xFFFF);  }Nf_ManCutSet119,4469
static inline int          Nf_ObjCutSetId( Nf_Man_t * p, int i )                     { return Vec_IntEntry( &p->vCutSets, i );                          }Nf_ObjCutSetId120,4623
static inline int *        Nf_ObjCutSet( Nf_Man_t * p, int i )                       { return Nf_ManCutSet(p, Nf_ObjCutSetId(p, i));                    }Nf_ObjCutSet121,4777
static inline int          Nf_ObjHasCuts( Nf_Man_t * p, int i )                      { return (int)(Vec_IntEntry(&p->vCutSets, i) > 0);                 }Nf_ObjHasCuts122,4931
static inline int *        Nf_ObjCutBest( Nf_Man_t * p, int i )                      { return NULL;                                                     } Nf_ObjCutBest123,5085
static inline int          Nf_ObjCutUseless( Nf_Man_t * p, int TruthId )             { return (int)(TruthId >= Vec_WecSize(p->vTt2Match));              } Nf_ObjCutUseless124,5240
static inline float        Nf_ObjCutFlow( Nf_Man_t * p, int i )                      { return Vec_FltEntry(&p->vCutFlows, i);                           } Nf_ObjCutFlow126,5396
static inline int          Nf_ObjCutDelay( Nf_Man_t * p, int i )                     { return Vec_IntEntry(&p->vCutDelays, i);                          } Nf_ObjCutDelay127,5551
static inline void         Nf_ObjSetCutFlow( Nf_Man_t * p, int i, float a )          { Vec_FltWriteEntry(&p->vCutFlows, i, a);                          } Nf_ObjSetCutFlow128,5706
static inline void         Nf_ObjSetCutDelay( Nf_Man_t * p, int i, int d )           { Vec_IntWriteEntry(&p->vCutDelays, i, d);                         } Nf_ObjSetCutDelay129,5861
static inline int          Nf_ObjMapRefNum( Nf_Man_t * p, int i, int c )             { return Vec_IntEntry(&p->vMapRefs, Abc_Var2Lit(i,c));             }Nf_ObjMapRefNum131,6017
static inline int          Nf_ObjMapRefInc( Nf_Man_t * p, int i, int c )             { return (*Vec_IntEntryP(&p->vMapRefs, Abc_Var2Lit(i,c)))++;       }Nf_ObjMapRefInc132,6171
static inline int          Nf_ObjMapRefDec( Nf_Man_t * p, int i, int c )             { return --(*Vec_IntEntryP(&p->vMapRefs, Abc_Var2Lit(i,c)));       }Nf_ObjMapRefDec133,6325
static inline float        Nf_ObjFlowRefs( Nf_Man_t * p, int i, int c )              { return Vec_FltEntry(&p->vFlowRefs, Abc_Var2Lit(i,c));            }Nf_ObjFlowRefs134,6479
static inline int          Nf_ObjRequired( Nf_Man_t * p, int i, int c )              { return Vec_IntEntry(&p->vRequired, Abc_Var2Lit(i,c));            }Nf_ObjRequired135,6633
static inline void         Nf_ObjSetRequired( Nf_Man_t * p,int i, int c, int f )     { Vec_IntWriteEntry(&p->vRequired, Abc_Var2Lit(i,c), f);           }Nf_ObjSetRequired136,6787
static inline void         Nf_ObjUpdateRequired( Nf_Man_t * p,int i, int c, int f )  { if (Nf_ObjRequired(p, i, c) > f) Nf_ObjSetRequired(p, i, c, f);  }Nf_ObjUpdateRequired137,6941
static inline Nf_Mat_t *   Nf_ObjMatchD( Nf_Man_t * p, int i, int c )                { return &Nf_ManObj(p, i)->M[c][0];                                }Nf_ObjMatchD139,7096
static inline Nf_Mat_t *   Nf_ObjMatchA( Nf_Man_t * p, int i, int c )                { return &Nf_ManObj(p, i)->M[c][1];                                }Nf_ObjMatchA140,7250
static inline int          Nf_CutSize( int * pCut )                                  { return pCut[0] & NF_NO_LEAF;                                     }Nf_CutSize142,7405
static inline int          Nf_CutFunc( int * pCut )                                  { return ((unsigned)pCut[0] >> 5);                                 }Nf_CutFunc143,7559
static inline int *        Nf_CutLeaves( int * pCut )                                { return pCut + 1;                                                 }Nf_CutLeaves144,7713
static inline int          Nf_CutSetBoth( int n, int f )                             { return n | (f << 5);                                             }Nf_CutSetBoth145,7867
static inline int          Nf_CutIsTriv( int * pCut, int i )                         { return Nf_CutSize(pCut) == 1 && pCut[1] == i;                    } Nf_CutIsTriv146,8021
static inline int          Nf_CutHandle( int * pCutSet, int * pCut )                 { assert( pCut > pCutSet ); return pCut - pCutSet;                 } Nf_CutHandle147,8176
static inline int *        Nf_CutFromHandle( int * pCutSet, int h )                  { assert( h > 0 ); return pCutSet + h;                             }Nf_CutFromHandle148,8331
static inline int          Nf_CfgVar( Nf_Cfg_t Cfg, int i )                          { return (Cfg.Perm >> (i<<2)) & 15;                                }Nf_CfgVar150,8486
static inline int          Nf_CfgCompl( Nf_Cfg_t Cfg, int i )                        { return (Cfg.Phase >> i) & 1;                                     }Nf_CfgCompl151,8640
#define Nf_SetForEachCut(Nf_SetForEachCut153,8795
#define Nf_CutForEachVarCompl(Nf_CutForEachVarCompl154,8937
#define Nf_CfgForEachVarCompl(Nf_CfgForEachVarCompl155,9128
int Nf_StoCellIsDominated( Mio_Cell2_t * pCell, int * pFans, int * pProf )Nf_StoCellIsDominated172,9747
void Nf_StoCreateGateAdd( Vec_Mem_t * vTtMem, Vec_Wec_t * vTt2Match, Mio_Cell2_t * pCell, word uTruth, int * pFans, int nFans, Vec_Wec_t * vProfs, Vec_Int_t * vStore, int fPinFilter, int fPinPerm, int fPinQuick )Nf_StoCreateGateAdd182,10090
void Nf_StoCreateGateMaches( Vec_Mem_t * vTtMem, Vec_Wec_t * vTt2Match, Mio_Cell2_t * pCell, int ** pComp, int ** pPerm, int * pnPerms, Vec_Wec_t * vProfs, Vec_Int_t * vStore, int fPinFilter, int fPinPerm, int fPinQuick )Nf_StoCreateGateMaches248,12883
Mio_Cell2_t * Nf_StoDeriveMatches( Vec_Mem_t * vTtMem, Vec_Wec_t * vTt2Match, int * pnCells, int fPinFilter, int fPinPerm, int fPinQuick )Nf_StoDeriveMatches281,14211
void Nf_StoPrintOne( Nf_Man_t * p, int Count, int t, int i, int GateId, Nf_Cfg_t Mat )Nf_StoPrintOne310,15378
void Nf_StoPrint( Nf_Man_t * p, int fVerbose )Nf_StoPrint334,16197
Nf_Man_t * Nf_StoCreate( Gia_Man_t * pGia, Jf_Par_t * pPars )Nf_StoCreate366,17031
void Nf_StoDelete( Nf_Man_t * p )Nf_StoDelete415,19182
static inline int Nf_CutComputeTruth6( Nf_Man_t * p, Nf_Cut_t * pCut0, Nf_Cut_t * pCut1, int fCompl0, int fCompl1, Nf_Cut_t * pCutR, int fIsXor )Nf_CutComputeTruth6444,19830
static inline int Nf_CutComputeTruthMux6( Nf_Man_t * p, Nf_Cut_t * pCut0, Nf_Cut_t * pCut1, Nf_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, Nf_Cut_t * pCutR )Nf_CutComputeTruthMux6464,20992
static inline int Nf_CutCountBits( word i )Nf_CutCountBits499,22569
static inline word Nf_CutGetSign( int * pLeaves, int nLeaves )Nf_CutGetSign506,22818
static inline int Nf_CutCreateUnit( Nf_Cut_t * p, int i )Nf_CutCreateUnit513,23015
static inline void Nf_CutPrint( Nf_Man_t * p, Nf_Cut_t * pCut )Nf_CutPrint523,23251
static inline int Nf_ManPrepareCuts( Nf_Cut_t * pCuts, Nf_Man_t * p, int iObj, int fAddUnit )Nf_ManPrepareCuts538,23891
static inline int Nf_ManSaveCuts( Nf_Man_t * p, Nf_Cut_t ** pCuts, int nCuts, int fUseful )Nf_ManSaveCuts561,24789
static inline int Nf_ManCountUseful( Nf_Cut_t ** pCuts, int nCuts )Nf_ManCountUseful583,25700
static inline int Nf_ManCountMatches( Nf_Man_t * p, Nf_Cut_t ** pCuts, int nCuts )Nf_ManCountMatches590,25883
static inline int Nf_CutCheck( Nf_Cut_t * pBase, Nf_Cut_t * pCut ) // check if pCut is contained in pBaseNf_CutCheck610,26435
static inline int Nf_SetCheckArray( Nf_Cut_t ** ppCuts, int nCuts )Nf_SetCheckArray626,26883
static inline int Nf_CutMergeOrder( Nf_Cut_t * pCut0, Nf_Cut_t * pCut1, Nf_Cut_t * pCut, int nLutSize )Nf_CutMergeOrder666,27977
static inline int Nf_CutMergeOrderMux( Nf_Cut_t * pCut0, Nf_Cut_t * pCut1, Nf_Cut_t * pCut2, Nf_Cut_t * pCut, int nLutSize )Nf_CutMergeOrderMux729,29719
static inline int Nf_SetCutIsContainedOrder( Nf_Cut_t * pBase, Nf_Cut_t * pCut ) // check if pCut is contained in pBaseNf_SetCutIsContainedOrder753,30664
static inline int Nf_SetLastCutIsContained( Nf_Cut_t ** pCuts, int nCuts )Nf_SetLastCutIsContained779,31383
static inline int Nf_SetLastCutContainsArea( Nf_Cut_t ** pCuts, int nCuts )Nf_SetLastCutContainsArea787,31713
static inline int Nf_CutCompareArea( Nf_Cut_t * pCut0, Nf_Cut_t * pCut1 )Nf_CutCompareArea805,32357
static inline void Nf_SetSortByArea( Nf_Cut_t ** pCuts, int nCuts )Nf_SetSortByArea817,32909
static inline int Nf_SetAddCut( Nf_Cut_t ** pCuts, int nCuts, int nCutNum )Nf_SetAddCut827,33183
static inline int Nf_CutArea( Nf_Man_t * p, int nLeaves )Nf_CutArea835,33443
static inline void Nf_CutParams( Nf_Man_t * p, Nf_Cut_t * pCut, float FlowRefs )Nf_CutParams841,33589
void Nf_ObjMergeOrder( Nf_Man_t * p, int iObj )Nf_ObjMergeOrder855,34096
void Nf_ManComputeCuts( Nf_Man_t * p )Nf_ManComputeCuts957,38664
void Nf_ManPrintStats( Nf_Man_t * p, char * pTitle )Nf_ManPrintStats985,39307
void Nf_ManPrintInit( Nf_Man_t * p )Nf_ManPrintInit998,39796
void Nf_ManPrintQuit( Nf_Man_t * p )Nf_ManPrintQuit1018,40544
void Nf_ManCutMatchPrint( Nf_Man_t * p, int iObj, char * pStr, Nf_Mat_t * pM )Nf_ManCutMatchPrint1058,42307
void Nf_ManCutMatchOne( Nf_Man_t * p, int iObj, int * pCut, int * pCutSet )Nf_ManCutMatchOne1095,43556
static inline void Nf_ObjPrepareCi( Nf_Man_t * p, int iObj, int Time )Nf_ObjPrepareCi1184,46808
static inline void Nf_ObjPrepareBuf( Nf_Man_t * p, Gia_Obj_t * pObj )Nf_ObjPrepareBuf1200,47351
static inline int Nf_CutRequired( Nf_Man_t * p, Nf_Mat_t * pM, int * pCutSet )Nf_CutRequired1224,48298
static inline void Nf_ObjComputeRequired( Nf_Man_t * p, int iObj )Nf_ObjComputeRequired1240,48992
void Nf_ManCutMatch( Nf_Man_t * p, int iObj )Nf_ManCutMatch1248,49332
void Nf_ManComputeMapping( Nf_Man_t * p )Nf_ManComputeMapping1385,54256
static inline Nf_Mat_t * Nf_ObjMatchBest( Nf_Man_t * p, int i, int c )             Nf_ObjMatchBest1407,54733
void Nf_ManSetOutputRequireds( Nf_Man_t * p, int fPropCompl )Nf_ManSetOutputRequireds1419,55088
void Nf_ManSetMapRefsGate( Nf_Man_t * p, int iObj, int Required, Nf_Mat_t * pM )Nf_ManSetMapRefsGate1476,58071
void Nf_ManPrintMatches( Nf_Man_t * p )Nf_ManPrintMatches1495,58765
int Nf_ManSetMapRefs( Nf_Man_t * p )Nf_ManSetMapRefs1520,59673
word Nf_MatchDeref_rec( Nf_Man_t * p, int i, int c, Nf_Mat_t * pM )Nf_MatchDeref_rec1693,66233
word Nf_MatchRef_rec( Nf_Man_t * p, int i, int c, Nf_Mat_t * pM, int Required, Vec_Int_t * vBackup )Nf_MatchRef_rec1716,67049
word Nf_MatchRefArea( Nf_Man_t * p, int i, int c, Nf_Mat_t * pM, int Required )Nf_MatchRefArea1747,68261
void Nf_ManElaBestMatchOne( Nf_Man_t * p, int iObj, int c, int * pCut, int * pCutSet, Nf_Mat_t * pRes, int Required )Nf_ManElaBestMatchOne1759,68705
void Nf_ManElaBestMatch( Nf_Man_t * p, int iObj, int c, Nf_Mat_t * pRes, int Required )Nf_ManElaBestMatch1829,71231
int Nf_ManComputeArrival( Nf_Man_t * p, Nf_Mat_t * pM, int * pCutSet )Nf_ManComputeArrival1841,71692
void Nf_ManResetMatches( Nf_Man_t * p, int Round )Nf_ManResetMatches1857,72226
void Nf_ManComputeMappingEla( Nf_Man_t * p )Nf_ManComputeMappingEla1945,75342
void Nf_ManFixPoDrivers( Nf_Man_t * p )Nf_ManFixPoDrivers2022,78820
Gia_Man_t * Nf_ManDeriveMapping( Nf_Man_t * p )Nf_ManDeriveMapping2068,80271
void Nf_ManUpdateStats( Nf_Man_t * p )Nf_ManUpdateStats2114,82092
int Nf_ManExtractWindow( void * pMan, Vec_Int_t * vRoots, Vec_Wec_t * vCuts, Vec_Wec_t * vObjCuts, Vec_Int_t * vSolCuts, Vec_Int_t * vCutGates, Vec_Wrd_t * vCutAreas, word * pInvArea, int StartVar, int nVars )Nf_ManExtractWindow2188,84362
void Nf_ManSetDefaultPars( Jf_Par_t * pPars )Nf_ManSetDefaultPars2334,90683
Gia_Man_t * Nf_ManPerformMapping( Gia_Man_t * pGia, Jf_Par_t * pPars )Nf_ManPerformMapping2363,91546

src/aig/gia/giaLf.c,14732
#define LF_LEAF_MAX LF_LEAF_MAX33,877
#define LF_CUT_MAX LF_CUT_MAX34,902
#define LF_LOG_PAGE LF_LOG_PAGE35,927
#define LF_NO_LEAF LF_NO_LEAF36,952
#define LF_CUT_WORDS LF_CUT_WORDS37,977
#define LF_TT_WORDS LF_TT_WORDS38,1016
#define LF_EPSILON LF_EPSILON39,1084
typedef struct Lf_Cut_t_ Lf_Cut_t; Lf_Cut_t41,1110
struct Lf_Cut_t_Lf_Cut_t_42,1146
    word            Sign;            // signatureSign44,1165
    int             Delay;           // delayDelay45,1215
    float           Flow;            // flow Flow46,1261
    int             iFunc;           // functionalityiFunc47,1307
    unsigned        Cost      : 22;  // misc cut costCost48,1361
    unsigned        fLate     :  1;  // fails timingfLate49,1415
    unsigned        fMux7     :  1;  // specialized cutfMux750,1468
    unsigned        nLeaves   :  8;  // the number of leavesnLeaves51,1524
    int             pLeaves[0];      // leavespLeaves52,1585
typedef struct Lf_Plc_t_ Lf_Plc_t; Lf_Plc_t54,1635
struct Lf_Plc_t_Lf_Plc_t_55,1671
    unsigned        fUsed    :  1;   // the cut is usedfUsed57,1690
    unsigned        Handle   : 31;   // the cut handleHandle58,1746
typedef struct Lf_Bst_t_ Lf_Bst_t; Lf_Bst_t60,1804
struct Lf_Bst_t_Lf_Bst_t_61,1840
    int             Delay[3];        // delayDelay63,1859
    float           Flow[3];         // flow Flow64,1905
    Lf_Plc_t        Cut[2];          // cut infoCut65,1951
typedef struct Lf_Mem_t_ Lf_Mem_t; Lf_Mem_t67,2003
struct Lf_Mem_t_Lf_Mem_t_68,2039
    int             LogPage;         // log size of memory pageLogPage70,2058
    int             MaskPage;        // page maskMaskPage71,2122
    int             nCutWords;       // cut size in wordsnCutWords72,2172
    int             iCur;            // writing position iCur73,2230
    Vec_Ptr_t       vPages;          // memory pagesvPages74,2288
    Vec_Ptr_t *     vFree;           // free pages vFree75,2341
typedef struct Lf_Man_t_ Lf_Man_t; Lf_Man_t77,2396
struct Lf_Man_t_Lf_Man_t_78,2432
    Gia_Man_t *     pGia;            // managerpGia81,2468
    Jf_Par_t *      pPars;           // parameterspPars82,2516
    int             nCutWords;       // cut size in wordsnCutWords84,2583
    int             nSetWords;       // set size in wordsnSetWords85,2641
    Lf_Bst_t *      pObjBests;       // best cutspObjBests86,2699
    Vec_Ptr_t       vMemSets;        // memory for cutsetsvMemSets87,2749
    Vec_Int_t       vFreeSets;       // free cutsetsvFreeSets88,2808
    Vec_Mem_t *     vTtMem;          // truth tablesvTtMem89,2861
    Vec_Ptr_t       vFreePages;      // free memory pagesvFreePages90,2914
    Lf_Mem_t        vStoreOld;       // previous cutsvStoreOld91,2972
    Lf_Mem_t        vStoreNew;       // current cutsvStoreNew92,3026
    Vec_Int_t       vOffsets;        // offsetsvOffsets94,3098
    Vec_Int_t       vRequired;       // required timesvRequired95,3146
    Vec_Int_t       vCutSets;        // cutsets (pObj->Value stores cut refs)vCutSets96,3201
    Vec_Flt_t       vFlowRefs;       // flow refsvFlowRefs97,3279
    Vec_Int_t       vMapRefs;        // mapping refsvMapRefs98,3329
    Vec_Flt_t       vSwitches;       // switching activityvSwitches99,3382
    Vec_Int_t       vCiArrivals;     // arrival times of the CIsvCiArrivals100,3441
    abctime         clkStart;        // starting timeclkStart102,3524
    double          CutCount[4];     // cut countsCutCount103,3578
    double          Switches;        // switching activitySwitches104,3629
    int             nFrontMax;       // frontiernFrontMax105,3688
    int             nCoDrivers;      // CO driversnCoDrivers106,3737
    int             nInverters;      // invertersnInverters107,3788
    int             nTimeFails;      // timing failsnTimeFails108,3838
    int             Iter;            // mapping iterationIter109,3891
    int             fUseEla;         // use exact local areafUseEla110,3949
    int             nCutMux;         // non-trivial MUX cutsnCutMux111,4010
    int             nCutEqual;       // equal two cutsnCutEqual112,4071
    int             nCutCounts[LF_LEAF_MAX+1];nCutCounts113,4126
static inline void        Lf_CutCopy( Lf_Cut_t * p, Lf_Cut_t * q, int n ) { memcpy(p, q, sizeof(word) * n);                                         }Lf_CutCopy116,4177
static inline Lf_Cut_t *  Lf_CutNext( Lf_Cut_t * p, int n )               { return (Lf_Cut_t *)((word *)p + n);                                     }Lf_CutNext117,4327
static inline word *      Lf_CutTruth( Lf_Man_t * p, Lf_Cut_t * pCut )    { return Vec_MemReadEntry(p->vTtMem, Abc_Lit2Var(pCut->iFunc));           }Lf_CutTruth118,4477
static inline int         Lf_ObjOff( Lf_Man_t * p, int i )                { return Vec_IntEntry(&p->vOffsets, i);                                   }Lf_ObjOff120,4628
static inline int         Lf_ObjRequired( Lf_Man_t * p, int i )           { return Vec_IntEntry(&p->vRequired, i);                                  }Lf_ObjRequired121,4778
static inline void        Lf_ObjSetRequired( Lf_Man_t * p, int i, int t ) { Vec_IntDowndateEntry(&p->vRequired, i, t);                              }Lf_ObjSetRequired122,4928
static inline Lf_Bst_t *  Lf_ObjReadBest( Lf_Man_t * p, int i )           { return p->pObjBests + Lf_ObjOff(p,i);                                   }Lf_ObjReadBest123,5078
static inline float       Lf_ObjFlowRefs( Lf_Man_t * p, int i )           { return Vec_FltEntry(&p->vFlowRefs, Lf_ObjOff(p,i));                     }Lf_ObjFlowRefs124,5228
static inline int         Lf_ObjMapRefNum( Lf_Man_t * p, int i )          { return Vec_IntEntry(&p->vMapRefs, Lf_ObjOff(p,i));                      }Lf_ObjMapRefNum125,5378
static inline int         Lf_ObjMapRefInc( Lf_Man_t * p, int i )          { return (*Vec_IntEntryP(&p->vMapRefs, Lf_ObjOff(p,i)))++;                }Lf_ObjMapRefInc126,5528
static inline int         Lf_ObjMapRefDec( Lf_Man_t * p, int i )          { return --(*Vec_IntEntryP(&p->vMapRefs, Lf_ObjOff(p,i)));                }Lf_ObjMapRefDec127,5678
static inline float       Lf_ObjSwitches( Lf_Man_t * p, int i )           { return Vec_FltEntry(&p->vSwitches, i);                                  }Lf_ObjSwitches128,5828
static inline int         Lf_BestDiffCuts( Lf_Bst_t * p )                 { return p->Cut[0].Handle != p->Cut[1].Handle;                            }Lf_BestDiffCuts129,5978
static inline int         Lf_BestIsMapped( Lf_Bst_t * p )                 { return (int)(p->Cut[0].fUsed ^ p->Cut[1].fUsed);                        }Lf_BestIsMapped130,6128
static inline int         Lf_BestIndex( Lf_Bst_t * p )                    { return p->Cut[1].fUsed;                                                 }Lf_BestIndex131,6278
static inline int         Lf_BestCutIndex( Lf_Bst_t * p )                 { if (p->Cut[0].fUsed) return 0; if (p->Cut[1].fUsed) return 1; return 2; }Lf_BestCutIndex132,6428
#define Lf_CutSetForEachCut(Lf_CutSetForEachCut134,6579
#define Lf_CutForEachVar(Lf_CutForEachVar135,6723
static inline void Lf_ObjSetCiArrival( Lf_Man_t * p, int iCi, int Time )Lf_ObjSetCiArrival154,7481
static inline int Lf_ObjCiArrival( Lf_Man_t * p, int iCi )Lf_ObjCiArrival158,7611
int Lf_ObjArrival_rec( Lf_Man_t * p, Gia_Obj_t * pDriver )Lf_ObjArrival_rec162,7723
static inline int Lf_ObjCoArrival( Lf_Man_t * p, int iCo )Lf_ObjCoArrival172,8092
int Lf_ObjCoArrival2_rec( Lf_Man_t * p, Gia_Obj_t * pDriver )Lf_ObjCoArrival2_rec183,8514
static inline int Lf_ObjCoArrival2( Lf_Man_t * p, int iCo )Lf_ObjCoArrival2198,9048
int Lf_ManComputeCrossCut( Gia_Man_t * p )Lf_ManComputeCrossCut226,9878
int Lf_ManTtIsMux( word t )Lf_ManTtIsMux271,11165
void Lf_ManAnalyzeCoDrivers( Gia_Man_t * p, int * pnDrivers, int * pnInverts )Lf_ManAnalyzeCoDrivers319,13254
void Lf_ManComputeSwitching( Gia_Man_t * p, Vec_Flt_t * vSwitches )Lf_ManComputeSwitching333,13808
static inline int Lf_CutCreateUnit( Lf_Cut_t * p, int i )Lf_CutCreateUnit354,14410
static inline Lf_Cut_t * Lf_ManFetchSet( Lf_Man_t * p, int i )Lf_ManFetchSet364,14622
static inline int Lf_ManPrepareSet( Lf_Man_t * p, int iObj, int Index, Lf_Cut_t ** ppCutSet )Lf_ManPrepareSet396,15941
static inline word Lf_CutGetSign( Lf_Cut_t * pCut )Lf_CutGetSign423,16757
static inline int Lf_CutCountBits( word i )Lf_CutCountBits430,16960
static inline int Lf_CutEqual( Lf_Cut_t * pCut0, Lf_Cut_t * pCut1 )Lf_CutEqual437,17209
static inline float Lf_CutSwitches( Lf_Man_t * p, Lf_Cut_t * pCut )Lf_CutSwitches449,17550
static inline void Lf_CutPrint( Lf_Man_t * p, Lf_Cut_t * pCut )Lf_CutPrint457,17810
static inline float Lf_CutArea( Lf_Man_t * p, Lf_Cut_t * pCut )Lf_CutArea468,18288
static inline int Lf_CutIsMux( Lf_Man_t * p, Lf_Cut_t * pCut, Gia_Obj_t * pMux )Lf_CutIsMux478,18753
static inline void Lf_MemAlloc( Lf_Mem_t * p, int LogPage, Vec_Ptr_t * vFree, int nCutWords )Lf_MemAlloc518,19807
static inline int Lf_MemSaveCut( Lf_Mem_t * p, Lf_Cut_t * pCut, int iObj )Lf_MemSaveCut526,20066
static inline Lf_Cut_t * Lf_MemLoadCut( Lf_Mem_t * p, int iCur, int iObj, Lf_Cut_t * pCut, int fTruth, int fRecycle )Lf_MemLoadCut548,21226
static inline void Lf_MemRecycle( Lf_Mem_t * p )Lf_MemRecycle569,22201
static inline Lf_Cut_t * Lf_MemLoadMuxCut( Lf_Man_t * p, int iObj, Lf_Cut_t * pCut )Lf_MemLoadMuxCut578,22453
static inline Lf_Cut_t * Lf_ObjCutMux( Lf_Man_t * p, int i )Lf_ObjCutMux590,22909
static inline Lf_Cut_t * Lf_ObjCutBest( Lf_Man_t * p, int i )Lf_ObjCutBest595,23069
static inline Lf_Cut_t * Lf_ObjCutBestNew( Lf_Man_t * p, int i, Lf_Cut_t * pCut )Lf_ObjCutBestNew607,23550
static inline int Lf_CutCheck( Lf_Cut_t * pBase, Lf_Cut_t * pCut ) // check if pCut is contained in pBaseLf_CutCheck629,24216
static inline int Lf_SetCheckArray( Lf_Cut_t ** ppCuts, int nCuts )Lf_SetCheckArray645,24664
static inline int Lf_CutMergeOrder( Lf_Cut_t * pCut0, Lf_Cut_t * pCut1, Lf_Cut_t * pCut, int nLutSize )Lf_CutMergeOrder685,25764
static inline int Lf_CutMergeOrder2( Lf_Cut_t * pCut0, Lf_Cut_t * pCut1, Lf_Cut_t * pCut, int nLutSize )Lf_CutMergeOrder2750,27524
static inline int Lf_CutMergeOrderMux( Lf_Cut_t * pCut0, Lf_Cut_t * pCut1, Lf_Cut_t * pCut2, Lf_Cut_t * pCut, int nLutSize )Lf_CutMergeOrderMux772,28277
static inline int Lf_SetCutIsContainedOrder( Lf_Cut_t * pBase, Lf_Cut_t * pCut ) // check if pCut is contained in pBaseLf_SetCutIsContainedOrder798,29236
static inline int Lf_SetLastCutIsContained( Lf_Cut_t ** pCuts, int nCuts )Lf_SetLastCutIsContained824,29955
static inline int Lf_CutCompareDelay( Lf_Cut_t * pCut0, Lf_Cut_t * pCut1 )Lf_CutCompareDelay845,30521
static inline int Lf_CutCompareArea( Lf_Cut_t * pCut0, Lf_Cut_t * pCut1 )Lf_CutCompareArea855,30964
static inline int Lf_SetLastCutContainsArea( Lf_Cut_t ** pCuts, int nCuts )Lf_SetLastCutContainsArea867,31516
static inline void Lf_SetSortByArea( Lf_Cut_t ** pCuts, int nCuts )Lf_SetSortByArea885,32160
static inline int Lf_SetAddCut( Lf_Cut_t ** pCuts, int nCuts, int nCutNum )Lf_SetAddCut895,32434
static inline void Lf_SetSortBySize( Lf_Cut_t ** pCutsR, int nCutsR )Lf_SetSortBySize913,33209
static inline int Lf_ManFindCofVar( word * pTruth, int nWords, int nVars )Lf_ManFindCofVar937,33861
static inline int Lf_CutComputeTruth6( Lf_Man_t * p, Lf_Cut_t * pCut0, Lf_Cut_t * pCut1, int fCompl0, int fCompl1, Lf_Cut_t * pCutR, int fIsXor )Lf_CutComputeTruth6964,34585
static inline int Lf_CutComputeTruth( Lf_Man_t * p, Lf_Cut_t * pCut0, Lf_Cut_t * pCut1, int fCompl0, int fCompl1, Lf_Cut_t * pCutR, int fIsXor )Lf_CutComputeTruth985,35719
static inline int Lf_CutComputeTruthMux6( Lf_Man_t * p, Lf_Cut_t * pCut0, Lf_Cut_t * pCut1, Lf_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, Lf_Cut_t * pCutR )Lf_CutComputeTruthMux61013,37322
static inline int Lf_CutComputeTruthMux( Lf_Man_t * p, Lf_Cut_t * pCut0, Lf_Cut_t * pCut1, Lf_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, Lf_Cut_t * pCutR )Lf_CutComputeTruthMux1034,38511
float Lf_CutRef_rec( Lf_Man_t * p, Lf_Cut_t * pCut )Lf_CutRef_rec1075,40485
float Lf_CutDeref_rec( Lf_Man_t * p, Lf_Cut_t * pCut )Lf_CutDeref_rec1085,40819
static inline float Lf_CutAreaDerefed( Lf_Man_t * p, Lf_Cut_t * pCut )Lf_CutAreaDerefed1095,41157
static inline int  Lf_CutRequired( Lf_Man_t * p, Lf_Cut_t * pCut )Lf_CutRequired1116,41637
static inline void Lf_CutParams( Lf_Man_t * p, Lf_Cut_t * pCut, int Required, float FlowRefs, Gia_Obj_t * pMux )Lf_CutParams1133,42356
void Lf_ObjMergeOrder( Lf_Man_t * p, int iObj )Lf_ObjMergeOrder1186,44374
static inline void Lf_ManSetFlowRefInc( Gia_Man_t * p, Vec_Flt_t * vRefs, Vec_Int_t * vOffsets, int i )Lf_ManSetFlowRefInc1407,54670
void Lf_ManSetFlowRefs( Gia_Man_t * p, Vec_Flt_t * vRefs, Vec_Int_t * vOffsets )Lf_ManSetFlowRefs1412,54892
void Lf_ManSetCutRefs( Lf_Man_t * p )Lf_ManSetCutRefs1448,56557
static inline int Lf_ManSetMuxCut( Lf_Man_t * p, Lf_Bst_t * pBest, int iObj, int Required )Lf_ManSetMuxCut1469,57473
void Lf_ManSetMapRefsOne( Lf_Man_t * p, int iObj )Lf_ManSetMapRefsOne1485,58004
int Lf_ManSetMapRefs( Lf_Man_t * p )Lf_ManSetMapRefs1520,59286
void Lf_ManCountMapRefsOne( Lf_Man_t * p, int iObj )Lf_ManCountMapRefsOne1617,63447
void Lf_ManCountMapRefs( Lf_Man_t * p )Lf_ManCountMapRefs1633,64062
Gia_Man_t * Lf_ManDeriveMapping( Lf_Man_t * p )Lf_ManDeriveMapping1709,67094
Gia_Man_t * Lf_ManDeriveMappingCoarse( Lf_Man_t * p )Lf_ManDeriveMappingCoarse1734,68065
static inline int Lf_ManDerivePart( Lf_Man_t * p, Gia_Man_t * pNew, Vec_Int_t * vMapping, Vec_Int_t * vMapping2, Vec_Int_t * vCopies, Lf_Cut_t * pCut, Vec_Int_t * vLeaves, Vec_Int_t * vCover, Gia_Obj_t * pObj )Lf_ManDerivePart1777,70318
Gia_Man_t * Lf_ManDeriveMappingGia( Lf_Man_t * p )Lf_ManDeriveMappingGia1849,73928
Lf_Man_t * Lf_ManAlloc( Gia_Man_t * pGia, Jf_Par_t * pPars )Lf_ManAlloc1938,77230
void Lf_ManFree( Lf_Man_t * p )Lf_ManFree1981,79286
void Lf_ManSetDefaultPars( Jf_Par_t * pPars )Lf_ManSetDefaultPars2021,80471
void Lf_ManPrintStats( Lf_Man_t * p, char * pTitle )Lf_ManPrintStats2050,81333
void Lf_ManPrintInit( Lf_Man_t * p )Lf_ManPrintInit2066,81960
void Lf_ManPrintQuit( Lf_Man_t * p, Gia_Man_t * pNew )Lf_ManPrintQuit2085,82712
void Lf_ManComputeMapping( Lf_Man_t * p )Lf_ManComputeMapping2138,85843
Gia_Man_t * Lf_ManPerformMappingInt( Gia_Man_t * pGia, Jf_Par_t * pPars )Lf_ManPerformMappingInt2182,87340
Gia_Man_t * Lf_ManPerformMapping( Gia_Man_t * p, Jf_Par_t * pPars )Lf_ManPerformMapping2242,89269
Gia_Man_t * Gia_ManPerformLfMapping( Gia_Man_t * p, Jf_Par_t * pPars, int fNormalized )Gia_ManPerformLfMapping2292,90755

src/aig/gia/giaFalse.c,1323
void Gia_ManFalseRebuildOne( Gia_Man_t * pNew, Gia_Man_t * p, Vec_Int_t * vHook, int fVerbose, int fVeryVerbose )Gia_ManFalseRebuildOne48,1382
Gia_Man_t * Gia_ManFalseRebuild( Gia_Man_t * p, Vec_Wec_t * vHooks, int fVerbose, int fVeryVerbose )Gia_ManFalseRebuild88,2721
void Gia_ManCollectPath_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vPath )Gia_ManCollectPath_rec134,4255
Vec_Int_t * Gia_ManCollectPath( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCollectPath149,4940
void Gia_ManCheckFalseOne( Gia_Man_t * p, int iOut, int nTimeOut, Vec_Wec_t * vHooks, int fVerbose, int fVeryVerbose )Gia_ManCheckFalseOne167,5403
Gia_Man_t * Gia_ManCheckFalse2( Gia_Man_t * p, int nSlackMax, int nTimeOut, int fVerbose, int fVeryVerbose )Gia_ManCheckFalse2279,10452
Gia_Man_t * Gia_ManFalseRebuildPath( Gia_Man_t * p, Vec_Int_t * vHooks, int fVerbose, int fVeryVerbose )Gia_ManFalseRebuildPath326,11902
Gia_Man_t * Gia_ManCheckOne( Gia_Man_t * p, int iOut, int iObj, int nTimeOut, int fVerbose, int fVeryVerbose )Gia_ManCheckOne357,13051
Gia_Man_t * Gia_ManCheckFalseAll( Gia_Man_t * p, int nSlackMax, int nTimeOut, int fVerbose, int fVeryVerbose )Gia_ManCheckFalseAll467,17852
Gia_Man_t * Gia_ManCheckFalse( Gia_Man_t * p, int nSlackMax, int nTimeOut, int fVerbose, int fVeryVerbose )Gia_ManCheckFalse497,18777

src/aig/gia/giaPack.c,275
Vec_Int_t * Gia_ManLutCollect2( Gia_Man_t * p )Gia_ManLutCollect245,1278
Vec_Int_t * Gia_ManLutCollect( Gia_Man_t * p )Gia_ManLutCollect80,2361
void Gia_ManLutPacking( Gia_Man_t * p, int nBlockSize, int DelayRoute, int DelayDir, int fVerbose )Gia_ManLutPacking125,3756

src/aig/gia/giaSat.c,1872
#define GIA_LIMIT GIA_LIMIT30,784
typedef struct Gia_ManSat_t_ Gia_ManSat_t;Gia_ManSat_t33,807
struct Gia_ManSat_t_Gia_ManSat_t_34,850
    Aig_MmFlex_t *    pMem;pMem36,873
typedef struct Gia_ObjSat1_t_ Gia_ObjSat1_t;Gia_ObjSat1_t39,905
struct Gia_ObjSat1_t_Gia_ObjSat1_t_40,950
    char              nFans;nFans42,974
    char              nOffset;nOffset43,1003
    char              PathsH;PathsH44,1034
    char              PathsV;PathsV45,1064
typedef struct Gia_ObjSat2_t_ Gia_ObjSat2_t;Gia_ObjSat2_t48,1098
struct Gia_ObjSat2_t_Gia_ObjSat2_t_49,1143
    unsigned          fTerm :  1;fTerm51,1167
    unsigned          iLit  : 31;iLit52,1201
typedef struct Gia_ObjSat_t_ Gia_ObjSat_t;Gia_ObjSat_t55,1239
struct Gia_ObjSat_t_Gia_ObjSat_t_56,1282
        Gia_ObjSat1_t Obj1;Obj159,1317
        Gia_ObjSat2_t Obj2;Obj260,1345
Gia_ManSat_t * Gia_ManSatStart()Gia_ManSatStart80,1839
void Gia_ManSatStop( Gia_ManSat_t * p )Gia_ManSatStop99,2219
void Gia_ManSatPartCollectSuper( Gia_Man_t * p, Gia_Obj_t * pObj, int * pLits, int * pnLits )Gia_ManSatPartCollectSuper117,2590
int Gia_ManSatPartCreate_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int * pObjPlace, int * pStore )Gia_ManSatPartCreate_rec145,3529
int Gia_ManSatPartCreate( Gia_Man_t * p, Gia_Obj_t * pObj, int * pStore )Gia_ManSatPartCreate188,4939
void Gia_ManSatPartCountClauses( Gia_Man_t * p, Gia_Obj_t * pObj, int * pnOnset, int * pnOffset )Gia_ManSatPartCountClauses205,5376
int Gia_ManSatPartCount( Gia_Man_t * p, Gia_Obj_t * pObj, int * pnLeaves, int * pnNodes )Gia_ManSatPartCount251,6607
int Gia_ManSatPartCountNodes( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManSatPartCountNodes282,7535
void Gia_ManSatPartPrint( Gia_Man_t * p, Gia_Obj_t * pObj, int Step )Gia_ManSatPartPrint308,8284
void Gia_ManSatExperiment( Gia_Man_t * p )Gia_ManSatExperiment350,9434

src/aig/gia/giaShrink.c,103
Gia_Man_t * Gia_ManMapShrink4( Gia_Man_t * p, int fKeepLevel, int fVerbose )Gia_ManMapShrink449,1486

src/aig/gia/giaHash.c,2246
static inline int Gia_ManHashOne( int iLit0, int iLit1, int iLitC, int TableSize ) Gia_ManHashOne45,1287
static inline int * Gia_ManHashFind( Gia_Man_t * p, int iLit0, int iLit1, int iLitC )Gia_ManHashFind54,1599
int Gia_ManHashLookupInt( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManHashLookupInt81,2618
int Gia_ManHashLookup( Gia_Man_t * p, Gia_Obj_t * p0, Gia_Obj_t * p1 )Gia_ManHashLookup87,2837
void Gia_ManHashAlloc( Gia_Man_t * p )  Gia_ManHashAlloc105,3299
void Gia_ManHashStart( Gia_Man_t * p )  Gia_ManHashStart125,3969
void Gia_ManHashStop( Gia_Man_t * p )  Gia_ManHashStop149,4558
void Gia_ManHashResize( Gia_Man_t * p )Gia_ManHashResize166,4924
void Gia_ManHashProfile( Gia_Man_t * p )Gia_ManHashProfile207,6402
static inline Gia_Obj_t * Gia_ObjRecognizeMuxTwo( Gia_Obj_t * pNode0, Gia_Obj_t * pNode1, Gia_Obj_t ** ppNodeT, Gia_Obj_t ** ppNodeE )Gia_ObjRecognizeMuxTwo241,7583
static inline Gia_Obj_t * Gia_ManHashAndP( Gia_Man_t * p, Gia_Obj_t * p0, Gia_Obj_t * p1 )  Gia_ManHashAndP326,11055
static inline Gia_Obj_t * Gia_ManAddStrash( Gia_Man_t * p, Gia_Obj_t * p0, Gia_Obj_t * p1 )  Gia_ManAddStrash342,11561
int Gia_ManHashXorReal( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManHashXorReal469,16666
int Gia_ManHashMuxReal( Gia_Man_t * p, int iLitC, int iLit1, int iLit0 )  Gia_ManHashMuxReal521,18287
int Gia_ManHashAnd( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManHashAnd576,20266
int Gia_ManHashOr( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManHashOr621,21720
int Gia_ManHashAndTry( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManHashAndTry637,22101
int Gia_ManHashXor( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManHashXor668,22863
int Gia_ManHashMux( Gia_Man_t * p, int iCtrl, int iData1, int iData0 )  Gia_ManHashMux692,23704
int Gia_ManHashMaj( Gia_Man_t * p, int iData0, int iData1, int iData2 )  Gia_ManHashMaj720,24682
Gia_Man_t * Gia_ManRehash( Gia_Man_t * p, int fAddStrash )  Gia_ManRehash739,25217
int Gia_ManHashAndMulti( Gia_Man_t * p, Vec_Int_t * vLits )Gia_ManHashAndMulti783,26639
int Gia_ManHashAndMulti2( Gia_Man_t * p, Vec_Int_t * vLits )Gia_ManHashAndMulti2802,27249
int Gia_ManHashDualMiter( Gia_Man_t * p, Vec_Int_t * vOuts )Gia_ManHashDualMiter809,27448

src/aig/gia/giaIff.c,2907
typedef struct Iff_Man_t_ Iff_Man_t;Iff_Man_t30,813
struct Iff_Man_t_Iff_Man_t_31,850
    Gia_Man_t *     pGia;       // mapped GIApGia33,870
    If_LibLut_t *   pLib;       // LUT librarypLib34,916
    int             nLutSize;   // LUT sizenLutSize35,963
    int             nDegree;    // degree nDegree36,1007
    Vec_Flt_t *     vTimes;     // arrival timesvTimes37,1050
    Vec_Int_t *     vMatch[4];  // matchesvMatch38,1099
static inline float Iff_ObjTimeId( Iff_Man_t * p, int iObj )                                { return Vec_FltEntry( p->vTimes, iObj );                       }Iff_ObjTimeId41,1146
static inline float Iff_ObjTime( Iff_Man_t * p, Gia_Obj_t * pObj )                          { return Iff_ObjTimeId( p, Gia_ObjId(p->pGia, pObj) );          }Iff_ObjTime42,1304
static inline void  Iff_ObjSetTimeId( Iff_Man_t * p, int iObj, float Time )                 { Vec_FltWriteEntry( p->vTimes, iObj, Time );                   }Iff_ObjSetTimeId43,1462
static inline void  Iff_ObjSetTime( Iff_Man_t * p, Gia_Obj_t * pObj, float Time )           { Iff_ObjSetTimeId( p, Gia_ObjId(p->pGia, pObj), Time );        }Iff_ObjSetTime44,1620
static inline int   Iff_ObjMatchId( Iff_Man_t * p, int iObj, int Type )                     { return Vec_IntEntry( p->vMatch[Type], iObj );                 }Iff_ObjMatchId46,1779
static inline int   Iff_ObjMatch( Iff_Man_t * p, Gia_Obj_t * pObj, int Type )               { return Iff_ObjMatchId( p, Gia_ObjId(p->pGia, pObj), Type );   }Iff_ObjMatch47,1937
static inline void  Iff_ObjSetMatchId( Iff_Man_t * p, int iObj, int Type, int Match )       { Vec_IntWriteEntry( p->vMatch[Type], iObj, Match );            }Iff_ObjSetMatchId48,2095
static inline void  Iff_ObjSetMatch( Iff_Man_t * p, Gia_Obj_t * pObj, int Type, int Match ) { Iff_ObjSetMatchId( p, Gia_ObjId(p->pGia, pObj), Type, Match );}Iff_ObjSetMatch49,2253
Iff_Man_t * Gia_ManIffStart( Gia_Man_t * pGia )Gia_ManIffStart66,2866
void Gia_ManIffStop( Iff_Man_t * p )Gia_ManIffStop74,3160
int Gia_IffObjCount( Gia_Man_t * pGia, int iObj, int iFaninSkip2, int iFaninSkip3 )Gia_IffObjCount93,3585
float Gia_IffObjTimeOne( Iff_Man_t * p, int iObj, int iFaninSkip2, int iFaninSkip3 )Gia_IffObjTimeOne144,4981
float Gia_IffObjTimeTwo( Iff_Man_t * p, int iObj, int * piFanin, float DelayMin )Gia_IffObjTimeTwo165,5903
float Gia_IffObjTimeThree( Iff_Man_t * p, int iObj, int * piFanin, int * piFanin2, float DelayMin )Gia_IffObjTimeThree186,6534
Iff_Man_t * Gia_ManIffPerform( Gia_Man_t * pGia, If_LibLut_t * pLib, Tim_Man_t * pTime, int nLutSize, int nDegree )Gia_ManIffPerform226,7683
void Gia_ManIffSelect_rec( Iff_Man_t * p, int iObj, Vec_Int_t * vPacking )Gia_ManIffSelect_rec311,10821
Vec_Int_t * Gia_ManIffSelect( Iff_Man_t * p )Gia_ManIffSelect359,12739
void Gia_ManIffTest( Gia_Man_t * pGia, If_LibLut_t * pLib, int fVerbose )Gia_ManIffTest387,13593

src/aig/gia/giaAig.h,63
#define ABC__aig__gia__giaAig_hABC__aig__gia__giaAig_h22,536

src/aig/gia/giaTsim.c,3704
static inline int Gia_ManTerSimInfoGet( unsigned * pInfo, int i )Gia_ManTerSimInfoGet30,767
static inline void Gia_ManTerSimInfoSet( unsigned * pInfo, int i, int Value )Gia_ManTerSimInfoSet34,888
static inline unsigned * Gia_ManTerStateNext( unsigned * pState, int nWords )                      { return *((unsigned **)(pState + nWords));  }Gia_ManTerStateNext41,1119
static inline void       Gia_ManTerStateSetNext( unsigned * pState, int nWords, unsigned * pNext ) { *((unsigned **)(pState + nWords)) = pNext; }Gia_ManTerStateSetNext42,1265
typedef struct Gia_ManTer_t_ Gia_ManTer_t;Gia_ManTer_t45,1442
struct Gia_ManTer_t_Gia_ManTer_t_46,1485
    Gia_Man_t *    pAig;pAig48,1508
    int            nIters;nIters49,1533
    int            nStateWords;nStateWords50,1560
    Vec_Ptr_t *    vStates;vStates51,1592
    Vec_Ptr_t *    vFlops;vFlops52,1620
    Vec_Int_t *    vRetired;     // retired registersvRetired53,1647
    char *         pRetired;     // retired registerspRetired54,1701
    int *          pCount0;pCount055,1755
    int *          pCountX;pCountX56,1783
    int            nBins;nBins58,1840
    unsigned **    pBins;pBins59,1866
    unsigned *     pDataSim;     // simulation datapDataSim61,1922
    unsigned *     pDataSimCis;  // simulation data for CIspDataSimCis62,1974
    unsigned *     pDataSimCos;  // simulation data for COspDataSimCos63,2034
Gia_ManTer_t * Gia_ManTerCreate( Gia_Man_t * pAig )Gia_ManTerCreate81,2584
void Gia_ManTerStatesFree( Vec_Ptr_t * vStates )Gia_ManTerStatesFree113,3713
void Gia_ManTerDelete( Gia_ManTer_t * p )Gia_ManTerDelete133,4146
static inline void Gia_ManTerSimulateCi( Gia_ManTer_t * p, Gia_Obj_t * pObj, int iCi )Gia_ManTerSimulateCi162,4842
static inline void Gia_ManTerSimulateCo( Gia_ManTer_t * p, int iCo, Gia_Obj_t * pObj )Gia_ManTerSimulateCo178,5272
static inline void Gia_ManTerSimulateNode( Gia_ManTer_t * p, Gia_Obj_t * pObj )Gia_ManTerSimulateNode195,5768
static inline void Gia_ManTerSimInfoInit( Gia_ManTer_t * p )Gia_ManTerSimInfoInit213,6375
static inline void Gia_ManTerSimInfoTransfer( Gia_ManTer_t * p )Gia_ManTerSimInfoTransfer233,6900
int Gia_ManTerStateHash( unsigned * pState, int nWords, int nTableSize )Gia_ManTerStateHash254,7566
unsigned * Gia_ManTerStateLookup( unsigned * pState, int nWords, unsigned ** pBins, int nBins )Gia_ManTerStateLookup290,8994
void Gia_ManTerStateInsert( unsigned * pState, int nWords, unsigned ** pBins, int nBins )Gia_ManTerStateInsert311,9641
unsigned * Gia_ManTerStateAlloc( int nWords )Gia_ManTerStateAlloc330,10215
unsigned * Gia_ManTerStateCreate( Gia_ManTer_t * p )Gia_ManTerStateCreate346,10617
static inline void Gia_ManTerSimulateRound( Gia_ManTer_t * p )Gia_ManTerSimulateRound374,11427
int Gia_ManTerRetire2( Gia_ManTer_t * p, unsigned * pState )Gia_ManTerRetire2415,12706
int Gia_ManTerRetire( Gia_ManTer_t * p, unsigned * pThis, unsigned * pPrev )Gia_ManTerRetire451,14085
void Gia_ManTerStatePrint( unsigned * pState, int nRegs, int iNum )Gia_ManTerStatePrint476,14908
void Gia_ManTerAnalyze2( Vec_Ptr_t * vStates, int nRegs )Gia_ManTerAnalyze2505,15729
void Gia_ManTerAnalyze( Gia_ManTer_t * p )Gia_ManTerAnalyze547,17185
Vec_Ptr_t * Gia_ManTerTranspose( Gia_ManTer_t * p )Gia_ManTerTranspose572,17866
int Gia_ManFindEqualFlop( Vec_Ptr_t * vFlops, int iFlop, int nFlopWords )Gia_ManFindEqualFlop605,18896
int * Gia_ManTerCreateMap( Gia_ManTer_t * p, int fVerbose )Gia_ManTerCreateMap627,19516
Gia_ManTer_t * Gia_ManTerSimulate( Gia_Man_t * pAig, int fVerbose )Gia_ManTerSimulate668,20919
Gia_Man_t * Gia_ManReduceConst( Gia_Man_t * pAig, int fVerbose )Gia_ManReduceConst737,23288

src/aig/gia/giaProp.c,1352
#define GIA_SAT_SHIFT GIA_SAT_SHIFT30,782
#define GIA_ROOT_MASK GIA_ROOT_MASK31,807
#define GIA_PATH00_MASKGIA_PATH00_MASK32,830
#define GIA_PATH10_MASKGIA_PATH10_MASK33,854
#define GIA_PATH20_MASKGIA_PATH20_MASK34,878
#define GIA_PATH30_MASKGIA_PATH30_MASK35,902
#define GIA_PATH00_MASKGIA_PATH00_MASK36,926
#define GIA_PATH10_MASKGIA_PATH10_MASK37,950
#define GIA_PATH20_MASKGIA_PATH20_MASK38,974
#define GIA_PATH30_MASKGIA_PATH30_MASK39,998
static inline int Gia_SatObjIsRoot( Gia_Obj_t * p )      { return 0; }Gia_SatObjIsRoot41,1023
static inline int Gia_SatObjXorRoot( Gia_Obj_t * p )     { return 0; }Gia_SatObjXorRoot42,1094
static inline int Gia_SatObjIsAssigned( Gia_Obj_t * p )  { return 0; }Gia_SatObjIsAssigned45,1167
static inline int Gia_SatObjIsHeld( Gia_Obj_t * p )      { return 0; }Gia_SatObjIsHeld46,1238
static inline int Gia_SatObjValue( Gia_Obj_t * p )       { return 0; }Gia_SatObjValue47,1309
int Gia_SatPathCheckCutSat_rec( Gia_Obj_t * p, int fCompl )Gia_SatPathCheckCutSat_rec65,1872
int Gia_SatPathCheckCutSat( Gia_Obj_t * p )Gia_SatPathCheckCutSat87,2575
int Gia_SatPathUnbind_rec( Gia_Obj_t * p )Gia_SatPathUnbind_rec108,3061
int Gia_SatPathStart_rec( Gia_Obj_t * p, int fDiffs, int fCompl )Gia_SatPathStart_rec123,3395
int Gia_SatPathStart( Gia_Obj_t * p )Gia_SatPathStart160,4668

src/aig/gia/giaQbf.c,3971
typedef struct Qbf_Man_t_ Qbf_Man_t; Qbf_Man_t35,915
struct Qbf_Man_t_Qbf_Man_t_36,953
    Gia_Man_t *     pGia;           // original miterpGia38,973
    int             nPars;          // parameter variablesnPars39,1027
    int             nVars;          // functional variablesnVars40,1086
    int             fVerbose;       // verbose flagfVerbose41,1146
    int             iParVarBeg;     // SAT var ID of the first par variable in the ver solveriParVarBeg43,1224
    sat_solver *    pSatVer;        // verification instancepSatVer44,1318
    sat_solver *    pSatSyn;        // synthesis instancepSatSyn45,1379
    bmcg_sat_solver*pSatSynG;       // synthesis instancepSatSynG46,1437
    Vec_Int_t *     vValues;        // variable valuesvValues47,1495
    Vec_Int_t *     vParMap;        // parameter mappingvParMap48,1550
    Vec_Int_t *     vLits;          // literals for the SAT solvervLits49,1607
    abctime         clkStart;       // global timeoutclkStart50,1674
    abctime         clkSat;         // SAT solver timeclkSat51,1728
Vec_Int_t * Gia_GenCollectFlopIndexes( char * pStr, int nLutNum, int nLutSize, int nFlops )Gia_GenCollectFlopIndexes69,2293
int Gia_GenCreateMux_rec( Gia_Man_t * pNew, int * pCtrl, int nCtrl, Vec_Int_t * vData, int Shift )Gia_GenCreateMux_rec105,3453
Vec_Int_t * Gia_GenCreateMuxes( Gia_Man_t * p, Gia_Man_t * pNew, Vec_Int_t * vFlops, int nLutNum, int nLutSize, Vec_Int_t * vParLits, int fUseRi )Gia_GenCreateMuxes114,3871
Gia_Man_t * Gia_GenQbfMiter( Gia_Man_t * p, int nFrames, int nLutNum, int nLutSize, char * pStr, int fUseOut, int fVerbose )Gia_GenQbfMiter136,4738
int Gia_Gen2CreateMux_rec( Gia_Man_t * pNew, int * pCtrl, int nCtrl, Vec_Int_t * vData, int Shift )Gia_Gen2CreateMux_rec200,7329
Vec_Int_t * Gia_Gen2CreateMuxes( Gia_Man_t * pNew, int nLutSize, int nLutNum, Vec_Int_t * vPLits, Vec_Int_t * vXLits )Gia_Gen2CreateMuxes209,7750
Gia_Man_t * Gia_Gen2CreateMiter( int nLutSize, int nLutNum )Gia_Gen2CreateMiter223,8300
int Gia_Gen2CodeOne( int nLutSize, int nLutNum, Vec_Int_t * vCode, int x )Gia_Gen2CodeOne289,11228
word * Gia_Gen2CodeOneP( int nLutSize, int nLutNum, Vec_Int_t * vCode, int x )Gia_Gen2CodeOneP297,11467
void Gia_Gen2CodePrint( int nLutSize, int nLutNum, Vec_Int_t * vCode )Gia_Gen2CodePrint306,11785
void Gia_Gen2CodeTest()Gia_Gen2CodeTest373,14434
int Gia_ManSatEnum( Gia_Man_t * pGia, int nConfLimit, int nTimeOut, int fVerbose )Gia_ManSatEnum395,15039
void Gia_QbfDumpFile( Gia_Man_t * pGia, int nPars )Gia_QbfDumpFile454,17428
Qbf_Man_t * Gia_QbfAlloc( Gia_Man_t * pGia, int nPars, int fGlucose, int fVerbose )Gia_QbfAlloc497,18926
void Gia_QbfFree( Qbf_Man_t * p )Gia_QbfFree522,19953
Gia_Man_t * Gia_QbfQuantifyOne( Gia_Man_t * p, int iVar, int fAndAll, int fOrAll )Gia_QbfQuantifyOne544,20498
Gia_Man_t * Gia_QbfQuantifyAll( Gia_Man_t * p, int nPars, int fAndAll, int fOrAll )Gia_QbfQuantifyAll587,21953
Gia_Man_t * Gia_QbfCofactor( Gia_Man_t * p, int nPars, Vec_Int_t * vValues, Vec_Int_t * vParMap )Gia_QbfCofactor610,22553
void Cnf_SpecialDataLift( Cnf_Dat_t * p, int nVarsPlus, int firstPiVar, int lastPiVar)Cnf_SpecialDataLift658,24351
int Gia_QbfAddCofactor( Qbf_Man_t * p, Gia_Man_t * pCof )Gia_QbfAddCofactor671,24706
int Gia_QbfAddCofactorG( Qbf_Man_t * p, Gia_Man_t * pCof )Gia_QbfAddCofactorG697,25691
void Gia_QbfOnePattern( Qbf_Man_t * p, Vec_Int_t * vValues )Gia_QbfOnePattern724,26568
void Gia_QbfPrint( Qbf_Man_t * p, Vec_Int_t * vValues, int Iter )Gia_QbfPrint731,26845
int Gia_QbfVerify( Qbf_Man_t * p, Vec_Int_t * vValues )Gia_QbfVerify753,27757
void Gia_QbfAddSpecialConstr( Qbf_Man_t * p )Gia_QbfAddSpecialConstr781,28652
void Gia_QbfLearnConstraint( Qbf_Man_t * p, Vec_Int_t * vValues )Gia_QbfLearnConstraint794,29083
int Gia_QbfSolve( Gia_Man_t * pGia, int nPars, int nIterLimit, int nConfLimit, int nTimeOut, int nEncVars, int fGlucose, int fVerbose )Gia_QbfSolve832,30221

src/aig/gia/giaAig.c,2510
static inline int Gia_ObjChild0Copy( Aig_Obj_t * pObj )  { return Abc_LitNotCond( Aig_ObjFanin0(pObj)->iData, Aig_ObjFaninC0(pObj) ); }Gia_ObjChild0Copy34,888
static inline int Gia_ObjChild1Copy( Aig_Obj_t * pObj )  { return Abc_LitNotCond( Aig_ObjFanin1(pObj)->iData, Aig_ObjFaninC1(pObj) ); }Gia_ObjChild1Copy35,1024
static inline Aig_Obj_t * Gia_ObjChild0Copy2( Aig_Obj_t ** ppNodes, Gia_Obj_t * pObj, int Id )  { return Aig_NotCond( ppNodes[Gia_ObjFaninId0(pObj, Id)], Gia_ObjFaninC0(pObj) ); }Gia_ObjChild0Copy237,1161
static inline Aig_Obj_t * Gia_ObjChild1Copy2( Aig_Obj_t ** ppNodes, Gia_Obj_t * pObj, int Id )  { return Aig_NotCond( ppNodes[Gia_ObjFaninId1(pObj, Id)], Gia_ObjFaninC1(pObj) ); }Gia_ObjChild1Copy238,1341
void Gia_ManFromAig_rec( Gia_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Gia_ManFromAig_rec55,2008
Gia_Man_t * Gia_ManFromAig( Aig_Man_t * p )Gia_ManFromAig74,2711
void Gia_ManFromAigChoices_rec( Gia_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Gia_ManFromAigChoices_rec114,3919
Gia_Man_t * Gia_ManFromAigChoices( Aig_Man_t * p )Gia_ManFromAigChoices133,4713
Gia_Man_t * Gia_ManFromAigSimple( Aig_Man_t * p )Gia_ManFromAigSimple172,5940
Gia_Man_t * Gia_ManFromAigSwitch( Aig_Man_t * p )Gia_ManFromAigSwitch212,7147
void Gia_ManToAig_rec( Aig_Man_t * pNew, Aig_Obj_t ** ppNodes, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManToAig_rec254,8449
Aig_Man_t * Gia_ManToAig( Gia_Man_t * p, int fChoices )Gia_ManToAig278,9471
Aig_Man_t * Gia_ManToAigSkip( Gia_Man_t * p, int nOutDelta )Gia_ManToAigSkip325,11052
Aig_Man_t * Gia_ManToAigSimple( Gia_Man_t * p )Gia_ManToAigSimple368,12465
Aig_Man_t * Gia_ManCofactorAig( Aig_Man_t * p, int nFrames, int nCofFanLit )Gia_ManCofactorAig412,13987
void Gia_ManReprToAigRepr( Aig_Man_t * pAig, Gia_Man_t * pGia )Gia_ManReprToAigRepr436,14654
void Gia_ManReprToAigRepr2( Aig_Man_t * pAig, Gia_Man_t * pGia )Gia_ManReprToAigRepr2460,15458
void Gia_ManReprFromAigRepr( Aig_Man_t * pAig, Gia_Man_t * pGia )Gia_ManReprFromAigRepr488,16308
void Gia_ManReprFromAigRepr2( Aig_Man_t * pAig, Gia_Man_t * pGia )Gia_ManReprFromAigRepr2519,17423
Gia_Man_t * Gia_ManCompress2( Gia_Man_t * p, int fUpdateLevel, int fVerbose )Gia_ManCompress2552,18485
Gia_Man_t * Gia_ManPerformDch( Gia_Man_t * p, void * pPars )Gia_ManPerformDch578,19188
void Gia_ManSeqCleanupClasses( Gia_Man_t * p, int fConst, int fEquiv, int fVerbose )Gia_ManSeqCleanupClasses610,20129
int Gia_ManSolveSat( Gia_Man_t * p )Gia_ManSolveSat631,20702

src/aig/gia/giaSim5.c,167
void Sim_Init( Abc_Frame_t * pAbc ) {}Sim_Init30,793
void Sim_End( Abc_Frame_t * pAbc )  {}Sim_End31,832
void Gia_DatFree( Gia_Dat_t * p )   {}Gia_DatFree32,871

src/aig/gia/giaSat3.c,393
sat_solver3 * Gia_ManSat3Init( Cnf_Dat_t * pCnf )Gia_ManSat3Init47,1306
void Gia_ManSat3Report( int iOutput, int status, abctime clk )Gia_ManSat3Report62,1703
sat_solver3 * Gia_ManSat3Create( Gia_Man_t * p )Gia_ManSat3Create78,2127
int Gia_ManSat3CallOne( Gia_Man_t * p, int iOutput )Gia_ManSat3CallOne90,2495
void Gia_ManSat3Call( Gia_Man_t * p, int fSplit )Gia_ManSat3Call109,2964

src/aig/gia/giaFrames.c,3410
typedef struct Gia_ManFra_t_ Gia_ManFra_t;Gia_ManFra_t30,772
struct Gia_ManFra_t_Gia_ManFra_t_31,815
    Gia_ParFra_t *  pPars;    // parameterspPars33,838
    Gia_Man_t *     pAig;     // AIG to unrollpAig34,882
    Vec_Ptr_t *     vIns;     // inputs of each timeframe    vIns35,929
    Vec_Ptr_t *     vAnds;    // nodes of each timeframe    vAnds36,991
    Vec_Ptr_t *     vOuts;    // outputs of each timeframe    vOuts37,1052
typedef struct Gia_ManUnr_t_ Gia_ManUnr_t;Gia_ManUnr_t41,1120
struct Gia_ManUnr_t_Gia_ManUnr_t_42,1163
    Gia_ParFra_t *  pPars;    // parameterspPars44,1186
    Gia_Man_t *     pAig;     // AIG to unroll (points to pOrder)pAig45,1230
    Gia_Man_t *     pOrder;   // AIG reordered (points to pAig)pOrder47,1318
    Vec_Int_t *     vLimit;   // limits of each timeframevLimit48,1382
    Vec_Int_t *     vRank;    // rank of each nodevRank50,1474
    Vec_Int_t *     vDegree;  // degree of each nodevDegree51,1525
    Vec_Int_t *     vDegDiff; // degree of each nodevDegDiff52,1578
    Vec_Int_t *     vFirst;   // first entry in the storevFirst53,1631
    Vec_Int_t *     vStore;   // store for saved datavStore54,1689
    Gia_Man_t *     pNew;     // the resulting AIGpNew56,1768
    int             LastLit;  // the place to store the last literalLastLit57,1819
void Gia_ManUnrollDup_rec( Gia_Man_t * pNew, Gia_Obj_t * pObj, int Id ) Gia_ManUnrollDup_rec75,2375
Gia_Man_t * Gia_ManUnrollDup( Gia_Man_t * p, Vec_Int_t * vLimit )  Gia_ManUnrollDup107,3433
Vec_Ptr_t * Gia_ManUnrollAbs( Gia_Man_t * p, int nFrames )  Gia_ManUnrollAbs155,4815
Gia_ManUnr_t * Gia_ManUnrStart( Gia_Man_t * pAig, Gia_ParFra_t * pPars )  Gia_ManUnrStart225,7209
void Gia_ManUnrollStop( void * pMan )  Gia_ManUnrollStop310,10287
static inline void Gia_ObjUnrWrite( Gia_ManUnr_t * p, int Id, int Entry )  Gia_ObjUnrWrite335,10892
static inline int Gia_ObjUnrRead( Gia_ManUnr_t * p, int Id, int Degree )  Gia_ObjUnrRead342,11145
static inline int Gia_ObjUnrReadCopy0( Gia_ManUnr_t * p, Gia_Obj_t * pObj, int Id )  Gia_ObjUnrReadCopy0352,11453
static inline int Gia_ObjUnrReadCopy1( Gia_ManUnr_t * p, Gia_Obj_t * pObj, int Id )  Gia_ObjUnrReadCopy1357,11692
static inline int Gia_ObjUnrReadCi( Gia_ManUnr_t * p, int Id, int f, Gia_Man_t * pNew )  Gia_ObjUnrReadCi362,11933
void * Gia_ManUnrollStart( Gia_Man_t * pAig, Gia_ParFra_t * pPars )Gia_ManUnrollStart402,13501
void * Gia_ManUnrollAdd( void * pMan, int fMax )Gia_ManUnrollAdd437,14669
int Gia_ManUnrollLastLit( void * pMan )Gia_ManUnrollLastLit490,16379
Gia_Man_t * Gia_ManUnroll( Gia_Man_t * pAig, Gia_ParFra_t * pPars )Gia_ManUnroll507,16773
Gia_Man_t * Gia_ManFrames2( Gia_Man_t * pAig, Gia_ParFra_t * pPars )Gia_ManFrames2608,20064
void Gia_ManFraSetDefaultParams( Gia_ParFra_t * p )Gia_ManFraSetDefaultParams631,20606
Gia_ManFra_t * Gia_ManFraStart( Gia_Man_t * pAig, Gia_ParFra_t * pPars )  Gia_ManFraStart650,21134
void Gia_ManFraStop( Gia_ManFra_t * p )  Gia_ManFraStop671,21624
void Gia_ManFraSupports( Gia_ManFra_t * p )Gia_ManFraSupports690,22085
Gia_Man_t * Gia_ManFramesInit( Gia_Man_t * pAig, Gia_ParFra_t * pPars )Gia_ManFramesInit727,23359
Gia_Man_t * Gia_ManFrames( Gia_Man_t * pAig, Gia_ParFra_t * pPars )Gia_ManFrames840,27321
Gia_Man_t * Gia_ManFramesInitSpecial( Gia_Man_t * pAig, int nFrames, int fVerbose )Gia_ManFramesInitSpecial941,31169

src/aig/gia/giaDup.c,14366
void Gia_ManDupRemapLiterals( Vec_Int_t * vLits, Gia_Man_t * p )Gia_ManDupRemapLiterals50,1523
void Gia_ManDupRemapEquiv( Gia_Man_t * pNew, Gia_Man_t * p )Gia_ManDupRemapEquiv78,2261
void Gia_ManDupRemapCis( Gia_Man_t * pNew, Gia_Man_t * p )Gia_ManDupRemapCis124,3773
void Gia_ManDupRemapCos( Gia_Man_t * pNew, Gia_Man_t * p )Gia_ManDupRemapCos150,4536
int Gia_ManDupOrderDfs_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupOrderDfs_rec176,5277
Gia_Man_t * Gia_ManDupOrderDfs( Gia_Man_t * p )Gia_ManDupOrderDfs202,6258
Gia_Man_t * Gia_ManDupAbs( Gia_Man_t * p, Vec_Int_t * vMapPpi2Ff, Vec_Int_t * vMapFf2Ppi )Gia_ManDupAbs235,7238
Gia_Man_t * Gia_ManDupOutputGroup( Gia_Man_t * p, int iOutStart, int iOutStop )Gia_ManDupOutputGroup309,9777
Gia_Man_t * Gia_ManDupOutputVec( Gia_Man_t * p, Vec_Int_t * vOutPres )Gia_ManDupOutputVec338,10559
Gia_Man_t * Gia_ManDupSelectedOutputs( Gia_Man_t * p, Vec_Int_t * vOutsLeft )Gia_ManDupSelectedOutputs372,11661
void Gia_ManDupOrderDfsChoices_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupOrderDfsChoices_rec404,12705
Gia_Man_t * Gia_ManDupOrderDfsChoices( Gia_Man_t * p )Gia_ManDupOrderDfsChoices434,13731
Gia_Man_t * Gia_ManDupOrderDfsReverse( Gia_Man_t * p )Gia_ManDupOrderDfsReverse469,14794
Gia_Man_t * Gia_ManDupOrderAiger( Gia_Man_t * p )Gia_ManDupOrderAiger503,15830
Gia_Man_t * Gia_ManDupOnsetOffset( Gia_Man_t * p )Gia_ManDupOnsetOffset535,16869
Gia_Man_t * Gia_ManDupLastPis( Gia_Man_t * p, int nLastPis )Gia_ManDupLastPis568,17927
Gia_Man_t * Gia_ManDupFlip( Gia_Man_t * p, int * pInitState )Gia_ManDupFlip599,19011
void Gia_ManCycle( Gia_Man_t * p, Abc_Cex_t * pCex, int nFrames )Gia_ManCycle642,20492
Gia_Man_t * Gia_ManDupCycled( Gia_Man_t * p, Abc_Cex_t * pCex, int nFrames )Gia_ManDupCycled662,21364
Gia_Man_t * Gia_ManDup( Gia_Man_t * p )Gia_ManDup691,22110
Gia_Man_t * Gia_ManDup2( Gia_Man_t * p1, Gia_Man_t * p2 )Gia_ManDup2722,23322
Gia_Man_t * Gia_ManDupWithAttributes( Gia_Man_t * p )Gia_ManDupWithAttributes747,24393
Gia_Man_t * Gia_ManDupRemovePis( Gia_Man_t * p, int nRemPis )Gia_ManDupRemovePis768,25136
Gia_Man_t * Gia_ManDupZero( Gia_Man_t * p )Gia_ManDupZero801,26198
Gia_Man_t * Gia_ManDupPerm( Gia_Man_t * p, Vec_Int_t * vPiPerm )Gia_ManDupPerm825,26879
Gia_Man_t * Gia_ManDupPermFlop( Gia_Man_t * p, Vec_Int_t * vFfPerm )Gia_ManDupPermFlop856,28057
Gia_Man_t * Gia_ManDupSpreadFlop( Gia_Man_t * p, Vec_Int_t * vFfMask )Gia_ManDupSpreadFlop884,29355
Gia_Man_t * Gia_ManDupPermFlopGap( Gia_Man_t * p, Vec_Int_t * vFfMask )Gia_ManDupPermFlopGap920,30650
Gia_Man_t * Gia_ManDupPiPerm( Gia_Man_t * p )Gia_ManDupPiPerm941,31250
void Gia_ManDupAppend( Gia_Man_t * pNew, Gia_Man_t * pTwo )Gia_ManDupAppend986,32767
void Gia_ManDupAppendShare( Gia_Man_t * pNew, Gia_Man_t * pTwo )Gia_ManDupAppendShare1005,33421
Gia_Man_t * Gia_ManDupAppendNew( Gia_Man_t * pOne, Gia_Man_t * pTwo )Gia_ManDupAppendNew1023,34117
Gia_Man_t * Gia_ManDupInvMiter( Gia_Man_t * p, Gia_Man_t * pInv )Gia_ManDupInvMiter1079,36335
Gia_Man_t * Gia_ManDupAppendCones( Gia_Man_t * p, Gia_Man_t ** ppCones, int nCones, int fOnlyRegs )Gia_ManDupAppendCones1137,38495
Gia_Man_t * Gia_ManDupSelf( Gia_Man_t * p )Gia_ManDupSelf1191,40492
Gia_Man_t * Gia_ManDupFlopClass( Gia_Man_t * p, int iClass )Gia_ManDupFlopClass1231,41847
Gia_Man_t * Gia_ManDupMarked( Gia_Man_t * p )Gia_ManDupMarked1276,43526
Gia_Man_t * Gia_ManDupTimes( Gia_Man_t * p, int nTimes )Gia_ManDupTimes1379,47091
int Gia_ManDupDfs2_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupDfs2_rec1459,49799
Gia_Man_t * Gia_ManDupDfs2( Gia_Man_t * p )Gia_ManDupDfs21491,51067
void Gia_ManDupDfs_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupDfs_rec1530,52289
Gia_Man_t * Gia_ManDupDfs( Gia_Man_t * p )Gia_ManDupDfs1539,52647
Gia_Man_t * Gia_ManDupDfsOnePo( Gia_Man_t * p, int iPo )Gia_ManDupDfsOnePo1561,53416
void Gia_ManDupCofactorVar_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupCofactorVar_rec1597,54585
Gia_Man_t * Gia_ManDupCofactorVar( Gia_Man_t * p, int iVar, int Value )Gia_ManDupCofactorVar1606,54965
Gia_Man_t * Gia_ManDupMux( int iVar, Gia_Man_t * pCof1, Gia_Man_t * pCof0 )Gia_ManDupMux1632,55924
Gia_Man_t * Gia_ManDupCofactorObj( Gia_Man_t * p, int iObj, int Value )Gia_ManDupCofactorObj1680,57603
Gia_Man_t * Gia_ManDupBlock( Gia_Man_t * p, int nBlock )Gia_ManDupBlock1721,59031
Gia_Man_t * Gia_ManDupExist( Gia_Man_t * p, int iVar )Gia_ManDupExist1757,60249
Gia_Man_t * Gia_ManDupUniv( Gia_Man_t * p, int iVar )Gia_ManDupUniv1804,61919
Gia_Man_t * Gia_ManDupExist2( Gia_Man_t * p, int iVar )Gia_ManDupExist21855,63685
Gia_Man_t * Gia_ManDupDfsSkip( Gia_Man_t * p )Gia_ManDupDfsSkip1903,65266
Gia_Man_t * Gia_ManDupDfsCone( Gia_Man_t * p, Gia_Obj_t * pRoot )Gia_ManDupDfsCone1933,66121
void Gia_ManDupConeSupp_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vObjs )Gia_ManDupConeSupp_rec1963,67010
Gia_Man_t * Gia_ManDupConeSupp( Gia_Man_t * p, int iLit, Vec_Int_t * vCiIds )Gia_ManDupConeSupp1980,67786
void Gia_ManDupConeBack_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupConeBack_rec2005,68944
int Gia_ManDupConeBack( Gia_Man_t * p, Gia_Man_t * pNew, Vec_Int_t * vCiIds )Gia_ManDupConeBack2015,69411
int Gia_ManDupConeBackObjs( Gia_Man_t * p, Gia_Man_t * pNew, Vec_Int_t * vObjs )Gia_ManDupConeBackObjs2027,69899
void Gia_ManDupDfs3_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupDfs3_rec2052,70666
Gia_Man_t * Gia_ManDupDfsNode( Gia_Man_t * p, Gia_Obj_t * pRoot )Gia_ManDupDfsNode2066,71129
Gia_Man_t * Gia_ManDupDfsLitArray( Gia_Man_t * p, Vec_Int_t * vLits )Gia_ManDupDfsLitArray2091,71846
Vec_Int_t * Gia_ManDupTrimmedNonZero( Gia_Man_t * p )Gia_ManDupTrimmedNonZero2123,72832
int Gia_ManPoIsToRemove( Gia_Man_t * p, Gia_Obj_t * pObj, int Value )Gia_ManPoIsToRemove2156,73824
Gia_Man_t * Gia_ManDupTrimmed( Gia_Man_t * p, int fTrimCis, int fTrimCos, int fDualOut, int OutValue )Gia_ManDupTrimmed2176,74420
Gia_Man_t * Gia_ManDupTrimmed2( Gia_Man_t * p )Gia_ManDupTrimmed22257,77455
Gia_Man_t * Gia_ManDupOntop( Gia_Man_t * p, Gia_Man_t * p2 )Gia_ManDupOntop2310,79386
Gia_Man_t * Gia_ManDupWithNewPo( Gia_Man_t * p1, Gia_Man_t * p2 )Gia_ManDupWithNewPo2354,80932
void Gia_ManPrintRepr( Gia_Man_t * p )Gia_ManPrintRepr2407,82726
Gia_Man_t * Gia_ManDupDfsCiMap( Gia_Man_t * p, int * pCi2Lit, Vec_Int_t * vLits )Gia_ManDupDfsCiMap2428,83213
Gia_Man_t * Gia_ManPermuteInputs( Gia_Man_t * p, int nPpis, int nExtra )Gia_ManPermuteInputs2478,84663
Gia_Man_t * Gia_ManDupDfsClasses( Gia_Man_t * p )Gia_ManDupDfsClasses2515,86168
Gia_Man_t * Gia_ManDupTopAnd_iter( Gia_Man_t * p, int fVerbose )  Gia_ManDupTopAnd_iter2549,87126
Gia_Man_t * Gia_ManDupTopAnd( Gia_Man_t * p, int fVerbose )  Gia_ManDupTopAnd2650,90378
int Gia_ManMiter_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManMiter_rec2682,91243
Gia_Man_t * Gia_ManMiter( Gia_Man_t * p0, Gia_Man_t * p1, int nInsDup, int fDualOut, int fSeq, int fImplic, int fVerbose )Gia_ManMiter2703,91878
Gia_Man_t * Gia_ManDupAndOr( Gia_Man_t * p, int nOuts, int fUseOr, int fCompl )Gia_ManDupAndOr2850,97061
Vec_Ptr_t * Gia_ManMiterNames( Vec_Ptr_t * p, int nOuts )Gia_ManMiterNames2899,98661
Gia_Man_t * Gia_ManTransformMiter( Gia_Man_t * p )Gia_ManTransformMiter2928,99551
Gia_Man_t * Gia_ManTransformMiter2( Gia_Man_t * p )Gia_ManTransformMiter22961,100800
Gia_Man_t * Gia_ManTransformToDual( Gia_Man_t * p )Gia_ManTransformToDual2992,101952
Gia_Man_t * Gia_ManTransformTwoWord2DualOutput( Gia_Man_t * p )Gia_ManTransformTwoWord2DualOutput3017,102819
void Gia_ManCollectOneSide_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Gia_ManCollectOneSide_rec3049,103966
Vec_Int_t * Gia_ManCollectOneSide( Gia_Man_t * p, int iSide )Gia_ManCollectOneSide3060,104377
Gia_Man_t * Gia_ManTransformDualOutput( Gia_Man_t * p )Gia_ManTransformDualOutput3070,104723
Gia_Man_t * Gia_ManDupZeroUndc( Gia_Man_t * p, char * pInit, int nNewPis, int fGiaSimple, int fVerbose )Gia_ManDupZeroUndc3121,106525
Gia_Man_t * Gia_ManMiter2( Gia_Man_t * pStart, char * pInit, int fVerbose )Gia_ManMiter23203,109619
int Gia_ManChoiceMiter_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManChoiceMiter_rec3293,113244
Gia_Man_t * Gia_ManChoiceMiter( Vec_Ptr_t * vGias )Gia_ManChoiceMiter3315,114000
Gia_Man_t * Gia_ManDupWithConstraints( Gia_Man_t * p, Vec_Int_t * vPoTypes )Gia_ManDupWithConstraints3368,115827
int Gia_ObjCompareByCioId( Gia_Obj_t ** pp1, Gia_Obj_t ** pp2 )Gia_ObjCompareByCioId3407,117310
void Gia_ManDupCones_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vNodes, Vec_Ptr_t * vRoots )Gia_ManDupCones_rec3413,117492
Gia_Man_t * Gia_ManDupCones( Gia_Man_t * p, int * pPos, int nPos, int fTrimPis )Gia_ManDupCones3432,118256
Gia_Man_t * Gia_ManDupAndCones( Gia_Man_t * p, int * pAnds, int nAnds, int fTrimPis )Gia_ManDupAndCones3491,120363
void Gia_ManDupAndConesLimit_rec( Gia_Man_t * pNew, Gia_Man_t * p, int iObj, int Level )Gia_ManDupAndConesLimit_rec3555,122762
Gia_Man_t * Gia_ManDupAndConesLimit( Gia_Man_t * p, int * pAnds, int nAnds, int Level )Gia_ManDupAndConesLimit3571,123471
void Gia_ManDupAndConesLimit2_rec( Gia_Man_t * pNew, Gia_Man_t * p, int iObj, int Level )Gia_ManDupAndConesLimit2_rec3588,124023
Gia_Man_t * Gia_ManDupAndConesLimit2( Gia_Man_t * p, int * pAnds, int nAnds, int Level )Gia_ManDupAndConesLimit23604,124720
Gia_Man_t * Gia_ManOneHot( int nSkips, int nVars )Gia_ManOneHot3632,125578
Gia_Man_t * Gia_ManDupOneHot( Gia_Man_t * p )Gia_ManDupOneHot3658,126543
Gia_Man_t * Gia_ManDupLevelized( Gia_Man_t * p )Gia_ManDupLevelized3685,127324
Gia_Man_t * Gia_ManDupFromVecs( Gia_Man_t * p, Vec_Int_t * vCis, Vec_Int_t * vAnds, Vec_Int_t * vCos, int nRegs )Gia_ManDupFromVecs3726,128719
Gia_Man_t * Gia_ManDupSliced( Gia_Man_t * p, int nSuppMax )Gia_ManDupSliced3761,129809
void Gia_ManDupWithConstrCollectAnd_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper, int fFirst )Gia_ManDupWithConstrCollectAnd_rec3809,131174
Gia_Man_t * Gia_ManDupWithConstr( Gia_Man_t * p )Gia_ManDupWithConstr3819,131597
int Gia_ManSortByValue( Gia_Obj_t ** pp1, Gia_Obj_t ** pp2 )Gia_ManSortByValue3895,133987
Gia_Man_t * Gia_ManDupOuts( Gia_Man_t * p )Gia_ManDupOuts3916,134477
Vec_Wec_t * Gia_ManCreateNodeSupps( Gia_Man_t * p, Vec_Int_t * vNodes, int fVerbose )Gia_ManCreateNodeSupps3951,135605
Vec_Wec_t * Gia_ManCreateCoSupps( Gia_Man_t * p, int fVerbose )Gia_ManCreateCoSupps3971,136493
int Gia_ManCoSuppSizeMax( Gia_Man_t * p, Vec_Wec_t * vSupps )Gia_ManCoSuppSizeMax3990,137349
int Gia_ManCoLargestSupp( Gia_Man_t * p, Vec_Wec_t * vSupps )Gia_ManCoLargestSupp4002,137669
Vec_Int_t * Gia_ManSortCoBySuppSize( Gia_Man_t * p, Vec_Wec_t * vSupps )Gia_ManSortCoBySuppSize4018,138073
int Gia_ManDupHashDfs_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManDupHashDfs_rec4043,138948
void Gia_ManDupCleanDfs_rec( Gia_Obj_t * pObj )Gia_ManDupCleanDfs_rec4052,139335
Gia_Man_t * Gia_ManDupStrashReduce( Gia_Man_t * p, Vec_Wec_t * vSupps, Vec_Int_t ** pvCoMap )Gia_ManDupStrashReduce4063,139632
Gia_Man_t * Gia_ManIsoStrashReduce2( Gia_Man_t * p, Vec_Ptr_t ** pvPosEquivs, int fVerbose )Gia_ManIsoStrashReduce24125,142013
int Gia_ManIsoStrashReduceOne( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp )Gia_ManIsoStrashReduceOne4136,142362
Vec_Wec_t * Gia_ManIsoStrashReduceInt( Gia_Man_t * p, Vec_Wec_t * vSupps, int fVerbose )Gia_ManIsoStrashReduceInt4151,142978
Gia_Man_t * Gia_ManIsoStrashReduce( Gia_Man_t * p, Vec_Ptr_t ** pvPosEquivs, int fVerbose )Gia_ManIsoStrashReduce4193,144563
Gia_Man_t * Gia_ManDupDemiter( Gia_Man_t * p, int fVerbose )Gia_ManDupDemiter4225,145595
void Gia_ManDupDemiterOrderXors2( Gia_Man_t * p, Vec_Int_t * vXors )Gia_ManDupDemiterOrderXors24284,147754
int Gia_ManDupDemiterFindMin( Vec_Wec_t * vSupps, Vec_Int_t * vTakenIns, Vec_Int_t * vTakenOuts )Gia_ManDupDemiterFindMin4299,148328
void Gia_ManDupDemiterOrderXors( Gia_Man_t * p, Vec_Int_t * vXors )Gia_ManDupDemiterOrderXors4319,148902
void Gia_ManSetMark0Dfs_rec( Gia_Man_t * p, int iObj )Gia_ManSetMark0Dfs_rec4359,150309
void Gia_ManSetMark1Dfs_rec( Gia_Man_t * p, int iObj )Gia_ManSetMark1Dfs_rec4371,150657
int Gia_ManCountMark0Dfs_rec( Gia_Man_t * p, int iObj )Gia_ManCountMark0Dfs_rec4384,151006
int Gia_ManCountMark0Dfs( Gia_Man_t * p, int iObj )Gia_ManCountMark0Dfs4396,151444
int Gia_ManCountMark1Dfs_rec( Gia_Man_t * p, int iObj )Gia_ManCountMark1Dfs_rec4401,151581
int Gia_ManCountMark1Dfs( Gia_Man_t * p, int iObj )Gia_ManCountMark1Dfs4413,152019
int Gia_ManDecideWhereToAdd( Gia_Man_t * p, Vec_Int_t * vPart[2], Gia_Obj_t * pFan[2] )Gia_ManDecideWhereToAdd4419,152157
void Gia_ManCollectTopXors_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vXors )Gia_ManCollectTopXors_rec4430,152648
Vec_Int_t * Gia_ManCollectTopXors( Gia_Man_t * p )Gia_ManCollectTopXors4448,153315
Gia_Man_t * Gia_ManDemiterToDual( Gia_Man_t * p )Gia_ManDemiterToDual4506,155470
void Gia_ManCollectDfs_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vNodes )Gia_ManCollectDfs_rec4556,157157
Vec_Int_t * Gia_ManCollectReach( Gia_Man_t * p, int fOdd )Gia_ManCollectReach4569,157610
int Gia_ManDemiterDual( Gia_Man_t * p, Gia_Man_t ** pp0, Gia_Man_t ** pp1 )Gia_ManDemiterDual4580,157990
Vec_Int_t * Gia_ManCollectReach2( Gia_Man_t * p, int fSecond )Gia_ManCollectReach24621,159369
int Gia_ManDemiterTwoWords( Gia_Man_t * p, Gia_Man_t ** pp0, Gia_Man_t ** pp1 )Gia_ManDemiterTwoWords4632,159771
Gia_Man_t * Gia_ManDupHalfSeq( Gia_Man_t * p, int fSecond )Gia_ManDupHalfSeq4675,161173
void Gia_ManSeqEquivMerge( Gia_Man_t * p, Gia_Man_t * pPart[2] )Gia_ManSeqEquivMerge4725,162860
void Gia_ManPrintEquivs( Gia_Man_t * p )Gia_ManPrintEquivs4783,164965
void Gia_ManSeqEquivDivide( Gia_Man_t * p, Cec_ParCor_t * pPars )Gia_ManSeqEquivDivide4811,165657
Gia_Man_t * Gia_ManScorrDivideTest( Gia_Man_t * p, Cec_ParCor_t * pPars )Gia_ManScorrDivideTest4832,166432
void Gia_ManHighLightFlopLogic( Gia_Man_t * p )Gia_ManHighLightFlopLogic4857,167175
Gia_Man_t * Gia_ManDupReplaceCut( Gia_Man_t * p )Gia_ManDupReplaceCut4869,167583

src/aig/gia/giaClp.c,1036
Vec_Ptr_t * Gia_GetFakeNames( int nNames )Gia_GetFakeNames56,1673
int Gia_ManRebuildIsop( DdManager * dd, DdNode * bLocal, Gia_Man_t * pNew, Vec_Int_t * vFanins, Vec_Str_t * vSop, Vec_Str_t * vCube )Gia_ManRebuildIsop92,2410
int Gia_ManRebuildNode( Dsd_Manager_t * pManDsd, Dsd_Node_t * pNodeDsd, Gia_Man_t * pNew, DdManager * ddNew, Vec_Int_t * vFanins, Vec_Str_t * vSop, Vec_Str_t * vCube )Gia_ManRebuildNode148,4210
Gia_Man_t * Gia_ManRebuild( Gia_Man_t * p, Dsd_Manager_t * pManDsd, DdManager * ddNew )Gia_ManRebuild211,6302
void Gia_ManCollapseDeref( DdManager * dd, Vec_Ptr_t * vFuncs )Gia_ManCollapseDeref278,8266
void Gia_ObjCollapseDeref( Gia_Man_t * p, DdManager * dd, Vec_Ptr_t * vFuncs, int Id )Gia_ObjCollapseDeref286,8509
Vec_Ptr_t * Gia_ManCollapse( Gia_Man_t * p, DdManager * dd, int nBddLimit, int fVerbose )Gia_ManCollapse293,8760
Gia_Man_t * Gia_ManCollapseTest( Gia_Man_t * p, int fVerbose )Gia_ManCollapseTest351,10995
void Gia_ManCollapseTestTest( Gia_Man_t * p )Gia_ManCollapseTestTest398,12871

src/aig/gia/giaEquiv.c,6695
void Gia_ManOrigIdsInit( Gia_Man_t * p )Gia_ManOrigIdsInit46,1317
void Gia_ManOrigIdsStart( Gia_Man_t * p )Gia_ManOrigIdsStart51,1455
void Gia_ManOrigIdsRemap( Gia_Man_t * p, Gia_Man_t * pNew )Gia_ManOrigIdsRemap56,1591
void Gia_ManOrigIdsRemapPairsInsert( Vec_Int_t * vMap, int One, int Two )Gia_ManOrigIdsRemapPairsInsert71,2341
int Gia_ManOrigIdsRemapPairsExtract( Vec_Int_t * vMap, int One )Gia_ManOrigIdsRemapPairsExtract81,2692
Vec_Int_t * Gia_ManOrigIdsRemapPairs( Vec_Int_t * vEquivPairs, int nObjs )Gia_ManOrigIdsRemapPairs87,2899
Gia_Man_t * Gia_ManOrigIdsReduce( Gia_Man_t * p, Vec_Int_t * vPairs )Gia_ManOrigIdsReduce106,3701
Gia_Man_t * Gia_ManOrigIdsReduceTest( Gia_Man_t * p, Vec_Int_t * vPairs )Gia_ManOrigIdsReduceTest160,5516
Gia_Man_t * Gia_ManComputeGiaEquivs( Gia_Man_t * pGia, int nConfs, int fVerbose )Gia_ManComputeGiaEquivs183,6150
int Gia_ManCheckTopoOrder_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCheckTopoOrder_rec209,6913
int Gia_ManCheckTopoOrder( Gia_Man_t * p )Gia_ManCheckTopoOrder236,7767
int * Gia_ManDeriveNexts( Gia_Man_t * p )Gia_ManDeriveNexts260,8405
void Gia_ManDeriveReprs( Gia_Man_t * p )Gia_ManDeriveReprs292,9319
int Gia_ManEquivCountLitsAll( Gia_Man_t * p )Gia_ManEquivCountLitsAll323,10153
int Gia_ManEquivCountClasses( Gia_Man_t * p )Gia_ManEquivCountClasses342,10573
int Gia_ManEquivCheckLits( Gia_Man_t * p, int nLits )Gia_ManEquivCheckLits363,11034
void Gia_ManPrintStatsClasses( Gia_Man_t * p )Gia_ManPrintStatsClasses382,11528
int Gia_ManEquivCountLits( Gia_Man_t * p )Gia_ManEquivCountLits416,12578
int Gia_ManEquivCountOne( Gia_Man_t * p, int i )Gia_ManEquivCountOne445,13325
void Gia_ManEquivPrintOne( Gia_Man_t * p, int i, int Counter )Gia_ManEquivPrintOne455,13531
void Gia_ManEquivPrintClasses( Gia_Man_t * p, int fVerbose, float Mem )Gia_ManEquivPrintClasses467,13959
int Gia_ManChoiceMinLevel_rec( Gia_Man_t * p, int iPivot, int fDiveIn, Vec_Int_t * vMap )Gia_ManChoiceMinLevel_rec524,15772
Vec_Int_t * Gia_ManChoiceMinLevel( Gia_Man_t * p )Gia_ManChoiceMinLevel557,17006
static inline Gia_Obj_t * Gia_ManEquivRepr( Gia_Man_t * p, Gia_Obj_t * pObj, int fUseAll, int fDualOut )Gia_ManEquivRepr584,17775
void Gia_ManEquivReduce_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, int fUseAll, int fDualOut )Gia_ManEquivReduce_rec613,18661
Gia_Man_t * Gia_ManEquivReduce( Gia_Man_t * p, int fUseAll, int fDualOut, int fSkipPhase, int fVerbose )Gia_ManEquivReduce641,19660
void Gia_ManEquivReduce2_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vMap, int fDiveIn )Gia_ManEquivReduce2_rec726,22491
Gia_Man_t * Gia_ManEquivReduce2( Gia_Man_t * p )Gia_ManEquivReduce2751,23543
void Gia_ManEquivFixOutputPairs( Gia_Man_t * p )Gia_ManEquivFixOutputPairs821,25829
void Gia_ManEquivUpdatePointers( Gia_Man_t * p, Gia_Man_t * pNew )Gia_ManEquivUpdatePointers849,26542
void Gia_ManEquivDeriveReprs( Gia_Man_t * p, Gia_Man_t * pNew, Gia_Man_t * pFinal )Gia_ManEquivDeriveReprs874,27141
Gia_Man_t * Gia_ManEquivRemapDfs( Gia_Man_t * p )Gia_ManEquivRemapDfs933,29006
Gia_Man_t * Gia_ManEquivReduceAndRemap( Gia_Man_t * p, int fSeq, int fMiterPairs )Gia_ManEquivReduceAndRemap979,30505
int Gia_ManEquivSetColor_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int fOdds )Gia_ManEquivSetColor_rec1014,31526
int Gia_ManEquivSetColors( Gia_Man_t * p, int fVerbose )Gia_ManEquivSetColors1036,32267
static inline void Gia_ManSpecBuild( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vXorLits, int fDualOut, int fSpeculate, Vec_Int_t * vTrace, Vec_Int_t * vGuide, Vec_Int_t * vMap )Gia_ManSpecBuild1072,33498
void Gia_ManSpecReduce_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vXorLits, int fDualOut, int fSpeculate, Vec_Int_t * vTrace, Vec_Int_t * vGuide, Vec_Int_t * vMap )Gia_ManSpecReduce_rec1114,34944
Gia_Man_t * Gia_ManSpecReduceTrace( Gia_Man_t * p, Vec_Int_t * vTrace, Vec_Int_t * vMap )Gia_ManSpecReduceTrace1136,35896
Gia_Man_t * Gia_ManSpecReduce( Gia_Man_t * p, int fDualOut, int fSynthesis, int fSpeculate, int fSkipSome, int fVerbose )Gia_ManSpecReduce1192,37787
void Gia_ManSpecBuildInit( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vXorLits, int f, int fDualOut )Gia_ManSpecBuildInit1280,40694
void Gia_ManSpecReduceInit_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vXorLits, int f, int fDualOut )Gia_ManSpecReduceInit_rec1307,41749
Gia_Man_t * Gia_ManSpecReduceInit( Gia_Man_t * p, Abc_Cex_t * pInit, int nFrames, int fDualOut )Gia_ManSpecReduceInit1329,42617
Gia_Man_t * Gia_ManSpecReduceInitFrames( Gia_Man_t * p, Abc_Cex_t * pInit, int nFramesMax, int * pnFrames, int fDualOut, int nMinOutputs )Gia_ManSpecReduceInitFrames1419,45764
void Gia_ManEquivTransform( Gia_Man_t * p, int fVerbose )Gia_ManEquivTransform1458,46944
void Gia_ManEquivMark( Gia_Man_t * p, char * pFileName, int fSkipSome, int fVerbose )Gia_ManEquivMark1519,48844
void Gia_ManEquivFilter( Gia_Man_t * p, Vec_Int_t * vPoIds, int fVerbose )Gia_ManEquivFilter1617,52195
void Gia_ManEquivFilterTest( Gia_Man_t * p )Gia_ManEquivFilterTest1693,55056
void Gia_ManEquivImprove( Gia_Man_t * p )Gia_ManEquivImprove1719,55710
int Gia_ObjCheckTfi_rec( Gia_Man_t * p, Gia_Obj_t * pOld, Gia_Obj_t * pNode, Vec_Ptr_t * vVisited )Gia_ObjCheckTfi_rec1780,57733
int Gia_ObjCheckTfi( Gia_Man_t * p, Gia_Obj_t * pOld, Gia_Obj_t * pNode )Gia_ObjCheckTfi1816,58838
void Gia_ManAddNextEntry_rec( Gia_Man_t * p, Gia_Obj_t * pOld, Gia_Obj_t * pNode )Gia_ManAddNextEntry_rec1843,59560
void Gia_ManEquivToChoices_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManEquivToChoices_rec1864,60132
void Gia_ManRemoveBadChoices( Gia_Man_t * p )Gia_ManRemoveBadChoices1925,62762
Gia_Man_t * Gia_ManEquivToChoices( Gia_Man_t * p, int nSnapshots )Gia_ManEquivToChoices1973,64089
int Gia_ManCountChoiceNodes( Gia_Man_t * p )Gia_ManCountChoiceNodes2030,66067
int Gia_ManCountChoices( Gia_Man_t * p )Gia_ManCountChoices2052,66591
int Gia_ManHasNoEquivs( Gia_Man_t * p )Gia_ManHasNoEquivs2084,67279
int Gia_CommandSpecI( Gia_Man_t * pGia, int nFramesInit, int nBTLimitInit, int fStart, int fCheckMiter, int fVerbose )Gia_CommandSpecI2107,67811
int Gia_ManFilterEquivsForSpeculation( Gia_Man_t * pGia, char * pName1, char * pName2, int fLatchA, int fLatchB )Gia_ManFilterEquivsForSpeculation2206,71399
int Gia_ManFilterEquivsUsingParts( Gia_Man_t * pGia, char * pName1, char * pName2 )Gia_ManFilterEquivsUsingParts2343,75615
void Gia_ManFilterEquivsUsingLatches( Gia_Man_t * pGia, int fFlopsOnly, int fFlopsWith, int fUseRiDrivers )Gia_ManFilterEquivsUsingLatches2491,80147

src/aig/gia/giaRex.c,1987
void Gia_ManAutomSimulate( Gia_Man_t * p, Vec_Int_t * vAlpha, char * pSim )Gia_ManAutomSimulate46,1287
void Gia_ManBuild1Hot_rec( Gia_Man_t * p, int * pLits, int nLits, int * pZero, int * pOne )Gia_ManBuild1Hot_rec85,2614
int Gia_ManBuild1Hot( Gia_Man_t * p, Vec_Int_t * vLits )Gia_ManBuild1Hot99,3165
static inline int Gia_SymbSpecial( char c ) { return c == '(' || c == ')' || c == '*' || c == '|'; }Gia_SymbSpecial118,3734
int Gia_ManRexNumInputs( char * pStr, Vec_Int_t ** pvAlphas, Vec_Int_t ** pvStr2Sta )Gia_ManRexNumInputs120,3900
void Gia_ManPrintAutom( char * pStr, Vec_Int_t * vStaTrans )Gia_ManPrintAutom139,4584
void Gia_ManPrintReached( char * pStr, int iState, Vec_Int_t * vReached )Gia_ManPrintReached151,5001
void Gia_ManPrintReached_rec( char * pStr, Vec_Int_t * vStaTrans, int iState, Vec_Int_t * vReached, Vec_Int_t * vVisited, int TravId )Gia_ManPrintReached_rec160,5351
void Gia_ManCollectReached( char * pStr, Vec_Int_t * vStaTrans, int iState, Vec_Int_t * vReached, Vec_Int_t * vVisited, int TravId )Gia_ManCollectReached174,6120
char * Gia_ManRexPreprocess( char * pStr )Gia_ManRexPreprocess182,6531
Gia_Man_t * Gia_ManRex2Gia( char * pStrInit, int fOrder, int fVerbose )Gia_ManRex2Gia203,7123
void Gia_ManAutomTranspose64( word A[64] )Gia_ManAutomTranspose64354,12474
static inline word Gia_ManAutomSim0( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Wrd_t * vTemp )Gia_ManAutomSim0380,13097
static inline word Gia_ManAutomSim1( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Wrd_t * vTemp )Gia_ManAutomSim1384,13323
word Gia_ManAutomStep( Gia_Man_t * p, word Cur, word * pNext, Vec_Wrd_t * vTemp )Gia_ManAutomStep388,13549
void Gia_ManAutomWalkOne( Gia_Man_t * p, int nSteps, Vec_Wrd_t * vStates, Vec_Int_t * vCounts, Vec_Wrd_t * vTemp, word Init )Gia_ManAutomWalkOne415,14740
word Gia_ManAutomInit( Gia_Man_t * p )Gia_ManAutomInit472,16716
void Gia_ManAutomWalk( Gia_Man_t * p, int nSteps, int nWalks, int fVerbose )Gia_ManAutomWalk494,17372

src/aig/gia/giaJf.c,12169
#define JF_LEAF_MAX JF_LEAF_MAX36,940
#define JF_WORD_MAX JF_WORD_MAX37,964
#define JF_CUT_MAX JF_CUT_MAX38,1032
#define JF_EPSILON JF_EPSILON39,1056
typedef struct Jf_Cut_t_ Jf_Cut_t; Jf_Cut_t41,1082
struct Jf_Cut_t_Jf_Cut_t_42,1118
    word             Sign;        // signatureSign44,1137
    float            Flow;        // flowFlow45,1184
    int              Time;        // arrival timeTime46,1226
    int              iFunc;       // function iFunc47,1276
    int              Cost;        // cut costCost48,1323
    int              pCut[JF_LEAF_MAX+2]; // cutpCut49,1369
typedef struct Jf_Man_t_ Jf_Man_t; Jf_Man_t52,1422
struct Jf_Man_t_Jf_Man_t_53,1458
    Gia_Man_t *      pGia;        // user's managerpGia55,1477
    Jf_Par_t *       pPars;       // users parameterpPars56,1529
    Sdm_Man_t *      pDsd;        // extern DSD managerpDsd57,1582
    Vec_Int_t *      vCnfs;       // costs of elementary CNFsvCnfs58,1638
    Vec_Mem_t *      vTtMem;      // truth table memory and hash tablevTtMem59,1700
    Vec_Int_t        vCuts;       // cuts for each nodevCuts60,1771
    Vec_Int_t        vArr;        // arrival timevArr61,1827
    Vec_Int_t        vDep;        // departure timevDep62,1877
    Vec_Flt_t        vFlow;       // area flowvFlow63,1929
    Vec_Flt_t        vRefs;       // ref countersvRefs64,1976
    Vec_Set_t        pMem;        // cut storagepMem65,2026
    Vec_Int_t *      vTemp;       // temporaryvTemp66,2075
    float (*pCutCmp) (Jf_Cut_t *, Jf_Cut_t *);// procedure to compare cutspCutCmp67,2122
    abctime          clkStart;    // starting timeclkStart68,2197
    word             CutCount[4]; // statisticsCutCount69,2248
    int              nCoarse;     // coarse nodesnCoarse70,2296
static inline int    Jf_ObjIsUnit( Gia_Obj_t * p )          { return !p->fMark0;                                       }Jf_ObjIsUnit73,2350
static inline void   Jf_ObjCleanUnit( Gia_Obj_t * p )       { assert(Jf_ObjIsUnit(p)); p->fMark0 = 1;                  }Jf_ObjCleanUnit74,2471
static inline void   Jf_ObjSetUnit( Gia_Obj_t * p )         { p->fMark0 = 0;                                           }Jf_ObjSetUnit75,2592
static inline int    Jf_ObjCutH( Jf_Man_t * p, int i )      { return Vec_IntEntry(&p->vCuts, i);                       }Jf_ObjCutH77,2714
static inline int *  Jf_ObjCuts( Jf_Man_t * p, int i )      { return (int *)Vec_SetEntry(&p->pMem, Jf_ObjCutH(p, i));  }Jf_ObjCuts78,2835
static inline int *  Jf_ObjCutBest( Jf_Man_t * p, int i )   { return Jf_ObjCuts(p, i) + 1;                             }Jf_ObjCutBest79,2956
static inline int    Jf_ObjArr( Jf_Man_t * p, int i )       { return Vec_IntEntry(&p->vArr, i);                        }Jf_ObjArr80,3077
static inline int    Jf_ObjDep( Jf_Man_t * p, int i )       { return Vec_IntEntry(&p->vDep, i);                        }Jf_ObjDep81,3198
static inline float  Jf_ObjFlow( Jf_Man_t * p, int i )      { return Vec_FltEntry(&p->vFlow, i);                       }Jf_ObjFlow82,3319
static inline float  Jf_ObjRefs( Jf_Man_t * p, int i )      { return Vec_FltEntry(&p->vRefs, i);                       }Jf_ObjRefs83,3440
static inline int    Jf_ObjLit( int i, int c )              { return Abc_Var2Lit( i, c );                              }Jf_ObjLit85,3682
static inline int    Jf_CutSize( int * pCut )               { return pCut[0] & 0xF;                                    }  //  4 bitsJf_CutSize87,3804
static inline int    Jf_CutCost( int * pCut )               { return (pCut[0] >> 4) & 0xF;                             }  //  4 bitsJf_CutCost88,3937
static inline int    Jf_CutFunc( int * pCut )               { return ((unsigned)pCut[0] >> 8);                         }  // 24 bitsJf_CutFunc89,4070
static inline int    Jf_CutSetAll( int f, int c, int s )    { return (f << 8) | (c << 4) | s;                          }Jf_CutSetAll90,4203
static inline void   Jf_CutSetSize( int * pCut, int s )     { assert(s>=0 && s<16); pCut[0] ^= (Jf_CutSize(pCut) ^ s); }Jf_CutSetSize91,4324
static inline void   Jf_CutSetCost( int * pCut, int c )     { assert(c>=0 && c<16); pCut[0] ^=((Jf_CutCost(pCut) ^ c) << 4); }Jf_CutSetCost92,4445
static inline void   Jf_CutSetFunc( int * pCut, int f )     { assert(f>=0); pCut[0] ^=((Jf_CutFunc(pCut) ^ f) << 8);   }Jf_CutSetFunc93,4572
static inline int    Jf_CutFuncClass( int * pCut )          { return Abc_Lit2Var(Jf_CutFunc(pCut));                    }Jf_CutFuncClass95,4694
static inline int    Jf_CutFuncCompl( int * pCut )          { return Abc_LitIsCompl(Jf_CutFunc(pCut));                 }Jf_CutFuncCompl96,4815
static inline int *  Jf_CutLits( int * pCut )               { return pCut + 1;                                         }Jf_CutLits97,4936
static inline int    Jf_CutLit( int * pCut, int i )         { assert(i);return pCut[i];                                }Jf_CutLit98,5057
static inline int    Jf_CutVar( int * pCut, int i )         {  assert(i);return Abc_Lit2Var(pCut[i]);                  }Jf_CutVar100,5301
static inline int    Jf_CutIsTriv( int * pCut, int i )      { return Jf_CutSize(pCut) == 1 && Jf_CutVar(pCut, 1) == i; } Jf_CutIsTriv101,5422
static inline int    Jf_CutCnfSizeF( Jf_Man_t * p, int f )  { return Vec_IntEntry( p->vCnfs, f );                      }Jf_CutCnfSizeF102,5544
static inline int    Jf_CutCnfSize( Jf_Man_t * p, int * c ) { return Jf_CutCnfSizeF( p, Jf_CutFuncClass(c) );          }Jf_CutCnfSize103,5665
static inline int    Jf_ObjFunc0( Gia_Obj_t * p, int * c )  { return Abc_LitNotCond(Jf_CutFunc(c), Gia_ObjFaninC0(p)); } Jf_ObjFunc0105,5787
static inline int    Jf_ObjFunc1( Gia_Obj_t * p, int * c )  { return Abc_LitNotCond(Jf_CutFunc(c), Gia_ObjFaninC1(p)); } Jf_ObjFunc1106,5909
#define Jf_ObjForEachCut(Jf_ObjForEachCut108,6032
#define Jf_CutForEachLit(Jf_CutForEachLit109,6158
#define Jf_CutForEachVar(Jf_CutForEachVar110,6275
void Jf_ManGenCnf( word uTruth, int iLitOut, Vec_Int_t * vLeaves, Vec_Int_t * vLits, Vec_Int_t * vClas, Vec_Int_t * vCover )Jf_ManGenCnf129,7009
Cnf_Dat_t * Jf_ManCreateCnfRemap( Gia_Man_t * p, Vec_Int_t * vLits, Vec_Int_t * vClas, int fAddOrCla )Jf_ManCreateCnfRemap163,8377
Cnf_Dat_t * Jf_ManCreateCnf( Gia_Man_t * p, Vec_Int_t * vLits, Vec_Int_t * vClas )Jf_ManCreateCnf199,9740
float * Jf_ManInitRefs( Jf_Man_t * pMan )Jf_ManInitRefs245,11200
void Jf_ManProfileClasses( Jf_Man_t * p )Jf_ManProfileClasses308,13284
Jf_Man_t * Jf_ManAlloc( Gia_Man_t * pGia, Jf_Par_t * pPars )Jf_ManAlloc365,15202
void Jf_ManFree( Jf_Man_t * p )Jf_ManFree396,16324
static inline void Jf_CutPrint( int * pCut )Jf_CutPrint437,17566
static inline void Jf_ObjCutPrint( int * pCuts )Jf_ObjCutPrint445,17808
static inline void Jf_ObjBestCutConePrint( Jf_Man_t * p, Gia_Obj_t * pObj )Jf_ObjBestCutConePrint452,17969
static inline void Jf_CutCheck( int * pCut )Jf_CutCheck459,18288
static inline int Jf_CountBitsSimple( unsigned n )Jf_CountBitsSimple466,18495
static inline int Jf_CountBits32( unsigned i )Jf_CountBits32473,18654
static inline int Jf_CountBits( word i )Jf_CountBits480,18866
static inline unsigned Jf_CutGetSign32( int * pCut )Jf_CutGetSign32487,19112
static inline word Jf_CutGetSign( int * pCut )Jf_CutGetSign494,19313
static inline int Jf_CutArr( Jf_Man_t * p, int * pCut )Jf_CutArr501,19512
static inline void Jf_ObjSetBestCut( int * pCuts, int * pCut, Vec_Int_t * vTemp )Jf_ObjSetBestCut509,19731
static inline void Jf_CutRef( Jf_Man_t * p, int * pCut )Jf_CutRef522,20197
static inline void Jf_CutDeref( Jf_Man_t * p, int * pCut )Jf_CutDeref528,20371
static inline float Jf_CutFlow( Jf_Man_t * p, int * pCut )Jf_CutFlow534,20547
static inline int Jf_CutIsContainedOrder( int * pBase, int * pCut ) // check if pCut is contained pBaseJf_CutIsContainedOrder554,21027
static inline int Jf_CutMergeOrder( int * pCut0, int * pCut1, int * pCut, int LutSize )Jf_CutMergeOrder579,21651
static inline int Jf_CutFindLeaf0( int * pCut, int iObj )Jf_CutFindLeaf0650,23386
static inline int Jf_CutIsContained0( int * pBase, int * pCut ) // check if pCut is contained pBaseJf_CutIsContained0658,23587
static inline int Jf_CutMerge0( int * pCut0, int * pCut1, int * pCut, int LutSize )Jf_CutMerge0666,23857
static inline int Jf_CutFindLeaf1( int * pCut, int iLit )Jf_CutFindLeaf1693,24577
static inline int Jf_CutIsContained1( int * pBase, int * pCut ) // check if pCut is contained pBaseJf_CutIsContained1701,24791
static inline int Jf_CutMerge1( int * pCut0, int * pCut1, int * pCut, int LutSize )Jf_CutMerge1709,25074
static inline int Jf_CutMerge2( int * pCut0, int * pCut1, int * pCut, int LutSize )Jf_CutMerge2724,25560
int Jf_ObjCutFilterBoth( Jf_Man_t * p, Jf_Cut_t ** pSto, int c )Jf_ObjCutFilterBoth761,26717
int Jf_ObjCutFilter( Jf_Man_t * p, Jf_Cut_t ** pSto, int c )Jf_ObjCutFilter788,27658
static inline void Jf_ObjSortCuts( Jf_Cut_t ** pSto, int nSize )Jf_ObjSortCuts821,28602
int Jf_CutRef_rec( Jf_Man_t * p, int * pCut )Jf_CutRef_rec845,29198
int Jf_CutDeref_rec( Jf_Man_t * p, int * pCut )Jf_CutDeref_rec853,29500
static inline int Jf_CutAreaOld( Jf_Man_t * p, int * pCut )Jf_CutAreaOld861,29806
int Jf_CutAreaRef_rec( Jf_Man_t * p, int * pCut )Jf_CutAreaRef_rec870,30012
int Jf_CutAreaRefEdge_rec( Jf_Man_t * p, int * pCut )Jf_CutAreaRefEdge_rec881,30372
static inline int Jf_CutArea( Jf_Man_t * p, int * pCut, int fEdge )Jf_CutArea892,30766
int Jf_CutCheckMffc_rec( Jf_Man_t * p, int * pCut, int Limit )Jf_CutCheckMffc_rec905,31159
static inline int Jf_CutCheckMffc( Jf_Man_t * p, int * pCut, int Limit )Jf_CutCheckMffc919,31614
float Jf_CutCompareDelay( Jf_Cut_t * pOld, Jf_Cut_t * pNew )Jf_CutCompareDelay940,32234
float Jf_CutCompareArea( Jf_Cut_t * pOld, Jf_Cut_t * pNew )Jf_CutCompareArea949,32666
static inline int Jf_ObjAddCutToStore( Jf_Man_t * p, Jf_Cut_t ** pSto, int c, int cMax )Jf_ObjAddCutToStore958,33097
static inline void Jf_ObjPrintStore( Jf_Man_t * p, Jf_Cut_t ** pSto, int c )Jf_ObjPrintStore1026,35577
static inline void Jf_ObjCheckPtrs( Jf_Cut_t ** pSto, int c )Jf_ObjCheckPtrs1039,35944
static inline void Jf_ObjCheckStore( Jf_Man_t * p, Jf_Cut_t ** pSto, int c, int iObj )Jf_ObjCheckStore1046,36130
int Jf_TtComputeForCut( Jf_Man_t * p, int iFuncLit0, int iFuncLit1, int * pCut0, int * pCut1, int * pCutOut )Jf_TtComputeForCut1070,36802
static inline void Jf_ObjAssignCut( Jf_Man_t * p, Gia_Obj_t * pObj )Jf_ObjAssignCut1101,38195
static inline void Jf_ObjPropagateBuf( Jf_Man_t * p, Gia_Obj_t * pObj, int fReverse )Jf_ObjPropagateBuf1108,38532
static inline int Jf_ObjHasCutWithSize( Jf_Cut_t ** pSto, int c, int nSize )Jf_ObjHasCutWithSize1119,38952
void Jf_ObjComputeCuts( Jf_Man_t * p, Gia_Obj_t * pObj, int fEdge )Jf_ObjComputeCuts1127,39151
void Jf_ManComputeCuts( Jf_Man_t * p, int fEdge )Jf_ManComputeCuts1240,44291
int Jf_ManComputeDelay( Jf_Man_t * p, int fEval )Jf_ManComputeDelay1289,46094
int Jf_ManComputeRefs( Jf_Man_t * p )Jf_ManComputeRefs1308,46726
void Jf_ObjComputeBestCut( Jf_Man_t * p, Gia_Obj_t * pObj, int fEdge, int fEla )Jf_ObjComputeBestCut1359,48405
void Jf_ManPropagateFlow( Jf_Man_t * p, int fEdge )Jf_ManPropagateFlow1381,49453
void Jf_ManPropagateEla( Jf_Man_t * p, int fEdge )Jf_ManPropagateEla1392,49809
Gia_Man_t * Jf_ManDeriveMappingGia( Jf_Man_t * p )Jf_ManDeriveMappingGia1431,51240
void Jf_ManDeriveMapping( Jf_Man_t * p )Jf_ManDeriveMapping1544,55976
Gia_Man_t * Jf_ManDeriveGia( Jf_Man_t * p )Jf_ManDeriveGia1580,57218
void Jf_ManSetDefaultPars( Jf_Par_t * pPars )Jf_ManSetDefaultPars1682,61036
void Jf_ManPrintStats( Jf_Man_t * p, char * pTitle )Jf_ManPrintStats1702,61628
Gia_Man_t * Jf_ManPerformMapping( Gia_Man_t * pGia, Jf_Par_t * pPars )Jf_ManPerformMapping1715,62093
Gia_Man_t * Jf_ManDeriveCnf( Gia_Man_t * p, int fCnfObjIds )Jf_ManDeriveCnf1749,63477
Gia_Man_t * Jf_ManDeriveCnfMiter( Gia_Man_t * p, int fVerbose )Jf_ManDeriveCnfMiter1757,63718
void Jf_ManDumpCnf( Gia_Man_t * p, char * pFileName, int fVerbose )Jf_ManDumpCnf1767,64011
void Jf_ManTestCnf( Gia_Man_t * p )Jf_ManTestCnf1784,64585

src/aig/gia/giaMfs.c,273
Sfm_Ntk_t * Gia_ManExtractMfs( Gia_Man_t * p )Gia_ManExtractMfs47,1314
Gia_Man_t * Gia_ManInsertMfs( Gia_Man_t * p, Sfm_Ntk_t * pNtk, int fAllBoxes )Gia_ManInsertMfs287,11959
Gia_Man_t * Gia_ManPerformMfs( Gia_Man_t * p, Sfm_Par_t * pPars )Gia_ManPerformMfs496,20104

src/aig/gia/giaKf.c,193
void Kf_ManSetDefaultPars( Jf_Par_t * pPars ) {}Kf_ManSetDefaultPars43,944
Gia_Man_t * Kf_ManPerformMapping( Gia_Man_t * pGia, Jf_Par_t * pPars ) { return NULL; }Kf_ManPerformMapping44,993

src/aig/gia/giaResub.c,8759
int Gia_ObjCheckMffc_rec( Gia_Man_t * p,Gia_Obj_t * pObj, int Limit, Vec_Int_t * vNodes )Gia_ObjCheckMffc_rec48,1377
static inline int Gia_ObjCheckMffc( Gia_Man_t * p, Gia_Obj_t * pRoot, int Limit, Vec_Int_t * vNodes, Vec_Int_t * vLeaves, Vec_Int_t * vInners )Gia_ObjCheckMffc70,2324
Vec_Wec_t * Gia_ManComputeMffcs( Gia_Man_t * p, int LimitMin, int LimitMax, int SuppMax, int RatioBest )Gia_ManComputeMffcs97,3344
void Gia_ManPrintDivStats( Gia_Man_t * p, Vec_Wec_t * vMffcs, Vec_Wec_t * vPivots ) Gia_ManPrintDivStats158,5417
void Gia_ManAddDivisors( Gia_Man_t * p, Vec_Wec_t * vMffcs )Gia_ManAddDivisors195,6819
void Gia_ManResubTest( Gia_Man_t * p )Gia_ManResubTest261,9409
typedef struct Gia_ResbMan_t_ Gia_ResbMan_t;Gia_ResbMan_t288,10027
struct Gia_ResbMan_t_Gia_ResbMan_t_289,10072
    int         nWords;nWords291,10096
    int         nLimit;nLimit292,10120
    int         nDivsMax;nDivsMax293,10144
    int         iChoice;iChoice294,10170
    int         fUseXor;fUseXor295,10195
    int         fDebug;fDebug296,10220
    int         fVerbose;fVerbose297,10244
    int         fVeryVerbose;fVeryVerbose298,10270
    Vec_Ptr_t * vDivs;vDivs299,10300
    Vec_Int_t * vGates;vGates300,10323
    Vec_Int_t * vUnateLits[2];vUnateLits301,10347
    Vec_Int_t * vNotUnateVars[2];vNotUnateVars302,10378
    Vec_Int_t * vUnatePairs[2];vUnatePairs303,10412
    Vec_Int_t * vBinateVars;vBinateVars304,10444
    Vec_Int_t * vUnateLitsW[2];vUnateLitsW305,10473
    Vec_Int_t * vUnatePairsW[2];vUnatePairsW306,10505
    Vec_Wec_t * vSorter;vSorter307,10538
    word *      pSets[2];pSets308,10563
    word *      pDivA;pDivA309,10589
    word *      pDivB;pDivB310,10612
    Vec_Wrd_t * vSims;vSims311,10635
Gia_ResbMan_t * Gia_ResbAlloc( int nWords )Gia_ResbAlloc313,10661
void Gia_ResbInit( Gia_ResbMan_t * p, Vec_Ptr_t * vDivs, int nWords, int nLimit, int nDivsMax, int iChoice, int fUseXor, int fDebug, int fVerbose, int fVeryVerbose )Gia_ResbInit338,11742
void Gia_ResbFree( Gia_ResbMan_t * p )Gia_ResbFree365,12867
void Gia_ManResubPrintNode( Vec_Int_t * vRes, int nVars, int Node, int fCompl )Gia_ManResubPrintNode400,13895
void Gia_ManResubPrintLit( Vec_Int_t * vRes, int nVars, int iLit )Gia_ManResubPrintLit417,14549
int Gia_ManResubPrint( Vec_Int_t * vRes, int nVars )Gia_ManResubPrint429,14983
int Gia_ManResubVerify( Gia_ResbMan_t * p, word * pFunc )Gia_ManResubVerify455,15643
int Gia_ManConstructFromMap( Gia_Man_t * pNew, Vec_Int_t * vGates, int nVars, Vec_Int_t * vUsed, Vec_Int_t * vCopy, int fHash )Gia_ManConstructFromMap524,18379
Gia_Man_t * Gia_ManConstructFromGates( Vec_Wec_t * vFuncs, int nVars )Gia_ManConstructFromGates561,20213
void Gia_ManInsertOrder_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vObjs, Vec_Wec_t * vFuncs, Vec_Int_t * vNodes )Gia_ManInsertOrder_rec605,21677
Vec_Int_t * Gia_ManInsertOrder( Gia_Man_t * p, Vec_Int_t * vObjs, Vec_Wec_t * vFuncs )Gia_ManInsertOrder631,22754
Gia_Man_t * Gia_ManInsertFromGates( Gia_Man_t * p, Vec_Int_t * vObjs, Vec_Wec_t * vFuncs )Gia_ManInsertFromGates639,23037
static inline int Gia_ManFindFirstCommonLit( Vec_Int_t * vArr1, Vec_Int_t * vArr2, int fVerbose )Gia_ManFindFirstCommonLit707,25615
void Gia_ManFindOneUnateInt( word * pOff, word * pOn, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits, Vec_Int_t * vNotUnateVars )Gia_ManFindOneUnateInt741,26757
int Gia_ManFindOneUnate( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits[2], Vec_Int_t * vNotUnateVars[2], int fVerbose )Gia_ManFindOneUnate754,27352
static inline int Gia_ManDivCover( word * pOff, word * pOn, word * pDivA, int ComplA, word * pDivB, int ComplB, int nWords )Gia_ManDivCover766,27852
int Gia_ManFindTwoUnateInt( word * pOff, word * pOn, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits, Vec_Int_t * vUnateLitsW, int * pnPairs )Gia_ManFindTwoUnateInt772,28201
int Gia_ManFindTwoUnate( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits[2], Vec_Int_t * vUnateLitsW[2], int fVerbose )Gia_ManFindTwoUnate796,29284
void Gia_ManFindXorInt( word * pOff, word * pOn, Vec_Int_t * vBinate, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnatePairs )Gia_ManFindXorInt811,29882
int Gia_ManFindXor( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vBinateVars, Vec_Int_t * vUnatePairs[2], int fVerbose )Gia_ManFindXor828,30834
void Gia_ManFindUnatePairsInt( word * pOff, word * pOn, Vec_Int_t * vBinate, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnatePairs )Gia_ManFindUnatePairsInt841,31360
void Gia_ManFindUnatePairs( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vBinateVars, Vec_Int_t * vUnatePairs[2], int fVerbose )Gia_ManFindUnatePairs862,32426
void Gia_ManDeriveDivPair( int iDiv, Vec_Ptr_t * vDivs, int nWords, word * pRes )Gia_ManDeriveDivPair876,33030
int Gia_ManFindDivGateInt( word * pOff, word * pOn, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits, Vec_Int_t * vUnatePairs, Vec_Int_t * vUnateLitsW, Vec_Int_t * vUnatePairsW, word * pDivTemp )Gia_ManFindDivGateInt895,33696
int Gia_ManFindDivGate( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits[2], Vec_Int_t * vUnatePairs[2], Vec_Int_t * vUnateLitsW[2], Vec_Int_t * vUnatePairsW[2], word * pDivTemp )Gia_ManFindDivGate916,34689
int Gia_ManFindGateGateInt( word * pOff, word * pOn, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnatePairs, Vec_Int_t * vUnatePairsW, word * pDivTempA, word * pDivTempB )Gia_ManFindGateGateInt928,35191
int Gia_ManFindGateGate( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnatePairs[2], Vec_Int_t * vUnatePairsW[2], word * pDivTempA, word * pDivTempB )Gia_ManFindGateGate950,36195
void Gia_ManSortUnatesInt( word * pOff, word * pOn, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits, Vec_Int_t * vUnateLitsW, Vec_Wec_t * vSorter )Gia_ManSortUnatesInt962,36644
void Gia_ManSortUnates( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits[2], Vec_Int_t * vUnateLitsW[2], Vec_Wec_t * vSorter )Gia_ManSortUnates984,37555
void Gia_ManSortPairsInt( word * pOff, word * pOn, Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnatePairs, Vec_Int_t * vUnatePairsW, Vec_Wec_t * vSorter )Gia_ManSortPairsInt991,37858
void Gia_ManSortPairs( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vUnateLits[2], Vec_Int_t * vUnateLitsW[2], Vec_Wec_t * vSorter )Gia_ManSortPairs1029,39463
void Gia_ManSortBinate( word * pSets[2], Vec_Ptr_t * vDivs, int nWords, Vec_Int_t * vBinateVars, Vec_Wec_t * vSorter )Gia_ManSortBinate1036,39764
int Gia_ManResubFindBestBinate( Gia_ResbMan_t * p )Gia_ManResubFindBestBinate1082,41413
int Gia_ManResubAddNode( Gia_ResbMan_t * p, int iLit0, int iLit1, int Type )Gia_ManResubAddNode1107,42383
int Gia_ManResubPerformMux_rec( Gia_ResbMan_t * p, int nLimit )Gia_ManResubPerformMux_rec1121,42920
int Gia_ManResubPerform_rec( Gia_ResbMan_t * p, int nLimit )Gia_ManResubPerform_rec1175,44861
void Gia_ManResubPerform( Gia_ResbMan_t * p, Vec_Ptr_t * vDivs, int nWords, int nLimit, int nDivsMax, int iChoice, int fUseXor, int fDebug, int fVerbose )Gia_ManResubPerform1386,54342
Vec_Int_t * Gia_ManResubOne( Vec_Ptr_t * vDivs, int nWords, int nLimit, int nDivsMax, int iChoice, int fUseXor, int fDebug, int fVerbose, word * pFunc )Gia_ManResubOne1398,54812
static Gia_ResbMan_t * s_pResbMan = NULL;s_pResbMan1432,55865
void Abc_ResubPrepareManager( int nWords )Abc_ResubPrepareManager1434,55908
int Abc_ResubComputeFunction( void ** ppDivs, int nDivs, int nWords, int nLimit, int nDivsMax, int iChoice, int fUseXor, int fDebug, int fVerbose, int ** ppArray )Abc_ResubComputeFunction1443,56113
void Abc_ResubDumpProblem( char * pFileName, void ** ppDivs, int nDivs, int nWords )Abc_ResubDumpProblem1473,57261
void Gia_ManResubTest3()Gia_ManResubTest31500,58036
void Gia_ManResubTest3_()Gia_ManResubTest3_1542,59405
void Gia_ManCheckResub( Vec_Ptr_t * vDivs, int nWords )Gia_ManCheckResub1584,60559
Vec_Ptr_t * Gia_ManDeriveDivs( Vec_Wrd_t * vSims, int nWords )Gia_ManDeriveDivs1608,61535
Gia_Man_t * Gia_ManResub2( Gia_Man_t * pGia, int nNodes, int nSupp, int nDivs, int iChoice, int fUseXor, int fVerbose, int fVeryVerbose )Gia_ManResub21616,61809
Gia_Man_t * Gia_ManResub1( char * pFileName, int nNodes, int nSupp, int nDivs, int iChoice, int fUseXor, int fVerbose, int fVeryVerbose )Gia_ManResub11620,61968
int Gia_ManUnivTfo_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vNodes, Vec_Int_t * vPos )Gia_ManUnivTfo_rec1661,63330
int Gia_ManUnivTfo( Gia_Man_t * p, int * pObjs, int nObjs, Vec_Int_t ** pvNodes, Vec_Int_t ** pvPos )Gia_ManUnivTfo1675,63868
void Gia_ManTryResub( Gia_Man_t * p )Gia_ManTryResub1713,64829

src/aig/gia/giaTis.c,512
Gia_Man_t * Gia_ManTisDupMuxes( Gia_Man_t * p )Gia_ManTisDupMuxes45,1256
void Gia_ManTisCollectMffc_rec( Gia_Man_t * p, int Id, Vec_Int_t * vMffc, Vec_Int_t * vLeaves )Gia_ManTisCollectMffc_rec99,3226
void Gia_ManTisCollectMffc( Gia_Man_t * p, int Id, Vec_Int_t * vMffc, Vec_Int_t * vLeaves )Gia_ManTisCollectMffc123,4007
void Gia_ManTisPrintMffc( Gia_Man_t * p, int Id, Vec_Int_t * vMffc, Vec_Int_t * vLeaves )Gia_ManTisPrintMffc148,4806
void Gia_ManTisTest( Gia_Man_t * pInit )Gia_ManTisTest177,5577

src/aig/gia/giaSort.c,1235
static int num_cmp1( int * x, int * y) { return ((*x) < (*y)) ? -1 : (((*x) > (*y)) ? 1 : 0); }num_cmp145,1237
static int num_cmp2( int * x, int * y) { return (*x) < (*y); }num_cmp246,1333
static inline void selectionsort(int* array, int size, int(*comp)(const void *, const void *))selectionsort47,1396
static void sort_rec(int* array, int size, int(*comp)(const void *, const void *))sort_rec60,1794
void minisat_sort(int* array, int size, int(*comp)(const void *, const void *))minisat_sort79,2378
static inline void selectionsort2(int* array, int size)selectionsort296,2772
static void sort_rec2(int* array, int size)sort_rec2109,3124
void minisat_sort2(int* array, int size)minisat_sort2128,3640
int * Gia_SortGetTest( int nSize )Gia_SortGetTest144,3990
void Gia_SortVerifySorted( int * pArray, int nSize )Gia_SortVerifySorted153,4185
void Gia_SortTest()Gia_SortTest159,4331
static inline void selectionsort3(float* array, int* perm, int size)selectionsort3199,5486
static void sort_rec3(float* array, int* perm, int size)sort_rec3214,5945
void minisat_sort3(float* array, int* perm, int size)minisat_sort3235,6591
int * Gia_SortFloats( float * pArray, int * pPerm, int nSize )Gia_SortFloats251,6960

src/aig/gia/giaSpeedup.c,1116
void Gia_LutDelayTraceSortPins( Gia_Man_t * p, int iObj, int * pPinPerm, float * pPinDelays )Gia_LutDelayTraceSortPins46,1266
int Gia_LutWhereIsPin( Gia_Man_t * p, int iFanout, int iFanin, int * pPinPerm )Gia_LutWhereIsPin90,2743
float Gia_ObjComputeArrival( Gia_Man_t * p, int iObj, int fUseSorting )Gia_ObjComputeArrival110,3279
float Gia_ObjPropagateRequired( Gia_Man_t * p, int iObj, int fUseSorting )Gia_ObjPropagateRequired170,5394
float Gia_ManDelayTraceLut( Gia_Man_t * p )Gia_ManDelayTraceLut230,7527
float Gia_ManDelayTraceLutPrint( Gia_Man_t * p, int fVerbose )Gia_ManDelayTraceLutPrint444,14793
unsigned Gia_LutDelayTraceTCEdges( Gia_Man_t * p, int iObj, float tDelta )Gia_LutDelayTraceTCEdges502,16679
int Gia_ManSpeedupObj_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Gia_ManSpeedupObj_rec546,18126
void Gia_ManSpeedupObj( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vLeaves, Vec_Int_t * vTimes )Gia_ManSpeedupObj573,18894
Gia_Man_t * Gia_ManSpeedup( Gia_Man_t * p, int Percentage, int Degree, int fVerbose, int fVeryVerbose )Gia_ManSpeedup629,20945

src/aig/gia/giaTim.c,2486
int Gia_ManBoxNum( Gia_Man_t * p )Gia_ManBoxNum50,1421
int Gia_ManRegBoxNum( Gia_Man_t * p )Gia_ManRegBoxNum54,1530
int Gia_ManNonRegBoxNum( Gia_Man_t * p )Gia_ManNonRegBoxNum58,1633
int Gia_ManBlackBoxNum( Gia_Man_t * p )Gia_ManBlackBoxNum62,1729
int Gia_ManBoxCiNum( Gia_Man_t * p )Gia_ManBoxCiNum66,1830
int Gia_ManBoxCoNum( Gia_Man_t * p )Gia_ManBoxCoNum70,1958
int Gia_ManClockDomainNum( Gia_Man_t * p )Gia_ManClockDomainNum74,2086
int Gia_ManIsSeqWithBoxes( Gia_Man_t * p )Gia_ManIsSeqWithBoxes98,2740
int Gia_ManIsNormalized( Gia_Man_t * p )  Gia_ManIsNormalized114,3118
Gia_Man_t * Gia_ManDupNormalize( Gia_Man_t * p, int fHashMapping )Gia_ManDupNormalize139,3805
Gia_Man_t * Gia_ManDupUnshuffleInputs( Gia_Man_t * p )Gia_ManDupUnshuffleInputs203,6159
int Gia_ManOrderWithBoxes_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Gia_ManOrderWithBoxes_rec258,8076
Vec_Int_t * Gia_ManOrderWithBoxes( Gia_Man_t * p )Gia_ManOrderWithBoxes286,9005
Gia_Man_t * Gia_ManDupUnnormalize( Gia_Man_t * p )Gia_ManDupUnnormalize382,12725
void Gia_ManCleanupRemap( Gia_Man_t * p, Gia_Man_t * pGia )Gia_ManCleanupRemap433,14430
int Gia_ManLevelWithBoxes_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManLevelWithBoxes_rec461,15193
int Gia_ManLevelWithBoxes( Gia_Man_t * p )Gia_ManLevelWithBoxes478,15778
int Gia_ManLutLevelWithBoxes_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManLutLevelWithBoxes_rec562,18940
int Gia_ManLutLevelWithBoxes( Gia_Man_t * p )Gia_ManLutLevelWithBoxes581,19528
void * Gia_ManUpdateTimMan( Gia_Man_t * p, Vec_Int_t * vBoxPres )Gia_ManUpdateTimMan668,22866
void * Gia_ManUpdateTimMan2( Gia_Man_t * p, Vec_Int_t * vBoxesLeft, int nTermsDiff )Gia_ManUpdateTimMan2675,23131
Gia_Man_t * Gia_ManUpdateExtraAig( void * pTime, Gia_Man_t * p, Vec_Int_t * vBoxPres )Gia_ManUpdateExtraAig694,23692
Gia_Man_t * Gia_ManUpdateExtraAig2( void * pTime, Gia_Man_t * p, Vec_Int_t * vBoxesLeft )Gia_ManUpdateExtraAig2713,24448
Gia_Man_t * Gia_ManDupMoveLast( Gia_Man_t * p, int iInsert, int nItems )Gia_ManDupMoveLast744,25511
void Gia_ManDupCollapse_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Gia_Man_t * pNew )Gia_ManDupCollapse_rec787,26907
Gia_Man_t * Gia_ManDupCollapse( Gia_Man_t * p, Gia_Man_t * pBoxes, Vec_Int_t * vBoxPres, int fSeq )Gia_ManDupCollapse802,27656
int Gia_ManVerifyWithBoxes( Gia_Man_t * pGia, int nBTLimit, int nTimeLim, int fSeq, int fDumpFiles, int fVerbose, char * pFileSpec )Gia_ManVerifyWithBoxes955,33631

src/aig/gia/giaSupMin.c,1089
typedef struct Gia_ManSup_t_ Gia_ManSup_t;Gia_ManSup_t32,850
struct Gia_ManSup_t_ Gia_ManSup_t_33,893
    int             nVarsMax;     // the max number of variablesnVarsMax35,917
    int             nWordsMax;    // the max number of wordsnWordsMax36,982
    Vec_Ptr_t *     vTruthVars;   // elementary truth tablesvTruthVars37,1043
    Vec_Ptr_t *     vTruthNodes;  // internal truth tablesvTruthNodes38,1104
    Gia_Man_t *     pGia;pGia40,1186
    int             iData;iData41,1212
    int             iCare;iCare42,1239
    Vec_Int_t *     vConeCare;vConeCare43,1266
    Vec_Int_t *     vConeData;vConeData44,1297
    unsigned *      pTruthIn;pTruthIn45,1328
    unsigned *      pTruthOut;pTruthOut46,1358
Gia_ManSup_t * Gia_ManSupStart( int nVarsMax )Gia_ManSupStart64,1871
void Gia_ManSupStop( Gia_ManSup_t * p )Gia_ManSupStop91,2694
void Gia_ManSupExperimentOne( Gia_ManSup_t * p, Gia_Obj_t * pData, Gia_Obj_t * pCare )Gia_ManSupExperimentOne113,3194
void Gia_ManSupExperiment( Gia_Man_t * pGia, Vec_Int_t * vPairs )Gia_ManSupExperiment141,4064

src/aig/gia/gia.h,73640
#define ABC__aig__gia__gia_hABC__aig__gia__gia_h22,527
#define GIA_NONE GIA_NONE45,1194
#define GIA_VOID GIA_VOID46,1222
typedef struct Gia_MmFixed_t_        Gia_MmFixed_t;    Gia_MmFixed_t52,1471
typedef struct Gia_MmFlex_t_         Gia_MmFlex_t;     Gia_MmFlex_t53,1527
typedef struct Gia_MmStep_t_         Gia_MmStep_t;     Gia_MmStep_t54,1583
typedef struct Gia_Dat_t_            Gia_Dat_t;Gia_Dat_t55,1639
typedef struct Gia_Rpr_t_ Gia_Rpr_t;Gia_Rpr_t57,1688
struct Gia_Rpr_t_Gia_Rpr_t_58,1725
    unsigned       iRepr   : 28;  // representative nodeiRepr60,1745
    unsigned       fProved :  1;  // marks the proved equivalencefProved61,1802
    unsigned       fFailed :  1;  // marks the failed equivalencefFailed62,1868
    unsigned       fColorA :  1;  // marks cone of AfColorA63,1934
    unsigned       fColorB :  1;  // marks cone of BfColorB64,1987
typedef struct Gia_Plc_t_ Gia_Plc_t;Gia_Plc_t67,2044
struct Gia_Plc_t_Gia_Plc_t_68,2081
    unsigned       fFixed  :  1;  // the placement of this object is fixedfFixed70,2101
    unsigned       xCoord  : 15;  // x-ooordinate of the placementxCoord71,2176
    unsigned       fUndef  :  1;  // the placement of this object is not assignedfUndef72,2243
    unsigned       yCoord  : 15;  // y-ooordinate of the placementyCoord73,2325
typedef struct Gia_Obj_t_ Gia_Obj_t;Gia_Obj_t76,2396
struct Gia_Obj_t_Gia_Obj_t_77,2433
    unsigned       iDiff0 :  29;  // the diff of the first faniniDiff079,2453
    unsigned       fCompl0:   1;  // the complemented attributefCompl080,2518
    unsigned       fMark0 :   1;  // first user-controlled markfMark081,2582
    unsigned       fTerm  :   1;  // terminal node (CI/CO)fTerm82,2646
    unsigned       iDiff1 :  29;  // the diff of the second faniniDiff184,2706
    unsigned       fCompl1:   1;  // the complemented attributefCompl185,2772
    unsigned       fMark1 :   1;  // second user-controlled markfMark186,2836
    unsigned       fPhase :   1;  // value under 000 patternfPhase87,2901
    unsigned       Value;         // application-specific valueValue89,2963
typedef struct Gia_Man_t_ Gia_Man_t;Gia_Man_t96,3239
struct Gia_Man_t_Gia_Man_t_97,3276
    char *         pName;         // name of the AIGpName99,3296
    char *         pSpec;         // name of the input filepSpec100,3349
    int            nRegs;         // number of registersnRegs101,3409
    int            nRegsAlloc;    // number of allocated registersnRegsAlloc102,3466
    int            nObjs;         // number of objectsnObjs103,3533
    int            nObjsAlloc;    // number of allocated objectsnObjsAlloc104,3588
    Gia_Obj_t *    pObjs;         // the array of objectspObjs105,3653
    unsigned *     pMuxes;        // control signals of MUXespMuxes106,3711
    int            nXors;         // the number of XORsnXors107,3773
    int            nMuxes;        // the number of MUXes nMuxes108,3829
    int            nBufs;         // the number of buffersnBufs109,3887
    Vec_Int_t *    vCis;          // the vector of CIs (PIs + LOs)vCis110,3946
    Vec_Int_t *    vCos;          // the vector of COs (POs + LIs)vCos111,4013
    Vec_Int_t      vHash;         // hash linksvHash112,4080
    Vec_Int_t      vHTable;       // hash tablevHTable113,4128
    int            fAddStrash;    // performs additional structural hashingfAddStrash114,4176
    int            fSweeper;      // sweeper is runningfSweeper115,4252
    int            fGiaSimple;    // simple mode (no const-propagation and strashing)fGiaSimple116,4308
    Vec_Int_t      vRefs;         // the reference countvRefs117,4394
    int *          pRefs;         // the reference countpRefs118,4451
    int *          pLutRefs;      // the reference countpLutRefs119,4508
    Vec_Int_t *    vLevels;       // levels of the nodesvLevels120,4565
    int            nLevels;       // the mamixum levelnLevels121,4622
    int            nConstrs;      // the number of constraintsnConstrs122,4677
    int            nTravIds;      // the current traversal IDnTravIds123,4740
    int            nFront;        // frontier size nFront124,4802
    int *          pReprsOld;     // representatives (for CIs and ANDs)pReprsOld125,4854
    Gia_Rpr_t *    pReprs;        // representatives (for CIs and ANDs)pReprs126,4926
    int *          pNexts;        // next nodes in the equivalence classespNexts127,4998
    int *          pSibls;        // next nodes in the choice nodespSibls128,5073
    int *          pIso;          // pairs of structurally isomorphic nodespIso129,5141
    int            nTerLoop;      // the state where loop begins  nTerLoop130,5217
    int            nTerStates;    // the total number of ternary statesnTerStates131,5284
    int *          pFanData;      // the database to store fanout informationpFanData132,5356
    int            nFansAlloc;    // the size of fanout representationnFansAlloc133,5434
    Vec_Int_t *    vFanoutNums;   // static fanoutvFanoutNums134,5505
    Vec_Int_t *    vFanout;       // static fanoutvFanout135,5556
    Vec_Int_t *    vMapping;      // mapping for each nodevMapping136,5607
    Vec_Wec_t *    vMapping2;     // mapping for each nodevMapping2137,5666
    Vec_Wec_t *    vFanouts2;     // mapping fanouts vFanouts2138,5725
    Vec_Int_t *    vCellMapping;  // mapping for each nodevCellMapping139,5779
    void *         pSatlutWinman; // windowing for SAT-based mappingpSatlutWinman140,5838
    Vec_Int_t *    vPacking;      // packing informationvPacking141,5907
    Vec_Int_t *    vConfigs;      // cell configurationsvConfigs142,5964
    char *         pCellStr;      // cell descriptionpCellStr143,6021
    Vec_Int_t *    vLutConfigs;   // LUT configurationsvLutConfigs144,6075
    Vec_Int_t *    vEdgeDelay;    // special edge informationvEdgeDelay145,6131
    Vec_Int_t *    vEdgeDelayR;   // special edge informationvEdgeDelayR146,6193
    Vec_Int_t *    vEdge1;        // special edge informationvEdge1147,6255
    Vec_Int_t *    vEdge2;        // special edge informationvEdge2148,6317
    Abc_Cex_t *    pCexComb;      // combinational counter-examplepCexComb149,6379
    Abc_Cex_t *    pCexSeq;       // sequential counter-examplepCexSeq150,6446
    Vec_Ptr_t *    vSeqModelVec;  // sequential counter-examplesvSeqModelVec151,6510
    Vec_Int_t      vCopies;       // intermediate copiesvCopies152,6575
    Vec_Int_t      vCopies2;      // intermediate copiesvCopies2153,6632
    Vec_Int_t *    vVar2Obj;      // mapping of variables into objectsvVar2Obj154,6689
    Vec_Int_t *    vTruths;       // used for truth table computationvTruths155,6760
    Vec_Int_t *    vFlopClasses;  // classes of flops for retiming/merging/etcvFlopClasses156,6830
    Vec_Int_t *    vGateClasses;  // classes of gates for abstractionvGateClasses157,6909
    Vec_Int_t *    vObjClasses;   // classes of objects for abstractionvObjClasses158,6979
    Vec_Int_t *    vInitClasses;  // classes of flops for retiming/merging/etcvInitClasses159,7051
    Vec_Int_t *    vRegClasses;   // classes of registers for sequential synthesisvRegClasses160,7130
    Vec_Int_t *    vRegInits;     // initial statevRegInits161,7213
    Vec_Int_t *    vDoms;         // dominatorsvDoms162,7264
    Vec_Int_t *    vBarBufs;      // barrier buffersvBarBufs163,7312
    Vec_Int_t *    vXors;         // temporary XORsvXors164,7365
    unsigned char* pSwitching;    // switching activity for each objectpSwitching165,7417
    Gia_Plc_t *    pPlacement;    // placement of the objectspPlacement166,7489
    Gia_Man_t *    pAigExtra;     // combinational logic of holespAigExtra167,7551
    Vec_Flt_t *    vInArrs;       // PI arrival timesvInArrs168,7617
    Vec_Flt_t *    vOutReqs;      // PO required timesvOutReqs169,7671
    Vec_Int_t *    vCiArrs;       // CI arrival timesvCiArrs170,7726
    Vec_Int_t *    vCoReqs;       // CO required timesvCoReqs171,7780
    Vec_Int_t *    vCoArrs;       // CO arrival timesvCoArrs172,7835
    Vec_Int_t *    vCoAttrs;      // CO attributesvCoAttrs173,7889
    int            And2Delay;     // delay of the AND gate And2Delay174,7940
    float          DefInArrs;     // default PI arrival timesDefInArrs175,8000
    float          DefOutReqs;    // default PO required timesDefOutReqs176,8062
    Vec_Int_t *    vSwitching;    // switching activityvSwitching177,8125
    int *          pTravIds;      // separate traversal ID representationpTravIds178,8181
    int            nTravIdsAlloc; // the number of trav IDs allocatednTravIdsAlloc179,8255
    Vec_Ptr_t *    vNamesIn;      // the input names vNamesIn180,8325
    Vec_Ptr_t *    vNamesOut;     // the output namesvNamesOut181,8379
    Vec_Int_t *    vUserPiIds;    // numbers assigned to PIs by the uservUserPiIds182,8433
    Vec_Int_t *    vUserPoIds;    // numbers assigned to POs by the uservUserPoIds183,8506
    Vec_Int_t *    vUserFfIds;    // numbers assigned to FFs by the uservUserFfIds184,8579
    Vec_Int_t *    vCiNumsOrig;   // original CI namesvCiNumsOrig185,8652
    Vec_Int_t *    vCoNumsOrig;   // original CO namesvCoNumsOrig186,8707
    Vec_Int_t *    vIdsOrig;      // original object IDsvIdsOrig187,8762
    Vec_Int_t *    vIdsEquiv;     // original object IDs proved equivalentvIdsEquiv188,8819
    Vec_Int_t *    vCofVars;      // cofactoring variablesvCofVars189,8894
    Vec_Vec_t *    vClockDoms;    // clock domainsvClockDoms190,8953
    Vec_Flt_t *    vTiming;       // arrival/required/slackvTiming191,9004
    void *         pManTime;      // the timing managerpManTime192,9064
    void *         pLutLib;       // LUT librarypLutLib193,9120
    word           nHashHit;      // hash table hitnHashHit194,9169
    word           nHashMiss;     // hash table missnHashMiss195,9221
    void *         pData;         // various user datapData196,9274
    unsigned *     pData2;        // various user datapData2197,9329
    int            iData;         // various user dataiData198,9384
    int            iData2;        // various user dataiData2199,9439
    int            nAnd2Delay;    // AND2 delay scaled to match delay numbers usednAnd2Delay200,9494
    int            fVerbose;      // verbose reportsfVerbose201,9577
    int            MappedArea;    // area after mappingMappedArea202,9630
    int            MappedDelay;   // delay after mappingMappedDelay203,9686
    int            fBuiltInSim;fBuiltInSim205,9774
    int            iPatsPi;iPatsPi206,9806
    int            nSimWords;nSimWords207,9834
    int            nSimWordsT;nSimWordsT208,9864
    int            iPastPiMax;iPastPiMax209,9895
    int            nSimWordsMax;nSimWordsMax210,9926
    Vec_Wrd_t *    vSims;vSims211,9959
    Vec_Wrd_t *    vSimsT;vSimsT212,9985
    Vec_Wrd_t *    vSimsPi;vSimsPi213,10012
    Vec_Wrd_t *    vSimsPo;vSimsPo214,10040
    Vec_Int_t *    vClassOld;vClassOld215,10068
    Vec_Int_t *    vClassNew;vClassNew216,10098
    int            fIncrSim;fIncrSim218,10158
    int            iNextPi;iNextPi219,10187
    int            iTimeStamp;iTimeStamp220,10215
    Vec_Int_t *    vTimeStamps;vTimeStamps221,10246
    int            nTtVars;       // truth table variablesnTtVars223,10329
    int            nTtWords;      // truth table wordsnTtWords224,10388
    Vec_Int_t *    vTtNums;       // object numbersvTtNums225,10443
    Vec_Int_t *    vTtNodes;      // internal nodesvTtNodes226,10495
    Vec_Ptr_t *    vTtInputs;     // truth tables for constant and primary inputsvTtInputs227,10547
    Vec_Wrd_t *    vTtMemory;     // truth tables for internal nodesvTtMemory228,10629
    Vec_Int_t *    vSuper;        // supergatevSuper230,10715
    Vec_Int_t *    vStore;        // node storage  vStore231,10762
    int            iSuppPi;       // the number of support variablesiSuppPi233,10848
    int            nSuppWords;    // the number of support wordsnSuppWords234,10917
    Vec_Wrd_t *    vSuppWords;    // support informationvSuppWords235,10982
    Vec_Int_t      vCopiesTwo;    // intermediate copiesvCopiesTwo236,11039
    Vec_Int_t      vSuppVars;     // used variablesvSuppVars237,11096
    Gia_Dat_t *    pUData;pUData238,11148
typedef struct Gps_Par_t_ Gps_Par_t;Gps_Par_t242,11180
struct Gps_Par_t_Gps_Par_t_243,11217
    int            fTents;fTents245,11237
    int            fSwitch;fSwitch246,11264
    int            fCut;fCut247,11292
    int            fNpn;fNpn248,11317
    int            fLutProf;fLutProf249,11342
    int            fMuxXor;fMuxXor250,11371
    int            fMiter;fMiter251,11399
    int            fSkipMap;fSkipMap252,11426
    int            fSlacks;fSlacks253,11455
    int            fNoColor;fNoColor254,11483
    char *         pDumpFile;pDumpFile255,11512
typedef struct Emb_Par_t_ Emb_Par_t;Emb_Par_t258,11546
struct Emb_Par_t_Emb_Par_t_259,11583
    int            nDims;         // the number of dimensionnDims261,11603
    int            nSols;         // the number of solutions (typically, 2)nSols262,11664
    int            nIters;        // the number of iterations of FORCEnIters263,11740
    int            fRefine;       // use refinement by FORCEfRefine264,11811
    int            fCluster;      // use clustered representation fCluster265,11872
    int            fDump;         // dump Gnuplot filefDump266,11939
    int            fDumpLarge;    // dump Gnuplot file for large benchmarksfDumpLarge267,11994
    int            fShowImage;    // shows image if Gnuplot is installedfShowImage268,12070
    int            fVerbose;      // verbose flag  fVerbose269,12143
typedef struct Gia_ParFra_t_ Gia_ParFra_t;Gia_ParFra_t274,12221
struct Gia_ParFra_t_Gia_ParFra_t_275,12264
    int            nFrames;       // the number of frames to unrollnFrames277,12287
    int            fInit;         // initialize the timeframesfInit278,12355
    int            fSaveLastLit;  // adds POs for outputs of each framefSaveLastLit279,12418
    int            fDisableSt;    // disables strashingfDisableSt280,12490
    int            fOrPos;        // ORs respective POs in each timeframefOrPos281,12546
    int            fVerbose;      // enables verbose outputfVerbose282,12620
typedef struct Gia_ParSim_t_ Gia_ParSim_t;Gia_ParSim_t287,12710
struct Gia_ParSim_t_Gia_ParSim_t_288,12753
    int            nWords;        // the number of machine wordsnWords291,12810
    int            nIters;        // the number of timeframesnIters292,12875
    int            RandSeed;      // seed to generate random numbersRandSeed293,12937
    int            TimeLimit;     // time limit in secondsTimeLimit294,13006
    int            fCheckMiter;   // check if miter outputs are non-zerofCheckMiter295,13065
    int            fVerbose;      // enables verbose outputfVerbose296,13138
    int            iOutFail;      // index of the failed outputiOutFail297,13198
typedef struct Gia_ManSim_t_ Gia_ManSim_t;Gia_ManSim_t300,13266
struct Gia_ManSim_t_Gia_ManSim_t_301,13309
    Gia_Man_t *    pAig;pAig303,13332
    Gia_ParSim_t * pPars; pPars304,13357
    int            nWords;nWords305,13384
    Vec_Int_t *    vCis2Ids;vCis2Ids306,13411
    Vec_Int_t *    vConsts;vConsts307,13440
    unsigned *     pDataSim;     // simulation datapDataSim309,13498
    unsigned *     pDataSimCis;  // simulation data for CIspDataSimCis310,13550
    unsigned *     pDataSimCos;  // simulation data for COspDataSimCos311,13610
typedef struct Jf_Par_t_ Jf_Par_t; Jf_Par_t314,13674
struct Jf_Par_t_Jf_Par_t_315,13710
    int            nLutSize;nLutSize317,13729
    int            nCutNum;nCutNum318,13758
    int            nProcNum;nProcNum319,13786
    int            nRounds;nRounds320,13815
    int            nRoundsEla;nRoundsEla321,13843
    int            nRelaxRatio;nRelaxRatio322,13874
    int            nCoarseLimit;nCoarseLimit323,13906
    int            nAreaTuner;nAreaTuner324,13939
    int            nReqTimeFlex;nReqTimeFlex325,13970
    int            nVerbLimit;nVerbLimit326,14003
    int            nDelayLut1;nDelayLut1327,14034
    int            nDelayLut2;nDelayLut2328,14065
    int            nFastEdges;nFastEdges329,14096
    int            DelayTarget;DelayTarget330,14127
    int            fAreaOnly;fAreaOnly331,14159
    int            fPinPerm;fPinPerm332,14189
    int            fPinQuick;fPinQuick333,14218
    int            fPinFilter;fPinFilter334,14248
    int            fOptEdge;fOptEdge335,14279
    int            fUseMux7;fUseMux7336,14308
    int            fPower;fPower337,14337
    int            fCoarsen;fCoarsen338,14364
    int            fCutMin;fCutMin339,14393
    int            fFuncDsd;fFuncDsd340,14421
    int            fGenCnf;fGenCnf341,14450
    int            fCnfObjIds;fCnfObjIds342,14478
    int            fAddOrCla;fAddOrCla343,14509
    int            fCnfMapping;fCnfMapping344,14539
    int            fPureAig;fPureAig345,14571
    int            fDoAverage;fDoAverage346,14600
    int            fCutHashing;fCutHashing347,14631
    int            fCutSimple;fCutSimple348,14663
    int            fCutGroup;fCutGroup349,14694
    int            fVerbose;fVerbose350,14724
    int            fVeryVerbose;fVeryVerbose351,14753
    int            nLutSizeMax;nLutSizeMax352,14786
    int            nCutNumMax;nCutNumMax353,14818
    int            nProcNumMax;nProcNumMax354,14849
    int            nLutSizeMux;nLutSizeMux355,14881
    word           Delay;Delay356,14913
    word           Area;Area357,14939
    word           Edge;Edge358,14964
    word           Clause;Clause359,14989
    word           Mux7;Mux7360,15016
    word           WordMapDelay;WordMapDelay361,15041
    word           WordMapArea;WordMapArea362,15074
    word           WordMapDelayTarget;WordMapDelayTarget363,15106
    int            MapDelay;MapDelay364,15145
    float          MapArea;MapArea365,15174
    float          MapAreaF;MapAreaF366,15202
    float          MapDelayTarget;MapDelayTarget367,15231
    float          Epsilon;Epsilon368,15266
    float *        pTimesArr;pTimesArr369,15294
    float *        pTimesReq;pTimesReq370,15324
static inline unsigned     Gia_ObjCutSign( unsigned ObjId )       { return (1 << (ObjId & 31));                                 }Gia_ObjCutSign373,15358
static inline int          Gia_WordHasOneBit( unsigned uWord )    { return (uWord & (uWord-1)) == 0;                            }Gia_WordHasOneBit374,15488
static inline int          Gia_WordHasOnePair( unsigned uWord )   { return Gia_WordHasOneBit(uWord & (uWord>>1) & 0x55555555);  }Gia_WordHasOnePair375,15618
static inline int          Gia_WordCountOnes( unsigned uWord )Gia_WordCountOnes376,15748
static inline int Gia_WordFindFirstBit( unsigned uWord )Gia_WordFindFirstBit384,16111
static inline int Gia_ManTruthIsConst0( unsigned * pIn, int nVars )Gia_ManTruthIsConst0393,16284
static inline int Gia_ManTruthIsConst1( unsigned * pIn, int nVars )Gia_ManTruthIsConst1401,16480
static inline void Gia_ManTruthCopy( unsigned * pOut, unsigned * pIn, int nVars )Gia_ManTruthCopy409,16692
static inline void Gia_ManTruthClear( unsigned * pOut, int nVars )Gia_ManTruthClear415,16870
static inline void Gia_ManTruthFill( unsigned * pOut, int nVars )Gia_ManTruthFill421,17028
static inline void Gia_ManTruthNot( unsigned * pOut, unsigned * pIn, int nVars )Gia_ManTruthNot427,17196
static inline int          Gia_ManConst0Lit()                  { return 0; }Gia_ManConst0Lit434,17375
static inline int          Gia_ManConst1Lit()                  { return 1; }Gia_ManConst1Lit435,17452
static inline int          Gia_ManIsConst0Lit( int iLit )      { return (iLit == 0); }Gia_ManIsConst0Lit436,17529
static inline int          Gia_ManIsConst1Lit( int iLit )      { return (iLit == 1); }Gia_ManIsConst1Lit437,17616
static inline int          Gia_ManIsConstLit( int iLit )       { return (iLit <= 1); }Gia_ManIsConstLit438,17703
static inline Gia_Obj_t *  Gia_Regular( Gia_Obj_t * p )        { return (Gia_Obj_t *)((ABC_PTRUINT_T)(p) & ~01);                           }Gia_Regular440,17791
static inline Gia_Obj_t *  Gia_Not( Gia_Obj_t * p )            { return (Gia_Obj_t *)((ABC_PTRUINT_T)(p) ^  01);                           }Gia_Not441,17932
static inline Gia_Obj_t *  Gia_NotCond( Gia_Obj_t * p, int c ) { return (Gia_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c));                           }Gia_NotCond442,18073
static inline int          Gia_IsComplement( Gia_Obj_t * p )   { return (int)((ABC_PTRUINT_T)(p) & 01);                                    }Gia_IsComplement443,18214
static inline char *       Gia_ManName( Gia_Man_t * p )        { return p->pName;                                                          }Gia_ManName445,18356
static inline int          Gia_ManCiNum( Gia_Man_t * p )       { return Vec_IntSize(p->vCis);                                              }Gia_ManCiNum446,18497
static inline int          Gia_ManCoNum( Gia_Man_t * p )       { return Vec_IntSize(p->vCos);                                              }Gia_ManCoNum447,18638
static inline int          Gia_ManPiNum( Gia_Man_t * p )       { return Vec_IntSize(p->vCis) - p->nRegs;                                   }Gia_ManPiNum448,18779
static inline int          Gia_ManPoNum( Gia_Man_t * p )       { return Vec_IntSize(p->vCos) - p->nRegs;                                   }Gia_ManPoNum449,18920
static inline int          Gia_ManRegNum( Gia_Man_t * p )      { return p->nRegs;                                                          }Gia_ManRegNum450,19061
static inline int          Gia_ManObjNum( Gia_Man_t * p )      { return p->nObjs;                                                          }Gia_ManObjNum451,19202
static inline int          Gia_ManAndNum( Gia_Man_t * p )      { return p->nObjs - Vec_IntSize(p->vCis) - Vec_IntSize(p->vCos) - 1;        }Gia_ManAndNum452,19343
static inline int          Gia_ManXorNum( Gia_Man_t * p )      { return p->nXors;                                                          }Gia_ManXorNum453,19484
static inline int          Gia_ManMuxNum( Gia_Man_t * p )      { return p->nMuxes;                                                         }Gia_ManMuxNum454,19625
static inline int          Gia_ManBufNum( Gia_Man_t * p )      { return p->nBufs;                                                          }Gia_ManBufNum455,19766
static inline int          Gia_ManAndNotBufNum( Gia_Man_t * p ){ return Gia_ManAndNum(p) - Gia_ManBufNum(p);                               }Gia_ManAndNotBufNum456,19907
static inline int          Gia_ManCandNum( Gia_Man_t * p )     { return Gia_ManCiNum(p) + Gia_ManAndNum(p);                                }Gia_ManCandNum457,20048
static inline int          Gia_ManConstrNum( Gia_Man_t * p )   { return p->nConstrs;                                                       }Gia_ManConstrNum458,20189
static inline void         Gia_ManFlipVerbose( Gia_Man_t * p ) { p->fVerbose ^= 1;                                                         } Gia_ManFlipVerbose459,20330
static inline int          Gia_ManHasChoices( Gia_Man_t * p )  { return p->pSibls != NULL;                                                 } Gia_ManHasChoices460,20472
static inline int          Gia_ManChoiceNum( Gia_Man_t * p )   { int c = 0; if (p->pSibls) { int i; for (i = 0; i < p->nObjs; i++) c += (int)(p->pSibls[i] > 0); } return c; } Gia_ManChoiceNum461,20614
static inline Gia_Obj_t *  Gia_ManConst0( Gia_Man_t * p )      { return p->pObjs;                                                          }Gia_ManConst0463,20791
static inline Gia_Obj_t *  Gia_ManConst1( Gia_Man_t * p )      { return Gia_Not(Gia_ManConst0(p));                                         }Gia_ManConst1464,20932
static inline Gia_Obj_t *  Gia_ManObj( Gia_Man_t * p, int v )  { assert( v >= 0 && v < p->nObjs ); return p->pObjs + v;                    }Gia_ManObj465,21073
static inline Gia_Obj_t *  Gia_ManCi( Gia_Man_t * p, int v )   { return Gia_ManObj( p, Vec_IntEntry(p->vCis,v) );                          }Gia_ManCi466,21214
static inline Gia_Obj_t *  Gia_ManCo( Gia_Man_t * p, int v )   { return Gia_ManObj( p, Vec_IntEntry(p->vCos,v) );                          }Gia_ManCo467,21355
static inline Gia_Obj_t *  Gia_ManPi( Gia_Man_t * p, int v )   { assert( v < Gia_ManPiNum(p) );  return Gia_ManCi( p, v );                 }Gia_ManPi468,21496
static inline Gia_Obj_t *  Gia_ManPo( Gia_Man_t * p, int v )   { assert( v < Gia_ManPoNum(p) );  return Gia_ManCo( p, v );                 }Gia_ManPo469,21637
static inline Gia_Obj_t *  Gia_ManRo( Gia_Man_t * p, int v )   { assert( v < Gia_ManRegNum(p) ); return Gia_ManCi( p, Gia_ManPiNum(p)+v ); }Gia_ManRo470,21778
static inline Gia_Obj_t *  Gia_ManRi( Gia_Man_t * p, int v )   { assert( v < Gia_ManRegNum(p) ); return Gia_ManCo( p, Gia_ManPoNum(p)+v ); }Gia_ManRi471,21919
static inline int          Gia_ObjId( Gia_Man_t * p, Gia_Obj_t * pObj )        { assert( p->pObjs <= pObj && pObj < p->pObjs + p->nObjs ); return pObj - p->pObjs; }Gia_ObjId473,22061
static inline int          Gia_ObjCioId( Gia_Obj_t * pObj )                    { assert( pObj->fTerm ); return pObj->iDiff1;                 }Gia_ObjCioId474,22226
static inline void         Gia_ObjSetCioId( Gia_Obj_t * pObj, int v )          { assert( pObj->fTerm ); pObj->iDiff1 = v;                    }Gia_ObjSetCioId475,22369
static inline int          Gia_ObjValue( Gia_Obj_t * pObj )                    { return pObj->Value;                                         }Gia_ObjValue476,22512
static inline void         Gia_ObjSetValue( Gia_Obj_t * pObj, int i )          { pObj->Value = i;                                            }Gia_ObjSetValue477,22655
static inline int          Gia_ObjPhase( Gia_Obj_t * pObj )                    { return pObj->fPhase;                                        }Gia_ObjPhase478,22798
static inline int          Gia_ObjPhaseReal( Gia_Obj_t * pObj )                { return Gia_Regular(pObj)->fPhase ^ Gia_IsComplement(pObj);  }Gia_ObjPhaseReal479,22941
static inline int          Gia_ObjIsTerm( Gia_Obj_t * pObj )                   { return pObj->fTerm;                             } Gia_ObjIsTerm481,23085
static inline int          Gia_ObjIsAndOrConst0( Gia_Obj_t * pObj )            { return!pObj->fTerm;                             } Gia_ObjIsAndOrConst0482,23217
static inline int          Gia_ObjIsCi( Gia_Obj_t * pObj )                     { return pObj->fTerm && pObj->iDiff0 == GIA_NONE; } Gia_ObjIsCi483,23349
static inline int          Gia_ObjIsCo( Gia_Obj_t * pObj )                     { return pObj->fTerm && pObj->iDiff0 != GIA_NONE; } Gia_ObjIsCo484,23481
static inline int          Gia_ObjIsAnd( Gia_Obj_t * pObj )                    { return!pObj->fTerm && pObj->iDiff0 != GIA_NONE; } Gia_ObjIsAnd485,23613
static inline int          Gia_ObjIsXor( Gia_Obj_t * pObj )                    { return Gia_ObjIsAnd(pObj) && pObj->iDiff0 < pObj->iDiff1; } Gia_ObjIsXor486,23745
static inline int          Gia_ObjIsMuxId( Gia_Man_t * p, int iObj )           { return p->pMuxes && p->pMuxes[iObj] > 0;        } Gia_ObjIsMuxId487,23887
static inline int          Gia_ObjIsMux( Gia_Man_t * p, Gia_Obj_t * pObj )     { return Gia_ObjIsMuxId( p, Gia_ObjId(p, pObj) ); } Gia_ObjIsMux488,24019
static inline int          Gia_ObjIsAndReal( Gia_Man_t * p, Gia_Obj_t * pObj ) { return Gia_ObjIsAnd(pObj) && pObj->iDiff0 > pObj->iDiff1 && !Gia_ObjIsMux(p, pObj); } Gia_ObjIsAndReal489,24151
static inline int          Gia_ObjIsBuf( Gia_Obj_t * pObj )                    { return pObj->iDiff0 == pObj->iDiff1 && pObj->iDiff0 != GIA_NONE && !pObj->fTerm;    } Gia_ObjIsBuf490,24319
static inline int          Gia_ObjIsAndNotBuf( Gia_Obj_t * pObj )              { return Gia_ObjIsAnd(pObj) && pObj->iDiff0 != pObj->iDiff1; } Gia_ObjIsAndNotBuf491,24487
static inline int          Gia_ObjIsCand( Gia_Obj_t * pObj )                   { return Gia_ObjIsAnd(pObj) || Gia_ObjIsCi(pObj); } Gia_ObjIsCand492,24630
static inline int          Gia_ObjIsConst0( Gia_Obj_t * pObj )                 { return pObj->iDiff0 == GIA_NONE && pObj->iDiff1 == GIA_NONE;     } Gia_ObjIsConst0493,24762
static inline int          Gia_ManObjIsConst0( Gia_Man_t * p, Gia_Obj_t * pObj){ return pObj == p->pObjs;                        } Gia_ManObjIsConst0494,24911
static inline int          Gia_Obj2Lit( Gia_Man_t * p, Gia_Obj_t * pObj )      { return Abc_Var2Lit(Gia_ObjId(p, Gia_Regular(pObj)), Gia_IsComplement(pObj)); }Gia_Obj2Lit496,25044
static inline Gia_Obj_t *  Gia_Lit2Obj( Gia_Man_t * p, int iLit )              { return Gia_NotCond(Gia_ManObj(p, Abc_Lit2Var(iLit)), Abc_LitIsCompl(iLit));  }Gia_Lit2Obj497,25204
static inline int          Gia_ManCiLit( Gia_Man_t * p, int CiId )             { return Gia_Obj2Lit( p, Gia_ManCi(p, CiId) );                }Gia_ManCiLit498,25364
static inline int          Gia_ManIdToCioId( Gia_Man_t * p, int Id )           { return Gia_ObjCioId( Gia_ManObj(p, Id) );                   }Gia_ManIdToCioId500,25508
static inline int          Gia_ManCiIdToId( Gia_Man_t * p, int CiId )          { return Gia_ObjId( p, Gia_ManCi(p, CiId) );                  }Gia_ManCiIdToId501,25651
static inline int          Gia_ManCoIdToId( Gia_Man_t * p, int CoId )          { return Gia_ObjId( p, Gia_ManCo(p, CoId) );                  }Gia_ManCoIdToId502,25794
static inline int          Gia_ObjIsPi( Gia_Man_t * p, Gia_Obj_t * pObj )      { return Gia_ObjIsCi(pObj) && Gia_ObjCioId(pObj) < Gia_ManPiNum(p);   } Gia_ObjIsPi504,25938
static inline int          Gia_ObjIsPo( Gia_Man_t * p, Gia_Obj_t * pObj )      { return Gia_ObjIsCo(pObj) && Gia_ObjCioId(pObj) < Gia_ManPoNum(p);   } Gia_ObjIsPo505,26090
static inline int          Gia_ObjIsRo( Gia_Man_t * p, Gia_Obj_t * pObj )      { return Gia_ObjIsCi(pObj) && Gia_ObjCioId(pObj) >= Gia_ManPiNum(p);  } Gia_ObjIsRo506,26242
static inline int          Gia_ObjIsRi( Gia_Man_t * p, Gia_Obj_t * pObj )      { return Gia_ObjIsCo(pObj) && Gia_ObjCioId(pObj) >= Gia_ManPoNum(p);  } Gia_ObjIsRi507,26394
static inline Gia_Obj_t *  Gia_ObjRoToRi( Gia_Man_t * p, Gia_Obj_t * pObj )    { assert( Gia_ObjIsRo(p, pObj) ); return Gia_ManCo(p, Gia_ManCoNum(p) - Gia_ManCiNum(p) + Gia_ObjCioId(pObj)); } Gia_ObjRoToRi509,26547
static inline Gia_Obj_t *  Gia_ObjRiToRo( Gia_Man_t * p, Gia_Obj_t * pObj )    { assert( Gia_ObjIsRi(p, pObj) ); return Gia_ManCi(p, Gia_ManCiNum(p) - Gia_ManCoNum(p) + Gia_ObjCioId(pObj)); } Gia_ObjRiToRo510,26740
static inline int          Gia_ObjRoToRiId( Gia_Man_t * p, int ObjId )         { return Gia_ObjId( p, Gia_ObjRoToRi( p, Gia_ManObj(p, ObjId) ) );    } Gia_ObjRoToRiId511,26933
static inline int          Gia_ObjRiToRoId( Gia_Man_t * p, int ObjId )         { return Gia_ObjId( p, Gia_ObjRiToRo( p, Gia_ManObj(p, ObjId) ) );    }Gia_ObjRiToRoId512,27085
static inline int          Gia_ObjDiff0( Gia_Obj_t * pObj )                    { return pObj->iDiff0;         }Gia_ObjDiff0514,27237
static inline int          Gia_ObjDiff1( Gia_Obj_t * pObj )                    { return pObj->iDiff1;         }Gia_ObjDiff1515,27349
static inline int          Gia_ObjFaninC0( Gia_Obj_t * pObj )                  { return pObj->fCompl0;        }Gia_ObjFaninC0516,27461
static inline int          Gia_ObjFaninC1( Gia_Obj_t * pObj )                  { return pObj->fCompl1;        }Gia_ObjFaninC1517,27573
static inline int          Gia_ObjFaninC2( Gia_Man_t * p, Gia_Obj_t * pObj )   { return p->pMuxes && Abc_LitIsCompl(p->pMuxes[Gia_ObjId(p, pObj)]);  }Gia_ObjFaninC2518,27685
static inline Gia_Obj_t *  Gia_ObjFanin0( Gia_Obj_t * pObj )                   { return pObj - pObj->iDiff0;  }Gia_ObjFanin0519,27836
static inline Gia_Obj_t *  Gia_ObjFanin1( Gia_Obj_t * pObj )                   { return pObj - pObj->iDiff1;  }Gia_ObjFanin1520,27948
static inline Gia_Obj_t *  Gia_ObjFanin2( Gia_Man_t * p, Gia_Obj_t * pObj )    { return p->pMuxes ? Gia_ManObj(p, Abc_Lit2Var(p->pMuxes[Gia_ObjId(p, pObj)])) : NULL;  }Gia_ObjFanin2521,28060
static inline Gia_Obj_t *  Gia_ObjChild0( Gia_Obj_t * pObj )                   { return Gia_NotCond( Gia_ObjFanin0(pObj), Gia_ObjFaninC0(pObj) ); }Gia_ObjChild0522,28229
static inline Gia_Obj_t *  Gia_ObjChild1( Gia_Obj_t * pObj )                   { return Gia_NotCond( Gia_ObjFanin1(pObj), Gia_ObjFaninC1(pObj) ); }Gia_ObjChild1523,28377
static inline Gia_Obj_t *  Gia_ObjChild2( Gia_Man_t * p, Gia_Obj_t * pObj )    { return Gia_NotCond( Gia_ObjFanin2(p, pObj), Gia_ObjFaninC2(p, pObj) ); }Gia_ObjChild2524,28525
static inline int          Gia_ObjFaninId0( Gia_Obj_t * pObj, int ObjId )      { return ObjId - pObj->iDiff0;    }Gia_ObjFaninId0525,28679
static inline int          Gia_ObjFaninId1( Gia_Obj_t * pObj, int ObjId )      { return ObjId - pObj->iDiff1;    }Gia_ObjFaninId1526,28794
static inline int          Gia_ObjFaninId2( Gia_Man_t * p, int ObjId )         { return (p->pMuxes && p->pMuxes[ObjId]) ? Abc_Lit2Var(p->pMuxes[ObjId]) : -1; }Gia_ObjFaninId2527,28909
static inline int          Gia_ObjFaninId0p( Gia_Man_t * p, Gia_Obj_t * pObj ) { return Gia_ObjFaninId0( pObj, Gia_ObjId(p, pObj) );              }Gia_ObjFaninId0p528,29069
static inline int          Gia_ObjFaninId1p( Gia_Man_t * p, Gia_Obj_t * pObj ) { return Gia_ObjFaninId1( pObj, Gia_ObjId(p, pObj) );              }Gia_ObjFaninId1p529,29217
static inline int          Gia_ObjFaninId2p( Gia_Man_t * p, Gia_Obj_t * pObj ) { return (p->pMuxes && p->pMuxes[Gia_ObjId(p, pObj)]) ? Abc_Lit2Var(p->pMuxes[Gia_ObjId(p, pObj)]) : -1; }Gia_ObjFaninId2p530,29365
static inline int          Gia_ObjFaninLit0( Gia_Obj_t * pObj, int ObjId )     { return Abc_Var2Lit( Gia_ObjFaninId0(pObj, ObjId), Gia_ObjFaninC0(pObj) ); }Gia_ObjFaninLit0531,29551
static inline int          Gia_ObjFaninLit1( Gia_Obj_t * pObj, int ObjId )     { return Abc_Var2Lit( Gia_ObjFaninId1(pObj, ObjId), Gia_ObjFaninC1(pObj) ); }Gia_ObjFaninLit1532,29708
static inline int          Gia_ObjFaninLit2( Gia_Man_t * p, int ObjId )        { return (p->pMuxes && p->pMuxes[ObjId]) ? p->pMuxes[ObjId] : -1;           }Gia_ObjFaninLit2533,29865
static inline int          Gia_ObjFaninLit0p( Gia_Man_t * p, Gia_Obj_t * pObj) { return Abc_Var2Lit( Gia_ObjFaninId0p(p, pObj), Gia_ObjFaninC0(pObj) );    }Gia_ObjFaninLit0p534,30022
static inline int          Gia_ObjFaninLit1p( Gia_Man_t * p, Gia_Obj_t * pObj) { return Abc_Var2Lit( Gia_ObjFaninId1p(p, pObj), Gia_ObjFaninC1(pObj) );    }Gia_ObjFaninLit1p535,30179
static inline int          Gia_ObjFaninLit2p( Gia_Man_t * p, Gia_Obj_t * pObj) { return (p->pMuxes && p->pMuxes[Gia_ObjId(p, pObj)]) ? p->pMuxes[Gia_ObjId(p, pObj)] : -1;    }Gia_ObjFaninLit2p536,30336
static inline void         Gia_ObjFlipFaninC0( Gia_Obj_t * pObj )              { assert( Gia_ObjIsCo(pObj) ); pObj->fCompl0 ^= 1;          }Gia_ObjFlipFaninC0537,30512
static inline int          Gia_ObjFaninNum( Gia_Man_t * p, Gia_Obj_t * pObj )  { if ( Gia_ObjIsMux(p, pObj) ) return 3; if ( Gia_ObjIsAnd(pObj) ) return 2; if ( Gia_ObjIsCo(pObj) ) return 1; return 0; }Gia_ObjFaninNum538,30653
static inline int          Gia_ObjWhatFanin( Gia_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pFanin )  { if ( Gia_ObjFanin0(pObj) == pFanin ) return 0; if ( Gia_ObjFanin1(pObj) == pFanin ) return 1; if ( Gia_ObjFanin2(p, pObj) == pFanin ) return 2; assert(0); return -1; }Gia_ObjWhatFanin539,30856
static inline int          Gia_ManPoIsConst( Gia_Man_t * p, int iPoIndex )     { return Gia_ObjFaninId0p(p, Gia_ManPo(p, iPoIndex)) == 0;                   }Gia_ManPoIsConst541,31127
static inline int          Gia_ManPoIsConst0( Gia_Man_t * p, int iPoIndex )    { return Gia_ManIsConst0Lit( Gia_ObjFaninLit0p(p, Gia_ManPo(p, iPoIndex)) ); }Gia_ManPoIsConst0542,31285
static inline int          Gia_ManPoIsConst1( Gia_Man_t * p, int iPoIndex )    { return Gia_ManIsConst1Lit( Gia_ObjFaninLit0p(p, Gia_ManPo(p, iPoIndex)) ); }Gia_ManPoIsConst1543,31443
static inline Gia_Obj_t *  Gia_ObjCopy( Gia_Man_t * p, Gia_Obj_t * pObj )      { return Gia_ManObj( p, Abc_Lit2Var(pObj->Value) );                              }Gia_ObjCopy545,31602
static inline int          Gia_ObjLitCopy( Gia_Man_t * p, int iLit )           { return Abc_LitNotCond( Gia_ManObj(p, Abc_Lit2Var(iLit))->Value, Abc_LitIsCompl(iLit));     }Gia_ObjLitCopy546,31764
static inline int          Gia_ObjFanin0Copy( Gia_Obj_t * pObj )               { return Abc_LitNotCond( Gia_ObjFanin0(pObj)->Value, Gia_ObjFaninC0(pObj) );     }Gia_ObjFanin0Copy548,31939
static inline int          Gia_ObjFanin1Copy( Gia_Obj_t * pObj )               { return Abc_LitNotCond( Gia_ObjFanin1(pObj)->Value, Gia_ObjFaninC1(pObj) );     }Gia_ObjFanin1Copy549,32101
static inline int          Gia_ObjFanin2Copy( Gia_Man_t * p, Gia_Obj_t * pObj ){ return Abc_LitNotCond(Gia_ObjFanin2(p, pObj)->Value, Gia_ObjFaninC2(p, pObj)); }Gia_ObjFanin2Copy550,32263
static inline int          Gia_ObjCopyF( Gia_Man_t * p, int f, Gia_Obj_t * pObj )               { return Vec_IntEntry(&p->vCopies, Gia_ManObjNum(p) * f + Gia_ObjId(p,pObj));      }Gia_ObjCopyF552,32426
static inline void         Gia_ObjSetCopyF( Gia_Man_t * p, int f, Gia_Obj_t * pObj, int iLit )  { Vec_IntWriteEntry(&p->vCopies, Gia_ManObjNum(p) * f + Gia_ObjId(p,pObj), iLit);  }Gia_ObjSetCopyF553,32607
static inline int          Gia_ObjCopyArray( Gia_Man_t * p, int iObj )                          { return Vec_IntEntry(&p->vCopies, iObj);                                          }Gia_ObjCopyArray554,32788
static inline void         Gia_ObjSetCopyArray( Gia_Man_t * p, int iObj, int iLit )             { Vec_IntWriteEntry(&p->vCopies, iObj, iLit);                                      }Gia_ObjSetCopyArray555,32969
static inline void         Gia_ManCleanCopyArray( Gia_Man_t * p )                               { Vec_IntFill( &p->vCopies, Gia_ManObjNum(p), -1 );                                }Gia_ManCleanCopyArray556,33150
static inline int          Gia_ObjCopy2Array( Gia_Man_t * p, int iObj )                          { return Vec_IntEntry(&p->vCopies2, iObj);                                          }Gia_ObjCopy2Array558,33332
static inline void         Gia_ObjSetCopy2Array( Gia_Man_t * p, int iObj, int iLit )             { Vec_IntWriteEntry(&p->vCopies2, iObj, iLit);                                      }Gia_ObjSetCopy2Array559,33515
static inline void         Gia_ManCleanCopy2Array( Gia_Man_t * p )                               { Vec_IntFill( &p->vCopies2, Gia_ManObjNum(p), -1 );                                }Gia_ManCleanCopy2Array560,33698
static inline int          Gia_ObjFanin0CopyF( Gia_Man_t * p, int f, Gia_Obj_t * pObj )         { return Abc_LitNotCond(Gia_ObjCopyF(p, f, Gia_ObjFanin0(pObj)), Gia_ObjFaninC0(pObj));   }Gia_ObjFanin0CopyF562,33882
static inline int          Gia_ObjFanin1CopyF( Gia_Man_t * p, int f, Gia_Obj_t * pObj )         { return Abc_LitNotCond(Gia_ObjCopyF(p, f, Gia_ObjFanin1(pObj)), Gia_ObjFaninC1(pObj));   }Gia_ObjFanin1CopyF563,34070
static inline int          Gia_ObjFanin0CopyArray( Gia_Man_t * p, Gia_Obj_t * pObj )            { return Abc_LitNotCond(Gia_ObjCopyArray(p, Gia_ObjFaninId0p(p,pObj)), Gia_ObjFaninC0(pObj));  }Gia_ObjFanin0CopyArray564,34258
static inline int          Gia_ObjFanin1CopyArray( Gia_Man_t * p, Gia_Obj_t * pObj )            { return Abc_LitNotCond(Gia_ObjCopyArray(p, Gia_ObjFaninId1p(p,pObj)), Gia_ObjFaninC1(pObj));  }Gia_ObjFanin1CopyArray565,34451
static inline Gia_Obj_t *  Gia_ObjFromLit( Gia_Man_t * p, int iLit )           { return Gia_NotCond( Gia_ManObj(p, Abc_Lit2Var(iLit)), Abc_LitIsCompl(iLit) );  }Gia_ObjFromLit567,34645
static inline int          Gia_ObjToLit( Gia_Man_t * p, Gia_Obj_t * pObj )     { return Abc_Var2Lit( Gia_ObjId(p, Gia_Regular(pObj)), Gia_IsComplement(pObj) ); }Gia_ObjToLit568,34807
static inline int          Gia_ObjPhaseRealLit( Gia_Man_t * p, int iLit )      { return Gia_ObjPhaseReal( Gia_ObjFromLit(p, iLit) );                            }Gia_ObjPhaseRealLit569,34969
static inline int          Gia_ObjLevelId( Gia_Man_t * p, int Id )             { return Vec_IntGetEntry(p->vLevels, Id);                    }Gia_ObjLevelId571,35132
static inline int          Gia_ObjLevel( Gia_Man_t * p, Gia_Obj_t * pObj )     { return Gia_ObjLevelId( p, Gia_ObjId(p,pObj) );             }Gia_ObjLevel572,35274
static inline void         Gia_ObjUpdateLevelId( Gia_Man_t * p, int Id, int l )   { Vec_IntSetEntry(p->vLevels, Id, Abc_MaxInt(Vec_IntEntry(p->vLevels, Id), l));                        }Gia_ObjUpdateLevelId573,35416
static inline void         Gia_ObjSetLevelId( Gia_Man_t * p, int Id, int l )   { Vec_IntSetEntry(p->vLevels, Id, l);                        }Gia_ObjSetLevelId574,35603
static inline void         Gia_ObjSetLevel( Gia_Man_t * p, Gia_Obj_t * pObj, int l )  { Gia_ObjSetLevelId( p, Gia_ObjId(p,pObj), l );       }Gia_ObjSetLevel575,35745
static inline void         Gia_ObjSetCoLevel( Gia_Man_t * p, Gia_Obj_t * pObj )  { assert( Gia_ObjIsCo(pObj)  ); Gia_ObjSetLevel( p, pObj, Gia_ObjLevel(p,Gia_ObjFanin0(pObj)) );                                                }Gia_ObjSetCoLevel576,35887
static inline void         Gia_ObjSetBufLevel( Gia_Man_t * p, Gia_Obj_t * pObj ) { assert( Gia_ObjIsAnd(pObj) ); Gia_ObjSetLevel( p, pObj, Gia_ObjLevel(p,Gia_ObjFanin0(pObj)) );                                                }Gia_ObjSetBufLevel577,36114
static inline void         Gia_ObjSetAndLevel( Gia_Man_t * p, Gia_Obj_t * pObj ) { assert( Gia_ObjIsAnd(pObj) ); Gia_ObjSetLevel( p, pObj, 1+Abc_MaxInt(Gia_ObjLevel(p,Gia_ObjFanin0(pObj)),Gia_ObjLevel(p,Gia_ObjFanin1(pObj))) ); }Gia_ObjSetAndLevel578,36341
static inline void         Gia_ObjSetXorLevel( Gia_Man_t * p, Gia_Obj_t * pObj ) { assert( Gia_ObjIsXor(pObj) ); Gia_ObjSetLevel( p, pObj, 2+Abc_MaxInt(Gia_ObjLevel(p,Gia_ObjFanin0(pObj)),Gia_ObjLevel(p,Gia_ObjFanin1(pObj))) ); }Gia_ObjSetXorLevel579,36571
static inline void         Gia_ObjSetMuxLevel( Gia_Man_t * p, Gia_Obj_t * pObj ) { assert( Gia_ObjIsMux(p,pObj) ); Gia_ObjSetLevel( p, pObj, 2+Abc_MaxInt( Abc_MaxInt(Gia_ObjLevel(p,Gia_ObjFanin0(pObj)),Gia_ObjLevel(p,Gia_ObjFanin1(pObj))), Gia_ObjLevel(p,Gia_ObjFanin2(p,pObj))) ); }Gia_ObjSetMuxLevel580,36801
static inline void         Gia_ObjSetGateLevel( Gia_Man_t * p, Gia_Obj_t * pObj ){ if ( !p->fGiaSimple && Gia_ObjIsBuf(pObj) ) Gia_ObjSetBufLevel(p, pObj); else if ( Gia_ObjIsMux(p,pObj) ) Gia_ObjSetMuxLevel(p, pObj); else if ( Gia_ObjIsXor(pObj) ) Gia_ObjSetXorLevel(p, pObj); else if ( Gia_ObjIsAnd(pObj) ) Gia_ObjSetAndLevel(p, pObj); }Gia_ObjSetGateLevel581,37085
static inline int          Gia_ObjHasNumId( Gia_Man_t * p, int Id )                { return Vec_IntEntry(p->vTtNums, Id) > -ABC_INFINITY;     }Gia_ObjHasNumId583,37426
static inline int          Gia_ObjNumId( Gia_Man_t * p, int Id )                   { return Vec_IntEntry(p->vTtNums, Id);                     }Gia_ObjNumId584,37570
static inline int          Gia_ObjNum( Gia_Man_t * p, Gia_Obj_t * pObj )           { return Vec_IntEntry(p->vTtNums, Gia_ObjId(p,pObj));      }Gia_ObjNum585,37714
static inline void         Gia_ObjSetNumId( Gia_Man_t * p, int Id, int n )         { Vec_IntWriteEntry(p->vTtNums, Id, n);                    }Gia_ObjSetNumId586,37858
static inline void         Gia_ObjSetNum( Gia_Man_t * p, Gia_Obj_t * pObj, int n ) { Vec_IntWriteEntry(p->vTtNums, Gia_ObjId(p,pObj), n);     }Gia_ObjSetNum587,38002
static inline void         Gia_ObjResetNumId( Gia_Man_t * p, int Id )              { Vec_IntWriteEntry(p->vTtNums, Id, -ABC_INFINITY);        }Gia_ObjResetNumId588,38146
static inline int          Gia_ObjRefNumId( Gia_Man_t * p, int Id )                { return p->pRefs[Id];                              }Gia_ObjRefNumId590,38291
static inline int          Gia_ObjRefIncId( Gia_Man_t * p, int Id )                { return p->pRefs[Id]++;                            }Gia_ObjRefIncId591,38428
static inline int          Gia_ObjRefDecId( Gia_Man_t * p, int Id )                { return --p->pRefs[Id];                            }Gia_ObjRefDecId592,38565
static inline int          Gia_ObjRefNum( Gia_Man_t * p, Gia_Obj_t * pObj )        { return Gia_ObjRefNumId( p, Gia_ObjId(p, pObj) );  }Gia_ObjRefNum593,38702
static inline int          Gia_ObjRefInc( Gia_Man_t * p, Gia_Obj_t * pObj )        { return Gia_ObjRefIncId( p, Gia_ObjId(p, pObj) );  }Gia_ObjRefInc594,38839
static inline int          Gia_ObjRefDec( Gia_Man_t * p, Gia_Obj_t * pObj )        { return Gia_ObjRefDecId( p, Gia_ObjId(p, pObj) );  }Gia_ObjRefDec595,38976
static inline void         Gia_ObjRefFanin0Inc(Gia_Man_t * p, Gia_Obj_t * pObj)    { Gia_ObjRefInc(p, Gia_ObjFanin0(pObj));            }Gia_ObjRefFanin0Inc596,39113
static inline void         Gia_ObjRefFanin1Inc(Gia_Man_t * p, Gia_Obj_t * pObj)    { Gia_ObjRefInc(p, Gia_ObjFanin1(pObj));            }Gia_ObjRefFanin1Inc597,39250
static inline void         Gia_ObjRefFanin2Inc(Gia_Man_t * p, Gia_Obj_t * pObj)    { Gia_ObjRefInc(p, Gia_ObjFanin2(p, pObj));         }Gia_ObjRefFanin2Inc598,39387
static inline void         Gia_ObjRefFanin0Dec(Gia_Man_t * p, Gia_Obj_t * pObj)    { Gia_ObjRefDec(p, Gia_ObjFanin0(pObj));            }Gia_ObjRefFanin0Dec599,39524
static inline void         Gia_ObjRefFanin1Dec(Gia_Man_t * p, Gia_Obj_t * pObj)    { Gia_ObjRefDec(p, Gia_ObjFanin1(pObj));            }Gia_ObjRefFanin1Dec600,39661
static inline void         Gia_ObjRefFanin2Dec(Gia_Man_t * p, Gia_Obj_t * pObj)    { Gia_ObjRefDec(p, Gia_ObjFanin2(p, pObj));         }Gia_ObjRefFanin2Dec601,39798
static inline int          Gia_ObjLutRefNumId( Gia_Man_t * p, int Id )             { assert(p->pLutRefs); return p->pLutRefs[Id];                    }Gia_ObjLutRefNumId603,39936
static inline int          Gia_ObjLutRefIncId( Gia_Man_t * p, int Id )             { assert(p->pLutRefs); return p->pLutRefs[Id]++;                  }Gia_ObjLutRefIncId604,40087
static inline int          Gia_ObjLutRefDecId( Gia_Man_t * p, int Id )             { assert(p->pLutRefs); return --p->pLutRefs[Id];                  }Gia_ObjLutRefDecId605,40238
static inline int          Gia_ObjLutRefNum( Gia_Man_t * p, Gia_Obj_t * pObj )     { assert(p->pLutRefs); return p->pLutRefs[Gia_ObjId(p, pObj)];    }Gia_ObjLutRefNum606,40389
static inline int          Gia_ObjLutRefInc( Gia_Man_t * p, Gia_Obj_t * pObj )     { assert(p->pLutRefs); return p->pLutRefs[Gia_ObjId(p, pObj)]++;  }Gia_ObjLutRefInc607,40540
static inline int          Gia_ObjLutRefDec( Gia_Man_t * p, Gia_Obj_t * pObj )     { assert(p->pLutRefs); return --p->pLutRefs[Gia_ObjId(p, pObj)];  }Gia_ObjLutRefDec608,40691
static inline void         Gia_ObjSetTravIdCurrent( Gia_Man_t * p, Gia_Obj_t * pObj )         { assert( Gia_ObjId(p, pObj) < p->nTravIdsAlloc ); p->pTravIds[Gia_ObjId(p, pObj)] = p->nTravIds;                    }Gia_ObjSetTravIdCurrent610,40843
static inline void         Gia_ObjSetTravIdPrevious( Gia_Man_t * p, Gia_Obj_t * pObj )        { assert( Gia_ObjId(p, pObj) < p->nTravIdsAlloc ); p->pTravIds[Gia_ObjId(p, pObj)] = p->nTravIds - 1;                }Gia_ObjSetTravIdPrevious611,41056
static inline int          Gia_ObjIsTravIdCurrent( Gia_Man_t * p, Gia_Obj_t * pObj )          { assert( Gia_ObjId(p, pObj) < p->nTravIdsAlloc ); return (p->pTravIds[Gia_ObjId(p, pObj)] == p->nTravIds);          }Gia_ObjIsTravIdCurrent612,41269
static inline int          Gia_ObjIsTravIdPrevious( Gia_Man_t * p, Gia_Obj_t * pObj )         { assert( Gia_ObjId(p, pObj) < p->nTravIdsAlloc ); return (p->pTravIds[Gia_ObjId(p, pObj)] == p->nTravIds - 1);      }Gia_ObjIsTravIdPrevious613,41482
static inline void         Gia_ObjSetTravIdCurrentId( Gia_Man_t * p, int Id )                 { assert( Id < p->nTravIdsAlloc ); p->pTravIds[Id] = p->nTravIds;                     }Gia_ObjSetTravIdCurrentId614,41695
static inline void         Gia_ObjSetTravIdPreviousId( Gia_Man_t * p, int Id )                { assert( Id < p->nTravIdsAlloc ); p->pTravIds[Id] = p->nTravIds - 1;                 }Gia_ObjSetTravIdPreviousId615,41877
static inline int          Gia_ObjIsTravIdCurrentId( Gia_Man_t * p, int Id )                  { assert( Id < p->nTravIdsAlloc ); return (p->pTravIds[Id] == p->nTravIds);           }Gia_ObjIsTravIdCurrentId616,42059
static inline int          Gia_ObjIsTravIdPreviousId( Gia_Man_t * p, int Id )                 { assert( Id < p->nTravIdsAlloc ); return (p->pTravIds[Id] == p->nTravIds - 1);       }Gia_ObjIsTravIdPreviousId617,42241
static inline void         Gia_ManTimeClean( Gia_Man_t * p )                                  { int i; assert( p->vTiming != NULL ); Vec_FltFill(p->vTiming, 3*Gia_ManObjNum(p), 0); for ( i = 0; i < Gia_ManObjNum(p); i++ )  Vec_FltWriteEntry( p->vTiming, 3*i+1, (float)(ABC_INFINITY) ); }Gia_ManTimeClean619,42424
static inline void         Gia_ManTimeStart( Gia_Man_t * p )                                  { assert( p->vTiming == NULL ); p->vTiming = Vec_FltAlloc(0); Gia_ManTimeClean( p );  }Gia_ManTimeStart620,42712
static inline void         Gia_ManTimeStop( Gia_Man_t * p )                                   { assert( p->vTiming != NULL ); Vec_FltFreeP(&p->vTiming);                            }Gia_ManTimeStop621,42894
static inline float        Gia_ObjTimeArrival( Gia_Man_t * p, int Id )                        { return Vec_FltEntry(p->vTiming, 3*Id+0);                                            }Gia_ObjTimeArrival622,43076
static inline float        Gia_ObjTimeRequired( Gia_Man_t * p, int Id )                       { return Vec_FltEntry(p->vTiming, 3*Id+1);                                            }Gia_ObjTimeRequired623,43258
static inline float        Gia_ObjTimeSlack( Gia_Man_t * p, int Id )                          { return Vec_FltEntry(p->vTiming, 3*Id+2);                                            }Gia_ObjTimeSlack624,43440
static inline float        Gia_ObjTimeArrivalObj( Gia_Man_t * p, Gia_Obj_t * pObj )           { return Gia_ObjTimeArrival( p, Gia_ObjId(p, pObj) );                                 }Gia_ObjTimeArrivalObj625,43622
static inline float        Gia_ObjTimeRequiredObj( Gia_Man_t * p, Gia_Obj_t * pObj )          { return Gia_ObjTimeRequired( p, Gia_ObjId(p, pObj) );                                }Gia_ObjTimeRequiredObj626,43804
static inline float        Gia_ObjTimeSlackObj( Gia_Man_t * p, Gia_Obj_t * pObj )             { return Gia_ObjTimeSlack( p, Gia_ObjId(p, pObj) );                                   }Gia_ObjTimeSlackObj627,43986
static inline void         Gia_ObjSetTimeArrival( Gia_Man_t * p, int Id, float t )            { Vec_FltWriteEntry( p->vTiming, 3*Id+0, t );                                         }Gia_ObjSetTimeArrival628,44168
static inline void         Gia_ObjSetTimeRequired( Gia_Man_t * p, int Id, float t )           { Vec_FltWriteEntry( p->vTiming, 3*Id+1, t );                                         }Gia_ObjSetTimeRequired629,44350
static inline void         Gia_ObjSetTimeSlack( Gia_Man_t * p, int Id, float t )              { Vec_FltWriteEntry( p->vTiming, 3*Id+2, t );                                         }Gia_ObjSetTimeSlack630,44532
static inline void         Gia_ObjSetTimeArrivalObj( Gia_Man_t * p, Gia_Obj_t * pObj, float t )  { Gia_ObjSetTimeArrival( p, Gia_ObjId(p, pObj), t );                               }Gia_ObjSetTimeArrivalObj631,44714
static inline void         Gia_ObjSetTimeRequiredObj( Gia_Man_t * p, Gia_Obj_t * pObj, float t ) { Gia_ObjSetTimeRequired( p, Gia_ObjId(p, pObj), t );                              }Gia_ObjSetTimeRequiredObj632,44896
static inline void         Gia_ObjSetTimeSlackObj( Gia_Man_t * p, Gia_Obj_t * pObj, float t )    { Gia_ObjSetTimeSlack( p, Gia_ObjId(p, pObj), t );                                 }Gia_ObjSetTimeSlackObj633,45078
static inline int          Gia_ObjSimWords( Gia_Man_t * p )                    { return Vec_WrdSize( p->vSimsPi ) / Gia_ManPiNum( p );          }Gia_ObjSimWords635,45261
static inline word *       Gia_ObjSimPi( Gia_Man_t * p, int PiId )             { return Vec_WrdEntryP( p->vSimsPi, PiId * Gia_ObjSimWords(p) ); }Gia_ObjSimPi636,45407
static inline word *       Gia_ObjSim( Gia_Man_t * p, int Id )                 { return Vec_WrdEntryP( p->vSims, Id * Gia_ObjSimWords(p) );     }Gia_ObjSim637,45553
static inline word *       Gia_ObjSimObj( Gia_Man_t * p, Gia_Obj_t * pObj )    { return Gia_ObjSim( p, Gia_ObjId(p, pObj) );                    }Gia_ObjSimObj638,45699
static inline Gia_Obj_t * Gia_ManAppendObj( Gia_Man_t * p )  Gia_ManAppendObj642,45952
static inline int Gia_ManAppendCi( Gia_Man_t * p )  Gia_ManAppendCi665,46972
static inline int Gia_ManAppendAnd( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManAppendAnd678,47393
static inline int Gia_ManAppendXorReal( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManAppendXorReal722,49292
static inline int Gia_ManAppendMuxReal( Gia_Man_t * p, int iLitC, int iLit1, int iLit0 )  Gia_ManAppendMuxReal747,50375
static inline int Gia_ManAppendBuf( Gia_Man_t * p, int iLit )  Gia_ManAppendBuf777,51775
static inline int Gia_ManAppendCo( Gia_Man_t * p, int iLit0 )  Gia_ManAppendCo786,52143
static inline int Gia_ManAppendOr( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManAppendOr801,52738
static inline int Gia_ManAppendMux( Gia_Man_t * p, int iCtrl, int iData1, int iData0 )  Gia_ManAppendMux805,52899
static inline int Gia_ManAppendMaj( Gia_Man_t * p, int iData0, int iData1, int iData2 )  Gia_ManAppendMaj811,53210
static inline int Gia_ManAppendXor( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManAppendXor818,53521
static inline int Gia_ManAppendAnd2( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManAppendAnd2823,53670
static inline int Gia_ManAppendOr2( Gia_Man_t * p, int iLit0, int iLit1 )Gia_ManAppendOr2838,54084
static inline int Gia_ManAppendMux2( Gia_Man_t * p, int iCtrl, int iData1, int iData0 )  Gia_ManAppendMux2842,54247
static inline int Gia_ManAppendMaj2( Gia_Man_t * p, int iData0, int iData1, int iData2 )  Gia_ManAppendMaj2848,54562
static inline int Gia_ManAppendXor2( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManAppendXor2855,54878
static inline int Gia_ManAppendXorReal2( Gia_Man_t * p, int iLit0, int iLit1 )  Gia_ManAppendXorReal2860,55029
static inline void Gia_ManPatchCoDriver( Gia_Man_t * p, int iCoIndex, int iLit0 )  Gia_ManPatchCoDriver876,55480
#define GIA_ZER GIA_ZER884,55788
#define GIA_ONE GIA_ONE885,55806
#define GIA_UND GIA_UND886,55824
static inline int Gia_XsimNotCond( int Value, int fCompl )   Gia_XsimNotCond888,55843
static inline int Gia_XsimAndCond( int Value0, int fCompl0, int Value1, int fCompl1 )   Gia_XsimAndCond896,56043
static inline void Gia_ObjTerSimSetC( Gia_Obj_t * pObj ) { pObj->fMark0 = 0; pObj->fMark1 = 0;    }Gia_ObjTerSimSetC906,56327
static inline void Gia_ObjTerSimSet0( Gia_Obj_t * pObj ) { pObj->fMark0 = 1; pObj->fMark1 = 0;    }Gia_ObjTerSimSet0907,56427
static inline void Gia_ObjTerSimSet1( Gia_Obj_t * pObj ) { pObj->fMark0 = 0; pObj->fMark1 = 1;    }Gia_ObjTerSimSet1908,56527
static inline void Gia_ObjTerSimSetX( Gia_Obj_t * pObj ) { pObj->fMark0 = 1; pObj->fMark1 = 1;    }Gia_ObjTerSimSetX909,56627
static inline int  Gia_ObjTerSimGetC( Gia_Obj_t * pObj ) { return !pObj->fMark0 && !pObj->fMark1; }Gia_ObjTerSimGetC911,56728
static inline int  Gia_ObjTerSimGet0( Gia_Obj_t * pObj ) { return  pObj->fMark0 && !pObj->fMark1; }Gia_ObjTerSimGet0912,56828
static inline int  Gia_ObjTerSimGet1( Gia_Obj_t * pObj ) { return !pObj->fMark0 &&  pObj->fMark1; }Gia_ObjTerSimGet1913,56928
static inline int  Gia_ObjTerSimGetX( Gia_Obj_t * pObj ) { return  pObj->fMark0 &&  pObj->fMark1; }Gia_ObjTerSimGetX914,57028
static inline int  Gia_ObjTerSimGet0Fanin0( Gia_Obj_t * pObj ) { return (Gia_ObjTerSimGet1(Gia_ObjFanin0(pObj)) && Gia_ObjFaninC0(pObj)) || (Gia_ObjTerSimGet0(Gia_ObjFanin0(pObj)) && !Gia_ObjFaninC0(pObj)); }Gia_ObjTerSimGet0Fanin0916,57129
static inline int  Gia_ObjTerSimGet1Fanin0( Gia_Obj_t * pObj ) { return (Gia_ObjTerSimGet0(Gia_ObjFanin0(pObj)) && Gia_ObjFaninC0(pObj)) || (Gia_ObjTerSimGet1(Gia_ObjFanin0(pObj)) && !Gia_ObjFaninC0(pObj)); }Gia_ObjTerSimGet1Fanin0917,57338
static inline int  Gia_ObjTerSimGet0Fanin1( Gia_Obj_t * pObj ) { return (Gia_ObjTerSimGet1(Gia_ObjFanin1(pObj)) && Gia_ObjFaninC1(pObj)) || (Gia_ObjTerSimGet0(Gia_ObjFanin1(pObj)) && !Gia_ObjFaninC1(pObj)); }Gia_ObjTerSimGet0Fanin1919,57548
static inline int  Gia_ObjTerSimGet1Fanin1( Gia_Obj_t * pObj ) { return (Gia_ObjTerSimGet0(Gia_ObjFanin1(pObj)) && Gia_ObjFaninC1(pObj)) || (Gia_ObjTerSimGet1(Gia_ObjFanin1(pObj)) && !Gia_ObjFaninC1(pObj)); }Gia_ObjTerSimGet1Fanin1920,57757
static inline void Gia_ObjTerSimAnd( Gia_Obj_t * pObj )Gia_ObjTerSimAnd922,57967
static inline void Gia_ObjTerSimCo( Gia_Obj_t * pObj )Gia_ObjTerSimCo934,58443
static inline void Gia_ObjTerSimRo( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ObjTerSimRo945,58794
static inline void Gia_ObjTerSimPrint( Gia_Obj_t * pObj )Gia_ObjTerSimPrint954,59064
static inline int Gia_AigerReadInt( unsigned char * pPos )Gia_AigerReadInt964,59311
static inline void Gia_AigerWriteInt( unsigned char * pPos, int Value )Gia_AigerWriteInt971,59484
static inline unsigned Gia_AigerReadUnsigned( unsigned char ** ppPos )Gia_AigerReadUnsigned977,59644
static inline void Gia_AigerWriteUnsigned( Vec_Str_t * vStr, unsigned x )Gia_AigerWriteUnsigned985,59877
static inline void Gia_AigerWriteUnsignedFile( FILE * pFile, unsigned x )Gia_AigerWriteUnsignedFile997,60134
static inline int Gia_AigerWriteUnsignedBuffer( unsigned char * pBuffer, int Pos, unsigned x )Gia_AigerWriteUnsignedBuffer1009,60381
static inline Gia_Obj_t * Gia_ObjReprObj( Gia_Man_t * p, int Id )            { return p->pReprs[Id].iRepr == GIA_VOID ? NULL : Gia_ManObj( p, p->pReprs[Id].iRepr );                  }Gia_ObjReprObj1023,60668
static inline int         Gia_ObjRepr( Gia_Man_t * p, int Id )               { return p->pReprs[Id].iRepr;                                                }Gia_ObjRepr1024,60852
static inline void        Gia_ObjSetRepr( Gia_Man_t * p, int Id, int Num )   { assert( Num == GIA_VOID || Num < Id ); p->pReprs[Id].iRepr = Num;          }Gia_ObjSetRepr1025,61008
static inline void        Gia_ObjSetReprRev( Gia_Man_t * p, int Id, int Num ){ assert( Num == GIA_VOID || Num > Id ); p->pReprs[Id].iRepr = Num;          }Gia_ObjSetReprRev1026,61164
static inline void        Gia_ObjUnsetRepr( Gia_Man_t * p, int Id )          { p->pReprs[Id].iRepr = GIA_VOID;                                            }Gia_ObjUnsetRepr1027,61320
static inline int         Gia_ObjHasRepr( Gia_Man_t * p, int Id )            { return p->pReprs[Id].iRepr != GIA_VOID;                                    }Gia_ObjHasRepr1028,61476
static inline int         Gia_ObjReprSelf( Gia_Man_t * p, int Id )           { return Gia_ObjHasRepr(p, Id) ? Gia_ObjRepr(p, Id) : Id;                    }Gia_ObjReprSelf1029,61632
static inline int         Gia_ObjSibl( Gia_Man_t * p, int Id )               { return p->pSibls ? p->pSibls[Id] : 0;                                      }Gia_ObjSibl1030,61788
static inline Gia_Obj_t * Gia_ObjSiblObj( Gia_Man_t * p, int Id )            { return (p->pSibls && p->pSibls[Id]) ? Gia_ManObj(p, p->pSibls[Id]) : NULL; }Gia_ObjSiblObj1031,61944
static inline int         Gia_ObjProved( Gia_Man_t * p, int Id )             { return p->pReprs[Id].fProved;       }Gia_ObjProved1033,62101
static inline void        Gia_ObjSetProved( Gia_Man_t * p, int Id )          { p->pReprs[Id].fProved = 1;          }Gia_ObjSetProved1034,62218
static inline void        Gia_ObjUnsetProved( Gia_Man_t * p, int Id )        { p->pReprs[Id].fProved = 0;          }Gia_ObjUnsetProved1035,62335
static inline int         Gia_ObjFailed( Gia_Man_t * p, int Id )             { return p->pReprs[Id].fFailed;       }Gia_ObjFailed1037,62453
static inline void        Gia_ObjSetFailed( Gia_Man_t * p, int Id )          { p->pReprs[Id].fFailed = 1;          }Gia_ObjSetFailed1038,62570
static inline int         Gia_ObjColor( Gia_Man_t * p, int Id, int c )       { return c? p->pReprs[Id].fColorB : p->pReprs[Id].fColorA;          }Gia_ObjColor1040,62688
static inline int         Gia_ObjColors( Gia_Man_t * p, int Id )             { return p->pReprs[Id].fColorB * 2 + p->pReprs[Id].fColorA;         }Gia_ObjColors1041,62835
static inline void        Gia_ObjSetColor( Gia_Man_t * p, int Id, int c )    { if (c) p->pReprs[Id].fColorB = 1; else p->pReprs[Id].fColorA = 1; }Gia_ObjSetColor1042,62982
static inline void        Gia_ObjSetColors( Gia_Man_t * p, int Id )          { p->pReprs[Id].fColorB = p->pReprs[Id].fColorA = 1;                }Gia_ObjSetColors1043,63129
static inline int         Gia_ObjVisitColor( Gia_Man_t * p, int Id, int c )  { int x; if (c) { x = p->pReprs[Id].fColorB; p->pReprs[Id].fColorB = 1; } else { x = p->pReprs[Id].fColorA; p->pReprs[Id].fColorA = 1; } return x; }Gia_ObjVisitColor1044,63276
static inline int         Gia_ObjDiffColors( Gia_Man_t * p, int i, int j )   { return (p->pReprs[i].fColorA ^ p->pReprs[j].fColorA) && (p->pReprs[i].fColorB ^ p->pReprs[j].fColorB); }Gia_ObjDiffColors1045,63502
static inline int         Gia_ObjDiffColors2( Gia_Man_t * p, int i, int j )  { return (p->pReprs[i].fColorA ^ p->pReprs[j].fColorA) || (p->pReprs[i].fColorB ^ p->pReprs[j].fColorB); }Gia_ObjDiffColors21046,63686
static inline Gia_Obj_t * Gia_ObjNextObj( Gia_Man_t * p, int Id )            { return p->pNexts[Id] == 0 ? NULL : Gia_ManObj( p, p->pNexts[Id] );}Gia_ObjNextObj1048,63871
static inline int         Gia_ObjNext( Gia_Man_t * p, int Id )               { return p->pNexts[Id];                                             }Gia_ObjNext1049,64018
static inline void        Gia_ObjSetNext( Gia_Man_t * p, int Id, int Num )   { p->pNexts[Id] = Num;                                              }Gia_ObjSetNext1050,64165
static inline int         Gia_ObjIsConst( Gia_Man_t * p, int Id )            { return Gia_ObjRepr(p, Id) == 0;                                   }Gia_ObjIsConst1052,64313
static inline int         Gia_ObjIsHead( Gia_Man_t * p, int Id )             { return Gia_ObjRepr(p, Id) == GIA_VOID && Gia_ObjNext(p, Id) > 0;  }Gia_ObjIsHead1053,64460
static inline int         Gia_ObjIsNone( Gia_Man_t * p, int Id )             { return Gia_ObjRepr(p, Id) == GIA_VOID && Gia_ObjNext(p, Id) <= 0; }Gia_ObjIsNone1054,64607
static inline int         Gia_ObjIsTail( Gia_Man_t * p, int Id )             { return (Gia_ObjRepr(p, Id) > 0 && Gia_ObjRepr(p, Id) != GIA_VOID) && Gia_ObjNext(p, Id) <= 0;                  }Gia_ObjIsTail1055,64754
static inline int         Gia_ObjIsClass( Gia_Man_t * p, int Id )            { return (Gia_ObjRepr(p, Id) > 0 && Gia_ObjRepr(p, Id) != GIA_VOID) || Gia_ObjNext(p, Id) > 0;                   }Gia_ObjIsClass1056,64946
static inline int         Gia_ObjHasSameRepr( Gia_Man_t * p, int i, int k )  { assert( k ); return i? (Gia_ObjRepr(p, i) == Gia_ObjRepr(p, k) && Gia_ObjRepr(p, i) != GIA_VOID) : Gia_ObjRepr(p, k) == 0;  }Gia_ObjHasSameRepr1057,65138
static inline int         Gia_ObjIsFailedPair( Gia_Man_t * p, int i, int k ) { assert( k ); return i? (Gia_ObjFailed(p, i) || Gia_ObjFailed(p, k)) : Gia_ObjFailed(p, k);                     }Gia_ObjIsFailedPair1058,65343
static inline int         Gia_ClassIsPair( Gia_Man_t * p, int i )            { assert( Gia_ObjIsHead(p, i) ); assert( Gia_ObjNext(p, i) ); return Gia_ObjNext(p, Gia_ObjNext(p, i)) <= 0;     }Gia_ClassIsPair1059,65535
static inline void        Gia_ClassUndoPair( Gia_Man_t * p, int i )          { assert( Gia_ClassIsPair(p,i) ); Gia_ObjSetRepr(p, Gia_ObjNext(p, i), GIA_VOID); Gia_ObjSetNext(p, i, 0);       }Gia_ClassUndoPair1060,65727
#define Gia_ManForEachConst(Gia_ManForEachConst1062,65920
#define Gia_ManForEachClass(Gia_ManForEachClass1064,66067
#define Gia_ManForEachClass0(Gia_ManForEachClass01066,66213
#define Gia_ManForEachClassReverse(Gia_ManForEachClassReverse1068,66360
#define Gia_ClassForEachObj(Gia_ClassForEachObj1070,66510
#define Gia_ClassForEachObj1(Gia_ClassForEachObj11072,66664
static inline int         Gia_ObjFoffsetId( Gia_Man_t * p, int Id )                { return Vec_IntEntry( p->vFanout, Id );                                 }Gia_ObjFoffsetId1076,66836
static inline int         Gia_ObjFoffset( Gia_Man_t * p, Gia_Obj_t * pObj )        { return Gia_ObjFoffsetId( p, Gia_ObjId(p, pObj) );                      }Gia_ObjFoffset1077,66994
static inline int         Gia_ObjFanoutNumId( Gia_Man_t * p, int Id )              { return Vec_IntEntry( p->vFanoutNums, Id );                             }Gia_ObjFanoutNumId1078,67152
static inline int         Gia_ObjFanoutNum( Gia_Man_t * p, Gia_Obj_t * pObj )      { return Gia_ObjFanoutNumId( p, Gia_ObjId(p, pObj) );                    }Gia_ObjFanoutNum1079,67310
static inline int         Gia_ObjFanoutId( Gia_Man_t * p, int Id, int i )          { return Vec_IntEntry( p->vFanout, Gia_ObjFoffsetId(p, Id) + i );        }Gia_ObjFanoutId1080,67468
static inline Gia_Obj_t * Gia_ObjFanout0( Gia_Man_t * p, Gia_Obj_t * pObj )        { return Gia_ManObj( p, Gia_ObjFanoutId(p, Gia_ObjId(p, pObj), 0) );     }Gia_ObjFanout01081,67626
static inline Gia_Obj_t * Gia_ObjFanout( Gia_Man_t * p, Gia_Obj_t * pObj, int i )  { return Gia_ManObj( p, Gia_ObjFanoutId(p, Gia_ObjId(p, pObj), i) );     }Gia_ObjFanout1082,67784
static inline void        Gia_ObjSetFanout( Gia_Man_t * p, Gia_Obj_t * pObj, int i, Gia_Obj_t * pFan )   { Vec_IntWriteEntry( p->vFanout, Gia_ObjFoffset(p, pObj) + i, Gia_ObjId(p, pFan) ); }Gia_ObjSetFanout1083,67942
static inline void        Gia_ObjSetFanoutInt( Gia_Man_t * p, Gia_Obj_t * pObj, int i, int x )           { Vec_IntWriteEntry( p->vFanout, Gia_ObjFoffset(p, pObj) + i, x );                  }Gia_ObjSetFanoutInt1084,68133
#define Gia_ObjForEachFanoutStatic(Gia_ObjForEachFanoutStatic1086,68325
#define Gia_ObjForEachFanoutStaticId(Gia_ObjForEachFanoutStaticId1088,68496
static inline int         Gia_ManHasMapping( Gia_Man_t * p )                { return p->vMapping != NULL;                                                   }Gia_ManHasMapping1091,68664
static inline int         Gia_ObjIsLut( Gia_Man_t * p, int Id )             { return Vec_IntEntry(p->vMapping, Id) != 0;                                    }Gia_ObjIsLut1092,68822
static inline int         Gia_ObjLutSize( Gia_Man_t * p, int Id )           { return Vec_IntEntry(p->vMapping, Vec_IntEntry(p->vMapping, Id));              }Gia_ObjLutSize1093,68980
static inline int *       Gia_ObjLutFanins( Gia_Man_t * p, int Id )         { return Vec_IntEntryP(p->vMapping, Vec_IntEntry(p->vMapping, Id)) + 1;         }Gia_ObjLutFanins1094,69138
static inline int         Gia_ObjLutFanin( Gia_Man_t * p, int Id, int i )   { return Gia_ObjLutFanins(p, Id)[i];                                            }Gia_ObjLutFanin1095,69296
static inline int         Gia_ObjLutMuxId( Gia_Man_t * p, int Id )          { return Gia_ObjLutFanins(p, Id)[Gia_ObjLutSize(p, Id)];                        }Gia_ObjLutMuxId1096,69454
static inline int         Gia_ObjLutIsMux( Gia_Man_t * p, int Id )          { return (int)(Gia_ObjLutMuxId(p, Id) < 0);                                     }Gia_ObjLutIsMux1097,69612
static inline int         Gia_ManHasMapping2( Gia_Man_t * p )               { return p->vMapping2 != NULL;                                                  }Gia_ManHasMapping21099,69771
static inline int         Gia_ObjIsLut2( Gia_Man_t * p, int Id )            { return Vec_IntSize(Vec_WecEntry(p->vMapping2, Id)) != 0;                      }Gia_ObjIsLut21100,69929
static inline int         Gia_ObjLutSize2( Gia_Man_t * p, int Id )          { return Vec_IntSize(Vec_WecEntry(p->vMapping2, Id));                           }Gia_ObjLutSize21101,70087
static inline Vec_Int_t * Gia_ObjLutFanins2( Gia_Man_t * p, int Id )        { return Vec_WecEntry(p->vMapping2, Id);                                        }Gia_ObjLutFanins21102,70245
static inline int         Gia_ObjLutFanin2( Gia_Man_t * p, int Id, int i )  { return Vec_IntEntry(Vec_WecEntry(p->vMapping2, Id), i);                       }Gia_ObjLutFanin21103,70403
static inline int         Gia_ObjLutFanoutNum2( Gia_Man_t * p, int Id )     { return Vec_IntSize(Vec_WecEntry(p->vFanouts2, Id));                           }Gia_ObjLutFanoutNum21104,70561
static inline int         Gia_ObjLutFanout2( Gia_Man_t * p, int Id, int i ) { return Vec_IntEntry(Vec_WecEntry(p->vFanouts2, Id), i);                       }Gia_ObjLutFanout21105,70719
static inline int         Gia_ManHasCellMapping( Gia_Man_t * p )            { return p->vCellMapping != NULL;                                               }Gia_ManHasCellMapping1107,70878
static inline int         Gia_ObjIsCell( Gia_Man_t * p, int iLit )          { return Vec_IntEntry(p->vCellMapping, iLit) != 0;                              }Gia_ObjIsCell1108,71036
static inline int         Gia_ObjIsCellInv( Gia_Man_t * p, int iLit )       { return Vec_IntEntry(p->vCellMapping, iLit) == -1;                             }Gia_ObjIsCellInv1109,71194
static inline int         Gia_ObjIsCellBuf( Gia_Man_t * p, int iLit )       { return Vec_IntEntry(p->vCellMapping, iLit) == -2;                             }Gia_ObjIsCellBuf1110,71352
static inline int         Gia_ObjCellSize( Gia_Man_t * p, int iLit )        { return Vec_IntEntry(p->vCellMapping, Vec_IntEntry(p->vCellMapping, iLit));    }Gia_ObjCellSize1111,71510
static inline int *       Gia_ObjCellFanins( Gia_Man_t * p, int iLit )      { return Vec_IntEntryP(p->vCellMapping, Vec_IntEntry(p->vCellMapping, iLit))+1; }Gia_ObjCellFanins1112,71668
static inline int         Gia_ObjCellFanin( Gia_Man_t * p, int iLit, int i ){ return Gia_ObjCellFanins(p, iLit)[i];                                         }Gia_ObjCellFanin1113,71826
static inline int         Gia_ObjCellId( Gia_Man_t * p, int iLit )          { return Gia_ObjCellFanins(p, iLit)[Gia_ObjCellSize(p, iLit)];                  }Gia_ObjCellId1114,71984
#define Gia_ManForEachLut(Gia_ManForEachLut1116,72143
#define Gia_ManForEachLutReverse(Gia_ManForEachLutReverse1118,72297
#define Gia_LutForEachFanin(Gia_LutForEachFanin1120,72455
#define Gia_LutForEachFaninObj(Gia_LutForEachFaninObj1122,72618
#define Gia_ManForEachLut2(Gia_ManForEachLut21125,72799
#define Gia_ManForEachLut2Reverse(Gia_ManForEachLut2Reverse1127,72954
#define Gia_ManForEachLut2Vec(Gia_ManForEachLut2Vec1129,73113
#define Gia_ManForEachLut2VecReverse(Gia_ManForEachLut2VecReverse1131,73304
#define Gia_LutForEachFanin2(Gia_LutForEachFanin21133,73498
#define Gia_LutForEachFanout2(Gia_LutForEachFanout21135,73661
#define Gia_ManForEachCell(Gia_ManForEachCell1138,73831
#define Gia_CellForEachFanin(Gia_CellForEachFanin1140,73988
#define Gia_ManForEachObj(Gia_ManForEachObj1147,74377
#define Gia_ManForEachObj1(Gia_ManForEachObj11149,74521
#define Gia_ManForEachObjVec(Gia_ManForEachObjVec1151,74665
#define Gia_ManForEachObjVecReverse(Gia_ManForEachObjVecReverse1153,74837
#define Gia_ManForEachObjVecLit(Gia_ManForEachObjVecLit1155,75021
#define Gia_ManForEachObjReverse(Gia_ManForEachObjReverse1157,75263
#define Gia_ManForEachObjReverse1(Gia_ManForEachObjReverse11159,75412
#define Gia_ManForEachBuf(Gia_ManForEachBuf1161,75560
#define Gia_ManForEachBufId(Gia_ManForEachBufId1163,75774
#define Gia_ManForEachAnd(Gia_ManForEachAnd1165,75970
#define Gia_ManForEachAndId(Gia_ManForEachAndId1167,76154
#define Gia_ManForEachMuxId(Gia_ManForEachMuxId1169,76350
#define Gia_ManForEachCand(Gia_ManForEachCand1171,76536
#define Gia_ManForEachAndReverse(Gia_ManForEachAndReverse1173,76721
#define Gia_ManForEachAndReverseId(Gia_ManForEachAndReverseId1175,76905
#define Gia_ManForEachMux(Gia_ManForEachMux1177,77101
#define Gia_ManForEachCi(Gia_ManForEachCi1179,77287
#define Gia_ManForEachCiId(Gia_ManForEachCiId1181,77442
#define Gia_ManForEachCiVec(Gia_ManForEachCiVec1183,77609
#define Gia_ManForEachCiReverse(Gia_ManForEachCiReverse1185,77780
#define Gia_ManForEachCo(Gia_ManForEachCo1187,77940
#define Gia_ManForEachCoVec(Gia_ManForEachCoVec1189,78095
#define Gia_ManForEachCoId(Gia_ManForEachCoId1191,78266
#define Gia_ManForEachCoReverse(Gia_ManForEachCoReverse1193,78433
#define Gia_ManForEachCoDriver(Gia_ManForEachCoDriver1195,78593
#define Gia_ManForEachCoDriverId(Gia_ManForEachCoDriverId1197,78763
#define Gia_ManForEachPi(Gia_ManForEachPi1199,78948
#define Gia_ManForEachPo(Gia_ManForEachPo1201,79098
#define Gia_ManForEachRo(Gia_ManForEachRo1203,79248
#define Gia_ManForEachRi(Gia_ManForEachRi1205,79415
#define Gia_ManForEachRiRo(Gia_ManForEachRiRo1207,79582
typedef struct Cbs_Man_t_  Cbs_Man_t;Cbs_Man_t1244,83032
typedef struct Gia_ManMin_t_ Gia_ManMin_t;Gia_ManMin_t1575,110768
typedef struct Gia_Man2Min_t_ Gia_Man2Min_t;Gia_Man2Min_t1579,111028
typedef struct Tas_Man_t_  Tas_Man_t;Tas_Man_t1716,121945

src/aig/gia/giaEra.c,3128
typedef struct Gia_ObjEra_t_ Gia_ObjEra_t;Gia_ObjEra_t32,836
struct Gia_ObjEra_t_Gia_ObjEra_t_33,879
    int            Num;          // ID of this stateNum35,902
    int            Cond;         // input conditionCond36,955
    int            iPrev;        // previous stateiPrev37,1007
    int            iNext;        // next state in the hash tableiNext38,1058
    unsigned       pData[0];     // state bitspData39,1123
typedef struct Gia_ManEra_t_ Gia_ManEra_t;Gia_ManEra_t43,1205
struct Gia_ManEra_t_Gia_ManEra_t_44,1248
    Gia_Man_t *    pAig;         // user's AIG managerpAig46,1271
    int            nWordsSim;       // 2^(PInum)nWordsSim47,1326
    int            nWordsDat;   // Abc_BitWordNumnWordsDat48,1375
    unsigned *     pDataSim;     // simulation datapDataSim49,1425
    Mem_Fixed_t *  pMemory;      // memory managerpMemory50,1477
    Vec_Ptr_t *    vStates;      // reached statesvStates51,1528
    Gia_ObjEra_t * pStateNew;    // temporary statepStateNew52,1579
    int            iCurState;    // the current stateiCurState53,1631
    Vec_Int_t *    vBugTrace;    // the sequence of transitionsvBugTrace54,1685
    Vec_Int_t *    vStgDump;     // STG written into a filevStgDump55,1749
    int            nBins;         nBins57,1838
    unsigned *     pBins;pBins58,1873
static inline unsigned *     Gia_ManEraData( Gia_ManEra_t * p, int i )    { return p->pDataSim + i * p->nWordsSim;  }Gia_ManEraData61,1903
static inline Gia_ObjEra_t * Gia_ManEraState( Gia_ManEra_t * p, int i )   { return (Gia_ObjEra_t *)Vec_PtrEntry(p->vStates, i);  }Gia_ManEraState62,2021
Gia_ManEra_t * Gia_ManEraCreate( Gia_Man_t * pAig )Gia_ManEraCreate79,2636
void Gia_ManEraFree( Gia_ManEra_t * p )Gia_ManEraFree121,4102
Gia_ObjEra_t * Gia_ManEraCreateState( Gia_ManEra_t * p )Gia_ManEraCreateState143,4625
int Gia_ManEraStateHash( unsigned * pState, int nWordsSim, int nTableSize )Gia_ManEraStateHash165,5185
static inline unsigned * Gia_ManEraHashFind( Gia_ManEra_t * p, Gia_ObjEra_t * pState, int * pStateNum )Gia_ManEraHashFind201,6656
void Gia_ManEraHashResize( Gia_ManEra_t * p )Gia_ManEraHashResize229,7621
void Gia_ManInsertState( Gia_ManEra_t * p, Gia_ObjEra_t * pState )Gia_ManInsertState270,8904
static inline int Gia_ManOutputAsserted( Gia_ManEra_t * p, Gia_Obj_t * pObj )Gia_ManOutputAsserted296,9626
static inline void Gia_ManSimulateCo( Gia_ManEra_t * p, Gia_Obj_t * pObj )Gia_ManSimulateCo317,10165
static inline void Gia_ManSimulateNode( Gia_ManEra_t * p, Gia_Obj_t * pObj )Gia_ManSimulateNode342,10857
void Gia_ManPerformOneIter( Gia_ManEra_t * p )Gia_ManPerformOneIter380,12045
Vec_Int_t * Gia_ManCollectBugTrace( Gia_ManEra_t * p, Gia_ObjEra_t * pState, int iCond )Gia_ManCollectBugTrace404,12625
int Gia_ManCountDepth( Gia_ManEra_t * p )Gia_ManCountDepth426,13291
int Gia_ManAnalyzeResult( Gia_ManEra_t * p, Gia_ObjEra_t * pState, int fMiter, int fStgDump )Gia_ManAnalyzeResult449,13983
int Gia_ManCollectReachable( Gia_Man_t * pAig, int nStatesMax, int fMiter, int fDumpFile, int fVerbose )Gia_ManCollectReachable527,16701

src/aig/gia/giaSupp.c,4251
struct Gia_ManMin_t_ Gia_ManMin_t_36,890
    Gia_Man_t *     pGia;pGia39,941
    int             iLits[2];iLits40,967
    Vec_Int_t *     vCis[2];vCis42,1027
    Vec_Int_t *     vObjs[2];vObjs43,1056
    Vec_Int_t *     vCleared;  vCleared44,1086
    DdManager *     dd;dd46,1148
    Vec_Ptr_t *     vFuncs;vFuncs47,1172
    Vec_Int_t *     vSupp;vSupp48,1200
Gia_ManMin_t * Gia_ManSuppStart( Gia_Man_t * pGia )Gia_ManSuppStart66,1731
void Gia_ManSuppStop( Gia_ManMin_t * p )Gia_ManSuppStop83,2328
int Gia_ManFindRemoved( Gia_ManMin_t * p ) Gia_ManFindRemoved108,2989
int Gia_ManRebuildOne( Gia_ManMin_t * p, int n ) Gia_ManRebuildOne172,5784
static inline int Gia_ManGatherSupp_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vCis, Vec_Int_t * vObjs )Gia_ManGatherSupp_rec217,7471
int Gia_ManGatherSupp( Gia_ManMin_t * p )Gia_ManGatherSupp238,8169
int Gia_ManSupportAnd( Gia_ManMin_t * p, int iLit0, int iLit1 )Gia_ManSupportAnd264,8881
Gia_Man_t * Gia_ManSupportAndTest( Gia_Man_t * pGia )Gia_ManSupportAndTest297,9805
struct Gia_Man2Min_t_ Gia_Man2Min_t_336,11007
    Gia_Man_t *     pGia;pGia339,11059
    int             iLits[2];iLits340,11085
    Vec_Int_t *     vCis[2];vCis342,11145
    Vec_Int_t *     vObjs[2];vObjs343,11174
    satoko_t *      pSat;           // SAT solverpSat345,11223
    Vec_Wrd_t *     vSims;          // simulationvSims346,11273
    Vec_Ptr_t *     vFrontier;      // CNF constructionvFrontier347,11323
    Vec_Ptr_t *     vFanins;        // CNF constructionvFanins348,11379
    Vec_Int_t *     vSatVars;       // nodesvSatVars349,11435
    int             nCisOld;        // previous number of CIsnCisOld350,11480
    int             iPattern;       // the next pattern to writeiPattern351,11542
    int             nSatSat;nSatSat352,11607
    int             nSatUnsat;nSatUnsat353,11636
    int             nCalls;nCalls354,11667
    int             nSims;nSims355,11695
    int             nSupps;nSupps356,11722
static inline int    Gia_Min2ObjSatId( Gia_Man_t * p, Gia_Obj_t * pObj )             { return Gia_ObjCopyArray(p, Gia_ObjId(p, pObj));                                                        }Gia_Min2ObjSatId359,11754
static inline int    Gia_Min2ObjSetSatId( Gia_Man_t * p, Gia_Obj_t * pObj, int Num ) { assert(Gia_Min2ObjSatId(p, pObj) == -1); Gia_ObjSetCopyArray(p, Gia_ObjId(p, pObj), Num); return Num;  }Gia_Min2ObjSetSatId360,11946
static inline void   Gia_Min2ObjCleanSatId( Gia_Man_t * p, Gia_Obj_t * pObj )        { assert(Gia_Min2ObjSatId(p, pObj) != -1); Gia_ObjSetCopyArray(p, Gia_ObjId(p, pObj), -1);               }Gia_Min2ObjCleanSatId361,12138
Gia_Man2Min_t * Gia_Man2SuppStart( Gia_Man_t * pGia )Gia_Man2SuppStart375,12612
void Gia_Man2SuppStop( Gia_Man2Min_t * p )Gia_Man2SuppStop394,13248
void Gia_Min2AddClausesMux( Gia_Man_t * p, Gia_Obj_t * pNode, satoko_t * pSat )Gia_Min2AddClausesMux422,14072
void Gia_Min2AddClausesSuper( Gia_Man_t * p, Gia_Obj_t * pNode, Vec_Ptr_t * vSuper, satoko_t * pSat )Gia_Min2AddClausesSuper530,17948
void Gia_Min2CollectSuper_rec( Gia_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Gia_Min2CollectSuper_rec584,19830
void Gia_Min2CollectSuper( Gia_Obj_t * pObj, int fUseMuxes, Vec_Ptr_t * vSuper )Gia_Min2CollectSuper598,20396
void Gia_Min2ObjAddToFrontier( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Ptr_t * vFrontier, satoko_t * pSat, Vec_Int_t * vSatVars )Gia_Min2ObjAddToFrontier605,20642
int Gia_Min2ObjGetCnfVar( Gia_Man2Min_t * p, int iObj )Gia_Min2ObjGetCnfVar617,21140
int Gia_Min2ManSimulate( Gia_Man2Min_t * p )Gia_Min2ManSimulate671,23323
static inline void Gia_Min2SimSetInputBit( Gia_Man2Min_t * p, int iObj, int Bit, int iPattern )Gia_Min2SimSetInputBit710,24802
int Gia_Min2ManSolve( Gia_Man2Min_t * p )Gia_Min2ManSolve717,25113
static inline int Gia_Min2ManGatherSupp_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vCis, Vec_Int_t * vObjs )Gia_Min2ManGatherSupp_rec767,27122
int Gia_Min2ManGatherSupp( Gia_Man2Min_t * p )Gia_Min2ManGatherSupp788,27832
int Gia_Man2SupportAnd( Gia_Man2Min_t * p, int iLit0, int iLit1 )Gia_Man2SupportAnd815,28570
Gia_Man_t * Gia_Man2SupportAndTest( Gia_Man_t * pGia )Gia_Man2SupportAndTest840,29352

src/aig/gia/giaHcd.c,2793
typedef struct Hcd_Pars_t_ Hcd_Pars_t;Hcd_Pars_t34,870
struct Hcd_Pars_t_Hcd_Pars_t_35,909
    int              nWords;        // the number of simulation wordsnWords37,930
    int              nBTLimit;      // conflict limit at a nodenBTLimit38,1000
    int              nSatVarMax;    // the max number of SAT variablesnSatVarMax39,1064
    int              fSynthesis;    // set to 1 to perform synthesisfSynthesis40,1135
    int              fPolarFlip;    // uses polarity adjustmentfPolarFlip41,1204
    int              fSimulateTfo;  // uses simulation of TFO classesfSimulateTfo42,1268
    int              fPower;        // uses power-aware rewritingfPower43,1338
    int              fUseGia;       // uses GIA package fUseGia44,1404
    int              fUseCSat;      // uses circuit-based solverfUseCSat45,1461
    int              fVerbose;      // verbose statsfVerbose46,1526
    clock_t          timeSynth;     // synthesis runtimetimeSynth47,1579
    int              nNodesAhead;   // the lookahead in terms of nodesnNodesAhead48,1636
    int              nCallsRecycle; // calls to perform before recycling SAT solvernCallsRecycle49,1707
void Hcd_ManSetDefaultParams( Hcd_Pars_t * p )Hcd_ManSetDefaultParams69,2393
Aig_Man_t * Hcd_Compress( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fPower, int fVerbose )Hcd_Compress96,3362
Aig_Man_t * Hcd_Compress2( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fFanout, int fPower, int fVerbose )Hcd_Compress2161,5059
Vec_Ptr_t * Hcd_ChoiceSynthesis( Aig_Man_t * pAig, int fBalance, int fUpdateLevel, int fPower, int fVerbose )Hcd_ChoiceSynthesis259,7711
int Hcd_ManChoiceMiter_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Hcd_ManChoiceMiter_rec296,8725
Gia_Man_t * Hcd_ManChoiceMiter( Vec_Ptr_t * vGias )Hcd_ManChoiceMiter318,9481
int Hcd_ObjCheckTfi_rec( Gia_Man_t * p, Gia_Obj_t * pOld, Gia_Obj_t * pNode, Vec_Ptr_t * vVisited )Hcd_ObjCheckTfi_rec369,11218
int Hcd_ObjCheckTfi( Gia_Man_t * p, Gia_Obj_t * pOld, Gia_Obj_t * pNode )Hcd_ObjCheckTfi405,12323
void Hcd_ManAddNextEntry_rec( Gia_Man_t * p, Gia_Obj_t * pOld, Gia_Obj_t * pNode )Hcd_ManAddNextEntry_rec431,13059
void Hcd_ManEquivToChoices_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Hcd_ManEquivToChoices_rec452,13646
void Hcd_ManRemoveBadChoices( Gia_Man_t * p )Hcd_ManRemoveBadChoices511,16171
Gia_Man_t * Hcd_ManEquivToChoices( Gia_Man_t * p, int nSnapshots )Hcd_ManEquivToChoices559,17494
Aig_Man_t * Hcd_ComputeChoices( Aig_Man_t * pAig, int nBTLimit, int fSynthesis, int fUseMiniSat, int fVerbose )Hcd_ComputeChoices610,19263
void Hcd_ComputeChoicesTest( Gia_Man_t * pGia, int nBTLimit, int fSynthesis, int fUseMiniSat, int fVerbose )Hcd_ComputeChoicesTest674,21229

src/aig/gia/giaDeep.c,289
Gia_Man_t * Gia_ManDeepSynOne( int nNoImpr, int TimeOut, int nAnds, int Seed, int fUseTwo, int fVerbose )Gia_ManDeepSynOne46,1282
Gia_Man_t * Gia_ManDeepSyn( Gia_Man_t * pGia, int nIters, int nNoImpr, int TimeOut, int nAnds, int Seed, int fUseTwo, int fVerbose )Gia_ManDeepSyn127,4678

src/aig/gia/giaSim2.c,2539
typedef struct Gia_Sim2_t_ Gia_Sim2_t;Gia_Sim2_t30,772
struct Gia_Sim2_t_Gia_Sim2_t_31,811
    Gia_Man_t *    pAig;pAig33,832
    Gia_ParSim_t * pPars; pPars34,857
    int            nWords;nWords35,884
    unsigned *     pDataSim; pDataSim36,911
    Vec_Int_t *    vClassOld;vClassOld37,941
    Vec_Int_t *    vClassNew;vClassNew38,971
static inline unsigned * Gia_Sim2Data( Gia_Sim2_t * p, int i )    { return p->pDataSim + i * p->nWords;    }Gia_Sim2Data41,1005
void Gia_Sim2Delete( Gia_Sim2_t * p )Gia_Sim2Delete60,1626
Gia_Sim2_t * Gia_Sim2Create( Gia_Man_t * pAig, Gia_ParSim_t * pPars )Gia_Sim2Create79,2053
static inline void Gia_Sim2InfoRandom( Gia_Sim2_t * p, unsigned * pInfo )Gia_Sim2InfoRandom119,3258
static inline void Gia_Sim2InfoZero( Gia_Sim2_t * p, unsigned * pInfo )Gia_Sim2InfoZero137,3662
static inline void Gia_Sim2InfoOne( Gia_Sim2_t * p, unsigned * pInfo )Gia_Sim2InfoOne155,4047
static inline void Gia_Sim2InfoCopy( Gia_Sim2_t * p, unsigned * pInfo, unsigned * pInfo0 )Gia_Sim2InfoCopy173,4432
static inline void Gia_Sim2SimulateCo( Gia_Sim2_t * p, Gia_Obj_t * pObj )Gia_Sim2SimulateCo191,4844
static inline void Gia_Sim2SimulateNode( Gia_Sim2_t * p, Gia_Obj_t * pObj )Gia_Sim2SimulateNode215,5518
static inline void Gia_Sim2InfoTransfer( Gia_Sim2_t * p )Gia_Sim2InfoTransfer252,6648
static inline void Gia_Sim2SimulateRound( Gia_Sim2_t * p )Gia_Sim2SimulateRound276,7251
int Gia_Sim2CompareEqual( unsigned * p0, unsigned * p1, int nWords, int fCompl )Gia_Sim2CompareEqual307,8089
int Gia_Sim2CompareZero( unsigned * p0, int nWords, int fCompl )Gia_Sim2CompareZero337,8744
void Gia_Sim2ClassCreate( Gia_Man_t * p, Vec_Int_t * vClass )Gia_Sim2ClassCreate367,9364
int Gia_Sim2ClassRefineOne( Gia_Sim2_t * p, int i )Gia_Sim2ClassRefineOne401,10198
int Gia_Sim2HashKey( unsigned * pSim, int nWords, int nTableSize )Gia_Sim2HashKey440,11427
void Gia_Sim2ProcessRefined( Gia_Sim2_t * p, Vec_Int_t * vRefined )Gia_Sim2ProcessRefined468,12218
void Gia_Sim2InfoRefineEquivs( Gia_Sim2_t * p )Gia_Sim2InfoRefineEquivs516,13687
static inline int Gia_Sim2InfoIsZero( Gia_Sim2_t * p, unsigned * pInfo )Gia_Sim2InfoIsZero556,14823
static inline int Gia_Sim2CheckPos( Gia_Sim2_t * p, int * piPo, int * piPat )Gia_Sim2CheckPos576,15334
Abc_Cex_t * Gia_Sim2GenerateCounter( Gia_Man_t * pAig, int iFrame, int iOut, int nWords, int iPat )Gia_Sim2GenerateCounter604,15981
int Gia_ManSimSimulateEquiv( Gia_Man_t * pAig, Gia_ParSim_t * pPars )Gia_ManSimSimulateEquiv638,17030

src/aig/gia/giaShow.c,1363
#define NODE_MAX NODE_MAX33,857
void Gia_ShowPath( Gia_Man_t * p, char * pFileName )Gia_ShowPath51,1451
void Gia_WriteDotAigSimple( Gia_Man_t * p, char * pFileName, Vec_Int_t * vBold )Gia_WriteDotAigSimple339,11447
int Gia_ShowAddOut( Vec_Int_t * vAdds, Vec_Int_t * vMapAdds, int Node )Gia_ShowAddOut668,23733
void Gia_WriteDotAig( Gia_Man_t * p, char * pFileName, Vec_Int_t * vBold, Vec_Int_t * vAdds, Vec_Int_t * vXors, Vec_Int_t * vMapAdds, Vec_Int_t * vMapXors, Vec_Int_t * vOrder )Gia_WriteDotAig675,23942
Vec_Int_t * Gia_ShowMapAdds( Gia_Man_t * p, Vec_Int_t * vAdds, int fFadds, Vec_Int_t * vBold )Gia_ShowMapAdds1020,37056
Vec_Int_t * Gia_ShowMapXors( Gia_Man_t * p, Vec_Int_t * vXors )Gia_ShowMapXors1039,37879
int Gia_ShowCollectObjs_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vAdds, Vec_Int_t * vXors, Vec_Int_t * vMapAdds, Vec_Int_t * vMapXors, Vec_Int_t * vOrder )Gia_ShowCollectObjs_rec1046,38157
Vec_Int_t * Gia_ShowCollectObjs( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vXors, Vec_Int_t * vMapAdds, Vec_Int_t * vMapXors )Gia_ShowCollectObjs1090,40739
void Gia_ShowProcess( Gia_Man_t * p, char * pFileName, Vec_Int_t * vBold, Vec_Int_t * vAdds, Vec_Int_t * vXors, int fFadds )Gia_ShowProcess1116,41566
void Gia_ManShow( Gia_Man_t * pMan, Vec_Int_t * vBold, int fAdders, int fFadds, int fPath )Gia_ManShow1126,42078

src/aig/gia/giaShrink6.c,2826
static word Truth[8] = {Truth32,895
typedef struct Shr_Fan_t_ Shr_Fan_t;Shr_Fan_t44,1223
struct Shr_Fan_t_Shr_Fan_t_45,1260
    int                iFan;           // fanout IDiFan47,1280
    int                Next;           // next structureNext48,1332
typedef struct Shr_Man_t_ Shr_Man_t;Shr_Man_t52,1414
struct Shr_Man_t_Shr_Man_t_53,1451
    Gia_Man_t *        pGia;           // user's AIGpGia55,1471
    Gia_Man_t *        pNew;           // constructed AIGpNew56,1524
    int                nDivMax;        // max number of divisorsnDivMax57,1582
    int                nNewSize;       // max growth sizenNewSize58,1647
    Vec_Wrd_t *        vFanMem;        // fanout memoryvFanMem60,1743
    Vec_Int_t *        vObj2Fan;       // fanoutvObj2Fan61,1799
    Shr_Fan_t *        pFanTemp;       // temporary fanoutpFanTemp62,1848
    Vec_Int_t *        vDivs;          // divisorsvDivs64,1923
    Vec_Int_t *        vPrio;          // priority queuevPrio65,1974
    Vec_Int_t *        vDivResub;      // resubstitutionvDivResub66,2031
    Vec_Int_t *        vLeaves;        // cut leavesvLeaves67,2088
    Vec_Wrd_t *        vTruths;        // truth tablesvTruths69,2161
    Vec_Wrd_t *        vDivTruths;     // truth tablesvDivTruths70,2216
    Rsb_Man_t *        pManRsb;pManRsb72,2294
    Bdc_Man_t *        pManDec;       pManDec73,2326
    Bdc_Par_t          Pars;Pars74,2365
#define Shr_ObjForEachFanout(Shr_ObjForEachFanout78,2417
Shr_Man_t * Shr_ManAlloc( Gia_Man_t * pGia )Shr_ManAlloc96,3012
Gia_Man_t * Shr_ManFree( Shr_Man_t * p )Shr_ManFree128,4173
static inline void Shr_ManAddFanout( Shr_Man_t * p, int iFanin, int iFanout )Shr_ManAddFanout171,5389
static inline int Shr_ManFanIterStart( Shr_Man_t * p, int iNode )Shr_ManFanIterStart182,5751
static inline int Shr_ManFanIterNext( Shr_Man_t * p )Shr_ManFanIterNext189,6012
static inline int Shr_ManDivPushOrderByLevel( Shr_Man_t * p, int iDiv )Shr_ManDivPushOrderByLevel208,6468
static inline int Shr_ManCollectDivisors( Shr_Man_t * p, Vec_Int_t * vLeaves, int Limit, int nFanoutMax )Shr_ManCollectDivisors223,7065
int Shr_ObjPerformBidec( Shr_Man_t * p, Bdc_Man_t * pManDec, Gia_Man_t * pNew, Vec_Int_t * vLeafLits, word uTruth1, word uTruthC )Shr_ObjPerformBidec275,8877
word Shr_ManComputeTruth6_rec( Gia_Man_t * p, int iNode, Vec_Wrd_t * vTruths )Shr_ManComputeTruth6_rec317,10504
word Shr_ManComputeTruth6( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vLeaves, Vec_Wrd_t * vTruths )Shr_ManComputeTruth6335,11197
void Shr_ManComputeTruths( Gia_Man_t * p, int nVars, Vec_Int_t * vDivs, Vec_Wrd_t * vDivTruths, Vec_Wrd_t * vTruths )Shr_ManComputeTruths359,11874
Gia_Man_t * Gia_ManMapShrink6( Gia_Man_t * p, int nFanoutMax, int fKeepLevel, int fVerbose )Gia_ManMapShrink6401,13190

src/aig/gia/giaSatLE.c,5930
static inline int   Sle_CutSize( int * pCut )          { return pCut[0] & 0xF;  }  //  4 bitsSle_CutSize33,856
static inline int   Sle_CutSign( int * pCut )          { return ((unsigned)pCut[0]) >> 4;   }  // 28 bitsSle_CutSign34,950
static inline int   Sle_CutSetSizeSign( int s, int S ) { return (S << 4) | s;   }Sle_CutSetSizeSign35,1056
static inline int * Sle_CutLeaves( int * pCut )        { return pCut + 1;       } Sle_CutLeaves36,1138
static inline int   Sle_CutIsUsed( int * pCut )        { return pCut[1] != 0;   }Sle_CutIsUsed38,1222
static inline void  Sle_CutSetUnused( int * pCut )     { pCut[1] = 0;           }Sle_CutSetUnused39,1304
static inline int   Sle_ListCutNum( int * pList )      { return pList[0];       }Sle_ListCutNum41,1387
#define Sle_ForEachCut(Sle_ForEachCut43,1470
#define Sle_ForEachCut1(Sle_ForEachCut144,1618
static inline int Sle_CutMergeOrder( int * pCut0, int * pCut1, int * pCut, int nLutSize )Sle_CutMergeOrder61,2237
static inline int Sle_SetCutIsContainedOrder( int * pBase, int * pCut ) // check if pCut is contained in pBaseSle_SetCutIsContainedOrder118,3932
static inline int Sle_CutCountBits( unsigned i )Sle_CutCountBits146,4694
static inline int Sle_SetLastCutIsContained( Vec_Int_t * vTemp, int * pBase )Sle_SetLastCutIsContained153,4908
static inline void Sle_SetAddCut( Vec_Int_t * vTemp, int * pCut )Sle_SetAddCut161,5299
int Sle_ManCutMerge( Gia_Man_t * p, int iObj, Vec_Int_t * vCuts, Vec_Int_t * vTemp, int nLutSize )Sle_ManCutMerge170,5779
Vec_Int_t * Sle_ManComputeCuts( Gia_Man_t * p, int nLutSize, int fVerbose )Sle_ManComputeCuts205,7174
int Sle_ManComputeDelayCut( Gia_Man_t * p, int * pCut, Vec_Int_t * vTime )Sle_ManComputeDelayCut241,8430
int Sle_ManComputeDelayOne( Gia_Man_t * p, int iObj, Vec_Int_t * vCuts, Vec_Int_t * vTime )Sle_ManComputeDelayOne250,8737
int Sle_ManComputeDelay( Gia_Man_t * p, Vec_Int_t * vCuts )Sle_ManComputeDelay262,9179
void Sle_ManPrintCut( int * pCut )Sle_ManPrintCut287,9836
void Sle_ManPrintCuts( Gia_Man_t * p, Vec_Int_t * vCuts, int iObj )Sle_ManPrintCuts296,10058
void Sle_ManPrintCutsAll( Gia_Man_t * p, Vec_Int_t * vCuts )Sle_ManPrintCutsAll305,10341
void Sle_ManComputeCutsTest( Gia_Man_t * p )Sle_ManComputeCutsTest311,10499
Vec_Bit_t * Sle_ManInternalNodeMask( Gia_Man_t * pGia )Sle_ManInternalNodeMask331,10945
int Sle_ManCutHasPisOnly( int * pCut, Vec_Bit_t * vMask )Sle_ManCutHasPisOnly351,11464
void Sle_ManCollectCutFaninsOne( Gia_Man_t * pGia, int iObj, Vec_Int_t * vCuts, Vec_Bit_t * vMask, Vec_Int_t * vCutFanins, Vec_Bit_t * vMap )Sle_ManCollectCutFaninsOne371,12029
Vec_Wec_t * Sle_ManCollectCutFanins( Gia_Man_t * pGia, Vec_Int_t * vCuts, Vec_Bit_t * vMask )Sle_ManCollectCutFanins389,12765
typedef struct Sle_Man_t_ Sle_Man_t;Sle_Man_t401,13193
struct Sle_Man_t_Sle_Man_t_402,13230
    Gia_Man_t *    pGia;         // user's manager (with mapping and edges)pGia405,13269
    int            nLevels;      // total number of levelsnLevels406,13345
    int            fVerbose;     // verbose flagfVerbose407,13404
    int            nSatCalls;    // the number of SAT callsnSatCalls408,13453
    int            nNodeVars;    // node variables (Gia_ManAndNum(pGia))nNodeVars410,13534
    int            nCutVars;     // cut variables (total number of non-trivial cuts)nCutVars411,13607
    int            nEdgeVars;    // edge variables (total number of internal edges)nEdgeVars412,13692
    int            nDelayVars;   // delay variables (nNodeVars * nLevelsMax)nDelayVars413,13776
    int            nVarsTotal;   // total number of variablesnVarsTotal414,13853
    int            nCutClas;     // cut clausesnCutClas416,13934
    int            nEdgeClas;    // edge clausesnEdgeClas417,13982
    int            nEdgeClas2;   // edge clauses exclusivitynEdgeClas2418,14031
    int            nDelayClas;   // delay clausesnDelayClas419,14092
    sat_solver *   pSat;         // SAT solverpSat421,14163
    Vec_Bit_t *    vMask;        // internal node maskvMask422,14210
    Vec_Int_t *    vCuts;        // cuts for each nodevCuts423,14265
    Vec_Wec_t *    vCutFanins;   // internal cut fanins of each nodevCutFanins424,14320
    Vec_Wec_t *    vFanoutEdges; // internal cut fanins of each nodevFanoutEdges425,14389
    Vec_Wec_t *    vEdgeCuts;    // cuts of each edge for one nodevEdgeCuts426,14458
    Vec_Int_t *    vObjMap;      // temporary object mapvObjMap427,14525
    Vec_Int_t *    vCutFirst;    // first cut of each nodevCutFirst428,14582
    Vec_Int_t *    vEdgeFirst;   // first edge of each nodevEdgeFirst429,14641
    Vec_Int_t *    vDelayFirst;  // first edge of each nodevDelayFirst430,14701
    Vec_Int_t *    vPolars;      // initial vPolars431,14761
    Vec_Int_t *    vLits;        // literals vLits432,14806
    abctime        timeStart;timeStart434,14870
static inline int * Sle_ManList( Sle_Man_t * p, int i ) { return Vec_IntEntryP(p->vCuts, Vec_IntEntry(p->vCuts, i)); }Sle_ManList437,14904
Sle_Man_t * Sle_ManAlloc( Gia_Man_t * pGia, int nLevels, int fVerbose )Sle_ManAlloc450,15258
void Sle_ManStop( Sle_Man_t * p )Sle_ManStop470,16183
void Sle_ManMarkupVariables( Sle_Man_t * p )Sle_ManMarkupVariables498,16863
static inline int Sle_ManCheckContained( int * pCutLeaves, int nCutLeaves, int * pLutFanins, int nLutFanins )Sle_ManCheckContained540,18119
void Sle_ManDeriveInit( Sle_Man_t * p )Sle_ManDeriveInit555,18547
void Sle_ManDeriveCnf( Sle_Man_t * p, int nBTLimit, int fDynamic )Sle_ManDeriveCnf627,21060
int Sle_ManAddEdgeConstraints( Sle_Man_t * p, int nEdges )Sle_ManAddEdgeConstraints806,29040
void Sle_ManDeriveResult( Sle_Man_t * p, Vec_Int_t * vEdge2, Vec_Int_t * vMapping )Sle_ManDeriveResult868,31343
void Sle_ManExplore( Gia_Man_t * pGia, int nBTLimit, int DelayInit, int fDynamic, int fTwoEdges, int fVerbose )Sle_ManExplore941,34091

src/aig/gia/giaSimBase.c,11009
typedef struct Gia_SimRsbMan_t_ Gia_SimRsbMan_t;Gia_SimRsbMan_t34,861
struct Gia_SimRsbMan_t_Gia_SimRsbMan_t_35,910
    Gia_Man_t *    pGia;pGia37,936
    Vec_Int_t *    vTfo;vTfo38,961
    Vec_Int_t *    vCands;vCands39,986
    Vec_Int_t *    vFanins;vFanins40,1013
    Vec_Int_t *    vFanins2;vFanins241,1041
    Vec_Wrd_t *    vSimsObj;vSimsObj42,1070
    Vec_Wrd_t *    vSimsObj2;vSimsObj243,1099
    int            nWords;nWords44,1129
    word *         pFunc[3];pFunc45,1156
typedef struct Gia_SimAbsMan_t_ Gia_SimAbsMan_t;Gia_SimAbsMan_t49,1190
struct Gia_SimAbsMan_t_Gia_SimAbsMan_t_50,1239
    Gia_Man_t *    pGia;       // AIG managerpGia53,1292
    word *         pSet[2];    // offset/onset truth tablespSet54,1338
    int            nCands;     // candidate countnCands55,1398
    int            nWords;     // word countnWords56,1448
    Vec_Wrd_t *    vSims;      // candidate simulation infovSims57,1493
    Vec_Int_t *    vResub;     // the resultvResub58,1553
    int            fVerbose;   // verbosefVerbose59,1598
    Vec_Int_t *    vValues;       // function values in each patternvValues61,1667
    Vec_Int_t *    vPatPairs;     // used mintermsvPatPairs62,1736
    int            nWordsTable;   // words of table datanWordsTable63,1787
    word *         pTableTemp;    // temporary table patternpTableTemp64,1844
    Vec_Wrd_t *    vCoverTable;   // columns = minterms; rows = classesvCoverTable65,1905
    Vec_Int_t *    vTtMints;      // truth table mintermsvTtMints66,1977
void Gia_ManSimPatAssignInputs( Gia_Man_t * p, int nWords, Vec_Wrd_t * vSims, Vec_Wrd_t * vSimsIn )Gia_ManSimPatAssignInputs84,2493
static inline void Gia_ManSimPatSimAnd( Gia_Man_t * p, int i, Gia_Obj_t * pObj, int nWords, Vec_Wrd_t * vSims )Gia_ManSimPatSimAnd92,2882
static inline void Gia_ManSimPatSimPo( Gia_Man_t * p, int i, Gia_Obj_t * pObj, int nWords, Vec_Wrd_t * vSims )Gia_ManSimPatSimPo108,3589
static inline void Gia_ManSimPatSimNot( Gia_Man_t * p, int i, Gia_Obj_t * pObj, int nWords, Vec_Wrd_t * vSims )Gia_ManSimPatSimNot118,4020
Vec_Wrd_t * Gia_ManSimPatSim( Gia_Man_t * pGia )Gia_ManSimPatSim124,4263
void Gia_ManSimPatResim( Gia_Man_t * pGia, Vec_Int_t * vObjs, int nWords, Vec_Wrd_t * vSims )Gia_ManSimPatResim137,4851
void Gia_ManSimPatWrite( char * pFileName, Vec_Wrd_t * vSimsIn, int nWords )Gia_ManSimPatWrite147,5308
void Gia_ManSimPatAssignInputs2( Gia_Man_t * p, int nWords, Vec_Wrd_t * vSims, Vec_Wrd_t * vSimsIn )Gia_ManSimPatAssignInputs2163,5677
static inline void Gia_ManSimPatSimAnd2( Gia_Man_t * p, int i, Gia_Obj_t * pObj, int nWords, Vec_Wrd_t * vSims )Gia_ManSimPatSimAnd2174,6189
static inline void Gia_ManSimPatSimPo2( Gia_Man_t * p, int i, Gia_Obj_t * pObj, int nWords, Vec_Wrd_t * vSims )Gia_ManSimPatSimPo2193,6983
Vec_Wrd_t * Gia_ManSimPatSim2( Gia_Man_t * pGia )Gia_ManSimPatSim2201,7316
void Gia_ManSimPatValuesDerive( Gia_Man_t * p, int nWords, Vec_Wrd_t * vSims, Vec_Wrd_t * vValues )Gia_ManSimPatValuesDerive226,8132
Vec_Wrd_t * Gia_ManSimPatValues( Gia_Man_t * p )Gia_ManSimPatValues234,8527
Vec_Wrd_t * Gia_ManSimCombine( int nInputs, Vec_Wrd_t * vBase, Vec_Wrd_t * vAddOn, int nWordsUse )Gia_ManSimCombine260,9401
int Gia_ManSimBitPackOne( int nWords, Vec_Wrd_t * vSimsIn, Vec_Wrd_t * vSimsCare, int iPat, int * pLits, int nLits )Gia_ManSimBitPackOne280,10347
Vec_Wrd_t * Gia_ManSimBitPacking( Gia_Man_t * p, Vec_Int_t * vCexStore, int nCexes, int nUnDecs )Gia_ManSimBitPacking308,11462
int Gia_ManSimPatHashPatterns( Gia_Man_t * p, int nWords, Vec_Wrd_t * vSims, int * pnC0, int * pnC1 )Gia_ManSimPatHashPatterns347,12889
Gia_Man_t * Gia_ManSimPatGenMiter( Gia_Man_t * p, Vec_Wrd_t * vSims )Gia_ManSimPatGenMiter368,13591
void Gia_ManSimProfile( Gia_Man_t * pGia )Gia_ManSimProfile405,14719
void Gia_ManPatSatImprove( Gia_Man_t * p, int nWords0, int fVerbose )Gia_ManPatSatImprove414,15218
Gia_SimRsbMan_t * Gia_SimRsbAlloc( Gia_Man_t * pGia )Gia_SimRsbAlloc462,16682
void Gia_SimRsbFree( Gia_SimRsbMan_t * p )Gia_SimRsbFree480,17500
void Gia_SimRsbTfo_rec( Gia_Man_t * p, int iObj, int iFanout, Vec_Int_t * vTfo )Gia_SimRsbTfo_rec506,18099
Vec_Int_t * Gia_SimRsbTfo( Gia_SimRsbMan_t * p, int iObj, int iFanout )Gia_SimRsbTfo517,18486
word * Gia_SimRsbFunc( Gia_SimRsbMan_t * p, int iObj, Vec_Int_t * vFanins, int fOnSet )Gia_SimRsbFunc541,19095
int Gia_SimRsbResubVerify( Gia_SimRsbMan_t * p, int iObj, Vec_Int_t * vFanins )Gia_SimRsbResubVerify562,19961
static inline void Gia_SimRsbSimAndCareSet( Gia_Man_t * p, int i, Gia_Obj_t * pObj, int nWords, Vec_Wrd_t * vSims, Vec_Wrd_t * vSims2 )Gia_SimRsbSimAndCareSet583,20523
word * Gia_SimRsbCareSet( Gia_SimRsbMan_t * p, int iObj, Vec_Int_t * vTfo )Gia_SimRsbCareSet600,21458
void Gia_ObjSimCollect( Gia_SimRsbMan_t * p )Gia_ObjSimCollect634,22625
Vec_Int_t * Gia_ObjSimCands( Gia_SimRsbMan_t * p, int iObj, int nCands )Gia_ObjSimCands651,23477
int Gia_ObjSimRsb( Gia_SimRsbMan_t * p, int iObj, int nCands, int fVerbose, int * pnBufs, int * pnInvs )Gia_ObjSimRsb683,24501
int Gia_ManSimRsb( Gia_Man_t * pGia, int nCands, int fVerbose )Gia_ManSimRsb715,26152
void Gia_ManSimRelAssignInputs( Gia_Man_t * p, int nWords, Vec_Wrd_t * vSims, int nWordsIn, Vec_Wrd_t * vSimsIn )Gia_ManSimRelAssignInputs746,27072
int Gia_ManSimRelCompare( Gia_Man_t * p, int nWords, Vec_Wrd_t * vSims, int nWordsOut, Vec_Wrd_t * vSimsOut, int iPat, int iMint )Gia_ManSimRelCompare756,27599
int Gia_ManSimRelCollectOutputs( Gia_Man_t * p, int nWords, Vec_Wrd_t * vSims, int nWordsOut, Vec_Wrd_t * vSimsOut, Vec_Wrd_t * vRel )Gia_ManSimRelCollectOutputs777,28322
Vec_Wrd_t * Gia_ManSimRel( Gia_Man_t * p, Vec_Int_t * vObjs, Vec_Wrd_t * vVals )Gia_ManSimRel795,29172
void Gia_ManSimRelCheckFuncs( Gia_Man_t * p, Vec_Wrd_t * vRel, int nOuts, Vec_Wrd_t * vFuncs )Gia_ManSimRelCheckFuncs837,30799
Vec_Wrd_t * Gia_ManSimRelDeriveFuncs( Gia_Man_t * p, Vec_Wrd_t * vRel, int nOuts )Gia_ManSimRelDeriveFuncs874,32248
Vec_Wrd_t * Gia_ManSimRelDeriveFuncs2( Gia_Man_t * p, Vec_Wrd_t * vRel, int nOuts )Gia_ManSimRelDeriveFuncs2898,33293
void Gia_ManSimRelPrint( Gia_Man_t * p, Vec_Wrd_t * vRel, Vec_Int_t * vOutMints )Gia_ManSimRelPrint967,35757
Vec_Int_t * Gia_ManSimPatStart( int nItems )Gia_ManSimPatStart1018,37317
void Gia_ManSimRelTest( Gia_Man_t * p )Gia_ManSimRelTest1027,37565
Vec_Int_t * Gia_Sim5CollectValues( word * pOffSet, word * pOnSet, int nWords )Gia_Sim5CollectValues1053,38229
Gia_SimAbsMan_t * Gia_SimAbsAlloc( Gia_Man_t * pGia, word * pOffSet, word * pOnSet, Vec_Wrd_t * vSims, int nWords, Vec_Int_t * vResub, int fVerbose )Gia_SimAbsAlloc1066,38792
void Gia_SimAbsFree( Gia_SimAbsMan_t * p )Gia_SimAbsFree1084,39506
void Gia_SimAbsCheckSolution( Gia_SimAbsMan_t * p )Gia_SimAbsCheckSolution1105,39924
void Gia_SimAbsSolve( Gia_SimAbsMan_t * p )Gia_SimAbsSolve1161,41860
int Gia_SimAbsRefine( Gia_SimAbsMan_t * p )Gia_SimAbsRefine1250,45234
Vec_Int_t * Gia_SimAbsFind( Vec_Int_t * vValues, int Value )Gia_SimAbsFind1289,46644
void Gia_SimAbsInit( Gia_SimAbsMan_t * p )Gia_SimAbsInit1297,46904
Vec_Int_t * Gia_SimAbsPerformOne( Gia_Man_t * pGia, word * pOffSet, word * pOnSet, Vec_Wrd_t * vSimsCands, int nWords, int fVerbose )Gia_SimAbsPerformOne1327,47931
typedef struct Gia_RsbMan_t_ Gia_RsbMan_t;Gia_RsbMan_t1358,48725
struct Gia_RsbMan_t_Gia_RsbMan_t_1359,48768
    Gia_Man_t *    pGia;pGia1361,48791
    word *         pOffSet;pOffSet1362,48816
    word *         pOnSet;pOnSet1363,48844
    int            nWords;nWords1364,48871
    int            nWordsT;nWordsT1365,48898
    Vec_Wrd_t *    vSims;vSims1366,48926
    Vec_Wrd_t *    vSimsT;vSimsT1367,48952
    Vec_Int_t *    vCands;vCands1368,48979
    Vec_Int_t *    vObjs;vObjs1369,49006
    Vec_Int_t *    vObjs2;vObjs21370,49032
    Vec_Wec_t *    vSets[2];vSets1371,49059
    word *         pSet[3];pSet1372,49088
    Vec_Int_t *    vActive;vActive1373,49116
Gia_RsbMan_t * Gia_RsbAlloc( Gia_Man_t * pGia, word * pOffSet, word * pOnSet, Vec_Wrd_t * vSims, int nWords, Vec_Wrd_t * vSimsT, int nWordsT, Vec_Int_t * vCands )Gia_RsbAlloc1375,49147
void Gia_RsbFree( Gia_RsbMan_t * p )Gia_RsbFree1422,50947
int Gia_RsbCost( Gia_RsbMan_t * p )Gia_RsbCost1436,51247
void Gia_RsbPrint( Gia_RsbMan_t * p )Gia_RsbPrint1443,51493
void Gia_RsbUpdateAdd( Gia_RsbMan_t * p, int iObj )Gia_RsbUpdateAdd1460,52137
void Gia_RsbUpdateRemove( Gia_RsbMan_t * p, int Index )Gia_RsbUpdateRemove1486,53091
int Gia_RsbRemovalCost( Gia_RsbMan_t * p, int Index )Gia_RsbRemovalCost1520,54400
int Gia_RsbFindNodeToRemove( Gia_RsbMan_t * p, int * pMinCost )Gia_RsbFindNodeToRemove1540,55226
void Gia_RsbFindMints( Gia_RsbMan_t * p, int * pMint0, int * pMint1 )Gia_RsbFindMints1557,55617
int Gia_RsbFindNode( Gia_RsbMan_t * p )Gia_RsbFindNode1570,56175
int Gia_RsbCollectValid( Gia_RsbMan_t * p )Gia_RsbCollectValid1603,57469
Vec_Int_t * Gia_RsbSolve( Gia_RsbMan_t * p )Gia_RsbSolve1615,57909
Vec_Int_t * Gia_RsbSetFind( word * pOffSet, word * pOnSet, Vec_Wrd_t * vSims, int nWords, Vec_Wrd_t * vSimsT, int nWordsT, Vec_Int_t * vCands )Gia_RsbSetFind1640,58733
Vec_Int_t * Gia_SimQualityOne( Gia_Man_t * p, Vec_Int_t * vPat, int fPoOnly )Gia_SimQualityOne1660,59357
void Gia_SimQualityTest( Gia_Man_t * p )Gia_SimQualityTest1705,60857
Vec_Int_t * Gia_SimGenerateStats( Gia_Man_t * p )Gia_SimGenerateStats1725,61501
double Gia_SimComputeScore( Gia_Man_t * p, Vec_Int_t * vTotal, Vec_Int_t * vThis )Gia_SimComputeScore1746,62189
int Gia_SimQualityPatternsMax( Gia_Man_t * p, Vec_Int_t * vPat, int Iter, int fVerbose, Vec_Int_t * vStats )Gia_SimQualityPatternsMax1759,62612
Vec_Int_t * Gia_ManPatCollectOne( Gia_Man_t * p, Vec_Wrd_t * vPatterns, int n, int nWords )Gia_ManPatCollectOne1798,63895
void Gia_ManPatUpdateOne( Gia_Man_t * p, Vec_Wrd_t * vPatterns, int n, int nWords, Vec_Int_t * vPat )Gia_ManPatUpdateOne1805,64199
void Gia_ManPatDistImprove( Gia_Man_t * p, int fVerbose )Gia_ManPatDistImprove1815,64520
Vec_Int_t * Gia_SimCollectRare( Gia_Man_t * p, Vec_Wrd_t * vPatterns, int RareLimit )Gia_SimCollectRare1878,66637
Vec_Flt_t * Gia_SimQualityImpact( Gia_Man_t * p, Vec_Int_t * vPat, Vec_Int_t * vRareCounts )Gia_SimQualityImpact1900,67606
Vec_Int_t * Gia_SimCollectBest( Vec_Flt_t * vQuo )Gia_SimCollectBest1936,69006
float Gia_ManPatGetQuo( Gia_Man_t * p, Vec_Int_t * vRareCounts, Vec_Wrd_t * vSims, int n, int nWords )Gia_ManPatGetQuo1948,69375
float Gia_ManPatGetTotalQuo( Gia_Man_t * p, int RareLimit, Vec_Wrd_t * vPatterns, int nWords )Gia_ManPatGetTotalQuo1964,69970
float Gia_ManPatGetOneQuo( Gia_Man_t * p, int RareLimit, Vec_Wrd_t * vPatterns, int nWords, int n )Gia_ManPatGetOneQuo1978,70491
void Gia_ManPatRareImprove( Gia_Man_t * p, int RareLimit, int fVerbose )Gia_ManPatRareImprove1991,70969
void Gia_ManSimTest( Gia_Man_t * pGia )Gia_ManSimTest2046,73163
void Gia_ManSimGen( Gia_Man_t * pGia )Gia_ManSimGen2084,74055

src/aig/gia/giaAgi.c,6505
#define AGI_PI AGI_PI30,746
#define AGI_RO AGI_RO31,792
#define AGI_PO AGI_PO32,838
#define AGI_RI AGI_RI33,884
#define AGI_C0 AGI_C034,930
#define AGI_M0 AGI_M035,976
#define AGI_M1 AGI_M136,1022
typedef struct Agi_Man_t_ Agi_Man_t;Agi_Man_t38,1069
struct Agi_Man_t_Agi_Man_t_39,1106
    char *             pName;       // name of the AIGpName41,1126
    char *             pSpec;       // name of the input filepSpec42,1181
    int                nCap;        // number of objectsnCap43,1243
    int                nObjs;       // number of objectsnObjs44,1300
    int                nNodes;      // number of objectsnNodes45,1357
    int                nRegs;       // number of registersnRegs46,1414
    unsigned           nTravIds;    // number of objectsnTravIds47,1473
    Vec_Int_t          vCis;        // comb inputsvCis48,1530
    Vec_Int_t          vCos;        // comb outputsvCos49,1581
    word *             pObjs;       // objectspObjs50,1633
    unsigned *         pThird;      // third inputpThird51,1680
    unsigned *         pTravIds;    // traversal IDspTravIds52,1731
    unsigned *         pNext;       // next valuespNext53,1784
    unsigned *         pTable;      // hash tablepTable54,1835
    unsigned *         pCopy;       // hash tablepCopy55,1885
static inline int      Agi_ManObjNum( Agi_Man_t * p )                      { return p->nObjs;                                        } Agi_ManObjNum58,1939
static inline int      Agi_ManCiNum( Agi_Man_t * p )                       { return Vec_IntSize( &p->vCis );                         } Agi_ManCiNum59,2075
static inline int      Agi_ManCoNum( Agi_Man_t * p )                       { return Vec_IntSize( &p->vCos );                         } Agi_ManCoNum60,2211
static inline int      Agi_ManNodeNum( Agi_Man_t * p )                     { return p->nNodes;                                       } Agi_ManNodeNum61,2347
static inline unsigned Agi_ObjLit0( Agi_Man_t * p, int i )                 { return (unsigned)(p->pObjs[i]);                         } Agi_ObjLit063,2484
static inline unsigned Agi_ObjLit1( Agi_Man_t * p, int i )                 { return (unsigned)(p->pObjs[i] >> 32);                   } Agi_ObjLit164,2620
static inline unsigned Agi_ObjLit2( Agi_Man_t * p, int i )                 { return p->pThird[i];                                    } Agi_ObjLit265,2756
static inline int      Agi_ObjVar0( Agi_Man_t * p, int i )                 { return Agi_ObjLit0(p, i) >> 1;                          } Agi_ObjVar066,2892
static inline int      Agi_ObjVar1( Agi_Man_t * p, int i )                 { return Agi_ObjLit1(p, i) >> 1;                          } Agi_ObjVar167,3028
static inline int      Agi_ObjVar2( Agi_Man_t * p, int i )                 { return Agi_ObjLit2(p, i) >> 1;                          } Agi_ObjVar268,3164
static inline void     Agi_ObjSetLit0( Agi_Man_t * p, int i, unsigned l )  { p->pObjs[i] = (p->pObjs[i] & AGI_M1) | (word)l;         } Agi_ObjSetLit069,3300
static inline void     Agi_ObjSetLit1( Agi_Man_t * p, int i, unsigned l )  { p->pObjs[i] = (p->pObjs[i] & AGI_M0) | ((word)l << 32); } Agi_ObjSetLit170,3436
static inline void     Agi_ObjSetLit2( Agi_Man_t * p, int i, unsigned l )  { p->pThird[i] = l;                                       }  Agi_ObjSetLit271,3572
static inline int      Agi_ObjIsC0( Agi_Man_t * p, int i )                 { return (i == 0);                                        } Agi_ObjIsC073,3710
static inline int      Agi_ObjIsPi( Agi_Man_t * p, int i )                 { return (p->pObjs[i] & AGI_PI) == AGI_PI;                } Agi_ObjIsPi74,3846
static inline int      Agi_ObjIsRo( Agi_Man_t * p, int i )                 { return (p->pObjs[i] & AGI_PI) == AGI_RO;                } Agi_ObjIsRo75,3982
static inline int      Agi_ObjIsPo( Agi_Man_t * p, int i )                 { return (p->pObjs[i] & AGI_PI) == AGI_PO;                } Agi_ObjIsPo76,4118
static inline int      Agi_ObjIsRi( Agi_Man_t * p, int i )                 { return (p->pObjs[i] & AGI_PI) == AGI_RI;                } Agi_ObjIsRi77,4254
static inline int      Agi_ObjIsCi( Agi_Man_t * p, int i )                 { return (p->pObjs[i] & AGI_RO) == AGI_RO;                } Agi_ObjIsCi78,4390
static inline int      Agi_ObjIsCo( Agi_Man_t * p, int i )                 { return (p->pObjs[i] & AGI_PO) == AGI_PO;                } Agi_ObjIsCo79,4526
static inline int      Agi_ObjIsNode( Agi_Man_t * p, int i )               { return p->pObjs[i] < AGI_C0;                            } Agi_ObjIsNode80,4662
static inline int      Agi_ObjIsBuf( Agi_Man_t * p, int i )                { return Agi_ObjLit0(p, i) == Agi_ObjLit1(p, i);          } Agi_ObjIsBuf81,4798
static inline int      Agi_ObjIsAnd( Agi_Man_t * p, int i )                { return Agi_ObjIsNode(p, i) && Agi_ObjLit0(p, i) < Agi_ObjLit1(p, i);  } Agi_ObjIsAnd82,4934
static inline int      Agi_ObjIsXor( Agi_Man_t * p, int i )                { return Agi_ObjIsNode(p, i) && Agi_ObjLit0(p, i) > Agi_ObjLit1(p, i);  } Agi_ObjIsXor83,5084
static inline int      Agi_ObjIsMux( Agi_Man_t * p, int i )                { return Agi_ObjIsAnd(p, i) && ~Agi_ObjLit2(p, i);        }Agi_ObjIsMux84,5234
static inline int      Agi_ObjIsMaj( Agi_Man_t * p, int i )                { return Agi_ObjIsXor(p, i) && ~Agi_ObjLit2(p, i);        } Agi_ObjIsMaj85,5369
static inline int Agi_ManAppendObj( Agi_Man_t * p )Agi_ManAppendObj87,5506
static inline int Agi_ManAppendCi( Agi_Man_t * p )Agi_ManAppendCi92,5633
static inline int Agi_ManAppendCo( Agi_Man_t * p, int iLit0 )Agi_ManAppendCo99,5869
static inline int Agi_ManAppendAnd( Agi_Man_t * p, int iLit0, int iLit1 )Agi_ManAppendAnd106,6100
#define Agi_ManForEachCi(Agi_ManForEachCi115,6368
#define Agi_ManForEachCo(Agi_ManForEachCo116,6448
#define Agi_ManForEachObj(Agi_ManForEachObj117,6528
#define Agi_ManForEachObj1(Agi_ManForEachObj1118,6609
#define Agi_ManForEachNode(Agi_ManForEachNode119,6690
Agi_Man_t * Agi_ManAlloc( int nCap )Agi_ManAlloc136,7262
void Agi_ManFree( Agi_Man_t * p )Agi_ManFree148,7570
Agi_Man_t * Agi_ManFromGia( Gia_Man_t * p )Agi_ManFromGia168,7981
int Agi_ManSuppSize_rec( Agi_Man_t * p, int i )Agi_ManSuppSize_rec196,8783
int Agi_ManSuppSizeOne( Agi_Man_t * p, int i )Agi_ManSuppSizeOne206,9112
int Agi_ManSuppSizeTest( Agi_Man_t * p )Agi_ManSuppSizeTest211,9222
void Agi_ManTest( Gia_Man_t * pGia )Agi_ManTest222,9565

src/aig/gia/giaMffc.c,1283
static inline int   Gia_ObjDom( Gia_Man_t * p, Gia_Obj_t * pObj )            { return Vec_IntEntry(p->vDoms, Gia_ObjId(p, pObj));   }Gia_ObjDom30,740
static inline void  Gia_ObjSetDom( Gia_Man_t * p, Gia_Obj_t * pObj, int d )  { Vec_IntWriteEntry(p->vDoms, Gia_ObjId(p, pObj), d);  }Gia_ObjSetDom31,874
static inline void Gia_ManAddDom( Gia_Man_t * p, Gia_Obj_t * pObj, int iDom0 )Gia_ManAddDom49,1615
static inline void Gia_ManComputeDoms( Gia_Man_t * p )Gia_ManComputeDoms82,2479
static inline int Gia_NodeDeref_rec( Gia_Man_t * p, Gia_Obj_t * pNode )Gia_NodeDeref_rec117,3407
static inline int Gia_NodeRef_rec( Gia_Man_t * p, Gia_Obj_t * pNode )Gia_NodeRef_rec134,3977
static inline void Gia_NodeCollect_rec( Gia_Man_t * p, Gia_Obj_t * pNode, Vec_Int_t * vSupp, Vec_Int_t * vSuppRefs  )Gia_NodeCollect_rec149,4453
static inline int Gia_NodeMffcSizeSupp( Gia_Man_t * p, Gia_Obj_t * pNode, Vec_Int_t * vSupp, Vec_Int_t * vSuppRefs )Gia_NodeMffcSizeSupp164,5044
int Gia_ManDomDerive_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pNode )Gia_ManDomDerive_rec195,6067
Gia_Man_t * Gia_ManDomDerive( Gia_Man_t * p, Gia_Obj_t * pRoot, Vec_Int_t * vSupp, int nVars )Gia_ManDomDerive205,6517
void Gia_ManComputeDomsTry( Gia_Man_t * p )Gia_ManComputeDomsTry250,7855

src/aig/gia/giaSwitch.c,4488
typedef struct Gia_ParSwi_t_ Gia_ParSwi_t;Gia_ParSwi_t32,847
struct Gia_ParSwi_t_Gia_ParSwi_t_33,890
    int            nWords;       // the number of machine wordsnWords36,947
    int            nIters;       // the number of timeframesnIters37,1011
    int            nPref;        // the number of first timeframes to skipnPref38,1072
    int            nRandPiFactor;   // PI trans prob (-1=3/8; 0=1/2; 1=1/4; 2=1/8, etc)nRandPiFactor39,1147
    int            fProbOne;     // collect probability of onefProbOne40,1235
    int            fProbTrans;   // collect probatility of SwiingfProbTrans41,1298
    int            fVerbose;     // enables verbose outputfVerbose42,1364
typedef struct Gia_ManSwi_t_ Gia_ManSwi_t;Gia_ManSwi_t45,1427
struct Gia_ManSwi_t_Gia_ManSwi_t_46,1470
    Gia_Man_t *    pAig;pAig48,1493
    Gia_ParSwi_t * pPars; pPars49,1518
    int            nWords;nWords50,1545
    unsigned *     pDataSim;     // simulation datapDataSim52,1602
    unsigned *     pDataSimCis;  // simulation data for CIspDataSimCis53,1654
    unsigned *     pDataSimCos;  // simulation data for COspDataSimCos54,1714
    int *          pData1;       // switching datapData155,1774
static inline unsigned * Gia_SwiData( Gia_ManSwi_t * p, int i )    { return p->pDataSim + i * p->nWords;    }Gia_SwiData58,1829
static inline unsigned * Gia_SwiDataCi( Gia_ManSwi_t * p, int i )  { return p->pDataSimCis + i * p->nWords; }Gia_SwiDataCi59,1939
static inline unsigned * Gia_SwiDataCo( Gia_ManSwi_t * p, int i )  { return p->pDataSimCos + i * p->nWords; }Gia_SwiDataCo60,2049
void Gia_ManSetDefaultParamsSwi( Gia_ParSwi_t * p )Gia_ManSetDefaultParamsSwi77,2653
Gia_ManSwi_t * Gia_ManSwiCreate( Gia_Man_t * pAig, Gia_ParSwi_t * pPars )Gia_ManSwiCreate100,3681
void Gia_ManSwiDelete( Gia_ManSwi_t * p )Gia_ManSwiDelete126,4486
static inline void Gia_ManSwiSimInfoRandom( Gia_ManSwi_t * p, unsigned * pInfo, int nProbNum )Gia_ManSwiSimInfoRandom147,4934
static inline void Gia_ManSwiSimInfoRandomShift( Gia_ManSwi_t * p, unsigned * pInfo, int nProbNum )Gia_ManSwiSimInfoRandomShift186,5968
static inline void Gia_ManSwiSimInfoZero( Gia_ManSwi_t * p, unsigned * pInfo )Gia_ManSwiSimInfoZero218,6837
static inline void Gia_ManSwiSimInfoOne( Gia_ManSwi_t * p, unsigned * pInfo )Gia_ManSwiSimInfoOne236,7229
static inline void Gia_ManSwiSimInfoCopy( Gia_ManSwi_t * p, unsigned * pInfo, unsigned * pInfo0 )Gia_ManSwiSimInfoCopy254,7621
static inline void Gia_ManSwiSimInfoCopyShift( Gia_ManSwi_t * p, unsigned * pInfo, unsigned * pInfo0 )Gia_ManSwiSimInfoCopyShift272,8040
static inline void Gia_ManSwiSimulateCi( Gia_ManSwi_t * p, Gia_Obj_t * pObj, int iCi )Gia_ManSwiSimulateCi290,8494
static inline void Gia_ManSwiSimulateCo( Gia_ManSwi_t * p, int iCo, Gia_Obj_t * pObj )Gia_ManSwiSimulateCo310,9013
static inline void Gia_ManSwiSimulateNode( Gia_ManSwi_t * p, Gia_Obj_t * pObj )Gia_ManSwiSimulateNode334,9662
static inline void Gia_ManSwiSimInfoInit( Gia_ManSwi_t * p )Gia_ManSwiSimInfoInit371,10747
static inline void Gia_ManSwiSimInfoTransfer( Gia_ManSwi_t * p, int nProbNum )Gia_ManSwiSimInfoTransfer391,11271
static inline void Gia_ManSwiSimInfoTransferShift( Gia_ManSwi_t * p, int nProbNum )Gia_ManSwiSimInfoTransferShift411,11902
static inline int Gia_ManSwiSimInfoCountOnes( Gia_ManSwi_t * p, int iPlace )Gia_ManSwiSimInfoCountOnes431,12548
static inline int Gia_ManSwiSimInfoCountTrans( Gia_ManSwi_t * p, int iPlace )Gia_ManSwiSimInfoCountTrans452,13059
static inline void Gia_ManSwiSimulateRound( Gia_ManSwi_t * p, int fCount )Gia_ManSwiSimulateRound473,13603
float Gia_ManSwiComputeSwitching( int nOnes, int nSimWords )Gia_ManSwiComputeSwitching522,15297
float Gia_ManSwiComputeProbOne( int nOnes, int nSimWords )Gia_ManSwiComputeProbOne539,15803
Vec_Int_t * Gia_ManSwiSimulate( Gia_Man_t * pAig, Gia_ParSwi_t * pPars )Gia_ManSwiSimulate556,16168
Vec_Int_t * Gia_ManComputeSwitchProbs( Gia_Man_t * pGia, int nFrames, int nPref, int fProbOne )Gia_ManComputeSwitchProbs658,19876
Vec_Int_t * Saig_ManComputeSwitchProbs( Aig_Man_t * pAig, int nFrames, int nPref, int fProbOne )Saig_ManComputeSwitchProbs684,21081
float Gia_ManEvaluateSwitching( Gia_Man_t * p )Gia_ManEvaluateSwitching719,22312
float Gia_ManComputeSwitching( Gia_Man_t * p, int nFrames, int nPref, int fProbOne )Gia_ManComputeSwitching781,24438
Vec_Flt_t * Gia_ManPrintOutputProb( Gia_Man_t * p )Gia_ManPrintOutputProb813,25376

src/aig/gia/giaUnate.c,573
static inline Vec_Int_t * Vec_IntFlopBit( Vec_Int_t * p )Vec_IntFlopBit45,1289
Vec_Wec_t * Gia_ManCheckUnateVec( Gia_Man_t * p, Vec_Int_t * vCiIds, Vec_Int_t * vCoIds )Gia_ManCheckUnateVec69,1920
int Gia_ManCheckUnate_rec( Gia_Man_t * p, int iObj )Gia_ManCheckUnate_rec120,4096
int Gia_ManCheckUnate( Gia_Man_t * p, int iCiId, int iCoId )Gia_ManCheckUnate138,4842
void Gia_ManCheckUnateVecTest( Gia_Man_t * p, int fVerbose )Gia_ManCheckUnateVecTest164,5771
void Gia_ManCheckUnateTest( Gia_Man_t * p, int fComputeAll, int fVerbose )Gia_ManCheckUnateTest210,7404

src/aig/aig/aigRet.c,11060
    RTM_VAL_NONE,                    // 0: non-existent valueRTM_VAL_NONE32,786
    RTM_VAL_ZERO,                    // 1: initial value 0RTM_VAL_ZERO33,848
    RTM_VAL_ONE,                     // 2: initial value 1RTM_VAL_ONE34,907
    RTM_VAL_VOID                     // 3: unused valueRTM_VAL_VOID35,966
} Rtm_Init_t;Rtm_Init_t36,1022
typedef struct Rtm_Man_t_    Rtm_Man_t;Rtm_Man_t38,1037
struct Rtm_Man_t_Rtm_Man_t_39,1077
    Vec_Ptr_t *      vObjs;          // retiming objectsvObjs42,1127
    Vec_Ptr_t *      vPis;           // PIs onlyvPis43,1184
    Vec_Ptr_t *      vPos;           // POs onlyvPos44,1233
    Aig_MmFlex_t *   pMem;           // the memory managerpMem45,1282
    unsigned *       pExtra;   pExtra48,1424
    int              nExtraCur;nExtraCur49,1456
    int              nExtraAlloc;nExtraAlloc50,1488
typedef struct Rtm_Edg_t_    Rtm_Edg_t;Rtm_Edg_t53,1526
struct Rtm_Edg_t_Rtm_Edg_t_54,1566
    unsigned long    nLats   :  12;  // the number of latchesnLats56,1586
    unsigned long    LData   :  20;  // the latches themselvesLData57,1648
typedef struct Rtm_Obj_t_    Rtm_Obj_t;Rtm_Obj_t60,1715
struct Rtm_Obj_t_Rtm_Obj_t_61,1755
    void *           pCopy;          // the copy of this objectpCopy63,1775
    unsigned long    Type    :  3;   // object typeType64,1839
    unsigned long    fMark   :  1;   // multipurpose markfMark65,1891
    unsigned long    fAuto   :  1;   // this object belongs to an autonomous componentfAuto66,1949
    unsigned long    fCompl0 :  1;   // complemented attribute of the first edgefCompl067,2036
    unsigned long    fCompl1 :  1;   // complemented attribute of the second edgefCompl168,2117
    unsigned long    nFanins :  8;   // the number of faninsnFanins69,2199
    unsigned         Num     : 17;   // the retiming number of this nodeNum70,2260
    int              Id;             // ID of this objectId71,2333
    int              Temp;           // temporary usageTemp72,2391
    int              nFanouts;       // the number of fanoutsnFanouts73,2447
    void *           pFanio[0];      // fanins and their edges (followed by fanouts and pointers to their edges)pFanio74,2509
static inline Rtm_Obj_t * Rtm_ObjFanin( Rtm_Obj_t * pObj, int i )        { return (Rtm_Obj_t *)pObj->pFanio[2*i];                     }Rtm_ObjFanin77,2626
static inline Rtm_Obj_t * Rtm_ObjFanout( Rtm_Obj_t * pObj, int i )       { return (Rtm_Obj_t *)pObj->pFanio[2*(pObj->nFanins+i)];     }Rtm_ObjFanout78,2762
static inline Rtm_Edg_t * Rtm_ObjEdge( Rtm_Obj_t * pObj, int i )         { return (Rtm_Edg_t *)(pObj->pFanio + 2*i + 1);              }Rtm_ObjEdge79,2898
static inline Rtm_Edg_t * Rtm_ObjFanoutEdge( Rtm_Obj_t * pObj, int i )   { return (Rtm_Edg_t *)pObj->pFanio[2*(pObj->nFanins+i) + 1]; }Rtm_ObjFanoutEdge80,3034
static inline Rtm_Init_t  Rtm_InitNot( Rtm_Init_t Val )                  { if ( Val == RTM_VAL_ZERO ) return (Rtm_Init_t)RTM_VAL_ONE; if ( Val == RTM_VAL_ONE ) return (Rtm_Init_t)RTM_VAL_ZERO; assert( 0 ); return (Rtm_Init_t)-1; }Rtm_InitNot82,3171
static inline Rtm_Init_t  Rtm_InitNotCond( Rtm_Init_t Val, int c )       { return c ? Rtm_InitNot(Val) : Val;                         }Rtm_InitNotCond83,3402
static inline Rtm_Init_t  Rtm_InitAnd(Rtm_Init_t ValA, Rtm_Init_t ValB ) { if ( ValA == RTM_VAL_ONE && ValB == RTM_VAL_ONE ) return (Rtm_Init_t)RTM_VAL_ONE;  if ( ValA == RTM_VAL_ZERO || ValB == RTM_VAL_ZERO ) return (Rtm_Init_t)RTM_VAL_ZERO; assert( 0 ); return (Rtm_Init_t)-1;   }Rtm_InitAnd84,3538
static inline int         Rtm_InitWordsNum( int nLats )                  { return (nLats >> 4) + ((nLats & 15) > 0); }Rtm_InitWordsNum86,3822
static inline int         Rtm_InitGetTwo( unsigned * p, int i )          { return (p[i>>4] >> ((i & 15)<<1)) & 3;    }Rtm_InitGetTwo87,3941
static inline void        Rtm_InitSetTwo( unsigned * p, int i, int val ) { p[i>>4] |= (val << ((i & 15)<<1));        }Rtm_InitSetTwo88,4060
static inline void        Rtm_InitXorTwo( unsigned * p, int i, int val ) { p[i>>4] ^= (val << ((i & 15)<<1));        }Rtm_InitXorTwo89,4179
static inline Rtm_Init_t  Rtm_ObjGetFirst1( Rtm_Edg_t * pEdge )          { return (Rtm_Init_t)(pEdge->LData & 3);                                    }Rtm_ObjGetFirst191,4299
static inline Rtm_Init_t  Rtm_ObjGetLast1( Rtm_Edg_t * pEdge )           { return (Rtm_Init_t)((pEdge->LData >> ((pEdge->nLats-1)<<1)) & 3);         }Rtm_ObjGetLast192,4450
static inline Rtm_Init_t  Rtm_ObjGetOne1( Rtm_Edg_t * pEdge, int i )     { assert( i < (int)pEdge->nLats ); return (Rtm_Init_t)((pEdge->LData >> (i << 1)) & 3);  }Rtm_ObjGetOne193,4601
static inline Rtm_Init_t  Rtm_ObjRemFirst1( Rtm_Edg_t * pEdge )          { int Val = pEdge->LData & 3; pEdge->LData >>= 2; assert(pEdge->nLats > 0); pEdge->nLats--; return (Rtm_Init_t)Val;  }Rtm_ObjRemFirst194,4765
static inline Rtm_Init_t  Rtm_ObjRemLast1( Rtm_Edg_t * pEdge )           { int Val = (pEdge->LData >> ((pEdge->nLats-1)<<1)) & 3; pEdge->LData ^= Val << ((pEdge->nLats-1)<<1); assert(pEdge->nLats > 0); pEdge->nLats--; return (Rtm_Init_t)Val;  }Rtm_ObjRemLast195,4957
static inline void        Rtm_ObjAddFirst1( Rtm_Edg_t * pEdge, Rtm_Init_t Val ) { assert( Val > 0 ); pEdge->LData = (pEdge->LData << 2) | Val;  pEdge->nLats++;   }Rtm_ObjAddFirst196,5202
static inline void        Rtm_ObjAddLast1( Rtm_Edg_t * pEdge, Rtm_Init_t Val )  { assert( Val > 0 ); pEdge->LData |= Val << (pEdge->nLats<<1);  pEdge->nLats++;   }Rtm_ObjAddLast197,5366
static inline Rtm_Init_t  Rtm_ObjGetFirst2( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                 { return (Rtm_Init_t)Rtm_InitGetTwo( p->pExtra + pEdge->LData, 0 );                }Rtm_ObjGetFirst299,5531
static inline Rtm_Init_t  Rtm_ObjGetLast2( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                  { return (Rtm_Init_t)Rtm_InitGetTwo( p->pExtra + pEdge->LData, pEdge->nLats - 1 ); }Rtm_ObjGetLast2100,5711
static inline Rtm_Init_t  Rtm_ObjGetOne2( Rtm_Man_t * p, Rtm_Edg_t * pEdge, int i )            { return (Rtm_Init_t)Rtm_InitGetTwo( p->pExtra + pEdge->LData, i );                }Rtm_ObjGetOne2101,5891
static inline Rtm_Init_t  Rtm_ObjRemLast2( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                  { Rtm_Init_t Val = Rtm_ObjGetLast2( p, pEdge );    Rtm_InitXorTwo( p->pExtra + pEdge->LData, pEdge->nLats - 1, Val ); pEdge->nLats--; return (Rtm_Init_t)Val; }Rtm_ObjRemLast2103,6151
static inline void        Rtm_ObjAddLast2( Rtm_Man_t * p, Rtm_Edg_t * pEdge, Rtm_Init_t Val )  { Rtm_InitSetTwo( p->pExtra + pEdge->LData, pEdge->nLats, Val );  pEdge->nLats++;  }Rtm_ObjAddLast2105,6502
static inline Rtm_Init_t  Rtm_ObjGetFirst( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                  { return pEdge->nLats > 10? Rtm_ObjGetFirst2(p, pEdge)  : Rtm_ObjGetFirst1(pEdge);   }Rtm_ObjGetFirst111,6942
static inline Rtm_Init_t  Rtm_ObjGetLast( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                   { return pEdge->nLats > 10? Rtm_ObjGetLast2(p, pEdge)   : Rtm_ObjGetLast1(pEdge);    }Rtm_ObjGetLast112,7124
static inline Rtm_Init_t  Rtm_ObjGetOne( Rtm_Man_t * p, Rtm_Edg_t * pEdge, int i )             { return pEdge->nLats > 10? Rtm_ObjGetOne2(p, pEdge, i) : Rtm_ObjGetOne1(pEdge, i);  }Rtm_ObjGetOne113,7306
static        Rtm_Init_t  Rtm_ObjRemFirst( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                  { Rtm_Init_t Res = pEdge->nLats > 10 ? Rtm_ObjRemFirst2(p, pEdge) : Rtm_ObjRemFirst1(pEdge); if ( pEdge->nLats == 10 ) Rtm_ObjTransferToSmall(p, pEdge); return Res; }Rtm_ObjRemFirst114,7488
static        Rtm_Init_t  Rtm_ObjRemLast( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                   { Rtm_Init_t Res = pEdge->nLats > 10 ? Rtm_ObjRemLast2(p, pEdge)  : Rtm_ObjRemLast1(pEdge);  if ( pEdge->nLats == 10 ) Rtm_ObjTransferToSmall(p, pEdge); return Res; }Rtm_ObjRemLast115,7750
static        void        Rtm_ObjAddFirst( Rtm_Man_t * p, Rtm_Edg_t * pEdge, Rtm_Init_t Val )  { if ( pEdge->nLats == 10 ) Rtm_ObjTransferToBig(p, pEdge); else if ( (pEdge->nLats & 15) == 15 ) Rtm_ObjTransferToBigger(p, pEdge); if ( pEdge->nLats >= 10 ) Rtm_ObjAddFirst2(p, pEdge, Val); else Rtm_ObjAddFirst1(pEdge, Val); }Rtm_ObjAddFirst116,8012
static        void        Rtm_ObjAddLast( Rtm_Man_t * p, Rtm_Edg_t * pEdge, Rtm_Init_t Val )   { if ( pEdge->nLats == 10 ) Rtm_ObjTransferToBig(p, pEdge); else if ( (pEdge->nLats & 15) == 15 ) Rtm_ObjTransferToBigger(p, pEdge); if ( pEdge->nLats >= 10 ) Rtm_ObjAddLast2(p, pEdge, Val);  else Rtm_ObjAddLast1(pEdge, Val);  }Rtm_ObjAddLast117,8336
#define Rtm_ManForEachPi(Rtm_ManForEachPi121,8698
#define Rtm_ManForEachPo(Rtm_ManForEachPo124,8874
#define Rtm_ManForEachObj(Rtm_ManForEachObj127,9078
#define Rtm_ObjForEachFanin(Rtm_ObjForEachFanin130,9249
#define Rtm_ObjForEachFanout(Rtm_ObjForEachFanout133,9452
#define Rtm_ObjForEachFaninEdge(Rtm_ObjForEachFaninEdge136,9662
#define Rtm_ObjForEachFanoutEdge(Rtm_ObjForEachFanoutEdge139,9868
void Rtm_ObjTransferToSmall( Rtm_Man_t * p, Rtm_Edg_t * pEdge ) Rtm_ObjTransferToSmall157,10536
void Rtm_ObjTransferToBig( Rtm_Man_t * p, Rtm_Edg_t * pEdge ) Rtm_ObjTransferToBig174,10954
void Rtm_ObjTransferToBigger( Rtm_Man_t * p, Rtm_Edg_t * pEdge ) Rtm_ObjTransferToBigger198,11636
Rtm_Init_t  Rtm_ObjRemFirst2( Rtm_Man_t * p, Rtm_Edg_t * pEdge )                 Rtm_ObjRemFirst2226,12484
void Rtm_ObjAddFirst2( Rtm_Man_t * p, Rtm_Edg_t * pEdge, Rtm_Init_t Val ) Rtm_ObjAddFirst2252,13141
void Rtm_PrintEdge( Rtm_Man_t * p, Rtm_Edg_t * pEdge ) Rtm_PrintEdge277,13736
Rtm_Man_t * Rtm_ManAlloc( Aig_Man_t * p )Rtm_ManAlloc302,14354
void Rtm_ManFree( Rtm_Man_t * p )Rtm_ManFree327,15032
int Rtm_ManLatchMax( Rtm_Man_t * p )Rtm_ManLatchMax348,15518
Rtm_Obj_t * Rtm_ObjAlloc( Rtm_Man_t * pRtm, int nFanins, int nFanouts )Rtm_ObjAlloc379,16257
void Rtm_ObjAddFanin( Rtm_Obj_t * pObj, Rtm_Obj_t * pFanin, int fCompl )Rtm_ObjAddFanin404,17040
int Rtm_ObjCheckRetimeFwd( Rtm_Obj_t * pObj )Rtm_ObjCheckRetimeFwd433,17946
int Rtm_ObjCheckRetimeBwd( Rtm_Obj_t * pObj )Rtm_ObjCheckRetimeBwd454,18422
int Rtm_ObjGetDegreeFwd( Rtm_Obj_t * pObj )Rtm_ObjGetDegreeFwd475,18899
int Rtm_ObjGetDegreeBwd( Rtm_Obj_t * pObj )Rtm_ObjGetDegreeBwd495,19394
void Rtm_ObjRetimeFwd( Rtm_Man_t * pRtm, Rtm_Obj_t * pObj )Rtm_ObjRetimeFwd515,19877
void Rtm_ObjRetimeBwd( Rtm_Man_t * pRtm, Rtm_Obj_t * pObj )Rtm_ObjRetimeBwd545,20764
void Rtm_ObjMarkAutoFwd_rec( Rtm_Obj_t * pObj )Rtm_ObjMarkAutoFwd_rec569,21417
int Rtm_ManMarkAutoFwd( Rtm_Man_t * pRtm )Rtm_ManMarkAutoFwd591,21929
void Rtm_ObjMarkAutoBwd_rec( Rtm_Obj_t * pObj )Rtm_ObjMarkAutoBwd_rec621,22725
int Rtm_ManMarkAutoBwd( Rtm_Man_t * pRtm )Rtm_ManMarkAutoBwd643,23233
Rtm_Man_t * Rtm_ManFromAig( Aig_Man_t * p )Rtm_ManFromAig675,24134
Aig_Obj_t * Rtm_ManToAig_rec( Aig_Man_t * pNew, Rtm_Man_t * pRtm, Rtm_Obj_t * pObjRtm, int * pLatches )Rtm_ManToAig_rec729,26120
Aig_Man_t * Rtm_ManToAig( Rtm_Man_t * pRtm )Rtm_ManToAig765,27288
Aig_Man_t * Rtm_ManRetime( Aig_Man_t * p, int fForward, int nStepsMax, int fVerbose )Rtm_ManRetime834,29775

src/aig/aig/aigTable.c,805
static unsigned long Aig_Hash( Aig_Obj_t * pObj, int TableSize ) Aig_Hash31,787
static Aig_Obj_t ** Aig_TableFind( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_TableFind42,1171
void Aig_TableResize( Aig_Man_t * p )Aig_TableResize69,2129
Aig_Obj_t * Aig_TableLookup( Aig_Man_t * p, Aig_Obj_t * pGhost )Aig_TableLookup116,3744
Aig_Obj_t * Aig_TableLookupTwo( Aig_Man_t * p, Aig_Obj_t * pFanin0, Aig_Obj_t * pFanin1 )Aig_TableLookupTwo146,4809
void Aig_TableInsert( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_TableInsert173,5713
void Aig_TableDelete( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_TableDelete196,6356
int Aig_TableCountEntries( Aig_Man_t * p )Aig_TableCountEntries218,6933
void Aig_TableProfile( Aig_Man_t * p )Aig_TableProfile239,7441
void Aig_TableClear( Aig_Man_t * p )Aig_TableClear265,8100

src/aig/aig/aigDup.c,2887
Aig_Man_t * Aig_ManDupSimple( Aig_Man_t * p )Aig_ManDupSimple46,1326
Aig_Man_t * Aig_ManDupSimpleWithHints( Aig_Man_t * p, Vec_Int_t * vHints )Aig_ManDupSimpleWithHints107,3182
Aig_Obj_t * Aig_ManDupSimpleDfs_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManDupSimpleDfs_rec157,4930
Aig_Man_t * Aig_ManDupSimpleDfs( Aig_Man_t * p )Aig_ManDupSimpleDfs184,6048
Aig_Man_t * Aig_ManDupSimpleDfsPart( Aig_Man_t * p, Vec_Ptr_t * vPis, Vec_Ptr_t * vPos )Aig_ManDupSimpleDfsPart240,7826
Aig_Man_t * Aig_ManDupOrdered( Aig_Man_t * p )Aig_ManDupOrdered277,9045
Aig_Man_t * Aig_ManDupCof( Aig_Man_t * p, int iInput, int Value )Aig_ManDupCof345,11230
Aig_Man_t * Aig_ManDupTrim( Aig_Man_t * p )Aig_ManDupTrim413,13324
Aig_Man_t * Aig_ManDupExor( Aig_Man_t * p )Aig_ManDupExor462,15085
Aig_Obj_t * Aig_ManDupDfs_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManDupDfs_rec529,17055
Aig_Man_t * Aig_ManDupDfs( Aig_Man_t * p )Aig_ManDupDfs563,18362
Vec_Ptr_t * Aig_ManOrderPios( Aig_Man_t * p, Aig_Man_t * pOrder )Aig_ManOrderPios626,20654
Aig_Obj_t * Aig_ManDupDfsGuided_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManDupDfsGuided_rec657,21578
Aig_Man_t * Aig_ManDupDfsGuided( Aig_Man_t * p, Vec_Ptr_t * vPios )Aig_ManDupDfsGuided694,22942
Aig_Man_t * Aig_ManDupLevelized( Aig_Man_t * p )Aig_ManDupLevelized763,25443
Aig_Man_t * Aig_ManDupWithoutPos( Aig_Man_t * p )Aig_ManDupWithoutPos835,27922
Aig_Man_t * Aig_ManDupFlopsOnly( Aig_Man_t * p )Aig_ManDupFlopsOnly871,29056
static inline Aig_Obj_t * Aig_ObjGetRepres( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjGetRepres899,29804
static inline Aig_Obj_t * Aig_ObjChild0Repres( Aig_Man_t * p, Aig_Obj_t * pObj ) { return Aig_NotCond( Aig_ObjGetRepres(p, Aig_ObjFanin0(pObj)), Aig_ObjFaninC0(pObj) ); }Aig_ObjChild0Repres906,30075
static inline Aig_Obj_t * Aig_ObjChild1Repres( Aig_Man_t * p, Aig_Obj_t * pObj ) { return Aig_NotCond( Aig_ObjGetRepres(p, Aig_ObjFanin1(pObj)), Aig_ObjFaninC1(pObj) ); }Aig_ObjChild1Repres907,30246
Aig_Man_t * Aig_ManDupRepres( Aig_Man_t * p )Aig_ManDupRepres920,30702
Aig_Obj_t * Aig_ManDupRepres_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManDupRepres_rec969,32248
Aig_Man_t * Aig_ManDupRepresDfs( Aig_Man_t * p )Aig_ManDupRepresDfs995,33161
Aig_Man_t * Aig_ManCreateMiter( Aig_Man_t * p1, Aig_Man_t * p2, int Oper )Aig_ManCreateMiter1049,34813
Aig_Man_t * Aig_ManDupOrpos( Aig_Man_t * p, int fAddRegs )Aig_ManDupOrpos1099,36820
Aig_Man_t * Aig_ManDupOneOutput( Aig_Man_t * p, int iPoNum, int fAddRegs )Aig_ManDupOneOutput1152,38478
Aig_Man_t * Aig_ManDupUnsolvedOutputs( Aig_Man_t * p, int fAddRegs )Aig_ManDupUnsolvedOutputs1199,39992
Aig_Man_t * Aig_ManDupArray( Vec_Ptr_t * vArray )Aig_ManDupArray1255,41789
Aig_Man_t * Aig_ManDupNodes( Aig_Man_t * pMan, Vec_Ptr_t * vArray )Aig_ManDupNodes1302,43302

src/aig/aig/aigWin.c,380
static inline int Aig_NodeGetLeafCostOne( Aig_Obj_t * pNode, int nFanoutLimit )Aig_NodeGetLeafCostOne46,1407
int Aig_ManFindCut_int( Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited, int nSizeLimit, int nFanoutLimit )Aig_ManFindCut_int80,2684
void Aig_ManFindCut( Aig_Obj_t * pRoot, Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited, int nSizeLimit, int nFanoutLimit )Aig_ManFindCut145,4686

src/aig/aig/aigInter.c,223
void Aig_ManInterFast( Aig_Man_t * pManOn, Aig_Man_t * pManOff, int fVerbose )Aig_ManInterFast51,1346
Aig_Man_t * Aig_ManInter( Aig_Man_t * pManOn, Aig_Man_t * pManOff, int fRelation, int fVerbose )Aig_ManInter149,4429

src/aig/aig/aigFact.c,2479
void Aig_ManFindImplications_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vImplics )Aig_ManFindImplications_rec46,1205
Vec_Ptr_t * Aig_ManFindImplications( Aig_Man_t * p, Aig_Obj_t * pNode )Aig_ManFindImplications70,2042
int Aig_ManFindConeOverlap_rec( Aig_Man_t * p, Aig_Obj_t * pNode )Aig_ManFindConeOverlap_rec89,2547
int Aig_ManFindConeOverlap( Aig_Man_t * p, Vec_Ptr_t * vImplics, Aig_Obj_t * pNode )Aig_ManFindConeOverlap116,3310
Aig_Obj_t * Aig_ManDeriveNewCone_rec( Aig_Man_t * p, Aig_Obj_t * pNode )Aig_ManDeriveNewCone_rec140,4040
Aig_Obj_t * Aig_ManDeriveNewCone( Aig_Man_t * p, Vec_Ptr_t * vImplics, Aig_Obj_t * pNode )Aig_ManDeriveNewCone163,4843
Aig_Obj_t * Aig_ManFactorAlgebraic_int( Aig_Man_t * p, Aig_Obj_t * pPoA, Aig_Obj_t * pPoB, int Value )Aig_ManFactorAlgebraic_int190,5764
Aig_Obj_t * Aig_ManFactorAlgebraic( Aig_Man_t * p, int iPoA, int iPoB, int Value )Aig_ManFactorAlgebraic230,7363
void Aig_ManFactorAlgebraicTest( Aig_Man_t * p )Aig_ManFactorAlgebraicTest249,7937
Vec_Ptr_t * Aig_SuppMinPerform( Aig_Man_t * p, Vec_Ptr_t * vOrGate, Vec_Ptr_t * vNodes, Vec_Ptr_t * vSupp )Aig_SuppMinPerform287,8776
Aig_Obj_t * Aig_SuppMinReconstruct( Aig_Man_t * p, Vec_Ptr_t * vCofs, Vec_Ptr_t * vNodes, Vec_Ptr_t * vSupp )Aig_SuppMinReconstruct348,11502
int Aig_SuppMinGateIsInSupport( Aig_Man_t * p, Vec_Ptr_t * vOrGate, Vec_Ptr_t * vSupp )Aig_SuppMinGateIsInSupport377,12569
Vec_Ptr_t * Aig_SuppMinCollectSupport( Aig_Man_t * p, Vec_Ptr_t * vNodes )Aig_SuppMinCollectSupport402,13254
void Aig_SuppMinCollectCone_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Aig_SuppMinCollectCone_rec439,14294
Vec_Ptr_t * Aig_SuppMinCollectCone( Aig_Man_t * p, Aig_Obj_t * pRoot )Aig_SuppMinCollectCone464,15153
int Aig_SuppMinHighlightCone_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_SuppMinHighlightCone_rec486,15778
int Aig_SuppMinHighlightCone( Aig_Man_t * p, Aig_Obj_t * pRoot, Vec_Ptr_t * vOrGate )Aig_SuppMinHighlightCone515,16700
void Aig_SuppMinCollectSuper_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vSuper )Aig_SuppMinCollectSuper_rec542,17510
Vec_Ptr_t * Aig_SuppMinCollectSuper( Aig_Obj_t * pObj )Aig_SuppMinCollectSuper566,18239
Aig_Obj_t * Aig_ManSupportMinimization( Aig_Man_t * p, Aig_Obj_t * pCond, Aig_Obj_t * pFunc, int * pStatus )Aig_ManSupportMinimization592,19089
void Aig_ManSupportMinimizationTest()Aig_ManSupportMinimizationTest681,21888
void Aig_ManSupportMinimizationTest2()Aig_ManSupportMinimizationTest2701,22633

src/aig/aig/aigCuts.c,1888
Aig_ManCut_t * Aig_ManCutStart( Aig_Man_t * pMan, int nCutsMax, int nLeafMax, int fTruth, int fVerbose )Aig_ManCutStart46,1292
void Aig_ManCutStop( Aig_ManCut_t * p )Aig_ManCutStop86,2633
void Aig_CutPrint( Aig_Cut_t * pCut )Aig_CutPrint105,3041
void Aig_ObjCutPrint( Aig_ManCut_t * p, Aig_Obj_t * pObj )Aig_ObjCutPrint125,3470
int Aig_ManCutCount( Aig_ManCut_t * p, int * pnCutsK )Aig_ManCutCount147,4009
static inline int Aig_CutFindCost( Aig_ManCut_t * p, Aig_Cut_t * pCut )Aig_CutFindCost177,4744
static inline float Aig_CutFindCost2( Aig_ManCut_t * p, Aig_Cut_t * pCut )Aig_CutFindCost2198,5280
static inline Aig_Cut_t * Aig_CutFindFree( Aig_ManCut_t * p, Aig_Obj_t * pObj )Aig_CutFindFree220,5826
static inline unsigned Aig_CutTruthPhase( Aig_Cut_t * pCut, Aig_Cut_t * pCut1 )Aig_CutTruthPhase248,6551
unsigned * Aig_CutComputeTruth( Aig_ManCut_t * p, Aig_Cut_t * pCut, Aig_Cut_t * pCut0, Aig_Cut_t * pCut1, int fCompl0, int fCompl1 )Aig_CutComputeTruth276,7245
int Aig_CutSupportMinimize( Aig_ManCut_t * p, Aig_Cut_t * pCut )Aig_CutSupportMinimize307,8547
static inline int Aig_CutCheckDominance( Aig_Cut_t * pDom, Aig_Cut_t * pCut )Aig_CutCheckDominance344,9755
int Aig_CutFilter( Aig_ManCut_t * p, Aig_Obj_t * pObj, Aig_Cut_t * pCut )Aig_CutFilter370,10474
static inline int Aig_CutMergeOrdered( Aig_ManCut_t * p, Aig_Cut_t * pC0, Aig_Cut_t * pC1, Aig_Cut_t * pC )Aig_CutMergeOrdered421,11845
int Aig_CutMerge( Aig_ManCut_t * p, Aig_Cut_t * pCut0, Aig_Cut_t * pCut1, Aig_Cut_t * pCut )Aig_CutMerge507,14251
Aig_Cut_t * Aig_ObjPrepareCuts( Aig_ManCut_t * p, Aig_Obj_t * pObj, int fTriv )Aig_ObjPrepareCuts536,14941
void Aig_ObjComputeCuts( Aig_ManCut_t * p, Aig_Obj_t * pObj, int fTriv )Aig_ObjComputeCuts576,16063
Aig_ManCut_t * Aig_ComputeCuts( Aig_Man_t * pAig, int nCutsMax, int nLeafMax, int fTruth, int fVerbose )Aig_ComputeCuts631,17869

src/aig/aig/aigPart.c,5241
typedef struct Part_Man_t_     Part_Man_t;Part_Man_t32,818
struct Part_Man_t_Part_Man_t_33,861
    int              nChunkSize;    // the size of one chunk of memory (~1 MB)nChunkSize35,882
    int              nStepSize;     // the step size in saving memory (~64 bytes)nStepSize36,961
    char *           pFreeBuf;      // the pointer to free memorypFreeBuf37,1043
    int              nFreeSize;     // the size of remaining free memorynFreeSize38,1109
    Vec_Ptr_t *      vMemory;       // the memory allocatedvMemory39,1182
    Vec_Ptr_t *      vFree;         // the vector of free pieces of memoryvFree40,1242
typedef struct Part_One_t_     Part_One_t;Part_One_t43,1321
struct Part_One_t_Part_One_t_44,1364
    int              nRefs;         // the number of referencesnRefs46,1385
    int              nOuts;         // the number of outputsnOuts47,1449
    int              nOutsAlloc;    // the array sizenOutsAlloc48,1510
    int              pOuts[0];      // the array of outputspOuts49,1564
static inline int    Part_SizeType( int nSize, int nStepSize )     { return nSize / nStepSize + ((nSize % nStepSize) > 0); }Part_SizeType52,1628
static inline char * Part_OneNext( char * pPart )                  { return *((char **)pPart);                             }Part_OneNext53,1753
static inline void   Part_OneSetNext( char * pPart, char * pNext ) { *((char **)pPart) = pNext;                            }Part_OneSetNext54,1878
Part_Man_t * Part_ManStart( int nChunkSize, int nStepSize )Part_ManStart71,2483
void Part_ManStop( Part_Man_t * p )Part_ManStop94,3064
char * Part_ManFetch( Part_Man_t * p, int nSize )Part_ManFetch116,3579
void Part_ManRecycle( Part_Man_t * p, char * pMemory, int nSize )Part_ManRecycle153,4624
static inline Part_One_t * Part_ManFetchEntry( Part_Man_t * p, int nWords, int nRefs )Part_ManFetchEntry173,5205
static inline void Part_ManRecycleEntry( Part_Man_t * p, Part_One_t * pEntry )Part_ManRecycleEntry194,5786
Part_One_t * Part_ManMergeEntry( Part_Man_t * pMan, Part_One_t * p1, Part_One_t * p2, int nRefs )Part_ManMergeEntry212,6324
Vec_Int_t * Part_ManTransferEntry( Part_One_t * p )Part_ManTransferEntry251,7444
Vec_Ptr_t * Aig_ManSupports( Aig_Man_t * pMan )Aig_ManSupports273,8109
void Aig_ManSupportsTest( Aig_Man_t * pMan )Aig_ManSupportsTest366,11130
Vec_Ptr_t * Aig_ManSupportsInverse( Aig_Man_t * p )Aig_ManSupportsInverse385,11663
Vec_Ptr_t * Aig_ManSupportsRegisters( Aig_Man_t * p )Aig_ManSupportsRegisters418,12683
unsigned * Aig_ManSuppCharStart( Vec_Int_t * vOne, int nPis )Aig_ManSuppCharStart470,14242
void Aig_ManSuppCharAdd( unsigned * pBuffer, Vec_Int_t * vOne, int nPis )Aig_ManSuppCharAdd496,14911
int Aig_ManSuppCharCommon( unsigned * pBuffer, Vec_Int_t * vOne )Aig_ManSuppCharCommon517,15436
int Aig_ManPartitionSmartFindPart( Vec_Ptr_t * vPartSuppsAll, Vec_Ptr_t * vPartsAll, Vec_Ptr_t * vPartSuppsBit, int nSuppSizeLimit, Vec_Int_t * vOne )Aig_ManPartitionSmartFindPart536,15909
void Aig_ManPartitionPrint( Aig_Man_t * p, Vec_Ptr_t * vPartsAll, Vec_Ptr_t * vPartSuppsAll )Aig_ManPartitionPrint585,17539
void Aig_ManPartitionCompact( Vec_Ptr_t * vPartsAll, Vec_Ptr_t * vPartSuppsAll, int nSuppSizeLimit )Aig_ManPartitionCompact614,18398
Vec_Ptr_t * Aig_ManPartitionSmart( Aig_Man_t * p, int nSuppSizeLimit, int fVerbose, Vec_Ptr_t ** pvPartSupps )Aig_ManPartitionSmart686,20654
Vec_Ptr_t * Aig_ManPartitionSmartRegisters( Aig_Man_t * pAig, int nSuppSizeLimit, int fVerbose )Aig_ManPartitionSmartRegisters811,24798
Vec_Ptr_t * Aig_ManPartitionNaive( Aig_Man_t * p, int nPartSize )Aig_ManPartitionNaive941,29088
Aig_Obj_t * Aig_ManDupPart_rec( Aig_Man_t * pNew, Aig_Man_t * pOld, Aig_Obj_t * pObj, Vec_Int_t * vSuppMap )Aig_ManDupPart_rec966,29767
Vec_Ptr_t * Aig_ManDupPart( Aig_Man_t * pNew, Aig_Man_t * pOld, Vec_Int_t * vPart, Vec_Int_t * vSuppMap, int fInverse )Aig_ManDupPart995,30868
void Aig_ManDupPartAll_rec( Aig_Man_t * pNew, Aig_Man_t * pOld, Aig_Obj_t * pObj )Aig_ManDupPartAll_rec1062,32878
Aig_Man_t * Aig_ManDupPartAll( Aig_Man_t * pOld, Vec_Int_t * vPart )Aig_ManDupPartAll1098,34026
void Aig_ManSupportNodes_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Int_t * vSupport )Aig_ManSupportNodes_rec1131,34896
Vec_Ptr_t * Aig_ManSupportNodes( Aig_Man_t * p, Vec_Ptr_t * vParts )Aig_ManSupportNodes1156,35607
Vec_Ptr_t * Aig_ManMiterPartitioned( Aig_Man_t * p1, Aig_Man_t * p2, int nPartSize, int fSmart )Aig_ManMiterPartitioned1189,36701
Aig_Man_t * Aig_ManChoicePartitioned( Vec_Ptr_t * vAigs, int nPartSize, int nConfMax, int nLevelMax, int fVerbose )Aig_ManChoicePartitioned1247,38691
Aig_Man_t * Aig_ManFraigPartitioned( Aig_Man_t * pAig, int nPartSize, int nConfMax, int nLevelMax, int fVerbose )Aig_ManFraigPartitioned1379,43781
static inline void Aig_ObjSetRepr_( Aig_Man_t * p, Aig_Obj_t * pNode1, Aig_Obj_t * pNode2 )Aig_ObjSetRepr_1450,46122
void Aig_ManChoiceConstructiveOne( Aig_Man_t * pNew, Aig_Man_t * pPrev, Aig_Man_t * pThis )Aig_ManChoiceConstructiveOne1478,47047
void Aig_ManChoiceEval( Aig_Man_t * p )Aig_ManChoiceEval1528,48934
Aig_Man_t * Aig_ManChoiceConstructive( Vec_Ptr_t * vAigs, int fVerbose )Aig_ManChoiceConstructive1564,49976

src/aig/aig/aigRetF.c,254
int Aig_ManRetimeMark_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManRetimeMark_rec45,1271
void Aig_ManRetimeMark( Aig_Man_t * p )Aig_ManRetimeMark73,2092
Aig_Man_t * Aig_ManRetimeFrontier( Aig_Man_t * p, int nStepsMax )Aig_ManRetimeFrontier125,3458

src/aig/aig/aigMan.c,1113
Aig_Man_t * Aig_ManStart( int nNodesMax )Aig_ManStart47,1359
Aig_Man_t * Aig_ManStartFrom( Aig_Man_t * p )Aig_ManStartFrom92,2720
Aig_Obj_t * Aig_ManDup_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManDup_rec123,3529
Aig_Man_t * Aig_ManExtractMiter( Aig_Man_t * p, Aig_Obj_t * pNode1, Aig_Obj_t * pNode2 )Aig_ManExtractMiter147,4342
void Aig_ManStop( Aig_Man_t * p )Aig_ManStop187,5604
void Aig_ManStopP( Aig_Man_t ** p )Aig_ManStopP246,7345
int Aig_ManCleanup( Aig_Man_t * p )Aig_ManCleanup265,7797
int Aig_ManAntiCleanup( Aig_Man_t * p )Aig_ManAntiCleanup293,8668
int Aig_ManCiCleanup( Aig_Man_t * p )Aig_ManCiCleanup314,9253
int Aig_ManCoCleanup( Aig_Man_t * p )Aig_ManCoCleanup345,10215
void Aig_ManPrintStats( Aig_Man_t * p )Aig_ManPrintStats379,11259
void Aig_ManReportImprovement( Aig_Man_t * p, Aig_Man_t * pNew )Aig_ManReportImprovement415,12463
void Aig_ManSetRegNum( Aig_Man_t * p, int nRegs )Aig_ManSetRegNum438,13319
void Aig_ManFlipFirstPo( Aig_Man_t * p )Aig_ManFlipFirstPo457,13743
void * Aig_ManReleaseData( Aig_Man_t * p )Aig_ManReleaseData473,14066

src/aig/aig/aigRepr.c,2144
void Aig_ManReprStart( Aig_Man_t * p, int nIdMax )Aig_ManReprStart45,1259
void Aig_ManReprStop( Aig_Man_t * p )Aig_ManReprStop65,1806
void Aig_ObjCreateRepr( Aig_Man_t * p, Aig_Obj_t * pNode1, Aig_Obj_t * pNode2 )Aig_ObjCreateRepr83,2194
static inline void Aig_ObjSetRepr_( Aig_Man_t * p, Aig_Obj_t * pNode1, Aig_Obj_t * pNode2 )Aig_ObjSetRepr_105,2812
static inline Aig_Obj_t * Aig_ObjFindRepr( Aig_Man_t * p, Aig_Obj_t * pNode )Aig_ObjFindRepr131,3532
static inline void Aig_ObjClearRepr( Aig_Man_t * p, Aig_Obj_t * pNode )Aig_ObjClearRepr151,4102
static inline Aig_Obj_t * Aig_ObjFindReprTransitive( Aig_Man_t * p, Aig_Obj_t * pNode )Aig_ObjFindReprTransitive170,4594
static inline Aig_Obj_t * Aig_ObjGetRepr( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjGetRepr190,5157
static inline Aig_Obj_t * Aig_ObjChild0Repr( Aig_Man_t * p, Aig_Obj_t * pObj ) { return Aig_NotCond( Aig_ObjGetRepr(p, Aig_ObjFanin0(pObj)), Aig_ObjFaninC0(pObj) ); }Aig_ObjChild0Repr197,5430
static inline Aig_Obj_t * Aig_ObjChild1Repr( Aig_Man_t * p, Aig_Obj_t * pObj ) { return Aig_NotCond( Aig_ObjGetRepr(p, Aig_ObjFanin1(pObj)), Aig_ObjFaninC1(pObj) ); }Aig_ObjChild1Repr198,5597
void Aig_ManTransferRepr( Aig_Man_t * pNew, Aig_Man_t * pOld )Aig_ManTransferRepr211,6049
Aig_Obj_t * Aig_ManDupRepr_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManDupRepr_rec241,7127
Aig_Man_t * Aig_ManDupRepr( Aig_Man_t * p, int fOrdered )Aig_ManDupRepr267,8032
Aig_Man_t * Aig_ManDupReprBasic( Aig_Man_t * p )Aig_ManDupReprBasic323,9838
int Aig_ManRemapRepr( Aig_Man_t * p )Aig_ManRemapRepr351,10654
int Aig_ManCountReprs( Aig_Man_t * p )Aig_ManCountReprs378,11351
int Aig_ObjCheckTfi_rec( Aig_Man_t * p, Aig_Obj_t * pNode, Aig_Obj_t * pOld )Aig_ObjCheckTfi_rec400,11861
int Aig_ObjCheckTfi( Aig_Man_t * p, Aig_Obj_t * pNew, Aig_Obj_t * pOld )Aig_ObjCheckTfi435,12900
Aig_Man_t * Aig_ManRehash( Aig_Man_t * p )Aig_ManRehash454,13459
void Aig_ManMarkValidChoices( Aig_Man_t * p )Aig_ManMarkValidChoices481,14268
int Aig_TransferMappedClasses( Aig_Man_t * pAig, Aig_Man_t * pPart, int * pMapBack )Aig_TransferMappedClasses533,15736

src/aig/aig/aig.h,25445
#define ABC__aig__aig__aig_hABC__aig__aig__aig_h22,518
typedef struct Aig_Man_t_            Aig_Man_t;Aig_Man_t50,1379
typedef struct Aig_Obj_t_            Aig_Obj_t;Aig_Obj_t51,1427
typedef struct Aig_MmFixed_t_        Aig_MmFixed_t;    Aig_MmFixed_t52,1475
typedef struct Aig_MmFlex_t_         Aig_MmFlex_t;     Aig_MmFlex_t53,1531
typedef struct Aig_MmStep_t_         Aig_MmStep_t;     Aig_MmStep_t54,1587
    AIG_OBJ_NONE,                    // 0: non-existent objectAIG_OBJ_NONE58,1676
    AIG_OBJ_CONST1,                  // 1: constant 1 AIG_OBJ_CONST159,1739
    AIG_OBJ_CI,                      // 2: combinational inputAIG_OBJ_CI60,1794
    AIG_OBJ_CO,                      // 3: combinational outputAIG_OBJ_CO61,1857
    AIG_OBJ_BUF,                     // 4: buffer nodeAIG_OBJ_BUF62,1921
    AIG_OBJ_AND,                     // 5: AND nodeAIG_OBJ_AND63,1976
    AIG_OBJ_EXOR,                    // 6: EXOR nodeAIG_OBJ_EXOR64,2028
    AIG_OBJ_VOID                     // 7: unused objectAIG_OBJ_VOID65,2081
} Aig_Type_t;Aig_Type_t66,2138
struct Aig_Obj_t_  // 8 wordsAig_Obj_t_69,2169
        Aig_Obj_t *  pNext;          // strashing tablepNext72,2238
        int          CioId;          // 0-based number of CI/COCioId73,2294
    Aig_Obj_t *      pFanin0;        // faninpFanin075,2365
    Aig_Obj_t *      pFanin1;        // faninpFanin176,2411
    unsigned int     Type    :  3;   // object typeType77,2457
    unsigned int     fPhase  :  1;   // value under 000...0 patternfPhase78,2509
    unsigned int     fMarkA  :  1;   // multipurpose maskfMarkA79,2577
    unsigned int     fMarkB  :  1;   // multipurpose maskfMarkB80,2635
    unsigned int     nRefs   : 26;   // reference count nRefs81,2693
    unsigned         Level   : 24;   // the level of this nodeLevel82,2750
    unsigned         nCuts   :  8;   // the number of cutsnCuts83,2813
    int              TravId;         // unique ID of last traversal involving the nodeTravId84,2872
    int              Id;             // unique ID of the nodeId85,2959
        void *       pData;pData87,3093
        int          iData;iData88,3121
        float        dData;dData89,3149
struct Aig_Man_t_Aig_Man_t_94,3207
    char *           pName;          // the design namepName96,3227
    char *           pSpec;          // the input file namepSpec97,3283
    Vec_Ptr_t *      vCis;           // the array of PIsvCis99,3360
    Vec_Ptr_t *      vCos;           // the array of POsvCos100,3417
    Vec_Ptr_t *      vObjs;          // the array of all nodes (optional)vObjs101,3474
    Vec_Ptr_t *      vBufs;          // the array of buffersvBufs102,3548
    Aig_Obj_t *      pConst1;        // the constant 1 nodepConst1103,3609
    Aig_Obj_t        Ghost;          // the ghost nodeGhost104,3669
    int              nRegs;          // the number of registers (registers are last POs)nRegs105,3724
    int              nTruePis;       // the number of true primary inputsnTruePis106,3813
    int              nTruePos;       // the number of true primary outputsnTruePos107,3887
    int              nAsserts;       // the number of asserts among POs (asserts are first POs)nAsserts108,3962
    int              nConstrs;       // the number of constraints (model checking only)nConstrs109,4058
    int              nBarBufs;       // the number of barrier buffersnBarBufs110,4146
    int              nObjs[AIG_OBJ_VOID];// the number of objects by typenObjs112,4241
    int              nDeleted;       // the number of deleted objectsnDeleted113,4315
    Aig_Obj_t **     pTable;         // structural hash tablepTable115,4414
    int              nTableSize;     // structural hash table sizenTableSize116,4476
    int *            pFanData;       // the database to store fanout informationpFanData118,4576
    int              nFansAlloc;     // the size of fanout representationnFansAlloc119,4657
    Vec_Vec_t *      vLevels;        // used to update timing informationvLevels120,4731
    int              nBufReplaces;   // the number of times replacement led to a buffernBufReplaces121,4805
    int              nBufFixes;      // the number of times buffers were propagatednBufFixes122,4893
    int              nBufMax;        // the maximum number of buffers during computationnBufMax123,4977
    unsigned *       pOrderData;pOrderData125,5091
    int              nOrderAlloc;nOrderAlloc126,5124
    int              iPrev;iPrev127,5158
    int              iNext;iNext128,5186
    int              nAndTotal;nAndTotal129,5214
    int              nAndPrev;nAndPrev130,5246
    Aig_Obj_t **     pEquivs;        // linked list of equivalent nodes (when choices are used)pEquivs132,5300
    Aig_Obj_t **     pReprs;         // representatives of each nodepReprs133,5396
    int              nReprsAlloc;    // the number of allocated representativesnReprsAlloc134,5465
    Aig_MmFixed_t *  pMemObjs;       // memory manager for objectspMemObjs136,5573
    Vec_Int_t *      vLevelR;        // the reverse level of the nodesvLevelR137,5640
    int              nLevelMax;      // maximum number of levelsnLevelMax138,5711
    void *           pData;          // the temporary datapData139,5776
    void *           pData2;         // the temporary datapData2140,5835
    int              nTravIds;       // the current traversal IDnTravIds141,5894
    int              fCatchExor;     // enables EXOR nodesfCatchExor142,5959
    int              fAddStrash;     // performs additional strashingfAddStrash143,6018
    Aig_Obj_t **     pObjCopies;     // mapping of AIG nodes into FRAIG nodespObjCopies144,6088
    void (*pImpFunc) (void*, void*); // implication checking precedurepImpFunc145,6166
    void *           pImpData;       // implication checking datapImpData146,6237
    void *           pManTime;       // the timing managerpManTime147,6303
    void *           pManCuts;pManCuts148,6362
    int *            pFastSim; pFastSim149,6393
    unsigned *       pTerSimData;    // ternary simulation datapTerSimData150,6425
    Vec_Ptr_t *      vMapped;vMapped151,6489
    Vec_Int_t *      vFlopNums;      vFlopNums152,6519
    Vec_Int_t *      vFlopReprs;      vFlopReprs153,6557
    Abc_Cex_t *      pSeqModel;pSeqModel154,6596
    Vec_Ptr_t *      vSeqModelVec;   // vector of counter-examples (for sequential miters)vSeqModelVec155,6628
    Aig_Man_t *      pManExdc;pManExdc156,6719
    Vec_Ptr_t *      vOnehots;vOnehots157,6750
    int              fCreatePios;fCreatePios158,6781
    Vec_Int_t *      vEquPairs;   vEquPairs159,6815
    Vec_Vec_t *      vClockDoms; vClockDoms160,6850
    Vec_Int_t *      vProbs;         // probability of node being 1 vProbs161,6884
    Vec_Int_t *      vCiNumsOrig;    // original CI namesvCiNumsOrig162,6953
    int              nComplEdges;    // complemented edgesnComplEdges163,7011
    abctime          Time2Quit;Time2Quit164,7070
    abctime          time1;time1166,7127
    abctime          time2;time2167,7155
  Vec_Ptr_t *      unfold2_type_I;unfold2_type_I169,7205
  Vec_Ptr_t *      unfold2_type_II;unfold2_type_II170,7240
typedef struct Aig_ManCut_t_         Aig_ManCut_t;Aig_ManCut_t175,7319
typedef struct Aig_Cut_t_            Aig_Cut_t;Aig_Cut_t176,7370
struct Aig_Cut_t_Aig_Cut_t_179,7464
    Aig_Cut_t *     pNext;           // the next cut in the table pNext181,7484
    int             Cost;            // the cost of the cutCost182,7551
    unsigned        uSign;           // cut signatureuSign183,7611
    int             iNode;           // the node, for which it is the cutiNode184,7665
    short           nCutSize;        // the number of bytes in the cutnCutSize185,7739
    char            nLeafMax;        // the maximum number of faninsnLeafMax186,7810
    char            nFanins;         // the current number of faninsnFanins187,7879
    int             pFanins[0];      // the fanins (followed by the truth table)pFanins188,7948
struct Aig_ManCut_t_Aig_ManCut_t_192,8064
    Aig_Man_t *     pAig;            // the input AIG managerpAig195,8106
    Aig_Cut_t **    pCuts;           // the cuts for each node in the output managerpCuts196,8168
    int             nCutsMax;        // the max number of cuts at the nodenCutsMax198,8271
    int             nLeafMax;        // the max number of leaves of a cutnLeafMax199,8346
    int             fTruth;          // enables truth table computationfTruth200,8420
    int             fVerbose;        // enables verbose outputfVerbose201,8492
    int             nCutSize;        // the number of bytes needed to store one cutnCutSize203,8581
    int             nTruthWords;     // the number of truth table wordsnTruthWords204,8665
    Aig_MmFixed_t * pMemCuts;        // memory manager for cutspMemCuts205,8737
    unsigned *      puTemp[4];       // used for the truth table computationpuTemp206,8801
static inline Aig_Cut_t *  Aig_ObjCuts( Aig_ManCut_t * p, Aig_Obj_t * pObj )                         { return p->pCuts[pObj->Id];  }Aig_ObjCuts209,8882
static inline void         Aig_ObjSetCuts( Aig_ManCut_t * p, Aig_Obj_t * pObj, Aig_Cut_t * pCuts )   { p->pCuts[pObj->Id] = pCuts; }Aig_ObjSetCuts210,9015
static inline int          Aig_CutLeaveNum( Aig_Cut_t * pCut )          { return pCut->nFanins;                                    }Aig_CutLeaveNum212,9149
static inline int *        Aig_CutLeaves( Aig_Cut_t * pCut )            { return pCut->pFanins;                                    }Aig_CutLeaves213,9282
static inline unsigned *   Aig_CutTruth( Aig_Cut_t * pCut )             { return (unsigned *)(pCut->pFanins + pCut->nLeafMax);     }Aig_CutTruth214,9415
static inline Aig_Cut_t *  Aig_CutNext( Aig_Cut_t * pCut )              { return (Aig_Cut_t *)(((char *)pCut) + pCut->nCutSize);   }Aig_CutNext215,9548
#define Aig_ObjForEachCut(Aig_ObjForEachCut218,9716
#define Aig_CutForEachLeaf(Aig_CutForEachLeaf221,9921
static inline unsigned     Aig_ObjCutSign( unsigned ObjId )       { return (1 << (ObjId & 31));                            }Aig_ObjCutSign228,10316
static inline int          Aig_WordCountOnes( unsigned uWord )Aig_WordCountOnes229,10441
static inline int          Aig_WordFindFirstBit( unsigned uWord )Aig_WordFindFirstBit237,10804
static inline Aig_Obj_t *  Aig_Regular( Aig_Obj_t * p )           { return (Aig_Obj_t *)((ABC_PTRUINT_T)(p) & ~01);  }Aig_Regular246,10986
static inline Aig_Obj_t *  Aig_Not( Aig_Obj_t * p )               { return (Aig_Obj_t *)((ABC_PTRUINT_T)(p) ^  01);  }Aig_Not247,11105
static inline Aig_Obj_t *  Aig_NotCond( Aig_Obj_t * p, int c )    { return (Aig_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c));  }Aig_NotCond248,11224
static inline int          Aig_IsComplement( Aig_Obj_t * p )      { return (int)((ABC_PTRUINT_T)(p) & 01);           }Aig_IsComplement249,11343
static inline int          Aig_ManCiNum( Aig_Man_t * p )          { return p->nObjs[AIG_OBJ_CI];                     }Aig_ManCiNum251,11463
static inline int          Aig_ManCoNum( Aig_Man_t * p )          { return p->nObjs[AIG_OBJ_CO];                     }Aig_ManCoNum252,11582
static inline int          Aig_ManBufNum( Aig_Man_t * p )         { return p->nObjs[AIG_OBJ_BUF];                    }Aig_ManBufNum253,11701
static inline int          Aig_ManAndNum( Aig_Man_t * p )         { return p->nObjs[AIG_OBJ_AND];                    }Aig_ManAndNum254,11820
static inline int          Aig_ManExorNum( Aig_Man_t * p )        { return p->nObjs[AIG_OBJ_EXOR];                   }Aig_ManExorNum255,11939
static inline int          Aig_ManNodeNum( Aig_Man_t * p )        { return p->nObjs[AIG_OBJ_AND]+p->nObjs[AIG_OBJ_EXOR];   }Aig_ManNodeNum256,12058
static inline int          Aig_ManGetCost( Aig_Man_t * p )        { return p->nObjs[AIG_OBJ_AND]+3*p->nObjs[AIG_OBJ_EXOR]; }Aig_ManGetCost257,12183
static inline int          Aig_ManObjNum( Aig_Man_t * p )         { return Vec_PtrSize(p->vObjs) - p->nDeleted;      }Aig_ManObjNum258,12308
static inline int          Aig_ManObjNumMax( Aig_Man_t * p )      { return Vec_PtrSize(p->vObjs);                    }Aig_ManObjNumMax259,12427
static inline int          Aig_ManRegNum( Aig_Man_t * p )         { return p->nRegs;                                 }Aig_ManRegNum260,12546
static inline int          Aig_ManConstrNum( Aig_Man_t * p )      { return p->nConstrs;                              }Aig_ManConstrNum261,12665
static inline Aig_Obj_t *  Aig_ManConst0( Aig_Man_t * p )         { return Aig_Not(p->pConst1);                      }Aig_ManConst0263,12785
static inline Aig_Obj_t *  Aig_ManConst1( Aig_Man_t * p )         { return p->pConst1;                               }Aig_ManConst1264,12904
static inline Aig_Obj_t *  Aig_ManGhost( Aig_Man_t * p )          { return &p->Ghost;                                }Aig_ManGhost265,13023
static inline Aig_Obj_t *  Aig_ManCi( Aig_Man_t * p, int i )      { return (Aig_Obj_t *)Vec_PtrEntry(p->vCis, i);    }Aig_ManCi266,13142
static inline Aig_Obj_t *  Aig_ManCo( Aig_Man_t * p, int i )      { return (Aig_Obj_t *)Vec_PtrEntry(p->vCos, i);    }Aig_ManCo267,13261
static inline Aig_Obj_t *  Aig_ManLo( Aig_Man_t * p, int i )      { return (Aig_Obj_t *)Vec_PtrEntry(p->vCis, Aig_ManCiNum(p)-Aig_ManRegNum(p)+i);   }Aig_ManLo268,13380
static inline Aig_Obj_t *  Aig_ManLi( Aig_Man_t * p, int i )      { return (Aig_Obj_t *)Vec_PtrEntry(p->vCos, Aig_ManCoNum(p)-Aig_ManRegNum(p)+i);   }Aig_ManLi269,13531
static inline Aig_Obj_t *  Aig_ManObj( Aig_Man_t * p, int i )     { return p->vObjs ? (Aig_Obj_t *)Vec_PtrEntry(p->vObjs, i) : NULL;  }Aig_ManObj270,13682
static inline Aig_Type_t   Aig_ObjType( Aig_Obj_t * pObj )        { return (Aig_Type_t)pObj->Type;       }Aig_ObjType272,13819
static inline int          Aig_ObjIsNone( Aig_Obj_t * pObj )      { return pObj->Type == AIG_OBJ_NONE;   }Aig_ObjIsNone273,13926
static inline int          Aig_ObjIsConst1( Aig_Obj_t * pObj )    { assert(!Aig_IsComplement(pObj)); return pObj->Type == AIG_OBJ_CONST1; }Aig_ObjIsConst1274,14033
static inline int          Aig_ObjIsCi( Aig_Obj_t * pObj )        { return pObj->Type == AIG_OBJ_CI;     }Aig_ObjIsCi275,14173
static inline int          Aig_ObjIsCo( Aig_Obj_t * pObj )        { return pObj->Type == AIG_OBJ_CO;     }Aig_ObjIsCo276,14280
static inline int          Aig_ObjIsBuf( Aig_Obj_t * pObj )       { return pObj->Type == AIG_OBJ_BUF;    }Aig_ObjIsBuf277,14387
static inline int          Aig_ObjIsAnd( Aig_Obj_t * pObj )       { return pObj->Type == AIG_OBJ_AND;    }Aig_ObjIsAnd278,14494
static inline int          Aig_ObjIsExor( Aig_Obj_t * pObj )      { return pObj->Type == AIG_OBJ_EXOR;   }Aig_ObjIsExor279,14601
static inline int          Aig_ObjIsNode( Aig_Obj_t * pObj )      { return pObj->Type == AIG_OBJ_AND || pObj->Type == AIG_OBJ_EXOR;   }Aig_ObjIsNode280,14708
static inline int          Aig_ObjIsTerm( Aig_Obj_t * pObj )      { return pObj->Type == AIG_OBJ_CI  || pObj->Type == AIG_OBJ_CO || pObj->Type == AIG_OBJ_CONST1;   }Aig_ObjIsTerm281,14844
static inline int          Aig_ObjIsHash( Aig_Obj_t * pObj )      { return pObj->Type == AIG_OBJ_AND || pObj->Type == AIG_OBJ_EXOR;                                 }Aig_ObjIsHash282,15010
static inline int          Aig_ObjIsChoice( Aig_Man_t * p, Aig_Obj_t * pObj )    { return p->pEquivs && p->pEquivs[pObj->Id] && pObj->nRefs > 0;                    }Aig_ObjIsChoice283,15176
static inline int          Aig_ObjIsCand( Aig_Obj_t * pObj )      { return pObj->Type == AIG_OBJ_CI || pObj->Type == AIG_OBJ_AND || pObj->Type == AIG_OBJ_EXOR;     }Aig_ObjIsCand284,15342
static inline int          Aig_ObjCioId( Aig_Obj_t * pObj )       { assert( !Aig_ObjIsNode(pObj) ); return pObj->CioId;                                            }Aig_ObjCioId285,15508
static inline int          Aig_ObjId( Aig_Obj_t * pObj )          { return pObj->Id;                     }Aig_ObjId286,15673
static inline int          Aig_ObjIsMarkA( Aig_Obj_t * pObj )     { return pObj->fMarkA;  }Aig_ObjIsMarkA288,15781
static inline void         Aig_ObjSetMarkA( Aig_Obj_t * pObj )    { pObj->fMarkA = 1;     }Aig_ObjSetMarkA289,15873
static inline void         Aig_ObjClearMarkA( Aig_Obj_t * pObj )  { pObj->fMarkA = 0;     }Aig_ObjClearMarkA290,15965
static inline void         Aig_ObjSetTravId( Aig_Obj_t * pObj, int TravId )                { pObj->TravId = TravId;                         }Aig_ObjSetTravId292,16059
static inline void         Aig_ObjSetTravIdCurrent( Aig_Man_t * p, Aig_Obj_t * pObj )      { pObj->TravId = p->nTravIds;                    }Aig_ObjSetTravIdCurrent293,16201
static inline void         Aig_ObjSetTravIdPrevious( Aig_Man_t * p, Aig_Obj_t * pObj )     { pObj->TravId = p->nTravIds - 1;                }Aig_ObjSetTravIdPrevious294,16343
static inline int          Aig_ObjIsTravIdCurrent( Aig_Man_t * p, Aig_Obj_t * pObj )       { return (int)(pObj->TravId == p->nTravIds);     }Aig_ObjIsTravIdCurrent295,16485
static inline int          Aig_ObjIsTravIdPrevious( Aig_Man_t * p, Aig_Obj_t * pObj )      { return (int)(pObj->TravId == p->nTravIds - 1); }Aig_ObjIsTravIdPrevious296,16627
static inline int          Aig_ObjPhase( Aig_Obj_t * pObj )       { return pObj->fPhase;                           }Aig_ObjPhase298,16770
static inline int          Aig_ObjPhaseReal( Aig_Obj_t * pObj )   { return pObj? Aig_Regular(pObj)->fPhase ^ Aig_IsComplement(pObj) : 1;                              }Aig_ObjPhaseReal299,16887
static inline int          Aig_ObjRefs( Aig_Obj_t * pObj )        { return pObj->nRefs;                            }Aig_ObjRefs300,17055
static inline void         Aig_ObjRef( Aig_Obj_t * pObj )         { pObj->nRefs++;                                 }Aig_ObjRef301,17172
static inline void         Aig_ObjDeref( Aig_Obj_t * pObj )       { assert( pObj->nRefs > 0 ); pObj->nRefs--;      }Aig_ObjDeref302,17289
static inline void         Aig_ObjClearRef( Aig_Obj_t * pObj )    { pObj->nRefs = 0;                               }Aig_ObjClearRef303,17406
static inline int          Aig_ObjFaninId0( Aig_Obj_t * pObj )    { return pObj->pFanin0? Aig_Regular(pObj->pFanin0)->Id : -1; }Aig_ObjFaninId0304,17523
static inline int          Aig_ObjFaninId1( Aig_Obj_t * pObj )    { return pObj->pFanin1? Aig_Regular(pObj->pFanin1)->Id : -1; }Aig_ObjFaninId1305,17652
static inline int          Aig_ObjFaninC0( Aig_Obj_t * pObj )     { return Aig_IsComplement(pObj->pFanin0);        }Aig_ObjFaninC0306,17781
static inline int          Aig_ObjFaninC1( Aig_Obj_t * pObj )     { return Aig_IsComplement(pObj->pFanin1);        }Aig_ObjFaninC1307,17898
static inline Aig_Obj_t *  Aig_ObjFanin0( Aig_Obj_t * pObj )      { return Aig_Regular(pObj->pFanin0);             }Aig_ObjFanin0308,18015
static inline Aig_Obj_t *  Aig_ObjFanin1( Aig_Obj_t * pObj )      { return Aig_Regular(pObj->pFanin1);             }Aig_ObjFanin1309,18132
static inline Aig_Obj_t *  Aig_ObjChild0( Aig_Obj_t * pObj )      { return pObj->pFanin0;                          }Aig_ObjChild0310,18249
static inline Aig_Obj_t *  Aig_ObjChild1( Aig_Obj_t * pObj )      { return pObj->pFanin1;                          }Aig_ObjChild1311,18366
static inline Aig_Obj_t *  Aig_ObjChild0Copy( Aig_Obj_t * pObj )  { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond((Aig_Obj_t *)Aig_ObjFanin0(pObj)->pData, Aig_ObjFaninC0(pObj)) : NULL;  }Aig_ObjChild0Copy312,18483
static inline Aig_Obj_t *  Aig_ObjChild1Copy( Aig_Obj_t * pObj )  { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond((Aig_Obj_t *)Aig_ObjFanin1(pObj)->pData, Aig_ObjFaninC1(pObj)) : NULL;  }Aig_ObjChild1Copy313,18700
static inline Aig_Obj_t *  Aig_ObjChild0Next( Aig_Obj_t * pObj )  { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond((Aig_Obj_t *)Aig_ObjFanin0(pObj)->pNext, Aig_ObjFaninC0(pObj)) : NULL;  }Aig_ObjChild0Next314,18917
static inline Aig_Obj_t *  Aig_ObjChild1Next( Aig_Obj_t * pObj )  { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond((Aig_Obj_t *)Aig_ObjFanin1(pObj)->pNext, Aig_ObjFaninC1(pObj)) : NULL;  }Aig_ObjChild1Next315,19134
static inline void         Aig_ObjChild0Flip( Aig_Obj_t * pObj )  { assert( !Aig_IsComplement(pObj) ); pObj->pFanin0 = Aig_Not(pObj->pFanin0);        }Aig_ObjChild0Flip316,19351
static inline void         Aig_ObjChild1Flip( Aig_Obj_t * pObj )  { assert( !Aig_IsComplement(pObj) ); pObj->pFanin1 = Aig_Not(pObj->pFanin1);        }Aig_ObjChild1Flip317,19503
static inline Aig_Obj_t *  Aig_ObjCopy( Aig_Obj_t * pObj )        { assert( !Aig_IsComplement(pObj) ); return (Aig_Obj_t *)pObj->pData;               } Aig_ObjCopy318,19655
static inline void         Aig_ObjSetCopy( Aig_Obj_t * pObj, Aig_Obj_t * pCopy )     {  assert( !Aig_IsComplement(pObj) ); pObj->pData = pCopy;       } Aig_ObjSetCopy319,19808
static inline Aig_Obj_t *  Aig_ObjRealCopy( Aig_Obj_t * pObj )    { return Aig_NotCond((Aig_Obj_t *)Aig_Regular(pObj)->pData, Aig_IsComplement(pObj));}Aig_ObjRealCopy320,19961
static inline int          Aig_ObjToLit( Aig_Obj_t * pObj )       { return Abc_Var2Lit( Aig_ObjId(Aig_Regular(pObj)), Aig_IsComplement(pObj) );       }Aig_ObjToLit321,20113
static inline Aig_Obj_t *  Aig_ObjFromLit( Aig_Man_t * p,int iLit){ return Aig_NotCond( Aig_ManObj(p, Abc_Lit2Var(iLit)), Abc_LitIsCompl(iLit) );     }Aig_ObjFromLit322,20265
static inline int          Aig_ObjLevel( Aig_Obj_t * pObj )       { assert( !Aig_IsComplement(pObj) ); return pObj->Level;                            }Aig_ObjLevel323,20417
static inline int          Aig_ObjLevelNew( Aig_Obj_t * pObj )    { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? 1 + Aig_ObjIsExor(pObj) + Abc_MaxInt(Aig_ObjFanin0(pObj)->Level, Aig_ObjFanin1(pObj)->Level) : Aig_ObjFanin0(pObj)->Level; }Aig_ObjLevelNew324,20569
static inline int          Aig_ObjSetLevel( Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return pObj->Level = i;                    }Aig_ObjSetLevel325,20825
static inline void         Aig_ObjClean( Aig_Obj_t * pObj )       { memset( pObj, 0, sizeof(Aig_Obj_t) );                                                             }Aig_ObjClean326,20977
static inline Aig_Obj_t *  Aig_ObjFanout0( Aig_Man_t * p, Aig_Obj_t * pObj )  { assert(p->pFanData && pObj->Id < p->nFansAlloc); return Aig_ManObj(p, p->pFanData[5*pObj->Id] >> 1); } Aig_ObjFanout0327,21145
static inline Aig_Obj_t *  Aig_ObjEquiv( Aig_Man_t * p, Aig_Obj_t * pObj )    { return p->pEquivs? p->pEquivs[pObj->Id] : NULL;           } Aig_ObjEquiv328,21329
static inline void         Aig_ObjSetEquiv( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pEqu ) { assert(p->pEquivs); p->pEquivs[pObj->Id] = pEqu;                  }Aig_ObjSetEquiv329,21470
static inline Aig_Obj_t *  Aig_ObjRepr( Aig_Man_t * p, Aig_Obj_t * pObj )     { return p->pReprs? p->pReprs[pObj->Id] : NULL;             } Aig_ObjRepr330,21636
static inline void         Aig_ObjSetRepr( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pRepr )     { assert(p->pReprs); p->pReprs[pObj->Id] = pRepr;                                } Aig_ObjSetRepr331,21777
static inline int          Aig_ObjWhatFanin( Aig_Obj_t * pObj, Aig_Obj_t * pFanin )    Aig_ObjWhatFanin332,21961
static inline int          Aig_ObjFanoutC( Aig_Obj_t * pObj, Aig_Obj_t * pFanout )    Aig_ObjFanoutC338,22185
static inline Aig_Obj_t *  Aig_ObjCreateGhost( Aig_Man_t * p, Aig_Obj_t * p0, Aig_Obj_t * p1, Aig_Type_t Type )    Aig_ObjCreateGhost346,22485
static inline Aig_Obj_t * Aig_ManFetchMemory( Aig_Man_t * p )  Aig_ManFetchMemory368,23158
static inline void Aig_ManRecycleMemory( Aig_Man_t * p, Aig_Obj_t * pEntry )Aig_ManRecycleMemory378,23511
#define Aig_ManForEachCi(Aig_ManForEachCi393,24125
#define Aig_ManForEachCiReverse(Aig_ManForEachCiReverse395,24264
#define Aig_ManForEachCo(Aig_ManForEachCo398,24453
#define Aig_ManForEachCoReverse(Aig_ManForEachCoReverse400,24592
#define Aig_ManForEachObj(Aig_ManForEachObj403,24804
#define Aig_ManForEachObjReverse(Aig_ManForEachObjReverse405,24974
#define Aig_ManForEachObjVec(Aig_ManForEachObjVec408,25214
#define Aig_ManForEachObjVecReverse(Aig_ManForEachObjVecReverse410,25397
#define Aig_ManForEachNode(Aig_ManForEachNode413,25613
#define Aig_ManForEachNodeReverse(Aig_ManForEachNodeReverse415,25807
#define Aig_ManForEachExor(Aig_ManForEachExor418,26035
#define Aig_ManForEachExorReverse(Aig_ManForEachExorReverse420,26229
static inline int     Aig_ObjFanout0Int( Aig_Man_t * p, int ObjId )  { assert(ObjId < p->nFansAlloc);  return p->pFanData[5*ObjId];                         }Aig_ObjFanout0Int424,26501
static inline int     Aig_ObjFanoutNext( Aig_Man_t * p, int iFan )   { assert(iFan/2 < p->nFansAlloc); return p->pFanData[5*(iFan >> 1) + 3 + (iFan & 1)];  }Aig_ObjFanoutNext425,26659
#define Aig_ObjForEachFanout(Aig_ObjForEachFanout427,26846
#define Aig_ManForEachPiSeq(Aig_ManForEachPiSeq438,27421
#define Aig_ManForEachLoSeq(Aig_ManForEachLoSeq441,27633
#define Aig_ManForEachPoSeq(Aig_ManForEachPoSeq444,27848
#define Aig_ManForEachLiSeq(Aig_ManForEachLiSeq447,28059
#define Aig_ManForEachLiLoSeq(Aig_ManForEachLiLoSeq450,28282

src/aig/aig/aigOrder.c,360
void Aig_ManOrderStart( Aig_Man_t * p )Aig_ManOrderStart45,1270
void Aig_ManOrderStop( Aig_Man_t * p )Aig_ManOrderStop76,2190
void Aig_ObjOrderInsert( Aig_Man_t * p, int ObjId )Aig_ObjOrderInsert95,2611
void Aig_ObjOrderRemove( Aig_Man_t * p, int ObjId )Aig_ObjOrderRemove130,3815
void Aig_ObjOrderAdvance( Aig_Man_t * p )Aig_ObjOrderAdvance162,4631

src/aig/aig/aigTruth.c,271
unsigned * Aig_ManCutTruthOne( Aig_Obj_t * pNode, unsigned * pTruth, int nWords )Aig_ManCutTruthOne45,1261
unsigned * Aig_ManCutTruth( Aig_Obj_t * pRoot, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vNodes, Vec_Ptr_t * vTruthElem, Vec_Ptr_t * vTruthStore )Aig_ManCutTruth80,2572

src/aig/aig/aigPartSat.c,1279
Vec_Int_t * Aig_ManPartitionMonolithic( Aig_Man_t * p )Aig_ManPartitionMonolithic60,1767
Vec_Int_t * Aig_ManPartitionLevelized( Aig_Man_t * p, int nPartSize )Aig_ManPartitionLevelized78,2196
Vec_Int_t * Aig_ManPartitionDfs( Aig_Man_t * p, int nPartSize, int fPreorder )Aig_ManPartitionDfs103,2918
void Aig_ManPartSplitOne_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Int_t * vPio2Id )Aig_ManPartSplitOne_rec137,3895
Aig_Man_t * Aig_ManPartSplitOne( Aig_Man_t * p, Vec_Ptr_t * vNodes, Vec_Int_t ** pvPio2Id )Aig_ManPartSplitOne177,5189
Vec_Ptr_t * Aig_ManPartSplit( Aig_Man_t * p, Vec_Int_t * vNode2Part, Vec_Ptr_t ** pvPio2Id, Vec_Ptr_t ** pvPart2Pos )Aig_ManPartSplit225,7024
void Aig_ManPartResetNodePolarity( Aig_Man_t * pPart )Aig_ManPartResetNodePolarity300,9319
void Aig_ManPartSetNodePolarity( Aig_Man_t * p, Aig_Man_t * pPart, Vec_Int_t * vPio2Id )Aig_ManPartSetNodePolarity319,9758
void Aig_ManDeriveCounterExample( Aig_Man_t * p, Vec_Int_t * vNode2Var, sat_solver * pSat )Aig_ManDeriveCounterExample350,10806
int Aig_ManAddNewCnfToSolver( sat_solver * pSat, Aig_Man_t * pAig, Vec_Int_t * vNode2Var, Aig_ManAddNewCnfToSolver378,11877
int Aig_ManPartitionedSat( Aig_Man_t * p, int nAlgo, int nPartSize, Aig_ManPartitionedSat491,16344

src/aig/aig/aigMem.c,3859
struct Aig_MmFixed_t_Aig_MmFixed_t_30,754
    int           nEntrySize;    // the size of one entrynEntrySize33,822
    int           nEntriesAlloc; // the total number of entries allocatednEntriesAlloc34,880
    int           nEntriesUsed;  // the number of entries in usenEntriesUsed35,954
    int           nEntriesMax;   // the max number of entries in usenEntriesMax36,1019
    char *        pEntriesFree;  // the linked list of free entriespEntriesFree37,1088
    int           nChunkSize;    // the size of one chunknChunkSize40,1199
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc41,1257
    int           nChunks;       // the current number of memory chunks nChunks42,1330
    char **       pChunks;       // the allocated memorypChunks43,1403
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed46,1479
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc47,1552
struct Aig_MmFlex_t_Aig_MmFlex_t_50,1609
    int           nEntriesUsed;  // the number of entries allocatednEntriesUsed53,1676
    char *        pCurrent;      // the current pointer to free memorypCurrent54,1744
    char *        pEnd;          // the first entry outside the free memorypEnd55,1815
    int           nChunkSize;    // the size of one chunknChunkSize58,1934
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc59,1992
    int           nChunks;       // the current number of memory chunks nChunks60,2065
    char **       pChunks;       // the allocated memorypChunks61,2138
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed64,2214
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc65,2287
struct Aig_MmStep_t_Aig_MmStep_t_68,2344
    int               nMems;    // the number of fixed memory managers employednMems70,2367
    Aig_MmFixed_t **  pMems;    // memory managers: 2^1 words, 2^2 words, etcpMems71,2447
    int               nMapSize; // the size of the memory arraynMapSize72,2525
    Aig_MmFixed_t **  pMap;     // maps the number of bytes into its memory managerpMap73,2589
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc75,2705
    int           nChunks;       // the current number of memory chunks nChunks76,2778
    char **       pChunks;       // the allocated memorypChunks77,2851
Aig_MmFixed_t * Aig_MmFixedStart( int nEntrySize, int nEntriesMax )Aig_MmFixedStart96,3531
void Aig_MmFixedStop( Aig_MmFixed_t * p, int fVerbose )Aig_MmFixedStop132,4337
char * Aig_MmFixedEntryFetch( Aig_MmFixed_t * p )Aig_MmFixedEntryFetch161,5177
void Aig_MmFixedEntryRecycle( Aig_MmFixed_t * p, char * pEntry )Aig_MmFixedEntryRecycle212,6782
void Aig_MmFixedRestart( Aig_MmFixed_t * p )Aig_MmFixedRestart232,7330
int Aig_MmFixedReadMemUsage( Aig_MmFixed_t * p )Aig_MmFixedReadMemUsage271,8346
int Aig_MmFixedReadMaxEntriesUsed( Aig_MmFixed_t * p )Aig_MmFixedReadMaxEntriesUsed287,8662
Aig_MmFlex_t * Aig_MmFlexStart()Aig_MmFlexStart305,9071
void Aig_MmFlexStop( Aig_MmFlex_t * p, int fVerbose )Aig_MmFlexStop337,9747
char * Aig_MmFlexEntryFetch( Aig_MmFlex_t * p, int nBytes )Aig_MmFlexEntryFetch366,10507
void Aig_MmFlexRestart( Aig_MmFlex_t * p )Aig_MmFlexRestart415,12093
int Aig_MmFlexReadMemUsage( Aig_MmFlex_t * p )Aig_MmFlexReadMemUsage443,12790
Aig_MmStep_t * Aig_MmStepStart( int nSteps )Aig_MmStepStart472,13806
void Aig_MmStepStop( Aig_MmStep_t * p, int fVerbose )Aig_MmStepStop511,15052
char * Aig_MmStepEntryFetch( Aig_MmStep_t * p, int nBytes )Aig_MmStepEntryFetch538,15684
void Aig_MmStepEntryRecycle( Aig_MmStep_t * p, char * pEntry, int nBytes )Aig_MmStepEntryRecycle571,16558
int Aig_MmStepReadMemUsage( Aig_MmStep_t * p )Aig_MmStepReadMemUsage598,17189

src/aig/aig/aigJust.c,1284
#define AIG_VAL0 AIG_VAL030,770
#define AIG_VAL1 AIG_VAL131,790
#define AIG_VALX AIG_VALX32,810
static inline int Aig_ObjSetTerValue( Aig_Obj_t * pNode, int Value )Aig_ObjSetTerValue35,857
static inline int Aig_ObjGetTerValue( Aig_Obj_t * pNode )Aig_ObjGetTerValue42,1042
static inline int Aig_ObjNotTerValue( int Value )Aig_ObjNotTerValue48,1185
static inline int Aig_ObjAndTerValue( int Value0, int Value1 )Aig_ObjAndTerValue56,1368
static inline int Aig_ObjNotCondTerValue( int Value, int Cond )Aig_ObjNotCondTerValue64,1610
static inline int Aig_ObjSatValue( Aig_Man_t * pAig, Aig_Obj_t * pNode, int fCompl )Aig_ObjSatValue84,2230
int Aig_NtkFindSatAssign_rec( Aig_Man_t * pAig, Aig_Obj_t * pNode, int Value, Vec_Int_t * vSuppLits, int Heur )Aig_NtkFindSatAssign_rec102,2734
int Aig_ObjFindSatAssign( Aig_Man_t * pAig, Aig_Obj_t * pNode, int Value, Vec_Int_t * vSuppLits )Aig_ObjFindSatAssign162,4992
int Aig_ObjTerSimulate_rec( Aig_Man_t * pAig, Aig_Obj_t * pNode )Aig_ObjTerSimulate_rec188,5708
int Aig_ObjTerSimulate( Aig_Man_t * pAig, Aig_Obj_t * pNode, Vec_Int_t * vSuppLits )Aig_ObjTerSimulate217,6810
typedef struct Aig_ManPack_t_ Aig_ManPack_t;Aig_ManPack_t234,7312
void Aig_ManJustExperiment( Aig_Man_t * pAig )Aig_ManJustExperiment251,7920

src/aig/aig/aigDoms.c,4317
typedef struct Aig_Sto_t_ Aig_Sto_t;Aig_Sto_t30,800
typedef struct Aig_Dom_t_ Aig_Dom_t;Aig_Dom_t31,837
struct Aig_Dom_t_Aig_Dom_t_33,875
    int             uSign;         // signatureuSign35,895
    int             nNodes;        // the number of nodesnNodes36,943
    int             pNodes[0];     // the nodespNodes37,1001
struct Aig_Sto_t_Aig_Sto_t_40,1053
    int             Limit;Limit42,1073
    Aig_Man_t *     pAig;          // user's AIGpAig43,1100
    Aig_MmFixed_t * pMem;          // memory manager for dominatorspMem44,1149
    Vec_Ptr_t *     vDoms;         // dominatorsvDoms45,1217
    Vec_Int_t *     vFans;         // temporary fanoutsvFans46,1266
    Vec_Int_t *     vTimes;        // the number of times each appearsvTimes47,1322
    int             nDomNodes;     // nodes with dominatorsnDomNodes48,1393
    int             nDomsTotal;    // total dominatorsnDomsTotal49,1453
    int             nDomsFilter1;  // filtered dominatorsnDomsFilter150,1508
    int             nDomsFilter2;  // filtered dominatorsnDomsFilter251,1566
#define Aig_DomForEachNode(Aig_DomForEachNode54,1628
Aig_Sto_t * Aig_ManDomStart( Aig_Man_t * pAig, int Limit )Aig_ManDomStart72,2280
void Aig_ObjAddTriv( Aig_Sto_t * pSto, int Id, Vec_Ptr_t * vDoms )Aig_ObjAddTriv96,2987
Vec_Ptr_t * Aig_ObjDomVecDup( Aig_Sto_t * pSto, Vec_Ptr_t * vDoms, int fSkip1 )Aig_ObjDomVecDup119,3634
void Aig_ObjDomVecRecycle( Aig_Sto_t * pSto, Vec_Ptr_t * vDoms )Aig_ObjDomVecRecycle145,4356
void Aig_ObjDomPrint( Aig_Sto_t * pSto, Aig_Dom_t * pDom, int Num )Aig_ObjDomPrint165,4865
void Aig_ObjDomVecPrint( Aig_Sto_t * pSto, Vec_Ptr_t * vDoms )Aig_ObjDomVecPrint187,5411
void Aig_ManDomPrint( Aig_Sto_t * pSto )Aig_ManDomPrint206,5874
void Aig_ManDomStop( Aig_Sto_t * pSto )Aig_ManDomStop228,6428
int Aig_ObjDomCheck( Aig_Dom_t * pDom )Aig_ObjDomCheck254,7061
static inline int Aig_ObjDomCheckDominance( Aig_Dom_t * pDom, Aig_Dom_t * pCut )Aig_ObjDomCheckDominance280,7693
int Aig_ObjDomFilter( Aig_Sto_t * pSto, Vec_Ptr_t * vDoms, Aig_Dom_t * pDom )Aig_ObjDomFilter306,8405
static inline int Aig_ObjDomMergeOrdered( Aig_Dom_t * pD0, Aig_Dom_t * pD1, Aig_Dom_t * pD, int Limit )Aig_ObjDomMergeOrdered356,9812
int Aig_ObjDomMergeTwo( Aig_Dom_t * pDom0, Aig_Dom_t * pDom1, Aig_Dom_t * pDom, int Limit )Aig_ObjDomMergeTwo442,12150
Vec_Ptr_t * Aig_ObjDomMerge( Aig_Sto_t * pSto, Vec_Ptr_t * vDoms0, Vec_Ptr_t * vDoms1 )Aig_ObjDomMerge472,12929
void Aig_ObjDomUnion( Aig_Sto_t * pSto, Vec_Ptr_t * vDoms2, Vec_Ptr_t * vDoms1 )Aig_ObjDomUnion512,14184
void Aig_ObjDomCompute( Aig_Sto_t * pSto, Aig_Obj_t * pObj )Aig_ObjDomCompute540,14952
int Aig_ManMarkFlopTfi_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManMarkFlopTfi_rec575,16189
void Aig_ManMarkFlopTfi( Aig_Man_t * p )Aig_ManMarkFlopTfi601,16942
Aig_Sto_t * Aig_ManComputeDomsFlops( Aig_Man_t * pAig, int Limit )Aig_ManComputeDomsFlops621,17398
Aig_Sto_t * Aig_ManComputeDomsPis( Aig_Man_t * pAig, int Limit )Aig_ManComputeDomsPis662,18778
Aig_Sto_t * Aig_ManComputeDomsNodes( Aig_Man_t * pAig, int Limit )Aig_ManComputeDomsNodes703,20154
Vec_Ptr_t * Aig_ObjDomCollect( Aig_Sto_t * pSto, Vec_Int_t * vCut )Aig_ObjDomCollect742,21374
int Aig_ObjDomVolume_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjDomVolume_rec770,22169
int Aig_ObjDomVolume( Aig_Sto_t * pSto, Aig_Dom_t * pDom )Aig_ObjDomVolume799,23014
int Aig_ObjDomDeref_rec( Aig_Obj_t * pNode )Aig_ObjDomDeref_rec823,23565
int Aig_ObjDomRef_rec( Aig_Obj_t * pNode )Aig_ObjDomRef_rec851,24273
int Aig_ObjDomDomed( Aig_Sto_t * pSto, Aig_Dom_t * pDom )Aig_ObjDomDomed879,24992
Vec_Int_t * Aig_ObjDomCollectLos( Aig_Sto_t * pSto )Aig_ObjDomCollectLos915,25995
void Aig_ObjPoLogicDeref( Aig_Sto_t * pSto )Aig_ObjPoLogicDeref940,26535
void Aig_ObjPoLogicRef( Aig_Sto_t * pSto )Aig_ObjPoLogicRef959,26949
void Aig_ObjDomFindGood( Aig_Sto_t * pSto )Aig_ObjDomFindGood978,27392
void Aig_ManComputeDomsTest2( Aig_Man_t * pAig, int Num )Aig_ManComputeDomsTest21016,28444
void Aig_ManComputeDomsTest( Aig_Man_t * pAig )Aig_ManComputeDomsTest1044,29144
void Aig_ObjDomCount( Aig_Sto_t * pSto, Aig_Obj_t * pObj )Aig_ObjDomCount1069,29655
void Aig_ManComputeDomsForCofactoring( Aig_Man_t * pAig )Aig_ManComputeDomsForCofactoring1120,31276

src/aig/aig/aigFanout.c,896
static inline int   Aig_FanoutCreate( int FanId, int Num )    { assert( Num < 2 ); return (FanId << 1) | Num;   } Aig_FanoutCreate36,850
static inline int * Aig_FanoutObj( int * pData, int ObjId )   { return pData + 5*ObjId;                         }Aig_FanoutObj37,965
static inline int * Aig_FanoutPrev( int * pData, int iFan )   { return pData + 5*(iFan >> 1) + 1 + (iFan & 1);  }Aig_FanoutPrev38,1079
static inline int * Aig_FanoutNext( int * pData, int iFan )   { return pData + 5*(iFan >> 1) + 3 + (iFan & 1);  }Aig_FanoutNext39,1193
void Aig_ManFanoutStart( Aig_Man_t * p )Aig_ManFanoutStart56,1807
void Aig_ManFanoutStop( Aig_Man_t * p )Aig_ManFanoutStop89,2783
void Aig_ObjAddFanout( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pFanout )Aig_ObjAddFanout107,3186
void Aig_ObjRemoveFanout( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pFanout )Aig_ObjRemoveFanout154,4770

src/aig/aig/aigFrames.c,1025
static inline Aig_Obj_t * Aig_ObjFrames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i )                       { return pObjMap[nFs*pObj->Id + i];  }Aig_ObjFrames30,784
static inline void        Aig_ObjSetFrames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) { pObjMap[nFs*pObj->Id + i] = pNode; }Aig_ObjSetFrames31,943
static inline Aig_Obj_t * Aig_ObjChild0Frames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i ) { return Aig_ObjFanin0(pObj)? Aig_NotCond(Aig_ObjFrames(pObjMap,nFs,Aig_ObjFanin0(pObj),i), Aig_ObjFaninC0(pObj)) : NULL;  }Aig_ObjChild0Frames33,1103
static inline Aig_Obj_t * Aig_ObjChild1Frames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i ) { return Aig_ObjFanin1(pObj)? Aig_NotCond(Aig_ObjFrames(pObjMap,nFs,Aig_ObjFanin1(pObj),i), Aig_ObjFaninC1(pObj)) : NULL;  }Aig_ObjChild1Frames34,1332
Aig_Man_t * Aig_ManFrames( Aig_Man_t * pAig, int nFs, int fInit, int fOuts, int fRegs, int fEnlarge, Aig_Obj_t *** ppObjMap )Aig_ManFrames51,2056

src/aig/aig/aig_.c,0

src/aig/aig/aigOper.c,1668
static inline int Aig_ObjIsExorType( Aig_Obj_t * p0, Aig_Obj_t * p1, Aig_Obj_t ** ppFan0, Aig_Obj_t ** ppFan1 )Aig_ObjIsExorType31,791
Aig_Obj_t * Aig_IthVar( Aig_Man_t * p, int i )Aig_IthVar63,1895
Aig_Obj_t * Aig_Oper( Aig_Man_t * p, Aig_Obj_t * p0, Aig_Obj_t * p1, Aig_Type_t Type )Aig_Oper83,2398
Aig_Obj_t * Aig_And( Aig_Man_t * p, Aig_Obj_t * p0, Aig_Obj_t * p1 )Aig_And104,2964
Aig_Obj_t * Aig_Exor( Aig_Man_t * p, Aig_Obj_t * p0, Aig_Obj_t * p1 )Aig_Exor220,7647
Aig_Obj_t * Aig_Or( Aig_Man_t * p, Aig_Obj_t * p0, Aig_Obj_t * p1 )Aig_Or259,8903
Aig_Obj_t * Aig_TableLookupInt( Aig_Man_t * p, Aig_Obj_t * p0, Aig_Obj_t * p1 )Aig_TableLookupInt275,9298
Aig_Obj_t * Aig_Mux2( Aig_Man_t * p, Aig_Obj_t * pC, Aig_Obj_t * p1, Aig_Obj_t * p0 )Aig_Mux2301,10112
Aig_Obj_t * Aig_Mux( Aig_Man_t * p, Aig_Obj_t * pC, Aig_Obj_t * p1, Aig_Obj_t * p0 )Aig_Mux317,10535
Aig_Obj_t * Aig_Maj( Aig_Man_t * p, Aig_Obj_t * pA, Aig_Obj_t * pB, Aig_Obj_t * pC )Aig_Maj376,12686
Aig_Obj_t * Aig_Multi_rec( Aig_Man_t * p, Aig_Obj_t ** ppObjs, int nObjs, Aig_Type_t Type )Aig_Multi_rec392,13193
Aig_Obj_t * Aig_Multi( Aig_Man_t * p, Aig_Obj_t ** pArgs, int nArgs, Aig_Type_t Type )Aig_Multi413,13805
Aig_Obj_t * Aig_Miter( Aig_Man_t * p, Vec_Ptr_t * vPairs )Aig_Miter431,14287
Aig_Obj_t * Aig_MiterTwo( Aig_Man_t * p, Vec_Ptr_t * vNodes1, Vec_Ptr_t * vNodes2 )Aig_MiterTwo453,14992
Aig_Obj_t * Aig_CreateAnd( Aig_Man_t * p, int nVars )Aig_CreateAnd474,15735
Aig_Obj_t * Aig_CreateOr( Aig_Man_t * p, int nVars )Aig_CreateOr495,16240
Aig_Obj_t * Aig_CreateExor( Aig_Man_t * p, int nVars )Aig_CreateExor516,16743
void Aig_MuxTest()Aig_MuxTest537,17236

src/aig/aig/aigRepar.c,535
static inline void Aig_ManInterAddBuffer( sat_solver2 * pSat, int iVarA, int iVarB, int fCompl, int fMark )Aig_ManInterAddBuffer47,1318
static inline void Aig_ManInterAddXor( sat_solver2 * pSat, int iVarA, int iVarB, int iVarC, int fCompl, int fMark )Aig_ManInterAddXor77,2180
void Aig_ManInterTest( Aig_Man_t * pMan, int fVerbose )Aig_ManInterTest123,3569
void Aig_ManAppend( Aig_Man_t * pBase, Aig_Man_t * pNew )Aig_ManAppend215,6351
Aig_Man_t * Aig_ManInterRepar( Aig_Man_t * pMan, int fVerbose )Aig_ManInterRepar245,7242

src/aig/aig/aigShow.c,202
void Aig_WriteDotAig( Aig_Man_t * pMan, char * pFileName, int fHaig, Vec_Ptr_t * vBold )Aig_WriteDotAig47,1376
void Aig_ManShow( Aig_Man_t * pMan, int fHaig, Vec_Ptr_t * vBold )Aig_ManShow341,12263

src/aig/aig/aigTiming.c,1037
static inline int Aig_ObjReverseLevel( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjReverseLevel46,1383
static inline void Aig_ObjSetReverseLevel( Aig_Man_t * p, Aig_Obj_t * pObj, int LevelR )Aig_ObjSetReverseLevel65,1953
void Aig_ObjClearReverseLevel( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjClearReverseLevel83,2448
int Aig_ObjRequiredLevel( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjRequiredLevel100,2959
int Aig_ObjReverseLevelNew( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjReverseLevelNew117,3407
void Aig_ManStartReverseLevels( Aig_Man_t * p, int nMaxLevelIncrease )Aig_ManStartReverseLevels142,4217
void Aig_ManStopReverseLevels( Aig_Man_t * p )Aig_ManStopReverseLevels175,5240
void Aig_ManUpdateLevel( Aig_Man_t * p, Aig_Obj_t * pObjNew )Aig_ManUpdateLevel195,5678
void Aig_ManUpdateReverseLevel( Aig_Man_t * p, Aig_Obj_t * pObjNew )Aig_ManUpdateReverseLevel247,7507
void Aig_ManVerifyLevel( Aig_Man_t * p )Aig_ManVerifyLevel307,9689
void Aig_ManVerifyReverseLevel( Aig_Man_t * p )Aig_ManVerifyReverseLevel334,10443

src/aig/aig/aigPack.c,2035
typedef struct Aig_ManPack_t_ Aig_ManPack_t;Aig_ManPack_t31,784
struct Aig_ManPack_t_Aig_ManPack_t_32,829
    Aig_Man_t *        pAig;        // working manager pAig34,853
    Vec_Wrd_t *        vSigns;      // object signaturesvSigns35,909
    Vec_Wrd_t *        vPiPats;     // PI assignmentsvPiPats36,966
    Vec_Wrd_t *        vPiCare;     // PI care setvPiCare37,1020
    int                iPatCur;     // current patterniPatCur38,1071
    int                fVerbose;    // verbosiness flagfVerbose39,1126
    int                nPatTotal;   // number of all patternsnPatTotal41,1200
    int                nPatSkip;    // number of skipped patternsnPatSkip42,1262
    int                nPatRepeat;  // number of repeated patternsnPatRepeat43,1328
static inline int Aig_Word6CountOnes( word t )  { return Aig_WordCountOnes( (unsigned)(t >> 32) ) + Aig_WordCountOnes( (unsigned)(t & 0xFFFFFFFF) ); }Aig_Word6CountOnes46,1399
static inline int Aig_Word6HasOneBit( word t )  { return (t & (t-1)) == 0; }Aig_Word6HasOneBit47,1550
Aig_ManPack_t * Aig_ManPackAlloc( Aig_Man_t * pAig )Aig_ManPackAlloc65,2083
int Aig_ManPackCountCares( Aig_ManPack_t * p )Aig_ManPackCountCares88,2658
void Aig_ManPackPrintCare( Aig_ManPack_t * p )Aig_ManPackPrintCare108,3115
void Aig_ManPackFree( Aig_ManPack_t * p )Aig_ManPackFree134,3659
void Aig_ManPackSetRandom( Aig_ManPack_t * p )Aig_ManPackSetRandom159,4318
void Aig_ManPackSimulate( Aig_ManPack_t * p )Aig_ManPackSimulate182,4836
void Aig_ManPackPrintStats( Aig_ManPack_t * p )Aig_ManPackPrintStats227,6255
Vec_Int_t * Aig_ManPackConstNodes( Aig_ManPack_t * p )Aig_ManPackConstNodes264,7263
int Aig_ManPackAddPatternTry( Aig_ManPack_t * p, int iBit, Vec_Int_t * vLits )Aig_ManPackAddPatternTry292,7993
void Aig_ManPackAddPattern( Aig_ManPack_t * p, Vec_Int_t * vLits )Aig_ManPackAddPattern326,9075
Aig_ManPack_t * Aig_ManPackStart( Aig_Man_t * pAig )Aig_ManPackStart370,10244
void Aig_ManPackStop( Aig_ManPack_t * p )Aig_ManPackStop391,10700

src/aig/aig/aigUtil.c,4126
void Aig_ManIncrementTravId( Aig_Man_t * p )Aig_ManIncrementTravId44,1263
char * Aig_TimeStamp()Aig_TimeStamp62,1667
int Aig_ManHasNoGaps( Aig_Man_t * p )Aig_ManHasNoGaps86,2238
int Aig_ManLevels( Aig_Man_t * p )Aig_ManLevels102,2632
void Aig_ManResetRefs( Aig_Man_t * p )Aig_ManResetRefs122,3110
void Aig_ManCleanMarkA( Aig_Man_t * p )Aig_ManCleanMarkA148,3698
void Aig_ManCleanMarkB( Aig_Man_t * p )Aig_ManCleanMarkB167,4086
void Aig_ManCleanMarkAB( Aig_Man_t * p )Aig_ManCleanMarkAB186,4474
void Aig_ManCleanData( Aig_Man_t * p )Aig_ManCleanData205,4903
void Aig_ManCleanNext( Aig_Man_t * p )Aig_ManCleanNext224,5317
void Aig_ObjCleanData_rec( Aig_Obj_t * pObj )Aig_ObjCleanData_rec243,5815
void Aig_ObjCollectMulti_rec( Aig_Obj_t * pRoot, Aig_Obj_t * pObj, Vec_Ptr_t * vSuper )Aig_ObjCollectMulti_rec267,6391
void Aig_ObjCollectMulti( Aig_Obj_t * pRoot, Vec_Ptr_t * vSuper )Aig_ObjCollectMulti289,7083
int Aig_ObjIsMuxType( Aig_Obj_t * pNode )Aig_ObjIsMuxType307,7564
int Aig_ObjRecognizeExor( Aig_Obj_t * pObj, Aig_Obj_t ** ppFan0, Aig_Obj_t ** ppFan1 )Aig_ObjRecognizeExor343,8995
Aig_Obj_t * Aig_ObjRecognizeMux( Aig_Obj_t * pNode, Aig_Obj_t ** ppNodeT, Aig_Obj_t ** ppNodeE )Aig_ObjRecognizeMux387,10478
Aig_Obj_t * Aig_ObjReal_rec( Aig_Obj_t * pObj )Aig_ObjReal_rec476,14007
int Aig_ObjCompareIdIncrease( Aig_Obj_t ** pp1, Aig_Obj_t ** pp2 )Aig_ObjCompareIdIncrease496,14579
void Aig_ObjPrintEqn( FILE * pFile, Aig_Obj_t * pObj, Vec_Vec_t * vLevels, int Level )Aig_ObjPrintEqn519,15175
void Aig_ObjPrintVerilog( FILE * pFile, Aig_Obj_t * pObj, Vec_Vec_t * vLevels, int Level )Aig_ObjPrintVerilog566,16592
void Aig_ObjPrintVerbose( Aig_Obj_t * pObj, int fHaig )Aig_ObjPrintVerbose653,19531
void Aig_ObjPrintVerboseCone( Aig_Man_t * p, Aig_Obj_t * pRoot, int fHaig )Aig_ObjPrintVerboseCone673,20211
void Aig_ManPrintVerbose( Aig_Man_t * p, int fHaig )Aig_ManPrintVerbose698,20903
void Aig_ManDump( Aig_Man_t * p )Aig_ManDump725,21594
void Aig_ManDumpBlif( Aig_Man_t * p, char * pFileName, Vec_Ptr_t * vPiNames, Vec_Ptr_t * vPoNames )Aig_ManDumpBlif746,22200
void Aig_ManDumpVerilog( Aig_Man_t * p, char * pFileName )Aig_ManDumpVerilog861,26565
void Aig_ManSetCioIds( Aig_Man_t * p )Aig_ManSetCioIds978,30773
void Aig_ManCleanCioIds( Aig_Man_t * p )Aig_ManCleanCioIds999,31227
int Aig_ManChoiceNum( Aig_Man_t * p )Aig_ManChoiceNum1020,31689
void Aig_ManPrintControlFanouts( Aig_Man_t * p )Aig_ManPrintControlFanouts1040,32195
char * Aig_FileNameGenericAppend( char * pBase, char * pSuffix )Aig_FileNameGenericAppend1083,33349
void Aig_ManRandomTest2()Aig_ManRandomTest21107,34013
void Aig_ManRandomTest1()Aig_ManRandomTest11137,34865
#define NUMBER1 NUMBER11156,35302
#define NUMBER2 NUMBER21157,35331
unsigned Aig_ManRandom( int fReset )Aig_ManRandom1170,35684
word Aig_ManRandom64( int fReset )Aig_ManRandom641195,36275
void Aig_ManRandomInfo( Vec_Ptr_t * vInfo, int iInputStart, int iWordStart, int iWordStop )Aig_ManRandomInfo1213,36686
void Aig_NodeUnionLists( Vec_Ptr_t * vArr1, Vec_Ptr_t * vArr2, Vec_Ptr_t * vArr )Aig_NodeUnionLists1233,37324
void Aig_NodeIntersectLists( Vec_Ptr_t * vArr1, Vec_Ptr_t * vArr2, Vec_Ptr_t * vArr )Aig_NodeIntersectLists1272,38721
void Aig_ManCounterExampleValueStart( Aig_Man_t * pAig, Abc_Cex_t * pCex )Aig_ManCounterExampleValueStart1326,40600
void Aig_ManCounterExampleValueStop( Aig_Man_t * pAig )Aig_ManCounterExampleValueStop1385,43513
int Aig_ManCounterExampleValueLookup(  Aig_Man_t * pAig, int Id, int iFrame )Aig_ManCounterExampleValueLookup1405,44216
void Aig_ManCounterExampleValueTest( Aig_Man_t * pAig, Abc_Cex_t * pCex )Aig_ManCounterExampleValueTest1422,44713
void Aig_ManSetPhase( Aig_Man_t * pAig )Aig_ManSetPhase1444,45530
Vec_Ptr_t * Aig_ManMuxesCollect( Aig_Man_t * pAig )Aig_ManMuxesCollect1473,46369
void Aig_ManMuxesDeref( Aig_Man_t * pAig, Vec_Ptr_t * vMuxes )Aig_ManMuxesDeref1496,46908
void Aig_ManMuxesRef( Aig_Man_t * pAig, Vec_Ptr_t * vMuxes )Aig_ManMuxesRef1526,47628
void Aig_ManInvertConstraints( Aig_Man_t * pAig )Aig_ManInvertConstraints1556,48364

src/aig/aig/aigPartReg.c,2385
typedef struct Aig_ManPre_t_         Aig_ManPre_t;Aig_ManPre_t31,797
struct Aig_ManPre_t_Aig_ManPre_t_33,849
    Aig_Man_t *     pAig;            // seq AIG manager pAig36,894
    Vec_Ptr_t *     vMatrix;         // register dependencyvMatrix37,951
    int             nRegsMax;        // the max number of registers in the clusternRegsMax38,1011
    Vec_Ptr_t *     vParts;          // the partitionsvParts40,1130
    char *          pfUsedRegs;      // the registers already included in the partitionspfUsedRegs41,1185
    Vec_Int_t *     vRegs;           // registers of this partitionvRegs43,1314
    Vec_Int_t *     vUniques;        // unique registers of this partitionvUniques44,1382
    Vec_Int_t *     vFreeVars;       // free variables of this partitionvFreeVars45,1457
    Vec_Flt_t *     vPartCost;       // costs of adding each variablevPartCost46,1530
    char *          pfPartVars;      // input/output registers of the partitionpfPartVars47,1600
Aig_ManPre_t * Aig_ManRegManStart( Aig_Man_t * pAig, int nPartSize )Aig_ManRegManStart66,2174
void Aig_ManRegManStop( Aig_ManPre_t * p )Aig_ManRegManStop96,3129
int Aig_ManRegFindSeed( Aig_ManPre_t * p )Aig_ManRegFindSeed122,3877
int Aig_ManRegFindBestVar( Aig_ManPre_t * p )Aig_ManRegFindBestVar156,4764
void Aig_ManRegPartitionAdd( Aig_ManPre_t * p, int iReg )Aig_ManRegPartitionAdd200,6024
Vec_Ptr_t * Aig_ManRegProjectOnehots( Aig_Man_t * pAig, Aig_Man_t * pPart, Vec_Ptr_t * vOnehots, int fVerbose )Aig_ManRegProjectOnehots248,7462
Aig_Man_t * Aig_ManRegCreatePart( Aig_Man_t * pAig, Vec_Int_t * vPart, int * pnCountPis, int * pnCountRegs, int ** ppMapBack )Aig_ManRegCreatePart308,9444
Vec_Ptr_t * Aig_ManRegPartitionSmart( Aig_Man_t * pAig, int nPartSize )Aig_ManRegPartitionSmart413,13152
Vec_Ptr_t * Aig_ManRegPartitionSimple( Aig_Man_t * pAig, int nPartSize, int nOverSize )Aig_ManRegPartitionSimple474,15557
void Aig_ManPartDivide( Vec_Ptr_t * vResult, Vec_Int_t * vDomain, int nPartSize, int nOverSize )Aig_ManPartDivide513,16773
void Aig_ManRegPartitionTraverse_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vLos )Aig_ManRegPartitionTraverse_rec549,17994
Vec_Ptr_t * Aig_ManRegPartitionTraverse( Aig_Man_t * p )Aig_ManRegPartitionTraverse578,18857
Vec_Ptr_t * Aig_ManRegPartitionLinear( Aig_Man_t * pAig, int nPartSize )Aig_ManRegPartitionLinear614,19866

src/aig/aig/aigSplit.c,782
Aig_Obj_t * Aig_NodeBddToMuxes_rec( DdManager * dd, DdNode * bFunc, Aig_Man_t * pNew, st__table * tBdd2Node )Aig_NodeBddToMuxes_rec52,1398
Aig_Man_t * Aig_ManConvertBddsToAigs( Aig_Man_t * p, DdManager * dd, Vec_Ptr_t * vCofs )Aig_ManConvertBddsToAigs81,2514
DdNode * Aig_ManBuildPoBdd_rec( Aig_Man_t * p, Aig_Obj_t * pObj, DdManager * dd )Aig_ManBuildPoBdd_rec140,4553
Vec_Ptr_t * Aig_ManCofactorBdds( Aig_Man_t * p, Vec_Ptr_t * vSubset, DdManager * dd, DdNode * bFunc )Aig_ManCofactorBdds165,5404
DdManager * Aig_ManBuildPoBdd( Aig_Man_t * p, DdNode ** pbFunc )Aig_ManBuildPoBdd195,6402
Vec_Ptr_t * Aig_ManVecRandSubset( Vec_Ptr_t * vVec, int nVars )Aig_ManVecRandSubset233,7619
Aig_Man_t * Aig_ManSplit( Aig_Man_t * p, int nVars, int fVerbose )Aig_ManSplit259,8222

src/aig/aig/aigDfs.c,3306
int Aig_ManVerifyTopoOrder( Aig_Man_t * p )Aig_ManVerifyTopoOrder46,1289
void Aig_ManDfs_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Aig_ManDfs_rec119,3847
Vec_Ptr_t * Aig_ManDfs( Aig_Man_t * p, int fNodesOnly )Aig_ManDfs145,4654
void Aig_ManDfsAll_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Aig_ManDfsAll_rec181,5757
Vec_Ptr_t * Aig_ManDfsArray( Aig_Man_t * p, Aig_Obj_t ** pNodes, int nNodes )Aig_ManDfsArray202,6367
Vec_Ptr_t * Aig_ManDfsAll( Aig_Man_t * p )Aig_ManDfsAll228,7117
void Aig_ManDfsPreorder_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Aig_ManDfsPreorder_rec259,8024
Vec_Ptr_t * Aig_ManDfsPreorder( Aig_Man_t * p, int fNodesOnly )Aig_ManDfsPreorder285,8855
Vec_Vec_t * Aig_ManLevelize( Aig_Man_t * p )Aig_ManLevelize321,9953
Vec_Ptr_t * Aig_ManDfsNodes( Aig_Man_t * p, Aig_Obj_t ** ppNodes, int nNodes )Aig_ManDfsNodes347,10598
void Aig_ManDfsChoices_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Aig_ManDfsChoices_rec378,11516
Vec_Ptr_t * Aig_ManDfsChoices( Aig_Man_t * p )Aig_ManDfsChoices405,12373
void Aig_ManDfsReverse_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Aig_ManDfsReverse_rec446,13502
Vec_Ptr_t * Aig_ManDfsReverse( Aig_Man_t * p )Aig_ManDfsReverse472,14324
int Aig_ManLevelNum( Aig_Man_t * p )Aig_ManLevelNum500,15086
void Aig_ManChoiceLevel_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManChoiceLevel_rec523,15622
int Aig_ManChoiceLevel( Aig_Man_t * p )Aig_ManChoiceLevel595,18000
void Aig_ConeMark_rec( Aig_Obj_t * pObj )Aig_ConeMark_rec635,19043
void Aig_ConeCleanAndMark_rec( Aig_Obj_t * pObj )Aig_ConeCleanAndMark_rec657,19660
int Aig_ConeCountAndMark_rec( Aig_Obj_t * pObj )Aig_ConeCountAndMark_rec680,20325
void Aig_ConeUnmark_rec( Aig_Obj_t * pObj )Aig_ConeUnmark_rec704,21024
int Aig_DagSize( Aig_Obj_t * pObj )Aig_DagSize726,21650
void Aig_SupportSize_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int * pCounter )Aig_SupportSize_rec745,22104
int Aig_SupportSize( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_SupportSize772,22846
int Aig_SupportSizeTest( Aig_Man_t * p )Aig_SupportSizeTest793,23369
void Aig_Support_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vSupp )Aig_Support_rec817,24048
Vec_Ptr_t * Aig_Support( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_Support846,24837
void Aig_SupportNodes( Aig_Man_t * p, Aig_Obj_t ** ppObjs, int nObjs, Vec_Ptr_t * vSupp )Aig_SupportNodes868,25390
void Aig_Transfer_rec( Aig_Man_t * pDest, Aig_Obj_t * pObj )Aig_Transfer_rec895,26154
Aig_Obj_t * Aig_Transfer( Aig_Man_t * pSour, Aig_Man_t * pDest, Aig_Obj_t * pRoot, int nVars )Aig_Transfer918,26888
void Aig_Compose_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pFunc, Aig_Obj_t * pVar )Aig_Compose_rec952,27938
Aig_Obj_t * Aig_Compose( Aig_Man_t * p, Aig_Obj_t * pRoot, Aig_Obj_t * pFunc, int iVar )Aig_Compose980,28848
void Aig_ObjCollectCut_rec( Aig_Obj_t * pNode, Vec_Ptr_t * vNodes )Aig_ObjCollectCut_rec1006,29683
void Aig_ObjCollectCut( Aig_Obj_t * pRoot, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vNodes )Aig_ObjCollectCut1031,30453
int Aig_ObjCollectSuper_rec( Aig_Obj_t * pRoot, Aig_Obj_t * pObj, Vec_Ptr_t * vSuper )Aig_ObjCollectSuper_rec1065,31364
int Aig_ObjCollectSuper( Aig_Obj_t * pObj, Vec_Ptr_t * vSuper )Aig_ObjCollectSuper1111,33000

src/aig/aig/aigCanon.c,3646
#define RMAN_MAXVARS RMAN_MAXVARS33,865
#define RMAX_MAXWORD RMAX_MAXWORD34,890
typedef struct Aig_VSig_t_ Aig_VSig_t;Aig_VSig_t36,965
struct Aig_VSig_t_Aig_VSig_t_37,1004
    int           nOnes;nOnes39,1025
    int           nCofOnes[RMAN_MAXVARS];nCofOnes40,1050
typedef struct Aig_Tru_t_ Aig_Tru_t;Aig_Tru_t43,1096
struct Aig_Tru_t_Aig_Tru_t_44,1133
    Aig_Tru_t *   pNext;pNext46,1153
    int           Id;    Id47,1178
    unsigned      nVisits : 27;nVisits48,1204
    unsigned      nVars   :  5;nVars49,1236
    unsigned      pTruth[0];pTruth50,1268
typedef struct Aig_RMan_t_ Aig_RMan_t;Aig_RMan_t53,1301
struct Aig_RMan_t_Aig_RMan_t_54,1340
    int           nVars;       // the largest variable numbernVars56,1361
    Aig_Man_t *   pAig;        // recorded subgraphspAig57,1423
    int           nBins;nBins59,1494
    Aig_Tru_t **  pBins;pBins60,1519
    int           nEntries;nEntries61,1544
    Aig_MmFlex_t* pMemTrus;pMemTrus62,1572
    Bdc_Man_t *   pBidec;pBidec64,1621
    unsigned      pTruthInit[RMAX_MAXWORD]; // canonical truth tablepTruthInit66,1666
    unsigned      pTruth[RMAX_MAXWORD];     // current truth tablepTruth67,1735
    unsigned      pTruthC[RMAX_MAXWORD];    // canonical truth tablepTruthC68,1802
    unsigned      pTruthTemp[RMAX_MAXWORD]; // temporary truth tablepTruthTemp69,1871
    Aig_VSig_t    pMints[2*RMAN_MAXVARS];   // minterm countpMints70,1940
    char          pPerm[RMAN_MAXVARS];      // permutationpPerm71,2001
    char          pPermR[RMAN_MAXVARS];     // reverse permutationpPermR72,2060
    int           nVarFuncs[RMAN_MAXVARS+1];nVarFuncs74,2145
    int           nTotal;nTotal75,2190
    int           nTtDsd;nTtDsd76,2216
    int           nTtDsdPart;nTtDsdPart77,2242
    int           nTtDsdNot;nTtDsdNot78,2272
    int           nUniqueVars;nUniqueVars79,2301
static Aig_RMan_t * s_pRMan = NULL;s_pRMan82,2336
Aig_RMan_t * Aig_RManStart()Aig_RManStart99,2855
static inline int Aig_RManTableHash( unsigned * pTruth, int nVars, int nBins, int * pPrimes )Aig_RManTableHash130,3690
Aig_Tru_t ** Aig_RManTableLookup( Aig_RMan_t * p, unsigned * pTruth, int nVars )Aig_RManTableLookup150,4234
void Aig_RManTableResize( Aig_RMan_t * p )Aig_RManTableResize174,5036
int Aig_RManTableFindOrAdd( Aig_RMan_t * p, unsigned * pTruth, int nVars )Aig_RManTableFindOrAdd218,6411
void Aig_RManStop( Aig_RMan_t * p )Aig_RManStop252,7386
void Aig_RManQuit()Aig_RManQuit283,8293
void Aig_RManPrintVarProfile( unsigned * pTruth, int nVars,  unsigned * pTruthAux )Aig_RManPrintVarProfile308,8969
void Aig_RManSortNums( int * pArray, int nVars )Aig_RManSortNums329,9547
void Aig_RManPrintSigs( Aig_VSig_t * pSigs, int nVars )Aig_RManPrintSigs353,10155
void Aig_RManComputeVSigs( unsigned * pTruth, int nVars, Aig_VSig_t * pSigs, unsigned * pAux )Aig_RManComputeVSigs382,10869
static inline int Aig_RManCompareSigs( Aig_VSig_t * p0, Aig_VSig_t * p1, int nVars )Aig_RManCompareSigs410,11802
int Aig_RManVarsAreUnique( Aig_VSig_t * pMints, int nVars )Aig_RManVarsAreUnique427,12272
void Aig_RManPrintUniqueVars( Aig_VSig_t * pMints, int nVars )Aig_RManPrintUniqueVars447,12775
unsigned Aig_RManSemiCanonicize( unsigned * pOut, unsigned * pIn, int nVars, char * pCanonPerm, Aig_VSig_t * pSigs, int fReturnIn )Aig_RManSemiCanonicize479,13636
static inline Aig_Obj_t * Bdc_FunCopyHop( Bdc_Fun_t * pObj )  Bdc_FunCopyHop544,15565
void Aig_RManSaveOne( Aig_RMan_t * p, unsigned * pTruth, int nVars )Aig_RManSaveOne558,15981
void Aig_RManRecord( unsigned * pTruth, int nVarsInit )Aig_RManRecord598,17246

src/aig/aig/aigTest.c,48
void Aig_ProcedureTest()Aig_ProcedureTest8,47

src/aig/aig/aigTsim.c,2842
#define TSI_MAX_ROUNDS TSI_MAX_ROUNDS31,786
#define TSI_ONE_SERIES TSI_ONE_SERIES32,817
#define AIG_XVS0 AIG_XVS034,849
#define AIG_XVS1 AIG_XVS135,870
#define AIG_XVSX AIG_XVSX36,891
static inline void Aig_ObjSetXsim( Aig_Obj_t * pObj, int Value )  { pObj->nCuts = Value;  }Aig_ObjSetXsim38,913
static inline int  Aig_ObjGetXsim( Aig_Obj_t * pObj )             { return pObj->nCuts;   }Aig_ObjGetXsim39,1005
static inline int  Aig_XsimInv( int Value )   Aig_XsimInv40,1097
static inline int  Aig_XsimAnd( int Value0, int Value1 )   Aig_XsimAnd49,1318
static inline int  Aig_XsimRand2()   Aig_XsimRand258,1614
static inline int  Aig_XsimRand3()   Aig_XsimRand362,1713
static inline int  Aig_ObjGetXsimFanin0( Aig_Obj_t * pObj )       Aig_ObjGetXsimFanin070,1877
static inline int  Aig_ObjGetXsimFanin1( Aig_Obj_t * pObj )       Aig_ObjGetXsimFanin176,2086
static inline void Aig_XsimPrint( FILE * pFile, int Value )   Aig_XsimPrint82,2295
typedef struct Aig_Tsi_t_ Aig_Tsi_t;Aig_Tsi_t99,2629
struct Aig_Tsi_t_Aig_Tsi_t_100,2666
    Aig_Man_t *      pAig;              // the original AIG managerpAig102,2686
    int              nWords;            // the number of words in the statesnWords104,2790
    Vec_Ptr_t *      vStates;           // the collection of ternary statesvStates105,2867
    Aig_MmFixed_t *  pMem;              // memory for ternary statespMem106,2943
    unsigned **      pBins;pBins108,3051
    int              nBins;nBins109,3079
static inline unsigned * Aig_TsiNext( unsigned * pState, int nWords )                      { return *((unsigned **)(pState + nWords));  }Aig_TsiNext112,3111
static inline void       Aig_TsiSetNext( unsigned * pState, int nWords, unsigned * pNext ) { *((unsigned **)(pState + nWords)) = pNext; }Aig_TsiSetNext113,3249
Aig_Tsi_t * Aig_TsiStart( Aig_Man_t * pAig )Aig_TsiStart130,3871
void Aig_TsiStop( Aig_Tsi_t * p )Aig_TsiStop156,4668
int Aig_TsiStateHash( unsigned * pState, int nWords, int nTableSize )Aig_TsiStateHash175,5110
int Aig_TsiStateLookup( Aig_Tsi_t * p, unsigned * pState, int nWords )Aig_TsiStateLookup211,6535
void Aig_TsiStateInsert( Aig_Tsi_t * p, unsigned * pState, int nWords )Aig_TsiStateInsert233,7154
unsigned * Aig_TsiStateNew( Aig_Tsi_t * p )Aig_TsiStateNew252,7698
void Aig_TsiStatePrint( Aig_Tsi_t * p, unsigned * pState )Aig_TsiStatePrint272,8205
int Aig_TsiStateCount( Aig_Tsi_t * p, unsigned * pState )Aig_TsiStateCount301,9043
void Aig_TsiStateOrAll( Aig_Tsi_t * pTsi, unsigned * pState )Aig_TsiStateOrAll324,9672
Vec_Ptr_t * Aig_ManTernarySimulate( Aig_Man_t * p, int fVerbose, int fVeryVerbose )Aig_ManTernarySimulate348,10322
Aig_Man_t * Aig_ManConstReduce( Aig_Man_t * p, int fUseMvSweep, int nFramesSymb, int nFramesSatur, int fVerbose, int fVeryVerbose )Aig_ManConstReduce498,15387

src/aig/aig/aigObj.c,1223
Aig_Obj_t * Aig_ObjCreateCi( Aig_Man_t * p )Aig_ObjCreateCi45,1238
Aig_Obj_t * Aig_ObjCreateCo( Aig_Man_t * p, Aig_Obj_t * pDriver )Aig_ObjCreateCo66,1733
Aig_Obj_t * Aig_ObjCreate( Aig_Man_t * p, Aig_Obj_t * pGhost )Aig_ObjCreate89,2298
void Aig_ObjConnect( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pFan0, Aig_Obj_t * pFan1 )Aig_ObjConnect126,3531
void Aig_ObjDisconnect( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjDisconnect171,5040
void Aig_ObjDelete( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjDelete209,6157
void Aig_ObjDelete_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int fFreeTop )Aig_ObjDelete_rec232,6794
void Aig_ObjDeletePo( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjDeletePo261,7697
void Aig_ObjPatchFanin0( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pFaninNew )Aig_ObjPatchFanin0282,8260
void Aig_ObjPrint( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjPrint316,9371
void Aig_NodeFixBufferFanins( Aig_Man_t * p, Aig_Obj_t * pObj, int fUpdateLevel )Aig_NodeFixBufferFanins393,12112
int Aig_ManPropagateBuffers( Aig_Man_t * p, int fUpdateLevel )Aig_ManPropagateBuffers432,13507
void Aig_ObjReplace( Aig_Man_t * p, Aig_Obj_t * pObjOld, Aig_Obj_t * pObjNew, int fUpdateLevel )Aig_ObjReplace467,14686

src/aig/aig/aigMffc.c,944
int Aig_NodeDeref_rec( Aig_Obj_t * pNode, unsigned LevelMin, float * pPower, float * pProbs )Aig_NodeDeref_rec45,1244
int Aig_NodeRef_rec( Aig_Obj_t * pNode, unsigned LevelMin )Aig_NodeRef_rec86,2617
int Aig_NodeRefLabel_rec( Aig_Man_t * p, Aig_Obj_t * pNode, unsigned LevelMin )Aig_NodeRefLabel_rec118,3571
void Aig_NodeMffcSupp_rec( Aig_Man_t * p, Aig_Obj_t * pNode, unsigned LevelMin, Vec_Ptr_t * vSupp, int fTopmost, Aig_Obj_t * pObjSkip )Aig_NodeMffcSupp_rec150,4613
int Aig_NodeMffcSupp( Aig_Man_t * p, Aig_Obj_t * pNode, int LevelMin, Vec_Ptr_t * vSupp )Aig_NodeMffcSupp179,5664
int Aig_NodeMffcLabel( Aig_Man_t * p, Aig_Obj_t * pNode, float * pPower )Aig_NodeMffcLabel211,6668
int Aig_NodeMffcLabelCut( Aig_Man_t * p, Aig_Obj_t * pNode, Vec_Ptr_t * vLeaves )Aig_NodeMffcLabelCut236,7496
int Aig_NodeMffcExtendCut( Aig_Man_t * p, Aig_Obj_t * pNode, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vResult )Aig_NodeMffcExtendCut265,8426

src/aig/aig/aigScl.c,1045
Aig_Man_t * Aig_ManRemap( Aig_Man_t * p, Vec_Ptr_t * vMap )Aig_ManRemap46,1321
void Aig_ManSeqCleanup_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Aig_ManSeqCleanup_rec126,4225
int Aig_ManSeqCleanup( Aig_Man_t * p )Aig_ManSeqCleanup158,5161
int Aig_ManSeqCleanupBasic( Aig_Man_t * p )Aig_ManSeqCleanupBasic257,8807
int Aig_ManCountMergeRegs( Aig_Man_t * p )Aig_ManCountMergeRegs310,10466
int Aig_ManReduceLachesCount( Aig_Man_t * p )Aig_ManReduceLachesCount347,11426
Vec_Ptr_t * Aig_ManReduceLachesOnce( Aig_Man_t * p )Aig_ManReduceLachesOnce394,12615
Aig_Man_t * Aig_ManReduceLaches( Aig_Man_t * p, int fVerbose )Aig_ManReduceLaches455,14309
void Aig_ManComputeSccs( Aig_Man_t * p )Aig_ManComputeSccs489,15266
Aig_Man_t * Aig_ManSclPart( Aig_Man_t * pAig, int fLatchConst, int fLatchEqual, int fVerbose ) Aig_ManSclPart598,18783
Aig_Man_t * Aig_ManScl( Aig_Man_t * pAig, int fLatchConst, int fLatchEqual, int fUseMvSweep, int nFramesSymb, int nFramesSatur, int fVerbose, int fVeryVerbose )Aig_ManScl650,20600

src/aig/aig/aigCheck.c,189
int Aig_ManCheck( Aig_Man_t * p )Aig_ManCheck45,1264
void Aig_ManCheckMarkA( Aig_Man_t * p )Aig_ManCheckMarkA132,4252
void Aig_ManCheckPhase( Aig_Man_t * p )Aig_ManCheckPhase151,4680

src/aig/saig/saigInd.c,480
int Saig_ManStatesAreEqual( sat_solver * pSat, Vec_Int_t * vState, int nRegs, int i, int k )Saig_ManStatesAreEqual48,1450
int Saig_ManAddUniqueness( sat_solver * pSat, Vec_Int_t * vState, int nRegs, int i, int k, int * pnSatVarNum, int * pnClauses, int fVerbose )Saig_ManAddUniqueness91,2731
int Saig_ManInduction( Aig_Man_t * p, int nTimeOut, int nFramesMax, int nConfMax, int fUnique, int fUniqueAll, int fGetCex, int fVerbose, int fVeryVerbose )Saig_ManInduction149,4655

src/aig/saig/saigUnfold2.c,879
int  Saig_ManFilterUsingIndOne2( Aig_Man_t * p, Aig_Man_t * pFrame, sat_solver * pSat, Cnf_Dat_t * pCnf, int nConfs, int nProps, int Counter Saig_ManFilterUsingIndOne22,1
Aig_Man_t * Saig_ManCreateIndMiter2( Aig_Man_t * pAig, Vec_Vec_t * vCands )Saig_ManCreateIndMiter222,704
void Saig_ManFilterUsingInd2( Aig_Man_t * p, Vec_Vec_t * vCands, int nConfs, int nProps, int fVerbose )Saig_ManFilterUsingInd2120,4363
Vec_Vec_t * Ssw_ManFindDirectImplications2( Aig_Man_t * p, int nFrames, int nConfs, int nProps, int fVerbose )Ssw_ManFindDirectImplications2197,7290
Aig_Man_t * Saig_ManDupUnfoldConstrsFunc2( Aig_Man_t * pAig, int nFrames, int nConfs, int nProps, int fOldAlgo, int fVerbose , int * typeII_cnt){Saig_ManDupUnfoldConstrsFunc2295,10834
Aig_Man_t * Saig_ManDupFoldConstrsFunc2( Aig_Man_t * pAig, int fCompl, int fVerbose , Saig_ManDupFoldConstrsFunc2375,13508

src/aig/saig/saigGlaPba2.c,2258
typedef struct Aig_Gla3Man_t_ Aig_Gla3Man_t;Aig_Gla3Man_t31,814
struct Aig_Gla3Man_t_Aig_Gla3Man_t_32,859
    Aig_Man_t *    pAig;pAig35,900
    int            nStart;nStart36,925
    int            nFramesMax;nFramesMax37,952
    int            fVerbose;fVerbose38,983
    Vec_Int_t *    vObj2Vec;   // maps obj ID into its vec IDvObj2Vec40,1029
    Vec_Int_t *    vVec2Var;   // maps vec ID into its sat Var (nFrames per vec ID)vVec2Var41,1091
    Vec_Int_t *    vVar2Inf;   // maps sat Var into its frame and obj IDvVar2Inf42,1175
    Vec_Int_t *    vCla2Obj;   // maps clause into its root objectvCla2Obj44,1270
    Vec_Int_t *    vCla2Fra;   // maps clause into its framevCla2Fra45,1337
    Vec_Int_t *    vVec2Use;   // maps vec ID into its used frames (nFrames per vec ID)vVec2Use46,1398
    sat_solver2 *  pSat;pSat48,1504
    clock_t        timePre;timePre50,1547
    clock_t        timeSat;timeSat51,1575
    clock_t        timeTotal;timeTotal52,1603
#define ABC_CPS ABC_CPS59,1857
static inline int Aig_Gla3AddConst( sat_solver2 * pSat, int iVar, int fCompl )Aig_Gla3AddConst72,2141
static inline int Aig_Gla3AddBuffer( sat_solver2 * pSat, int iVar0, int iVar1, int fCompl )Aig_Gla3AddBuffer91,2619
static inline int Aig_Gla3AddNode( sat_solver2 * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1 )Aig_Gla3AddNode119,3327
int Aig_Gla3FetchVar( Aig_Gla3Man_t * p, Aig_Obj_t * pObj, int k )Aig_Gla3FetchVar154,4284
void Aig_Gla3AssignVars_rec( Aig_Gla3Man_t * p, Aig_Obj_t * pObj, int f )Aig_Gla3AssignVars_rec188,5345
int Aig_Gla3CreateSatSolver( Aig_Gla3Man_t * p )Aig_Gla3CreateSatSolver223,6349
Aig_Gla3Man_t * Aig_Gla3ManStart( Aig_Man_t * pAig, int nStart, int nFramesMax, int fVerbose )Aig_Gla3ManStart329,10238
void Aig_Gla3ManStop( Aig_Gla3Man_t * p )Aig_Gla3ManStop367,11298
Vec_Int_t * Aig_Gla3ManUnsatCore( sat_solver2 * pSat, int nConfMax, int fVerbose, int * piRetValue )Aig_Gla3ManUnsatCore393,11914
Vec_Int_t * Aig_Gla3ManCollect( Aig_Gla3Man_t * p, Vec_Int_t * vCore )Aig_Gla3ManCollect443,13361
Vec_Int_t * Aig_Gla3ManPerform( Aig_Man_t * pAig, int nStart, int nFramesMax, int nConfLimit, int TimeLimit, int fSkipRand, int fVerbose )Aig_Gla3ManPerform495,15346

src/aig/saig/saigSimSeq.c,3197
typedef struct Raig_Man_t_ Raig_Man_t;Raig_Man_t32,850
struct Raig_Man_t_Raig_Man_t_33,889
    Aig_Man_t *     pAig;         // the AIG to be used for simulationpAig36,928
    int             nWords;       // the number of words to simulatenWords37,999
    int             nPis;         // the number of primary inputsnPis39,1094
    int             nPos;         // the number of primary outputsnPos40,1160
    int             nCis;         // the number of combinational inputsnCis41,1227
    int             nCos;         // the number of combinational outputsnCos42,1299
    int             nNodes;       // the number of internal nodesnNodes43,1372
    int             nObjs;        // nCis + nNodes + nCos + 2nObjs44,1438
    int *           pFans0;       // fanin0 for all objectspFans045,1500
    int *           pFans1;       // fanin1 for all objectspFans146,1560
    Vec_Int_t *     vCis2Ids;     // mapping of CIs into their PI idsvCis2Ids47,1620
    Vec_Int_t *     vLos;         // register outputsvLos48,1690
    Vec_Int_t *     vLis;         // register inputsvLis49,1744
    int *           pRefs;        // reference counter for each nodepRefs51,1820
    unsigned *      pSims;        // simlulation information for each nodepSims52,1889
    unsigned *      pMems;        // allocated simulaton memorypMems54,1988
    int             nWordsAlloc;  // the number of allocated entriesnWordsAlloc55,2052
    int             nMems;        // the number of used entries  nMems56,2121
    int             nMemsMax;     // the max number of used entries nMemsMax57,2187
    int             MemFree;      // next free entryMemFree58,2256
static inline int  Raig_Var2Lit( int Var, int fCompl )  { return Var + Var + fCompl; }Raig_Var2Lit61,2313
static inline int  Raig_Lit2Var( int Lit )              { return Lit >> 1;           }Raig_Lit2Var62,2400
static inline int  Raig_LitIsCompl( int Lit )           { return Lit & 1;            }Raig_LitIsCompl63,2487
static inline int  Raig_LitNot( int Lit )               { return Lit ^ 1;            }Raig_LitNot64,2574
static inline int  Raig_LitNotCond( int Lit, int c )    { return Lit ^ (int)(c > 0); }Raig_LitNotCond65,2661
static inline int  Raig_LitRegular( int Lit )           { return Lit & ~01;          }Raig_LitRegular66,2748
int Raig_ManFindPo( Aig_Man_t * pAig, int iNode )Raig_ManFindPo83,3333
int Raig_ManCreate_rec( Raig_Man_t * p, Aig_Obj_t * pObj )Raig_ManCreate_rec104,3799
Raig_Man_t * Raig_ManCreate( Aig_Man_t * pAig )Raig_ManCreate146,4983
void Raig_ManDelete( Raig_Man_t * p )Raig_ManDelete203,6785
unsigned * Raig_ManSimRef( Raig_Man_t * p, int i )Raig_ManSimRef227,7328
unsigned * Raig_ManSimDeref( Raig_Man_t * p, int i )Raig_ManSimDeref275,8640
int Raig_ManSimulateRound( Raig_Man_t * p, int fMiter, int fFirst, int * piPat )Raig_ManSimulateRound304,9328
Abc_Cex_t * Raig_ManGenerateCounter( Aig_Man_t * pAig, int iFrame, int iOut, int nWords, int iPat, Vec_Int_t * vCis2Ids )Raig_ManGenerateCounter416,13321
int Raig_ManSimulate( Aig_Man_t * pAig, int nWords, int nIters, int TimeLimit, int fMiter, int fVerbose )Raig_ManSimulate454,14482

src/aig/saig/saigTrans.c,1460
static inline void Saig_ManStartMap1( Aig_Man_t * p, int nFrames )Saig_ManStartMap152,1517
static inline void Saig_ManStopMap1( Aig_Man_t * p )Saig_ManStopMap163,1831
static inline int Saig_ManHasMap1( Aig_Man_t * p )Saig_ManHasMap169,1983
static inline void Saig_ManSetMap1( Aig_Man_t * p, Aig_Obj_t * pOld, int f1, Aig_Obj_t * pNew ) Saig_ManSetMap173,2074
static inline int Saig_ManGetMap1( Aig_Man_t * p, Aig_Obj_t * pOld, int f1 )Saig_ManGetMap181,2404
static inline void Saig_ManStartMap2( Aig_Man_t * p, int nFrames )Saig_ManStartMap299,2922
static inline void Saig_ManStopMap2( Aig_Man_t * p )Saig_ManStopMap2110,3242
static inline int Saig_ManHasMap2( Aig_Man_t * p )Saig_ManHasMap2116,3397
static inline void Saig_ManSetMap2( Aig_Man_t * p, Aig_Obj_t * pOld, int f1, Aig_Obj_t * pNew, int f2 ) Saig_ManSetMap2120,3489
static inline int Saig_ManGetMap2( Aig_Man_t * p, Aig_Obj_t * pOld, int f1, int * pf2 )Saig_ManGetMap2129,3884
void Saig_ManCreateMapping( Aig_Man_t * pAig, Aig_Man_t * pFrames, int nFrames )Saig_ManCreateMapping148,4461
Aig_Man_t * Saig_ManFramesNonInitial( Aig_Man_t * pAig, int nFrames )Saig_ManFramesNonInitial195,6167
Aig_Man_t * Saig_ManFramesInitialMapped( Aig_Man_t * pAig, int nFrames, int nFramesMax, int fInit )Saig_ManFramesInitialMapped256,8332
Aig_Man_t * Saig_ManTimeframeSimplify( Aig_Man_t * pAig, int nFrames, int nFramesMax, int fInit, int fVerbose )Saig_ManTimeframeSimplify378,12748

src/aig/saig/saigScl.c,176
void Saig_ManReportUselessRegisters( Aig_Man_t * pAig )Saig_ManReportUselessRegisters45,1257
int Saig_ManReportComplements( Aig_Man_t * p )Saig_ManReportComplements85,2519

src/aig/saig/saigDual.c,816
static inline void        Saig_ObjSetDual( Vec_Ptr_t * vCopies, int Id, int fPos, Aig_Obj_t * pItem ) { Vec_PtrWriteEntry( vCopies, 2*Id+fPos, pItem );         }Saig_ObjSetDual30,784
static inline Aig_Obj_t * Saig_ObjDual( Vec_Ptr_t * vCopies, int Id, int fPos )                       { return (Aig_Obj_t *)Vec_PtrEntry( vCopies, 2*Id+fPos ); }Saig_ObjDual31,946
static inline void        Saig_ObjDualFanin( Aig_Man_t * pAigNew, Vec_Ptr_t * vCopies, Aig_Obj_t * pObj, int iFanin, Aig_Obj_t ** ppRes0, Aig_Obj_t ** ppRes1 ) {Saig_ObjDualFanin33,1109
Aig_Man_t * Saig_ManDupDual( Aig_Man_t * pAig, Vec_Int_t * vDcFlops, int nDualPis, int fDualFfs, int fMiterFfs, int fComplPo, int fCheckZero, int fCheckOne )Saig_ManDupDual81,2802
void Saig_ManBlockPo( Aig_Man_t * pAig, int nCycles )Saig_ManBlockPo209,7569

src/aig/saig/saigIoa.c,486
char * Saig_ObjName( Aig_Man_t * p, Aig_Obj_t * pObj )Saig_ObjName46,1273
void Saig_ManDumpBlif( Aig_Man_t * p, char * pFileName )Saig_ManDumpBlif75,2342
char * Saig_ManReadToken( FILE * pFile )Saig_ManReadToken155,5123
int Saig_ManReadNumber( Aig_Man_t * p, char * pToken )Saig_ManReadNumber174,5552
Aig_Obj_t * Saig_ManReadNode( Aig_Man_t * p, int * pNum2Id, char * pToken )Saig_ManReadNode197,6098
Aig_Man_t * Saig_ManReadBlif( char * pFileName )Saig_ManReadBlif246,7206

src/aig/saig/saigRefSat.c,2334
typedef struct Saig_RefMan_t_ Saig_RefMan_t;Saig_RefMan_t33,873
struct Saig_RefMan_t_Saig_RefMan_t_34,918
    Aig_Man_t * pAig;       // user's AIGpAig37,959
    Abc_Cex_t * pCex;       // user's CEXpCex38,1001
    int         nInputs;    // the number of first inputs to skipnInputs39,1043
    int         fVerbose;   // verbose flagfVerbose40,1109
    Aig_Man_t * pFrames;    // unrolled timeframespFrames42,1170
    Vec_Int_t * vMapPiF2A;  // mapping of frame PIs into real PIsvMapPiF2A43,1221
Vec_Int_t * Saig_RefManReason2Inputs( Saig_RefMan_t * p, Vec_Int_t * vReasons )Saig_RefManReason2Inputs64,1941
Abc_Cex_t * Saig_RefManReason2Cex( Saig_RefMan_t * p, Vec_Int_t * vReasons )Saig_RefManReason2Cex93,2838
void Saig_RefManFindReason_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Int_t * vPrios, Vec_Int_t * vReasons )Saig_RefManFindReason_rec120,3725
Vec_Int_t * Saig_RefManFindReason( Saig_RefMan_t * p )Saig_RefManFindReason168,5404
void Saig_ManUnrollCollect_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vObjs, Vec_Int_t * vRoots )Saig_ManUnrollCollect_rec236,8034
Aig_Man_t * Saig_ManUnrollWithCex( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, Vec_Int_t ** pvMapPiF2A )Saig_ManUnrollWithCex264,8988
Saig_RefMan_t * Saig_RefManStart( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, int fVerbose )Saig_RefManStart363,12676
void Saig_RefManStop( Saig_RefMan_t * p )Saig_RefManStop386,13290
int Saig_RefManSetPhases( Saig_RefMan_t * p, Abc_Cex_t * pCare, int fValue1 )Saig_RefManSetPhases404,13695
Vec_Vec_t * Saig_RefManOrderLiterals( Saig_RefMan_t * p, Vec_Int_t * vVar2PiId, Vec_Int_t * vAssumps )Saig_RefManOrderLiterals438,15040
Abc_Cex_t * Saig_RefManCreateCex( Saig_RefMan_t * p, Vec_Int_t * vVar2PiId, Vec_Int_t * vAssumps )Saig_RefManCreateCex473,16261
Abc_Cex_t * Saig_RefManRunSat( Saig_RefMan_t * p, int fNewOrder )Saig_RefManRunSat502,17266
Vec_Int_t * Saig_RefManRefineWithSat( Saig_RefMan_t * p, Vec_Int_t * vAigPis )Saig_RefManRefineWithSat706,24412
Abc_Cex_t * Saig_ManFindCexCareBits( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, int fNewOrder, int fVerbose )Saig_ManFindCexCareBits866,30392
Vec_Int_t * Saig_ManExtendCounterExampleTest3( Aig_Man_t * pAig, int iFirstFlopPi, Abc_Cex_t * pCex, int fVerbose )Saig_ManExtendCounterExampleTest3930,32242

src/aig/saig/saigStrSim.c,2922
#define SAIG_WORDS SAIG_WORDS31,821
static inline Aig_Obj_t *  Saig_ObjNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj )                       { return ppNexts[pObj->Id];  }Saig_ObjNext33,845
static inline void         Saig_ObjSetNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj, Aig_Obj_t * pNext ) { ppNexts[pObj->Id] = pNext; }Saig_ObjSetNext34,980
unsigned Saig_StrSimHash( Aig_Obj_t * pObj )Saig_StrSimHash51,1628
int Saig_StrSimIsEqual( Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Saig_StrSimIsEqual89,3115
int Saig_StrSimIsZero( Aig_Obj_t * pObj )Saig_StrSimIsZero111,3678
int Saig_StrSimIsOne( Aig_Obj_t * pObj )Saig_StrSimIsOne132,4158
void Saig_StrSimAssignRandom( Aig_Obj_t * pObj )Saig_StrSimAssignRandom153,4618
void Saig_StrSimAssignOne( Aig_Obj_t * pObj )Saig_StrSimAssignOne172,5061
void Saig_StrSimAssignZeroInit( Aig_Obj_t * pObj )Saig_StrSimAssignZeroInit191,5487
void Saig_StrSimulateNode( Aig_Obj_t * pObj, int i )Saig_StrSimulateNode208,5847
void Saig_StrSimSaveOutput( Aig_Obj_t * pObj, int i )Saig_StrSimSaveOutput234,6751
void Saig_StrSimTransfer( Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Saig_StrSimTransfer255,7287
void Saig_StrSimTransferNext( Aig_Obj_t * pObj0, Aig_Obj_t * pObj1, int i )Saig_StrSimTransferNext275,7801
void Saig_StrSimulateRound( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_StrSimulateRound294,8296
Aig_Obj_t * Saig_StrSimTableLookup( Aig_Obj_t ** ppTable, Aig_Obj_t ** ppNexts, int nTableSize, Aig_Obj_t * pObj )Saig_StrSimTableLookup345,9966
void Saig_StrSimTableInsert( Aig_Obj_t ** ppTable, Aig_Obj_t ** ppNexts, int nTableSize, Aig_Obj_t * pObj )Saig_StrSimTableInsert369,10687
int Saig_StrSimDetectUnique( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_StrSimDetectUnique394,11413
int Saig_StrSimCountMatchedFlops( Aig_Man_t * p )Saig_StrSimCountMatchedFlops476,14228
int Saig_StrSimCountMatchedNodes( Aig_Man_t * p )Saig_StrSimCountMatchedNodes497,14713
void Saig_StrSimPrepareAig( Aig_Man_t * p )Saig_StrSimPrepareAig518,15222
void Saig_StrSimSetInitMatching( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_StrSimSetInitMatching544,16036
void Saig_StrSimSetFinalMatching( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_StrSimSetFinalMatching571,16762
void Saig_StrSimSetContiguousMatching_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Saig_StrSimSetContiguousMatching_rec639,18956
void Saig_StrSimSetContiguousMatching( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_StrSimSetContiguousMatching678,20143
void Ssw_StrSimMatchingExtendOne( Aig_Man_t * p, Vec_Ptr_t * vNodes )Ssw_StrSimMatchingExtendOne719,21387
int Ssw_StrSimMatchingCountUnmached( Aig_Man_t * p )Ssw_StrSimMatchingCountUnmached782,23425
void Ssw_StrSimMatchingExtend( Aig_Man_t * p0, Aig_Man_t * p1, int nDist, int fVerbose )Ssw_StrSimMatchingExtend808,24051
Vec_Int_t * Saig_StrSimPerformMatching( Aig_Man_t * p0, Aig_Man_t * p1, int nDist, int fVerbose, Aig_Man_t ** ppMiter )Saig_StrSimPerformMatching873,26353

src/aig/saig/saigRetMin.c,1363
Vec_Int_t * Saig_ManRetimeInitState( Aig_Man_t * p )Saig_ManRetimeInitState50,1405
int Saig_ManRetimeUnsatCore( Aig_Man_t * p, int fVerbose )Saig_ManRetimeUnsatCore96,2907
void Saig_ManMarkCone_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Saig_ManMarkCone_rec192,6056
int Saig_ManRetimeCountCut( Aig_Man_t * p, Vec_Ptr_t * vCut )Saig_ManRetimeCountCut214,6660
void Saig_ManRetimeDup_rec( Aig_Man_t * pNew, Aig_Obj_t * pObj )Saig_ManRetimeDup_rec260,7992
Aig_Man_t * Saig_ManRetimeDupForward( Aig_Man_t * p, Vec_Ptr_t * vCut )Saig_ManRetimeDupForward281,8626
Aig_Man_t * Saig_ManRetimeDupBackward( Aig_Man_t * p, Vec_Ptr_t * vCut, Vec_Int_t * vInit )Saig_ManRetimeDupBackward340,10756
Aig_Man_t * Saig_ManRetimeDupInitState( Aig_Man_t * p, Vec_Ptr_t * vCut )Saig_ManRetimeDupInitState406,13148
Vec_Ptr_t * Saig_ManGetRegistersToExclude( Aig_Man_t * p )Saig_ManGetRegistersToExclude441,14202
int Saig_ManHideBadRegs( Aig_Man_t * p, Vec_Ptr_t * vBadRegs )Saig_ManHideBadRegs491,15479
void Saig_ManExposeBadRegs( Aig_Man_t * p, int nBadRegs )Saig_ManExposeBadRegs549,17268
Aig_Man_t * Saig_ManRetimeMinAreaBackward( Aig_Man_t * pNew, int fVerbose )Saig_ManRetimeMinAreaBackward567,17704
Aig_Man_t * Saig_ManRetimeMinArea( Aig_Man_t * p, int nMaxIters, int fForwardOnly, int fBackwardOnly, int fInitial, int fVerbose )Saig_ManRetimeMinArea623,19571

src/aig/saig/saigConstr.c,922
void Saig_DetectConstrCollectSuper_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vSuper )Saig_DetectConstrCollectSuper_rec85,2486
Vec_Ptr_t * Saig_DetectConstrCollectSuper( Aig_Obj_t * pObj )Saig_DetectConstrCollectSuper109,3234
Vec_Ptr_t * Saig_ManDetectConstrCheckCont( Vec_Ptr_t * vSuper, Vec_Ptr_t * vSuper2 )Saig_ManDetectConstrCheckCont132,4016
int Saig_ManDetectConstr( Aig_Man_t * p, int iOut, Vec_Ptr_t ** pvOuts, Vec_Ptr_t ** pvCons )Saig_ManDetectConstr158,4785
int Saig_ManDupCompare( Aig_Obj_t ** pp1, Aig_Obj_t ** pp2 )Saig_ManDupCompare261,8147
Aig_Man_t * Saig_ManDupUnfoldConstrs( Aig_Man_t * pAig )Saig_ManDupUnfoldConstrs282,8643
Aig_Man_t * Saig_ManDupFoldConstrs( Aig_Man_t * pAig, Vec_Int_t * vConstrs )Saig_ManDupFoldConstrs379,12221
void Saig_ManFoldConstrTest( Aig_Man_t * pAig )Saig_ManFoldConstrTest440,14202
int Saig_ManDetectConstrTest( Aig_Man_t * p )Saig_ManDetectConstrTest469,15023

src/aig/saig/saigIsoSlow.c,4251
#define ISO_MASK ISO_MASK122,9164
static unsigned int s_1kPrimes[ISO_MASK+1] = s_1kPrimes123,9187
#define ISO_NUM_INTS ISO_NUM_INTS261,21422
typedef struct Iso_Obj_t_ Iso_Obj_t;Iso_Obj_t263,21446
struct Iso_Obj_t_Iso_Obj_t_264,21483
    unsigned      Level     : 30;Level267,21567
    unsigned      nFinNeg   :  2;nFinNeg268,21601
    unsigned      FaninSig;FaninSig269,21635
    unsigned      FanoutSig;FanoutSig270,21663
    int           iNext;          // hash table entryiNext272,21710
    int           iClass;         // next one in classiClass273,21764
    int           Id;             // unique IDId274,21819
typedef struct Iso_Man_t_ Iso_Man_t;Iso_Man_t277,21870
struct Iso_Man_t_Iso_Man_t_278,21907
    Aig_Man_t *   pAig;           // user's AIG managerpAig280,21927
    Iso_Obj_t *   pObjs;          // isomorphism objectspObjs281,21983
    int           nObjIds;        // counter of object IDsnObjIds282,22040
    int           nClasses;       // total number of classesnClasses283,22099
    int           nEntries;       // total number of entriesnEntries284,22160
    int           nSingles;       // total number of singletonsnSingles285,22221
    int           nObjs;          // total objectsnObjs286,22285
    int           nBins;          // hash table sizenBins287,22336
    int *         pBins;          // hash table pBins288,22389
    Vec_Ptr_t *   vSingles;       // singletons vSingles289,22438
    Vec_Ptr_t *   vClasses;       // other classesvClasses290,22487
    Vec_Ptr_t *   vTemp1;         // other classesvTemp1291,22538
    Vec_Ptr_t *   vTemp2;         // other classesvTemp2292,22589
    abctime       timeHash;timeHash293,22640
    abctime       timeFout;timeFout294,22668
    abctime       timeSort;timeSort295,22696
    abctime       timeOther;timeOther296,22724
    abctime       timeTotal;timeTotal297,22753
static inline Iso_Obj_t *  Iso_ManObj( Iso_Man_t * p, int i )            { assert( i >= 0 && i < p->nObjs ); return i ? p->pObjs + i : NULL;                }Iso_ManObj300,22786
static inline int          Iso_ObjId( Iso_Man_t * p, Iso_Obj_t * pObj )  { assert( pObj > p->pObjs && pObj < p->pObjs + p->nObjs ); return pObj - p->pObjs; }Iso_ObjId301,22944
static inline Aig_Obj_t *  Iso_AigObj( Iso_Man_t * p, Iso_Obj_t * q )    { return Aig_ManObj( p->pAig, Iso_ObjId(p, q) );                                   }Iso_AigObj302,23102
#define Iso_ManForEachObj(Iso_ManForEachObj304,23261
void Iso_ReadPrimes( char * pFileName )Iso_ReadPrimes325,23970
void Iso_FindNumbers()Iso_FindNumbers365,24893
void Iso_ManObjCount_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int * pnNodes, int * pnEdges )Iso_ManObjCount_rec394,25533
void Iso_ManObjCount( Aig_Man_t * p, Aig_Obj_t * pObj, int * pnNodes, int * pnEdges )Iso_ManObjCount406,25988
Iso_Man_t * Iso_ManStart( Aig_Man_t * pAig )Iso_ManStart425,26464
void Iso_ManStop( Iso_Man_t * p, int fVerbose )Iso_ManStop441,26980
int Iso_ObjCompare( Iso_Obj_t ** pp1, Iso_Obj_t ** pp2 )Iso_ObjCompare473,27970
int Iso_ObjCompareByData( Aig_Obj_t ** pp1, Aig_Obj_t ** pp2 )Iso_ObjCompareByData489,28361
static inline int Iso_ObjHash( Iso_Obj_t * pIso, int nBins )Iso_ObjHash509,28875
static inline int Iso_ObjHashAdd( Iso_Man_t * p, Iso_Obj_t * pIso )Iso_ObjHashAdd519,29274
void Iso_ManCollectClasses( Iso_Man_t * p )Iso_ManCollectClasses556,30269
Iso_Man_t * Iso_ManCreate( Aig_Man_t * pAig )Iso_ManCreate597,31485
void Iso_ManAssignAdjacency( Iso_Man_t * p )Iso_ManAssignAdjacency738,36328
void Iso_ManPrintClasseSizes( Iso_Man_t * p )Iso_ManPrintClasseSizes884,41505
void Iso_ManPrintClasses( Iso_Man_t * p, int fVerbose, int fVeryVerbose )Iso_ManPrintClasses909,42086
void Iso_ManRehashClassNodes( Iso_Man_t * p )Iso_ManRehashClassNodes962,43719
Iso_Obj_t * Iso_ManFindBestObj( Iso_Man_t * p, Iso_Obj_t * pIso )Iso_ManFindBestObj1008,45099
void Iso_ManBreakTies( Iso_Man_t * p, int fVerbose )Iso_ManBreakTies1043,46102
Vec_Int_t * Iso_ManFinalize( Iso_Man_t * p )Iso_ManFinalize1087,47454
void Iso_ManDumpOneClass( Iso_Man_t * p )Iso_ManDumpOneClass1140,49111
Vec_Int_t * Saig_ManFindIsoPerm( Aig_Man_t * pAig, int fVerbose )Saig_ManFindIsoPerm1170,49977

src/aig/saig/saigGlaPba.c,2228
typedef struct Aig_Gla2Man_t_ Aig_Gla2Man_t;Aig_Gla2Man_t32,844
struct Aig_Gla2Man_t_Aig_Gla2Man_t_33,889
    Aig_Man_t *    pAig;pAig36,930
    int            nStart;nStart37,955
    int            nFramesMax;nFramesMax38,982
    int            fVerbose;fVerbose39,1013
    Vec_Int_t *    vObj2Vec;   // maps obj ID into its vec IDvObj2Vec41,1059
    Vec_Int_t *    vVec2Var;   // maps vec ID into its sat Var (nFrames per vec ID)vVec2Var42,1121
    Vec_Int_t *    vVar2Inf;   // maps sat Var into its frame and obj IDvVar2Inf43,1205
    Vec_Int_t *    vCla2Obj;   // maps clause into its root objectvCla2Obj45,1300
    Vec_Int_t *    vCla2Fra;   // maps clause into its framevCla2Fra46,1367
    Vec_Int_t *    vVec2Use;   // maps vec ID into its used frames (nFrames per vec ID)vVec2Use47,1428
    sat_solver *   pSat;pSat49,1534
    clock_t        timePre;timePre51,1577
    clock_t        timeSat;timeSat52,1605
    clock_t        timeTotal;timeTotal53,1633
static inline int Aig_Gla2AddConst( sat_solver * pSat, int iVar, int fCompl )Aig_Gla2AddConst72,2150
static inline int Aig_Gla2AddBuffer( sat_solver * pSat, int iVar0, int iVar1, int fCompl )Aig_Gla2AddBuffer91,2623
static inline int Aig_Gla2AddNode( sat_solver * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1 )Aig_Gla2AddNode119,3322
int Aig_Gla2FetchVar( Aig_Gla2Man_t * p, Aig_Obj_t * pObj, int k )Aig_Gla2FetchVar154,4266
void Aig_Gla2AssignVars_rec( Aig_Gla2Man_t * p, Aig_Obj_t * pObj, int f )Aig_Gla2AssignVars_rec188,5327
int Aig_Gla2CreateSatSolver( Aig_Gla2Man_t * p )Aig_Gla2CreateSatSolver223,6331
Aig_Gla2Man_t * Aig_Gla2ManStart( Aig_Man_t * pAig, int nStart, int nFramesMax, int fVerbose )Aig_Gla2ManStart335,10588
void Aig_Gla2ManStop( Aig_Gla2Man_t * p )Aig_Gla2ManStop373,11584
Vec_Int_t * Saig_AbsSolverUnsatCore( sat_solver * pSat, int nConfMax, int fVerbose, int * piRetValue )Saig_AbsSolverUnsatCore399,12199
Vec_Int_t * Aig_Gla2ManCollect( Aig_Gla2Man_t * p, Vec_Int_t * vCore )Aig_Gla2ManCollect454,13885
Vec_Int_t * Aig_Gla2ManPerform( Aig_Man_t * pAig, int nStart, int nFramesMax, int nConfLimit, int TimeLimit, int fSkipRand, int fVerbose )Aig_Gla2ManPerform525,16630

src/aig/saig/saigRetStep.c,325
Aig_Obj_t * Saig_ManRetimeNodeFwd( Aig_Man_t * p, Aig_Obj_t * pObj, int fMakeBug )Saig_ManRetimeNodeFwd45,1385
Aig_Obj_t * Saig_ManRetimeNodeBwd( Aig_Man_t * p, Aig_Obj_t * pObjLo )Saig_ManRetimeNodeBwd121,3877
int Saig_ManRetimeSteps( Aig_Man_t * p, int nSteps, int fForward, int fAddBugs )Saig_ManRetimeSteps181,5768

src/aig/saig/saig.h,4225
#define ABC__aig__saig__saig_hABC__aig__saig__saig_h22,533
typedef struct Sec_MtrStatus_t_ Sec_MtrStatus_t;Sec_MtrStatus_t41,1280
struct Sec_MtrStatus_t_Sec_MtrStatus_t_42,1329
    int         nInputs;      // the total number of inputsnInputs44,1355
    int         nNodes;       // the total number of nodesnNodes45,1415
    int         nOutputs;     // the total number of outputsnOutputs46,1474
    int         nUnsat;       // the number of UNSAT outputsnUnsat47,1535
    int         nSat;         // the number of SAT outputsnSat48,1596
    int         nUndec;       // the number of undecided outputsnUndec49,1655
    int         iOut;         // the satisfied outputiOut50,1720
typedef struct Saig_ParBbr_t_ Saig_ParBbr_t;Saig_ParBbr_t53,1780
struct Saig_ParBbr_t_Saig_ParBbr_t_54,1825
    int         TimeLimit;TimeLimit56,1849
    int         nBddMax;nBddMax57,1876
    int         nIterMax;nIterMax58,1901
    int         fPartition;fPartition59,1927
    int         fReorder;fReorder60,1955
    int         fReorderImage;fReorderImage61,1981
    int         fVerbose;fVerbose62,2012
    int         fSilent;fSilent63,2038
    int         fSkipOutCheck;// skip output checkingfSkipOutCheck64,2063
    int         iFrame;       // explored up to this frameiFrame65,2117
static inline int          Saig_ManPiNum( Aig_Man_t * p )                     { return p->nTruePis;                     }Saig_ManPiNum73,2401
static inline int          Saig_ManPoNum( Aig_Man_t * p )                     { return p->nTruePos;                     }Saig_ManPoNum74,2523
static inline int          Saig_ManCiNum( Aig_Man_t * p )                     { return p->nTruePis + p->nRegs;          }Saig_ManCiNum75,2645
static inline int          Saig_ManCoNum( Aig_Man_t * p )                     { return p->nTruePos + p->nRegs;          }Saig_ManCoNum76,2767
static inline int          Saig_ManRegNum( Aig_Man_t * p )                    { return p->nRegs;                        }Saig_ManRegNum77,2889
static inline int          Saig_ManConstrNum( Aig_Man_t * p )                 { return p->nConstrs;                     }Saig_ManConstrNum78,3011
static inline Aig_Obj_t *  Saig_ManLo( Aig_Man_t * p, int i )                 { return (Aig_Obj_t *)Vec_PtrEntry(p->vCis, Saig_ManPiNum(p)+i);   }Saig_ManLo79,3133
static inline Aig_Obj_t *  Saig_ManLi( Aig_Man_t * p, int i )                 { return (Aig_Obj_t *)Vec_PtrEntry(p->vCos, Saig_ManPoNum(p)+i);   }Saig_ManLi80,3280
static inline int          Saig_ObjIsPi( Aig_Man_t * p, Aig_Obj_t * pObj )    { return Aig_ObjIsCi(pObj) && Aig_ObjCioId(pObj) < Saig_ManPiNum(p); }Saig_ObjIsPi82,3428
static inline int          Saig_ObjIsPo( Aig_Man_t * p, Aig_Obj_t * pObj )    { return Aig_ObjIsCo(pObj) && Aig_ObjCioId(pObj) < Saig_ManPoNum(p); }Saig_ObjIsPo83,3577
static inline int          Saig_ObjIsLo( Aig_Man_t * p, Aig_Obj_t * pObj )    { return Aig_ObjIsCi(pObj) && Aig_ObjCioId(pObj) >= Saig_ManPiNum(p); }Saig_ObjIsLo84,3726
static inline int          Saig_ObjIsLi( Aig_Man_t * p, Aig_Obj_t * pObj )    { return Aig_ObjIsCo(pObj) && Aig_ObjCioId(pObj) >= Saig_ManPoNum(p); }Saig_ObjIsLi85,3876
static inline Aig_Obj_t *  Saig_ObjLoToLi( Aig_Man_t * p, Aig_Obj_t * pObj )  { assert(Saig_ObjIsLo(p, pObj)); return (Aig_Obj_t *)Vec_PtrEntry(p->vCos, Saig_ManPoNum(p)+Aig_ObjCioId(pObj)-Saig_ManPiNum(p));   }Saig_ObjLoToLi86,4026
static inline Aig_Obj_t *  Saig_ObjLiToLo( Aig_Man_t * p, Aig_Obj_t * pObj )  { assert(Saig_ObjIsLi(p, pObj)); return (Aig_Obj_t *)Vec_PtrEntry(p->vCis, Saig_ManPiNum(p)+Aig_ObjCioId(pObj)-Saig_ManPoNum(p));   }Saig_ObjLiToLo87,4238
static inline int          Saig_ObjRegId( Aig_Man_t * p, Aig_Obj_t * pObj )   { if ( Saig_ObjIsLo(p, pObj) ) return Aig_ObjCioId(pObj)-Saig_ManPiNum(p); if ( Saig_ObjIsLi(p, pObj) ) return Aig_ObjCioId(pObj)-Saig_ManPoNum(p); else assert(0);  return -1; }Saig_ObjRegId88,4450
#define Saig_ManForEachPi(Saig_ManForEachPi91,4751
#define Saig_ManForEachPo(Saig_ManForEachPo93,4914
#define Saig_ManForEachLo(Saig_ManForEachLo96,5119
#define Saig_ManForEachLi(Saig_ManForEachLi98,5325
#define Saig_ManForEachLiLo(Saig_ManForEachLiLo101,5576

src/aig/saig/saigSimFast.c,4649
typedef struct Faig_Man_t_ Faig_Man_t;Faig_Man_t33,837
struct Faig_Man_t_Faig_Man_t_34,876
    int            nPis;nPis37,915
    int            nPos;nPos38,940
    int            nCis;nCis39,965
    int            nCos;nCos40,990
    int            nFfs;nFfs41,1015
    int            nNos;nNos42,1040
    int            nPis1;nPis144,1080
    int            nCis1;nCis145,1106
    int            nCisNos1;nCisNos146,1132
    int            nCisNosPos1;nCisNosPos147,1161
    int            nObjs;nObjs48,1193
    int            nWords;nWords50,1241
    int            pObjs[0];pObjs51,1268
static inline int  Faig_CheckIdPi( Faig_Man_t * p, int i )    { return i >= 1 && i < p->nPis1;                     }Faig_CheckIdPi54,1301
static inline int  Faig_CheckIdLo( Faig_Man_t * p, int i )    { return i >= p->nPis1 && i < p->nCis1;              }Faig_CheckIdLo55,1418
static inline int  Faig_CheckIdNo( Faig_Man_t * p, int i )    { return i >= p->nCis1 && i < p->nCisNos1;           }Faig_CheckIdNo56,1535
static inline int  Faig_CheckIdPo( Faig_Man_t * p, int i )    { return i >= p->nCisNos1 && i < p->nCisNosPos1;     }Faig_CheckIdPo57,1652
static inline int  Faig_CheckIdLi( Faig_Man_t * p, int i )    { return i >= p->nCisNosPos1 && i < p->nObjs;        }Faig_CheckIdLi58,1769
static inline int  Faig_CheckIdCo( Faig_Man_t * p, int i )    { return i >= p->nCisNos1 && i < p->nObjs;           }Faig_CheckIdCo59,1886
static inline int  Faig_CheckIdObj( Faig_Man_t * p, int i )   { return i >= 0 && i < p->nObjs;                     }Faig_CheckIdObj60,2003
static inline int  Faig_ObjIdToNumPi( Faig_Man_t * p, int i ) { assert( Faig_CheckIdPi(p,i) ); return i - 1;              }Faig_ObjIdToNumPi62,2121
static inline int  Faig_ObjIdToNumLo( Faig_Man_t * p, int i ) { assert( Faig_CheckIdLo(p,i) ); return i - p->nPis1;       }Faig_ObjIdToNumLo63,2245
static inline int  Faig_ObjIdToNumNo( Faig_Man_t * p, int i ) { assert( Faig_CheckIdNo(p,i) ); return i - p->nCis1;       }Faig_ObjIdToNumNo64,2369
static inline int  Faig_ObjIdToNumPo( Faig_Man_t * p, int i ) { assert( Faig_CheckIdPo(p,i) ); return i - p->nCisNos1;    }Faig_ObjIdToNumPo65,2493
static inline int  Faig_ObjIdToNumLi( Faig_Man_t * p, int i ) { assert( Faig_CheckIdLi(p,i) ); return i - p->nCisNosPos1; }Faig_ObjIdToNumLi66,2617
static inline int  Faig_ObjIdToNumCo( Faig_Man_t * p, int i ) { assert( Faig_CheckIdCo(p,i) ); return i - p->nCisNos1;    }Faig_ObjIdToNumCo67,2741
static inline int  Faig_ObjLoToLi( Faig_Man_t * p, int i )    { assert( Faig_CheckIdLo(p,i) ); return p->nObjs - (p->nCis1 - i); }Faig_ObjLoToLi69,2866
static inline int  Faig_ObjLiToLo( Faig_Man_t * p, int i )    { assert( Faig_CheckIdLi(p,i) ); return p->nCis1 - (p->nObjs - i); }Faig_ObjLiToLo70,2997
static inline int  Faig_NodeChild0( Faig_Man_t * p, int n )   { return p->pObjs[n<<1];             }Faig_NodeChild072,3129
static inline int  Faig_NodeChild1( Faig_Man_t * p, int n )   { return p->pObjs[(n<<1)+1];         }Faig_NodeChild173,3230
static inline int  Faig_CoChild0( Faig_Man_t * p, int n )     { return p->pObjs[(p->nNos<<1)+n];   }Faig_CoChild074,3331
static inline int  Faig_ObjFaninC( int iFan )                 { return iFan & 1;                   }Faig_ObjFaninC75,3432
static inline int  Faig_ObjFanin( int iFan )                  { return iFan >> 1;                  }Faig_ObjFanin76,3533
int Faig_ManIsCorrect( Aig_Man_t * pAig )Faig_ManIsCorrect93,4122
Faig_Man_t * Faig_ManAlloc( Aig_Man_t * pAig )Faig_ManAlloc110,4549
Faig_Man_t * Faig_ManCreate( Aig_Man_t * pAig )Faig_ManCreate146,5743
static inline unsigned Faig_SimulateNode( Faig_Man_t * p, int Id, unsigned * pSimInfo )Faig_SimulateNode174,6525
static inline unsigned Faig_SimulateCo( Faig_Man_t * p, int Id, unsigned * pSimInfo )Faig_SimulateCo200,7560
static inline unsigned Faig_SimulateRandomShift( unsigned uOld )Faig_SimulateRandomShift221,8125
static inline unsigned Faig_SimulateTransferShift( unsigned uOld, unsigned uNew )Faig_SimulateTransferShift237,8493
int * Faig_ManSimulateFrames( Faig_Man_t * p, int nFrames, int nPref, int fTrans )Faig_ManSimulateFrames253,8882
float Faig_ManComputeSwitching( int nOnes, int nSimWords )Faig_ManComputeSwitching310,10865
float Faig_ManComputeProbOne( int nOnes, int nSimWords )Faig_ManComputeProbOne327,11368
Vec_Int_t * Faig_ManComputeSwitchProbs4( Aig_Man_t * p, int nFrames, int nPref, int fProbOne )Faig_ManComputeSwitchProbs4344,11731
Vec_Int_t * Saig_ManComputeSwitchProb3s( Aig_Man_t * p, int nFrames, int nPref, int fProbOne )Saig_ManComputeSwitchProb3s438,15541

src/aig/saig/saigSynch.c,2045
static inline unsigned Saig_SynchNot( unsigned w )Saig_SynchNot36,884
static inline unsigned Saig_SynchAnd( unsigned u, unsigned w )Saig_SynchAnd40,980
static inline unsigned Saig_SynchRandomBinary() Saig_SynchRandomBinary44,1127
static inline unsigned Saig_SynchRandomTernary() Saig_SynchRandomTernary48,1238
static inline unsigned Saig_SynchTernary( int v ) Saig_SynchTernary53,1375
void Saig_SynchSetConstant1( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords )Saig_SynchSetConstant175,2024
void Saig_SynchInitRegsTernary( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords )Saig_SynchInitRegsTernary97,2600
void Saig_SynchInitRegsBinary( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords )Saig_SynchInitRegsBinary121,3259
void Saig_SynchInitPisRandom( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords )Saig_SynchInitPisRandom145,3890
void Saig_SynchInitPisGiven( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords, char * pValues )Saig_SynchInitPisGiven169,4511
void Saig_SynchTernarySimulate( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords )Saig_SynchTernarySimulate193,5154
void Saig_SynchTernaryTransferState( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords )Saig_SynchTernaryTransferState254,7210
int Saig_SynchCountX( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords, int * piPat )Saig_SynchCountX279,7977
int Saig_SynchSavePattern( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, int nWords, int iPat, Vec_Str_t * vSequence )Saig_SynchSavePattern322,9240
int Saig_SynchSequenceRun( Aig_Man_t * pAig, Vec_Ptr_t * vSimInfo, Vec_Str_t * vSequence, int fTernary )Saig_SynchSequenceRun361,10481
Vec_Str_t * Saig_SynchSequence( Aig_Man_t * pAig, int nWords )Saig_SynchSequence403,11867
Aig_Man_t * Saig_ManDupInitZero( Aig_Man_t * p )Saig_ManDupInitZero468,14078
Aig_Man_t * Saig_SynchSequenceApply( Aig_Man_t * pAig, int nWords, int fVerbose )Saig_SynchSequenceApply502,15314
Aig_Man_t * Saig_Synchronize( Aig_Man_t * pAig1, Aig_Man_t * pAig2, int nWords, int fVerbose )Saig_Synchronize556,17067

src/aig/saig/saigOutDec.c,221
Vec_Ptr_t * Saig_ManFindPrimes( Aig_Man_t * pAig, int nLits, int fVerbose )Saig_ManFindPrimes47,1340
Aig_Man_t * Saig_ManDecPropertyOutput( Aig_Man_t * pAig, int nLits, int fVerbose )Saig_ManDecPropertyOutput150,5259

src/aig/saig/saigMiter.c,2379
Sec_MtrStatus_t Sec_MiterStatus( Aig_Man_t * p )Sec_MiterStatus46,1317
Aig_Man_t * Saig_ManCreateMiter( Aig_Man_t * p0, Aig_Man_t * p1, int Oper )Saig_ManCreateMiter100,2851
Aig_Man_t * Saig_ManCreateMiterComb( Aig_Man_t * p0, Aig_Man_t * p1, int Oper )Saig_ManCreateMiterComb163,5267
void Saig_AndDualRail( Aig_Man_t * pNew, Aig_Obj_t * pObj, Aig_Obj_t ** ppData, Aig_Obj_t ** ppNext )Saig_AndDualRail213,7131
Aig_Man_t * Saig_ManDualRail( Aig_Man_t * p, int fMiter )Saig_ManDualRail240,8241
Aig_Man_t * Saig_ManUnrollTwo( Aig_Man_t * pBot, Aig_Man_t * pTop, int nFrames )Saig_ManUnrollTwo323,10868
Aig_Man_t * Aig_ManDupNodesAll( Aig_Man_t * p, Vec_Ptr_t * vSet )Aig_ManDupNodesAll389,13217
Aig_Man_t * Aig_ManDupNodesHalf( Aig_Man_t * p, Vec_Ptr_t * vSet, int iPart )Aig_ManDupNodesHalf426,14570
int Saig_ManDemiterSimple( Aig_Man_t * p, Aig_Man_t ** ppAig0, Aig_Man_t ** ppAig1 )Saig_ManDemiterSimple491,16742
void Saig_ManDemiterMarkPos( Aig_Man_t * p )Saig_ManDemiterMarkPos561,18845
int Saig_ManDemiterCheckPo( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t ** ppPo0, Aig_Obj_t ** ppPo1 )Saig_ManDemiterCheckPo589,19585
int Saig_ManDemiterSimpleDiff( Aig_Man_t * p, Aig_Man_t ** ppAig0, Aig_Man_t ** ppAig1 )Saig_ManDemiterSimpleDiff660,21423
int Saig_ManDemiterDual( Aig_Man_t * p, Aig_Man_t ** ppAig0, Aig_Man_t ** ppAig1 )Saig_ManDemiterDual708,22828
int Saig_ManDemiterSimpleDiff_old( Aig_Man_t * p, Aig_Man_t ** ppAig0, Aig_Man_t ** ppAig1 )Saig_ManDemiterSimpleDiff_old765,24356
void Saig_ManDemiterLabel_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int Value )Saig_ManDemiterLabel_rec839,26566
Aig_Obj_t * Saig_ManGetLabeledRegister_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Saig_ManGetLabeledRegister_rec871,27480
int Saig_ManDemiter( Aig_Man_t * p, Aig_Man_t ** ppAig0, Aig_Man_t ** ppAig1 )Saig_ManDemiter903,28457
Aig_Man_t * Saig_ManCreateMiterTwo( Aig_Man_t * pOld, Aig_Man_t * pNew, int nFrames )Saig_ManCreateMiterTwo1014,32054
int Ssw_SecCexResimulate( Aig_Man_t * p, int * pModel, int * pnOutputs )Ssw_SecCexResimulate1038,32809
int Ssw_SecSpecial( Aig_Man_t * pPart0, Aig_Man_t * pPart1, int nFrames, int fVerbose )Ssw_SecSpecial1074,34004
int Ssw_SecSpecialMiter( Aig_Man_t * p0, Aig_Man_t * p1, int nFrames, int fVerbose )Ssw_SecSpecialMiter1161,37129
int Saig_ManDemiterNew( Aig_Man_t * pMan )Saig_ManDemiterNew1230,39316

src/aig/saig/saigGlaCba.c,3179
typedef struct Aig_Gla1Man_t_ Aig_Gla1Man_t;Aig_Gla1Man_t32,837
struct Aig_Gla1Man_t_Aig_Gla1Man_t_33,882
    Aig_Man_t *    pAig;pAig36,923
    int            nConfLimit;nConfLimit37,948
    int            nFramesMax;nFramesMax38,979
    int            fVerbose;fVerbose39,1010
    int            nFrames;nFrames41,1056
    Vec_Int_t *    vObj2Vec;   // maps obj ID into its vec IDvObj2Vec42,1084
    Vec_Int_t *    vVec2Var;   // maps vec ID into its sat Var (nFrames per vec ID)vVec2Var43,1146
    Vec_Int_t *    vVar2Inf;   // maps sat Var into its frame and obj IDvVar2Inf44,1230
    Vec_Int_t *    vAssigned;  // collects objects whose SAT variables have been createdvAssigned46,1322
    Vec_Int_t *    vIncluded;  // maps obj ID into its status (0=unused; 1=included in abstraction)vIncluded47,1411
    Vec_Int_t *    vPis;       // primary inputsvPis49,1529
    Vec_Int_t *    vPPis;      // pseudo primary inputsvPPis50,1578
    Vec_Int_t *    vFlops;     // flopsvFlops51,1634
    Vec_Int_t *    vNodes;     // nodesvNodes52,1674
    Vec_Ptr_t *    vLeaves;vLeaves54,1737
    Vec_Ptr_t *    vVolume;vVolume55,1765
    Vec_Int_t *    vCover;vCover56,1793
    Vec_Ptr_t *    vObj2Cnf;vObj2Cnf57,1820
    Vec_Int_t *    vLits;vLits58,1849
    sat_solver *   pSat;pSat60,1893
    clock_t        timeSat;timeSat62,1936
    clock_t        timeRef;timeRef63,1964
    clock_t        timeTotal;timeTotal64,1992
static inline int Aig_Gla1AddConst( sat_solver * pSat, int iVar, int fCompl )Aig_Gla1AddConst82,2508
static inline int Aig_Gla1AddBuffer( sat_solver * pSat, int iVar0, int iVar1, int fCompl )Aig_Gla1AddBuffer101,2981
static inline int Aig_Gla1AddNode( sat_solver * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1 )Aig_Gla1AddNode129,3680
void Aig_Gla1CollectAbstr( Aig_Gla1Man_t * p )Aig_Gla1CollectAbstr163,4631
void Aig_Gla1DeriveAbs_rec( Aig_Man_t * pNew, Aig_Obj_t * pObj )Aig_Gla1DeriveAbs_rec224,6813
Aig_Man_t * Aig_Gla1DeriveAbs( Aig_Gla1Man_t * p )Aig_Gla1DeriveAbs245,7408
static inline int Aig_Gla1FetchVecId( Aig_Gla1Man_t * p, Aig_Obj_t * pObj )Aig_Gla1FetchVecId300,9315
static inline int Aig_Gla1FetchVar( Aig_Gla1Man_t * p, Aig_Obj_t * pObj, int k )Aig_Gla1FetchVar326,10088
int Aig_Gla1ObjAddToSolver( Aig_Gla1Man_t * p, Aig_Obj_t * pObj, int k )Aig_Gla1ObjAddToSolver354,10991
void Aig_Gla1CollectAssigned( Aig_Gla1Man_t * p, Vec_Int_t * vGateClasses )Aig_Gla1CollectAssigned441,14327
Aig_Gla1Man_t * Aig_Gla1ManStart( Aig_Man_t * pAig, Vec_Int_t * vGateClassesOld, int fNaiveCnf )Aig_Gla1ManStart474,15257
void Aig_Gla1ManStop( Aig_Gla1Man_t * p )Aig_Gla1ManStop541,17040
Abc_Cex_t * Aig_Gla1DeriveCex( Aig_Gla1Man_t * p, int iFrame )Aig_Gla1DeriveCex581,17968
void Aig_Gla1PrintAbstr( Aig_Gla1Man_t * p, int f, int r, int v, int c )Aig_Gla1PrintAbstr630,19603
void Aig_Gla1ExtendIncluded( Aig_Gla1Man_t * p )Aig_Gla1ExtendIncluded651,20240
Vec_Int_t * Aig_Gla1ManPerform( Aig_Man_t * pAig, Vec_Int_t * vGateClassesOld, int nStart, int nFramesMax, int nConfLimit, int TimeLimit, int fNaiveCnf, int fVerbose, int * piFrame )Aig_Gla1ManPerform681,21220

src/aig/saig/saigSimMv.c,7329
#define SAIG_DIFF_VALUES SAIG_DIFF_VALUES30,779
#define SAIG_UNDEF_VALUE SAIG_UNDEF_VALUE31,807
typedef struct Saig_MvObj_t_ Saig_MvObj_t;Saig_MvObj_t34,869
struct Saig_MvObj_t_Saig_MvObj_t_35,912
    int              iFan0;iFan037,935
    int              iFan1;iFan138,963
    unsigned         Type   :  3;Type39,991
    unsigned         Value  : 29;Value40,1025
typedef struct Saig_MvAnd_t_ Saig_MvAnd_t;Saig_MvAnd_t44,1074
struct Saig_MvAnd_t_Saig_MvAnd_t_45,1117
    int              iFan0;iFan047,1140
    int              iFan1;iFan148,1168
    int              iNext;iNext49,1196
typedef struct Saig_MvMan_t_ Saig_MvMan_t;Saig_MvMan_t53,1250
struct Saig_MvMan_t_Saig_MvMan_t_54,1293
    Aig_Man_t *      pAig;         // original AIG    pAig57,1333
    int              nStatesMax;   // maximum number of statesnStatesMax59,1406
    int              nLevelsMax;   // maximum number of levelsnLevelsMax60,1469
    int              nValuesMax;   // maximum number of valuesnValuesMax61,1532
    int              nFlops;       // number of flopsnFlops62,1595
    Saig_MvObj_t *   pAigOld;      // AIG objectspAigOld64,1670
    Vec_Ptr_t *      vFlops;       // collected flopsvFlops65,1720
    Vec_Int_t *      vXFlops;      // flops that had at least one X-valuevXFlops66,1774
    Vec_Ptr_t *      vTired;       // collected flopsvTired67,1848
    unsigned *       pTStates;     // hash table for statespTStates68,1902
    int              nTStatesSize; // hash table sizenTStatesSize69,1962
    Aig_MmFixed_t *  pMemStates;   // memory for statespMemStates70,2016
    Vec_Ptr_t *      vStates;      // reached statesvStates71,2072
    int *            pRegsUndef;   // count the number of undef valuespRegsUndef72,2125
    int **           pRegsValues;  // write the first different valuespRegsValues73,2196
    int *            nRegsValues;  // count the number of different valuesnRegsValues74,2267
    int              nRUndefs;     // the number of undef registersnRUndefs75,2342
    int              nRValues[SAIG_DIFF_VALUES+1]; // the number of registers with given valuesnRValues76,2410
    Saig_MvAnd_t *   pAigNew;      // AIG nodespAigNew78,2526
    int              nObjsAlloc;   // the number of objects allocated nObjsAlloc79,2574
    int              nObjs;        // the number of objectsnObjs80,2645
    int              nPis;         // the number of primary inputsnPis81,2705
    int *            pTNodes;      // hash tablepTNodes82,2772
    int              nTNodesSize;  // hash table sizenTNodesSize83,2821
    unsigned char *  pLevels;      // levels of AIG nodespLevels84,2875
static inline int    Saig_MvObjFaninC0( Saig_MvObj_t * pObj )  { return pObj->iFan0 & 1;           }Saig_MvObjFaninC087,2937
static inline int    Saig_MvObjFaninC1( Saig_MvObj_t * pObj )  { return pObj->iFan1 & 1;           }Saig_MvObjFaninC188,3038
static inline int    Saig_MvObjFanin0( Saig_MvObj_t * pObj )   { return pObj->iFan0 >> 1;          }Saig_MvObjFanin089,3139
static inline int    Saig_MvObjFanin1( Saig_MvObj_t * pObj )   { return pObj->iFan1 >> 1;          }Saig_MvObjFanin190,3240
static inline int    Saig_MvConst0()                           { return 1;                         }Saig_MvConst092,3342
static inline int    Saig_MvConst1()                           { return 0;                         }Saig_MvConst193,3443
static inline int    Saig_MvConst( int c )                     { return !c;                        }Saig_MvConst94,3544
static inline int    Saig_MvUndef()                            { return SAIG_UNDEF_VALUE;          }Saig_MvUndef95,3645
static inline int    Saig_MvIsConst0( int iNode )              { return iNode == 1;                }Saig_MvIsConst097,3747
static inline int    Saig_MvIsConst1( int iNode )              { return iNode == 0;                }Saig_MvIsConst198,3848
static inline int    Saig_MvIsConst( int iNode )               { return iNode  < 2;                }Saig_MvIsConst99,3949
static inline int    Saig_MvIsUndef( int iNode )               { return iNode == SAIG_UNDEF_VALUE; }Saig_MvIsUndef100,4050
static inline int    Saig_MvRegular( int iNode )               { return (iNode & ~01);             }Saig_MvRegular102,4152
static inline int    Saig_MvNot( int iNode )                   { return (iNode ^  01);             }Saig_MvNot103,4253
static inline int    Saig_MvNotCond( int iNode, int c )        { return (iNode ^ (c));             }Saig_MvNotCond104,4354
static inline int    Saig_MvIsComplement( int iNode )          { return (int)(iNode & 01);         }Saig_MvIsComplement105,4455
static inline int    Saig_MvLit2Var( int iNode )               { return (iNode >> 1);              }Saig_MvLit2Var107,4557
static inline int    Saig_MvVar2Lit( int iVar )                { return (iVar << 1);               }Saig_MvVar2Lit108,4658
static inline int    Saig_MvLev( Saig_MvMan_t * p, int iNode ) { return p->pLevels[iNode >> 1];    }Saig_MvLev109,4759
#define Saig_MvManForEachObj(Saig_MvManForEachObj112,4896
Saig_MvObj_t * Saig_ManCreateReducedAig( Aig_Man_t * p, Vec_Ptr_t ** pvFlops )Saig_ManCreateReducedAig130,5488
static inline int Saig_MvCreateObj( Saig_MvMan_t * p, int iFan0, int iFan1 )Saig_MvCreateObj173,6760
Saig_MvMan_t * Saig_MvManStart( Aig_Man_t * pAig, int nFramesSatur )Saig_MvManStart204,7683
void Saig_MvManStop( Saig_MvMan_t * p )Saig_MvManStop252,9500
static inline int Saig_MvHash( int iFan0, int iFan1, int TableSize ) Saig_MvHash282,10251
static inline int * Saig_MvTableFind( Saig_MvMan_t * p, int iFan0, int iFan1 )Saig_MvTableFind304,10884
static inline int Saig_MvAnd( Saig_MvMan_t * p, int iFan0, int iFan1, int fFirst )Saig_MvAnd326,11599
static inline int Saig_MvSimulateValue0( Saig_MvObj_t * pAig, Saig_MvObj_t * pObj )Saig_MvSimulateValue0381,13268
static inline int Saig_MvSimulateValue1( Saig_MvObj_t * pAig, Saig_MvObj_t * pObj )Saig_MvSimulateValue1388,13555
void Saig_MvPrintState( int Iter, Saig_MvMan_t * p )Saig_MvPrintState407,14093
void Saig_MvSimulateFrame( Saig_MvMan_t * p, int fFirst, int fVerbose )Saig_MvSimulateFrame433,14723
int Saig_MvSimHash( unsigned * pState, int nFlops, int TableSize )Saig_MvSimHash483,16406
static inline unsigned * Saig_MvSimTableFind( Saig_MvMan_t * p, unsigned * pState )Saig_MvSimTableFind521,17206
int Saig_MvSaveState( Saig_MvMan_t * p )Saig_MvSaveState543,18021
void Saig_MvManPostProcess( Saig_MvMan_t * p, int iState )Saig_MvManPostProcess571,18775
Vec_Int_t * Saig_MvManFindXFlops( Saig_MvMan_t * p )Saig_MvManFindXFlops644,21050
int Saig_MvManCheckOscilator( Saig_MvMan_t * p, int iFlop )Saig_MvManCheckOscilator670,21722
Vec_Int_t * Saig_MvManFindConstBinaryFlops( Saig_MvMan_t * p, Vec_Int_t ** pvBinary )Saig_MvManFindConstBinaryFlops725,23421
Vec_Int_t * Saig_MvManFindOscilators( Saig_MvMan_t * p, Vec_Int_t ** pvConst0 )Saig_MvManFindOscilators767,24595
Vec_Int_t * Saig_MvManCreateNextSkip( Saig_MvMan_t * p )Saig_MvManCreateNextSkip793,25339
Vec_Ptr_t * Saig_MvManDeriveMap( Saig_MvMan_t * p, int fVerbose )Saig_MvManDeriveMap821,26222
Vec_Ptr_t * Saig_MvManSimulate( Aig_Man_t * pAig, int nFramesSymb, int nFramesSatur, int fVerbose, int fVeryVerbose )Saig_MvManSimulate879,28092

src/aig/saig/saigConstr2.c,2666
static inline Aig_Obj_t * Aig_ObjFrames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i )                       { return pObjMap[nFs*pObj->Id + i];  }Aig_ObjFrames35,901
static inline void        Aig_ObjSetFrames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) { pObjMap[nFs*pObj->Id + i] = pNode; }Aig_ObjSetFrames36,1060
static inline Aig_Obj_t * Aig_ObjChild0Frames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i ) { return Aig_ObjFanin0(pObj)? Aig_NotCond(Aig_ObjFrames(pObjMap,nFs,Aig_ObjFanin0(pObj),i), Aig_ObjFaninC0(pObj)) : NULL;  }Aig_ObjChild0Frames38,1220
static inline Aig_Obj_t * Aig_ObjChild1Frames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i ) { return Aig_ObjFanin1(pObj)? Aig_NotCond(Aig_ObjFrames(pObjMap,nFs,Aig_ObjFanin1(pObj),i), Aig_ObjFaninC1(pObj)) : NULL;  }Aig_ObjChild1Frames39,1449
int Ssw_ManProfileConstraints( Aig_Man_t * p, int nWords, int nFrames, int fVerbose )Ssw_ManProfileConstraints56,2192
Aig_Man_t * Saig_ManCreateIndMiter( Aig_Man_t * pAig, Vec_Vec_t * vCands )Saig_ManCreateIndMiter234,8791
int Saig_ManFilterUsingIndOne_new( Aig_Man_t * p, Aig_Man_t * pFrame, sat_solver * pSat, Cnf_Dat_t * pCnf, int nConfs, int nProps, int Counter )Saig_ManFilterUsingIndOne_new312,11673
void Saig_ManFilterUsingInd( Aig_Man_t * p, Vec_Vec_t * vCands, int nConfs, int nProps, int fVerbose )Saig_ManFilterUsingInd341,12523
Aig_Man_t * Saig_ManUnrollCOI_( Aig_Man_t * p, int nFrames )Saig_ManUnrollCOI_405,14473
Aig_Man_t * Saig_ManUnrollCOI( Aig_Man_t * pAig, int nFrames )Saig_ManUnrollCOI431,15312
void Saig_CollectSatValues( sat_solver * pSat, Cnf_Dat_t * pCnf, Vec_Ptr_t * vInfo, int * piPat )Saig_CollectSatValues497,17790
int Saig_DetectTryPolarity( sat_solver * pSat, int nConfs, int nProps, Cnf_Dat_t * pCnf, Aig_Obj_t * pObj, int iPol, Vec_Ptr_t * vInfo, int * piPat, int fVerbose )Saig_DetectTryPolarity524,18598
Vec_Vec_t * Ssw_ManFindDirectImplications( Aig_Man_t * p, int nFrames, int nConfs, int nProps, int fVerbose )Ssw_ManFindDirectImplications567,20178
Vec_Vec_t * Saig_ManDetectConstrFunc( Aig_Man_t * p, int nFrames, int nConfs, int nProps, int fVerbose )Saig_ManDetectConstrFunc661,23510
void Saig_ManDetectConstrFuncTest( Aig_Man_t * p, int nFrames, int nConfs, int nProps, int fOldAlgo, int fVerbose )Saig_ManDetectConstrFuncTest856,30553
Aig_Man_t * Saig_ManDupUnfoldConstrsFunc( Aig_Man_t * pAig, int nFrames, int nConfs, int nProps, int fOldAlgo, int fVerbose )Saig_ManDupUnfoldConstrsFunc877,31208
Aig_Man_t * Saig_ManDupFoldConstrsFunc( Aig_Man_t * pAig, int fCompl, int fVerbose )Saig_ManDupFoldConstrsFunc942,33420

src/aig/saig/saig_.c,0

src/aig/saig/saigSwitch.c,3003
typedef struct Saig_SimObj_t_ Saig_SimObj_t;Saig_SimObj_t32,818
struct Saig_SimObj_t_Saig_SimObj_t_33,863
    int      iFan0;iFan035,887
    int      iFan1;iFan136,907
    unsigned Type   :  8;Type37,927
    unsigned Number : 24;Number38,953
    unsigned pData[1];pData39,979
static inline int Saig_SimObjFaninC0( Saig_SimObj_t * pObj )  { return pObj->iFan0 & 1;  }Saig_SimObjFaninC042,1006
static inline int Saig_SimObjFaninC1( Saig_SimObj_t * pObj )  { return pObj->iFan1 & 1;  }Saig_SimObjFaninC143,1097
static inline int Saig_SimObjFanin0( Saig_SimObj_t * pObj )   { return pObj->iFan0 >> 1; }Saig_SimObjFanin044,1188
static inline int Saig_SimObjFanin1( Saig_SimObj_t * pObj )   { return pObj->iFan1 >> 1; }Saig_SimObjFanin145,1279
Saig_SimObj_t * Saig_ManCreateMan( Aig_Man_t * p )Saig_ManCreateMan66,1955
static inline void Saig_ManSimulateNode2( Saig_SimObj_t * pAig, Saig_SimObj_t * pObj )Saig_ManSimulateNode2108,3208
static inline void Saig_ManSimulateNode( Saig_SimObj_t * pAig, Saig_SimObj_t * pObj )Saig_ManSimulateNode133,4206
static inline void Saig_ManSimulateOneInput( Saig_SimObj_t * pAig, Saig_SimObj_t * pObj )Saig_ManSimulateOneInput152,4839
void Saig_ManSimulateFrames( Saig_SimObj_t * pAig, int nFrames, int nPref )Saig_ManSimulateFrames172,5421
float Saig_ManComputeSwitching( int nOnes, int nSimWords )Saig_ManComputeSwitching212,6812
float Saig_ManComputeProbOne( int nOnes, int nSimWords )Saig_ManComputeProbOne229,7315
float Saig_ManComputeProbOnePlus( int nOnes, int nSimWords, int fCompl )Saig_ManComputeProbOnePlus246,7782
Vec_Int_t * Saig_ManComputeSwitchProb4s( Aig_Man_t * p, int nFrames, int nPref, int fProbOne )Saig_ManComputeSwitchProb4s266,8284
typedef struct Aig_CMan_t_ Aig_CMan_t;Aig_CMan_t331,10907
struct Aig_CMan_t_Aig_CMan_t_332,10946
    int             nIns;nIns335,10985
    int             nNodes;nNodes336,11011
    int             nOuts;nOuts337,11039
    int             iNode;iNode339,11087
    int             iDiff0;iDiff0340,11114
    int             iDiff1;iDiff1341,11142
    unsigned char * pCur;pCur342,11170
    int             iPrev;iPrev344,11215
    int             nBytes;nBytes345,11242
    unsigned char   Data[0];Data346,11270
Aig_CMan_t * Aig_CManStart( int nIns, int nNodes, int nOuts )Aig_CManStart361,11538
void Aig_CManStop( Aig_CMan_t * p )Aig_CManStop389,12220
void Aig_CManRestart( Aig_CMan_t * p )Aig_CManRestart405,12514
void Aig_CManStoreNum( Aig_CMan_t * p, unsigned x )Aig_CManStoreNum425,12912
int Aig_CManRestoreNum( Aig_CMan_t * p )Aig_CManRestoreNum447,13353
void Aig_CManAddNode( Aig_CMan_t * p, int iFan0, int iFan1 )Aig_CManAddNode466,13773
void Aig_CManAddPo( Aig_CMan_t * p, int iFan0 )Aig_CManAddPo485,14237
void Aig_CManGetNode( Aig_CMan_t * p, int * piFan0, int * piFan1 )Aig_CManGetNode508,14798
int Aig_CManGetPo( Aig_CMan_t * p )Aig_CManGetPo525,15212
Aig_CMan_t * Aig_CManCreate( Aig_Man_t * p )Aig_CManCreate547,15755

src/aig/saig/saigIsoFast.c,1716
#define AIG_ISO_NUM AIG_ISO_NUM30,773
typedef struct Iso_Dat_t_ Iso_Dat_t;Iso_Dat_t32,797
struct Iso_Dat_t_Iso_Dat_t_33,834
    unsigned      nFiNeg    :  3;nFiNeg35,854
    unsigned      nFoNeg    :  2;nFoNeg36,888
    unsigned      nFoPos    :  2;nFoPos37,922
    unsigned      Fi0Lev    :  3;Fi0Lev38,956
    unsigned      Fi1Lev    :  3;Fi1Lev39,990
    unsigned      Level     :  3;Level40,1024
    unsigned      fVisit    : 16;fVisit41,1058
typedef struct Iso_Dat2_t_ Iso_Dat2_t;Iso_Dat2_t44,1096
struct Iso_Dat2_t_Iso_Dat2_t_45,1135
    unsigned      Data      : 16;Data47,1156
typedef struct Iso_Sto_t_ Iso_Sto_t;Iso_Sto_t50,1194
struct Iso_Sto_t_Iso_Sto_t_51,1231
    Aig_Man_t *   pAig;       // user's AIG managerpAig53,1251
    int           nObjs;      // number of objectsnObjs54,1303
    Iso_Dat_t *   pData;      // data for each objectpData55,1354
    Vec_Int_t *   vVisited;   // visited nodesvVisited56,1408
    Vec_Ptr_t *   vRoots;     // root nodesvRoots57,1455
    Vec_Int_t *   vPlaces;    // places in the counter listsvPlaces58,1499
    int *         pCounters;  // counters    pCounters59,1560
Iso_Sto_t * Iso_StoStart( Aig_Man_t * pAig )Iso_StoStart77,2064
void Iso_StoStop( Iso_Sto_t * p )Iso_StoStop90,2487
void Iso_StoCollectInfo_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int fCompl, Vec_Int_t * vVisited, Iso_Dat_t * pData, Vec_Ptr_t * vRoots )Iso_StoCollectInfo_rec111,2962
Vec_Int_t * Iso_StoCollectInfo( Iso_Sto_t * p, Aig_Obj_t * pPo )Iso_StoCollectInfo176,5029
int Iso_StoCompareVecInt( Vec_Int_t ** p1, Vec_Int_t ** p2 )Iso_StoCompareVecInt267,7988
Vec_Vec_t * Saig_IsoDetectFast( Aig_Man_t * pAig )Saig_IsoDetectFast283,8409

src/aig/saig/saigWnd.c,1940
void Saig_ManWindowOutline_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int nDist, Vec_Ptr_t * vNodes, int * pDists )Saig_ManWindowOutline_rec46,1363
Vec_Ptr_t * Saig_ManWindowOutline( Aig_Man_t * p, Aig_Obj_t * pObj, int nDist )Saig_ManWindowOutline100,3315
Aig_Obj_t * Saig_ObjHasUnlabeledFanout( Aig_Man_t * p, Aig_Obj_t * pObj )Saig_ObjHasUnlabeledFanout129,4262
Vec_Ptr_t * Saig_ManWindowCollectPis( Aig_Man_t * p, Vec_Ptr_t * vNodes )Saig_ManWindowCollectPis150,4830
Vec_Ptr_t * Saig_ManWindowCollectPos( Aig_Man_t * p, Vec_Ptr_t * vNodes, Vec_Ptr_t ** pvPointers )Saig_ManWindowCollectPos195,6214
Aig_Man_t * Saig_ManWindowExtractNodes( Aig_Man_t * p, Vec_Ptr_t * vNodes )Saig_ManWindowExtractNodes226,7071
void Saig_ManWindowInsertBig_rec( Aig_Man_t * pNew, Aig_Obj_t * pObjBig, Saig_ManWindowInsertBig_rec292,9195
void Saig_ManWindowInsertSmall_rec( Aig_Man_t * pNew, Aig_Obj_t * pObjSmall, Saig_ManWindowInsertSmall_rec321,10286
Aig_Man_t * Saig_ManWindowInsertNodes( Aig_Man_t * p, Vec_Ptr_t * vNodes, Aig_Man_t * pWnd )Saig_ManWindowInsertNodes350,11383
Aig_Obj_t * Saig_ManFindPivot( Aig_Man_t * p )Saig_ManFindPivot427,14312
Aig_Man_t * Saig_ManWindowExtract( Aig_Man_t * p, Aig_Obj_t * pObj, int nDist )Saig_ManWindowExtract465,15173
Aig_Man_t * Saig_ManWindowInsert( Aig_Man_t * p, Aig_Obj_t * pObj, int nDist, Aig_Man_t * pWnd )Saig_ManWindowInsert488,15784
Aig_Man_t * Saig_ManWindowTest( Aig_Man_t * p )Saig_ManWindowTest528,16974
Vec_Ptr_t * Saig_ManCollectedDiffNodes( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_ManCollectedDiffNodes552,17609
void Saig_ManWindowCreatePis( Aig_Man_t * pNew, Aig_Man_t * p0, Aig_Man_t * p1, Vec_Ptr_t * vNodes0 )Saig_ManWindowCreatePis591,18775
void Saig_ManWindowCreatePos( Aig_Man_t * pNew, Aig_Man_t * p0, Aig_Man_t * p1 )Saig_ManWindowCreatePos650,20832
Aig_Man_t * Saig_ManWindowExtractMiter( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_ManWindowExtractMiter716,23069

src/aig/saig/saigPhase.c,5566
#define TSIM_MAX_ROUNDS TSIM_MAX_ROUNDS33,909
#define TSIM_ONE_SERIES TSIM_ONE_SERIES34,942
#define SAIG_XVS0 SAIG_XVS036,976
#define SAIG_XVS1 SAIG_XVS137,998
#define SAIG_XVSX SAIG_XVSX38,1020
static inline int  Saig_XsimConvertValue( int v )  { return v == 0? SAIG_XVS0 : (v == 1? SAIG_XVS1 : (v == 2? SAIG_XVSX : -1));  }Saig_XsimConvertValue40,1043
static inline void Saig_ObjSetXsim( Aig_Obj_t * pObj, int Value )  { pObj->nCuts = Value;  }Saig_ObjSetXsim42,1175
static inline int  Saig_ObjGetXsim( Aig_Obj_t * pObj )             { return pObj->nCuts;   }Saig_ObjGetXsim43,1268
static inline int  Saig_XsimInv( int Value )   Saig_XsimInv44,1361
static inline int  Saig_XsimAnd( int Value0, int Value1 )   Saig_XsimAnd53,1589
static inline int  Saig_XsimRand2()   Saig_XsimRand262,1895
static inline int  Saig_XsimRand3()   Saig_XsimRand366,1997
static inline int  Saig_ObjGetXsimFanin0( Aig_Obj_t * pObj )       Saig_ObjGetXsimFanin074,2162
static inline int  Saig_ObjGetXsimFanin1( Aig_Obj_t * pObj )       Saig_ObjGetXsimFanin180,2374
static inline void Saig_XsimPrint( FILE * pFile, int Value )   Saig_XsimPrint86,2586
typedef struct Saig_Tsim_t_ Saig_Tsim_t;Saig_Tsim_t103,2924
struct Saig_Tsim_t_Saig_Tsim_t_104,2965
    Aig_Man_t *      pAig;              // the original AIG managerpAig106,2987
    int              nWords;            // the number of words in the statesnWords107,3055
    Vec_Ptr_t *      vStates;           // the collection of ternary statesvStates109,3168
    Aig_MmFixed_t *  pMem;              // memory for ternary statespMem110,3244
    int              nPrefix;           // prefix of the ternary state spacenPrefix111,3313
    int              nCycle;            // cycle of the ternary state spacenCycle112,3390
    int              nNonXRegs;         // the number of candidate registersnNonXRegs113,3466
    Vec_Int_t *      vNonXRegs;         // the candidate registersvNonXRegs114,3543
    unsigned **      pBins;pBins116,3649
    int              nBins;nBins117,3677
static inline unsigned * Saig_TsiNext( unsigned * pState, int nWords )                      { return *((unsigned **)(pState + nWords));  }Saig_TsiNext120,3709
static inline void       Saig_TsiSetNext( unsigned * pState, int nWords, unsigned * pNext ) { *((unsigned **)(pState + nWords)) = pNext; }Saig_TsiSetNext121,3848
Saig_Tsim_t * Saig_TsiStart( Aig_Man_t * pAig )Saig_TsiStart142,4691
void Saig_TsiStop( Saig_Tsim_t * p )Saig_TsiStop168,5524
int Saig_TsiStateHash( unsigned * pState, int nWords, int nTableSize )Saig_TsiStateHash189,6030
int Saig_TsiCountNonXValuedRegisters( Saig_Tsim_t * p, int nPref )Saig_TsiCountNonXValuedRegisters225,7479
Vec_Int_t * Saig_TsiComputeTransient( Saig_Tsim_t * p, int nPref )Saig_TsiComputeTransient258,8441
void Saig_TsiPrintTraces( Saig_Tsim_t * p, int nWords, int nPrefix, int nLoop )Saig_TsiPrintTraces305,9837
int Saig_TsiComputePrefix( Saig_Tsim_t * p, unsigned * pState, int nWords )Saig_TsiComputePrefix365,11659
int Saig_TsiStateLookup( Saig_Tsim_t * p, unsigned * pState, int nWords )Saig_TsiStateLookup395,12520
void Saig_TsiStateInsert( Saig_Tsim_t * p, unsigned * pState, int nWords )Saig_TsiStateInsert417,13144
unsigned * Saig_TsiStateNew( Saig_Tsim_t * p )Saig_TsiStateNew436,13694
void Saig_TsiStatePrint( Saig_Tsim_t * p, unsigned * pState )Saig_TsiStatePrint456,14204
int Saig_TsiStateCount( Saig_Tsim_t * p, unsigned * pState )Saig_TsiStateCount485,15069
void Saig_TsiStateOrAll( Saig_Tsim_t * pTsi, unsigned * pState )Saig_TsiStateOrAll508,15717
Saig_Tsim_t * Saig_ManReachableTernary( Aig_Man_t * p, Vec_Int_t * vInits, int fVerbose )Saig_ManReachableTernary531,16369
void Saig_ManAnalizeControl( Aig_Man_t * p, int Reg )Saig_ManAnalizeControl612,19211
int Saig_ManFindRegisters( Saig_Tsim_t * pTsi, int nFrames, int fIgnore, int fVerbose )Saig_ManFindRegisters666,20611
static inline Aig_Obj_t * Saig_ObjFrames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i )                       { return pObjMap[nFs*pObj->Id + i];  }Saig_ObjFrames731,22722
static inline void        Saig_ObjSetFrames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) { pObjMap[nFs*pObj->Id + i] = pNode; }Saig_ObjSetFrames732,22882
static inline Aig_Obj_t * Saig_ObjChild0Frames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i ) { return Aig_ObjFanin0(pObj)? Aig_NotCond(Saig_ObjFrames(pObjMap,nFs,Aig_ObjFanin0(pObj),i), Aig_ObjFaninC0(pObj)) : NULL;  }Saig_ObjChild0Frames734,23043
static inline Aig_Obj_t * Saig_ObjChild1Frames( Aig_Obj_t ** pObjMap, int nFs, Aig_Obj_t * pObj, int i ) { return Aig_ObjFanin1(pObj)? Aig_NotCond(Saig_ObjFrames(pObjMap,nFs,Aig_ObjFanin1(pObj),i), Aig_ObjFaninC1(pObj)) : NULL;  }Saig_ObjChild1Frames735,23274
Aig_Man_t * Saig_ManPerformAbstraction( Saig_Tsim_t * pTsi, int nFrames, int fVerbose )Saig_ManPerformAbstraction748,23792
int Saig_ManPhaseFrameNum( Aig_Man_t * p, Vec_Int_t * vInits )Saig_ManPhaseFrameNum841,27535
int Saig_ManPhasePrefixLength( Aig_Man_t * p, int fVerbose, int fVeryVerbose, Vec_Int_t ** pvTrans )Saig_ManPhasePrefixLength871,28517
Aig_Man_t * Saig_ManPhaseAbstract( Aig_Man_t * p, Vec_Int_t * vInits, int nFrames, int nPref, int fIgnore, int fPrint, int fVerbose )Saig_ManPhaseAbstract911,29963
Aig_Man_t * Saig_ManPhaseAbstractAuto( Aig_Man_t * p, int fVerbose )Saig_ManPhaseAbstractAuto965,32450
Abc_Cex_t * Saig_PhaseTranslateCex( Aig_Man_t * p, Abc_Cex_t * pCex )Saig_PhaseTranslateCex1045,35273

src/aig/saig/saigTempor.c,478
Aig_Man_t * Saig_ManTemporFrames( Aig_Man_t * pAig, int nFrames )Saig_ManTemporFrames46,1317
Aig_Man_t * Saig_ManTemporDecompose( Aig_Man_t * pAig, int nFrames )Saig_ManTemporDecompose90,2746
int Vec_IntLastNonZeroBeforeLimit( Vec_Int_t * vTemp, int Limit )Vec_IntLastNonZeroBeforeLimit160,5242
Aig_Man_t * Saig_ManTempor( Aig_Man_t * pAig, int nFrames, int TimeOut, int nConfLimit, int fUseBmc, int fUseTransSigs, int fVerbose, int fVeryVerbose )Saig_ManTempor186,5777

src/aig/saig/saigCone.c,356
void Saig_ManSupport_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vSupp )Saig_ManSupport_rec45,1273
Vec_Ptr_t * Saig_ManSupport( Aig_Man_t * p, Vec_Ptr_t * vNodes )Saig_ManSupport77,2150
void Saig_ManPrintConeOne( Aig_Man_t * p, Aig_Obj_t * pObj )Saig_ManPrintConeOne103,2816
void Saig_ManPrintCones( Aig_Man_t * p )Saig_ManPrintCones159,4593

src/aig/saig/saigRetFwd.c,912
static inline Aig_Obj_t * Aig_ObjFanoutStatic( Aig_Obj_t * pObj, int i )               { return ((Aig_Obj_t **)pObj->pData)[i];             }Aig_ObjFanoutStatic30,779
static inline void        Aig_ObjSetFanoutStatic( Aig_Obj_t * pObj, Aig_Obj_t * pFan ) { ((Aig_Obj_t **)pObj->pData)[pObj->nRefs++] = pFan; }Aig_ObjSetFanoutStatic31,921
#define Aig_ObjForEachFanoutStatic(Aig_ObjForEachFanoutStatic33,1064
Aig_Obj_t ** Aig_ManStaticFanoutStart( Aig_Man_t * p )Aig_ManStaticFanoutStart51,1744
void Aig_ManMarkAutonomous_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ManMarkAutonomous_rec89,2845
void Saig_ManMarkAutonomous( Aig_Man_t * p )Saig_ManMarkAutonomous111,3490
Aig_Man_t * Saig_ManRetimeForwardOne( Aig_Man_t * p, int * pnRegFixed, int * pnRegMoves )Saig_ManRetimeForwardOne149,4643
Aig_Man_t * Saig_ManRetimeForward( Aig_Man_t * p, int nMaxIters, int fVerbose )Saig_ManRetimeForward213,6729

src/aig/saig/saigIso.c,1280
Vec_Int_t * Saig_ManFindIsoPermCos( Aig_Man_t * pAig, Vec_Int_t * vPermCis )Saig_ManFindIsoPermCos46,1291
void Saig_ManDupIsoCanonical_rec( Aig_Man_t * pNew, Aig_Man_t * pAig, Aig_Obj_t * pObj )Saig_ManDupIsoCanonical_rec89,2801
Aig_Man_t * Saig_ManDupIsoCanonical( Aig_Man_t * pAig, int fVerbose )Saig_ManDupIsoCanonical128,4161
int Iso_ManCheckMapping( Aig_Man_t * pAig1, Aig_Man_t * pAig2, Vec_Int_t * vMap2to1, int fVerbose )Iso_ManCheckMapping186,5827
int Iso_ManNegEdgeNum( Aig_Man_t * pAig )Iso_ManNegEdgeNum235,7469
Vec_Int_t * Iso_ManFindMapping( Aig_Man_t * pAig1, Aig_Man_t * pAig2, Vec_Int_t * vPerm1_, Vec_Int_t * vPerm2_, int fVerbose )Iso_ManFindMapping264,8297
Aig_Man_t * Iso_ManFilterPos_old( Aig_Man_t * pAig, int fVerbose )Iso_ManFilterPos_old322,10253
int Iso_StoCompareVecStr( Vec_Str_t ** p1, Vec_Str_t ** p2 )Iso_StoCompareVecStr406,12969
Aig_Man_t * Iso_ManFilterPos( Aig_Man_t * pAig, Vec_Ptr_t ** pvPosEquivs, int fVerbose )Iso_ManFilterPos422,13311
Aig_Man_t * Iso_ManTest( Aig_Man_t * pAig, int fVerbose )Iso_ManTest540,16933
Aig_Man_t * Saig_ManIsoReduce( Aig_Man_t * pAig, Vec_Ptr_t ** pvPosEquivs, int fVerbose )Saig_ManIsoReduce561,17429
Aig_Man_t * Iso_ManTest888( Aig_Man_t * pAig1, int fVerbose )Iso_ManTest888594,18346

src/aig/saig/saigDup.c,1542
Aig_Man_t * Saig_ManDupOrpos( Aig_Man_t * pAig )Saig_ManDupOrpos45,1289
Aig_Man_t * Saig_ManCreateEquivMiter( Aig_Man_t * pAig, Vec_Int_t * vPairs, int fAddOuts )Saig_ManCreateEquivMiter91,2841
Aig_Man_t * Saig_ManTrimPis( Aig_Man_t * p )Saig_ManTrimPis143,4652
Aig_Obj_t * Saig_ManAbstractionDfs_rec( Aig_Man_t * pNew, Aig_Obj_t * pObj )Saig_ManAbstractionDfs_rec187,6127
Aig_Man_t * Saig_ManDupAbstraction( Aig_Man_t * p, Vec_Int_t * vFlops )Saig_ManDupAbstraction207,6799
int Saig_ManVerifyCex( Aig_Man_t * pAig, Abc_Cex_t * p )Saig_ManVerifyCex281,9124
int Saig_ManVerifyCexNoClear( Aig_Man_t * pAig, Abc_Cex_t * p )Saig_ManVerifyCexNoClear320,10453
Vec_Int_t * Saig_ManReturnFailingState( Aig_Man_t * pAig, Abc_Cex_t * p, int fNextOne )Saig_ManReturnFailingState347,11524
Abc_Cex_t * Saig_ManExtendCex( Aig_Man_t * pAig, Abc_Cex_t * p )Saig_ManExtendCex384,12479
int Saig_ManFindFailedPoCex( Aig_Man_t * pAig, Abc_Cex_t * p )Saig_ManFindFailedPoCex436,14359
Aig_Man_t * Saig_ManDupWithPhase( Aig_Man_t * pAig, Vec_Int_t * vInit )Saig_ManDupWithPhase482,15862
void Saig_ManDupCones_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vNodes, Vec_Ptr_t * vRoots )Saig_ManDupCones_rec526,17477
Aig_Man_t * Saig_ManDupCones( Aig_Man_t * pAig, int * pPos, int nPos )Saig_ManDupCones545,18249
int Aig_ManVerifyUsingBdds( Aig_Man_t * pInit, Saig_ParBbr_t * pPars ) { return 0; }Aig_ManVerifyUsingBdds592,19910
void Bbr_ManSetDefaultParams( Saig_ParBbr_t * p ) {}Bbr_ManSetDefaultParams593,19995

src/aig/hop/hopMem.c,286
#define IVY_PAGE_SIZE IVY_PAGE_SIZE31,821
#define IVY_PAGE_MASK IVY_PAGE_MASK32,904
void Hop_ManStartMemory( Hop_Man_t * p )Hop_ManStartMemory49,1467
void Hop_ManStopMemory( Hop_Man_t * p )Hop_ManStopMemory66,1856
void Hop_ManAddMemory( Hop_Man_t * p )Hop_ManAddMemory89,2497

src/aig/hop/hopDfs.c,1852
void Hop_ManDfs_rec( Hop_Obj_t * pObj, Vec_Ptr_t * vNodes )Hop_ManDfs_rec45,1284
Vec_Ptr_t * Hop_ManDfs( Hop_Man_t * p )Hop_ManDfs68,1952
Vec_Ptr_t * Hop_ManDfsNode( Hop_Man_t * p, Hop_Obj_t * pNode )Hop_ManDfsNode92,2543
int Hop_ManCountLevels( Hop_Man_t * p )Hop_ManCountLevels116,3169
void Hop_ManCreateRefs( Hop_Man_t * p )Hop_ManCreateRefs152,4299
void Hop_ConeMark_rec( Hop_Obj_t * pObj )Hop_ConeMark_rec188,5218
void Hop_ConeCleanAndMark_rec( Hop_Obj_t * pObj )Hop_ConeCleanAndMark_rec210,5835
int Hop_ConeCountAndMark_rec( Hop_Obj_t * pObj )Hop_ConeCountAndMark_rec233,6500
void Hop_ConeUnmark_rec( Hop_Obj_t * pObj )Hop_ConeUnmark_rec257,7199
int Hop_DagSize( Hop_Obj_t * pObj )Hop_DagSize279,7825
int Hop_ObjFanoutCount_rec( Hop_Obj_t * pObj, Hop_Obj_t * pPivot )Hop_ObjFanoutCount_rec298,8285
int Hop_ObjFanoutCount( Hop_Obj_t * pObj, Hop_Obj_t * pPivot )Hop_ObjFanoutCount310,8750
void Hop_Transfer_rec( Hop_Man_t * pDest, Hop_Obj_t * pObj )Hop_Transfer_rec330,9290
Hop_Obj_t * Hop_Transfer( Hop_Man_t * pSour, Hop_Man_t * pDest, Hop_Obj_t * pRoot, int nVars )Hop_Transfer353,10024
void Hop_Compose_rec( Hop_Man_t * p, Hop_Obj_t * pObj, Hop_Obj_t * pFunc, Hop_Obj_t * pVar )Hop_Compose_rec387,11074
Hop_Obj_t * Hop_Compose( Hop_Man_t * p, Hop_Obj_t * pRoot, Hop_Obj_t * pFunc, int iVar )Hop_Compose415,11984
void Hop_Complement_rec( Hop_Man_t * p, Hop_Obj_t * pObj, Hop_Obj_t * pVar )Hop_Complement_rec441,12854
Hop_Obj_t * Hop_Complement( Hop_Man_t * p, Hop_Obj_t * pRoot, int iVar )Hop_Complement469,13751
void Hop_Remap_rec( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_Remap_rec495,14587
Hop_Obj_t * Hop_Remap( Hop_Man_t * p, Hop_Obj_t * pRoot, unsigned uSupp, int nVars )Hop_Remap518,15305
Hop_Obj_t * Hop_Permute( Hop_Man_t * p, Hop_Obj_t * pRoot, int nRootVars, int * pPermute )Hop_Permute563,16691

src/aig/hop/hopTruth.c,1138
static inline int  Hop_ManTruthWordNum( int nVars )  { return nVars <= 5 ? 1 : (1 << (nVars - 5)); }Hop_ManTruthWordNum30,768
static inline void Hop_ManTruthCopy( unsigned * pOut, unsigned * pIn, int nVars )Hop_ManTruthCopy32,870
static inline void Hop_ManTruthClear( unsigned * pOut, int nVars )Hop_ManTruthClear38,1051
static inline void Hop_ManTruthFill( unsigned * pOut, int nVars )Hop_ManTruthFill44,1212
static inline void Hop_ManTruthNot( unsigned * pOut, unsigned * pIn, int nVars )Hop_ManTruthNot50,1383
int Hop_ManConvertAigToTruth_rec1( Hop_Obj_t * pObj )Hop_ManConvertAigToTruth_rec173,2054
unsigned * Hop_ManConvertAigToTruth_rec2( Hop_Obj_t * pObj, Vec_Int_t * vTruth, int nWords )Hop_ManConvertAigToTruth_rec297,2760
unsigned * Hop_ManConvertAigToTruth( Hop_Man_t * p, Hop_Obj_t * pRoot, int nVars, Vec_Int_t * vTruth, int fMsbFirst )Hop_ManConvertAigToTruth143,4640
static word Truth[8] = Truth233,7950
word Hop_ManComputeTruth6_rec( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_ManComputeTruth6_rec244,8258
word Hop_ManComputeTruth6( Hop_Man_t * p, Hop_Obj_t * pObj, int nVars )Hop_ManComputeTruth6256,8717

src/aig/hop/hopOper.c,1301
static inline int Hop_ObjIsExorType( Hop_Obj_t * p0, Hop_Obj_t * p1, Hop_Obj_t ** ppFan0, Hop_Obj_t ** ppFan1 )Hop_ObjIsExorType31,817
Hop_Obj_t * Hop_IthVar( Hop_Man_t * p, int i )Hop_IthVar63,1921
Hop_Obj_t * Hop_Oper( Hop_Man_t * p, Hop_Obj_t * p0, Hop_Obj_t * p1, Hop_Type_t Type )Hop_Oper83,2424
Hop_Obj_t * Hop_And( Hop_Man_t * p, Hop_Obj_t * p0, Hop_Obj_t * p1 )Hop_And104,2982
Hop_Obj_t * Hop_Exor( Hop_Man_t * p, Hop_Obj_t * p0, Hop_Obj_t * p1 )Hop_Exor138,4095
Hop_Obj_t * Hop_Or( Hop_Man_t * p, Hop_Obj_t * p0, Hop_Obj_t * p1 )Hop_Or171,5066
Hop_Obj_t * Hop_Mux( Hop_Man_t * p, Hop_Obj_t * pC, Hop_Obj_t * p1, Hop_Obj_t * p0 )Hop_Mux187,5460
Hop_Obj_t * Hop_Maj( Hop_Man_t * p, Hop_Obj_t * pA, Hop_Obj_t * pB, Hop_Obj_t * pC )Hop_Maj242,7560
Hop_Obj_t * Hop_Multi_rec( Hop_Man_t * p, Hop_Obj_t ** ppObjs, int nObjs, Hop_Type_t Type )Hop_Multi_rec258,8067
Hop_Obj_t * Hop_Multi( Hop_Man_t * p, Hop_Obj_t ** pArgs, int nArgs, Hop_Type_t Type )Hop_Multi279,8679
Hop_Obj_t * Hop_Miter( Hop_Man_t * p, Vec_Ptr_t * vPairs )Hop_Miter297,9153
Hop_Obj_t * Hop_CreateAnd( Hop_Man_t * p, int nVars )Hop_CreateAnd320,9918
Hop_Obj_t * Hop_CreateOr( Hop_Man_t * p, int nVars )Hop_CreateOr341,10423
Hop_Obj_t * Hop_CreateExor( Hop_Man_t * p, int nVars )Hop_CreateExor362,10926

src/aig/hop/hop_.c,0

src/aig/hop/hop.h,14211
#define ABC__aig__hop__hop_hABC__aig__hop__hop_h22,544
typedef struct Hop_Man_t_            Hop_Man_t;Hop_Man_t49,1374
typedef struct Hop_Obj_t_            Hop_Obj_t;Hop_Obj_t50,1422
typedef int                          Hop_Edge_t;Hop_Edge_t51,1470
    AIG_NONE,                        // 0: non-existent objectAIG_NONE55,1552
    AIG_CONST1,                      // 1: constant 1 AIG_CONST156,1615
    AIG_PI,                          // 2: primary inputAIG_PI57,1670
    AIG_PO,                          // 3: primary outputAIG_PO58,1727
    AIG_AND,                         // 4: AND nodeAIG_AND59,1785
    AIG_EXOR,                        // 5: EXOR nodeAIG_EXOR60,1837
    AIG_VOID                         // 6: unused objectAIG_VOID61,1890
} Hop_Type_t;Hop_Type_t62,1947
struct Hop_Obj_t_  // 6 wordsHop_Obj_t_65,1978
        void *       pData;          // miscpData68,2023
        int          iData; };       // misciData69,2068
        Hop_Obj_t *  pNext;          // strashing tablepNext71,2126
        int          PioNum; };      // the number of PI/POPioNum72,2182
    Hop_Obj_t *      pFanin0;        // faninpFanin073,2242
    Hop_Obj_t *      pFanin1;        // faninpFanin174,2288
    unsigned int     Type    :  3;   // object typeType75,2334
    unsigned int     fPhase  :  1;   // value under 000...0 patternfPhase76,2386
    unsigned int     fMarkA  :  1;   // multipurpose maskfMarkA77,2454
    unsigned int     fMarkB  :  1;   // multipurpose maskfMarkB78,2512
    unsigned int     nRefs   : 26;   // reference count (level)nRefs79,2570
    int              Id;             // unique ID of the nodeId80,2634
struct Hop_Man_t_Hop_Man_t_84,2719
    Vec_Ptr_t *      vPis;           // the array of PIsvPis87,2756
    Vec_Ptr_t *      vPos;           // the array of POsvPos88,2813
    Vec_Ptr_t *      vObjs;          // the array of all nodes (optional)vObjs89,2870
    Hop_Obj_t *      pConst1;        // the constant 1 nodepConst190,2944
    Hop_Obj_t        Ghost;          // the ghost nodeGhost91,3004
    int              nObjs[AIG_VOID];// the number of objects by typenObjs93,3084
    int              nCreated;       // the number of created objectsnCreated94,3154
    int              nDeleted;       // the number of deleted objectsnDeleted95,3224
    Hop_Obj_t **     pTable;         // structural hash tablepTable97,3322
    int              nTableSize;     // structural hash table sizenTableSize98,3384
    void *           pData;          // the temporary datapData100,3479
    int              nTravIds;       // the current traversal IDnTravIds101,3538
    int              fRefCount;      // enables reference countingfRefCount102,3603
    int              fCatchExor;     // enables EXOR nodesfCatchExor103,3670
    Vec_Ptr_t *      vChunks;        // allocated memory piecesvChunks105,3754
    Vec_Ptr_t *      vPages;         // memory pages used by nodesvPages106,3818
    Hop_Obj_t *      pListFree;      // the list of free nodes pListFree107,3885
    abctime          time1;time1109,3974
    abctime          time2;time2110,4002
static inline int          Hop_BitWordNum( int nBits )            { return (nBits>>5) + ((nBits&31) > 0);           }Hop_BitWordNum118,4301
static inline int          Hop_TruthWordNum( int nVars )          { return nVars <= 5 ? 1 : (1 << (nVars - 5));     }Hop_TruthWordNum119,4419
static inline int          Hop_InfoHasBit( unsigned * p, int i )  { return (p[(i)>>5] & (1<<((i) & 31))) > 0;       }Hop_InfoHasBit120,4537
static inline void         Hop_InfoSetBit( unsigned * p, int i )  { p[(i)>>5] |= (1<<((i) & 31));                   }Hop_InfoSetBit121,4655
static inline void         Hop_InfoXorBit( unsigned * p, int i )  { p[(i)>>5] ^= (1<<((i) & 31));                   }Hop_InfoXorBit122,4773
static inline int          Hop_Base2Log( unsigned n )             { int r; if ( n < 2 ) return n; for ( r = 0, n--; n; n >>= 1, r++ ) {}; return r; }Hop_Base2Log123,4891
static inline int          Hop_Base10Log( unsigned n )            { int r; if ( n < 2 ) return n; for ( r = 0, n--; n; n /= 10, r++ ) {}; return r; }Hop_Base10Log124,5041
static inline Hop_Obj_t *  Hop_Regular( Hop_Obj_t * p )           { return (Hop_Obj_t *)((ABC_PTRUINT_T)(p) & ~01); }Hop_Regular126,5192
static inline Hop_Obj_t *  Hop_Not( Hop_Obj_t * p )               { return (Hop_Obj_t *)((ABC_PTRUINT_T)(p) ^  01); }Hop_Not127,5310
static inline Hop_Obj_t *  Hop_NotCond( Hop_Obj_t * p, int c )    { return (Hop_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c)); }Hop_NotCond128,5428
static inline int          Hop_IsComplement( Hop_Obj_t * p )      { return (int)((ABC_PTRUINT_T)(p) & 01);          }Hop_IsComplement129,5546
static inline Hop_Obj_t *  Hop_ManConst0( Hop_Man_t * p )         { return Hop_Not(p->pConst1);                     }Hop_ManConst0131,5665
static inline Hop_Obj_t *  Hop_ManConst1( Hop_Man_t * p )         { return p->pConst1;                              }Hop_ManConst1132,5783
static inline Hop_Obj_t *  Hop_ManGhost( Hop_Man_t * p )          { return &p->Ghost;                               }Hop_ManGhost133,5901
static inline Hop_Obj_t *  Hop_ManPi( Hop_Man_t * p, int i )      { return (Hop_Obj_t *)Vec_PtrEntry(p->vPis, i);   }Hop_ManPi134,6019
static inline Hop_Obj_t *  Hop_ManPo( Hop_Man_t * p, int i )      { return (Hop_Obj_t *)Vec_PtrEntry(p->vPos, i);   }Hop_ManPo135,6137
static inline Hop_Obj_t *  Hop_ManObj( Hop_Man_t * p, int i )     { return p->vObjs ? (Hop_Obj_t *)Vec_PtrEntry(p->vObjs, i) : NULL;  }Hop_ManObj136,6255
static inline Hop_Edge_t   Hop_EdgeCreate( int Id, int fCompl )            { return (Id << 1) | fCompl;             }Hop_EdgeCreate138,6392
static inline int          Hop_EdgeId( Hop_Edge_t Edge )                   { return Edge >> 1;                      }Hop_EdgeId139,6510
static inline int          Hop_EdgeIsComplement( Hop_Edge_t Edge )         { return Edge & 1;                       }Hop_EdgeIsComplement140,6628
static inline Hop_Edge_t   Hop_EdgeRegular( Hop_Edge_t Edge )              { return (Edge >> 1) << 1;               }Hop_EdgeRegular141,6746
static inline Hop_Edge_t   Hop_EdgeNot( Hop_Edge_t Edge )                  { return Edge ^ 1;                       }Hop_EdgeNot142,6864
static inline Hop_Edge_t   Hop_EdgeNotCond( Hop_Edge_t Edge, int fCond )   { return Edge ^ fCond;                   }Hop_EdgeNotCond143,6982
static inline int          Hop_ManPiNum( Hop_Man_t * p )          { return p->nObjs[AIG_PI];                    }Hop_ManPiNum145,7101
static inline int          Hop_ManPoNum( Hop_Man_t * p )          { return p->nObjs[AIG_PO];                    }Hop_ManPoNum146,7215
static inline int          Hop_ManAndNum( Hop_Man_t * p )         { return p->nObjs[AIG_AND];                   }Hop_ManAndNum147,7329
static inline int          Hop_ManExorNum( Hop_Man_t * p )        { return p->nObjs[AIG_EXOR];                  }Hop_ManExorNum148,7443
static inline int          Hop_ManNodeNum( Hop_Man_t * p )        { return p->nObjs[AIG_AND]+p->nObjs[AIG_EXOR];}Hop_ManNodeNum149,7557
static inline int          Hop_ManGetCost( Hop_Man_t * p )        { return p->nObjs[AIG_AND]+3*p->nObjs[AIG_EXOR]; }Hop_ManGetCost150,7671
static inline int          Hop_ManObjNum( Hop_Man_t * p )         { return p->nCreated - p->nDeleted;           }Hop_ManObjNum151,7788
static inline Hop_Type_t   Hop_ObjType( Hop_Obj_t * pObj )        { return (Hop_Type_t)pObj->Type;               }Hop_ObjType153,7903
static inline int          Hop_ObjIsNone( Hop_Obj_t * pObj )      { return pObj->Type == AIG_NONE;   }Hop_ObjIsNone154,8018
static inline int          Hop_ObjIsConst1( Hop_Obj_t * pObj )    { assert(!Hop_IsComplement(pObj)); return pObj->Type == AIG_CONST1; }Hop_ObjIsConst1155,8121
static inline int          Hop_ObjIsPi( Hop_Obj_t * pObj )        { return pObj->Type == AIG_PI;     }Hop_ObjIsPi156,8257
static inline int          Hop_ObjIsPo( Hop_Obj_t * pObj )        { return pObj->Type == AIG_PO;     }Hop_ObjIsPo157,8360
static inline int          Hop_ObjIsAnd( Hop_Obj_t * pObj )       { return pObj->Type == AIG_AND;    }Hop_ObjIsAnd158,8463
static inline int          Hop_ObjIsExor( Hop_Obj_t * pObj )      { return pObj->Type == AIG_EXOR;   }Hop_ObjIsExor159,8566
static inline int          Hop_ObjIsNode( Hop_Obj_t * pObj )      { return pObj->Type == AIG_AND || pObj->Type == AIG_EXOR;   }Hop_ObjIsNode160,8669
static inline int          Hop_ObjIsTerm( Hop_Obj_t * pObj )      { return pObj->Type == AIG_PI  || pObj->Type == AIG_PO || pObj->Type == AIG_CONST1; }Hop_ObjIsTerm161,8797
static inline int          Hop_ObjIsHash( Hop_Obj_t * pObj )      { return pObj->Type == AIG_AND || pObj->Type == AIG_EXOR;   }Hop_ObjIsHash162,8949
static inline int          Hop_ObjIsMarkA( Hop_Obj_t * pObj )     { return pObj->fMarkA;  }Hop_ObjIsMarkA164,9078
static inline void         Hop_ObjSetMarkA( Hop_Obj_t * pObj )    { pObj->fMarkA = 1;     }Hop_ObjSetMarkA165,9170
static inline void         Hop_ObjClearMarkA( Hop_Obj_t * pObj )  { pObj->fMarkA = 0;     }Hop_ObjClearMarkA166,9262
static inline void         Hop_ObjSetTravId( Hop_Obj_t * pObj, int TravId )                { pObj->pData = (void *)(ABC_PTRINT_T)TravId;                      }Hop_ObjSetTravId168,9356
static inline void         Hop_ObjSetTravIdCurrent( Hop_Man_t * p, Hop_Obj_t * pObj )      { pObj->pData = (void *)(ABC_PTRINT_T)p->nTravIds;                 }Hop_ObjSetTravIdCurrent169,9516
static inline void         Hop_ObjSetTravIdPrevious( Hop_Man_t * p, Hop_Obj_t * pObj )     { pObj->pData = (void *)(ABC_PTRINT_T)(p->nTravIds - 1);           }Hop_ObjSetTravIdPrevious170,9676
static inline int          Hop_ObjIsTravIdCurrent( Hop_Man_t * p, Hop_Obj_t * pObj )       { return (int)((int)(ABC_PTRINT_T)pObj->pData == p->nTravIds);     }Hop_ObjIsTravIdCurrent171,9836
static inline int          Hop_ObjIsTravIdPrevious( Hop_Man_t * p, Hop_Obj_t * pObj )      { return (int)((int)(ABC_PTRINT_T)pObj->pData == p->nTravIds - 1); }Hop_ObjIsTravIdPrevious172,9996
static inline int          Hop_ObjTravId( Hop_Obj_t * pObj )      { return (int)(ABC_PTRINT_T)pObj->pData;        }Hop_ObjTravId174,10157
static inline int          Hop_ObjPhase( Hop_Obj_t * pObj )       { return pObj->fPhase;                           }Hop_ObjPhase175,10273
static inline int          Hop_ObjRefs( Hop_Obj_t * pObj )        { return pObj->nRefs;                            }Hop_ObjRefs176,10390
static inline void         Hop_ObjRef( Hop_Obj_t * pObj )         { pObj->nRefs++;                                 }Hop_ObjRef177,10507
static inline void         Hop_ObjDeref( Hop_Obj_t * pObj )       { assert( pObj->nRefs > 0 ); pObj->nRefs--;      }Hop_ObjDeref178,10624
static inline void         Hop_ObjClearRef( Hop_Obj_t * pObj )    { pObj->nRefs = 0;                               }Hop_ObjClearRef179,10741
static inline int          Hop_ObjFaninC0( Hop_Obj_t * pObj )     { return Hop_IsComplement(pObj->pFanin0);        }Hop_ObjFaninC0180,10858
static inline int          Hop_ObjFaninC1( Hop_Obj_t * pObj )     { return Hop_IsComplement(pObj->pFanin1);        }Hop_ObjFaninC1181,10975
static inline Hop_Obj_t *  Hop_ObjFanin0( Hop_Obj_t * pObj )      { return Hop_Regular(pObj->pFanin0);             }Hop_ObjFanin0182,11092
static inline Hop_Obj_t *  Hop_ObjFanin1( Hop_Obj_t * pObj )      { return Hop_Regular(pObj->pFanin1);             }Hop_ObjFanin1183,11209
static inline Hop_Obj_t *  Hop_ObjChild0( Hop_Obj_t * pObj )      { return pObj->pFanin0;                          }Hop_ObjChild0184,11326
static inline Hop_Obj_t *  Hop_ObjChild1( Hop_Obj_t * pObj )      { return pObj->pFanin1;                          }Hop_ObjChild1185,11443
static inline Hop_Obj_t *  Hop_ObjChild0Copy( Hop_Obj_t * pObj )  { assert( !Hop_IsComplement(pObj) ); return Hop_ObjFanin0(pObj)? Hop_NotCond((Hop_Obj_t *)Hop_ObjFanin0(pObj)->pData, Hop_ObjFaninC0(pObj)) : NULL;  }Hop_ObjChild0Copy186,11560
static inline Hop_Obj_t *  Hop_ObjChild1Copy( Hop_Obj_t * pObj )  { assert( !Hop_IsComplement(pObj) ); return Hop_ObjFanin1(pObj)? Hop_NotCond((Hop_Obj_t *)Hop_ObjFanin1(pObj)->pData, Hop_ObjFaninC1(pObj)) : NULL;  }Hop_ObjChild1Copy187,11777
static inline int          Hop_ObjChild0CopyI( Hop_Obj_t * pObj ) { assert( !Hop_IsComplement(pObj) ); return Hop_ObjFanin0(pObj)? Abc_LitNotCond(Hop_ObjFanin0(pObj)->iData, Hop_ObjFaninC0(pObj)) : -1;              }Hop_ObjChild0CopyI188,11994
static inline int          Hop_ObjChild1CopyI( Hop_Obj_t * pObj ) { assert( !Hop_IsComplement(pObj) ); return Hop_ObjFanin1(pObj)? Abc_LitNotCond(Hop_ObjFanin1(pObj)->iData, Hop_ObjFaninC1(pObj)) : -1;              }Hop_ObjChild1CopyI189,12211
static inline int          Hop_ObjLevel( Hop_Obj_t * pObj )       { return pObj->nRefs;                            }Hop_ObjLevel190,12428
static inline int          Hop_ObjLevelNew( Hop_Obj_t * pObj )    { return 1 + Hop_ObjIsExor(pObj) + Abc_MaxInt(Hop_ObjFanin0(pObj)->nRefs, Hop_ObjFanin1(pObj)->nRefs);       }Hop_ObjLevelNew191,12545
static inline int          Hop_ObjPhaseCompl( Hop_Obj_t * pObj )  { return Hop_IsComplement(pObj)? !Hop_Regular(pObj)->fPhase : pObj->fPhase; }Hop_ObjPhaseCompl192,12722
static inline void         Hop_ObjClean( Hop_Obj_t * pObj )       { memset( pObj, 0, sizeof(Hop_Obj_t) ); }Hop_ObjClean193,12866
static inline int          Hop_ObjWhatFanin( Hop_Obj_t * pObj, Hop_Obj_t * pFanin )    Hop_ObjWhatFanin194,12974
static inline int          Hop_ObjFanoutC( Hop_Obj_t * pObj, Hop_Obj_t * pFanout )    Hop_ObjFanoutC200,13198
static inline Hop_Obj_t *  Hop_ObjCreateGhost( Hop_Man_t * p, Hop_Obj_t * p0, Hop_Obj_t * p1, Hop_Type_t Type )    Hop_ObjCreateGhost208,13498
static inline Hop_Obj_t * Hop_ManFetchMemory( Hop_Man_t * p )  Hop_ManFetchMemory230,14149
static inline void Hop_ManRecycleMemory( Hop_Man_t * p, Hop_Obj_t * pEntry )Hop_ManRecycleMemory246,14594
#define Hop_ManForEachPi(Hop_ManForEachPi259,15075
#define Hop_ManForEachPo(Hop_ManForEachPo262,15251
#define Hop_ManForEachNode(Hop_ManForEachNode265,15455

src/aig/hop/hopObj.c,765
Hop_Obj_t * Hop_ObjCreatePi( Hop_Man_t * p )Hop_ObjCreatePi45,1264
Hop_Obj_t * Hop_ObjCreatePo( Hop_Man_t * p, Hop_Obj_t * pDriver )Hop_ObjCreatePo67,1794
Hop_Obj_t * Hop_ObjCreate( Hop_Man_t * p, Hop_Obj_t * pGhost )Hop_ObjCreate97,2604
void Hop_ObjConnect( Hop_Man_t * p, Hop_Obj_t * pObj, Hop_Obj_t * pFan0, Hop_Obj_t * pFan1 )Hop_ObjConnect125,3395
void Hop_ObjDisconnect( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_ObjDisconnect159,4396
void Hop_ObjDelete( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_ObjDelete186,5127
void Hop_ObjDelete_rec( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_ObjDelete_rec214,5877
Hop_Obj_t * Hop_ObjRepr( Hop_Obj_t * pObj )Hop_ObjRepr241,6725
void Hop_ObjCreateChoice( Hop_Obj_t * pOld, Hop_Obj_t * pNew )Hop_ObjCreateChoice260,7289

src/aig/hop/hopTable.c,626
static unsigned long Hop_Hash( Hop_Obj_t * pObj, int TableSize ) Hop_Hash31,814
static Hop_Obj_t ** Hop_TableFind( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_TableFind42,1198
Hop_Obj_t * Hop_TableLookup( Hop_Man_t * p, Hop_Obj_t * pGhost )Hop_TableLookup71,2211
void Hop_TableInsert( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_TableInsert100,3210
void Hop_TableDelete( Hop_Man_t * p, Hop_Obj_t * pObj )Hop_TableDelete123,3853
int Hop_TableCountEntries( Hop_Man_t * p )Hop_TableCountEntries145,4430
void Hop_TableResize( Hop_Man_t * p )Hop_TableResize166,4979
void Hop_TableProfile( Hop_Man_t * p )Hop_TableProfile212,6546

src/aig/hop/cudd2.h,85
#define ABC__aig__hop__cudd2_hABC__aig__hop__cudd2_h22,553
#define MSG(MSG27,634

src/aig/hop/cudd2.c,1885
typedef struct Aig_CuddMan_t_        Aig_CuddMan_t;Aig_CuddMan_t31,827
struct Aig_CuddMan_t_Aig_CuddMan_t_32,879
    Aig_Man_t *  pAig;   // internal AIG packagepAig34,903
    st__table *   pTable; // hash table mapping BDD nodes into AIG nodespTable35,952
static Aig_CuddMan_t * s_pCuddMan = NULL;s_pCuddMan39,1080
void Cudd2_Init( unsigned int numVars, unsigned int numVarsZ, unsigned int numSlots, unsigned int cacheSize, unsigned long maxMemory, void * pCudd )Cudd2_Init56,1597
void Cudd2_Quit( void * pCudd )Cudd2_Quit80,2375
static Aig_Obj_t * Cudd2_GetArg( void * pArg )Cudd2_GetArg101,2943
static void Cudd2_SetArg( Aig_Obj_t * pNode, void * pResult )Cudd2_SetArg124,3618
void Cudd2_bddOne( void * pCudd, void * pResult )Cudd2_bddOne144,4217
void Cudd2_bddIthVar( void * pCudd, int iVar, void * pResult )Cudd2_bddIthVar160,4593
void Cudd2_bddAnd( void * pCudd, void * pArg0, void * pArg1, void * pResult )Cudd2_bddAnd180,5135
void Cudd2_bddOr( void * pCudd, void * pArg0, void * pArg1, void * pResult )Cudd2_bddOr200,5684
void Cudd2_bddNand( void * pCudd, void * pArg0, void * pArg1, void * pResult )Cudd2_bddNand216,6100
void Cudd2_bddNor( void * pCudd, void * pArg0, void * pArg1, void * pResult )Cudd2_bddNor232,6500
void Cudd2_bddXor( void * pCudd, void * pArg0, void * pArg1, void * pResult )Cudd2_bddXor248,6908
void Cudd2_bddXnor( void * pCudd, void * pArg0, void * pArg1, void * pResult )Cudd2_bddXnor268,7458
void Cudd2_bddIte( void * pCudd, void * pArg0, void * pArg1, void * pArg2, void * pResult )Cudd2_bddIte284,7858
void Cudd2_bddCompose( void * pCudd, void * pArg0, void * pArg1, int v, void * pResult )Cudd2_bddCompose305,8475
void Cudd2_bddLeq( void * pCudd, void * pArg0, void * pArg1, int Result )Cudd2_bddLeq325,9111
void Cudd2_bddEqual( void * pCudd, void * pArg0, void * pArg1, int Result )Cudd2_bddEqual345,9734

src/aig/hop/hopUtil.c,1242
void Hop_ManIncrementTravId( Hop_Man_t * p )Hop_ManIncrementTravId45,1277
void Hop_ManCleanData( Hop_Man_t * p )Hop_ManCleanData63,1686
void Hop_ObjCleanData_rec( Hop_Obj_t * pObj )Hop_ObjCleanData_rec88,2368
void Hop_ObjCollectMulti_rec( Hop_Obj_t * pRoot, Hop_Obj_t * pObj, Vec_Ptr_t * vSuper )Hop_ObjCollectMulti_rec111,2943
void Hop_ObjCollectMulti( Hop_Obj_t * pRoot, Vec_Ptr_t * vSuper )Hop_ObjCollectMulti133,3635
int Hop_ObjIsMuxType( Hop_Obj_t * pNode )Hop_ObjIsMuxType151,4116
int Hop_ObjRecognizeExor( Hop_Obj_t * pObj, Hop_Obj_t ** ppFan0, Hop_Obj_t ** ppFan1 )Hop_ObjRecognizeExor187,5547
Hop_Obj_t * Hop_ObjRecognizeMux( Hop_Obj_t * pNode, Hop_Obj_t ** ppNodeT, Hop_Obj_t ** ppNodeE )Hop_ObjRecognizeMux231,7030
void Hop_ObjPrintEqn( FILE * pFile, Hop_Obj_t * pObj, Vec_Vec_t * vLevels, int Level )Hop_ObjPrintEqn322,10706
void Hop_ObjPrintVerilog( FILE * pFile, Hop_Obj_t * pObj, Vec_Vec_t * vLevels, int Level, int fOnlyAnds )Hop_ObjPrintVerilog369,12123
void Hop_ObjPrintVerbose( Hop_Obj_t * pObj, int fHaig )Hop_ObjPrintVerbose456,15182
void Hop_ManPrintVerbose( Hop_Man_t * p, int fHaig )Hop_ManPrintVerbose482,15931
void Hop_ManDumpBlif( Hop_Man_t * p, char * pFileName )Hop_ManDumpBlif509,16616

src/aig/hop/hopCheck.c,55
int Hop_ManCheck( Hop_Man_t * p )Hop_ManCheck45,1288

src/aig/hop/hopBalance.c,1061
Hop_Man_t * Hop_ManBalance( Hop_Man_t * p, int fUpdateLevel )Hop_ManBalance51,1779
Hop_Obj_t * Hop_NodeBalance_rec( Hop_Man_t * pNew, Hop_Obj_t * pObjOld, Vec_Vec_t * vStore, int Level, int fUpdateLevel )Hop_NodeBalance_rec94,3093
int Hop_NodeBalanceCone_rec( Hop_Obj_t * pRoot, Hop_Obj_t * pObj, Vec_Ptr_t * vSuper )Hop_NodeBalanceCone_rec136,4736
Vec_Ptr_t * Hop_NodeBalanceCone( Hop_Obj_t * pObj, Vec_Vec_t * vStore, int Level )Hop_NodeBalanceCone182,6365
int Hop_NodeCompareLevelsDecrease( Hop_Obj_t ** pp1, Hop_Obj_t ** pp2 )Hop_NodeCompareLevelsDecrease217,7568
Hop_Obj_t * Hop_NodeBalanceBuildSuper( Hop_Man_t * p, Vec_Ptr_t * vSuper, Hop_Type_t Type, int fUpdateLevel )Hop_NodeBalanceBuildSuper243,8219
int Hop_NodeBalanceFindLeft( Vec_Ptr_t * vSuper )Hop_NodeBalanceFindLeft280,9865
void Hop_NodeBalancePermute( Hop_Man_t * p, Vec_Ptr_t * vSuper, int LeftBound, int fExor )Hop_NodeBalancePermute318,11231
void Hop_NodeBalancePushUniqueOrderByLevel( Vec_Ptr_t * vStore, Hop_Obj_t * pObj )Hop_NodeBalancePushUniqueOrderByLevel376,13182

src/aig/hop/hopMan.c,229
Hop_Man_t * Hop_ManStart()Hop_ManStart45,1253
void Hop_ManStop( Hop_Man_t * p )Hop_ManStop84,2302
int Hop_ManCleanup( Hop_Man_t * p )Hop_ManCleanup120,3419
void Hop_ManPrintStats( Hop_Man_t * p )Hop_ManPrintStats150,4241

src/aig/miniaig/minilut.h,3671
#define MINI_LUT__mini_lut_hMINI_LUT__mini_lut_h22,569
#define MINI_LUT_NULL MINI_LUT_NULL39,1147
#define MINI_LUT_NULL2 MINI_LUT_NULL240,1188
#define MINI_LUT_START_SIZE MINI_LUT_START_SIZE41,1229
typedef struct Mini_Lut_t_       Mini_Lut_t;Mini_Lut_t47,1491
struct Mini_Lut_t_ Mini_Lut_t_48,1536
    int           nCap;nCap50,1558
    int           nSize;nSize51,1582
    int           nRegs;nRegs52,1607
    int           LutSize;LutSize53,1632
    int *         pArray;pArray54,1659
    unsigned *    pTruths;pTruths55,1685
#define MINI_LUT_ALLOC(MINI_LUT_ALLOC63,1957
#define MINI_LUT_CALLOC(MINI_LUT_CALLOC64,2035
#define MINI_LUT_FALLOC(MINI_LUT_FALLOC65,2112
#define MINI_LUT_FREE(MINI_LUT_FREE66,2226
#define MINI_LUT_REALLOC(MINI_LUT_REALLOC67,2312
static int  Mini_LutWordNum( int LutSize ) Mini_LutWordNum72,2534
static void Mini_LutGrow( Mini_Lut_t * p, int nCapMin )Mini_LutGrow78,2653
static void Mini_LutPush( Mini_Lut_t * p, int nVars, int * pVars, unsigned * pTruth )Mini_LutPush88,3016
static int Mini_LutNodeFanin( Mini_Lut_t * p, int Id, int k )Mini_LutNodeFanin111,3825
static unsigned * Mini_LutNodeTruth( Mini_Lut_t * p, int Id )    Mini_LutNodeTruth116,3970
static int      Mini_LutNodeConst0()                           { return 0;                    }Mini_LutNodeConst0123,4162
static int      Mini_LutNodeConst1()                           { return 1;                    }Mini_LutNodeConst1124,4258
static int      Mini_LutNodeNum( Mini_Lut_t * p )              { return p->nSize;             }Mini_LutNodeNum126,4355
static int      Mini_LutNodeIsConst( Mini_Lut_t * p, int Id )  { assert( Id >= 0 ); return Id == 0 || Id == 1; }Mini_LutNodeIsConst127,4451
static int      Mini_LutNodeIsPi( Mini_Lut_t * p, int Id )     { assert( Id >= 0 ); return Id > 1 && Mini_LutNodeFanin( p, Id, 0 ) == MINI_LUT_NULL; }Mini_LutNodeIsPi128,4564
static int      Mini_LutNodeIsPo( Mini_Lut_t * p, int Id )     { assert( Id >= 0 ); return Id > 1 && Mini_LutNodeFanin( p, Id, 0 ) != MINI_LUT_NULL && Mini_LutNodeFanin( p, Id, 1 ) == MINI_LUT_NULL2; }Mini_LutNodeIsPo129,4715
static int      Mini_LutNodeIsNode( Mini_Lut_t * p, int Id )   { assert( Id >= 0 ); return Id > 1 && Mini_LutNodeFanin( p, Id, 0 ) != MINI_LUT_NULL && Mini_LutNodeFanin( p, Id, 1 ) != MINI_LUT_NULL2; }Mini_LutNodeIsNode130,4917
static int      Mini_LutSize( Mini_Lut_t * p )                 { return p->LutSize;           }Mini_LutSize132,5120
static int      Mini_LutRegNum( Mini_Lut_t * p )               { return p->nRegs;             }Mini_LutRegNum135,5249
static void     Mini_LutSetRegNum( Mini_Lut_t * p, int n )     { p->nRegs = n;                }Mini_LutSetRegNum136,5345
#define Mini_LutForEachPi(Mini_LutForEachPi139,5471
#define Mini_LutForEachPo(Mini_LutForEachPo140,5591
#define Mini_LutForEachNode(Mini_LutForEachNode141,5711
#define Mini_LutForEachFanin(Mini_LutForEachFanin144,5858
static Mini_Lut_t * Mini_LutStart( int LutSize )Mini_LutStart147,6021
static void Mini_LutStop( Mini_Lut_t * p )Mini_LutStop164,6710
static void Mini_LutPrintStats( Mini_Lut_t * p )Mini_LutPrintStats170,6846
static void Mini_LutDump( Mini_Lut_t * p, char * pFileName )Mini_LutDump186,7201
static Mini_Lut_t * Mini_LutLoad( char * pFileName )Mini_LutLoad203,7872
static int Mini_LutCreatePi( Mini_Lut_t * p )Mini_LutCreatePi230,8877
static int Mini_LutCreatePo( Mini_Lut_t * p, int Var0 )Mini_LutCreatePo235,8990
static int Mini_LutCreateNode( Mini_Lut_t * p, int nVars, int * pVars, unsigned * pTruth )Mini_LutCreateNode245,9296
static int Mini_LutCheck( Mini_Lut_t * p )Mini_LutCheck253,9579

src/aig/miniaig/abcOper.h,6160
#define ABC__base__acb__acb__types_hABC__base__acb__acb__types_h22,555
    ABC_OPER_NONE = 0,     // 00  unusedABC_OPER_NONE40,1317
    ABC_OPER_PI,           // 01  inputABC_OPER_PI41,1358
    ABC_OPER_PO,           // 02  outputABC_OPER_PO42,1398
    ABC_OPER_CI,           // 03  combinational inputABC_OPER_CI43,1439
    ABC_OPER_CO,           // 04  combinational outputABC_OPER_CO44,1493
    ABC_OPER_FON,          // 05  output placeholderABC_OPER_FON45,1548
    ABC_OPER_BOX,          // 06  boxABC_OPER_BOX46,1601
    ABC_OPER_CONST_F,      // 07ABC_OPER_CONST_F48,1640
    ABC_OPER_CONST_T,      // 08ABC_OPER_CONST_T49,1673
    ABC_OPER_CONST_X,      // 09ABC_OPER_CONST_X50,1706
    ABC_OPER_CONST_Z,      // 10ABC_OPER_CONST_Z51,1739
    ABC_OPER_BIT_BUF,      // 11ABC_OPER_BIT_BUF53,1773
    ABC_OPER_BIT_INV,      // 12ABC_OPER_BIT_INV54,1806
    ABC_OPER_BIT_AND,      // 13ABC_OPER_BIT_AND55,1839
    ABC_OPER_BIT_NAND,     // 14ABC_OPER_BIT_NAND56,1872
    ABC_OPER_BIT_OR,       // 15ABC_OPER_BIT_OR57,1905
    ABC_OPER_BIT_NOR,      // 16ABC_OPER_BIT_NOR58,1938
    ABC_OPER_BIT_XOR,      // 17ABC_OPER_BIT_XOR59,1971
    ABC_OPER_BIT_NXOR,     // 18ABC_OPER_BIT_NXOR60,2004
    ABC_OPER_BIT_SHARP,    // 19ABC_OPER_BIT_SHARP61,2037
    ABC_OPER_BIT_SHARPL,   // 20ABC_OPER_BIT_SHARPL62,2070
    ABC_OPER_BIT_MUX,      // 21  fanins are: {Ctrl, Data1, Data0}ABC_OPER_BIT_MUX63,2103
    ABC_OPER_BIT_MAJ,      // 22ABC_OPER_BIT_MAJ64,2170
    ABC_OPER_ABC,          // 23ABC_OPER_ABC66,2204
    ABC_OPER_BA,           // 24ABC_OPER_BA67,2237
    ABC_OPER_BO,           // 25ABC_OPER_BO68,2270
    ABC_OPER_BX,           // 26ABC_OPER_BX69,2303
    ABC_OPER_BN,           // 27ABC_OPER_BN70,2336
    ABC_OPER_BAO,          // 28ABC_OPER_BAO71,2369
    ABC_OPER_BOA,          // 29ABC_OPER_BOA72,2402
    ABC_OPER_RED_AND,      // 30ABC_OPER_RED_AND74,2436
    ABC_OPER_RED_NAND,     // 31ABC_OPER_RED_NAND75,2469
    ABC_OPER_RED_OR,       // 32ABC_OPER_RED_OR76,2502
    ABC_OPER_RED_NOR,      // 33ABC_OPER_RED_NOR77,2535
    ABC_OPER_RED_XOR,      // 34ABC_OPER_RED_XOR78,2568
    ABC_OPER_RED_NXOR,     // 35ABC_OPER_RED_NXOR79,2601
    ABC_OPER_LOGIC_NOT,    // 36ABC_OPER_LOGIC_NOT81,2635
    ABC_OPER_LOGIC_AND,    // 37ABC_OPER_LOGIC_AND82,2668
    ABC_OPER_LOGIC_NAND,   // 38ABC_OPER_LOGIC_NAND83,2701
    ABC_OPER_LOGIC_OR,     // 39ABC_OPER_LOGIC_OR84,2734
    ABC_OPER_LOGIC_NOR,    // 40ABC_OPER_LOGIC_NOR85,2767
    ABC_OPER_LOGIC_XOR,    // 41ABC_OPER_LOGIC_XOR86,2800
    ABC_OPER_LOGIC_XNOR,   // 42ABC_OPER_LOGIC_XNOR87,2833
    ABC_OPER_SEL_NMUX,     // 43  fanins are: {Ctrl, Data0, Data1, Data2, ...}ABC_OPER_SEL_NMUX89,2867
    ABC_OPER_SEL_SEL,      // 44ABC_OPER_SEL_SEL90,2946
    ABC_OPER_SEL_PSEL,     // 45ABC_OPER_SEL_PSEL91,2979
    ABC_OPER_SEL_ENC,      // 46ABC_OPER_SEL_ENC92,3012
    ABC_OPER_SEL_PENC,     // 47ABC_OPER_SEL_PENC93,3045
    ABC_OPER_SEL_DEC,      // 48ABC_OPER_SEL_DEC94,3078
    ABC_OPER_SEL_EDEC,     // 49ABC_OPER_SEL_EDEC95,3111
    ABC_OPER_ARI_ADD,      // 50ABC_OPER_ARI_ADD97,3145
    ABC_OPER_ARI_SUB,      // 51ABC_OPER_ARI_SUB98,3178
    ABC_OPER_ARI_MUL,      // 52ABC_OPER_ARI_MUL99,3211
    ABC_OPER_ARI_SMUL,     // 53ABC_OPER_ARI_SMUL100,3244
    ABC_OPER_ARI_DIV,      // 54ABC_OPER_ARI_DIV101,3277
    ABC_OPER_ARI_MOD,      // 55ABC_OPER_ARI_MOD102,3310
    ABC_OPER_ARI_REM,      // 56ABC_OPER_ARI_REM103,3343
    ABC_OPER_ARI_POW,      // 57ABC_OPER_ARI_POW104,3376
    ABC_OPER_ARI_MIN,      // 58ABC_OPER_ARI_MIN105,3409
    ABC_OPER_ARI_SQRT,     // 59ABC_OPER_ARI_SQRT106,3442
    ABC_OPER_ARI_ABS,      // 60ABC_OPER_ARI_ABS107,3475
    ABC_OPER_COMP_SLESS,   // 61ABC_OPER_COMP_SLESS109,3509
    ABC_OPER_COMP_LESS,    // 62ABC_OPER_COMP_LESS110,3542
    ABC_OPER_COMP_LESSEQU, // 63ABC_OPER_COMP_LESSEQU111,3575
    ABC_OPER_COMP_MOREEQU, // 64ABC_OPER_COMP_MOREEQU112,3608
    ABC_OPER_COMP_MORE,    // 65ABC_OPER_COMP_MORE113,3641
    ABC_OPER_COMP_EQU,     // 66ABC_OPER_COMP_EQU114,3674
    ABC_OPER_COMP_NOTEQU,  // 67ABC_OPER_COMP_NOTEQU115,3707
    ABC_OPER_SHIFT_L,      // 68ABC_OPER_SHIFT_L117,3741
    ABC_OPER_SHIFT_R,      // 69ABC_OPER_SHIFT_R118,3774
    ABC_OPER_SHIFT_LA,     // 70ABC_OPER_SHIFT_LA119,3807
    ABC_OPER_SHIFT_RA,     // 71ABC_OPER_SHIFT_RA120,3840
    ABC_OPER_SHIFT_ROTL,   // 72ABC_OPER_SHIFT_ROTL121,3873
    ABC_OPER_SHIFT_ROTR,   // 73ABC_OPER_SHIFT_ROTR122,3906
    ABC_OPER_NODE,         // 74ABC_OPER_NODE124,3940
    ABC_OPER_LUT,          // 75ABC_OPER_LUT125,3973
    ABC_OPER_GATE,         // 76ABC_OPER_GATE126,4006
    ABC_OPER_TABLE,        // 77ABC_OPER_TABLE127,4039
    ABC_OPER_TRI,          // 78ABC_OPER_TRI129,4073
    ABC_OPER_RAM,          // 79ABC_OPER_RAM130,4106
    ABC_OPER_RAMR,         // 80ABC_OPER_RAMR131,4139
    ABC_OPER_RAMW,         // 81ABC_OPER_RAMW132,4172
    ABC_OPER_RAMWC,        // 82ABC_OPER_RAMWC133,4205
    ABC_OPER_RAML,         // 83ABC_OPER_RAML134,4238
    ABC_OPER_RAMS,         // 84ABC_OPER_RAMS135,4271
    ABC_OPER_RAMBOX,       // 85ABC_OPER_RAMBOX136,4304
    ABC_OPER_LATCH,        // 86ABC_OPER_LATCH138,4338
    ABC_OPER_LATCHRS,      // 87ABC_OPER_LATCHRS139,4371
    ABC_OPER_DFF,          // 88ABC_OPER_DFF140,4404
    ABC_OPER_DFFRSE,       // 89ABC_OPER_DFFRSE141,4437
    ABC_OPER_DFFLAST,      // 90ABC_OPER_DFFLAST142,4470
    ABC_OPER_SLICE,        // 91ABC_OPER_SLICE144,4504
    ABC_OPER_CONCAT,       // 92ABC_OPER_CONCAT145,4537
    ABC_OPER_ZEROPAD,      // 93ABC_OPER_ZEROPAD146,4570
    ABC_OPER_SIGNEXT,      // 94ABC_OPER_SIGNEXT147,4603
    ABC_OPER_LOGIC_IMPL,   // 95ABC_OPER_LOGIC_IMPL149,4637
    ABC_OPER_ARI_SQUARE,   // 96ABC_OPER_ARI_SQUARE150,4670
    ABC_OPER_CONST,        // 97ABC_OPER_CONST151,4703
    ABC_OPER_ARI_ADDSUB,   // 98ABC_OPER_ARI_ADDSUB153,4737
    ABC_OPER_LAST          // 99ABC_OPER_LAST155,4771
} Acb_ObjType_t; Acb_ObjType_t156,4804
static inline const char * Abc_OperName( int Type )Abc_OperName160,4851

src/aig/miniaig/miniaig.h,5532
#define MINI_AIG__mini_aig_hMINI_AIG__mini_aig_h22,544
#define MINI_AIG_NULL MINI_AIG_NULL39,1122
#define MINI_AIG_START_SIZE MINI_AIG_START_SIZE40,1163
typedef struct Mini_Aig_t_       Mini_Aig_t;Mini_Aig_t46,1425
struct Mini_Aig_t_ Mini_Aig_t_47,1470
    int           nCap;nCap49,1492
    int           nSize;nSize50,1516
    int           nRegs;nRegs51,1541
    int *         pArray;pArray52,1566
#define MINI_AIG_ALLOC(MINI_AIG_ALLOC60,1837
#define MINI_AIG_CALLOC(MINI_AIG_CALLOC61,1915
#define MINI_AIG_FALLOC(MINI_AIG_FALLOC62,1992
#define MINI_AIG_FREE(MINI_AIG_FREE63,2106
#define MINI_AIG_REALLOC(MINI_AIG_REALLOC64,2192
static void Mini_AigGrow( Mini_Aig_t * p, int nCapMin )Mini_AigGrow69,2386
static void Mini_AigPush( Mini_Aig_t * p, int Lit0, int Lit1 )Mini_AigPush77,2604
static int Mini_AigNodeFanin0( Mini_Aig_t * p, int Id )Mini_AigNodeFanin092,3006
static int Mini_AigNodeFanin1( Mini_Aig_t * p, int Id )Mini_AigNodeFanin198,3207
static int      Mini_AigVar2Lit( int Var, int fCompl )         { return Var + Var + fCompl;   }Mini_AigVar2Lit106,3454
static int      Mini_AigLit2Var( int Lit )                     { return Lit >> 1;             }Mini_AigLit2Var107,3550
static int      Mini_AigLitIsCompl( int Lit )                  { return Lit & 1;              }Mini_AigLitIsCompl108,3646
static int      Mini_AigLitNot( int Lit )                      { return Lit ^ 1;              }Mini_AigLitNot109,3742
static int      Mini_AigLitNotCond( int Lit, int c )           { return Lit ^ (int)(c > 0);   }Mini_AigLitNotCond110,3838
static int      Mini_AigLitRegular( int Lit )                  { return Lit & ~01;            }Mini_AigLitRegular111,3934
static int      Mini_AigLitConst0()                            { return 0;                    }Mini_AigLitConst0113,4031
static int      Mini_AigLitConst1()                            { return 1;                    }Mini_AigLitConst1114,4127
static int      Mini_AigLitIsConst0( int Lit )                 { return Lit == 0;             }Mini_AigLitIsConst0115,4223
static int      Mini_AigLitIsConst1( int Lit )                 { return Lit == 1;             }Mini_AigLitIsConst1116,4319
static int      Mini_AigLitIsConst( int Lit )                  { return Lit == 0 || Lit == 1; }Mini_AigLitIsConst117,4415
static int      Mini_AigNodeNum( Mini_Aig_t * p )              { return p->nSize/2;           }Mini_AigNodeNum119,4512
static int      Mini_AigNodeIsConst( Mini_Aig_t * p, int Id )  { assert( Id >= 0 ); return Id == 0; }Mini_AigNodeIsConst120,4608
static int      Mini_AigNodeIsPi( Mini_Aig_t * p, int Id )     { assert( Id >= 0 ); return Id > 0 && Mini_AigNodeFanin0( p, Id ) == MINI_AIG_NULL; }Mini_AigNodeIsPi121,4710
static int      Mini_AigNodeIsPo( Mini_Aig_t * p, int Id )     { assert( Id >= 0 ); return Id > 0 && Mini_AigNodeFanin0( p, Id ) != MINI_AIG_NULL && Mini_AigNodeFanin1( p, Id ) == MINI_AIG_NULL; }Mini_AigNodeIsPo122,4859
static int      Mini_AigNodeIsAnd( Mini_Aig_t * p, int Id )    { assert( Id >= 0 ); return Id > 0 && Mini_AigNodeFanin0( p, Id ) != MINI_AIG_NULL && Mini_AigNodeFanin1( p, Id ) != MINI_AIG_NULL; }Mini_AigNodeIsAnd123,5056
static int      Mini_AigRegNum( Mini_Aig_t * p )               { return p->nRegs;             }Mini_AigRegNum126,5286
static void     Mini_AigSetRegNum( Mini_Aig_t * p, int n )     { p->nRegs = n;                }Mini_AigSetRegNum127,5382
#define Mini_AigForEachPi(Mini_AigForEachPi130,5508
#define Mini_AigForEachPo(Mini_AigForEachPo131,5624
#define Mini_AigForEachAnd(Mini_AigForEachAnd132,5740
static Mini_Aig_t * Mini_AigStart()Mini_AigStart136,5884
static void Mini_AigStop( Mini_Aig_t * p )Mini_AigStop145,6138
static int Mini_AigPiNum( Mini_Aig_t * p )Mini_AigPiNum150,6241
static int Mini_AigPoNum( Mini_Aig_t * p )Mini_AigPoNum157,6372
static int Mini_AigAndNum( Mini_Aig_t * p )Mini_AigAndNum164,6503
static void Mini_AigPrintStats( Mini_Aig_t * p )Mini_AigPrintStats171,6642
static void Mini_AigDump( Mini_Aig_t * p, char * pFileName )Mini_AigDump177,6816
static Mini_Aig_t * Mini_AigLoad( char * pFileName )Mini_AigLoad192,7299
static int Mini_AigCreatePi( Mini_Aig_t * p )Mini_AigCreatePi216,8015
static int Mini_AigCreatePo( Mini_Aig_t * p, int Lit0 )Mini_AigCreatePo222,8158
static int Mini_AigAnd( Mini_Aig_t * p, int Lit0, int Lit1 )Mini_AigAnd231,8364
static int Mini_AigOr( Mini_Aig_t * p, int Lit0, int Lit1 )Mini_AigOr239,8582
static int Mini_AigMux( Mini_Aig_t * p, int LitC, int Lit1, int Lit0 )Mini_AigMux243,8737
static int Mini_AigXor( Mini_Aig_t * p, int Lit0, int Lit1 )Mini_AigXor249,8958
static unsigned s_MiniTruths5[5] = {s_MiniTruths5254,9087
static inline int Mini_AigTt5HasVar( unsigned t, int iVar )Mini_AigTt5HasVar261,9207
static inline unsigned Mini_AigTt5Cofactor0( unsigned t, int iVar )Mini_AigTt5Cofactor0265,9353
static inline unsigned Mini_AigTt5Cofactor1( unsigned t, int iVar )Mini_AigTt5Cofactor1270,9545
static inline int Mini_AigAndProp( Mini_Aig_t * p, int iLit0, int iLit1 )  Mini_AigAndProp275,9735
static inline int Mini_AigMuxProp( Mini_Aig_t * p, int iCtrl, int iData1, int iData0 )  Mini_AigMuxProp287,10077
static inline int Mini_AigTruth( Mini_Aig_t * p, int * pVarLits, int nVars, unsigned Truth )Mini_AigTruth293,10394
static int Mini_AigCheck( Mini_Aig_t * p )Mini_AigCheck313,11090
static void Mini_AigDumpVerilog( char * pFileName, char * pModuleName, Mini_Aig_t * p )Mini_AigDumpVerilog340,12147

src/aig/miniaig/ndr.h,5776
#define ABC__base__ndr__ndr_hABC__base__ndr__ndr_h22,552
#define inline inline39,949
    NDR_NONE = 0,          // 0:  unusedNDR_NONE97,4310
    NDR_DESIGN,            // 1:  design (or library of modules)NDR_DESIGN98,4351
    NDR_MODULE,            // 2:  one moduleNDR_MODULE99,4416
    NDR_OBJECT,            // 3:  objectNDR_OBJECT100,4461
    NDR_INPUT,             // 4:  inputNDR_INPUT101,4502
    NDR_OUTPUT,            // 5:  outputNDR_OUTPUT102,4542
    NDR_OPERTYPE,          // 6:  operator type (buffer, shifter, adder, etc)NDR_OPERTYPE103,4583
    NDR_NAME,              // 7:  nameNDR_NAME104,4661
    NDR_RANGE,             // 8:  bit rangeNDR_RANGE105,4700
    NDR_FUNCTION,          // 9:  specified for some operators (PLAs, etc)NDR_FUNCTION106,4744
    NDR_TARGET,            // 10: targetNDR_TARGET107,4819
    NDR_UNKNOWN            // 11: unknownNDR_UNKNOWN108,4860
} Ndr_RecordType_t; Ndr_RecordType_t109,4902
typedef struct Ndr_Data_t_  Ndr_Data_t;Ndr_Data_t117,5209
struct Ndr_Data_t_ Ndr_Data_t_118,5249
    int                     nSize;nSize120,5271
    int                     nCap;nCap121,5306
    unsigned char *         pHead;pHead122,5340
    unsigned int *          pBody;pBody123,5375
static inline int           Ndr_DataType( Ndr_Data_t * p, int i )                { assert( p->pHead[i] ); return (int)p->pHead[i];                }Ndr_DataType126,5414
static inline int           Ndr_DataSize( Ndr_Data_t * p, int i )                { return Ndr_DataType(p, i) > NDR_OBJECT ? 1 : p->pBody[i];      }Ndr_DataSize127,5562
static inline int           Ndr_DataEntry( Ndr_Data_t * p, int i )               { return (int)p->pBody[i];                                       }Ndr_DataEntry128,5710
static inline int *         Ndr_DataEntryP( Ndr_Data_t * p, int i )              { return (int *)p->pBody + i;                                    }Ndr_DataEntryP129,5858
static inline int           Ndr_DataEnd( Ndr_Data_t * p, int i )                 { return i + p->pBody[i];                                        }Ndr_DataEnd130,6006
static inline void          Ndr_DataAddTo( Ndr_Data_t * p, int i, int Add )      { assert(Ndr_DataType(p, i) <= NDR_OBJECT); p->pBody[i] += Add;  } Ndr_DataAddTo131,6154
static inline void          Ndr_DataPush( Ndr_Data_t * p, int Type, int Entry )  { p->pHead[p->nSize] = Type; p->pBody[p->nSize++] = Entry;       }Ndr_DataPush132,6303
#define NDR_ALLOC(NDR_ALLOC134,6452
#define Ndr_DesForEachMod(Ndr_DesForEachMod141,6793
#define Ndr_ModForEachObj(Ndr_ModForEachObj145,7027
#define Ndr_ObjForEachEntry(Ndr_ObjForEachEntry149,7268
#define Ndr_ModForEachPi(Ndr_ModForEachPi153,7467
#define Ndr_ModForEachPo(Ndr_ModForEachPo157,7673
#define Ndr_ModForEachNode(Ndr_ModForEachNode161,7878
#define Ndr_ModForEachTarget(Ndr_ModForEachTarget165,8120
static inline void Ndr_DataResize( Ndr_Data_t * p, int Add )Ndr_DataResize173,8544
static inline void Ndr_DataPushRange( Ndr_Data_t * p, int RangeLeft, int RangeRight, int fSignedness )Ndr_DataPushRange181,8864
static inline void Ndr_DataPushArray( Ndr_Data_t * p, int Type, int nArray, int * pArray )Ndr_DataPushArray200,9430
static inline void Ndr_DataPushString( Ndr_Data_t * p, int ObjType, int Type, char * pFunc )Ndr_DataPushString210,9762
static inline int Ndr_ObjReadEntry( Ndr_Data_t * p, int Obj, int Type )Ndr_ObjReadEntry235,10534
static inline int Ndr_ObjReadArray( Ndr_Data_t * p, int Obj, int Type, int ** ppStart )Ndr_ObjReadArray243,10763
static inline int Ndr_ObjIsType( Ndr_Data_t * p, int Obj, int Type )Ndr_ObjIsType257,11188
static inline int Ndr_ObjReadBody( Ndr_Data_t * p, int Obj, int Type )Ndr_ObjReadBody265,11437
static inline int * Ndr_ObjReadBodyP( Ndr_Data_t * p, int Obj, int Type )Ndr_ObjReadBodyP273,11665
static inline void Ndr_ObjWriteRange( Ndr_Data_t * p, int Obj, FILE * pFile, int fSkipBin )Ndr_ObjWriteRange281,11899
static inline char * Ndr_ObjReadOutName( Ndr_Data_t * p, int Obj, char ** pNames )Ndr_ObjReadOutName305,12633
static inline char * Ndr_ObjReadInName( Ndr_Data_t * p, int Obj, char ** pNames )Ndr_ObjReadInName309,12776
static inline int Ndr_DataCiNum( Ndr_Data_t * p, int Mod )Ndr_DataCiNum314,12918
static inline int Ndr_DataCoNum( Ndr_Data_t * p, int Mod )Ndr_DataCoNum321,13077
static inline int Ndr_DataObjNum( Ndr_Data_t * p, int Mod )Ndr_DataObjNum328,13236
static inline void Ndr_WriteVerilogModule( FILE * pFile, void * pDesign, int Mod, char ** pNames )Ndr_WriteVerilogModule337,13501
static inline void Ndr_WriteVerilog( char * pFileName, void * pDesign, char ** pNames )Ndr_WriteVerilog495,20515
static inline void * Ndr_Create( int Name )Ndr_Create514,21270
static inline int Ndr_AddModule( void * pDesign, int Name )Ndr_AddModule531,21810
static inline void Ndr_AddObject( void * pDesign, int ModuleId,Ndr_AddObject547,22470
static inline void Ndr_Delete( void * pDesign )Ndr_Delete573,23622
static inline void * Ndr_Read( char * pFileName )Ndr_Read588,24045
static inline void Ndr_Write( char * pFileName, void * pDesign )Ndr_Write612,24957
static inline void Ndr_ModuleTest()Ndr_ModuleTest636,25909
static inline void Ndr_ModuleTestAdder()Ndr_ModuleTestAdder687,27577
static inline void Ndr_ModuleTestHierarchy()Ndr_ModuleTestHierarchy773,31480
static inline void Ndr_ModuleTestMemory()Ndr_ModuleTestMemory860,35745
static inline void Ndr_ModuleTestFlop()Ndr_ModuleTestFlop934,39521
static inline void Ndr_ModuleTestSelSel()Ndr_ModuleTestSelSel994,42103
static inline void Ndr_ModuleTestDec()Ndr_ModuleTestDec1041,44025
static inline void Ndr_ModuleTestAddSub()Ndr_ModuleTestAddSub1070,45067
static inline void Ndr_ModuleTestLut()Ndr_ModuleTestLut1106,46612

src/aig/ioa/ioaUtil.c,277
int Ioa_FileSize( char * pFileName )Ioa_FileSize46,1359
char * Ioa_FileNameGeneric( char * FileName )Ioa_FileNameGeneric73,1941
char * Ioa_FileNameGenericAppend( char * pBase, char * pSuffix )Ioa_FileNameGenericAppend93,2391
char * Ioa_TimeStamp()Ioa_TimeStamp127,3344

src/aig/ioa/ioaReadAig.c,371
unsigned Ioa_ReadAigerDecode( char ** ppPos )Ioa_ReadAigerDecode47,1521
Vec_Int_t * Ioa_WriteDecodeLiterals( char ** ppPos, int nEntries )Ioa_WriteDecodeLiterals70,2038
Aig_Man_t * Ioa_ReadAigerFromMemory( char * pContents, int nFileSize, int fCheck )Ioa_ReadAigerFromMemory105,3111
Aig_Man_t * Ioa_ReadAiger( char * pFileName, int fCheck )Ioa_ReadAiger431,13932

src/aig/ioa/ioa.h,57
#define ABC__aig__ioa__ioa_hABC__aig__ioa__ioa_h22,518

src/aig/ioa/ioaWriteAig.c,1211
static int      Ioa_ObjMakeLit( int Var, int fCompl )                 { return (Var << 1) | fCompl;  }Ioa_ObjMakeLit131,5339
static int      Ioa_ObjAigerNum( Aig_Obj_t * pObj )                   { return pObj->iData;          }Ioa_ObjAigerNum132,5442
static void     Ioa_ObjSetAigerNum( Aig_Obj_t * pObj, unsigned Num )  { pObj->iData = Num;           }Ioa_ObjSetAigerNum133,5545
int Ioa_WriteAigerEncode( unsigned char * pBuffer, int Pos, unsigned x )Ioa_WriteAigerEncode151,6290
void Ioa_WriteAigerEncodeStr( Vec_Str_t * vStr, unsigned x )Ioa_WriteAigerEncodeStr179,7026
Vec_Int_t * Ioa_WriteAigerLiterals( Aig_Man_t * pMan )Ioa_WriteAigerLiterals207,7643
Vec_Str_t * Ioa_WriteEncodeLiterals( Vec_Int_t * vLits )Ioa_WriteEncodeLiterals237,8546
Vec_Str_t * Ioa_WriteAigerIntoMemoryStr( Aig_Man_t * pMan )Ioa_WriteAigerIntoMemoryStr286,10223
char * Ioa_WriteAigerIntoMemory( Aig_Man_t * pMan, int * pnSize )Ioa_WriteAigerIntoMemory376,13637
void Ioa_WriteAigerBufferTest( Aig_Man_t * pMan, char * pFileName, int fWriteSymbols, int fCompact )Ioa_WriteAigerBufferTest405,14401
void Ioa_WriteAiger( Aig_Man_t * pMan, char * pFileName, int fWriteSymbols, int fCompact )Ioa_WriteAiger446,15677

src/sat/bsat/satSolver.h,9463
#define ABC__sat__bsat__satSolver_hABC__sat__bsat__satSolver_h23,1438
typedef struct sat_solver_t sat_solver;sat_solver41,1805
typedef struct varinfo_t varinfo;varinfo98,5019
struct sat_solver_tsat_solver_t100,5054
    int         size;          // nof variablessize102,5076
    int         cap;           // size of varmapscap103,5124
    int         qhead;         // Head index of queue.qhead104,5174
    int         qtail;         // Tail index of queue.qtail105,5229
    Sat_Mem_t   Mem;Mem108,5300
    int         hLearnts;      // the first learnt clausehLearnts109,5321
    int         hBinary;       // the special binary clausehBinary110,5379
    clause *    binary;binary111,5439
    veci*       wlists;        // watcher listswlists112,5463
    int         iVarPivot;     // the pivot for variablesiVarPivot115,5528
    int         iTrailPivot;   // the pivot for trailiTrailPivot116,5586
    int         hProofPivot;   // the pivot for proof recordshProofPivot117,5640
    int         VarActType;VarActType120,5721
    int         ClaActType;ClaActType121,5749
    word        var_inc;       // Amount to bump next variable with.var_inc122,5777
    word        var_inc2;      // Amount to bump next variable with.var_inc2123,5846
    word        var_decay;     // INVERSE decay factor for variable activity: stores 1/decay. var_decay124,5915
    word*       activity;      // A heuristic measurement of the activity of a variable.activity125,6010
    word*       activity2;     // backup variable activityactivity2126,6099
    unsigned    cla_inc;       // Amount to bump next clause with.cla_inc127,6158
    unsigned    cla_decay;     // INVERSE decay factor for clause activity: stores 1/decay.cla_decay128,6225
    veci        act_clas;      // contain clause activitiesact_clas129,6317
    char *      pFreqs;        // how many times this variable was assigned a valuepFreqs131,6378
    int         nVarUsed;nVarUsed132,6462
    int*        levels;        //levels135,6546
    char*       assigns;       // Current values of variables.assigns136,6580
    char*       polarity;      //polarity137,6643
    char*       tags;          //tags138,6677
    char*       loads;         //loads139,6711
    int*        orderpos;      // Index in variable order.orderpos141,6746
    int*        reasons;       //reasons142,6805
    lit*        trail;trail143,6839
    veci        tagged;        // (contains: var)tagged144,6862
    veci        stack;         // (contains: var)stack145,6912
    veci        order;         // Variable order. (heap) (contains: var)order147,6963
    veci        trail_lim;     // Separator indices for different decision levels in 'trail'. (contains: int)trail_lim148,7036
    int *       model;         // If problem is solved, this vector contains the model (contains: lbool).model150,7254
    veci        conf_final;    // If problem is unsatisfiable (possibly under assumptions),conf_final151,7360
    int         root_level;    // Level of first proper decision.root_level154,7565
    int         simpdb_assigns;// Number of top-level assignments at last 'simplifyDB()'.simpdb_assigns155,7631
    int         simpdb_props;  // Number of propagations before next 'simplifyDB()'.simpdb_props156,7721
    double      random_seed;random_seed157,7806
    double      progress_estimate;progress_estimate158,7835
    int         verbosity;     // Verbosity level. 0=silent, 1=some progress report, 2=everythingverbosity159,7870
    int         fVerbose;fVerbose160,7968
    int         fPrintClause;fPrintClause161,7994
    stats_t     stats;stats163,8025
    int         nLearntMax;    // max number of learned clausesnLearntMax164,8048
    int         nLearntStart;  // starting learned clause limitnLearntStart165,8112
    int         nLearntDelta;  // delta of learned clause limitnLearntDelta166,8176
    int         nLearntRatio;  // ratio percentage of learned clausesnLearntRatio167,8240
    int         nDBreduces;    // number of DB reductionsnDBreduces168,8310
    ABC_INT64_T nConfLimit;    // external limit on the number of conflictsnConfLimit170,8369
    ABC_INT64_T nInsLimit;     // external limit on the number of implicationsnInsLimit171,8445
    abctime     nRuntimeLimit; // external limit on runtimenRuntimeLimit172,8524
    veci        act_vars;      // variables whose activity has changedact_vars174,8585
    double*     factors;       // the activity factorsfactors175,8656
    int         nRestarts;     // the number of local restartsnRestarts176,8711
    int         nCalls;        // the number of local restartsnCalls177,8774
    int         nCalls2;       // the number of local restartsnCalls2178,8837
    veci        unit_lits;     // variables whose activity has changedunit_lits179,8900
    veci        pivot_vars;    // pivot variablespivot_vars180,8971
    int         fSkipSimplify; // set to one to skip simplification of the clause databasefSkipSimplify182,9022
    int         fNotUseRandom; // do not allow random decisions with a fixed probabilityfNotUseRandom183,9113
    int         fNoRestarts;   // disables periodic restartsfNoRestarts184,9202
    int *       pGlobalVars;   // for experiments with global vars during interpolationpGlobalVars186,9264
    void *      pStore;pStore188,9372
    int         fSolved;fSolved189,9396
    FILE *      pFile;pFile192,9445
    int         nClauses;nClauses193,9468
    int         nRoots;nRoots194,9494
    veci        temp_clause;    // temporary storage for a CNF clausetemp_clause196,9519
    veci        user_vars;      // variable IDsuser_vars199,9616
    veci        user_values;    // values of these variablesuser_values200,9664
    void *      pCnfMan;           // external CNF managerpCnfMan203,9745
    int(*pCnfFunc)(void * p, int); // external callbackpCnfFunc204,9804
    int         RunId;          // SAT id in this runRunId207,9889
    int(*pFuncStop)(int);       // callback to terminatepFuncStop208,9943
static inline clause * clause_read( sat_solver * s, cla h )          clause_read211,10004
static inline int sat_solver_var_value( sat_solver* s, int v )sat_solver_var_value216,10130
static inline int sat_solver_var_literal( sat_solver* s, int v )sat_solver_var_literal221,10275
static inline void sat_solver_flip_print_clause( sat_solver* s )sat_solver_flip_print_clause226,10431
static inline void sat_solver_act_var_clear(sat_solver* s) sat_solver_act_var_clear230,10526
static inline void sat_solver_compress(sat_solver* s) sat_solver_compress253,11078
static inline void sat_solver_delete_p( sat_solver ** ps )sat_solver_delete_p262,11286
static inline void sat_solver_clean_polarity(sat_solver* s, int * pVars, int nVars )sat_solver_clean_polarity268,11414
static inline void sat_solver_set_polarity(sat_solver* s, int * pVars, int nVars )sat_solver_set_polarity274,11583
static inline void sat_solver_set_literal_polarity(sat_solver* s, int * pLits, int nLits )sat_solver_set_literal_polarity282,11814
static inline int sat_solver_final(sat_solver* s, int ** ppArray)sat_solver_final289,12027
static inline abctime sat_solver_set_runtime_limit(sat_solver* s, abctime Limit)sat_solver_set_runtime_limit295,12163
static inline int sat_solver_set_random(sat_solver* s, int fNotUseRandom)sat_solver_set_random302,12351
static inline void sat_solver_bookmark(sat_solver* s)sat_solver_bookmark309,12542
static inline void sat_solver_set_pivot_variables( sat_solver* s, int * pPivots, int nPivots )sat_solver_set_pivot_variables321,12875
static inline int sat_solver_count_usedvars(sat_solver* s)sat_solver_count_usedvars327,13074
static inline void sat_solver_set_runid( sat_solver *s, int id )               sat_solver_set_runid338,13312
static inline void sat_solver_set_stop_func( sat_solver *s, int (*fnct)(int) ) sat_solver_set_stop_func342,13423
static inline int sat_solver_add_const( sat_solver * pSat, int iVar, int fCompl )sat_solver_add_const347,13535
static inline int sat_solver_add_buffer( sat_solver * pSat, int iVarA, int iVarB, int fCompl )sat_solver_add_buffer358,13807
static inline int sat_solver_add_buffer_enable( sat_solver * pSat, int iVarA, int iVarB, int iVarEn, int fCompl )sat_solver_add_buffer_enable379,14377
static inline int sat_solver_add_and( sat_solver * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1, int fCompl )sat_solver_add_and398,14981
static inline int sat_solver_add_xor( sat_solver * pSat, int iVarA, int iVarB, int iVarC, int fCompl )sat_solver_add_xor420,15684
static inline int sat_solver_add_mux( sat_solver * pSat, int iVarZ, int iVarC, int iVarT, int iVarE, int iComplC, int iComplT, int iComplE, int iComplZ )sat_solver_add_mux451,16659
static inline int sat_solver_add_mux41( sat_solver * pSat, int iVarZ, int iVarC0, int iVarC1, int iVarD0, int iVarD1, int iVarD2, int iVarD3 )sat_solver_add_mux41497,18266
static inline int sat_solver_add_xor_and( sat_solver * pSat, int iVarF, int iVarA, int iVarB, int iVarC )sat_solver_add_xor_and561,20398
static inline int sat_solver_add_constraint( sat_solver * pSat, int iVar, int iVar2, int fCompl )sat_solver_add_constraint600,21617
static inline int sat_solver_add_half_sorter( sat_solver * pSat, int iVarA, int iVarB, int iVar0, int iVar1 )sat_solver_add_half_sorter618,22097

src/sat/bsat/satMem.c,3754
struct Sat_MmFixed_t_Sat_MmFixed_t_35,864
    int           nEntrySize;    // the size of one entrynEntrySize38,932
    int           nEntriesAlloc; // the total number of entries allocatednEntriesAlloc39,990
    int           nEntriesUsed;  // the number of entries in usenEntriesUsed40,1064
    int           nEntriesMax;   // the max number of entries in usenEntriesMax41,1129
    char *        pEntriesFree;  // the linked list of free entriespEntriesFree42,1198
    int           nChunkSize;    // the size of one chunknChunkSize45,1309
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc46,1367
    int           nChunks;       // the current number of memory chunks nChunks47,1440
    char **       pChunks;       // the allocated memorypChunks48,1513
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed51,1589
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc52,1662
struct Sat_MmFlex_t_Sat_MmFlex_t_55,1719
    int           nEntriesUsed;  // the number of entries allocatednEntriesUsed58,1786
    char *        pCurrent;      // the current pointer to free memorypCurrent59,1854
    char *        pEnd;          // the first entry outside the free memorypEnd60,1925
    int           nChunkSize;    // the size of one chunknChunkSize63,2044
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc64,2102
    int           nChunks;       // the current number of memory chunks nChunks65,2175
    char **       pChunks;       // the allocated memorypChunks66,2248
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed69,2324
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc70,2397
struct Sat_MmStep_t_Sat_MmStep_t_73,2454
    int               nMems;     // the number of fixed memory managers employednMems75,2477
    Sat_MmFixed_t **  pMems;     // memory managers: 2^1 words, 2^2 words, etcpMems76,2558
    int               nMapSize;  // the size of the memory arraynMapSize77,2637
    Sat_MmFixed_t **  pMap;      // maps the number of bytes into its memory managerpMap78,2702
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc80,2819
    int           nChunks;       // the current number of memory chunks nChunks81,2892
    char **       pChunks;       // the allocated memorypChunks82,2965
Sat_MmFixed_t * Sat_MmFixedStart( int nEntrySize )Sat_MmFixedStart101,3645
void Sat_MmFixedStop( Sat_MmFixed_t * p, int fVerbose )Sat_MmFixedStop140,4531
char * Sat_MmFixedEntryFetch( Sat_MmFixed_t * p )Sat_MmFixedEntryFetch169,5371
void Sat_MmFixedEntryRecycle( Sat_MmFixed_t * p, char * pEntry )Sat_MmFixedEntryRecycle220,6976
void Sat_MmFixedRestart( Sat_MmFixed_t * p )Sat_MmFixedRestart240,7524
int Sat_MmFixedReadMemUsage( Sat_MmFixed_t * p )Sat_MmFixedReadMemUsage281,8571
Sat_MmFlex_t * Sat_MmFlexStart()Sat_MmFlexStart299,8975
void Sat_MmFlexStop( Sat_MmFlex_t * p, int fVerbose )Sat_MmFlexStop331,9651
char * Sat_MmFlexEntryFetch( Sat_MmFlex_t * p, int nBytes )Sat_MmFlexEntryFetch360,10411
int Sat_MmFlexReadMemUsage( Sat_MmFlex_t * p )Sat_MmFlexReadMemUsage405,11817
Sat_MmStep_t * Sat_MmStepStart( int nSteps )Sat_MmStepStart434,12834
void Sat_MmStepStop( Sat_MmStep_t * p, int fVerbose )Sat_MmStepStop472,14029
void Sat_MmStepRestart( Sat_MmStep_t * p )Sat_MmStepRestart499,14668
char * Sat_MmStepEntryFetch( Sat_MmStep_t * p, int nBytes )Sat_MmStepEntryFetch523,15204
void Sat_MmStepEntryRecycle( Sat_MmStep_t * p, char * pEntry, int nBytes )Sat_MmStepEntryRecycle552,15946
int Sat_MmStepReadMemUsage( Sat_MmStep_t * p )Sat_MmStepReadMemUsage575,16445

src/sat/bsat/satUtil.c,1093
void Sat_SolverClauseWriteDimacs( FILE * pFile, clause * pC, int fIncrement )Sat_SolverClauseWriteDimacs50,1445
void Sat_SolverWriteDimacs( sat_solver * p, char * pFileName, lit* assumpBegin, lit* assumpEnd, int incrementVars )Sat_SolverWriteDimacs74,2321
void Sat_Solver2WriteDimacs( sat_solver2 * p, char * pFileName, lit* assumpBegin, lit* assumpEnd, int incrementVars )Sat_Solver2WriteDimacs126,4158
static inline double Sat_Wrd2Dbl( word w )  { return (double)(unsigned)(w&0x3FFFFFFF) + (double)(1<<30)*(unsigned)(w>>30); }Sat_Wrd2Dbl191,6251
void Sat_SolverPrintStats( FILE * pFile, sat_solver * p )Sat_SolverPrintStats193,6377
void Sat_Solver2PrintStats( FILE * pFile, sat_solver2 * s )Sat_Solver2PrintStats214,7158
int Sat_Solver2GetVarMem( sat_solver2 * s )Sat_Solver2GetVarMem244,8329
int * Sat_SolverGetModel( sat_solver * p, int * pVars, int nVars )Sat_SolverGetModel270,9085
int * Sat_Solver2GetModel( sat_solver2 * p, int * pVars, int nVars )Sat_Solver2GetModel291,9599
void Sat_SolverDoubleClauses( sat_solver * p, int iVar )Sat_SolverDoubleClauses312,10155

src/sat/bsat/satSolver3.h,8786
#define ABC__sat__bsat__satSolver3_hABC__sat__bsat__satSolver3_h23,1439
typedef struct sat_solver3_t sat_solver3;sat_solver341,1808
typedef struct varinfo_t varinfo;varinfo97,5047
struct sat_solver3_tsat_solver3_t99,5082
    int         size;          // nof variablessize101,5105
    int         cap;           // size of varmapscap102,5153
    int         qhead;         // Head index of queue.qhead103,5203
    int         qtail;         // Tail index of queue.qtail104,5258
    Sat_Mem_t   Mem;Mem107,5329
    int         hLearnts;      // the first learnt clausehLearnts108,5350
    int         hBinary;       // the special binary clausehBinary109,5408
    clause *    binary;binary110,5468
    veci*       wlists;        // watcher listswlists111,5492
    int         iVarPivot;     // the pivot for variablesiVarPivot114,5557
    int         iTrailPivot;   // the pivot for trailiTrailPivot115,5615
    int         hProofPivot;   // the pivot for proof recordshProofPivot116,5669
    int         VarActType;VarActType119,5750
    int         ClaActType;ClaActType120,5778
    word        var_inc;       // Amount to bump next variable with.var_inc121,5806
    word        var_inc2;      // Amount to bump next variable with.var_inc2122,5875
    word        var_decay;     // INVERSE decay factor for variable activity: stores 1/decay. var_decay123,5944
    word*       activity;      // A heuristic measurement of the activity of a variable.activity124,6039
    word*       activity2;     // backup variable activityactivity2125,6128
    unsigned    cla_inc;       // Amount to bump next clause with.cla_inc126,6187
    unsigned    cla_decay;     // INVERSE decay factor for clause activity: stores 1/decay.cla_decay127,6254
    veci        act_clas;      // contain clause activitiesact_clas128,6346
    char *      pFreqs;        // how many times this variable was assigned a valuepFreqs130,6407
    int         nVarUsed;nVarUsed131,6491
    int*        levels;        //levels134,6575
    char*       assigns;       // Current values of variables.assigns135,6609
    char*       polarity;      //polarity136,6672
    char*       tags;          //tags137,6706
    char*       loads;         //loads138,6740
    int*        orderpos;      // Index in variable order.orderpos140,6775
    int*        reasons;       //reasons141,6834
    lit*        trail;trail142,6868
    veci        tagged;        // (contains: var)tagged143,6891
    veci        stack;         // (contains: var)stack144,6941
    veci        order;         // Variable order. (heap) (contains: var)order146,6992
    veci        trail_lim;     // Separator indices for different decision levels in 'trail'. (contains: int)trail_lim147,7065
    int *       model;         // If problem is solved, this vector contains the model (contains: lbool).model149,7283
    veci        conf_final;    // If problem is unsatisfiable (possibly under assumptions),conf_final150,7389
    int         root_level;    // Level of first proper decision.root_level153,7594
    int         simpdb_assigns;// Number of top-level assignments at last 'simplifyDB()'.simpdb_assigns154,7660
    int         simpdb_props;  // Number of propagations before next 'simplifyDB()'.simpdb_props155,7750
    double      random_seed;random_seed156,7835
    double      progress_estimate;progress_estimate157,7864
    int         verbosity;     // Verbosity level. 0=silent, 1=some progress report, 2=everythingverbosity158,7899
    int         fVerbose;fVerbose159,7997
    stats_t     stats;stats161,8024
    int         nLearntMax;    // max number of learned clausesnLearntMax162,8047
    int         nLearntStart;  // starting learned clause limitnLearntStart163,8111
    int         nLearntDelta;  // delta of learned clause limitnLearntDelta164,8175
    int         nLearntRatio;  // ratio percentage of learned clausesnLearntRatio165,8239
    int         nDBreduces;    // number of DB reductionsnDBreduces166,8309
    ABC_INT64_T nConfLimit;    // external limit on the number of conflictsnConfLimit168,8368
    ABC_INT64_T nInsLimit;     // external limit on the number of implicationsnInsLimit169,8444
    abctime     nRuntimeLimit; // external limit on runtimenRuntimeLimit170,8523
    veci        act_vars;      // variables whose activity has changedact_vars172,8584
    double*     factors;       // the activity factorsfactors173,8655
    int         nRestarts;     // the number of local restartsnRestarts174,8710
    int         nCalls;        // the number of local restartsnCalls175,8773
    int         nCalls2;       // the number of local restartsnCalls2176,8836
    veci        unit_lits;     // variables whose activity has changedunit_lits177,8899
    veci        pivot_vars;    // pivot variablespivot_vars178,8970
    int         fSkipSimplify; // set to one to skip simplification of the clause databasefSkipSimplify180,9021
    int         fNotUseRandom; // do not allow random decisions with a fixed probabilityfNotUseRandom181,9112
    int         fNoRestarts;   // disables periodic restartsfNoRestarts182,9201
    int *       pGlobalVars;   // for experiments with global vars during interpolationpGlobalVars184,9263
    void *      pStore;pStore186,9371
    int         fSolved;fSolved187,9395
    FILE *      pFile;pFile190,9444
    int         nClauses;nClauses191,9467
    int         nRoots;nRoots192,9493
    veci        temp_clause;    // temporary storage for a CNF clausetemp_clause194,9518
    void *      pCnfMan;           // external CNF managerpCnfMan197,9608
    int(*pCnfFunc)(void * p, int); // external callbackpCnfFunc198,9667
static inline clause * clause_read( sat_solver3 * s, cla h )          clause_read201,9727
static int sat_solver3_var_value( sat_solver3* s, int v )sat_solver3_var_value206,9854
static int sat_solver3_var_literal( sat_solver3* s, int v )sat_solver3_var_literal211,9994
static void sat_solver3_act_var_clear(sat_solver3* s) sat_solver3_act_var_clear216,10145
static void sat_solver3_compress(sat_solver3* s) sat_solver3_compress239,10692
static void sat_solver3_delete_p( sat_solver3 ** ps )sat_solver3_delete_p248,10896
static void sat_solver3_clean_polarity(sat_solver3* s, int * pVars, int nVars )sat_solver3_clean_polarity254,11020
static void sat_solver3_set_polarity(sat_solver3* s, int * pVars, int nVars )sat_solver3_set_polarity260,11184
static void sat_solver3_set_literal_polarity(sat_solver3* s, int * pLits, int nLits )sat_solver3_set_literal_polarity268,11410
static int sat_solver3_final(sat_solver3* s, int ** ppArray)sat_solver3_final275,11618
static abctime sat_solver3_set_runtime_limit(sat_solver3* s, abctime Limit)sat_solver3_set_runtime_limit281,11749
static int sat_solver3_set_random(sat_solver3* s, int fNotUseRandom)sat_solver3_set_random288,11932
static inline void sat_solver3_bookmark(sat_solver3* s)sat_solver3_bookmark295,12118
static inline void sat_solver3_set_pivot_variables( sat_solver3* s, int * pPivots, int nPivots )sat_solver3_set_pivot_variables307,12453
static inline int sat_solver3_count_usedvars(sat_solver3* s)sat_solver3_count_usedvars313,12654
static inline int sat_solver3_add_const( sat_solver3 * pSat, int iVar, int fCompl )sat_solver3_add_const325,12895
static inline int sat_solver3_add_buffer( sat_solver3 * pSat, int iVarA, int iVarB, int fCompl )sat_solver3_add_buffer336,13170
static inline int sat_solver3_add_buffer_enable( sat_solver3 * pSat, int iVarA, int iVarB, int iVarEn, int fCompl )sat_solver3_add_buffer_enable357,13744
static inline int sat_solver3_add_and( sat_solver3 * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1, int fCompl )sat_solver3_add_and376,14352
static inline int sat_solver3_add_xor( sat_solver3 * pSat, int iVarA, int iVarB, int iVarC, int fCompl )sat_solver3_add_xor398,15060
static inline int sat_solver3_add_mux( sat_solver3 * pSat, int iVarZ, int iVarC, int iVarT, int iVarE, int iComplC, int iComplT, int iComplE, int iComplZ )sat_solver3_add_mux429,16041
static inline int sat_solver3_add_mux41( sat_solver3 * pSat, int iVarZ, int iVarC0, int iVarC1, int iVarD0, int iVarD1, int iVarD2, int iVarD3 )sat_solver3_add_mux41475,17656
static inline int sat_solver3_add_xor_and( sat_solver3 * pSat, int iVarF, int iVarA, int iVarB, int iVarC )sat_solver3_add_xor_and539,19798
static inline int sat_solver3_add_constraint( sat_solver3 * pSat, int iVar, int iVar2, int fCompl )sat_solver3_add_constraint578,21024
static inline int sat_solver3_add_half_sorter( sat_solver3 * pSat, int iVarA, int iVarB, int iVar0, int iVar1 )sat_solver3_add_half_sorter596,21508

src/sat/bsat/satTrace.c,275
void Sat_SolverTraceStart( sat_solver * pSat, char * pName )Sat_SolverTraceStart53,1549
void Sat_SolverTraceStop( sat_solver * pSat )Sat_SolverTraceStop73,2072
void Sat_SolverTraceWrite( sat_solver * pSat, int * pBeg, int * pEnd, int fRoot )Sat_SolverTraceWrite95,2617

src/sat/bsat/satProof2.h,2479
#define ABC__sat__bsat__satProof2_hABC__sat__bsat__satProof2_h22,555
typedef struct Prf_Man_t_ Prf_Man_t;Prf_Man_t40,1307
struct Prf_Man_t_ Prf_Man_t_41,1344
    int             iFirst;    // first learned clause with proofiFirst43,1365
    int             iFirst2;   // first learned clause with proofiFirst244,1431
    int             nWords;    // the number of proof wordsnWords45,1497
    word *          pInfo;     // pointer to the current proofpInfo46,1557
    Vec_Wrd_t *     vInfo;     // proof informationvInfo47,1620
    Vec_Int_t *     vSaved;    // IDs of saved clausesvSaved48,1672
    Vec_Int_t *     vId2Pr;    // mapping proof IDs of problem clauses into bitshifts (user's array)vId2Pr49,1727
static inline int    Prf_BitWordNum( int nWidth )                { return (nWidth >> 6) + ((nWidth & 63) > 0);                           }Prf_BitWordNum60,2272
static inline int    Prf_ManSize( Prf_Man_t * p )                { return Vec_WrdSize( p->vInfo ) / p->nWords;                           }Prf_ManSize61,2411
static inline void   Prf_ManClearNewInfo( Prf_Man_t * p )        { int w; for ( w = 0; w < p->nWords; w++ ) Vec_WrdPush( p->vInfo, 0 );  }Prf_ManClearNewInfo62,2550
static inline word * Prf_ManClauseInfo( Prf_Man_t * p, int Id )  { return Vec_WrdEntryP( p->vInfo, Id * p->nWords );                     }Prf_ManClauseInfo63,2689
static inline Prf_Man_t * Prf_ManAlloc()Prf_ManAlloc81,3284
static inline void Prf_ManStop( Prf_Man_t * p )Prf_ManStop91,3518
static inline void Prf_ManStopP( Prf_Man_t ** p )Prf_ManStopP99,3685
static inline double Prf_ManMemory( Prf_Man_t * p )Prf_ManMemory104,3777
static inline void Prf_ManRestart( Prf_Man_t * p, Vec_Int_t * vId2Pr, int iFirst, int nWidth )Prf_ManRestart120,4151
static inline void Prf_ManGrow( Prf_Man_t * p, int nWidth )Prf_ManGrow129,4423
static inline void Prf_ManShrink( Prf_Man_t * p, int iClause )Prf_ManShrink156,5242
static inline void Prf_ManAddSaved( Prf_Man_t * p, int i, int iNew )Prf_ManAddSaved175,5733
static inline void Prf_ManCompact( Prf_Man_t * p, int iNew )Prf_ManCompact187,6024
static inline void Prf_ManChainResolve( Prf_Man_t * p, clause * c )Prf_ManChainResolve222,6968
static inline void Prf_ManChainStart( Prf_Man_t * p, clause * c )Prf_ManChainStart257,8036
static inline int Prf_ManChainStop( Prf_Man_t * p )Prf_ManChainStop268,8380
static inline Vec_Int_t * Prf_ManUnsatCore( Prf_Man_t * p )Prf_ManUnsatCore287,8739

src/sat/bsat/satChecker.c,257
void Sat_PrintClause( Vec_Vec_t * vClauses, int Clause )Sat_PrintClause51,1315
int Sat_ProofResolve( Vec_Vec_t * vClauses, int Result, int Clause1, int Clause2 )Sat_ProofResolve73,1840
void Sat_ProofChecker( char * pFileName )Sat_ProofChecker119,3316

src/sat/bsat/satSolver3.c,7339
#define SAT_USE_ANALYZE_FINALSAT_USE_ANALYZE_FINAL31,1531
#define L_IND L_IND39,1742
#define L_ind L_ind40,1766
#define L_LIT L_LIT41,1823
#define L_lit(L_lit42,1848
static inline void check(int expr) { assert(expr); }check45,1988
static void printlits(lit* begin, lit* end)printlits47,2042
static inline double drand(double* seed) {drand59,2363
static inline int irand(double* seed, int size) {irand68,2611
static const int var0  = 1;var075,2844
static const int var1  = 0;var176,2872
static const int varX  = 3;varX77,2900
struct varinfo_tvarinfo_t79,2929
    unsigned val    :  2;  // variable value val81,2948
    unsigned pol    :  1;  // last polaritypol82,2994
    unsigned tag    :  1;  // conflict analysis tagtag83,3038
    unsigned lev    : 28;  // variable levellev84,3090
static inline int     var_level     (sat_solver3* s, int v)            { return s->levels[v];   }var_level87,3139
static inline int     var_value     (sat_solver3* s, int v)            { return s->assigns[v];  }var_value88,3237
static inline int     var_polar     (sat_solver3* s, int v)            { return s->polarity[v]; }var_polar89,3335
static inline void    var_set_level (sat_solver3* s, int v, int lev)   { s->levels[v] = lev;    }var_set_level91,3434
static inline void    var_set_value (sat_solver3* s, int v, int val)   { s->assigns[v] = val;   }var_set_value92,3532
static inline void    var_set_polar (sat_solver3* s, int v, int pol)   { s->polarity[v] = pol;  }var_set_polar93,3630
static inline int     var_tag       (sat_solver3* s, int v)            { return s->tags[v]; }var_tag96,3746
static inline void    var_set_tag   (sat_solver3* s, int v, int tag)   { var_set_tag97,3840
static inline void    var_add_tag   (sat_solver3* s, int v, int tag)   { var_add_tag103,4063
static inline void    solver2_clear_tags(sat_solver3* s, int start)    { solver2_clear_tags109,4287
int sat_solver3_get_var_value(sat_solver3* s, int v)sat_solver3_get_var_value116,4529
static inline int      sat_solver3_dl(sat_solver3* s)                { return veci_size(&s->trail_lim); }sat_solver3_dl131,4914
static inline veci*    sat_solver3_read_wlist(sat_solver3* s, lit l) { return &s->wlists[l];            }sat_solver3_read_wlist132,5020
static inline void order_update(sat_solver3* s, int v) // updateorderorder_update137,5257
static inline void order_assigned(sat_solver3* s, int v) order_assigned158,5819
static inline void order_unassigned(sat_solver3* s, int v) // undoorderorder_unassigned162,5882
static inline int  order_select(sat_solver3* s, float random_var_freq) // selectvarorder_select173,6152
void sat_solver3_set_var_activity(sat_solver3* s, int * pVars, int nVars) sat_solver3_set_var_activity216,7558
static inline void solver_init_activities(sat_solver3* s)  solver_init_activities234,8074
static inline void act_var_rescale(sat_solver3* s)  act_var_rescale269,8951
static inline void act_var_bump(sat_solver3* s, int v) act_var_bump299,9862
static inline void act_var_bump_global(sat_solver3* s, int v) act_var_bump_global328,10730
static inline void act_var_bump_factor(sat_solver3* s, int v) act_var_bump_factor359,11722
static inline void act_var_decay(sat_solver3* s)    act_var_decay391,12728
static inline void act_clause_rescale(sat_solver3* s) act_clause_rescale403,13121
static inline void act_clause_bump(sat_solver3* s, clause *c) act_clause_bump423,13701
static inline void act_clause_decay(sat_solver3* s)    act_clause_decay440,14172
static inline void selectionsort(void** array, int size, int(*comp)(const void *, const void *))selectionsort452,14482
static void sortrnd(void** array, int size, int(*comp)(const void *, const void *), double* seed)sortrnd467,14886
static inline int sat_clause_compute_lbd( sat_solver3* s, clause* c )sat_clause_compute_lbd495,15654
int sat_solver3_clause_new(sat_solver3* s, lit* begin, lit* end, int learnt)sat_solver3_clause_new514,16117
static inline int sat_solver3_enqueue(sat_solver3* s, lit l, int from)sat_solver3_enqueue581,18269
static inline int sat_solver3_decision(sat_solver3* s, lit l){sat_solver3_decision631,19466
static void sat_solver3_canceluntil(sat_solver3* s, int level) {sat_solver3_canceluntil643,19829
static void sat_solver3_canceluntil_rollback(sat_solver3* s, int NewBound) {sat_solver3_canceluntil_rollback677,20783
static void sat_solver3_record(sat_solver3* s, veci* cls)sat_solver3_record697,21284
int sat_solver3_count_assigned(sat_solver3* s)sat_solver3_count_assigned716,21803
static double sat_solver3_progress(sat_solver3* s)sat_solver3_progress727,22060
static int sat_solver3_lit_removable(sat_solver3* s, int x, int minl)sat_solver3_lit_removable741,22465
static void sat_solver3_analyze_final(sat_solver3* s, int hConf, int skip_first)sat_solver3_analyze_final836,25633
static void sat_solver3_analyze(sat_solver3* s, int h, veci* learnt)sat_solver3_analyze882,27297
int sat_solver3_propagate(sat_solver3* s)sat_solver3_propagate991,30491
sat_solver3* sat_solver3_new(void)sat_solver3_new1109,34175
sat_solver3* zsat_solver3_new_seed(double seed)zsat_solver3_new_seed1174,36165
void sat_solver3_setnvars(sat_solver3* s,int n)sat_solver3_setnvars1239,38164
void sat_solver3_delete(sat_solver3* s)sat_solver3_delete1308,40713
void sat_solver3_restart( sat_solver3* s )sat_solver3_restart1352,41862
void zsat_solver3_restart_seed( sat_solver3* s, double seed )zsat_solver3_restart_seed1398,43078
double sat_solver3_memory( sat_solver3* s )sat_solver3_memory1442,44330
int sat_solver3_simplify(sat_solver3* s)sat_solver3_simplify1478,45878
void sat_solver3_reducedb(sat_solver3* s)sat_solver3_reducedb1486,46038
void sat_solver3_rollback( sat_solver3* s )sat_solver3_rollback1606,50112
int sat_solver3_addclause(sat_solver3* s, lit* begin, lit* end)sat_solver3_addclause1698,52949
static double luby(double y, int x)luby1751,54471
static void luby_test()luby_test1763,54729
static lbool sat_solver3_search(sat_solver3* s, ABC_INT64_T nof_conflicts)sat_solver3_search1771,54861
int sat_solver3_solve_internal(sat_solver3* s)sat_solver3_solve_internal1896,59753
int sat_solver3_push(sat_solver3* s, int p)sat_solver3_push1947,61802
void sat_solver3_pop(sat_solver3* s)sat_solver3_pop1990,63074
void sat_solver3_set_resource_limits(sat_solver3* s, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, ABC_INT64_T nConfLimitGlobal, ABC_INT64_T nInsLimitGlobal)sat_solver3_set_resource_limits1996,63202
int sat_solver3_solve(sat_solver3* s, lit* begin, lit* end, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, ABC_INT64_T nConfLimitGlobal, ABC_INT64_T nInsLimitGlobal)sat_solver3_solve2013,63934
int sat_solver3_solve_lexsat( sat_solver3* s, int * pLits, int nLits )sat_solver3_solve_lexsat2069,65972
int sat_solver3_minimize_assumptions( sat_solver3* s, int * pLits, int nLits, int nConfLimit )sat_solver3_minimize_assumptions2135,69131
int sat_solver3_minimize_assumptions2( sat_solver3* s, int * pLits, int nLits, int nConfLimit )sat_solver3_minimize_assumptions22194,71506
int sat_solver3_nvars(sat_solver3* s)sat_solver3_nvars2279,74452
int sat_solver3_nclauses(sat_solver3* s)sat_solver3_nclauses2285,74516
int sat_solver3_nconflicts(sat_solver3* s)sat_solver3_nconflicts2291,74592

src/sat/bsat/satSolver.c,7873
#define SAT_USE_ANALYZE_FINALSAT_USE_ANALYZE_FINAL32,1552
#define L_IND L_IND40,1763
#define L_ind L_ind41,1787
#define L_LIT L_LIT42,1842
#define L_lit(L_lit43,1867
static inline void check(int expr) { assert(expr); }check46,2007
static void printlits(lit* begin, lit* end)printlits48,2061
static inline double drand(double* seed) {drand60,2382
static inline int irand(double* seed, int size) {irand69,2630
static const int var0  = 1;var076,2863
static const int var1  = 0;var177,2891
static const int varX  = 3;varX78,2919
struct varinfo_tvarinfo_t80,2948
    unsigned val    :  2;  // variable value val82,2967
    unsigned pol    :  1;  // last polaritypol83,3013
    unsigned tag    :  1;  // conflict analysis tagtag84,3057
    unsigned lev    : 28;  // variable levellev85,3109
static inline int     var_level     (sat_solver* s, int v)            { return s->levels[v];   }var_level88,3158
static inline int     var_value     (sat_solver* s, int v)            { return s->assigns[v];  }var_value89,3255
static inline int     var_polar     (sat_solver* s, int v)            { return s->polarity[v]; }var_polar90,3352
static inline void    var_set_level (sat_solver* s, int v, int lev)   { s->levels[v] = lev;    }var_set_level92,3450
static inline void    var_set_value (sat_solver* s, int v, int val)   { s->assigns[v] = val;   }var_set_value93,3547
static inline void    var_set_polar (sat_solver* s, int v, int pol)   { s->polarity[v] = pol;  }var_set_polar94,3644
static inline int     var_tag       (sat_solver* s, int v)            { return s->tags[v]; }var_tag97,3759
static inline void    var_set_tag   (sat_solver* s, int v, int tag)   { var_set_tag98,3852
static inline void    var_add_tag   (sat_solver* s, int v, int tag)   { var_add_tag104,4074
static inline void    solver2_clear_tags(sat_solver* s, int start)    { solver2_clear_tags110,4297
int sat_solver_get_var_value(sat_solver* s, int v)sat_solver_get_var_value117,4538
static inline int      sat_solver_dl(sat_solver* s)                { return veci_size(&s->trail_lim); }sat_solver_dl132,4921
static inline veci*    sat_solver_read_wlist(sat_solver* s, lit l) { return &s->wlists[l];            }sat_solver_read_wlist133,5025
static inline void order_update(sat_solver* s, int v) // updateorderorder_update138,5260
static inline void order_assigned(sat_solver* s, int v) order_assigned159,5821
static inline void order_unassigned(sat_solver* s, int v) // undoorderorder_unassigned163,5883
static inline int  order_select(sat_solver* s, float random_var_freq) // selectvarorder_select174,6152
void sat_solver_set_var_activity(sat_solver* s, int * pVars, int nVars) sat_solver_set_var_activity217,7557
static inline void solver_init_activities(sat_solver* s)  solver_init_activities251,8539
static inline void act_var_rescale(sat_solver* s)  act_var_rescale286,9415
static inline void act_var_bump(sat_solver* s, int v) act_var_bump316,10325
static inline void act_var_bump_global(sat_solver* s, int v) act_var_bump_global345,11192
static inline void act_var_bump_factor(sat_solver* s, int v) act_var_bump_factor376,12183
static inline void act_var_decay(sat_solver* s)    act_var_decay408,13188
static inline void act_clause_rescale(sat_solver* s) act_clause_rescale420,13580
static inline void act_clause_bump(sat_solver* s, clause *c) act_clause_bump440,14159
static inline void act_clause_decay(sat_solver* s)    act_clause_decay457,14629
static inline void selectionsort(void** array, int size, int(*comp)(const void *, const void *))selectionsort469,14938
static void sortrnd(void** array, int size, int(*comp)(const void *, const void *), double* seed)sortrnd484,15342
static inline int sat_clause_compute_lbd( sat_solver* s, clause* c )sat_clause_compute_lbd512,16110
int sat_solver_clause_new(sat_solver* s, lit* begin, lit* end, int learnt)sat_solver_clause_new531,16572
static inline int sat_solver_enqueue(sat_solver* s, lit l, int from)sat_solver_enqueue598,18716
static inline int sat_solver_decision(sat_solver* s, lit l){sat_solver_decision648,19910
static void sat_solver_canceluntil(sat_solver* s, int level) {sat_solver_canceluntil660,20270
static void sat_solver_canceluntil_rollback(sat_solver* s, int NewBound) {sat_solver_canceluntil_rollback694,21221
static void sat_solver_record(sat_solver* s, veci* cls)sat_solver_record714,21719
int sat_solver_count_assigned(sat_solver* s)sat_solver_count_assigned742,22517
static double sat_solver_progress(sat_solver* s)sat_solver_progress753,22771
static int sat_solver_lit_removable(sat_solver* s, int x, int minl)sat_solver_lit_removable767,23174
static void sat_solver_analyze_final(sat_solver* s, int hConf, int skip_first)sat_solver_analyze_final862,26340
static void sat_solver_analyze(sat_solver* s, int h, veci* learnt)sat_solver_analyze908,28002
int sat_solver_propagate(sat_solver* s)sat_solver_propagate1017,31191
sat_solver* sat_solver_new(void)sat_solver_new1135,34868
sat_solver* zsat_solver_new_seed(double seed)zsat_solver_new_seed1200,36853
int sat_solver_addvar(sat_solver* s)sat_solver_addvar1265,38847
void sat_solver_setnvars(sat_solver* s,int n)sat_solver_setnvars1270,38949
void sat_solver_delete(sat_solver* s)sat_solver_delete1339,41496
void sat_solver_restart( sat_solver* s )sat_solver_restart1387,42740
void zsat_solver_restart_seed( sat_solver* s, double seed )zsat_solver_restart_seed1433,43954
double sat_solver_memory( sat_solver* s )sat_solver_memory1477,45204
int sat_solver_simplify(sat_solver* s)sat_solver_simplify1513,46749
void sat_solver_reducedb(sat_solver* s)sat_solver_reducedb1521,46905
void sat_solver_rollback( sat_solver* s )sat_solver_rollback1641,50977
int sat_solver_addclause(sat_solver* s, lit* begin, lit* end)sat_solver_addclause1733,53811
double luby(double y, int x)luby1795,55597
void luby_test()luby_test1807,55848
static lbool sat_solver_search(sat_solver* s, ABC_INT64_T nof_conflicts)sat_solver_search1815,55973
int sat_solver_solve_internal(sat_solver* s)sat_solver_solve_internal1940,60844
int sat_solver_push(sat_solver* s, int p)sat_solver_push2000,63202
void sat_solver_pop(sat_solver* s)sat_solver_pop2043,64466
void sat_solver_set_resource_limits(sat_solver* s, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, ABC_INT64_T nConfLimitGlobal, ABC_INT64_T nInsLimitGlobal)sat_solver_set_resource_limits2049,64590
int sat_solver_solve(sat_solver* s, lit* begin, lit* end, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, ABC_INT64_T nConfLimitGlobal, ABC_INT64_T nInsLimitGlobal)sat_solver_solve2066,65320
int sat_solver_solve_lexsat( sat_solver* s, int * pLits, int nLits )sat_solver_solve_lexsat2141,67946
int sat_solver_minimize_assumptions( sat_solver* s, int * pLits, int nLits, int nConfLimit )sat_solver_minimize_assumptions2207,71092
int sat_solver_minimize_assumptions2( sat_solver* s, int * pLits, int nLits, int nConfLimit )sat_solver_minimize_assumptions22282,74166
int sat_solver_nvars(sat_solver* s)sat_solver_nvars2367,77094
int sat_solver_nclauses(sat_solver* s)sat_solver_nclauses2373,77156
int sat_solver_nconflicts(sat_solver* s)sat_solver_nconflicts2379,77230
void sat_solver_store_alloc( sat_solver * s )sat_solver_store_alloc2387,77442
void sat_solver_store_write( sat_solver * s, char * pFileName )sat_solver_store_write2393,77558
void sat_solver_store_free( sat_solver * s )sat_solver_store_free2398,77705
int sat_solver_store_change_last( sat_solver * s )sat_solver_store_change_last2404,77837
void sat_solver_store_mark_roots( sat_solver * s )sat_solver_store_mark_roots2410,77988
void sat_solver_store_mark_clauses_a( sat_solver * s )sat_solver_store_mark_clauses_a2415,78109
void * sat_solver_store_release( sat_solver * s )sat_solver_store_release2420,78237

src/sat/bsat/satTruth.h,2868
#define ABC__sat__bsat__satTruth_hABC__sat__bsat__satTruth_h22,570
typedef struct Tru_Man_t_ Tru_Man_t;Tru_Man_t44,1408
static inline int    Tru_ManEqual( word * pOut, word * pIn, int nWords )  { int w; for ( w = 0; w < nWords; w++ ) if(pOut[w]!=pIn[w])  return 0; return 1; }Tru_ManEqual54,1886
static inline int    Tru_ManEqual0( word * pOut, int nWords )             { int w; for ( w = 0; w < nWords; w++ ) if(pOut[w]!=0)       return 0; return 1; }Tru_ManEqual055,2043
static inline int    Tru_ManEqual1( word * pOut, int nWords )             { int w; for ( w = 0; w < nWords; w++ ) if(pOut[w]!=~(word)0)return 0; return 1; }Tru_ManEqual156,2200
static inline word * Tru_ManCopy( word * pOut, word * pIn, int nWords )   { int w; for ( w = 0; w < nWords; w++ ) pOut[w] =   pIn[w];  return pOut;        }Tru_ManCopy57,2357
static inline word * Tru_ManClear( word * pOut, int nWords )              { int w; for ( w = 0; w < nWords; w++ ) pOut[w] = 0;         return pOut;        }Tru_ManClear58,2514
static inline word * Tru_ManFill( word * pOut, int nWords )               { int w; for ( w = 0; w < nWords; w++ ) pOut[w] = ~(word)0;  return pOut;        }Tru_ManFill59,2671
static inline word * Tru_ManNot( word * pOut, int nWords )                { int w; for ( w = 0; w < nWords; w++ ) pOut[w] = ~pOut[w];  return pOut;        }Tru_ManNot60,2828
static inline word * Tru_ManAnd( word * pOut, word * pIn, int nWords )    { int w; for ( w = 0; w < nWords; w++ ) pOut[w] &=  pIn[w];  return pOut;        }Tru_ManAnd61,2985
static inline word * Tru_ManOr( word * pOut, word * pIn, int nWords )     { int w; for ( w = 0; w < nWords; w++ ) pOut[w] |=  pIn[w];  return pOut;        }Tru_ManOr62,3142
static inline word * Tru_ManCopyNot( word * pOut, word * pIn, int nWords ){ int w; for ( w = 0; w < nWords; w++ ) pOut[w] =  ~pIn[w];  return pOut;        }Tru_ManCopyNot63,3299
static inline word * Tru_ManAndNot( word * pOut, word * pIn, int nWords ) { int w; for ( w = 0; w < nWords; w++ ) pOut[w] &= ~pIn[w];  return pOut;        }Tru_ManAndNot64,3456
static inline word * Tru_ManOrNot( word * pOut, word * pIn, int nWords )  { int w; for ( w = 0; w < nWords; w++ ) pOut[w] |= ~pIn[w];  return pOut;        }Tru_ManOrNot65,3613
static inline word * Tru_ManCopyNotCond( word * pOut, word * pIn, int nWords, int fCompl ){ return fCompl ? Tru_ManCopyNot(pOut, pIn, nWords) : Tru_ManCopy(pOut, pIn, nWords); }Tru_ManCopyNotCond66,3770
static inline word * Tru_ManAndNotCond( word * pOut, word * pIn, int nWords, int fCompl ) { return fCompl ? Tru_ManAndNot(pOut, pIn, nWords)  : Tru_ManAnd(pOut, pIn, nWords);  }Tru_ManAndNotCond67,3948
static inline word * Tru_ManOrNotCond( word * pOut, word * pIn, int nWords, int fCompl )  { return fCompl ? Tru_ManOrNot(pOut, pIn, nWords)   : Tru_ManOr(pOut, pIn, nWords);   }Tru_ManOrNotCond68,4126

src/sat/bsat/satVec.h,3696
#define ABC__sat__bsat__satVec_hABC__sat__bsat__satVec_h23,1435
struct veci_t {veci_t31,1594
    int    cap;cap32,1610
    int    size;size33,1626
    int*   ptr;ptr34,1643
typedef struct veci_t veci;veci36,1662
static inline void veci_new (veci* v) {veci_new38,1691
static inline void   veci_delete (veci* v)          { ABC_FREE(v->ptr);   }veci_delete44,1826
static inline int*   veci_begin  (veci* v)          { return v->ptr;  }veci_begin45,1902
static inline int    veci_size   (veci* v)          { return v->size; }veci_size46,1974
static inline void   veci_resize (veci* v, int k)   { veci_resize47,2046
static inline int    veci_pop    (veci* v)          { assert(v->size); return v->ptr[--v->size]; }veci_pop52,2255
static inline void   veci_push   (veci* v, int e)veci_push53,2354
static inline void   veci_remove(veci* v, int e)veci_remove68,2878
struct vecp_t {vecp_t80,3173
    int    cap;cap81,3189
    int    size;size82,3205
    void** ptr;ptr83,3222
typedef struct vecp_t vecp;vecp85,3241
static inline void vecp_new (vecp* v) {vecp_new87,3270
static inline void   vecp_delete (vecp* v)          { ABC_FREE(v->ptr);   }vecp_delete93,3409
static inline void** vecp_begin  (vecp* v)          { return v->ptr;  }vecp_begin94,3485
static inline int    vecp_size   (vecp* v)          { return v->size; }vecp_size95,3557
static inline void   vecp_resize (vecp* v, int   k) { assert(k <= v->size); v->size = k;    } // only safe to shrink !!vecp_resize96,3629
static inline void   vecp_push   (vecp* v, void* e)vecp_push97,3749
static inline void   vecp_remove(vecp* v, void* e)vecp_remove106,4054
#  define false false123,4463
#  define true true126,4501
typedef int    lit;lit130,4533
typedef int    cla;cla131,4553
typedef char               lbool;lbool133,4574
static const int   var_Undef = -1;var_Undef135,4609
static const lit   lit_Undef = -2;lit_Undef136,4644
static const lbool l_Undef   =  0;l_Undef138,4680
static const lbool l_True    =  1;l_True139,4715
static const lbool l_False   = -1;l_False140,4750
static inline lit  toLit    (int v)        { return v + v; }toLit142,4786
static inline lit  toLitCond(int v, int c) { return v + v + (c != 0); }toLitCond143,4847
static inline lit  lit_neg  (lit l)        { return l ^ 1; }lit_neg144,4919
static inline int  lit_var  (lit l)        { return l >> 1; }lit_var145,4980
static inline int  lit_sign (lit l)        { return l & 1; }lit_sign146,5042
static inline int  lit_print(lit l)        { return lit_sign(l)? -lit_var(l)-1 : lit_var(l)+1; }lit_print147,5103
static inline lit  lit_read (int s)        { return s > 0 ? toLit(s-1) : lit_neg(toLit(-s-1)); }lit_read148,5200
static inline int  lit_check(lit l, int n) { return l >= 0 && lit_var(l) < n;                  }lit_check149,5297
struct stats_tstats_t151,5395
    unsigned starts, clauses, learnts;starts153,5412
    unsigned starts, clauses, learnts;clauses153,5412
    unsigned starts, clauses, learnts;learnts153,5412
    ABC_INT64_T decisions, propagations, inspects, conflicts;decisions154,5451
    ABC_INT64_T decisions, propagations, inspects, conflicts;propagations154,5451
    ABC_INT64_T decisions, propagations, inspects, conflicts;inspects154,5451
    ABC_INT64_T decisions, propagations, inspects, conflicts;conflicts154,5451
    ABC_INT64_T clauses_literals, learnts_literals, tot_literals;clauses_literals155,5513
    ABC_INT64_T clauses_literals, learnts_literals, tot_literals;learnts_literals155,5513
    ABC_INT64_T clauses_literals, learnts_literals, tot_literals;tot_literals155,5513
typedef struct stats_t stats_t;stats_t157,5582

src/sat/bsat/satInter.c,5967
static const lit    LIT_UNDEF = 0xffffffff;LIT_UNDEF36,874
struct Int_Man_t_Int_Man_t_39,944
    Sto_Man_t *     pCnf;         // the set of CNF clauses for A and BpCnf42,995
    int             pGloVars[16]; // global variablespGloVars43,1067
    int             nGloVars;     // the number of global variablesnGloVars44,1121
    int             fVerbose;     // verbosiness flagfVerbose46,1215
    int             fProofVerif;  // verifies the prooffProofVerif47,1269
    int             fProofWrite;  // writes the proof filefProofWrite48,1325
    int             nVarsAlloc;   // the allocated size of var arraysnVarsAlloc49,1384
    int             nClosAlloc;   // the allocated size of clause arraysnClosAlloc50,1454
    int             nRootSize;    // the number of root level assignmentsnRootSize52,1547
    int             nTrailSize;   // the number of assignments made nTrailSize53,1621
    lit *           pTrail;       // chronological order of assignments (size nVars)pTrail54,1690
    lit *           pAssigns;     // assignments by variable (size nVars) pAssigns55,1775
    char *          pSeens;       // temporary mark (size nVars)pSeens56,1850
    Sto_Cls_t **    pReasons;     // reasons for each assignment (size nVars)          pReasons57,1915
    Sto_Cls_t **    pWatches;     // watched clauses for each literal (size 2*nVars)          pWatches58,2003
    int             nVarsAB;      // the number of global variablesnVarsAB60,2124
    int *           pVarTypes;    // variable type (size nVars) [1=A, 0=B, <0=AB]pVarTypes61,2192
    unsigned *      pInters;      // storage for interpolants as truth tables (size nClauses)pInters62,2274
    int             nIntersAlloc; // the allocated size of truth table arraynIntersAlloc63,2368
    int             nWords;       // the number of words in the truth tablenWords64,2445
    int             Counter;      // counter of resolved clausesCounter66,2544
    int *           pProofNums;   // the proof numbers for each clause (size nClauses)pProofNums67,2609
    FILE *          pFile;        // the file for proof recordingpFile68,2696
    lit *           pResLits;     // the literals of the resolvent   pResLits70,2791
    int             nResLits;     // the number of literals of the resolventnResLits71,2861
    int             nResLitsAlloc;// the number of literals of the resolventnResLitsAlloc72,2938
    abctime         timeBcp;      // the runtime for BCPtimeBcp74,3036
    abctime         timeTrace;    // the runtime of trace constructiontimeTrace75,3093
    abctime         timeTotal;    // the total runtime of interpolationtimeTotal76,3164
static inline unsigned * Int_ManTruthRead( Int_Man_t * p, Sto_Cls_t * pCls )          { return p->pInters + pCls->Id * p->nWords;                 }Int_ManTruthRead80,3294
static inline void       Int_ManTruthClear( unsigned * p, int nWords )                { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i]  =  0;    }Int_ManTruthClear81,3442
static inline void       Int_ManTruthFill( unsigned * p, int nWords )                 { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i]  = ~0;    }Int_ManTruthFill82,3590
static inline void       Int_ManTruthCopy( unsigned * p, unsigned * q, int nWords )   { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i]  =  q[i]; }Int_ManTruthCopy83,3738
static inline void       Int_ManTruthAnd( unsigned * p, unsigned * q, int nWords )    { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] &=  q[i]; }Int_ManTruthAnd84,3886
static inline void       Int_ManTruthOr( unsigned * p, unsigned * q, int nWords )     { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] |=  q[i]; }Int_ManTruthOr85,4034
static inline void       Int_ManTruthOrNot( unsigned * p, unsigned * q, int nWords )  { int i; for ( i = nWords - 1; i >= 0; i-- ) p[i] |= ~q[i]; }Int_ManTruthOrNot86,4182
static inline int        Int_ManProofGet( Int_Man_t * p, Sto_Cls_t * pCls )           { return p->pProofNums[pCls->Id];  }Int_ManProofGet89,4373
static inline void       Int_ManProofSet( Int_Man_t * p, Sto_Cls_t * pCls, int n )    { p->pProofNums[pCls->Id] = n;     }Int_ManProofSet90,4496
Int_Man_t * Int_ManAlloc()Int_ManAlloc107,5097
int * Int_ManSetGlobalVars( Int_Man_t * p, int nGloVars )Int_ManSetGlobalVars133,5721
int Int_ManGlobalVars( Int_Man_t * p )Int_ManGlobalVars150,6119
void Int_ManResize( Int_Man_t * p )Int_ManResize209,7651
void Int_ManFree( Int_Man_t * p )Int_ManFree273,10082
void Int_ManPrintClause( Int_Man_t * p, Sto_Cls_t * pClause )Int_ManPrintClause307,10805
void Int_ManPrintResolvent( lit * pResLits, int nResLits )Int_ManPrintResolvent327,11341
void Extra_PrintBinary__( FILE * pFile, unsigned Sign[], int nBits )Extra_PrintBinary__347,11795
void Int_ManPrintInterOne( Int_Man_t * p, Sto_Cls_t * pClause )Int_ManPrintInterOne371,12484
static inline void Int_ManWatchClause( Int_Man_t * p, Sto_Cls_t * pClause, lit Lit )Int_ManWatchClause391,12974
static inline int Int_ManEnqueue( Int_Man_t * p, lit Lit, Sto_Cls_t * pReason )Int_ManEnqueue416,13617
static inline void Int_ManCancelUntil( Int_Man_t * p, int Level )Int_ManCancelUntil439,14241
static inline Sto_Cls_t * Int_ManPropagateOne( Int_Man_t * p, lit Lit )Int_ManPropagateOne465,14859
Sto_Cls_t * Int_ManPropagate( Int_Man_t * p, int Start )Int_ManPropagate534,17058
void Int_ManProofWriteOne( Int_Man_t * p, Sto_Cls_t * pClause )Int_ManProofWriteOne564,17727
int Int_ManProofTraceOne( Int_Man_t * p, Sto_Cls_t * pConflict, Sto_Cls_t * pFinal )Int_ManProofTraceOne589,18390
int Int_ManProofRecordOne( Int_Man_t * p, Sto_Cls_t * pClause )Int_ManProofRecordOne770,25261
int Int_ManProcessRoots( Int_Man_t * p )Int_ManProcessRoots875,28350
void Int_ManPrepareInter( Int_Man_t * p )Int_ManPrepareInter948,30549
int Int_ManInterpolate( Int_Man_t * p, Sto_Man_t * pCnf, int fVerbose, unsigned ** ppResult )Int_ManInterpolate1005,32966

src/sat/bsat/satSolver2i.c,860
struct Int2_Man_t_ Int2_Man_t_33,882
    sat_solver2 *   pSat;      // user's SAT solverpSat35,904
    Vec_Int_t *     vGloVars;  // IDs of global variablesvGloVars36,956
    Vec_Int_t *     vVar2Glo;  // mapping of SAT variables into their global IDsvVar2Glo37,1014
    Gia_Man_t *     pGia;      // AIG manager to store the interpolantpGia38,1095
Int2_Man_t * Int2_ManStart( sat_solver2 * pSat, int * pGloVars, int nGloVars )Int2_ManStart56,1655
void Int2_ManStop( Int2_Man_t * p )Int2_ManStop71,2184
void * Int2_ManReadInterpolant( sat_solver2 * pSat )Int2_ManReadInterpolant80,2374
int Int2_ManChainStart( Int2_Man_t * p, clause * c )Int2_ManChainStart108,3229
int Int2_ManChainResolve( Int2_Man_t * p, clause * c, int iLit, int varA )Int2_ManChainResolve134,4131
Gia_Man_t * Gia_ManInterTest( Gia_Man_t * p )Gia_ManInterTest158,4885

src/sat/bsat/satStore.c,869
char * Sto_ManMemoryFetch( Sto_Man_t * p, int nBytes )Sto_ManMemoryFetch50,1341
void Sto_ManMemoryStop( Sto_Man_t * p )Sto_ManMemoryStop76,2015
int Sto_ManMemoryReport( Sto_Man_t * p )Sto_ManMemoryReport97,2520
Sto_Man_t * Sto_ManAlloc()Sto_ManAlloc121,3067
void Sto_ManFree( Sto_Man_t * p )Sto_ManFree143,3593
int Sto_ManAddClause( Sto_Man_t * p, lit * pBeg, lit * pEnd )Sto_ManAddClause160,3944
void Sto_ManMarkRoots( Sto_Man_t * p )Sto_ManMarkRoots235,6036
void Sto_ManMarkClausesA( Sto_Man_t * p )Sto_ManMarkClausesA257,6503
int Sto_ManChangeLastClause( Sto_Man_t * p )Sto_ManChangeLastClause279,6970
void Sto_ManDumpClauses( Sto_Man_t * p, char * pFileName )Sto_ManDumpClauses305,7573
int Sto_ManLoadNumber( FILE * pFile, int * pNumber )Sto_ManLoadNumber340,8504
Sto_Man_t * Sto_ManLoadClauses( char * pFileName )Sto_ManLoadClauses384,9691

src/sat/bsat/satSolver2.c,7825
#define SAT_USE_PROOF_LOGGINGSAT_USE_PROOF_LOGGING31,1531
#define L_IND L_IND39,1743
#define L_ind L_ind40,1767
#define L_LIT L_LIT41,1824
#define L_lit(L_lit42,1849
static void printlits(lit* begin, lit* end)printlits43,1899
static inline double drand(double* seed) {drand55,2225
static inline int irand(double* seed, int size) {irand64,2473
static const int var1  = 0;var171,2735
static const int varX  = 3;varX72,2763
struct varinfo2_tvarinfo2_t74,2792
    unsigned pol    :  1;  // last polaritypol77,2860
    unsigned partA  :  1;  // partA variablepartA78,2904
    unsigned tag    :  4;  // conflict analysis tagstag79,2949
int    var_is_assigned(sat_solver2* s, int v)            { return s->assigns[v] != varX; }var_is_assigned83,3053
int    var_is_partA (sat_solver2* s, int v)              { return s->vi[v].partA;        }var_is_partA84,3144
void   var_set_partA(sat_solver2* s, int v, int partA)   { s->vi[v].partA = partA;       }var_set_partA85,3235
static inline int     var_level     (sat_solver2* s, int v)            { return s->levels[v];  }var_level88,3425
static inline int     var_value     (sat_solver2* s, int v)            { return s->assigns[v]; }var_value90,3620
static inline int     var_polar     (sat_solver2* s, int v)            { return s->vi[v].pol; }var_polar91,3717
static inline void    var_set_level (sat_solver2* s, int v, int lev)   { s->levels[v] = lev;  }var_set_level94,3912
static inline void    var_set_value (sat_solver2* s, int v, int val)   { s->assigns[v] = val; }var_set_value96,4106
static inline void    var_set_polar (sat_solver2* s, int v, int pol)   { s->vi[v].pol = pol;  }var_set_polar97,4202
static inline int     solver2_lit_is_false( sat_solver2* s, int Lit )  { return var_value(s, lit_var(Lit)) == !lit_sign(Lit); }solver2_lit_is_false100,4358
static inline int     var_tag       (sat_solver2* s, int v)            { return s->vi[v].tag; }var_tag105,4506
static inline void    var_set_tag   (sat_solver2* s, int v, int tag)   {var_set_tag106,4602
static inline void    var_add_tag   (sat_solver2* s, int v, int tag)   {var_add_tag112,4801
static inline void    solver2_clear_tags(sat_solver2* s, int start)    {solver2_clear_tags118,5001
static inline int     var_lev_mark (sat_solver2* s, int v)             {var_lev_mark126,5259
static inline void    var_lev_set_mark (sat_solver2* s, int v)         {var_lev_set_mark129,5407
static inline void    solver2_clear_marks(sat_solver2* s)              {solver2_clear_marks135,5653
static inline int     var_reason    (sat_solver2* s, int v)            { return s->reasons[v];           }var_reason149,6655
static inline int     lit_reason    (sat_solver2* s, int l)            { return s->reasons[lit_var(l)];  }lit_reason150,6762
static inline clause* var_unit_clause(sat_solver2* s, int v)           { return clause2_read(s, s->units[v]);                                          }var_unit_clause151,6869
static inline void    var_set_unit_clause(sat_solver2* s, int v, cla i){ var_set_unit_clause152,7022
#define clause_foreach_var(clause_foreach_var156,7181
static inline int     solver2_dlevel(sat_solver2* s)       { return veci_size(&s->trail_lim); }solver2_dlevel162,7442
static inline veci*   solver2_wlist(sat_solver2* s, lit l) { return &s->wlists[l];            }solver2_wlist163,7538
static inline void proof_chain_start( sat_solver2* s, clause* c )proof_chain_start168,7754
static inline void proof_chain_resolve( sat_solver2* s, clause* cls, int Var )proof_chain_resolve187,8296
static inline int proof_chain_stop( sat_solver2* s )proof_chain_stop210,8987
static inline void order_update(sat_solver2* s, int v) // updateorderorder_update235,9701
static inline void order_assigned(sat_solver2* s, int v)order_assigned252,10269
static inline void order_unassigned(sat_solver2* s, int v) // undoorderorder_unassigned255,10330
static inline int  order_select(sat_solver2* s, float random_var_freq) // selectvarorder_select264,10576
static inline void act_var_rescale(sat_solver2* s)  {act_var_rescale312,12171
static inline void act_clause2_rescale(sat_solver2* s) {act_clause2_rescale319,12365
static inline void act_var_bump(sat_solver2* s, int v) {act_var_bump332,12848
static inline void act_clause2_bump(sat_solver2* s, clause*c) {act_clause2_bump339,13058
static inline void act_var_decay(sat_solver2* s)    { s->var_inc *= s->var_decay; }act_var_decay346,13335
static inline void act_clause2_decay(sat_solver2* s) { s->cla_inc *= s->cla_decay; }act_clause2_decay347,13419
static inline void act_var_rescale(sat_solver2* s) {act_var_rescale351,13512
static inline void act_clause2_rescale(sat_solver2* s) {act_clause2_rescale359,13752
static inline void act_var_bump(sat_solver2* s, int v) {act_var_bump372,14281
static inline void act_clause2_bump(sat_solver2* s, clause*c) {act_clause2_bump379,14496
static inline void act_var_decay(sat_solver2* s)    { s->var_inc += (s->var_inc >>  4); }act_var_decay387,14807
static inline void act_clause2_decay(sat_solver2* s) { s->cla_inc += (s->cla_inc >> 10); }act_clause2_decay388,14897
static inline int sat_clause_compute_lbd( sat_solver2* s, clause* c )sat_clause_compute_lbd395,15119
static int clause2_create_new(sat_solver2* s, lit* begin, lit* end, int learnt, int proof_id )clause2_create_new408,15452
static inline int solver2_enqueue(sat_solver2* s, lit l, cla from)solver2_enqueue455,16931
static inline int solver2_assume(sat_solver2* s, lit l)solver2_assume477,17558
static void solver2_canceluntil(sat_solver2* s, int level) {solver2_canceluntil489,17921
static void solver2_canceluntil_rollback(sat_solver2* s, int NewBound) {solver2_canceluntil_rollback518,18697
static void solver2_record(sat_solver2* s, veci* cls, int proof_id)solver2_record540,19234
static double solver2_progress(sat_solver2* s)solver2_progress556,19668
static int solver2_analyze_final(sat_solver2* s, clause* conf, int skip_first)solver2_analyze_final618,21741
static int solver2_lit_removable_rec(sat_solver2* s, int v)solver2_lit_removable_rec656,23090
static int solver2_lit_removable(sat_solver2* s, int x)solver2_lit_removable694,24284
static void solver2_logging_order(sat_solver2* s, int x)solver2_logging_order736,25376
static void solver2_logging_order_rec(sat_solver2* s, int x)solver2_logging_order_rec766,26204
static int solver2_analyze(sat_solver2* s, clause* c, veci* learnt)solver2_analyze780,26590
clause* solver2_propagate(sat_solver2* s)solver2_propagate904,30339
int sat_solver2_simplify(sat_solver2* s)sat_solver2_simplify996,33896
static lbool solver2_search(sat_solver2* s, ABC_INT64_T nof_conflicts)solver2_search1002,34021
sat_solver2* sat_solver2_new(void)sat_solver2_new1109,38098
void sat_solver2_setnvars(sat_solver2* s,int n)sat_solver2_setnvars1170,39953
void sat_solver2_delete(sat_solver2* s)sat_solver2_delete1225,42038
int sat_solver2_addclause(sat_solver2* s, lit* begin, lit* end, int Id)sat_solver2_addclause1287,43855
double luby2(double y, int x)luby21384,46981
void luby2_test()luby2_test1396,47232
void sat_solver2_reducedb(sat_solver2* s)sat_solver2_reducedb1406,47416
void sat_solver2_rollback( sat_solver2* s )sat_solver2_rollback1586,53625
double sat_solver2_memory( sat_solver2* s, int fAll )sat_solver2_memory1692,57302
double sat_solver2_memory_proof( sat_solver2* s )sat_solver2_memory_proof1733,59111
int sat_solver2_check_watched( sat_solver2* s )sat_solver2_check_watched1800,60959
int sat_solver2_solve(sat_solver2* s, lit* begin, lit* end, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, ABC_INT64_T nConfLimitGlobal, ABC_INT64_T nInsLimitGlobal)sat_solver2_solve1835,62006
void * Sat_ProofCore( sat_solver2 * s )Sat_ProofCore1985,67571

src/sat/bsat/satTruth.c,1727
struct Tru_Man_t_Tru_Man_t_35,1024
    int              nVars;        // the number of variablesnVars37,1044
    int              nWords;       // the number of words in the truth tablenWords38,1106
    int              nEntrySize;   // the size of one entry in 'int'nEntrySize39,1183
    int              nTableSize;   // hash table sizenTableSize40,1252
    int *            pTable;       // hash tablepTable41,1306
    Vec_Set_t *      pMem;         // memory for truth tablespMem42,1355
    word *           pZero;        // temporary truth table pZero43,1417
    int              hIthVars[16]; // variable handleshIthVars44,1478
    int              nTableLookups;nTableLookups45,1533
typedef struct Tru_One_t_ Tru_One_t; // 16 bytes minimumTru_One_t48,1573
struct Tru_One_t_Tru_One_t_49,1630
    int              Handle;       // supportHandle51,1650
    int              Next;         // next one in the tableNext52,1696
    word             pTruth[0];    // truth tablepTruth53,1756
static inline Tru_One_t * Tru_ManReadOne( Tru_Man_t * p, int h ) { return h ? (Tru_One_t *)Vec_SetEntry(p->pMem, h) : NULL; }Tru_ManReadOne56,1810
static inline unsigned Tru_ManHash( word * pTruth, int nWords, int nBins, int * pPrimes )Tru_ManHash73,2412
int * Tru_ManLookup( Tru_Man_t * p, word * pTruth )Tru_ManLookup93,2909
void Tru_ManResize( Tru_Man_t * p )Tru_ManResize117,3700
int Tru_ManInsert( Tru_Man_t * p, word * pTruth )Tru_ManInsert158,4919
Tru_Man_t * Tru_ManAlloc( int nVars )Tru_ManAlloc198,6040
void Tru_ManFree( Tru_Man_t * p )Tru_ManFree248,7541
word * Tru_ManVar( Tru_Man_t * p, int v )Tru_ManVar268,8033
word * Tru_ManFunc( Tru_Man_t * p, int h )Tru_ManFunc285,8434

src/sat/bsat/satInterP.c,4426
static const lit    LIT_UNDEF = 0xffffffff;LIT_UNDEF37,900
struct Intp_Man_t_Intp_Man_t_40,970
    Sto_Man_t *     pCnf;         // the set of CNF clauses for A and BpCnf43,1022
    int             fVerbose;     // verbosiness flagfVerbose45,1120
    int             fProofVerif;  // verifies the prooffProofVerif46,1174
    int             fProofWrite;  // writes the proof filefProofWrite47,1230
    int             nVarsAlloc;   // the allocated size of var arraysnVarsAlloc48,1289
    int             nClosAlloc;   // the allocated size of clause arraysnClosAlloc49,1359
    int             nRootSize;    // the number of root level assignmentsnRootSize51,1452
    int             nTrailSize;   // the number of assignments made nTrailSize52,1526
    lit *           pTrail;       // chronological order of assignments (size nVars)pTrail53,1595
    lit *           pAssigns;     // assignments by variable (size nVars) pAssigns54,1680
    char *          pSeens;       // temporary mark (size nVars)pSeens55,1755
    Sto_Cls_t **    pReasons;     // reasons for each assignment (size nVars)          pReasons56,1820
    Sto_Cls_t **    pWatches;     // watched clauses for each literal (size 2*nVars)          pWatches57,1908
    Vec_Ptr_t *     vAntClas;     // anticedant clausesvAntClas61,2169
    int             nAntStart;    // starting antecedant clausenAntStart62,2225
    int             Counter;      // counter of resolved clausesCounter64,2312
    int *           pProofNums;   // the proof numbers for each clause (size nClauses)pProofNums65,2377
    FILE *          pFile;        // the file for proof recordingpFile66,2464
    lit *           pResLits;     // the literals of the resolvent   pResLits68,2559
    int             nResLits;     // the number of literals of the resolventnResLits69,2629
    int             nResLitsAlloc;// the number of literals of the resolventnResLitsAlloc70,2706
    abctime         timeBcp;      // the runtime for BCPtimeBcp72,2804
    abctime         timeTrace;    // the runtime of trace constructiontimeTrace73,2861
    abctime         timeTotal;    // the total runtime of interpolationtimeTotal74,2932
static inline int          Intp_ManProofGet( Intp_Man_t * p, Sto_Cls_t * pCls )                  { return p->pProofNums[pCls->Id];           }Intp_ManProofGet78,3050
static inline void         Intp_ManProofSet( Intp_Man_t * p, Sto_Cls_t * pCls, int n )           { p->pProofNums[pCls->Id] = n;              }Intp_ManProofSet79,3193
Intp_Man_t * Intp_ManAlloc()Intp_ManAlloc96,3814
void Intp_ManResize( Intp_Man_t * p )Intp_ManResize127,4609
void Intp_ManFree( Intp_Man_t * p )Intp_ManFree178,6505
void Intp_ManPrintClause( Intp_Man_t * p, Sto_Cls_t * pClause )Intp_ManPrintClause215,7345
void Intp_ManPrintResolvent( lit * pResLits, int nResLits )Intp_ManPrintResolvent235,7884
void Intp_ManPrintInterOne( Intp_Man_t * p, Sto_Cls_t * pClause )Intp_ManPrintInterOne255,8359
static inline void Intp_ManWatchClause( Intp_Man_t * p, Sto_Cls_t * pClause, lit Lit )Intp_ManWatchClause275,8853
static inline int Intp_ManEnqueue( Intp_Man_t * p, lit Lit, Sto_Cls_t * pReason )Intp_ManEnqueue300,9498
static inline void Intp_ManCancelUntil( Intp_Man_t * p, int Level )Intp_ManCancelUntil323,10124
static inline Sto_Cls_t * Intp_ManPropagateOne( Intp_Man_t * p, lit Lit )Intp_ManPropagateOne349,10744
Sto_Cls_t * Intp_ManPropagate( Intp_Man_t * p, int Start )Intp_ManPropagate418,12947
void Intp_ManProofWriteOne( Intp_Man_t * p, Sto_Cls_t * pClause )Intp_ManProofWriteOne448,13619
int Intp_ManProofTraceOne( Intp_Man_t * p, Sto_Cls_t * pConflict, Sto_Cls_t * pFinal )Intp_ManProofTraceOne473,14286
int Intp_ManProofRecordOne( Intp_Man_t * p, Sto_Cls_t * pClause )Intp_ManProofRecordOne668,21810
int Intp_ManProcessRoots( Intp_Man_t * p )Intp_ManProcessRoots782,25393
void Intp_ManUnsatCoreVerify( Sto_Man_t * pCnf, Vec_Int_t * vCore )Intp_ManUnsatCoreVerify859,27836
void Intp_ManUnsatCore_rec( Vec_Ptr_t * vAntClas, int iThis, Vec_Int_t * vCore, int nRoots, Vec_Str_t * vVisited, int fLearned )Intp_ManUnsatCore_rec919,29683
void * Intp_ManUnsatCore( Intp_Man_t * p, Sto_Man_t * pCnf, int fLearned, int fVerbose )Intp_ManUnsatCore963,31262
void Intp_ManUnsatCorePrintForBmc( FILE * pFile, Sto_Man_t * pCnf, void * vCore0, void * vVarMap0 )Intp_ManUnsatCorePrintForBmc1059,34259

src/sat/bsat/satProof.c,2108
typedef struct satset_t satset;satset41,1060
struct satset_t satset_t42,1092
    unsigned learnt :  1;learnt44,1111
    unsigned mark   :  1;mark45,1137
    unsigned partA  :  1;partA46,1163
    unsigned nEnts  : 29;nEnts47,1189
    int      Id;Id48,1215
    int      pEnts[0];pEnts49,1232
static inline satset* Proof_NodeRead    ( Vec_Set_t* p, int h )     { assert( h > 0 );     return (satset*)Vec_SetEntry( p, h );  }Proof_NodeRead58,1747
static inline int     Proof_NodeWordNum ( int nEnts )               { assert( nEnts > 0 ); return 1 + ((nEnts + 1) >> 1);         }Proof_NodeWordNum59,1879
void Proof_ClauseSetEnts( Vec_Set_t* p, int h, int nEnts )          { Proof_NodeRead(p, h)->nEnts = nEnts;             }Proof_ClauseSetEnts61,2012
#define Proof_ForeachClauseVec(Proof_ForeachClauseVec64,2174
#define Proof_ForeachNodeVec(Proof_ForeachNodeVec66,2342
#define Proof_ForeachNodeVec1(Proof_ForeachNodeVec168,2508
#define Proof_NodeForeachFanin(Proof_NodeForeachFanin72,2720
void Proof_CleanCollected( Vec_Set_t * vProof, Vec_Int_t * vUsed )Proof_CleanCollected96,3923
void Proof_CollectUsed_iter( Vec_Set_t * vProof, int hNode, Vec_Int_t * vUsed, Vec_Int_t * vStack )Proof_CollectUsed_iter115,4343
Vec_Int_t * Proof_CollectUsedIter( Vec_Set_t * vProof, Vec_Int_t * vRoots, int fSort )Proof_CollectUsedIter145,5324
void Proof_CollectUsed_rec( Vec_Set_t * vProof, int hNode, Vec_Int_t * vUsed )Proof_CollectUsed_rec187,6609
Vec_Int_t * Proof_CollectUsedRec( Vec_Set_t * vProof, Vec_Int_t * vRoots )Proof_CollectUsedRec199,7018
int Proof_MarkUsed_rec( Vec_Set_t * vProof, int hNode )Proof_MarkUsed_rec221,7592
int Proof_MarkUsedRec( Vec_Set_t * vProof, Vec_Int_t * vRoots )Proof_MarkUsedRec233,7981
void Sat_ProofCheck0( Vec_Set_t * vProof )Sat_ProofCheck0371,12603
int Sat_ProofReduce( Vec_Set_t * vProof, void * pRoots, int hProofPivot )Sat_ProofReduce383,12938
Vec_Int_t * Sat_ProofCollectCore( Vec_Set_t * vProof, Vec_Int_t * vUsed )Sat_ProofCollectCore607,20345
void * Proof_DeriveCore( Vec_Set_t * vProof, int hRoot )Proof_DeriveCore913,31364

src/sat/bsat/satSolver2.h,8902
#define ABC__sat__bsat__satSolver2_hABC__sat__bsat__satSolver2_h23,1439
typedef struct sat_solver2_t sat_solver2;sat_solver244,1858
typedef struct Int2_Man_t_ Int2_Man_t;Int2_Man_t45,1900
typedef struct varinfo2_t varinfo2;varinfo288,4101
struct sat_solver2_tsat_solver2_t90,4138
    int             size;           // nof variablessize92,4161
    int             cap;            // size of varmapscap93,4214
    int             qhead;          // Head index of queue.qhead94,4269
    int             qtail;          // Tail index of queue.qtail95,4329
    int             root_level;     // Level of first proper decision.root_level97,4390
    double          random_seed;random_seed98,4461
    double          progress_estimate;progress_estimate99,4494
    int             verbosity;      // Verbosity level. 0=silent, 1=some progress report, 2=everything    // activitiesverbosity100,4533
    double          var_inc;        // Amount to bump next variable with.var_inc103,4681
    double          var_decay;      // INVERSE decay factor for variable activity: stores 1/decay. var_decay104,4755
    float           cla_inc;        // Amount to bump next clause with.cla_inc105,4855
    float           cla_decay;      // INVERSE decay factor for clause activity: stores 1/decay.cla_decay106,4927
    double*         activity;       // A heuristic measurement of the activity of a variable.activity107,5024
    int             var_inc;        // Amount to bump next variable with.var_inc109,5124
    int             var_inc2;       // Amount to bump next variable with.var_inc2110,5198
    int             cla_inc;        // Amount to bump next clause with.cla_inc111,5272
    unsigned*       activity;       // A heuristic measurement of the activity of a variableactivity112,5344
    unsigned*       activity2;      // backup variable activityactivity2113,5437
    int             nUnits;         // the total number of unit clausesnUnits116,5509
    int             nof_learnts;    // the number of clauses to trigger reduceDBnof_learnts117,5581
    int             nLearntMax;     // enables using reduce DB methodnLearntMax118,5662
    int             nLearntStart;   // starting learned clause limitnLearntStart119,5732
    int             nLearntDelta;   // delta of learned clause limitnLearntDelta120,5801
    int             nLearntRatio;   // ratio percentage of learned clausesnLearntRatio121,5870
    int             nDBreduces;     // number of DB reductionsnDBreduces122,5945
    int             fNotUseRandom;  // do not allow random decisions with a fixed probabilityfNotUseRandom123,6008
    int             fSkipSimplify;  // set to one to skip simplification of the clause databasefSkipSimplify124,6102
    int             fProofLogging;  // enable proof-loggingfProofLogging125,6198
    int             fVerbose;fVerbose126,6258
    Sat_Mem_t       Mem;Mem129,6304
    veci*           wlists;         // watcher lists (for each literal)wlists130,6329
    veci            act_clas;       // clause activitiesact_clas131,6401
    veci            claProofs;      // clause proofsclaProofs132,6458
    int             iVarPivot;      // the pivot for variablesiVarPivot135,6528
    int             iTrailPivot;    // the pivot for trailiTrailPivot136,6591
    int             hProofPivot;    // the pivot for proof recordshProofPivot137,6650
    varinfo2 *      vi;             // variable informationvi140,6740
    int*            levels;         // levels141,6800
    char*           assigns;        // assigns142,6840
    lit*            trail;          // sequence of assignment and implicationstrail143,6880
    int*            orderpos;       // Index in variable order.orderpos144,6959
    cla*            reasons;        // reason clausesreasons145,7023
    cla*            units;          // unit clausesunits146,7077
    int*            model;          // If problem is solved, this vector contains the model (contains: lbool).model147,7129
    veci            tagged;         // (contains: var)tagged149,7241
    veci            stack;          // (contains: var)stack150,7296
    veci            order;          // Variable order. (heap) (contains: var)order151,7351
    veci            trail_lim;      // Separator indices for different decision levels in 'trail'. (contains: int)trail_lim152,7429
    veci            temp_clause;    // temporary storage for a CNF clausetemp_clause153,7544
    veci            conf_final;     // If problem is unsatisfiable (possibly under assumptions),conf_final154,7618
    veci            mark_levels;    // temporary storage for labeled levelsmark_levels156,7832
    veci            min_lit_order;  // ordering of removable literalsmin_lit_order157,7908
    veci            min_step_order; // ordering of resolution stepsmin_step_order158,7978
    veci            learnt_live;    // remaining clauses after reduce DBlearnt_live159,8046
    Vec_Set_t *     pPrf1;          // sequence of proof recordspPrf1162,8141
    veci            temp_proof;     // temporary place to store proofstemp_proof163,8206
    int             hLearntLast;    // in proof-logging mode, the ID of the final conflict clause (conf_final)hLearntLast164,8277
    int             hProofLast;     // in proof-logging mode, the ID of the final conflict clause (conf_final)hProofLast165,8388
    Prf_Man_t *     pPrf2;          // another proof managerpPrf2166,8499
    double          dPrfMemory;     // memory used by the proof-loggerdPrfMemory167,8560
    Int2_Man_t *    pInt2;          // interpolation managerpInt2168,8631
    int             tempInter;      // temporary storage for the interpolanttempInter169,8692
    stats_t         stats;stats172,8788
    ABC_INT64_T     nConfLimit;     // external limit on the number of conflictsnConfLimit173,8815
    ABC_INT64_T     nInsLimit;      // external limit on the number of implicationsnInsLimit174,8896
    abctime         nRuntimeLimit;  // external limit on runtimenRuntimeLimit175,8980
static inline clause * clause2_read( sat_solver2 * s, cla h )                  { return Sat_MemClauseHand( &s->Mem, h ); }clause2_read178,9049
static inline int      clause2_proofid(sat_solver2* s, clause* c, int varA)    { return c->lrn ? (veci_begin(&s->claProofs)[clause_id(c)]<<2) | (varA<<1) : (clause_id(c)<<2) | (varA<<1) | 1; }clause2_proofid179,9172
static inline int   clause2_is_partA (sat_solver2* s, int h)                   { return clause2_read(s, h)->partA;       }clause2_is_partA182,9441
static inline void  clause2_set_partA(sat_solver2* s, int h, int partA)        { clause2_read(s, h)->partA = partA;      }clause2_set_partA183,9564
static inline int   clause2_id(sat_solver2* s, int h)                          { return clause_id(clause2_read(s, h));   }clause2_id184,9687
static inline void  clause2_set_id(sat_solver2* s, int h, int id)              { clause_set_id(clause2_read(s, h), id);  }clause2_set_id185,9810
static inline int sat_solver2_nvars(sat_solver2* s)sat_solver2_nvars190,10051
static inline int sat_solver2_nclauses(sat_solver2* s)sat_solver2_nclauses195,10128
static inline int sat_solver2_nlearnts(sat_solver2* s)sat_solver2_nlearnts200,10222
static inline int sat_solver2_nconflicts(sat_solver2* s)sat_solver2_nconflicts205,10316
static inline int sat_solver2_var_value( sat_solver2* s, int v ) sat_solver2_var_value210,10414
static inline int sat_solver2_var_literal( sat_solver2* s, int v ) sat_solver2_var_literal215,10562
static inline void sat_solver2_act_var_clear(sat_solver2* s) sat_solver2_act_var_clear220,10721
static inline int sat_solver2_final(sat_solver2* s, int ** ppArray)sat_solver2_final228,10888
static inline abctime sat_solver2_set_runtime_limit(sat_solver2* s, abctime Limit)sat_solver2_set_runtime_limit234,11026
static inline int sat_solver2_set_learntmax(sat_solver2* s, int nLearntMax)sat_solver2_set_learntmax241,11198
static inline void sat_solver2_bookmark(sat_solver2* s)sat_solver2_bookmark248,11358
static inline int sat_solver2_add_const( sat_solver2 * pSat, int iVar, int fCompl, int fMark, int Id )sat_solver2_add_const263,11774
static inline int sat_solver2_add_buffer( sat_solver2 * pSat, int iVarA, int iVarB, int fCompl, int fMark, int Id )sat_solver2_add_buffer275,12113
static inline int sat_solver2_add_and( sat_solver2 * pSat, int iVar, int iVar0, int iVar1, int fCompl0, int fCompl1, int fMark, int Id )sat_solver2_add_and294,12720
static inline int sat_solver2_add_xor( sat_solver2 * pSat, int iVarA, int iVarB, int iVarC, int fCompl, int fMark, int Id )sat_solver2_add_xor319,13553
static inline int sat_solver2_add_constraint( sat_solver2 * pSat, int iVar, int iVar2, int fCompl, int fMark, int Id )sat_solver2_add_constraint354,14733

src/sat/bsat/satStore.h,2072
#define ABC__sat__bsat__satStore_hABC__sat__bsat__satStore_h22,532
#define inline inline45,1347
#define STO_MAX(STO_MAX48,1408
typedef struct Sto_Cls_t_ Sto_Cls_t;Sto_Cls_t67,2376
struct Sto_Cls_t_Sto_Cls_t_68,2413
    Sto_Cls_t *     pNext;        // the next clausepNext70,2433
    Sto_Cls_t *     pNext0;       // the next 0-watchpNext071,2486
    Sto_Cls_t *     pNext1;       // the next 1-watchpNext172,2540
    int             Id;           // the clause IDId73,2594
    unsigned        fA     :  1;  // belongs to AfA74,2645
    unsigned        fRoot  :  1;  // original clausefRoot75,2695
    unsigned        fVisit :  1;  // visited clausefVisit76,2748
    unsigned        nLits  : 24;  // the number of literalsnLits77,2800
    lit             pLits[0];     // literals of this clausepLits78,2860
typedef struct Sto_Man_t_ Sto_Man_t;Sto_Man_t81,2925
struct Sto_Man_t_Sto_Man_t_82,2962
    int             nVars;        // the number of variablesnVars85,3002
    int             nRoots;       // the number of root clausesnRoots86,3063
    int             nClauses;     // the number of all clausesnClauses87,3127
    int             nClausesA;    // the number of clauses of A nClausesA88,3190
    Sto_Cls_t *     pHead;        // the head clausepHead89,3255
    Sto_Cls_t *     pTail;        // the tail clausepTail90,3308
    Sto_Cls_t *     pEmpty;       // the empty clausepEmpty91,3361
    int             nChunkSize;   // the number of bytes in a chunknChunkSize93,3440
    int             nChunkUsed;   // the number of bytes used in the last chunknChunkUsed94,3508
    char *          pChunkLast;   // the last memory chunkpChunkLast95,3588
#define Sto_ManForEachClause(Sto_ManForEachClause99,3684
#define Sto_ManForEachClauseRoot(Sto_ManForEachClauseRoot100,3778
typedef struct Int_Man_t_ Int_Man_t;Int_Man_t123,5019
typedef struct Inta_Man_t_ Inta_Man_t;Inta_Man_t130,5406
typedef struct Intb_Man_t_ Intb_Man_t;Intb_Man_t136,5741
typedef struct Intp_Man_t_ Intp_Man_t;Intp_Man_t142,6056

src/sat/bsat/satClause.h,7070
#define ABC__sat__bsat__satMem_hABC__sat__bsat__satMem_h22,550
#define LEARNT_MAX_START_DEFAULT LEARNT_MAX_START_DEFAULT37,1125
#define LEARNT_MAX_INCRE_DEFAULT LEARNT_MAX_INCRE_DEFAULT38,1165
#define LEARNT_MAX_RATIO_DEFAULT LEARNT_MAX_RATIO_DEFAULT39,1205
typedef struct clause_t clause;clause48,1606
struct clause_tclause_t49,1638
    unsigned   lrn   :   1;lrn51,1656
    unsigned   mark  :   1;mark52,1684
    unsigned   partA :   1;partA53,1712
    unsigned   lbd   :   8;lbd54,1740
    unsigned   size  :  21;size55,1768
    lit        lits[0];lits56,1796
typedef struct Sat_Mem_t_ Sat_Mem_t;Sat_Mem_t70,2251
struct Sat_Mem_t_Sat_Mem_t_71,2288
    int                 nEntries[2];  // entry countnEntries73,2308
    int                 BookMarkH[2]; // bookmarks for handlesBookMarkH74,2361
    int                 BookMarkE[2]; // bookmarks for entriesBookMarkE75,2424
    int                 iPage[2];     // current memory pageiPage76,2487
    int                 nPageSize;    // page log size in terms of intsnPageSize77,2548
    unsigned            uPageMask;    // page maskuPageMask78,2620
    unsigned            uLearnedMask; // learned maskuLearnedMask79,2671
    int                 nPagesAlloc;  // page count allocatednPagesAlloc80,2725
    int **              pPages;       // page pointerspPages81,2787
static inline int       Sat_MemLimit( int * p )                      { return p[0];                                 }Sat_MemLimit84,2847
static inline int       Sat_MemIncLimit( int * p, int nInts )        { return p[0] += nInts;                        }Sat_MemIncLimit85,2965
static inline void      Sat_MemWriteLimit( int * p, int nInts )      { p[0] = nInts;                                }Sat_MemWriteLimit86,3083
static inline int       Sat_MemHandPage( Sat_Mem_t * p, cla h )      { return h >> p->nPageSize;                    }Sat_MemHandPage88,3202
static inline int       Sat_MemHandShift( Sat_Mem_t * p, cla h )     { return h & p->uPageMask;                     }Sat_MemHandShift89,3320
static inline int       Sat_MemIntSize( int size, int lrn )          { return 2*((size + 2 + lrn)/2);               }Sat_MemIntSize92,3559
static inline int       Sat_MemClauseSize( clause * p )              { return Sat_MemIntSize(p->size, p->lrn);      }Sat_MemClauseSize93,3677
static inline int       Sat_MemClauseSize2( clause * p )             { return Sat_MemIntSize(p->size, 1);           }Sat_MemClauseSize294,3795
static inline clause *  Sat_MemClause( Sat_Mem_t * p, int i, int k ) { assert( k ); return (clause *)(p->pPages[i] + k);         }Sat_MemClause97,4091
static inline clause *  Sat_MemClauseHand( Sat_Mem_t * p, cla h )    { return h ? Sat_MemClause( p, Sat_MemHandPage(p, h), Sat_MemHandShift(p, h) ) : NULL;                  }Sat_MemClauseHand99,4531
static inline int       Sat_MemEntryNum( Sat_Mem_t * p, int lrn )    { return p->nEntries[lrn];                                                                              }Sat_MemEntryNum100,4706
static inline cla       Sat_MemHand( Sat_Mem_t * p, int i, int k )   { return (i << p->nPageSize) | k;                                                                       }Sat_MemHand102,4882
static inline cla       Sat_MemHandCurrent( Sat_Mem_t * p, int lrn ) { return (p->iPage[lrn] << p->nPageSize) | Sat_MemLimit( p->pPages[p->iPage[lrn]] );                    }Sat_MemHandCurrent103,5057
static inline int       Sat_MemClauseUsed( Sat_Mem_t * p, cla h )    { return h < p->BookMarkH[(h & p->uLearnedMask) > 0];                                                   }Sat_MemClauseUsed105,5233
static inline double    Sat_MemMemoryHand( Sat_Mem_t * p, cla h )    { return 1.0 * ((Sat_MemHandPage(p, h) + 2)/2 * (1 << (p->nPageSize+2)) + Sat_MemHandShift(p, h) * 4);  }Sat_MemMemoryHand107,5409
static inline double    Sat_MemMemoryUsed( Sat_Mem_t * p, int lrn )  { return Sat_MemMemoryHand( p, Sat_MemHandCurrent(p, lrn) );                                            }Sat_MemMemoryUsed108,5584
static inline double    Sat_MemMemoryAllUsed( Sat_Mem_t * p )        { return Sat_MemMemoryUsed( p, 0 ) + Sat_MemMemoryUsed( p, 1 );                                         }Sat_MemMemoryAllUsed109,5759
static inline double    Sat_MemMemoryAll( Sat_Mem_t * p )            { return 1.0 * (p->iPage[0] + p->iPage[1] + 2) * (1 << (p->nPageSize+2));                               }Sat_MemMemoryAll110,5934
#define Sat_MemForEachClause(Sat_MemForEachClause118,6240
#define Sat_MemForEachClause2(Sat_MemForEachClause2123,6529
#define Sat_MemForEachLearned(Sat_MemForEachLearned127,6781
static inline int      clause_from_lit( lit l )                     { return l + l + 1;                            }clause_from_lit139,7439
static inline int      clause_is_lit( cla h )                       { return (h & 1);                              }clause_is_lit140,7556
static inline lit      clause_read_lit( cla h )                     { return (lit)(h >> 1);                        }clause_read_lit141,7673
static inline int      clause_learnt_h( Sat_Mem_t * p, cla h )      { return (h & p->uLearnedMask) > 0;            }clause_learnt_h143,7791
static inline int      clause_learnt( clause * c )                  { return c->lrn;                               }clause_learnt144,7908
static inline int      clause_id( clause * c )                      { return c->lits[c->size];                     }clause_id145,8025
static inline void     clause_set_id( clause * c, int id )          { c->lits[c->size] = id;                       }clause_set_id146,8142
static inline int      clause_size( clause * c )                    { return c->size;                              }clause_size147,8259
static inline lit *    clause_begin( clause * c )                   { return c->lits;                              }clause_begin148,8376
static inline lit *    clause_end( clause * c )                     { return c->lits + c->size;                    }clause_end149,8493
static inline void     clause_print_( clause * c )               clause_print_150,8610
static inline int Sat_MemCountL( Sat_Mem_t * p )Sat_MemCountL174,9339
static inline void Sat_MemAlloc_( Sat_Mem_t * p, int nPageSize )Sat_MemAlloc_194,9746
static inline Sat_Mem_t * Sat_MemAlloc( int nPageSize )Sat_MemAlloc210,10408
static inline void Sat_MemRestart( Sat_Mem_t * p )Sat_MemRestart229,10809
static inline void Sat_MemBookMark( Sat_Mem_t * p )Sat_MemBookMark250,11286
static inline void Sat_MemRollBack( Sat_Mem_t * p )Sat_MemRollBack257,11518
static inline void Sat_MemFree_( Sat_Mem_t * p )Sat_MemFree_278,12187
static inline void Sat_MemFree( Sat_Mem_t * p )Sat_MemFree285,12355
static inline int Sat_MemAppend( Sat_Mem_t * p, int * pArray, int nSize, int lrn, int fPlus1 )Sat_MemAppend302,12730
static inline void Sat_MemShrink( Sat_Mem_t * p, int h, int lrn )Sat_MemShrink347,14325
static inline int Sat_MemCompactLearned( Sat_Mem_t * p, int fDoMove )Sat_MemCompactLearned367,14922

src/sat/bsat/satInterB.c,6684
static const lit    LIT_UNDEF = 0xffffffff;LIT_UNDEF37,899
struct Intb_Man_t_Intb_Man_t_40,969
    Sto_Man_t *     pCnf;         // the set of CNF clauses for A and BpCnf43,1021
    Vec_Int_t *     vVarsAB;      // the array of global variablesvVarsAB44,1093
    int             fVerbose;     // verbosiness flagfVerbose46,1186
    int             fProofVerif;  // verifies the prooffProofVerif47,1240
    int             fProofWrite;  // writes the proof filefProofWrite48,1296
    int             nVarsAlloc;   // the allocated size of var arraysnVarsAlloc49,1355
    int             nClosAlloc;   // the allocated size of clause arraysnClosAlloc50,1425
    int             nRootSize;    // the number of root level assignmentsnRootSize52,1518
    int             nTrailSize;   // the number of assignments made nTrailSize53,1592
    lit *           pTrail;       // chronological order of assignments (size nVars)pTrail54,1661
    lit *           pAssigns;     // assignments by variable (size nVars) pAssigns55,1746
    char *          pSeens;       // temporary mark (size nVars)pSeens56,1821
    Sto_Cls_t **    pReasons;     // reasons for each assignment (size nVars)          pReasons57,1886
    Sto_Cls_t **    pWatches;     // watched clauses for each literal (size 2*nVars)          pWatches58,1974
    Aig_Man_t *     pAig;         // the AIG manager for recording the interpolantpAig60,2095
    int *           pVarTypes;    // variable type (size nVars) [1=A, 0=B, <0=AB]pVarTypes61,2178
    Aig_Obj_t **    pInters;      // storage for interpolants as truth tables (size nClauses)pInters62,2260
    int             nIntersAlloc; // the allocated size of truth table arraynIntersAlloc63,2354
    int             Counter;      // counter of resolved clausesCounter65,2454
    int *           pProofNums;   // the proof numbers for each clause (size nClauses)pProofNums66,2519
    FILE *          pFile;        // the file for proof recordingpFile67,2606
    lit *           pResLits;     // the literals of the resolvent   pResLits69,2701
    int             nResLits;     // the number of literals of the resolventnResLits70,2771
    int             nResLitsAlloc;// the number of literals of the resolventnResLitsAlloc71,2848
    abctime         timeBcp;      // the runtime for BCPtimeBcp73,2946
    abctime         timeTrace;    // the runtime of trace constructiontimeTrace74,3003
    abctime         timeTotal;    // the total runtime of interpolationtimeTotal75,3074
static inline Aig_Obj_t ** Intb_ManAigRead( Intb_Man_t * pMan, Sto_Cls_t * pCls )                   { return pMan->pInters + pCls->Id;          }Intb_ManAigRead79,3204
static inline void         Intb_ManAigClear( Intb_Man_t * pMan, Aig_Obj_t ** p )                    { *p = Aig_ManConst0(pMan->pAig);           }Intb_ManAigClear80,3350
static inline void         Intb_ManAigFill( Intb_Man_t * pMan, Aig_Obj_t ** p )                     { *p = Aig_ManConst1(pMan->pAig);           }Intb_ManAigFill81,3496
static inline void         Intb_ManAigCopy( Intb_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )     { *p = *q;                                  }Intb_ManAigCopy82,3642
static inline void         Intb_ManAigAnd( Intb_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )      { *p = Aig_And(pMan->pAig, *p, *q);         }Intb_ManAigAnd83,3788
static inline void         Intb_ManAigOr( Intb_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )       { *p = Aig_Or(pMan->pAig, *p, *q);          }Intb_ManAigOr84,3934
static inline void         Intb_ManAigOrNot( Intb_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )    { *p = Aig_Or(pMan->pAig, *p, Aig_Not(*q)); }Intb_ManAigOrNot85,4080
static inline void         Intb_ManAigOrVar( Intb_Man_t * pMan, Aig_Obj_t ** p, int v )             { *p = Aig_Or(pMan->pAig, *p, Aig_IthVar(pMan->pAig, v));          }Intb_ManAigOrVar86,4226
static inline void         Intb_ManAigOrNotVar( Intb_Man_t * pMan, Aig_Obj_t ** p, int v )          { *p = Aig_Or(pMan->pAig, *p, Aig_Not(Aig_IthVar(pMan->pAig, v))); }Intb_ManAigOrNotVar87,4395
static inline void         Intb_ManAigMux0( Intb_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q, int v){ *p = Aig_Mux(pMan->pAig, Aig_IthVar(pMan->pAig, v), *q, *p);     }Intb_ManAigMux088,4564
static inline void         Intb_ManAigMux1( Intb_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q, int v){ *p = Aig_Mux(pMan->pAig, Aig_IthVar(pMan->pAig, v), *p, *q);     }Intb_ManAigMux189,4734
static inline int          Intb_ManProofGet( Intb_Man_t * p, Sto_Cls_t * pCls )                  { return p->pProofNums[pCls->Id];           }Intb_ManProofGet92,4947
static inline void         Intb_ManProofSet( Intb_Man_t * p, Sto_Cls_t * pCls, int n )           { p->pProofNums[pCls->Id] = n;              }Intb_ManProofSet93,5090
Intb_Man_t * Intb_ManAlloc()Intb_ManAlloc110,5711
int Intb_ManGlobalVars( Intb_Man_t * p )Intb_ManGlobalVars136,6367
void Intb_ManResize( Intb_Man_t * p )Intb_ManResize192,7881
void Intb_ManFree( Intb_Man_t * p )Intb_ManFree255,10173
void Intb_ManPrintClause( Intb_Man_t * p, Sto_Cls_t * pClause )Intb_ManPrintClause289,10898
void Intb_ManPrintResolvent( lit * pResLits, int nResLits )Intb_ManPrintResolvent309,11437
void Intb_ManPrintInterOne( Intb_Man_t * p, Sto_Cls_t * pClause )Intb_ManPrintInterOne329,11912
static inline void Intb_ManWatchClause( Intb_Man_t * p, Sto_Cls_t * pClause, lit Lit )Intb_ManWatchClause349,12406
static inline int Intb_ManEnqueue( Intb_Man_t * p, lit Lit, Sto_Cls_t * pReason )Intb_ManEnqueue374,13051
static inline void Intb_ManCancelUntil( Intb_Man_t * p, int Level )Intb_ManCancelUntil397,13677
static inline Sto_Cls_t * Intb_ManPropagateOne( Intb_Man_t * p, lit Lit )Intb_ManPropagateOne423,14297
Sto_Cls_t * Intb_ManPropagate( Intb_Man_t * p, int Start )Intb_ManPropagate492,16500
void Intb_ManProofWriteOne( Intb_Man_t * p, Sto_Cls_t * pClause )Intb_ManProofWriteOne522,17172
int Intb_ManGetGlobalVar( Intb_Man_t * p, int Var )Intb_ManGetGlobalVar547,17839
int Intb_ManProofTraceOne( Intb_Man_t * p, Sto_Cls_t * pConflict, Sto_Cls_t * pFinal )Intb_ManProofTraceOne568,18357
int Intb_ManProofRecordOne( Intb_Man_t * p, Sto_Cls_t * pClause )Intb_ManProofRecordOne762,26083
int Intb_ManProcessRoots( Intb_Man_t * p )Intb_ManProcessRoots867,29189
void Intb_ManPrepareInter( Intb_Man_t * p )Intb_ManPrepareInter940,31397
void * Intb_ManInterpolate( Intb_Man_t * p, Sto_Man_t * pCnf, void * vVarsAB, int fVerbose )Intb_ManInterpolate987,33060
Aig_Man_t * Intb_ManDeriveClauses( Intb_Man_t * pMan, Sto_Man_t * pCnf, int fClausesA )Intb_ManDeriveClauses1076,35412

src/sat/bsat/satInterA.c,5991
static const lit    LIT_UNDEF = 0xffffffff;LIT_UNDEF37,899
struct Inta_Man_t_Inta_Man_t_40,969
    Sto_Man_t *     pCnf;         // the set of CNF clauses for A and BpCnf43,1021
    Vec_Int_t *     vVarsAB;      // the array of global variablesvVarsAB44,1093
    int             fVerbose;     // verbosiness flagfVerbose46,1186
    int             fProofVerif;  // verifies the prooffProofVerif47,1240
    int             fProofWrite;  // writes the proof filefProofWrite48,1296
    int             nVarsAlloc;   // the allocated size of var arraysnVarsAlloc49,1355
    int             nClosAlloc;   // the allocated size of clause arraysnClosAlloc50,1425
    int             nRootSize;    // the number of root level assignmentsnRootSize52,1518
    int             nTrailSize;   // the number of assignments made nTrailSize53,1592
    lit *           pTrail;       // chronological order of assignments (size nVars)pTrail54,1661
    lit *           pAssigns;     // assignments by variable (size nVars) pAssigns55,1746
    char *          pSeens;       // temporary mark (size nVars)pSeens56,1821
    Sto_Cls_t **    pReasons;     // reasons for each assignment (size nVars)          pReasons57,1886
    Sto_Cls_t **    pWatches;     // watched clauses for each literal (size 2*nVars)          pWatches58,1974
    Aig_Man_t *     pAig;         // the AIG manager for recording the interpolantpAig60,2095
    int *           pVarTypes;    // variable type (size nVars) [1=A, 0=B, <0=AB]pVarTypes61,2178
    Aig_Obj_t **    pInters;      // storage for interpolants as truth tables (size nClauses)pInters62,2260
    int             nIntersAlloc; // the allocated size of truth table arraynIntersAlloc63,2354
    int             Counter;      // counter of resolved clausesCounter65,2454
    int *           pProofNums;   // the proof numbers for each clause (size nClauses)pProofNums66,2519
    FILE *          pFile;        // the file for proof recordingpFile67,2606
    Vec_Int_t *     vResLits;vResLits69,2701
    abctime         timeBcp;      // the runtime for BCPtimeBcp71,2752
    abctime         timeTrace;    // the runtime of trace constructiontimeTrace72,2809
    abctime         timeTotal;    // the total runtime of interpolationtimeTotal73,2880
static inline Aig_Obj_t ** Inta_ManAigRead( Inta_Man_t * pMan, Sto_Cls_t * pCls )                   { return pMan->pInters + pCls->Id;          }Inta_ManAigRead77,3010
static inline void         Inta_ManAigClear( Inta_Man_t * pMan, Aig_Obj_t ** p )                    { *p = Aig_ManConst0(pMan->pAig);           }Inta_ManAigClear78,3156
static inline void         Inta_ManAigFill( Inta_Man_t * pMan, Aig_Obj_t ** p )                     { *p = Aig_ManConst1(pMan->pAig);           }Inta_ManAigFill79,3302
static inline void         Inta_ManAigCopy( Inta_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )     { *p = *q;                                  }Inta_ManAigCopy80,3448
static inline void         Inta_ManAigAnd( Inta_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )      { *p = Aig_And(pMan->pAig, *p, *q);         }Inta_ManAigAnd81,3594
static inline void         Inta_ManAigOr( Inta_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )       { *p = Aig_Or(pMan->pAig, *p, *q);          }Inta_ManAigOr82,3740
static inline void         Inta_ManAigOrNot( Inta_Man_t * pMan, Aig_Obj_t ** p, Aig_Obj_t ** q )    { *p = Aig_Or(pMan->pAig, *p, Aig_Not(*q)); }Inta_ManAigOrNot83,3886
static inline void         Inta_ManAigOrVar( Inta_Man_t * pMan, Aig_Obj_t ** p, int v )             { *p = Aig_Or(pMan->pAig, *p, Aig_IthVar(pMan->pAig, v));          }Inta_ManAigOrVar84,4032
static inline void         Inta_ManAigOrNotVar( Inta_Man_t * pMan, Aig_Obj_t ** p, int v )          { *p = Aig_Or(pMan->pAig, *p, Aig_Not(Aig_IthVar(pMan->pAig, v))); }Inta_ManAigOrNotVar85,4201
static inline int          Inta_ManProofGet( Inta_Man_t * p, Sto_Cls_t * pCls )                  { return p->pProofNums[pCls->Id];           }Inta_ManProofGet88,4413
static inline void         Inta_ManProofSet( Inta_Man_t * p, Sto_Cls_t * pCls, int n )           { p->pProofNums[pCls->Id] = n;              }Inta_ManProofSet89,4556
Inta_Man_t * Inta_ManAlloc()Inta_ManAlloc106,5177
int Inta_ManGlobalVars( Inta_Man_t * p )Inta_ManGlobalVars131,5787
void Inta_ManResize( Inta_Man_t * p )Inta_ManResize187,7301
void Inta_ManFree( Inta_Man_t * p )Inta_ManFree250,9593
void Inta_ManPrintClause( Inta_Man_t * p, Sto_Cls_t * pClause )Inta_ManPrintClause284,10321
void Inta_ManPrintResolvent( Vec_Int_t * vResLits )Inta_ManPrintResolvent304,10860
void Inta_ManPrintInterOne( Inta_Man_t * p, Sto_Cls_t * pClause )Inta_ManPrintInterOne324,11337
static inline void Inta_ManWatchClause( Inta_Man_t * p, Sto_Cls_t * pClause, lit Lit )Inta_ManWatchClause344,11831
static inline int Inta_ManEnqueue( Inta_Man_t * p, lit Lit, Sto_Cls_t * pReason )Inta_ManEnqueue369,12476
static inline void Inta_ManCancelUntil( Inta_Man_t * p, int Level )Inta_ManCancelUntil392,13102
static inline Sto_Cls_t * Inta_ManPropagateOne( Inta_Man_t * p, lit Lit )Inta_ManPropagateOne418,13722
Sto_Cls_t * Inta_ManPropagate( Inta_Man_t * p, int Start )Inta_ManPropagate487,15925
void Inta_ManProofWriteOne( Inta_Man_t * p, Sto_Cls_t * pClause )Inta_ManProofWriteOne517,16597
int Inta_ManProofTraceOne( Inta_Man_t * p, Sto_Cls_t * pConflict, Sto_Cls_t * pFinal )Inta_ManProofTraceOne542,17264
int Inta_ManProofRecordOne( Inta_Man_t * p, Sto_Cls_t * pClause )Inta_ManProofRecordOne719,23984
int Inta_ManProcessRoots( Inta_Man_t * p )Inta_ManProcessRoots824,27090
void Inta_ManPrepareInter( Inta_Man_t * p )Inta_ManPrepareInter897,29298
void * Inta_ManInterpolate( Inta_Man_t * p, Sto_Man_t * pCnf, abctime TimeToStop, void * vVarsAB, int fVerbose )Inta_ManInterpolate944,30961
Aig_Man_t * Inta_ManDeriveClauses( Inta_Man_t * pMan, Sto_Man_t * pCnf, int fClausesA )Inta_ManDeriveClauses1051,33817

src/sat/bsat/satMem.h,262
#define ABC__sat__bsat__satMem_hABC__sat__bsat__satMem_h22,550
typedef struct Sat_MmFixed_t_ Sat_MmFixed_t;Sat_MmFixed_t40,1307
typedef struct Sat_MmFlex_t_  Sat_MmFlex_t;Sat_MmFlex_t41,1352
typedef struct Sat_MmStep_t_  Sat_MmStep_t;Sat_MmStep_t42,1396

src/sat/bsat2/Alg.h,443
#define Minisat_Alg_hMinisat_Alg_h22,1343
namespace Minisat {Minisat26,1384
static inline void remove(V& ts, const T& t)remove36,1719
static inline bool find(V& ts, const T& t)find47,1949
static inline void copy(const T& from, T& to)copy61,2278
static inline void copy(const vec<T>& from, vec<T>& to, bool append = false)copy68,2381
static inline void append(const vec<T>& from, vec<T>& to){ copy(from, to, true); }append79,2620

src/sat/bsat2/System.h,191
#define Minisat_System_hMinisat_System_h22,1346
namespace Minisat {Minisat32,1552
static inline double Minisat::cpuTime(void) { return (double)clock() / CLOCKS_PER_SEC; }cpuTime46,2053

src/sat/bsat2/Vec.h,2602
#define Minisat_Vec_hMinisat_Vec_h22,1343
namespace Minisat {Minisat30,1445
class vec {vec38,1717
    T*  data;data39,1729
    int sz;sz40,1743
    int cap;cap41,1755
    vec<T>&  operator = (vec<T>& other) { assert(0); return *this; }operator =44,1811
             vec        (vec<T>& other) { assert(0); }vec45,1880
    static inline int  imax   (int x, int y) { int mask = (y-x) >> (sizeof(int)*8-1); return (x&mask) + (y&(~mask)); }imax48,1995
    static inline void nextCap(int& cap){ cap += ((cap >> 1) + 2) & ~1; }nextCap50,2190
    vec()                       : data(NULL) , sz(0)   , cap(0)    { }vec54,2294
    explicit vec(int size)      : data(NULL) , sz(0)   , cap(0)    { growTo(size); }vec55,2365
    vec(int size, const T& pad) : data(NULL) , sz(0)   , cap(0)    { growTo(size, pad); }vec56,2450
   ~vec()                                                          { clear(true); }~vec57,2540
    operator T*       (void)           { return data; }operator T*60,2658
    int      size     (void) const     { return sz; }size63,2739
    void     shrink   (int nelems)     { assert(nelems <= sz); for (int i = 0; i < nelems; i++) sz--, data[sz].~T(); }shrink64,2793
    void     shrink_  (int nelems)     { assert(nelems <= sz); sz -= nelems; }shrink_65,2912
    int      capacity (void) const     { return cap; }capacity66,2991
    void     push  (void)              { if (sz == cap) capacity(sz+1); new (&data[sz]) T(); sz++; }push73,3236
    void     push  (const T& elem)     { if (sz == cap) capacity(sz+1); data[sz++] = elem; }push74,3337
    void     push_ (const T& elem)     { assert(sz < cap); data[sz++] = elem; }push_75,3430
    void     pop   (void)              { assert(sz > 0); sz--, data[sz].~T(); }pop76,3510
    const T& last  (void) const        { return data[sz-1]; }last82,3914
    T&       last  (void)              { return data[sz-1]; }last83,3976
    const T& operator [] (int index) const { return data[index]; }operator []86,4064
    T&       operator [] (int index)       { return data[index]; }operator []87,4131
    void copyTo(vec<T>& copy) const { copy.clear(); copy.growTo(sz); for (int i = 0; i < sz; i++) copy[i] = data[i]; }copyTo90,4241
    void moveTo(vec<T>& dest) { dest.clear(true); dest.data = data; dest.sz = sz; dest.cap = cap; data = NULL; sz = 0; cap = 0; }moveTo91,4360
void vec<T>::capacity(int min_cap) {capacity96,4513
void vec<T>::growTo(int size, const T& pad) {growTo105,4867
void vec<T>::growTo(int size) {growTo113,5049
void vec<T>::clear(bool dealloc) {clear121,5222

src/sat/bsat2/Dimacs.h,320
#define Minisat_Dimacs_hMinisat_Dimacs_h22,1346
namespace Minisat {Minisat29,1442
static void readClause(B& in, Solver& S, vec<Lit>& lits) {readClause35,1614
static void parse_DIMACS_main(B& in, Solver& S) {parse_DIMACS_main48,1990
static void parse_DIMACS(gzFile input_stream, Solver& S) {parse_DIMACS82,3047

src/sat/bsat2/Sort.h,646
#define Minisat_Sort_hMinisat_Sort_h22,1344
namespace Minisat {Minisat30,1525
struct LessThan_default {LessThan_default33,1564
    bool operator () (T x, T y) { return x < y; }operator ()34,1590
void selectionSort(T* array, int size, LessThan lt)selectionSort39,1680
template <class T> static inline void selectionSort(T* array, int size) {selectionSort53,2032
void sort(T* array, int size, LessThan lt)sort57,2199
template <class T> static inline void sort(T* array, int size) {sort81,2748
template <class T, class LessThan> void sort(vec<T>& v, LessThan lt) {sort89,2980
template <class T> void sort(vec<T>& v) {sort91,3084

src/sat/bsat2/pstdint.h,10921
#define _PSTDINT_H_INCLUDED_PSTDINT_H_INCLUDED198,8917
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER201,9047
#   define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER204,9125
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER208,9209
#   define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER211,9288
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER215,9373
#  define PRINTF_INTMAX_MODIFIER PRINTF_INTMAX_MODIFIER218,9449
#  define PRINTF_INT64_HEX_WIDTH PRINTF_INT64_HEX_WIDTH221,9544
#  define PRINTF_INT32_HEX_WIDTH PRINTF_INT32_HEX_WIDTH224,9622
#  define PRINTF_INT16_HEX_WIDTH PRINTF_INT16_HEX_WIDTH227,9699
#  define PRINTF_INT8_HEX_WIDTH PRINTF_INT8_HEX_WIDTH230,9775
#  define PRINTF_INT64_DEC_WIDTH PRINTF_INT64_DEC_WIDTH233,9851
#  define PRINTF_INT32_DEC_WIDTH PRINTF_INT32_DEC_WIDTH236,9929
#  define PRINTF_INT16_DEC_WIDTH PRINTF_INT16_DEC_WIDTH239,10007
#  define PRINTF_INT8_DEC_WIDTH PRINTF_INT8_DEC_WIDTH242,10083
#  define PRINTF_INTMAX_HEX_WIDTH PRINTF_INTMAX_HEX_WIDTH245,10160
#  define PRINTF_INTMAX_DEC_WIDTH PRINTF_INTMAX_DEC_WIDTH248,10258
#   define INT64_C(INT64_C258,10558
#   define UINT64_C(UINT64_C261,10647
#   define INT32_C(INT32_C264,10737
#   define UINT32_C(UINT32_C267,10826
#   define INT16_C(INT16_C270,10916
#   define UINT16_C(UINT16_C273,10979
#   define INT8_C(INT8_C276,11040
#   define UINT8_C(UINT8_C279,11101
#   define UINT64_MAX UINT64_MAX282,11165
#   define INT64_MAX INT64_MAX285,11248
#   define UINT32_MAX UINT32_MAX288,11329
#   define INT32_MAX INT32_MAX291,11401
#   define INTMAX_MAX INTMAX_MAX294,11472
#   define INTMAX_MIN INTMAX_MIN297,11541
#define _PSTDINT_H_INCLUDED_PSTDINT_H_INCLUDED303,11626
# define SIZE_MAX SIZE_MAX306,11672
# define UINT8_MAX UINT8_MAX316,11889
    typedef unsigned char uint8_t;uint8_t320,12018
#   define UINT8_C(UINT8_C321,12053
# define INT8_MAX INT8_MAX328,12164
# define INT8_MIN INT8_MIN331,12211
    typedef signed char int8_t;int8_t335,12344
#   define INT8_C(INT8_C336,12376
# define UINT16_MAX UINT16_MAX343,12487
  typedef unsigned int uint16_t;uint16_t347,12620
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER349,12684
# define UINT16_C(UINT16_C351,12727
  typedef unsigned short uint16_t;uint16_t353,12797
# define UINT16_C(UINT16_C354,12832
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER356,12901
# define INT16_MAX INT16_MAX364,13016
# define INT16_MIN INT16_MIN367,13067
  typedef signed int int16_t;int16_t371,13204
# define INT16_C(INT16_C372,13234
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER374,13301
  typedef signed short int16_t;int16_t377,13374
# define INT16_C(INT16_C378,13406
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER380,13473
# define UINT32_MAX UINT32_MAX388,13589
  typedef unsigned long uint32_t;uint32_t392,13731
# define UINT32_C(UINT32_C393,13765
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER395,13825
  typedef unsigned int uint32_t;uint32_t398,13900
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER400,13964
# define UINT32_C(UINT32_C402,14007
  typedef unsigned short uint32_t;uint32_t404,14067
# define UINT32_C(UINT32_C405,14102
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER407,14177
# define INT32_MAX INT32_MAX415,14291
# define INT32_MIN INT32_MIN418,14349
  typedef signed long int32_t;int32_t422,14491
# define INT32_C(INT32_C423,14522
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER425,14580
  typedef signed int int32_t;int32_t428,14653
# define INT32_C(INT32_C429,14683
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER431,14736
  typedef signed short int32_t;int32_t434,14809
# define INT32_C(INT32_C435,14841
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER437,14906
#undef stdint_int64_definedstdint_int64_defined451,15219
#  define stdint_int64_definedstdint_int64_defined454,15395
   typedef long long int64_t;int64_t455,15426
   typedef unsigned long long uint64_t;uint64_t456,15456
#  define UINT64_C(UINT64_C457,15496
#  define  INT64_C(INT64_C458,15527
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER460,15589
#  define stdint_int64_definedstdint_int64_defined467,15711
   __extension__ typedef long long int64_t;int64_t468,15742
   __extension__ typedef unsigned long long uint64_t;uint64_t469,15786
#  define UINT64_C(UINT64_C470,15840
#  define  INT64_C(INT64_C471,15871
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER473,15933
#  define stdint_int64_definedstdint_int64_defined476,16150
   typedef long long int64_t;int64_t477,16181
   typedef unsigned long long uint64_t;uint64_t478,16211
#  define UINT64_C(UINT64_C479,16251
#  define  INT64_C(INT64_C480,16282
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER482,16344
#  define stdint_int64_definedstdint_int64_defined485,16594
   typedef __int64 int64_t;int64_t486,16625
   typedef unsigned __int64 uint64_t;uint64_t487,16653
#  define UINT64_C(UINT64_C488,16691
#  define  INT64_C(INT64_C489,16723
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER491,16786
# define LONG_LONG_MAX LONG_LONG_MAX497,16900
# define ULONG_LONG_MAX ULONG_LONG_MAX500,16983
# define INT64_MAX INT64_MAX504,17093
# define INT64_MIN INT64_MIN507,17195
# define UINT64_MAX UINT64_MAX510,17299
# define PRINTF_INT64_HEX_WIDTH PRINTF_INT64_HEX_WIDTH518,17441
# define PRINTF_INT32_HEX_WIDTH PRINTF_INT32_HEX_WIDTH521,17516
# define PRINTF_INT16_HEX_WIDTH PRINTF_INT16_HEX_WIDTH524,17590
# define PRINTF_INT8_HEX_WIDTH PRINTF_INT8_HEX_WIDTH527,17663
# define PRINTF_INT64_DEC_WIDTH PRINTF_INT64_DEC_WIDTH531,17737
# define PRINTF_INT32_DEC_WIDTH PRINTF_INT32_DEC_WIDTH534,17812
# define PRINTF_INT16_DEC_WIDTH PRINTF_INT16_DEC_WIDTH537,17887
# define PRINTF_INT8_DEC_WIDTH PRINTF_INT8_DEC_WIDTH540,17960
  typedef int64_t intmax_t;intmax_t550,18227
  typedef uint64_t uintmax_t;uintmax_t551,18255
# define  INTMAX_MAX INTMAX_MAX552,18285
# define  INTMAX_MIN INTMAX_MIN553,18318
# define UINTMAX_MAX UINTMAX_MAX554,18351
# define UINTMAX_C(UINTMAX_C555,18384
# define  INTMAX_C(INTMAX_C556,18418
#   define PRINTF_INTMAX_MODIFIER PRINTF_INTMAX_MODIFIER558,18484
#  define PRINTF_INTMAX_HEX_WIDTH PRINTF_INTMAX_HEX_WIDTH561,18581
#  define PRINTF_INTMAX_DEC_WIDTH PRINTF_INTMAX_DEC_WIDTH564,18679
  typedef int32_t intmax_t;intmax_t567,18750
  typedef uint32_t uintmax_t;uintmax_t568,18778
# define  INTMAX_MAX INTMAX_MAX569,18808
# define UINTMAX_MAX UINTMAX_MAX570,18841
# define UINTMAX_C(UINTMAX_C571,18874
# define  INTMAX_C(INTMAX_C572,18908
#   define PRINTF_INTMAX_MODIFIER PRINTF_INTMAX_MODIFIER574,18974
#  define PRINTF_INTMAX_HEX_WIDTH PRINTF_INTMAX_HEX_WIDTH577,19071
#  define PRINTF_INTMAX_DEC_WIDTH PRINTF_INTMAX_DEC_WIDTH580,19169
  typedef   int8_t   int_least8_t;int_least8_t592,19539
  typedef  uint8_t  uint_least8_t;uint_least8_t593,19574
  typedef  int16_t  int_least16_t;int_least16_t594,19609
  typedef uint16_t uint_least16_t;uint_least16_t595,19644
  typedef  int32_t  int_least32_t;int_least32_t596,19679
  typedef uint32_t uint_least32_t;uint_least32_t597,19714
# define PRINTF_LEAST32_MODIFIER PRINTF_LEAST32_MODIFIER598,19749
# define PRINTF_LEAST16_MODIFIER PRINTF_LEAST16_MODIFIER599,19804
# define  UINT_LEAST8_MAX UINT_LEAST8_MAX600,19859
# define   INT_LEAST8_MAX INT_LEAST8_MAX601,19896
# define UINT_LEAST16_MAX UINT_LEAST16_MAX602,19933
# define  INT_LEAST16_MAX INT_LEAST16_MAX603,19970
# define UINT_LEAST32_MAX UINT_LEAST32_MAX604,20007
# define  INT_LEAST32_MAX INT_LEAST32_MAX605,20044
# define   INT_LEAST8_MIN INT_LEAST8_MIN606,20081
# define  INT_LEAST16_MIN INT_LEAST16_MIN607,20118
# define  INT_LEAST32_MIN INT_LEAST32_MIN608,20155
    typedef  int64_t  int_least64_t;int_least64_t610,20221
    typedef uint64_t uint_least64_t;uint_least64_t611,20258
#   define PRINTF_LEAST64_MODIFIER PRINTF_LEAST64_MODIFIER612,20295
#   define UINT_LEAST64_MAX UINT_LEAST64_MAX613,20352
#   define  INT_LEAST64_MAX INT_LEAST64_MAX614,20391
#   define  INT_LEAST64_MIN INT_LEAST64_MIN615,20430
#undef stdint_least_definedstdint_least_defined618,20484
typedef   int_least8_t   int_fast8_t;int_fast8_t631,21020
typedef  uint_least8_t  uint_fast8_t;uint_fast8_t632,21058
typedef  int_least16_t  int_fast16_t;int_fast16_t633,21096
typedef uint_least16_t uint_fast16_t;uint_fast16_t634,21134
typedef  int_least32_t  int_fast32_t;int_fast32_t635,21172
typedef uint_least32_t uint_fast32_t;uint_fast32_t636,21210
#define  UINT_FAST8_MAX UINT_FAST8_MAX637,21248
#define   INT_FAST8_MAX INT_FAST8_MAX638,21289
#define UINT_FAST16_MAX UINT_FAST16_MAX639,21330
#define  INT_FAST16_MAX INT_FAST16_MAX640,21371
#define UINT_FAST32_MAX UINT_FAST32_MAX641,21412
#define  INT_FAST32_MAX INT_FAST32_MAX642,21453
#define   INT_FAST8_MIN INT_FAST8_MIN643,21494
#define  INT_FAST16_MIN INT_FAST16_MIN644,21535
#define  INT_FAST32_MIN INT_FAST32_MIN645,21576
  typedef  int_least64_t  int_fast64_t;int_fast64_t647,21645
  typedef uint_least64_t uint_fast64_t;uint_fast64_t648,21685
# define UINT_FAST64_MAX UINT_FAST64_MAX649,21725
# define  INT_FAST64_MAX INT_FAST64_MAX650,21767
# define  INT_FAST64_MIN INT_FAST64_MIN651,21809
#undef stdint_int64_definedstdint_int64_defined654,21859
#  define WCHAR_MIN WCHAR_MIN664,22091
#  define WCHAR_MAX WCHAR_MAX667,22140
# define STDINT_H_UINTPTR_T_DEFINEDSTDINT_H_UINTPTR_T_DEFINED677,22385
#  define stdint_intptr_bits stdint_intptr_bits682,22578
#    define stdint_intptr_bits stdint_intptr_bits685,22732
#    define stdint_intptr_bits stdint_intptr_bits687,22774
#  define stdint_intptr_bits stdint_intptr_bits690,22905
#  define stdint_intptr_glue3_i(stdint_intptr_glue3_i698,23116
#  define stdint_intptr_glue3(stdint_intptr_glue3699,23164
#    define PRINTF_INTPTR_MODIFIER PRINTF_INTPTR_MODIFIER701,23266
#    define PTRDIFF_MAX PTRDIFF_MAX704,23398
#    define PTRDIFF_MIN PTRDIFF_MIN707,23518
#    define UINTPTR_MAX UINTPTR_MAX710,23638
#    define INTPTR_MAX INTPTR_MAX713,23758
#    define INTPTR_MIN INTPTR_MIN716,23877
#    define INTPTR_C(INTPTR_C719,23994
#    define UINTPTR_C(UINTPTR_C722,24113
  typedef stdint_intptr_glue3(uint,stdint_intptr_bits,_t) uintptr_t;uintptr_t724,24213
  typedef stdint_intptr_glue3( int,stdint_intptr_bits,_t)  intptr_t;intptr_t725,24282
  typedef ptrdiff_t intptr_t;intptr_t729,24476
# define STDINT_H_UINTPTR_T_DEFINEDSTDINT_H_UINTPTR_T_DEFINED731,24514
# define SIG_ATOMIC_MAX SIG_ATOMIC_MAX739,24661
#define glue3_aux(glue3_aux755,24989
#define glue3(glue3756,25026
#define DECLU(DECLU758,25065
#define DECLI(DECLI759,25147
#define DECL(DECL761,25228
#define TESTUMAX(TESTUMAX763,25274
int main () {main765,25428

src/sat/bsat2/Map.h,3360
#define Minisat_Map_hMinisat_Map_h21,1289
namespace Minisat {Minisat26,1352
template<class K> struct Hash  { uint32_t operator()(const K& k)               const { return hash(k);  } };Hash32,1510
template<class K> struct Hash  { uint32_t operator()(const K& k)               const { return hash(k);  } };operator ()32,1510
template<class K> struct Equal { bool     operator()(const K& k1, const K& k2) const { return k1 == k2; } };Equal33,1619
template<class K> struct Equal { bool     operator()(const K& k1, const K& k2) const { return k1 == k2; } };operator ()33,1619
template<class K> struct DeepHash  { uint32_t operator()(const K* k)               const { return hash(*k);  } };DeepHash35,1729
template<class K> struct DeepHash  { uint32_t operator()(const K* k)               const { return hash(*k);  } };operator ()35,1729
template<class K> struct DeepEqual { bool     operator()(const K* k1, const K* k2) const { return *k1 == *k2; } };DeepEqual36,1843
template<class K> struct DeepEqual { bool     operator()(const K* k1, const K* k2) const { return *k1 == *k2; } };operator ()36,1843
static inline uint32_t hash(uint32_t x){ return x; }hash38,1959
static inline uint32_t hash(uint64_t x){ return (uint32_t)x; }hash39,2012
static inline uint32_t hash(int32_t x) { return (uint32_t)x; }hash40,2075
static inline uint32_t hash(int64_t x) { return (uint32_t)x; }hash41,2138
static const int nprimes          = 25;nprimes48,2322
static const int primes [nprimes] = { 31, 73, 151, 313, 643, 1291, 2593, 5233, 10501, 21013, 42073, 84181, 168451, 337219, 674701, 1349473, 2699299, 5398891, 10798093, 21596719, 43193641, 86387383, 172775299, 345550609, 691101253 };primes49,2362
class Map {Map56,2804
    struct Pair { K key; D data; };Pair58,2825
    struct Pair { K key; D data; };key58,2825
    struct Pair { K key; D data; };data58,2825
    H          hash;hash61,2872
    E          equals;equals62,2893
    vec<Pair>* table;table64,2917
    int        cap;cap65,2939
    int        size;size66,2959
    Map<K,D,H,E>&  operator = (Map<K,D,H,E>& other) { assert(0); }operator =69,3023
                   Map        (Map<K,D,H,E>& other) { assert(0); }Map70,3090
    bool    checkCap(int new_size) const { return new_size > cap; }checkCap72,3158
    int32_t index  (const K& k) const { return hash(k) % cap; }index74,3227
    void   _insert (const K& k, const D& d) { _insert75,3291
    void    rehash () {rehash79,3440
    Map () : table(NULL), cap(0), size(0) {}Map102,4001
    Map (const H& h, const E& e) : hash(h), equals(e), table(NULL), cap(0), size(0){}Map103,4046
    ~Map () { delete [] table; }~Map104,4132
    const D& operator [] (const K& k) constoperator []107,4226
    D& operator [] (const K& k)operator []120,4622
    void insert (const K& k, const D& d) { if (checkCap(size+1)) rehash(); _insert(k, d); size++; }insert133,4992
    bool peek   (const K& k, D& d) const {peek134,5092
    bool has   (const K& k) const {has144,5395
    void remove(const K& k) {remove154,5707
    void clear  () {clear165,5988
    int  elems() const { return size; }elems171,6087
    int  bucket_count() const { return cap; }bucket_count172,6127
    void moveTo(Map& other){moveTo175,6247
    const vec<Pair>& bucket(int i) const { return table[i]; }bucket187,6534

src/sat/bsat2/Queue.h,1077
#define Minisat_Queue_hMinisat_Queue_h22,1345
namespace Minisat {Minisat26,1388
class Queue {Queue31,1528
    vec<T>  buf;buf32,1542
    int     first;first33,1559
    int     end;end34,1578
    typedef T Key;Key37,1604
    Queue() : buf(1), first(0), end(0) {}Queue39,1624
    void clear (bool dealloc = false) { buf.clear(dealloc); buf.growTo(1); first = end = 0; }clear41,1667
    int  size  () const { return (end >= first) ? end - first : end - first + buf.size(); }size42,1761
    const T& operator [] (int index) const  { assert(index >= 0); assert(index < size()); return buf[(first + index) % buf.size()]; }operator []44,1854
    T&       operator [] (int index)        { assert(index >= 0); assert(index < size()); return buf[(first + index) % buf.size()]; }operator []45,1988
    T    peek  () const { assert(first != end); return buf[first]; }peek47,2123
    void pop   () { assert(first != end); first++; if (first == buf.size()) first = 0; }pop48,2192
    void insert(T elem) {   // INVARIANT: buf[end] is always unusedinsert49,2281

src/sat/bsat2/Options.h,4026
#define Minisat_Options_hMinisat_Options_h21,1293
namespace Minisat {Minisat32,1462
class OptionOption48,2060
    const char* name;name51,2084
    const char* description;description52,2106
    const char* category;category53,2135
    const char* type_name;type_name54,2161
    static vec<Option*>& getOptionList () { static vec<Option*> options; return options; }getOptionList56,2189
    static const char*&  getUsageString() { static const char* usage_str; return usage_str; }getUsageString57,2280
    static const char*&  getHelpPrefixString() { static const char* help_prefix_str = ""; return help_prefix_str; }getHelpPrefixString58,2374
    struct OptionLt {OptionLt60,2491
        bool operator()(const Option* x, const Option* y) {operator ()61,2513
    Option(const char* name_, Option67,2735
    virtual ~Option() {}~Option80,3019
struct IntRange {IntRange96,3592
    int begin;begin97,3610
    int end;end98,3625
    IntRange(int b, int e) : begin(b), end(e) {}IntRange99,3638
struct Int64Range {Int64Range102,3691
    int64_t begin;begin103,3711
    int64_t end;end104,3730
    Int64Range(int64_t b, int64_t e) : begin(b), end(e) {}Int64Range105,3747
struct DoubleRange {DoubleRange108,3810
    double begin;begin109,3831
    double end;end110,3849
    bool  begin_inclusive;begin_inclusive111,3865
    bool  end_inclusive;end_inclusive112,3892
    DoubleRange(double b, bool binc, double e, bool einc) : begin(b), end(e), begin_inclusive(binc), end_inclusive(einc) {}DoubleRange113,3917
class DoubleOption : public OptionDoubleOption121,4168
    DoubleRange range;range124,4217
    double      value;value125,4240
    DoubleOption(const char* c, const char* n, const char* d, double def = double(), DoubleRange r = DoubleRange(-HUGE_VAL, false, HUGE_VAL, false))DoubleOption128,4273
    operator      double   (void) const { return value; }operator double133,4595
    operator      double&  (void)       { return value; }operator double&134,4653
    DoubleOption& operator=(double x)   { value = x; return *this; }operator =135,4711
    virtual bool parse(const char* str){parse137,4781
    virtual void help (bool verbose = false){help161,5584
class IntOption : public OptionIntOption181,6182
    IntRange range;range184,6228
    int32_t  value;value185,6248
    IntOption(const char* c, const char* n, const char* d, int32_t def = int32_t(), IntRange r = IntRange(INT32_MIN, INT32_MAX))IntOption188,6278
    operator   int32_t   (void) const { return value; }operator int32_t191,6471
    operator   int32_t&  (void)       { return value; }operator int32_t&192,6527
    IntOption& operator= (int32_t x)  { value = x; return *this; }operator =193,6583
    virtual bool parse(const char* str){parse195,6651
    virtual void help (bool verbose = false){help218,7307
class StringOption : public OptionStringOption307,9920
    const char* value;value309,9957
    StringOption(const char* c, const char* n, const char* d, const char* def = NULL) StringOption311,9989
    operator      const char*  (void) const     { return value; }operator const char*314,10130
    operator      const char*& (void)           { return value; }operator const char*&315,10196
    StringOption& operator=    (const char* x)  { value = x; return *this; }operator =316,10262
    virtual bool parse(const char* str){parse318,10340
    virtual void help (bool verbose = false){help328,10566
class BoolOption : public OptionBoolOption342,10935
    bool value;value344,10970
    BoolOption(const char* c, const char* n, const char* d, bool v) BoolOption347,10996
    operator    bool     (void) const { return value; }operator bool350,11115
    operator    bool&    (void)       { return value; }operator bool&351,11171
    BoolOption& operator=(bool b)     { value = b; return *this; }operator =352,11227
    virtual bool parse(const char* str){parse354,11295
    virtual void help (bool verbose = false){help368,11592

src/sat/bsat2/XAlloc.h,215
#define Minisat_XAlloc_hMinisat_XAlloc_h22,1293
namespace Minisat {Minisat27,1359
class OutOfMemoryException{};OutOfMemoryException32,1581
static inline void* xrealloc(void *ptr, size_t size)xrealloc33,1611

src/sat/bsat2/Solver.h,13478
#define Minisat_Solver_hMinisat_Solver_h22,1346
namespace Minisat {Minisat31,1472
class Solver {Solver36,1623
    vec<lbool> model;             // If problem is satisfiable, this vector contains the model (if any).model110,5712
    vec<Lit>   conflict;          // If problem is unsatisfiable (possibly under assumptions),conflict111,5817
    int       verbosity;verbosity116,6061
    double    var_decay;var_decay117,6086
    double    clause_decay;clause_decay118,6111
    double    random_var_freq;random_var_freq119,6139
    double    random_seed;random_seed120,6170
    bool      luby_restart;luby_restart121,6197
    int       ccmin_mode;         // Controls conflict clause minimization (0=none, 1=basic, 2=deep).ccmin_mode122,6225
    int       phase_saving;       // Controls the level of phase saving (0=none, 1=limited, 2=full).phase_saving123,6327
    bool      rnd_pol;            // Use random polarities for branching heuristics.rnd_pol124,6428
    bool      rnd_init_act;       // Initialize variable activities with a small random value.rnd_init_act125,6513
    double    garbage_frac;       // The fraction of wasted memory allowed before a garbage collection is triggered.garbage_frac126,6608
    int       restart_first;      // The initial restart limit.                                                                (default 100)restart_first128,6726
    double    restart_inc;        // The factor with which the restart limit is multiplied in each restart.                    (default 1.5)restart_inc129,6867
    double    learntsize_factor;  // The intitial limit for learnt clauses is a factor of the original clauses.                (default 1 / 3)learntsize_factor130,7008
    double    learntsize_inc;     // The limit for learnt clauses is multiplied with this factor each restart.                 (default 1.1)learntsize_inc131,7151
    int       learntsize_adjust_start_confl;learntsize_adjust_start_confl133,7293
    double    learntsize_adjust_inc;learntsize_adjust_inc134,7338
    uint64_t solves, starts, decisions, rnd_decisions, propagations, conflicts;solves138,7430
    uint64_t solves, starts, decisions, rnd_decisions, propagations, conflicts;starts138,7430
    uint64_t solves, starts, decisions, rnd_decisions, propagations, conflicts;decisions138,7430
    uint64_t solves, starts, decisions, rnd_decisions, propagations, conflicts;rnd_decisions138,7430
    uint64_t solves, starts, decisions, rnd_decisions, propagations, conflicts;propagations138,7430
    uint64_t solves, starts, decisions, rnd_decisions, propagations, conflicts;conflicts138,7430
    uint64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;dec_vars139,7510
    uint64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;clauses_literals139,7510
    uint64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;learnts_literals139,7510
    uint64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;max_literals139,7510
    uint64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;tot_literals139,7510
    struct VarData { CRef reason; int level; };VarData145,7643
    struct VarData { CRef reason; int level; };reason145,7643
    struct VarData { CRef reason; int level; };level145,7643
    static inline VarData mkVarData(CRef cr, int l){ VarData d = {cr, l}; return d; }mkVarData146,7691
    struct Watcher {Watcher148,7778
        CRef cref;cref149,7799
        Lit  blocker;blocker150,7818
        Watcher(CRef cr, Lit p) : cref(cr), blocker(p) {}Watcher151,7840
        bool operator==(const Watcher& w) const { return cref == w.cref; }operator ==152,7898
        bool operator!=(const Watcher& w) const { return cref != w.cref; }operator !=153,7973
    struct WatcherDeletedWatcherDeleted156,8056
        const ClauseAllocator& ca;ca158,8088
        WatcherDeleted(const ClauseAllocator& _ca) : ca(_ca) {}WatcherDeleted159,8123
        bool operator()(const Watcher& w) const { return ca[w.cref].mark() == 1; }operator ()160,8187
    struct VarOrderLt {VarOrderLt163,8278
        const vec<double>&  activity;activity164,8302
        bool operator () (Var x, Var y) const { return activity[x] > activity[y]; }operator ()165,8340
        VarOrderLt(const vec<double>&  act) : activity(act) { }VarOrderLt166,8424
    bool                ok;               // If FALSE, the constraints are already unsatisfiable. No part of the solver state may be used!ok171,8524
    vec<CRef>           clauses;          // List of problem clauses.clauses172,8663
    vec<CRef>           learnts;          // List of learnt clauses.learnts173,8733
    double              cla_inc;          // Amount to bump next clause with.cla_inc174,8802
    vec<double>         activity;         // A heuristic measurement of the activity of a variable.activity175,8880
    double              var_inc;          // Amount to bump next variable with.var_inc176,8980
                        watches;          // 'watches[lit]' is a list of constraints watching 'lit' (will go there if literal becomes true).watches178,9108
    vec<lbool>          assigns;          // The current assignments.assigns179,9249
    vec<char>           polarity;         // The preferred polarity of each variable.polarity180,9319
    vec<char>           decision;         // Declares if a variable is eligible for selection in the decision heuristic.decision181,9405
    vec<Lit>            trail;            // Assignment stack; stores all assigments made in the order they were made.trail182,9526
    vec<int>            trail_lim;        // Separator indices for different decision levels in 'trail'.trail_lim183,9645
    vec<VarData>        vardata;          // Stores reason and level for each variable.vardata184,9750
    int                 qhead;            // Head of queue (as index into the trail -- no more explicit propagation queue in MiniSat).qhead185,9838
    int                 simpDB_assigns;   // Number of top-level assignments since last execution of 'simplify()'.simpDB_assigns186,9973
    int64_t             simpDB_props;     // Remaining number of propagations that must be made before next execution of 'simplify()'.simpDB_props187,10088
    vec<Lit>            assumptions;      // Current set of assumptions provided to solve by the user.assumptions188,10223
    Heap<VarOrderLt>    order_heap;       // A priority queue of variables ordered with respect to the variable activity.order_heap189,10326
    double              progress_estimate;// Set by 'search()'.progress_estimate190,10448
    bool                remove_satisfied; // Indicates whether possibly inefficient linear scan for satisfied clauses should be performed in 'simplify'.remove_satisfied191,10512
    ClauseAllocator     ca;ca193,10666
    vec<char>           seen;seen198,10867
    vec<Lit>            analyze_stack;analyze_stack199,10897
    vec<Lit>            analyze_toclear;analyze_toclear200,10936
    vec<Lit>            add_tmp;add_tmp201,10977
    double              max_learnts;max_learnts203,11011
    double              learntsize_adjust_confl;learntsize_adjust_confl204,11048
    int                 learntsize_adjust_cnt;learntsize_adjust_cnt205,11097
    int64_t             conflict_budget;    // -1 means no budget.conflict_budget209,11180
    int64_t             propagation_budget; // -1 means no budget.propagation_budget210,11247
    bool                asynch_interrupt;asynch_interrupt211,11314
    static inline double drand(double& seed) {drand262,15186
    static inline int irand(double& seed, int size) {irand269,15446
inline CRef Solver::reason(Var x) const { return vardata[x].reason; }reason277,15687
inline int  Solver::level (Var x) const { return vardata[x].level; }level278,15757
inline void Solver::insertVarOrder(Var x) {insertVarOrder280,15827
inline void Solver::varDecayActivity() { var_inc *= (1 / var_decay); }varDecayActivity283,15942
inline void Solver::varBumpActivity(Var v) { varBumpActivity(v, var_inc); }varBumpActivity284,16013
inline void Solver::varBumpActivity(Var v, double inc) {varBumpActivity285,16089
inline void Solver::claDecayActivity() { cla_inc *= (1 / clause_decay); }claDecayActivity296,16435
inline void Solver::claBumpActivity (Clause& c) {claBumpActivity297,16509
inline void Solver::checkGarbage(void){ checkGarbage(garbage_frac); }checkGarbage304,16780
inline void Solver::checkGarbage(double gf){checkGarbage305,16850
inline bool     Solver::enqueue         (Lit p, CRef from)      { return value(p) != l_Undef ? value(p) != l_False : (uncheckedEnqueue(p, from), true); }enqueue310,17030
inline bool     Solver::addClause       (const vec<Lit>& ps)    { ps.copyTo(add_tmp); return addClause_(add_tmp); }addClause311,17184
inline bool     Solver::addEmptyClause  ()                      { add_tmp.clear(); return addClause_(add_tmp); }addEmptyClause312,17300
inline bool     Solver::addClause       (Lit p)                 { add_tmp.clear(); add_tmp.push(p); return addClause_(add_tmp); }addClause313,17413
inline bool     Solver::addClause       (Lit p, Lit q)          { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); return addClause_(add_tmp); }addClause314,17543
inline bool     Solver::addClause       (Lit p, Lit q, Lit r)   { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); add_tmp.push(r); return addClause_(add_tmp); }addClause315,17690
inline bool     Solver::locked          (const Clause& c) const { return value(c[0]) == l_True && reason(var(c[0])) != CRef_Undef && ca.lea(reason(var(c[0]))) == &c; }locked316,17854
inline void     Solver::newDecisionLevel()                      { trail_lim.push(trail.size()); }newDecisionLevel317,18022
inline int      Solver::decisionLevel ()      const   { return trail_lim.size(); }decisionLevel319,18121
inline uint32_t Solver::abstractLevel (Var x) const   { return 1 << (level(x) & 31); }abstractLevel320,18204
inline lbool    Solver::value         (Var x) const   { return assigns[x]; }value321,18291
inline lbool    Solver::value         (Lit p) const   { return assigns[var(p)] ^ sign(p); }value322,18368
inline lbool    Solver::modelValue    (Var x) const   { return model[x]; }modelValue323,18460
inline lbool    Solver::modelValue    (Lit p) const   { return model[var(p)] ^ sign(p); }modelValue324,18535
inline int      Solver::nAssigns      ()      const   { return trail.size(); }nAssigns325,18625
inline int      Solver::nClauses      ()      const   { return clauses.size(); }nClauses326,18704
inline int      Solver::nLearnts      ()      const   { return learnts.size(); }nLearnts327,18785
inline int      Solver::nVars         ()      const   { return vardata.size(); }nVars328,18866
inline int      Solver::nFreeVars     ()      const   { return (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]); }nFreeVars329,18947
inline void     Solver::setPolarity   (Var v, bool b) { polarity[v] = b; }setPolarity330,19083
inline void     Solver::setDecisionVar(Var v, bool b) setDecisionVar331,19158
inline void     Solver::setConfBudget(int64_t x){ conflict_budget    = conflicts    + x; }setConfBudget339,19353
inline void     Solver::setPropBudget(int64_t x){ propagation_budget = propagations + x; }setPropBudget340,19444
inline void     Solver::interrupt(){ asynch_interrupt = true; }interrupt341,19535
inline void     Solver::clearInterrupt(){ asynch_interrupt = false; }clearInterrupt342,19599
inline void     Solver::budgetOff(){ conflict_budget = propagation_budget = -1; }budgetOff343,19669
inline bool     Solver::withinBudget() const {withinBudget344,19751
inline bool     Solver::solve         ()                    { budgetOff(); assumptions.clear(); return solve_() == l_True; }solve352,20272
inline bool     Solver::solve         (Lit p)               { budgetOff(); assumptions.clear(); assumptions.push(p); return solve_() == l_True; }solve353,20397
inline bool     Solver::solve         (Lit p, Lit q)        { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); return solve_() == l_True; }solve354,20543
inline bool     Solver::solve         (Lit p, Lit q, Lit r) { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); assumptions.push(r); return solve_() == l_True; }solve355,20710
inline bool     Solver::solve         (const vec<Lit>& assumps){ budgetOff(); assumps.copyTo(assumptions); return solve_() == l_True; }solve356,20898
inline lbool    Solver::solveLimited  (const vec<Lit>& assumps){ assumps.copyTo(assumptions); return solve_(); }solveLimited357,21034
inline bool     Solver::okay          ()      const   { return ok; }okay358,21147
inline void     Solver::toDimacs     (const char* file){ vec<Lit> as; toDimacs(file, as); }toDimacs360,21217
inline void     Solver::toDimacs     (const char* file, Lit p){ vec<Lit> as; as.push(p); toDimacs(file, as); }toDimacs361,21309
inline void     Solver::toDimacs     (const char* file, Lit p, Lit q){ vec<Lit> as; as.push(p); as.push(q); toDimacs(file, as); }toDimacs362,21420
inline void     Solver::toDimacs     (const char* file, Lit p, Lit q, Lit r){ vec<Lit> as; as.push(p); as.push(q); as.push(r); toDimacs(file, as); }toDimacs363,21550

src/sat/bsat2/Alloc.h,1538
#define Minisat_Alloc_hMinisat_Alloc_h22,1292
namespace Minisat {Minisat27,1355
class RegionAllocatorRegionAllocator33,1536
    T*        memory;memory35,1560
    uint32_t  sz;sz36,1582
    uint32_t  cap;cap37,1600
    uint32_t  wasted_;wasted_38,1619
    typedef uint32_t Ref;Ref44,1747
    enum { Ref_Undef = UINT32_MAX };Ref_Undef45,1773
    enum { Unit_Size = sizeof(uint32_t) };Unit_Size46,1810
    explicit RegionAllocator(uint32_t start_cap = 1024*1024) : memory(NULL), sz(0), cap(0), wasted_(0){ capacity(start_cap); }RegionAllocator48,1854
    ~RegionAllocator()~RegionAllocator49,1981
    uint32_t size      () const      { return sz; }size56,2074
    uint32_t wasted    () const      { return wasted_; }wasted57,2126
    void     _free      (int size)    { wasted_ += size; }_free60,2220
    T&       operator[](Ref r)       { assert(r >= 0 && r < sz); return memory[r]; }operator []63,2346
    const T& operator[](Ref r) const { assert(r >= 0 && r < sz); return memory[r]; }operator []64,2431
    T*       lea       (Ref r)       { assert(r >= 0 && r < sz); return &memory[r]; }lea66,2517
    const T* lea       (Ref r) const { assert(r >= 0 && r < sz); return &memory[r]; }lea67,2603
    Ref      ael       (const T* t)  { assert((void*)t >= (void*)&memory[0] && (void*)t < (void*)&memory[sz-1]);ael68,2689
    void     moveTo(RegionAllocator& to) {moveTo71,2844
void RegionAllocator<T>::capacity(uint32_t min_cap)capacity86,3123
RegionAllocator<T>::alloc(int size)alloc111,3989

src/sat/bsat2/Heap.h,1474
#define Minisat_Heap_hMinisat_Heap_h22,1344
namespace Minisat {Minisat26,1386
class Heap {Heap33,1595
    Comp     lt;       // The heap is a minimum-heap with respect to this comparatorlt34,1608
    vec<int> heap;     // Heap of integersheap35,1693
    vec<int> indices;  // Each integers position (index) in the Heapindices36,1736
    static inline int left  (int i) { return i*2+1; }left39,1841
    static inline int right (int i) { return (i+1)*2; }right40,1895
    static inline int parent(int i) { return (i-1) >> 1; }parent41,1951
    void percolateUp(int i)percolateUp44,2012
    void percolateDown(int i)percolateDown60,2367
    Heap(const Comp& c) : lt(c) { }Heap76,2809
    int  size      ()          const { return heap.size(); }size78,2846
    bool empty     ()          const { return heap.size() == 0; }empty79,2907
    bool inHeap    (int n)     const { return n < indices.size() && indices[n] >= 0; }inHeap80,2973
    int  operator[](int index) const { assert(index < heap.size()); return heap[index]; }operator []81,3060
    void decrease  (int n) { assert(inHeap(n)); percolateUp  (indices[n]); }decrease84,3152
    void increase  (int n) { assert(inHeap(n)); percolateDown(indices[n]); }increase85,3229
    void update(int n)update89,3357
    void insert(int n)insert99,3534
    int  removeMin()removeMin110,3723
    void build(vec<int>& ns) {build123,4047
    void clear(bool dealloc = false) clear137,4387

src/sat/bsat2/SimpSolver.h,4792
#define Minisat_SimpSolver_hMinisat_SimpSolver_h22,1350
namespace Minisat {Minisat28,1421
class SimpSolver : public Solver {SimpSolver33,1544
    int     grow;              // Allow a variable elimination step to grow by a number of clauses (default to zero).grow83,3633
    int     clause_lim;        // Variables are not eliminated if it produces a resolvent with a length above this limit.clause_lim84,3751
    int     subsumption_lim;   // Do not check if subsumption against a clause larger than this. -1 means no limit.subsumption_lim86,3926
    double  simp_garbage_frac; // A different limit for when to issue a GC during simplification (Also see 'garbage_frac').simp_garbage_frac87,4042
    bool    use_asymm;         // Shrink clauses by asymmetric branching.use_asymm89,4167
    bool    use_rcheck;        // Check if a clause is already implied. Prett costly, and subsumes subsumptions :)use_rcheck90,4241
    bool    use_elim;          // Perform variable elimination.use_elim91,4356
    int     merges;merges95,4447
    int     asymm_lits;asymm_lits96,4467
    int     eliminated_vars;eliminated_vars97,4491
    struct ElimLt {ElimLt103,4567
        const vec<int>& n_occ;n_occ104,4587
        explicit ElimLt(const vec<int>& no) : n_occ(no) {}ElimLt105,4618
        uint64_t cost  (Var x)        const { return (uint64_t)n_occ[toInt(mkLit(x))] * (uint64_t)n_occ[toInt(~mkLit(x))]; }cost109,4861
        bool operator()(Var x, Var y) const { return cost(x) < cost(y); }operator ()110,4986
    struct ClauseDeleted {ClauseDeleted119,5311
        const ClauseAllocator& ca;ca120,5338
        explicit ClauseDeleted(const ClauseAllocator& _ca) : ca(_ca) {}ClauseDeleted121,5373
        bool operator()(const CRef& cr) const { return ca[cr].mark() == 1; } };operator ()122,5445
    int                 elimorder;elimorder126,5554
    bool                use_simplification;use_simplification127,5589
    vec<uint32_t>       elimclauses;elimclauses128,5633
    vec<char>           touched;touched129,5670
                        occurs;occurs131,5747
    vec<int>            n_occ;n_occ132,5779
    Heap<ElimLt>        elim_heap;elim_heap133,5810
    Queue<CRef>         subsumption_queue;subsumption_queue134,5845
    vec<char>           frozen;frozen135,5888
    vec<char>           eliminated;eliminated136,5920
    int                 bwdsub_assigns;bwdsub_assigns137,5956
    int                 n_touched;n_touched138,5996
    CRef                bwdsub_tmpunit;bwdsub_tmpunit142,6059
inline bool SimpSolver::isEliminated (Var v) const { return eliminated[v]; }isEliminated169,7259
inline void SimpSolver::updateElimHeap(Var v) {updateElimHeap170,7336
inline bool SimpSolver::addClause    (const vec<Lit>& ps)    { ps.copyTo(add_tmp); return addClause_(add_tmp); }addClause177,7603
inline bool SimpSolver::addEmptyClause()                     { add_tmp.clear(); return addClause_(add_tmp); }addEmptyClause178,7716
inline bool SimpSolver::addClause    (Lit p)                 { add_tmp.clear(); add_tmp.push(p); return addClause_(add_tmp); }addClause179,7826
inline bool SimpSolver::addClause    (Lit p, Lit q)          { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); return addClause_(add_tmp); }addClause180,7953
inline bool SimpSolver::addClause    (Lit p, Lit q, Lit r)   { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); add_tmp.push(r); return addClause_(add_tmp); }addClause181,8097
inline void SimpSolver::setFrozen    (Var v, bool b) { frozen[v] = (char)b; if (use_simplification && !b) { updateElimHeap(v); } }setFrozen182,8258
inline bool SimpSolver::solve        (                     bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); return solve_(do_simp, turn_off_simp) == l_True; }solve184,8390
inline bool SimpSolver::solve        (Lit p       ,        bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); assumptions.push(p); return solve_(do_simp, turn_off_simp) == l_True; }solve185,8571
inline bool SimpSolver::solve        (Lit p, Lit q,        bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); return solve_(do_simp, turn_off_simp) == l_True; }solve186,8773
inline bool SimpSolver::solve        (Lit p, Lit q, Lit r, bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); assumptions.push(r); return solve_(do_simp, turn_off_simp) == l_True; }solve187,8996
inline bool SimpSolver::solve        (const vec<Lit>& assumps, bool do_simp, bool turn_off_simp){ solve188,9240
inline lbool SimpSolver::solveLimited (const vec<Lit>& assumps, bool do_simp, bool turn_off_simp){ solveLimited191,9437

src/sat/bsat2/SolverTypes.h,8338
#define Minisat_SolverTypes_hMinisat_SolverTypes_h23,1352
namespace Minisat {Minisat33,1497
typedef int Var;Var42,1809
#define var_Undef var_Undef43,1826
struct Lit {Lit46,1851
    int     x;x47,1864
    bool operator == (Lit p) const { return x == p.x; }operator ==52,1957
    bool operator != (Lit p) const { return x != p.x; }operator !=53,2013
    bool operator <  (Lit p) const { return x < p.x;  } // '<' makes p, ~p adjacent in the ordering.operator <54,2069
inline  Lit  mkLit     (Var var, bool sign = false) { Lit p; p.x = var + var + (int)sign; return p; }mkLit58,2175
inline  Lit  operator ~(Lit p)              { Lit q; q.x = p.x ^ 1; return q; }operator ~59,2277
inline  Lit  operator ^(Lit p, bool b)      { Lit q; q.x = p.x ^ (unsigned int)b; return q; }operator ^60,2357
inline  bool sign      (Lit p)              { return p.x & 1; }sign61,2451
inline  int  var       (Lit p)              { return p.x >> 1; }var62,2515
inline  int  toInt     (Var v)              { return v; } toInt65,2659
inline  int  toInt     (Lit p)              { return p.x; } toInt66,2718
inline  Lit  toLit     (int i)              { Lit p; p.x = i; return p; } toLit67,2779
const Lit lit_Undef = { -2 };  // }- Useful special constants.lit_Undef72,2993
const Lit lit_Error = { -1 };  // }lit_Error73,3056
#define l_True l_True84,3545
#define l_False l_False85,3650
#define l_Undef l_Undef86,3686
class lbool {lbool88,3723
    uint8_t value;value89,3737
    explicit lbool(uint8_t v) : value(v) { }lbool92,3765
    lbool()       : value(0) { }lbool94,3811
    explicit lbool(bool x) : value(!x) { }lbool95,3844
    bool  operator == (lbool b) const { return ((b.value&2) & (value&2)) | (!(b.value&2)&(value == b.value)); }operator ==97,3888
    bool  operator != (lbool b) const { return !(*this == b); }operator !=98,4000
    lbool operator ^  (bool  b) const { return lbool((uint8_t)(value^(uint8_t)b)); }operator ^99,4064
    lbool operator && (lbool b) const { operator &&101,4150
    lbool operator || (lbool b) const {operator ||106,4325
inline int   toInt  (lbool l) { return l.value; }toInt114,4572
inline lbool toLbool(int   v) { return lbool((uint8_t)v);  }toLbool115,4622
typedef RegionAllocator<uint32_t>::Ref CRef;CRef121,4854
class Clause {Clause123,4900
        unsigned mark      : 2;mark125,4928
        unsigned learnt    : 1;learnt126,4960
        unsigned has_extra : 1;has_extra127,4992
        unsigned reloced   : 1;reloced128,5024
        unsigned size      : 27; }                            header;size129,5056
        unsigned size      : 27; }                            header;header129,5056
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];lit130,5126
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];act130,5126
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];abs130,5126
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];rel130,5126
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];data130,5126
    Clause(const V& ps, bool use_extra, bool learnt) {Clause136,5339
    void calcAbstraction() {calcAbstraction154,5821
    int          size        ()      const   { return header.size; }size162,6066
    void         shrink      (int i)         { assert(i <= size()); if (header.has_extra) data[header.size-i] = data[header.size]; header.size -= i; }shrink163,6135
    void         pop         ()              { shrink(1); }pop164,6286
    bool         learnt      ()      const   { return header.learnt; }learnt165,6346
    bool         has_extra   ()      const   { return header.has_extra; }has_extra166,6417
    uint32_t     mark        ()      const   { return header.mark; }mark167,6491
    void         mark        (uint32_t m)    { header.mark = m; }mark168,6560
    const Lit&   last        ()      const   { return data[header.size-1].lit; }last169,6626
    bool         reloced     ()      const   { return header.reloced; }reloced171,6708
    CRef         relocation  ()      const   { return data[0].rel; }relocation172,6780
    void         relocate    (CRef c)        { header.reloced = 1; data[0].rel = c; }relocate173,6849
    Lit&         operator [] (int i)         { return data[i].lit; }operator []177,7105
    Lit          operator [] (int i) const   { return data[i].lit; }operator []178,7174
    operator const Lit* (void) const         { return (Lit*)data; }operator const Lit*179,7243
    float&       activity    ()              { assert(header.has_extra); return data[header.size].act; }activity181,7312
    uint32_t     abstraction () const        { assert(header.has_extra); return data[header.size].abs; }abstraction182,7417
const CRef CRef_Undef = RegionAllocator<uint32_t>::Ref_Undef;CRef_Undef193,7798
class ClauseAllocator : public RegionAllocator<uint32_t>ClauseAllocator194,7860
    static int clauseWord32Size(int size, bool has_extra){clauseWord32Size196,7919
    bool extra_clause_field;extra_clause_field199,8083
    ClauseAllocator(uint32_t start_cap) : RegionAllocator<uint32_t>(start_cap), extra_clause_field(false){}ClauseAllocator201,8113
    ClauseAllocator() : extra_clause_field(false){}ClauseAllocator202,8221
    void moveTo(ClauseAllocator& to){moveTo204,8274
    CRef alloc(const Lits& ps, bool learnt = false)alloc209,8439
    Clause&       operator[](Ref r)       { return (Clause&)RegionAllocator<uint32_t>::operator[](r); }operator []222,8901
    const Clause& operator[](Ref r) const { return (Clause&)RegionAllocator<uint32_t>::operator[](r); }operator []223,9005
    Clause*       lea       (Ref r)       { return (Clause*)RegionAllocator<uint32_t>::lea(r); }lea224,9109
    const Clause* lea       (Ref r) const { return (Clause*)RegionAllocator<uint32_t>::lea(r); }lea225,9206
    Ref           ael       (const Clause* t){ return RegionAllocator<uint32_t>::ael((uint32_t*)t); }ael226,9303
    void _free(CRef cid)_free228,9406
    void reloc(CRef& cr, ClauseAllocator& to)reloc234,9566
class OccListsOccLists256,10335
    vec<Vec>  occs;occs258,10352
    vec<char> dirty;dirty259,10372
    vec<Idx>  dirties;dirties260,10393
    Deleted   deleted;deleted261,10416
    OccLists(const Deleted& d) : deleted(d) {}OccLists264,10449
    void  init      (const Idx& idx){ occs.growTo(toInt(idx)+1); dirty.growTo(toInt(idx)+1, 0); }init266,10501
    Vec&  operator[](const Idx& idx){ return occs[toInt(idx)]; }operator []268,10667
    Vec&  lookup    (const Idx& idx){ if (dirty[toInt(idx)]) clean(idx); return occs[toInt(idx)]; }lookup269,10732
    void  smudge    (const Idx& idx){smudge273,10895
    void  clear(bool free = true){clear280,11053
void OccLists<Idx,Vec,Deleted>::cleanAll()cleanAll289,11232
void OccLists<Idx,Vec,Deleted>::clean(const Idx& idx)clean300,11552
class CMapCMap317,11982
    struct CRefHash {CRefHash319,11995
        uint32_t operator()(CRef cr) const { return (uint32_t)cr; } };operator ()320,12017
    typedef Map<CRef, T, CRefHash> HashTable;HashTable322,12089
    HashTable map;map323,12135
    void     clear       ()                           { map.clear(); }clear327,12196
    int      size        ()                const      { return map.elems(); }size328,12267
    void     insert      (CRef cr, const T& t){ map.insert(cr, t); }insert332,12386
    void     growTo      (CRef cr, const T& t){ map.insert(cr, t); } // NOTE: for compatibilitygrowTo333,12455
    void     remove      (CRef cr)            { map.remove(cr); }remove334,12551
    bool     has         (CRef cr, T& t)      { return map.peek(cr, t); }has335,12617
    const T& operator [] (CRef cr) const      { return map[cr]; }operator []338,12753
    T&       operator [] (CRef cr)            { return map[cr]; }operator []339,12819
    int  bucket_count() const { return map.bucket_count(); }bucket_count342,12943
    const vec<typename HashTable::Pair>& bucket(int i) const { return map.bucket(i); }bucket343,13004
    void moveTo(CMap& other){ map.moveTo(other.map); }moveTo346,13127
    void debug(){debug349,13201
inline Lit Clause::subsumes(const Clause& other) constsubsumes367,13896
inline void Clause::strengthen(Lit p)strengthen398,14919

src/sat/bsat2/ParseUtils.h,1183
#define Minisat_ParseUtils_hMinisat_ParseUtils_h22,1350
namespace Minisat {Minisat29,1449
static const int buffer_size = 1048576;buffer_size34,1616
class StreamBuffer {StreamBuffer37,1658
    gzFile        in;in38,1679
    unsigned char buf[buffer_size];buf39,1701
    int           pos;pos40,1737
    int           size;size41,1760
    void assureLookahead() {assureLookahead43,1785
    explicit StreamBuffer(gzFile i) : in(i), pos(0), size(0) { assureLookahead(); }StreamBuffer49,1925
    int  operator *  () const { return (pos >= size) ? EOF : buf[pos]; }operator *51,2010
    void operator ++ ()       { pos++; assureLookahead(); }operator ++52,2083
    int  position    () const { return pos; }position53,2143
static inline bool isEof(StreamBuffer& in) { return *in == EOF;  }isEof61,2359
static inline bool isEof(const char*   in) { return *in == '\0'; }isEof62,2426
static void skipWhitespace(B& in) {skipWhitespace69,2682
static void skipLine(B& in) {skipLine75,2803
static int parseInt(B& in) {parseInt83,2959
static bool match(B& in, const char* str) {match99,3489
static bool eagerMatch(B& in, const char* str) {eagerMatch112,3784

src/sat/bsat2/IntTypes.h,113
#define Minisat_IntTypes_hMinisat_IntTypes_h21,1294
#   define __STDC_LIMIT_MACROS__STDC_LIMIT_MACROS37,1616

src/sat/msat/msat.h,921
#define ABC__sat__msat__msat_hABC__sat__msat__msat_h22,675
typedef struct Msat_Solver_t_      Msat_Solver_t;Msat_Solver_t42,1399
typedef struct Msat_IntVec_t_      Msat_IntVec_t;Msat_IntVec_t45,1492
typedef struct Msat_ClauseVec_t_   Msat_ClauseVec_t;Msat_ClauseVec_t46,1542
typedef struct Msat_VarHeap_t_     Msat_VarHeap_t;Msat_VarHeap_t47,1595
typedef enum { MSAT_FALSE = -1, MSAT_UNKNOWN = 0, MSAT_TRUE = 1 } Msat_Type_t;MSAT_FALSE50,1681
typedef enum { MSAT_FALSE = -1, MSAT_UNKNOWN = 0, MSAT_TRUE = 1 } Msat_Type_t;MSAT_UNKNOWN50,1681
typedef enum { MSAT_FALSE = -1, MSAT_UNKNOWN = 0, MSAT_TRUE = 1 } Msat_Type_t;MSAT_TRUE50,1681
typedef enum { MSAT_FALSE = -1, MSAT_UNKNOWN = 0, MSAT_TRUE = 1 } Msat_Type_t;Msat_Type_t50,1681
#define MSAT_VAR2LIT(MSAT_VAR2LIT56,1929
#define MSAT_LITNOT(MSAT_LITNOT57,1968
#define MSAT_LITSIGN(MSAT_LITSIGN58,2002
#define MSAT_LIT2VAR(MSAT_LIT2VAR59,2041

src/sat/msat/msatClause.c,2932
struct Msat_Clause_t_Msat_Clause_t_30,923
    int           Num;              // unique number of the clauseNum32,947
    unsigned      fLearned   :  1;  // 1 if the clause is learnedfLearned33,1014
    unsigned      fMark      :  1;  // used to mark visited clauses during proof recordingfMark34,1080
    unsigned      fTypeA     :  1;  // used to mark clauses belonging to A for interpolant computationfTypeA35,1171
    unsigned      nSize      : 14;  // the number of literals in the clausenSize36,1274
    unsigned      nSizeAlloc : 15;  // the number of bytes allocated for the clausenSizeAlloc37,1350
    Msat_Lit_t     pData[0];pData38,1434
int  Msat_ClauseCreate( Msat_Solver_t * p, Msat_IntVec_t * vLits, int  fLearned, Msat_Clause_t ** pClause_out )Msat_ClauseCreate58,2120
void Msat_ClauseFree( Msat_Solver_t * p, Msat_Clause_t * pC, int  fRemoveWatched )Msat_ClauseFree223,7734
int   Msat_ClauseReadLearned( Msat_Clause_t * pC )  {  return pC->fLearned; }Msat_ClauseReadLearned255,8595
int   Msat_ClauseReadSize( Msat_Clause_t * pC )     {  return pC->nSize;    }Msat_ClauseReadSize256,8673
int * Msat_ClauseReadLits( Msat_Clause_t * pC )     {  return pC->pData;    }Msat_ClauseReadLits257,8751
int   Msat_ClauseReadMark( Msat_Clause_t * pC )     {  return pC->fMark;    }Msat_ClauseReadMark258,8829
int   Msat_ClauseReadNum( Msat_Clause_t * pC )      {  return pC->Num;      }Msat_ClauseReadNum259,8907
int   Msat_ClauseReadTypeA( Msat_Clause_t * pC )    {  return pC->fTypeA;    }Msat_ClauseReadTypeA260,8985
void  Msat_ClauseSetMark( Msat_Clause_t * pC, int  fMark )   {  pC->fMark = fMark;   }Msat_ClauseSetMark262,9065
void  Msat_ClauseSetNum( Msat_Clause_t * pC, int Num )       {  pC->Num = Num;       }Msat_ClauseSetNum263,9152
void  Msat_ClauseSetTypeA( Msat_Clause_t * pC, int  fTypeA ) {  pC->fTypeA = fTypeA; }Msat_ClauseSetTypeA264,9239
int  Msat_ClauseIsLocked( Msat_Solver_t * p, Msat_Clause_t * pC )Msat_ClauseIsLocked278,9722
float Msat_ClauseReadActivity( Msat_Clause_t * pC )Msat_ClauseReadActivity295,10194
void Msat_ClauseWriteActivity( Msat_Clause_t * pC, float Num )Msat_ClauseWriteActivity314,10597
int  Msat_ClausePropagate( Msat_Clause_t * pC, Msat_Lit_t Lit, int * pAssigns, Msat_Lit_t * pLit_out )Msat_ClausePropagate335,11375
int  Msat_ClauseSimplify( Msat_Clause_t * pC, int * pAssigns )Msat_ClauseSimplify374,12661
void Msat_ClauseCalcReason( Msat_Solver_t * p, Msat_Clause_t * pC, Msat_Lit_t Lit, Msat_IntVec_t * vLits_out )Msat_ClauseCalcReason418,14076
void Msat_ClauseRemoveWatch( Msat_ClauseVec_t * vClauses, Msat_Clause_t * pC )Msat_ClauseRemoveWatch444,14932
void Msat_ClausePrint( Msat_Clause_t * pC )Msat_ClausePrint468,15616
void Msat_ClauseWriteDimacs( FILE * pFile, Msat_Clause_t * pC, int  fIncrement )Msat_ClauseWriteDimacs494,16282
void Msat_ClausePrintSymbols( Msat_Clause_t * pC )Msat_ClausePrintSymbols515,16864

src/sat/msat/msatActivity.c,583
void Msat_SolverVarBumpActivity( Msat_Solver_t * p, Msat_Lit_t Lit )Msat_SolverVarBumpActivity45,1402
void Msat_SolverVarDecayActivity( Msat_Solver_t * p )Msat_SolverVarDecayActivity69,2084
void Msat_SolverVarRescaleActivity( Msat_Solver_t * p )Msat_SolverVarRescaleActivity86,2482
void Msat_SolverClaBumpActivity( Msat_Solver_t * p, Msat_Clause_t * pC )Msat_SolverClaBumpActivity105,2887
void Msat_SolverClaDecayActivity( Msat_Solver_t * p )Msat_SolverClaDecayActivity128,3460
void Msat_SolverClaRescaleActivity( Msat_Solver_t * p )Msat_SolverClaRescaleActivity144,3826

src/sat/msat/msatRead.c,661
char * Msat_FileRead( FILE * pFile )Msat_FileRead47,1469
static void Msat_ReadWhitespace( char ** pIn ) Msat_ReadWhitespace77,2272
static void Msat_ReadNotWhitespace( char ** pIn ) Msat_ReadNotWhitespace94,2633
static void skipLine( char ** pIn ) skipLine111,3002
static int Msat_ReadInt( char ** pIn ) Msat_ReadInt137,3464
static void Msat_ReadClause( char ** pIn, Msat_Solver_t * p, Msat_IntVec_t * pLits ) Msat_ReadClause168,4183
static int  Msat_ReadDimacs( char * pText, Msat_Solver_t ** pS, int  fVerbose ) Msat_ReadDimacs201,5040
int  Msat_SolverParseDimacs( FILE * pFile, Msat_Solver_t ** p, int fVerbose )Msat_SolverParseDimacs258,6726

src/sat/msat/msatQueue.c,604
struct Msat_Queue_t_ Msat_Queue_t_30,933
    int         nVars;nVars32,957
    int *       pVars;pVars33,980
    int         iFirst;iFirst34,1003
    int         iLast;iLast35,1027
Msat_Queue_t * Msat_QueueAlloc( int nVars )Msat_QueueAlloc53,1549
void Msat_QueueFree( Msat_Queue_t * p )Msat_QueueFree74,2054
int Msat_QueueReadSize( Msat_Queue_t * p )Msat_QueueReadSize91,2399
void Msat_QueueInsert( Msat_Queue_t * p, int Lit )Msat_QueueInsert107,2745
int Msat_QueueExtract( Msat_Queue_t * p )Msat_QueueExtract131,3349
void Msat_QueueClear( Msat_Queue_t * p )Msat_QueueClear149,3733

src/sat/msat/msatOrderH.c,1731
struct Msat_Order_t_Msat_Order_t_31,959
    Msat_Solver_t *      pSat;         // the SAT solver pSat33,982
    Msat_IntVec_t *      vIndex;       // the heapvIndex34,1040
    Msat_IntVec_t *      vHeap;        // the mapping of var num into its heap numvHeap35,1091
#define HLEFT(HLEFT44,1500
#define HRIGHT(HRIGHT45,1540
#define HPARENT(HPARENT46,1583
#define HCOMPARE(HCOMPARE47,1623
#define HHEAP(HHEAP48,1708
#define HSIZE(HSIZE49,1763
#define HOKAY(HOKAY50,1814
#define HINHEAP(HINHEAP51,1884
#define HEMPTY(HEMPTY52,1960
Msat_Order_t * Msat_OrderAlloc( Msat_Solver_t * pSat )Msat_OrderAlloc78,2868
void Msat_OrderSetBounds( Msat_Order_t * p, int nVarsMax )Msat_OrderSetBounds101,3519
void Msat_OrderClean( Msat_Order_t * p, Msat_IntVec_t * vCone )Msat_OrderClean120,3996
int Msat_OrderCheck( Msat_Order_t * p )Msat_OrderCheck147,4714
void Msat_OrderFree( Msat_Order_t * p )Msat_OrderFree163,5061
int Msat_OrderVarSelect( Msat_Order_t * p )Msat_OrderVarSelect183,5464
void Msat_OrderVarAssigned( Msat_Order_t * p, int Var )Msat_OrderVarAssigned220,6321
void Msat_OrderVarUnassigned( Msat_Order_t * p, int Var )Msat_OrderVarUnassigned235,6665
void Msat_OrderUpdate( Msat_Order_t * p, int Var )Msat_OrderUpdate257,7192
int Msat_HeapCheck_rec( Msat_Order_t * p, int i )Msat_HeapCheck_rec282,7704
int Msat_HeapGetTop( Msat_Order_t * p )Msat_HeapGetTop305,8269
void Msat_HeapInsert( Msat_Order_t * p, int n )Msat_HeapInsert329,8901
void Msat_HeapIncrease( Msat_Order_t * p, int n )Msat_HeapIncrease348,9365
void Msat_HeapPercolateUp( Msat_Order_t * p, int i )Msat_HeapPercolateUp364,9726
void Msat_HeapPercolateDown( Msat_Order_t * p, int i )Msat_HeapPercolateDown388,10366

src/sat/msat/msatMem.c,3480
struct Msat_MmFixed_t_Msat_MmFixed_t_30,917
    int           nEntrySize;    // the size of one entrynEntrySize33,986
    int           nEntriesAlloc; // the total number of entries allocatednEntriesAlloc34,1044
    int           nEntriesUsed;  // the number of entries in usenEntriesUsed35,1118
    int           nEntriesMax;   // the max number of entries in usenEntriesMax36,1183
    char *        pEntriesFree;  // the linked list of free entriespEntriesFree37,1252
    int           nChunkSize;    // the size of one chunknChunkSize40,1363
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc41,1421
    int           nChunks;       // the current number of memory chunks nChunks42,1494
    char **       pChunks;       // the allocated memorypChunks43,1567
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed46,1643
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc47,1716
struct Msat_MmFlex_t_Msat_MmFlex_t_50,1773
    int           nEntriesUsed;  // the number of entries allocatednEntriesUsed53,1841
    char *        pCurrent;      // the current pointer to free memorypCurrent54,1909
    char *        pEnd;          // the first entry outside the free memorypEnd55,1980
    int           nChunkSize;    // the size of one chunknChunkSize58,2099
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc59,2157
    int           nChunks;       // the current number of memory chunks nChunks60,2230
    char **       pChunks;       // the allocated memorypChunks61,2303
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed64,2379
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc65,2452
struct Msat_MmStep_t_Msat_MmStep_t_69,2510
    int                nMems;    // the number of fixed memory managers employednMems71,2534
    Msat_MmFixed_t **   pMems;    // memory managers: 2^1 words, 2^2 words, etcpMems72,2615
    int                nMapSize; // the size of the memory arraynMapSize73,2695
    Msat_MmFixed_t **   pMap;     // maps the number of bytes into its memory managerpMap74,2760
Msat_MmFixed_t * Msat_MmFixedStart( int nEntrySize )Msat_MmFixedStart93,3469
void Msat_MmFixedStop( Msat_MmFixed_t * p, int fVerbose )Msat_MmFixedStop132,4360
char * Msat_MmFixedEntryFetch( Msat_MmFixed_t * p )Msat_MmFixedEntryFetch161,5202
void Msat_MmFixedEntryRecycle( Msat_MmFixed_t * p, char * pEntry )Msat_MmFixedEntryRecycle212,6809
void Msat_MmFixedRestart( Msat_MmFixed_t * p )Msat_MmFixedRestart232,7359
int Msat_MmFixedReadMemUsage( Msat_MmFixed_t * p )Msat_MmFixedReadMemUsage270,8335
Msat_MmFlex_t * Msat_MmFlexStart()Msat_MmFlexStart288,8741
void Msat_MmFlexStop( Msat_MmFlex_t * p, int fVerbose )Msat_MmFlexStop320,9422
char * Msat_MmFlexEntryFetch( Msat_MmFlex_t * p, int nBytes )Msat_MmFlexEntryFetch349,10184
int Msat_MmFlexReadMemUsage( Msat_MmFlex_t * p )Msat_MmFlexReadMemUsage394,11592
Msat_MmStep_t * Msat_MmStepStart( int nSteps )Msat_MmStepStart423,12611
void Msat_MmStepStop( Msat_MmStep_t * p, int fVerbose )Msat_MmStepStop458,13699
char * Msat_MmStepEntryFetch( Msat_MmStep_t * p, int nBytes )Msat_MmStepEntryFetch479,14181
void Msat_MmStepEntryRecycle( Msat_MmStep_t * p, char * pEntry, int nBytes )Msat_MmStepEntryRecycle503,14740
int Msat_MmStepReadMemUsage( Msat_MmStep_t * p )Msat_MmStepReadMemUsage526,15240

src/sat/msat/msatSolverIo.c,317
void Msat_SolverPrintAssignment( Msat_Solver_t * p )Msat_SolverPrintAssignment47,1399
void Msat_SolverPrintClauses( Msat_Solver_t * p )Msat_SolverPrintClauses79,2191
void Msat_SolverWriteDimacs( Msat_Solver_t * p, char * pFileName )Msat_SolverWriteDimacs118,3199
char * Msat_TimeStamp()Msat_TimeStamp163,4587

src/sat/msat/msatInt.h,5914
#define ABC__sat__msat__msatInt_hABC__sat__msat__msatInt_h22,682
typedef struct Msat_Clause_t_      Msat_Clause_t;Msat_Clause_t57,1909
typedef struct Msat_Queue_t_       Msat_Queue_t;Msat_Queue_t58,1959
typedef struct Msat_Order_t_       Msat_Order_t;Msat_Order_t59,2008
typedef struct Msat_MmFixed_t_     Msat_MmFixed_t;    Msat_MmFixed_t61,2120
typedef struct Msat_MmFlex_t_      Msat_MmFlex_t;     Msat_MmFlex_t62,2175
typedef struct Msat_MmStep_t_      Msat_MmStep_t;     Msat_MmStep_t63,2230
typedef int                       Msat_Lit_t;  Msat_Lit_t65,2311
typedef int                       Msat_Var_t;  Msat_Var_t66,2359
#define MSAT_VAR_UNASSIGNED MSAT_VAR_UNASSIGNED68,2435
#define MSAT_LIT_UNASSIGNED MSAT_LIT_UNASSIGNED69,2468
#define MSAT_ORDER_UNKNOWN MSAT_ORDER_UNKNOWN70,2501
#define L_IND L_IND73,2563
#define L_ind L_ind74,2589
#define L_LIT L_LIT75,2676
#define L_lit(L_lit76,2702
typedef struct Msat_SolverStats_t_ Msat_SolverStats_t;Msat_SolverStats_t78,2768
struct Msat_SolverStats_t_Msat_SolverStats_t_79,2823
    ABC_INT64_T   nStarts;        // the number of restartsnStarts81,2852
    ABC_INT64_T   nDecisions;     // the number of decisionsnDecisions82,2912
    ABC_INT64_T   nPropagations;  // the number of implicationsnPropagations83,2973
    ABC_INT64_T   nInspects;      // the number of times clauses are vising while watching themnInspects84,3037
    ABC_INT64_T   nConflicts;     // the number of conflictsnConflicts85,3133
    ABC_INT64_T   nSuccesses;     // the number of sat assignments foundnSuccesses86,3194
typedef struct Msat_SearchParams_t_ Msat_SearchParams_t;Msat_SearchParams_t89,3271
struct Msat_SearchParams_t_Msat_SearchParams_t_90,3328
    double  dVarDecay;dVarDecay92,3358
    double  dClaDecay;dClaDecay93,3381
struct Msat_Solver_t_Msat_Solver_t_97,3476
    int                 nClauses;    // the total number of clausesnClauses99,3500
    int                 nClausesStart; // the number of clauses before addingnClausesStart100,3568
    Msat_ClauseVec_t *  vClauses;    // problem clausesvClauses101,3646
    Msat_ClauseVec_t *  vLearned;    // learned clausesvLearned102,3702
    double              dClaInc;     // Amount to bump next clause with.dClaInc103,3758
    double              dClaDecay;   // INVERSE decay factor for clause activity: stores 1/decay.dClaDecay104,3831
    double *            pdActivity;  // A heuristic measurement of the activity of a variable.pdActivity106,3930
    float *             pFactors;    // the multiplicative factors of variable activitypFactors107,4025
    double              dVarInc;     // Amount to bump next variable with.dVarInc108,4113
    double              dVarDecay;   // INVERSE decay factor for variable activity: stores 1/decay. Use negative value for static variable order.dVarDecay109,4188
    Msat_Order_t *      pOrder;      // Keeps track of the decision variable order.pOrder110,4334
    Msat_ClauseVec_t ** pvWatched;   // 'pvWatched[lit]' is a list of constraints watching 'lit' (will go there if literal becomes true).pvWatched112,4419
    Msat_Queue_t *      pQueue;      // Propagation queue.pQueue113,4557
    int                 nVars;       // the current number of variablesnVars115,4617
    int                 nVarsAlloc;  // the maximum allowed number of variablesnVarsAlloc116,4689
    int *               pAssigns;    // The current assignments (literals or MSAT_VAR_UNKOWN)pAssigns117,4769
    int *               pModel;      // The satisfying assignmentpModel118,4863
    Msat_IntVec_t *     vTrail;      // List of assignments made. vTrail119,4929
    Msat_IntVec_t *     vTrailLim;   // Separator indices for different decision levels in 'trail'.vTrailLim120,4996
    Msat_Clause_t **    pReasons;    // 'reason[var]' is the clause that implied the variables current value, or 'NULL' if none.pReasons121,5096
    int *               pLevel;      // 'level[var]' is the decision level at which assignment was made. pLevel122,5225
    int                 nLevelRoot;  // Level of first proper decision.nLevelRoot123,5331
    double              dRandSeed;   // For the internal random number generator (makes solver deterministic over different platforms). dRandSeed125,5404
    int                 fVerbose;    // the verbosity flagfVerbose127,5542
    double              dProgress;   // Set by 'search()'.dProgress128,5601
    Msat_IntVec_t *     vConeVars;vConeVars131,5712
    Msat_IntVec_t *     vVarsUsed;vVarsUsed132,5747
    Msat_ClauseVec_t *  vAdjacents;vAdjacents133,5782
    int *               pSeen;       // time when a lit was seen for the last timepSeen136,5870
    int                 nSeenId;     // the id of current seeingnSeenId137,5953
    Msat_IntVec_t *     vReason;     // the temporary array of literalsvReason138,6018
    Msat_IntVec_t *     vTemp;       // the temporary array of literalsvTemp139,6090
    int *               pFreq;       // the number of times each var participated in conflictspFreq140,6162
    Msat_MmStep_t *     pMem;pMem143,6284
    Msat_SolverStats_t  Stats;Stats146,6333
    int                 nTwoLits;nTwoLits147,6364
    int                 nTwoLitsL;nTwoLitsL148,6398
    int                 nClausesInit;nClausesInit149,6433
    int                 nClausesAlloc;nClausesAlloc150,6471
    int                 nClausesAllocL;nClausesAllocL151,6510
    int                 nBackTracks;nBackTracks152,6550
struct Msat_ClauseVec_t_Msat_ClauseVec_t_155,6591
    Msat_Clause_t **    pArray;pArray157,6618
    int                 nSize;nSize158,6650
    int                 nCap;nCap159,6681
struct Msat_IntVec_t_Msat_IntVec_t_162,6715
    int *               pArray;pArray164,6739
    int                 nSize;nSize165,6771
    int                 nCap;nCap166,6802

src/sat/msat/msatOrderJ.c,2072
typedef struct Msat_OrderVar_t_  Msat_OrderVar_t;Msat_OrderVar_t36,1143
typedef struct Msat_OrderRing_t_ Msat_OrderRing_t;Msat_OrderRing_t37,1193
struct Msat_OrderVar_t_Msat_OrderVar_t_40,1276
    Msat_OrderVar_t    * pNext;pNext42,1302
    Msat_OrderVar_t    * pPrev;pPrev43,1334
    int                  Num;Num44,1366
struct Msat_OrderRing_t_Msat_OrderRing_t_48,1453
    Msat_OrderVar_t    * pRoot; pRoot50,1480
    int                 nItems;nItems51,1513
struct Msat_Order_t_Msat_Order_t_55,1588
    Msat_Solver_t *      pSat;         // the SAT solver pSat57,1611
    Msat_OrderVar_t *    pVars;        // the storage for variablespVars58,1669
    int                 nVarsAlloc;   // the number of variables allocatednVarsAlloc59,1737
    Msat_OrderRing_t     rVars;        // the J-boundary as a ring of variablesrVars60,1812
#define Msat_OrderVarIsInBoundary(Msat_OrderVarIsInBoundary69,2218
#define Msat_OrderVarIsAssigned(Msat_OrderVarIsAssigned70,2284
#define Msat_OrderVarIsUsedInCone(Msat_OrderVarIsUsedInCone71,2376
#define Msat_OrderRingForEachEntry(Msat_OrderRingForEachEntry74,2501
Msat_Order_t * Msat_OrderAlloc( Msat_Solver_t * pSat )Msat_OrderAlloc102,3594
void Msat_OrderSetBounds( Msat_Order_t * p, int nVarsMax )Msat_OrderSetBounds123,4161
void Msat_OrderClean( Msat_Order_t * p, Msat_IntVec_t * vCone )Msat_OrderClean150,4854
int Msat_OrderCheck( Msat_Order_t * p )Msat_OrderCheck171,5415
void Msat_OrderFree( Msat_Order_t * p )Msat_OrderFree245,7980
int Msat_OrderVarSelect( Msat_Order_t * p )Msat_OrderVarSelect262,8332
void Msat_OrderVarAssigned( Msat_Order_t * p, int Var )Msat_OrderVarAssigned305,9394
void Msat_OrderVarUnassigned( Msat_Order_t * p, int Var )Msat_OrderVarUnassigned343,10747
void Msat_OrderUpdate( Msat_Order_t * p, int Var )Msat_OrderUpdate390,12737
void Msat_OrderRingAddLast( Msat_OrderRing_t * pRing, Msat_OrderVar_t * pVar )Msat_OrderRingAddLast406,13061
void Msat_OrderRingRemove( Msat_OrderRing_t * pRing, Msat_OrderVar_t * pVar )Msat_OrderRingRemove442,14080

src/sat/msat/msatVec.c,1927
Msat_IntVec_t * Msat_IntVecAlloc( int nCap )Msat_IntVecAlloc48,1534
Msat_IntVec_t * Msat_IntVecAllocArray( int * pArray, int nSize )Msat_IntVecAllocArray71,2105
Msat_IntVec_t * Msat_IntVecAllocArrayCopy( int * pArray, int nSize )Msat_IntVecAllocArrayCopy92,2614
Msat_IntVec_t * Msat_IntVecDup( Msat_IntVec_t * pVec )Msat_IntVecDup114,3168
Msat_IntVec_t * Msat_IntVecDupArray( Msat_IntVec_t * pVec )Msat_IntVecDupArray136,3760
void Msat_IntVecFree( Msat_IntVec_t * p )Msat_IntVecFree160,4291
void Msat_IntVecFill( Msat_IntVec_t * p, int nSize, int Entry )Msat_IntVecFill177,4664
int * Msat_IntVecReleaseArray( Msat_IntVec_t * p )Msat_IntVecReleaseArray197,5100
int * Msat_IntVecReadArray( Msat_IntVec_t * p )Msat_IntVecReadArray217,5496
int Msat_IntVecReadSize( Msat_IntVec_t * p )Msat_IntVecReadSize233,5805
int Msat_IntVecReadEntry( Msat_IntVec_t * p, int i )Msat_IntVecReadEntry249,6110
void Msat_IntVecWriteEntry( Msat_IntVec_t * p, int i, int Entry )Msat_IntVecWriteEntry266,6465
int Msat_IntVecReadEntryLast( Msat_IntVec_t * p )Msat_IntVecReadEntryLast283,6834
void Msat_IntVecGrow( Msat_IntVec_t * p, int nCapMin )Msat_IntVecGrow299,7198
void Msat_IntVecShrink( Msat_IntVec_t * p, int nSizeNew )Msat_IntVecShrink318,7620
void Msat_IntVecClear( Msat_IntVec_t * p )Msat_IntVecClear335,7978
void Msat_IntVecPush( Msat_IntVec_t * p, int Entry )Msat_IntVecPush351,8278
int Msat_IntVecPushUnique( Msat_IntVec_t * p, int Entry )Msat_IntVecPushUnique374,8873
void Msat_IntVecPushUniqueOrder( Msat_IntVec_t * p, int Entry, int fIncrease )Msat_IntVecPushUniqueOrder395,9382
int Msat_IntVecPop( Msat_IntVec_t * p )Msat_IntVecPop425,10154
void Msat_IntVecSort( Msat_IntVec_t * p, int fReverse )Msat_IntVecSort442,10538
int Msat_IntVecSortCompare1( int * pp1, int * pp2 )Msat_IntVecSortCompare1463,11194
int Msat_IntVecSortCompare2( int * pp1, int * pp2 )Msat_IntVecSortCompare2484,11719

src/sat/msat/msatSolverApi.c,4418
int                Msat_SolverReadVarNum( Msat_Solver_t * p )                  { return p->nVars;      }Msat_SolverReadVarNum47,1460
int                Msat_SolverReadClauseNum( Msat_Solver_t * p )               { return p->nClauses;   }Msat_SolverReadClauseNum48,1565
int                Msat_SolverReadVarAllocNum( Msat_Solver_t * p )             { return p->nVarsAlloc; }Msat_SolverReadVarAllocNum49,1670
int                Msat_SolverReadDecisionLevel( Msat_Solver_t * p )           { return Msat_IntVecReadSize(p->vTrailLim); }Msat_SolverReadDecisionLevel50,1775
int *              Msat_SolverReadDecisionLevelArray( Msat_Solver_t * p )      { return p->pLevel;     }Msat_SolverReadDecisionLevelArray51,1900
Msat_Clause_t **    Msat_SolverReadReasonArray( Msat_Solver_t * p )            { return p->pReasons;   }Msat_SolverReadReasonArray52,2005
Msat_Type_t         Msat_SolverReadVarValue( Msat_Solver_t * p, Msat_Var_t Var ) { return (Msat_Type_t)p->pAssigns[Var]; }Msat_SolverReadVarValue53,2110
Msat_ClauseVec_t *  Msat_SolverReadLearned( Msat_Solver_t * p )                { return p->vLearned;   }Msat_SolverReadLearned54,2233
Msat_ClauseVec_t ** Msat_SolverReadWatchedArray( Msat_Solver_t * p )           { return p->pvWatched;  }Msat_SolverReadWatchedArray55,2338
int *              Msat_SolverReadAssignsArray( Msat_Solver_t * p )            { return p->pAssigns;   }Msat_SolverReadAssignsArray56,2443
int *              Msat_SolverReadModelArray( Msat_Solver_t * p )              { return p->pModel;     }Msat_SolverReadModelArray57,2548
int                Msat_SolverReadBackTracks( Msat_Solver_t * p )              { return (int)p->Stats.nConflicts; }Msat_SolverReadBackTracks58,2653
int                Msat_SolverReadInspects( Msat_Solver_t * p )                { return (int)p->Stats.nInspects;  }Msat_SolverReadInspects59,2769
Msat_MmStep_t *     Msat_SolverReadMem( Msat_Solver_t * p )                    { return p->pMem;       }Msat_SolverReadMem60,2885
int *              Msat_SolverReadSeenArray( Msat_Solver_t * p )               { return p->pSeen;      }Msat_SolverReadSeenArray61,2990
int                Msat_SolverIncrementSeenId( Msat_Solver_t * p )             { return ++p->nSeenId;  }Msat_SolverIncrementSeenId62,3095
void               Msat_SolverSetVerbosity( Msat_Solver_t * p, int fVerbose )  { p->fVerbose = fVerbose; }Msat_SolverSetVerbosity63,3200
void               Msat_SolverClausesIncrement( Msat_Solver_t * p )            { p->nClausesAlloc++;   }Msat_SolverClausesIncrement64,3307
void               Msat_SolverClausesDecrement( Msat_Solver_t * p )            { p->nClausesAlloc--;   }Msat_SolverClausesDecrement65,3412
void               Msat_SolverClausesIncrementL( Msat_Solver_t * p )           { p->nClausesAllocL++;  }Msat_SolverClausesIncrementL66,3517
void               Msat_SolverClausesDecrementL( Msat_Solver_t * p )           { p->nClausesAllocL--;  }Msat_SolverClausesDecrementL67,3622
void               Msat_SolverMarkLastClauseTypeA( Msat_Solver_t * p )         { Msat_ClauseSetTypeA( Msat_ClauseVecReadEntry( p->vClauses, Msat_ClauseVecReadSize(p->vClauses)-1 ), 1 ); }Msat_SolverMarkLastClauseTypeA68,3727
void               Msat_SolverMarkClausesStart( Msat_Solver_t * p )            { p->nClausesStart = Msat_ClauseVecReadSize(p->vClauses); }Msat_SolverMarkClausesStart69,3915
float *            Msat_SolverReadFactors( Msat_Solver_t * p )                 { return p->pFactors;   }Msat_SolverReadFactors70,4054
Msat_Clause_t * Msat_SolverReadClause( Msat_Solver_t * p, int Num )Msat_SolverReadClause83,4433
Msat_ClauseVec_t *  Msat_SolverReadAdjacents( Msat_Solver_t * p )Msat_SolverReadAdjacents104,5041
Msat_IntVec_t *  Msat_SolverReadConeVars( Msat_Solver_t * p )Msat_SolverReadConeVars120,5411
Msat_IntVec_t *  Msat_SolverReadVarsUsed( Msat_Solver_t * p )Msat_SolverReadVarsUsed136,5776
Msat_Solver_t * Msat_SolverAlloc( int nVarsAlloc,Msat_SolverAlloc154,6238
void Msat_SolverResize( Msat_Solver_t * p, int nVarsAlloc )Msat_SolverResize242,9215
void Msat_SolverClean( Msat_Solver_t * p, int nVars )Msat_SolverClean307,11598
void Msat_SolverFree( Msat_Solver_t * p )Msat_SolverFree386,14045
void Msat_SolverPrepare( Msat_Solver_t * p, Msat_IntVec_t * vVars )Msat_SolverPrepare451,16002
void Msat_SolverSetupTruthTables( unsigned uTruths[][2] )Msat_SolverSetupTruthTables484,16782

src/sat/msat/msatSolverSearch.c,1251
int  Msat_SolverAssume( Msat_Solver_t * p, Msat_Lit_t Lit )Msat_SolverAssume51,1859
void Msat_SolverUndoOne( Msat_Solver_t * p )Msat_SolverUndoOne73,2603
void Msat_SolverCancel( Msat_Solver_t * p )Msat_SolverCancel100,3322
void Msat_SolverCancelUntil( Msat_Solver_t * p, int Level )Msat_SolverCancelUntil128,4158
Msat_Clause_t * Msat_SolverRecord( Msat_Solver_t * p, Msat_IntVec_t * vLits )Msat_SolverRecord146,4627
int  Msat_SolverEnqueue( Msat_Solver_t * p, Msat_Lit_t Lit, Msat_Clause_t * pC )Msat_SolverEnqueue173,5461
Msat_Clause_t * Msat_SolverPropagate( Msat_Solver_t * p )Msat_SolverPropagate217,6996
int  Msat_SolverSimplifyDB( Msat_Solver_t * p )Msat_SolverSimplifyDB282,9553
void Msat_SolverReduceDB( Msat_Solver_t * p )Msat_SolverReduceDB332,11127
void Msat_SolverRemoveLearned( Msat_Solver_t * p )Msat_SolverRemoveLearned371,12458
void Msat_SolverRemoveMarked( Msat_Solver_t * p )Msat_SolverRemoveMarked403,13314
void Msat_SolverAnalyze( Msat_Solver_t * p, Msat_Clause_t * pC, Msat_IntVec_t * vLits_out, int * pLevel_out )Msat_SolverAnalyze455,14927
Msat_Type_t Msat_SolverSearch( Msat_Solver_t * p, int nConfLimit, int nLearnedLimit, int nBackTrackLimit, Msat_SearchParams_t * pPars )Msat_SolverSearch535,18090

src/sat/msat/msatSolverCore.c,483
int  Msat_SolverAddVar( Msat_Solver_t * p, int Level )Msat_SolverAddVar45,1415
int  Msat_SolverAddClause( Msat_Solver_t * p, Msat_IntVec_t * vLits )Msat_SolverAddClause65,1908
double Msat_SolverProgressEstimate( Msat_Solver_t * p )Msat_SolverProgressEstimate88,2523
void Msat_SolverPrintStats( Msat_Solver_t * p )Msat_SolverPrintStats110,3097
int  Msat_SolverSolve( Msat_Solver_t * p, Msat_IntVec_t * vAssumps, int nBackTrackLimit, int nTimeLimit )Msat_SolverSolve138,4342

src/sat/msat/msatClauseVec.c,1001
Msat_ClauseVec_t * Msat_ClauseVecAlloc( int nCap )Msat_ClauseVecAlloc45,1436
void Msat_ClauseVecFree( Msat_ClauseVec_t * p )Msat_ClauseVecFree68,1972
Msat_Clause_t ** Msat_ClauseVecReadArray( Msat_ClauseVec_t * p )Msat_ClauseVecReadArray85,2305
int Msat_ClauseVecReadSize( Msat_ClauseVec_t * p )Msat_ClauseVecReadSize101,2631
void Msat_ClauseVecGrow( Msat_ClauseVec_t * p, int nCapMin )Msat_ClauseVecGrow117,2983
void Msat_ClauseVecShrink( Msat_ClauseVec_t * p, int nSizeNew )Msat_ClauseVecShrink136,3423
void Msat_ClauseVecClear( Msat_ClauseVec_t * p )Msat_ClauseVecClear153,3787
void Msat_ClauseVecPush( Msat_ClauseVec_t * p, Msat_Clause_t * Entry )Msat_ClauseVecPush169,4093
Msat_Clause_t * Msat_ClauseVecPop( Msat_ClauseVec_t * p )Msat_ClauseVecPop192,4613
void Msat_ClauseVecWriteEntry( Msat_ClauseVec_t * p, int i, Msat_Clause_t * Entry )Msat_ClauseVecWriteEntry208,4944
Msat_Clause_t * Msat_ClauseVecReadEntry( Msat_ClauseVec_t * p, int i )Msat_ClauseVecReadEntry225,5331

src/sat/msat/msatSort.c,476
static double drand(double seed) {drand33,1043
static int irand(double seed, int size) {irand41,1278
void Msat_SolverSortDB( Msat_Solver_t * p )Msat_SolverSortDB61,1966
int Msat_SolverSortCompare( Msat_Clause_t ** ppC1, Msat_Clause_t ** ppC2 )Msat_SolverSortCompare96,3107
void Msat_SolverSortSelection( Msat_Clause_t ** array, int size )Msat_SolverSortSelection119,3669
void Msat_SolverSort( Msat_Clause_t ** array, int size, double seed )Msat_SolverSort147,4481

src/sat/glucose/Alg.h,439
#define Glucose_Alg_hGlucose_Alg_h22,1343
namespace Gluco {Gluco28,1428
static inline void remove(V& ts, const T& t)remove38,1761
static inline bool find(V& ts, const T& t)find49,1991
static inline void copy(const T& from, T& to)copy63,2320
static inline void copy(const vec<T>& from, vec<T>& to, bool append = false)copy70,2423
static inline void append(const vec<T>& from, vec<T>& to){ copy(from, to, true); }append81,2662

src/sat/glucose/System.h,185
#define Glucose_System_hGlucose_System_h22,1346
namespace Gluco {Gluco34,1598
static inline double Gluco::cpuTime(void) { return (double)clock() / CLOCKS_PER_SEC; }cpuTime52,2159

src/sat/glucose/Vec.h,2598
#define Glucose_Vec_hGlucose_Vec_h22,1343
namespace Gluco {Gluco32,1501
class vec {vec40,1771
    T*  data;data41,1783
    int sz;sz42,1797
    int cap;cap43,1809
    vec<T>&  operator = (vec<T>& other) { assert(0); return *this; }operator =46,1865
             vec        (vec<T>& other) { assert(0); }vec47,1934
    static inline int  imax   (int x, int y) { int mask = (y-x) >> (sizeof(int)*8-1); return (x&mask) + (y&(~mask)); }imax50,2049
    static inline void nextCap(int& cap){ cap += ((cap >> 1) + 2) & ~1; }nextCap52,2244
    vec()                       : data(NULL) , sz(0)   , cap(0)    { }vec56,2348
    explicit vec(int size)      : data(NULL) , sz(0)   , cap(0)    { growTo(size); }vec57,2419
    vec(int size, const T& pad) : data(NULL) , sz(0)   , cap(0)    { growTo(size, pad); }vec58,2504
   ~vec()                                                          { clear(true); }~vec59,2594
    operator T*       (void)           { return data; }operator T*62,2712
    int      size     (void) const     { return sz; }size65,2793
    void     shrink   (int nelems)     { assert(nelems <= sz); for (int i = 0; i < nelems; i++) sz--, data[sz].~T(); }shrink66,2847
    void     shrink_  (int nelems)     { assert(nelems <= sz); sz -= nelems; }shrink_67,2966
    int      capacity (void) const     { return cap; }capacity68,3045
    void     push  (void)              { if (sz == cap) capacity(sz+1); new (&data[sz]) T(); sz++; }push75,3290
    void     push  (const T& elem)     { if (sz == cap) capacity(sz+1); data[sz++] = elem; }push76,3391
    void     push_ (const T& elem)     { assert(sz < cap); data[sz++] = elem; }push_77,3484
    void     pop   (void)              { assert(sz > 0); sz--, data[sz].~T(); }pop78,3564
    const T& last  (void) const        { return data[sz-1]; }last84,3968
    T&       last  (void)              { return data[sz-1]; }last85,4030
    const T& operator [] (int index) const { return data[index]; }operator []88,4118
    T&       operator [] (int index)       { return data[index]; }operator []89,4185
    void copyTo(vec<T>& copy) const { copy.clear(); copy.growTo(sz); for (int i = 0; i < sz; i++) copy[i] = data[i]; }copyTo92,4295
    void moveTo(vec<T>& dest) { dest.clear(true); dest.data = data; dest.sz = sz; dest.cap = cap; data = NULL; sz = 0; cap = 0; }moveTo93,4414
void vec<T>::capacity(int min_cap) {capacity98,4567
void vec<T>::growTo(int size, const T& pad) {growTo107,4921
void vec<T>::growTo(int size) {growTo115,5103
void vec<T>::clear(bool dealloc) {clear123,5276

src/sat/glucose/Dimacs.h,316
#define Glucose_Dimacs_hGlucose_Dimacs_h22,1346
namespace Gluco {Gluco31,1498
static void readClause(B& in, Solver& S, vec<Lit>& lits) {readClause37,1668
static void parse_DIMACS_main(B& in, Solver& S) {parse_DIMACS_main50,2044
static void parse_DIMACS(gzFile input_stream, Solver& S) {parse_DIMACS84,3101

src/sat/glucose/Sort.h,642
#define Glucose_Sort_hGlucose_Sort_h22,1344
namespace Gluco {Gluco31,1568
struct LessThan_default {LessThan_default34,1605
    bool operator () (T x, T y) { return x < y; }operator ()35,1631
void selectionSort(T* array, int size, LessThan lt)selectionSort40,1721
template <class T> static inline void selectionSort(T* array, int size) {selectionSort54,2073
void sort(T* array, int size, LessThan lt)sort58,2240
template <class T> static inline void sort(T* array, int size) {sort82,2789
template <class T, class LessThan> void sort(vec<T>& v, LessThan lt) {sort90,3021
template <class T> void sort(vec<T>& v) {sort92,3125

src/sat/glucose/pstdint.h,12143
#define _PSTDINT_H_INCLUDED_PSTDINT_H_INCLUDED202,9013
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER205,9189
#   define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER208,9267
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER212,9351
#    define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER216,9462
#    define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER218,9508
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER223,9604
#  define PRINTF_INTMAX_MODIFIER PRINTF_INTMAX_MODIFIER226,9680
#  define PRINTF_INT64_HEX_WIDTH PRINTF_INT64_HEX_WIDTH229,9775
#  define PRINTF_UINT64_HEX_WIDTH PRINTF_UINT64_HEX_WIDTH232,9854
#  define PRINTF_INT32_HEX_WIDTH PRINTF_INT32_HEX_WIDTH235,9933
#  define PRINTF_UINT32_HEX_WIDTH PRINTF_UINT32_HEX_WIDTH238,10011
#  define PRINTF_INT16_HEX_WIDTH PRINTF_INT16_HEX_WIDTH241,10089
#  define PRINTF_UINT16_HEX_WIDTH PRINTF_UINT16_HEX_WIDTH244,10167
#  define PRINTF_INT8_HEX_WIDTH PRINTF_INT8_HEX_WIDTH247,10244
#  define PRINTF_UINT8_HEX_WIDTH PRINTF_UINT8_HEX_WIDTH250,10320
#  define PRINTF_INT64_DEC_WIDTH PRINTF_INT64_DEC_WIDTH253,10397
#  define PRINTF_UINT64_DEC_WIDTH PRINTF_UINT64_DEC_WIDTH256,10476
#  define PRINTF_INT32_DEC_WIDTH PRINTF_INT32_DEC_WIDTH259,10555
#  define PRINTF_UINT32_DEC_WIDTH PRINTF_UINT32_DEC_WIDTH262,10634
#  define PRINTF_INT16_DEC_WIDTH PRINTF_INT16_DEC_WIDTH265,10713
#  define PRINTF_UINT16_DEC_WIDTH PRINTF_UINT16_DEC_WIDTH268,10791
#  define PRINTF_INT8_DEC_WIDTH PRINTF_INT8_DEC_WIDTH271,10868
#  define PRINTF_UINT8_DEC_WIDTH PRINTF_UINT8_DEC_WIDTH274,10944
#  define PRINTF_INTMAX_HEX_WIDTH PRINTF_INTMAX_HEX_WIDTH277,11022
#  define PRINTF_UINTMAX_HEX_WIDTH PRINTF_UINTMAX_HEX_WIDTH280,11122
#  define PRINTF_INTMAX_DEC_WIDTH PRINTF_INTMAX_DEC_WIDTH283,11222
#  define PRINTF_UINTMAX_DEC_WIDTH PRINTF_UINTMAX_DEC_WIDTH286,11322
#   define INT64_C(INT64_C296,11624
#   define UINT64_C(UINT64_C299,11713
#   define INT32_C(INT32_C302,11803
#   define UINT32_C(UINT32_C305,11892
#   define INT16_C(INT16_C308,11982
#   define UINT16_C(UINT16_C311,12045
#   define INT8_C(INT8_C314,12106
#   define UINT8_C(UINT8_C317,12167
#   define UINT64_MAX UINT64_MAX320,12231
#   define INT64_MAX INT64_MAX323,12314
#   define UINT32_MAX UINT32_MAX326,12395
#   define INT32_MAX INT32_MAX329,12467
#   define INTMAX_MAX INTMAX_MAX332,12538
#   define INTMAX_MIN INTMAX_MIN335,12607
#define _PSTDINT_H_INCLUDED_PSTDINT_H_INCLUDED351,13160
#define _PSTDINT_H_INCLUDED_PSTDINT_H_INCLUDED355,13224
# define SIZE_MAX SIZE_MAX358,13270
# define UINT8_MAX UINT8_MAX368,13487
    typedef unsigned char uint8_t;uint8_t372,13637
#   define UINT8_C(UINT8_C373,13672
# define INT8_MAX INT8_MAX380,13783
# define INT8_MIN INT8_MIN383,13830
    typedef signed char int8_t;int8_t387,13984
#   define INT8_C(INT8_C388,14016
# define UINT16_MAX UINT16_MAX395,14127
  typedef unsigned int uint16_t;uint16_t399,14281
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER401,14345
# define UINT16_C(UINT16_C403,14388
  typedef unsigned short uint16_t;uint16_t405,14458
# define UINT16_C(UINT16_C406,14493
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER408,14562
# define INT16_MAX INT16_MAX416,14677
# define INT16_MIN INT16_MIN419,14728
  typedef signed int int16_t;int16_t423,14886
# define INT16_C(INT16_C424,14916
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER426,14983
  typedef signed short int16_t;int16_t429,15056
# define INT16_C(INT16_C430,15088
#  define PRINTF_INT16_MODIFIER PRINTF_INT16_MODIFIER432,15155
# define UINT32_MAX UINT32_MAX440,15271
  typedef unsigned long uint32_t;uint32_t444,15434
# define UINT32_C(UINT32_C445,15468
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER447,15528
  typedef unsigned int uint32_t;uint32_t450,15603
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER452,15667
# define UINT32_C(UINT32_C454,15710
  typedef unsigned short uint32_t;uint32_t456,15770
# define UINT32_C(UINT32_C457,15805
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER459,15880
# define INT32_MAX INT32_MAX467,15994
# define INT32_MIN INT32_MIN470,16052
  typedef signed long int32_t;int32_t474,16215
# define INT32_C(INT32_C475,16246
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER477,16304
  typedef signed int int32_t;int32_t480,16377
# define INT32_C(INT32_C481,16407
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER483,16460
  typedef signed short int32_t;int32_t486,16533
# define INT32_C(INT32_C487,16565
#  define PRINTF_INT32_MODIFIER PRINTF_INT32_MODIFIER489,16630
#undef stdint_int64_definedstdint_int64_defined503,16943
#  define stdint_int64_definedstdint_int64_defined506,17119
   typedef long long int64_t;int64_t507,17150
   typedef unsigned long long uint64_t;uint64_t508,17180
#  define UINT64_C(UINT64_C509,17220
#  define  INT64_C(INT64_C510,17251
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER512,17313
#  define stdint_int64_definedstdint_int64_defined519,17456
   __extension__ typedef long long int64_t;int64_t520,17487
   __extension__ typedef unsigned long long uint64_t;uint64_t521,17531
#  define UINT64_C(UINT64_C522,17585
#  define  INT64_C(INT64_C523,17616
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER525,17678
#  define stdint_int64_definedstdint_int64_defined528,17895
   typedef long long int64_t;int64_t529,17926
   typedef unsigned long long uint64_t;uint64_t530,17956
#  define UINT64_C(UINT64_C531,17996
#  define  INT64_C(INT64_C532,18027
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER534,18089
#  define stdint_int64_definedstdint_int64_defined537,18339
   typedef __int64 int64_t;int64_t538,18370
   typedef unsigned __int64 uint64_t;uint64_t539,18398
#  define UINT64_C(UINT64_C540,18436
#  define  INT64_C(INT64_C541,18468
#   define PRINTF_INT64_MODIFIER PRINTF_INT64_MODIFIER543,18531
# define LONG_LONG_MAX LONG_LONG_MAX549,18645
# define ULONG_LONG_MAX ULONG_LONG_MAX552,18728
# define INT64_MAX INT64_MAX556,18838
# define INT64_MIN INT64_MIN559,18940
# define UINT64_MAX UINT64_MAX562,19044
# define PRINTF_INT64_HEX_WIDTH PRINTF_INT64_HEX_WIDTH570,19186
# define PRINTF_INT32_HEX_WIDTH PRINTF_INT32_HEX_WIDTH573,19261
# define PRINTF_INT16_HEX_WIDTH PRINTF_INT16_HEX_WIDTH576,19335
# define PRINTF_INT8_HEX_WIDTH PRINTF_INT8_HEX_WIDTH579,19408
# define PRINTF_INT64_DEC_WIDTH PRINTF_INT64_DEC_WIDTH582,19481
# define PRINTF_INT32_DEC_WIDTH PRINTF_INT32_DEC_WIDTH585,19556
# define PRINTF_INT16_DEC_WIDTH PRINTF_INT16_DEC_WIDTH588,19631
# define PRINTF_INT8_DEC_WIDTH PRINTF_INT8_DEC_WIDTH591,19704
# define PRINTF_UINT64_DEC_WIDTH PRINTF_UINT64_DEC_WIDTH594,19778
# define PRINTF_UINT32_DEC_WIDTH PRINTF_UINT32_DEC_WIDTH597,19855
# define PRINTF_UINT16_DEC_WIDTH PRINTF_UINT16_DEC_WIDTH600,19932
# define PRINTF_UINT8_DEC_WIDTH PRINTF_UINT8_DEC_WIDTH603,20007
  typedef int64_t intmax_t;intmax_t613,20275
  typedef uint64_t uintmax_t;uintmax_t614,20303
# define  INTMAX_MAX INTMAX_MAX615,20333
# define  INTMAX_MIN INTMAX_MIN616,20366
# define UINTMAX_MAX UINTMAX_MAX617,20399
# define UINTMAX_C(UINTMAX_C618,20432
# define  INTMAX_C(INTMAX_C619,20466
#   define PRINTF_INTMAX_MODIFIER PRINTF_INTMAX_MODIFIER621,20532
#  define PRINTF_INTMAX_HEX_WIDTH PRINTF_INTMAX_HEX_WIDTH624,20629
#  define PRINTF_INTMAX_DEC_WIDTH PRINTF_INTMAX_DEC_WIDTH627,20727
  typedef int32_t intmax_t;intmax_t630,20798
  typedef uint32_t uintmax_t;uintmax_t631,20826
# define  INTMAX_MAX INTMAX_MAX632,20856
# define UINTMAX_MAX UINTMAX_MAX633,20889
# define UINTMAX_C(UINTMAX_C634,20922
# define  INTMAX_C(INTMAX_C635,20956
#   define PRINTF_INTMAX_MODIFIER PRINTF_INTMAX_MODIFIER637,21022
#  define PRINTF_INTMAX_HEX_WIDTH PRINTF_INTMAX_HEX_WIDTH640,21119
#  define PRINTF_INTMAX_DEC_WIDTH PRINTF_INTMAX_DEC_WIDTH643,21217
  typedef   int8_t   int_least8_t;int_least8_t655,21587
  typedef  uint8_t  uint_least8_t;uint_least8_t656,21622
  typedef  int16_t  int_least16_t;int_least16_t657,21657
  typedef uint16_t uint_least16_t;uint_least16_t658,21692
  typedef  int32_t  int_least32_t;int_least32_t659,21727
  typedef uint32_t uint_least32_t;uint_least32_t660,21762
# define PRINTF_LEAST32_MODIFIER PRINTF_LEAST32_MODIFIER661,21797
# define PRINTF_LEAST16_MODIFIER PRINTF_LEAST16_MODIFIER662,21852
# define  UINT_LEAST8_MAX UINT_LEAST8_MAX663,21907
# define   INT_LEAST8_MAX INT_LEAST8_MAX664,21944
# define UINT_LEAST16_MAX UINT_LEAST16_MAX665,21981
# define  INT_LEAST16_MAX INT_LEAST16_MAX666,22018
# define UINT_LEAST32_MAX UINT_LEAST32_MAX667,22055
# define  INT_LEAST32_MAX INT_LEAST32_MAX668,22092
# define   INT_LEAST8_MIN INT_LEAST8_MIN669,22129
# define  INT_LEAST16_MIN INT_LEAST16_MIN670,22166
# define  INT_LEAST32_MIN INT_LEAST32_MIN671,22203
    typedef  int64_t  int_least64_t;int_least64_t673,22269
    typedef uint64_t uint_least64_t;uint_least64_t674,22306
#   define PRINTF_LEAST64_MODIFIER PRINTF_LEAST64_MODIFIER675,22343
#   define UINT_LEAST64_MAX UINT_LEAST64_MAX676,22400
#   define  INT_LEAST64_MAX INT_LEAST64_MAX677,22439
#   define  INT_LEAST64_MIN INT_LEAST64_MIN678,22478
#undef stdint_least_definedstdint_least_defined681,22532
typedef   int_least8_t   int_fast8_t;int_fast8_t692,22955
typedef  uint_least8_t  uint_fast8_t;uint_fast8_t693,22993
typedef  int_least16_t  int_fast16_t;int_fast16_t694,23031
typedef uint_least16_t uint_fast16_t;uint_fast16_t695,23069
typedef  int_least32_t  int_fast32_t;int_fast32_t696,23107
typedef uint_least32_t uint_fast32_t;uint_fast32_t697,23145
#define  UINT_FAST8_MAX UINT_FAST8_MAX698,23183
#define   INT_FAST8_MAX INT_FAST8_MAX699,23224
#define UINT_FAST16_MAX UINT_FAST16_MAX700,23265
#define  INT_FAST16_MAX INT_FAST16_MAX701,23306
#define UINT_FAST32_MAX UINT_FAST32_MAX702,23347
#define  INT_FAST32_MAX INT_FAST32_MAX703,23388
#define   INT_FAST8_MIN INT_FAST8_MIN704,23429
#define  INT_FAST16_MIN INT_FAST16_MIN705,23470
#define  INT_FAST32_MIN INT_FAST32_MIN706,23511
  typedef  int_least64_t  int_fast64_t;int_fast64_t708,23580
  typedef uint_least64_t uint_fast64_t;uint_fast64_t709,23620
# define UINT_FAST64_MAX UINT_FAST64_MAX710,23660
# define  INT_FAST64_MAX INT_FAST64_MAX711,23702
# define  INT_FAST64_MIN INT_FAST64_MIN712,23744
#undef stdint_int64_definedstdint_int64_defined715,23794
#  define WCHAR_MIN WCHAR_MIN725,24047
#  define WCHAR_MAX WCHAR_MAX728,24096
# define STDINT_H_UINTPTR_T_DEFINEDSTDINT_H_UINTPTR_T_DEFINED738,24341
#  define stdint_intptr_bits stdint_intptr_bits743,24534
#    define stdint_intptr_bits stdint_intptr_bits746,24688
#    define stdint_intptr_bits stdint_intptr_bits748,24730
#  define stdint_intptr_bits stdint_intptr_bits751,24861
#  define stdint_intptr_glue3_i(stdint_intptr_glue3_i759,25072
#  define stdint_intptr_glue3(stdint_intptr_glue3760,25120
#    define PRINTF_INTPTR_MODIFIER PRINTF_INTPTR_MODIFIER762,25222
#    define PTRDIFF_MAX PTRDIFF_MAX765,25354
#    define PTRDIFF_MIN PTRDIFF_MIN768,25474
#    define UINTPTR_MAX UINTPTR_MAX771,25594
#    define INTPTR_MAX INTPTR_MAX774,25714
#    define INTPTR_MIN INTPTR_MIN777,25833
#    define INTPTR_C(INTPTR_C780,25950
#    define UINTPTR_C(UINTPTR_C783,26069
  typedef stdint_intptr_glue3(uint,stdint_intptr_bits,_t) uintptr_t;uintptr_t785,26169
  typedef stdint_intptr_glue3( int,stdint_intptr_bits,_t)  intptr_t;intptr_t786,26238
  typedef ptrdiff_t intptr_t;intptr_t790,26432
# define STDINT_H_UINTPTR_T_DEFINEDSTDINT_H_UINTPTR_T_DEFINED792,26470
# define SIG_ATOMIC_MAX SIG_ATOMIC_MAX800,26617
#define glue3_aux(glue3_aux816,26945
#define glue3(glue3817,26982
#define DECLU(DECLU819,27021
#define DECLI(DECLI820,27103
#define DECL(DECL822,27184
#define TESTUMAX(TESTUMAX824,27230
#define REPORTERROR(REPORTERROR826,27384
#define X_SIZE_MAX X_SIZE_MAX828,27477
int main () {main830,27510
#define STR(STR892,30774
#define Q(Q893,30792

src/sat/glucose/Map.h,3356
#define Glucose_Map_hGlucose_Map_h21,1289
namespace Gluco {Gluco28,1408
template<class K> struct Hash  { uint32_t operator()(const K& k)               const { return hash(k);  } };Hash34,1564
template<class K> struct Hash  { uint32_t operator()(const K& k)               const { return hash(k);  } };operator ()34,1564
template<class K> struct Equal { bool     operator()(const K& k1, const K& k2) const { return k1 == k2; } };Equal35,1673
template<class K> struct Equal { bool     operator()(const K& k1, const K& k2) const { return k1 == k2; } };operator ()35,1673
template<class K> struct DeepHash  { uint32_t operator()(const K* k)               const { return hash(*k);  } };DeepHash37,1783
template<class K> struct DeepHash  { uint32_t operator()(const K* k)               const { return hash(*k);  } };operator ()37,1783
template<class K> struct DeepEqual { bool     operator()(const K* k1, const K* k2) const { return *k1 == *k2; } };DeepEqual38,1897
template<class K> struct DeepEqual { bool     operator()(const K* k1, const K* k2) const { return *k1 == *k2; } };operator ()38,1897
static inline uint32_t hash(uint32_t x){ return x; }hash40,2013
static inline uint32_t hash(uint64_t x){ return (uint32_t)x; }hash41,2066
static inline uint32_t hash(int32_t x) { return (uint32_t)x; }hash42,2129
static inline uint32_t hash(int64_t x) { return (uint32_t)x; }hash43,2192
static const int nprimes          = 25;nprimes50,2376
static const int primes [nprimes] = { 31, 73, 151, 313, 643, 1291, 2593, 5233, 10501, 21013, 42073, 84181, 168451, 337219, 674701, 1349473, 2699299, 5398891, 10798093, 21596719, 43193641, 86387383, 172775299, 345550609, 691101253 };primes51,2416
class Map {Map58,2858
    struct Pair { K key; D data; };Pair60,2879
    struct Pair { K key; D data; };key60,2879
    struct Pair { K key; D data; };data60,2879
    H          hash;hash63,2926
    E          equals;equals64,2947
    vec<Pair>* table;table66,2971
    int        cap;cap67,2993
    int        size;size68,3013
    Map<K,D,H,E>&  operator = (Map<K,D,H,E>& other) { assert(0); }operator =71,3077
                   Map        (Map<K,D,H,E>& other) { assert(0); }Map72,3144
    bool    checkCap(int new_size) const { return new_size > cap; }checkCap74,3212
    int32_t index  (const K& k) const { return hash(k) % cap; }index76,3281
    void   _insert (const K& k, const D& d) { _insert77,3345
    void    rehash () {rehash81,3494
    Map () : table(NULL), cap(0), size(0) {}Map104,4055
    Map (const H& h, const E& e) : hash(h), equals(e), table(NULL), cap(0), size(0){}Map105,4100
    ~Map () { delete [] table; }~Map106,4186
    const D& operator [] (const K& k) constoperator []109,4280
    D& operator [] (const K& k)operator []122,4676
    void insert (const K& k, const D& d) { if (checkCap(size+1)) rehash(); _insert(k, d); size++; }insert135,5046
    bool peek   (const K& k, D& d) const {peek136,5146
    bool has   (const K& k) const {has146,5449
    void remove(const K& k) {remove156,5761
    void clear  () {clear167,6042
    int  elems() const { return size; }elems173,6141
    int  bucket_count() const { return cap; }bucket_count174,6181
    void moveTo(Map& other){moveTo177,6301
    const vec<Pair>& bucket(int i) const { return table[i]; }bucket189,6588

src/sat/glucose/Queue.h,1073
#define Glucose_Queue_hGlucose_Queue_h22,1345
namespace Gluco {Gluco28,1432
class Queue {Queue33,1570
    vec<T>  buf;buf34,1584
    int     first;first35,1601
    int     end;end36,1620
    typedef T Key;Key39,1646
    Queue() : buf(1), first(0), end(0) {}Queue41,1666
    void clear (bool dealloc = false) { buf.clear(dealloc); buf.growTo(1); first = end = 0; }clear43,1709
    int  size  () const { return (end >= first) ? end - first : end - first + buf.size(); }size44,1803
    const T& operator [] (int index) const  { assert(index >= 0); assert(index < size()); return buf[(first + index) % buf.size()]; }operator []46,1896
    T&       operator [] (int index)        { assert(index >= 0); assert(index < size()); return buf[(first + index) % buf.size()]; }operator []47,2030
    T    peek  () const { assert(first != end); return buf[first]; }peek49,2165
    void pop   () { assert(first != end); first++; if (first == buf.size()) first = 0; }pop50,2234
    void insert(T elem) {   // INVARIANT: buf[end] is always unusedinsert51,2323

src/sat/glucose/Options.h,4744
#define Glucose_Options_hGlucose_Options_h21,1293
#define __STDC_FORMAT_MACROS__STDC_FORMAT_MACROS23,1320
namespace Gluco {Gluco36,1560
class OptionOption52,2158
    const char* name;name55,2182
    const char* description;description56,2204
    const char* category;category57,2233
    const char* type_name;type_name58,2259
    static vec<Option*>& getOptionList () { static vec<Option*> options; return options; }getOptionList60,2287
    static const char*&  getUsageString() { static const char* usage_str; return usage_str; }getUsageString61,2378
    static const char*&  getHelpPrefixString() { static const char* help_prefix_str = ""; return help_prefix_str; }getHelpPrefixString62,2472
    struct OptionLt {OptionLt64,2589
        bool operator()(const Option* x, const Option* y) {operator ()65,2611
    Option(const char* name_, Option71,2835
    virtual ~Option() {}~Option84,3119
struct IntRange {IntRange100,3694
    int begin;begin101,3712
    int end;end102,3727
    IntRange(int b, int e) : begin(b), end(e) {}IntRange103,3740
struct Int64Range {Int64Range106,3793
    int64_t begin;begin107,3813
    int64_t end;end108,3832
    Int64Range(int64_t b, int64_t e) : begin(b), end(e) {}Int64Range109,3849
struct DoubleRange {DoubleRange112,3912
    double begin;begin113,3933
    double end;end114,3951
    bool  begin_inclusive;begin_inclusive115,3967
    bool  end_inclusive;end_inclusive116,3994
    DoubleRange(double b, bool binc, double e, bool einc) : begin(b), end(e), begin_inclusive(binc), end_inclusive(einc) {}DoubleRange117,4019
class DoubleOption : public OptionDoubleOption125,4270
    DoubleRange range;range128,4319
    double      value;value129,4342
    DoubleOption(const char* c, const char* n, const char* d, double def = double(), DoubleRange r = DoubleRange(-HUGE_VAL, false, HUGE_VAL, false))DoubleOption132,4375
    operator      double   (void) const { return value; }operator double137,4697
    operator      double&  (void)       { return value; }operator double&138,4755
    DoubleOption& operator=(double x)   { value = x; return *this; }operator =139,4813
    virtual bool parse(const char* str){parse141,4883
    virtual void help (bool verbose = false){help165,5686
class IntOption : public OptionIntOption185,6284
    IntRange range;range188,6330
    int32_t  value;value189,6350
    IntOption(const char* c, const char* n, const char* d, int32_t def = int32_t(), IntRange r = IntRange(INT32_MIN, INT32_MAX))IntOption192,6380
    operator   int32_t   (void) const { return value; }operator int32_t195,6573
    operator   int32_t&  (void)       { return value; }operator int32_t&196,6629
    IntOption& operator= (int32_t x)  { value = x; return *this; }operator =197,6685
    virtual bool parse(const char* str){parse199,6753
    virtual void help (bool verbose = false){help222,7409
class Int64Option : public OptionInt64Option247,8126
    Int64Range range;range250,8174
    int64_t  value;value251,8196
    Int64Option(const char* c, const char* n, const char* d, int64_t def = int64_t(), Int64Range r = Int64Range(INT64_MIN, INT64_MAX))Int64Option254,8226
    operator     int64_t   (void) const { return value; }operator int64_t257,8425
    operator     int64_t&  (void)       { return value; }operator int64_t&258,8483
    Int64Option& operator= (int64_t x)  { value = x; return *this; }operator =259,8541
    virtual bool parse(const char* str){parse261,8611
    virtual void help (bool verbose = false){help284,9268
class StringOption : public OptionStringOption310,10015
    const char* value;value312,10052
    StringOption(const char* c, const char* n, const char* d, const char* def = NULL) StringOption314,10084
    operator      const char*  (void) const     { return value; }operator const char*317,10225
    operator      const char*& (void)           { return value; }operator const char*&318,10291
    StringOption& operator=    (const char* x)  { value = x; return *this; }operator =319,10357
    virtual bool parse(const char* str){parse321,10435
    virtual void help (bool verbose = false){help331,10661
class BoolOption : public OptionBoolOption345,11030
    bool value;value347,11065
    BoolOption(const char* c, const char* n, const char* d, bool v) BoolOption350,11091
    operator    bool     (void) const { return value; }operator bool353,11210
    operator    bool&    (void)       { return value; }operator bool&354,11266
    BoolOption& operator=(bool b)     { value = b; return *this; }operator =355,11322
    virtual bool parse(const char* str){parse357,11390
    virtual void help (bool verbose = false){help371,11687

src/sat/glucose/XAlloc.h,211
#define Glucose_XAlloc_hGlucose_XAlloc_h22,1293
namespace Gluco {Gluco32,1449
class OutOfMemoryException{};OutOfMemoryException37,1669
static inline void* xrealloc(void *ptr, size_t size)xrealloc38,1699

src/sat/glucose/Constants.h,294
#define DYNAMICNBLEVELDYNAMICNBLEVEL22,1382
#define CONSTANTREMOVECLAUSECONSTANTREMOVECLAUSE23,1405
#define UPDATEVARACTIVITYUPDATEVARACTIVITY24,1434
#define RATIOREMOVECLAUSES RATIOREMOVECLAUSES27,1497
#define LOWER_BOUND_FOR_BLOCKING_RESTART LOWER_BOUND_FOR_BLOCKING_RESTART32,1555

src/sat/glucose/Solver.h,19217
#define Glucose_Solver_hGlucose_Solver_h30,1696
namespace Gluco {Gluco42,1986
class Solver {Solver47,2135
    int SolverType; // ABC identifies Glucose's type as 0SolverType50,2159
    void * pCnfMan;                      // external CNF managerpCnfMan58,2315
    int(*pCnfFunc)(void * p, int, int*); // external callback. messages: 0: unsat; 1: sat; -1: still workingpCnfFunc59,2380
    int nCallConfl;                      // callback will be called every this number of conflictsnCallConfl60,2489
    bool terminate_search_early;         // used to stop the solver early if it as instructed by an external callerterminate_search_early61,2588
    int * pstop;                         // another callbackpstop62,2704
    uint64_t nRuntimeLimit;              // runtime limitnRuntimeLimit63,2765
    vec<int> user_vec;user_vec64,2823
    vec<Lit> user_lits;user_lits65,2846
    vec<lbool> model;             // If problem is satisfiable, this vector contains the model (if any).model145,7275
    vec<Lit>   conflict;          // If problem is unsatisfiable (possibly under assumptions),conflict146,7380
    int       verbosity;verbosity151,7624
    int       verbEveryConflicts;verbEveryConflicts152,7649
    int       showModel;showModel153,7683
    double    K;K155,7738
    double    R;R156,7755
    double    sizeLBDQueue;sizeLBDQueue157,7772
    double    sizeTrailQueue;sizeTrailQueue158,7800
    int firstReduceDB;firstReduceDB161,7862
    int incReduceDB;incReduceDB162,7885
    int specialIncReduceDB;specialIncReduceDB163,7906
    unsigned int lbLBDFrozenClause;lbLBDFrozenClause164,7934
    int lbSizeMinimizingClause;lbSizeMinimizingClause167,8007
    unsigned int lbLBDMinimizingClause;lbLBDMinimizingClause168,8039
    double    var_decay;var_decay170,8080
    double    clause_decay;clause_decay171,8105
    double    random_var_freq;random_var_freq172,8133
    double    random_seed;random_seed173,8164
    int       ccmin_mode;         // Controls conflict clause minimization (0=none, 1=basic, 2=deep).ccmin_mode174,8191
    int       phase_saving;       // Controls the level of phase saving (0=none, 1=limited, 2=full).phase_saving175,8293
    bool      rnd_pol;            // Use random polarities for branching heuristics.rnd_pol176,8394
    bool      rnd_init_act;       // Initialize variable activities with a small random value.rnd_init_act177,8479
    double    garbage_frac;       // The fraction of wasted memory allowed before a garbage collection is triggered.garbage_frac178,8574
    FILE*               certifiedOutput;certifiedOutput181,8741
    bool                certifiedUNSAT;certifiedUNSAT182,8782
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbRemovedClauses187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbReducedClauses187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbDL2187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbBin187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbUn187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbReduceDB187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;solves187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;starts187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;decisions187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;rnd_decisions187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;propagations187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;conflicts187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;conflictsRestarts187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbstopsrestarts187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;nbstopsrestartssame187,8882
    int64_t nbRemovedClauses,nbReducedClauses,nbDL2,nbBin,nbUn,nbReduceDB,solves, starts, decisions, rnd_decisions, propagations, conflicts,conflictsRestarts,nbstopsrestarts,nbstopsrestartssame,lastblockatrestart;lastblockatrestart187,8882
    int64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;dec_vars188,9096
    int64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;clauses_literals188,9096
    int64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;learnts_literals188,9096
    int64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;max_literals188,9096
    int64_t dec_vars, clauses_literals, learnts_literals, max_literals, tot_literals;tot_literals188,9096
    long curRestart;curRestart191,9194
    struct VarData { CRef reason; int level; };VarData194,9248
    struct VarData { CRef reason; int level; };reason194,9248
    struct VarData { CRef reason; int level; };level194,9248
    static inline VarData mkVarData(CRef cr, int l){ VarData d = {cr, l}; return d; }mkVarData195,9296
    struct Watcher {Watcher197,9383
        CRef cref;cref198,9404
        Lit  blocker;blocker199,9423
        Watcher(CRef cr, Lit p) : cref(cr), blocker(p) {}Watcher200,9445
        bool operator==(const Watcher& w) const { return cref == w.cref; }operator ==201,9503
        bool operator!=(const Watcher& w) const { return cref != w.cref; }operator !=202,9578
    struct WatcherDeletedWatcherDeleted205,9661
        const ClauseAllocator& ca;ca207,9693
        WatcherDeleted(const ClauseAllocator& _ca) : ca(_ca) {}WatcherDeleted208,9728
        bool operator()(const Watcher& w) const { return ca[w.cref].mark() == 1; }operator ()209,9792
    struct VarOrderLt {VarOrderLt212,9883
        const vec<double>&  activity;activity213,9907
        bool operator () (Var x, Var y) const { return activity[x] > activity[y]; }operator ()214,9945
        VarOrderLt(const vec<double>&  act) : activity(act) { }VarOrderLt215,10029
    int lastIndexRed;lastIndexRed221,10130
    bool                ok;               // If FALSE, the constraints are already unsatisfiable. No part of the solver state may be used!ok222,10152
    double              cla_inc;          // Amount to bump next clause with.cla_inc223,10291
    vec<double>         activity;         // A heuristic measurement of the activity of a variable.activity224,10369
    double              var_inc;          // Amount to bump next variable with.var_inc225,10469
                        watches;          // 'watches[lit]' is a list of constraints watching 'lit' (will go there if literal becomes true).watches227,10597
                        watchesBin;          // 'watches[lit]' is a list of constraints watching 'lit' (will go there if literal becomes true).watchesBin229,10786
    vec<CRef>           clauses;          // List of problem clauses.clauses230,10930
    vec<CRef>           learnts;          // List of learnt clauses.learnts231,11000
    vec<lbool>          assigns;          // The current assignments.assigns233,11070
    vec<char>           polarity;         // The preferred polarity of each variable.polarity234,11140
    vec<char>           decision;         // Declares if a variable is eligible for selection in the decision heuristic.decision235,11226
    vec<Lit>            trail;            // Assignment stack; stores all assigments made in the order they were made.trail236,11347
    vec<int>            nbpos;nbpos237,11466
    vec<int>            trail_lim;        // Separator indices for different decision levels in 'trail'.trail_lim238,11497
    vec<VarData>        vardata;          // Stores reason and level for each variable.vardata239,11602
    int                 qhead;            // Head of queue (as index into the trail -- no more explicit propagation queue in MiniSat).qhead240,11690
    int                 simpDB_assigns;   // Number of top-level assignments since last execution of 'simplify()'.simpDB_assigns241,11825
    int64_t             simpDB_props;     // Remaining number of propagations that must be made before next execution of 'simplify()'.simpDB_props242,11940
    vec<Lit>            assumptions;      // Current set of assumptions provided to solve by the user.assumptions243,12075
    Heap<VarOrderLt>    order_heap;       // A priority queue of variables ordered with respect to the variable activity.order_heap244,12178
    double              progress_estimate;// Set by 'search()'.progress_estimate245,12300
    bool                remove_satisfied; // Indicates whether possibly inefficient linear scan for satisfied clauses should be performed in 'simplify'.remove_satisfied246,12364
    vec<unsigned int> permDiff;      // permDiff[var] contains the current conflict number... Used to count the number of  LBDpermDiff247,12517
    vec<Lit> lastDecisionLevel; lastDecisionLevel251,12742
    ClauseAllocator     ca;ca254,12783
    int nbclausesbeforereduce;            // To know when it is time to reduce clause databasenbclausesbeforereduce256,12812
    bqueue<unsigned int> trailQueue,lbdQueue; // Bounded queues for restarts.trailQueue258,12912
    bqueue<unsigned int> trailQueue,lbdQueue; // Bounded queues for restarts.lbdQueue258,12912
    float sumLBD; // used to compute the global average of LBD. Restarts...sumLBD259,12990
    int sumAssumptions;sumAssumptions260,13066
    vec<char>           seen;seen266,13264
    vec<Lit>            analyze_stack;analyze_stack267,13294
    vec<Lit>            analyze_toclear;analyze_toclear268,13333
    vec<Lit>            add_tmp;add_tmp269,13374
    unsigned int  MYFLAG;MYFLAG270,13407
    double              max_learnts;max_learnts273,13435
    double              learntsize_adjust_confl;learntsize_adjust_confl274,13472
    int                 learntsize_adjust_cnt;learntsize_adjust_cnt275,13521
    int64_t             conflict_budget;    // -1 means no budget.conflict_budget279,13604
    int64_t             propagation_budget; // -1 means no budget.propagation_budget280,13671
    bool                asynch_interrupt;asynch_interrupt281,13738
    int incremental; // Use incremental SAT Solverincremental285,13826
    int nbVarsInitialFormula; // nb VAR in formula without assumptions (incremental SAT)nbVarsInitialFormula286,13877
    double totalTime4Sat,totalTime4Unsat;totalTime4Sat287,13966
    double totalTime4Sat,totalTime4Unsat;totalTime4Unsat287,13966
    int nbSatCalls,nbUnsatCalls;nbSatCalls288,14008
    int nbSatCalls,nbUnsatCalls;nbUnsatCalls288,14008
    vec<int> assumptionPositions,initialPositions;assumptionPositions289,14041
    vec<int> assumptionPositions,initialPositions;initialPositions289,14041
    inline bool isSelector(Var v) {return (incremental && v>nbVarsInitialFormula);}isSelector340,18080
    static inline double drand(double& seed) {drand346,18260
    static inline int irand(double& seed, int size) {irand353,18520
inline CRef Solver::reason(Var x) const { return vardata[x].reason; }reason361,18761
inline int  Solver::level (Var x) const { return vardata[x].level; }level362,18831
inline void Solver::insertVarOrder(Var x) {insertVarOrder364,18901
inline void Solver::varDecayActivity() { var_inc *= (1 / var_decay); }varDecayActivity367,19016
inline void Solver::varBumpActivity(Var v) { varBumpActivity(v, var_inc); }varBumpActivity368,19087
inline void Solver::varBumpActivity(Var v, double inc) {varBumpActivity369,19163
inline void Solver::claDecayActivity() { cla_inc *= (1 / clause_decay); }claDecayActivity380,19509
inline void Solver::claBumpActivity (Clause& c) {claBumpActivity381,19583
inline void Solver::checkGarbage(void){ checkGarbage(garbage_frac); }checkGarbage388,19854
inline void Solver::checkGarbage(double gf){checkGarbage389,19924
inline bool     Solver::enqueue         (Lit p, CRef from)      { return value(p) != l_Undef ? value(p) != l_False : (uncheckedEnqueue(p, from), true); }enqueue394,20103
inline bool     Solver::addClause       (const vec<Lit>& ps)    { ps.copyTo(add_tmp); return addClause_(add_tmp); }addClause395,20257
inline bool     Solver::addEmptyClause  ()                      { add_tmp.clear(); return addClause_(add_tmp); }addEmptyClause396,20373
inline bool     Solver::addClause       (Lit p)                 { add_tmp.clear(); add_tmp.push(p); return addClause_(add_tmp); }addClause397,20486
inline bool     Solver::addClause       (Lit p, Lit q)          { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); return addClause_(add_tmp); }addClause398,20616
inline bool     Solver::addClause       (Lit p, Lit q, Lit r)   { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); add_tmp.push(r); return addClause_(add_tmp); }addClause399,20763
inline bool     Solver::locked          (const Clause& c) const { locked400,20927
inline void     Solver::newDecisionLevel()                      { trail_lim.push(trail.size()); }newDecisionLevel408,21341
inline int      Solver::decisionLevel ()      const   { return trail_lim.size(); }decisionLevel410,21440
inline uint32_t Solver::abstractLevel (Var x) const   { return 1 << (level(x) & 31); }abstractLevel411,21523
inline lbool    Solver::value         (Var x) const   { return assigns[x]; }value412,21610
inline lbool    Solver::value         (Lit p) const   { return assigns[var(p)] ^ sign(p); }value413,21687
inline lbool    Solver::modelValue    (Var x) const   { return model[x]; }modelValue414,21779
inline lbool    Solver::modelValue    (Lit p) const   { return model[var(p)] ^ sign(p); }modelValue415,21854
inline int      Solver::nAssigns      ()      const   { return trail.size(); }nAssigns416,21944
inline int      Solver::nClauses      ()      const   { return clauses.size(); }nClauses417,22023
inline int      Solver::nLearnts      ()      const   { return learnts.size(); }nLearnts418,22104
inline int      Solver::nVars         ()      const   { return vardata.size(); }nVars419,22185
inline int      Solver::nFreeVars     ()      const   { return (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]); }nFreeVars420,22266
inline void     Solver::setPolarity   (Var v, bool b) { polarity[v] = b; }setPolarity421,22402
inline void     Solver::setDecisionVar(Var v, bool b) setDecisionVar422,22477
inline void     Solver::setConfBudget(int64_t x){ conflict_budget    = conflicts    + x; }setConfBudget430,22672
inline void     Solver::setPropBudget(int64_t x){ propagation_budget = propagations + x; }setPropBudget431,22763
inline void     Solver::interrupt(){ asynch_interrupt = true; }interrupt432,22854
inline void     Solver::clearInterrupt(){ asynch_interrupt = false; }clearInterrupt433,22918
inline void     Solver::budgetOff(){ conflict_budget = propagation_budget = -1; }budgetOff434,22988
inline bool     Solver::withinBudget() const {withinBudget435,23070
inline bool     Solver::solve         ()                    { budgetOff(); assumptions.clear(); return solve_() == l_True; }solve443,23591
inline bool     Solver::solve         (Lit p)               { budgetOff(); assumptions.clear(); assumptions.push(p); return solve_() == l_True; }solve444,23716
inline bool     Solver::solve         (Lit p, Lit q)        { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); return solve_() == l_True; }solve445,23862
inline bool     Solver::solve         (Lit p, Lit q, Lit r) { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); assumptions.push(r); return solve_() == l_True; }solve446,24029
inline bool     Solver::solve         (const vec<Lit>& assumps){ budgetOff(); assumps.copyTo(assumptions); return solve_() == l_True; }solve447,24217
inline lbool    Solver::solveLimited  (const vec<Lit>& assumps){ assumps.copyTo(assumptions); return solve_(); }solveLimited448,24353
inline bool     Solver::okay          ()      const   { return ok; }okay449,24466
inline void     Solver::toDimacs      (const char* file){ vec<Lit> as; toDimacs(file, as); }toDimacs451,24536
inline void     Solver::toDimacs      (const char* file, Lit p){ vec<Lit> as; as.push(p); toDimacs(file, as); }toDimacs452,24629
inline void     Solver::toDimacs      (const char* file, Lit p, Lit q){ vec<Lit> as; as.push(p); as.push(q); toDimacs(file, as); }toDimacs453,24741
inline void     Solver::toDimacs      (const char* file, Lit p, Lit q, Lit r){ vec<Lit> as; as.push(p); as.push(q); as.push(r); toDimacs(file, as); }toDimacs454,24872
inline void     Solver::addVar(Var v) { while (v >= nVars()) newVar(); }addVar456,25023
inline void Solver::printLit(Lit l)printLit462,25213
inline void Solver::printClause(CRef cr)printClause468,25370
inline void Solver::printInitialClause(CRef cr)printInitialClause477,25529

src/sat/glucose/Alloc.h,1607
#define Glucose_Alloc_hGlucose_Alloc_h22,1292
namespace Gluco {Gluco29,1411
class RegionAllocatorRegionAllocator35,1590
    T*        memory;memory37,1614
    uint32_t  sz;sz38,1636
    uint32_t  cap;cap39,1654
    uint32_t  wasted_;wasted_40,1673
    typedef uint32_t Ref;Ref46,1801
    enum { Ref_Undef = UINT32_MAX };Ref_Undef47,1827
    enum { Unit_Size = sizeof(uint32_t) };Unit_Size48,1864
    explicit RegionAllocator(uint32_t start_cap = 1024*1024) : memory(NULL), sz(0), cap(0), wasted_(0){ capacity(start_cap); }RegionAllocator50,1908
    ~RegionAllocator()~RegionAllocator51,2035
    uint32_t size      () const      { return sz; }size58,2128
    uint32_t wasted    () const      { return wasted_; }wasted59,2180
    void     free_     (int size)    { wasted_ += size; }free_62,2274
    void     clear     ()            { sz = 0; wasted_=0; }clear63,2332
    T&       operator[](Ref r)       { assert(r >= 0 && r < sz); return memory[r]; }operator []66,2459
    const T& operator[](Ref r) const { assert(r >= 0 && r < sz); return memory[r]; }operator []67,2544
    T*       lea       (Ref r)       { assert(r >= 0 && r < sz); return &memory[r]; }lea69,2630
    const T* lea       (Ref r) const { assert(r >= 0 && r < sz); return &memory[r]; }lea70,2716
    Ref      ael       (const T* t)  { assert((void*)t >= (void*)&memory[0] && (void*)t < (void*)&memory[sz-1]);ael71,2802
    void     moveTo(RegionAllocator& to) {moveTo74,2957
void RegionAllocator<T>::capacity(uint32_t min_cap)capacity89,3236
RegionAllocator<T>::alloc(int size)alloc114,4101

src/sat/glucose/Heap.h,1471
#define Glucose_Heap_hGlucose_Heap_h22,1344
namespace Gluco {Gluco28,1430
class Heap {Heap35,1637
    Comp     lt;       // The heap is a minimum-heap with respect to this comparatorlt36,1650
    vec<int> heap;     // Heap of integersheap37,1735
    vec<int> indices;  // Each integers position (index) in the Heapindices38,1778
    static inline int left  (int i) { return i*2+1; }left41,1883
    static inline int right (int i) { return (i+1)*2; }right42,1937
    static inline int parent(int i) { return (i-1) >> 1; }parent43,1993
    void percolateUp(int i)percolateUp46,2054
    void percolateDown(int i)percolateDown62,2409
    Heap(const Comp& c) : lt(c) { }Heap78,2851
    int  size      ()          const { return heap.size(); }size80,2888
    bool empty     ()          const { return heap.size() == 0; }empty81,2949
    bool inHeap    (int n)     const { return n < indices.size() && indices[n] >= 0; }inHeap82,3015
    int  operator[](int index) const { assert(index < heap.size()); return heap[index]; }operator []83,3102
    void decrease  (int n) { assert(inHeap(n)); percolateUp  (indices[n]); }decrease86,3194
    void increase  (int n) { assert(inHeap(n)); percolateDown(indices[n]); }increase87,3271
    void update(int n)update91,3399
    void insert(int n)insert101,3576
    int  removeMin()removeMin112,3765
    void build(vec<int>& ns) {build125,4089
    void clear(bool dealloc = false) clear139,4429

src/sat/glucose/BoundedQueue.h,1698
#define BoundedQueue_hBoundedQueue_h24,1407
namespace Gluco {Gluco32,1594
class bqueue {bqueue35,1632
    vec<T>  elems;elems36,1647
    int     first;first37,1666
    int        last;last38,1685
    uint64_t sumofqueue;sumofqueue39,1706
    int     maxsize;maxsize40,1731
    int     queuesize; // Number of current elements (must be < maxsize !)queuesize41,1752
    bool expComputed;expComputed42,1827
    double exp,value;exp43,1849
    double exp,value;value43,1849
 bqueue(void) : first(0), last(0), sumofqueue(0), maxsize(0), queuesize(0),expComputed(false) { } bqueue45,1879
    void initSize(int size) {growTo(size);exp = 2.0/(size+1);} // Init size of bounded size queueinitSize47,1983
    void push(T x) {push49,2086
    T peek() { assert(queuesize>0); return elems[last]; }peek62,2508
    void pop() {sumofqueue-=elems[last]; queuesize--; if ((++last) == maxsize) last = 0;}pop63,2566
    uint64_t getsum() const {return sumofqueue;}getsum65,2661
    unsigned int getavg() const {return (unsigned int)(sumofqueue/((uint64_t)queuesize));}getavg66,2710
    int maxSize() const {return maxsize;}maxSize67,2801
    double getavgDouble() const {getavgDouble68,2843
    int isvalid() const {return (queuesize==maxsize);}isvalid75,3007
    void growTo(int size) {growTo77,3067
    double getAvgExp() {getAvgExp83,3235
    void fastclear() {first = 0; last = 0; queuesize=0; sumofqueue=0;} // to be called after restarts... Discard the queuefastclear101,3640
    int  size(void)    { return queuesize; }size103,3768
    void clear(bool dealloc = false)   { elems.clear(dealloc); first = 0; maxsize=0; queuesize=0;sumofqueue=0;}clear105,3814

src/sat/glucose/SimpSolver.h,4999
#define Glucose_SimpSolver_hGlucose_SimpSolver_h22,1350
namespace Gluco {Gluco29,1476
class SimpSolver : public Solver {SimpSolver34,1597
    int     parsing;parsing86,3758
    int     grow;              // Allow a variable elimination step to grow by a number of clauses (default to zero).grow87,3779
    int     clause_lim;        // Variables are not eliminated if it produces a resolvent with a length above this limit.clause_lim88,3897
    int     subsumption_lim;   // Do not check if subsumption against a clause larger than this. -1 means no limit.subsumption_lim90,4072
    double  simp_garbage_frac; // A different limit for when to issue a GC during simplification (Also see 'garbage_frac').simp_garbage_frac91,4188
    bool    use_asymm;         // Shrink clauses by asymmetric branching.use_asymm93,4313
    bool    use_rcheck;        // Check if a clause is already implied. Prett costly, and subsumes subsumptions :)use_rcheck94,4387
    bool    use_elim;          // Perform variable elimination.use_elim95,4502
    int     merges;merges99,4593
    int     asymm_lits;asymm_lits100,4613
    int     eliminated_vars;eliminated_vars101,4637
    int     eliminated_clauses;eliminated_clauses102,4666
    struct ElimLt {ElimLt108,4745
        const vec<int>& n_occ;n_occ109,4765
        explicit ElimLt(const vec<int>& no) : n_occ(no) {}ElimLt110,4796
        uint64_t cost  (Var x)        const { return (uint64_t)n_occ[toInt(mkLit(x))] * (uint64_t)n_occ[toInt(~mkLit(x))]; }cost114,5039
        bool operator()(Var x, Var y) const { return cost(x) < cost(y); }operator ()115,5164
    struct ClauseDeleted {ClauseDeleted124,5489
        const ClauseAllocator& ca;ca125,5516
        explicit ClauseDeleted(const ClauseAllocator& _ca) : ca(_ca) {}ClauseDeleted126,5551
        bool operator()(const CRef& cr) const { return ca[cr].mark() == 1; } };operator ()127,5623
    int                 elimorder;elimorder131,5732
    bool                use_simplification;use_simplification132,5767
    vec<uint32_t>       elimclauses;elimclauses133,5811
    vec<char>           touched;touched134,5848
                        occurs;occurs136,5925
    vec<int>            n_occ;n_occ137,5957
    Heap<ElimLt>        elim_heap;elim_heap138,5988
    Queue<CRef>         subsumption_queue;subsumption_queue139,6023
    vec<char>           frozen;frozen140,6066
    vec<char>           eliminated;eliminated141,6098
    int                 bwdsub_assigns;bwdsub_assigns142,6134
    int                 n_touched;n_touched143,6174
    CRef                bwdsub_tmpunit;bwdsub_tmpunit147,6237
inline bool SimpSolver::isEliminated (Var v) const { return eliminated.size() > 0 ? eliminated[v] != 0 : 0; }isEliminated175,7516
inline void SimpSolver::updateElimHeap(Var v) {updateElimHeap176,7626
inline bool SimpSolver::addClause    (const vec<Lit>& ps)  { ps.copyTo(add_tmp); return addClause_(add_tmp); }addClause183,7893
inline bool SimpSolver::addEmptyClause()                   { add_tmp.clear(); return addClause_(add_tmp); }addEmptyClause184,8004
inline bool SimpSolver::addClause    (Lit p)               { add_tmp.clear(); add_tmp.push(p); return addClause_(add_tmp); }addClause185,8112
inline bool SimpSolver::addClause    (Lit p, Lit q)        { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); return addClause_(add_tmp); }addClause186,8237
inline bool SimpSolver::addClause    (Lit p, Lit q, Lit r) { add_tmp.clear(); add_tmp.push(p); add_tmp.push(q); add_tmp.push(r); return addClause_(add_tmp); }addClause187,8379
inline void SimpSolver::setFrozen    (Var v, bool b) { frozen[v] = (char)b; if (use_simplification && !b) { updateElimHeap(v); } }setFrozen188,8538
inline bool SimpSolver::solve        (                     bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); return solve_(do_simp, turn_off_simp) == l_True; }solve190,8670
inline bool SimpSolver::solve        (Lit p       ,        bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); assumptions.push(p); return solve_(do_simp, turn_off_simp) == l_True; }solve191,8851
inline bool SimpSolver::solve        (Lit p, Lit q,        bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); return solve_(do_simp, turn_off_simp) == l_True; }solve192,9053
inline bool SimpSolver::solve        (Lit p, Lit q, Lit r, bool do_simp, bool turn_off_simp)  { budgetOff(); assumptions.clear(); assumptions.push(p); assumptions.push(q); assumptions.push(r); return solve_(do_simp, turn_off_simp) == l_True; }solve193,9276
inline bool SimpSolver::solve        (const vec<Lit>& assumps, bool do_simp, bool turn_off_simp){ solve194,9520
inline lbool SimpSolver::solveLimited (const vec<Lit>& assumps, bool do_simp, bool turn_off_simp){ solveLimited197,9717
inline void SimpSolver::addVar(Var v) { while (v >= nVars()) newVar(); }addVar200,9892

src/sat/glucose/AbcGlucose.h,655
#define ABC_SAT_GLUCOSE_H_ABC_SAT_GLUCOSE_H_22,580
#define GLUCOSE_UNSAT GLUCOSE_UNSAT34,1074
#define GLUCOSE_SAT GLUCOSE_SAT35,1099
#define GLUCOSE_UNDEC GLUCOSE_UNDEC36,1124
typedef struct Glucose_Pars_ Glucose_Pars;Glucose_Pars45,1399
struct Glucose_Pars_ {Glucose_Pars_46,1442
    int pre;     // preprocessingpre47,1465
    int verb;    // verbosityverb48,1499
    int cust;    // customizablecust49,1529
    int nConfls; // conflict limit (0 = no limit)nConfls50,1562
static inline Glucose_Pars Glucose_CreatePars(int p, int v, int c, int nConfls)Glucose_CreatePars53,1616
typedef void bmcg_sat_solver;bmcg_sat_solver63,1835

src/sat/glucose/SolverTypes.h,8988
#define Glucose_SolverTypes_hGlucose_SolverTypes_h31,1702
namespace Gluco {Gluco43,1939
typedef int Var;Var52,2249
#define var_Undef var_Undef53,2266
struct Lit {Lit56,2291
    int     x;x57,2304
    bool operator == (Lit p) const { return x == p.x; }operator ==61,2396
    bool operator != (Lit p) const { return x != p.x; }operator !=62,2452
    bool operator <  (Lit p) const { return x < p.x;  } // '<' makes p, ~p adjacent in the ordering.operator <63,2508
inline  Lit  mkLit     (Var var, bool sign = false) { Lit p; p.x = var + var + (int)sign; return p; }mkLit67,2614
inline  Lit  operator ~(Lit p)              { Lit q; q.x = p.x ^ 1; return q; }operator ~68,2716
inline  Lit  operator ^(Lit p, bool b)      { Lit q; q.x = p.x ^ (unsigned int)b; return q; }operator ^69,2796
inline  bool sign      (Lit p)              { return p.x & 1; }sign70,2890
inline  int  var       (Lit p)              { return p.x >> 1; }var71,2954
inline  int  toInt     (Var v)              { return v; } toInt74,3098
inline  int  toInt     (Lit p)              { return p.x; } toInt75,3157
inline  Lit  toLit     (int i)              { Lit p; p.x = i; return p; } toLit76,3218
const Lit lit_Undef = { -2 };  // }- Useful special constants.lit_Undef81,3432
const Lit lit_Error = { -1 };  // }lit_Error82,3495
#define l_True l_True93,3984
#define l_False l_False94,4096
#define l_Undef l_Undef95,4139
class lbool {lbool97,4183
    uint8_t value;value98,4197
    explicit lbool(uint8_t v) : value(v) { }lbool101,4225
    lbool()       : value(0) { }lbool103,4271
    explicit lbool(bool x) : value(!x) { }lbool104,4304
    bool  operator == (lbool b) const { return (((b.value&2) & (value&2)) | (!(b.value&2)&(value == b.value))) != 0; }operator ==106,4348
    bool  operator != (lbool b) const { return !(*this == b); }operator !=107,4467
    lbool operator ^  (bool  b) const { return lbool((uint8_t)(value^(uint8_t)b)); }operator ^108,4531
    lbool operator && (lbool b) const { operator &&110,4617
    lbool operator || (lbool b) const {operator ||115,4792
inline int   toInt  (lbool l) { return l.value; }toInt123,5039
inline lbool toLbool(int   v) { return lbool((uint8_t)v);  }toLbool124,5089
typedef RegionAllocator<uint32_t>::Ref CRef;CRef130,5321
class Clause {Clause132,5367
      unsigned mark      : 2;mark134,5395
      unsigned learnt    : 1;learnt135,5425
      unsigned has_extra : 1;has_extra136,5455
      unsigned reloced   : 1;reloced137,5485
      unsigned lbd       : 26;lbd138,5515
      unsigned canbedel  : 1;canbedel139,5546
      unsigned size      : 32;size140,5576
      unsigned szWithoutSelectors : 32;szWithoutSelectors141,5607
    }                            header;header143,5648
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];lit144,5689
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];act144,5689
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];abs144,5689
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];rel144,5689
    union { Lit lit; float act; uint32_t abs; CRef rel; } data[0];data144,5689
    Clause(const V& ps, bool use_extra, bool learnt) {Clause150,5902
    void calcAbstraction() {calcAbstraction169,6427
    int          size        ()      const   { return header.size; }size177,6672
    void         shrink      (int i)         { assert(i <= size()); if (header.has_extra) data[header.size-i] = data[header.size]; header.size -= i; }shrink178,6741
    void         pop         ()              { shrink(1); }pop179,6892
    bool         learnt      ()      const   { return header.learnt; }learnt180,6952
    bool         has_extra   ()      const   { return header.has_extra; }has_extra181,7023
    uint32_t     mark        ()      const   { return header.mark; }mark182,7097
    void         mark        (uint32_t m)    { header.mark = m; }mark183,7166
    const Lit&   last        ()      const   { return data[header.size-1].lit; }last184,7232
    bool         reloced     ()      const   { return header.reloced; }reloced186,7314
    CRef         relocation  ()      const   { return data[0].rel; }relocation187,7386
    void         relocate    (CRef c)        { header.reloced = 1; data[0].rel = c; }relocate188,7455
    Lit&         operator [] (int i)         { return data[i].lit; }operator []192,7711
    Lit          operator [] (int i) const   { return data[i].lit; }operator []193,7780
    operator const Lit* (void) const         { return (Lit*)data; }operator const Lit*194,7849
    float&       activity    ()              { assert(header.has_extra); return data[header.size].act; }activity196,7918
    uint32_t     abstraction () const        { assert(header.has_extra); return data[header.size].abs; }abstraction197,8023
    void         setLBD(int i)  {header.lbd = i;} setLBD201,8225
    unsigned int        lbd    () const        { return header.lbd; }lbd203,8349
    void setCanBeDel(bool b) {header.canbedel = b;}setCanBeDel204,8419
    bool canBeDel() {return header.canbedel;}canBeDel205,8471
    void setSizeWithoutSelectors   (unsigned int n)              {header.szWithoutSelectors = n; }setSizeWithoutSelectors206,8517
    unsigned int        sizeWithoutSelectors   () const        { return header.szWithoutSelectors; }sizeWithoutSelectors207,8616
const CRef CRef_Undef = RegionAllocator<uint32_t>::Ref_Undef;CRef_Undef216,8897
class ClauseAllocator : public RegionAllocator<uint32_t>ClauseAllocator217,8959
    static int clauseWord32Size(int size, bool has_extra){clauseWord32Size219,9018
    bool extra_clause_field;extra_clause_field222,9182
    ClauseAllocator(uint32_t start_cap) : RegionAllocator<uint32_t>(start_cap), extra_clause_field(false){}ClauseAllocator224,9212
    ClauseAllocator() : extra_clause_field(false){}ClauseAllocator225,9320
    void moveTo(ClauseAllocator& to){moveTo227,9373
    CRef alloc(const Lits& ps, bool learnt = false)alloc232,9538
    Clause&       operator[](Ref r)       { return (Clause&)RegionAllocator<uint32_t>::operator[](r); }operator []245,10000
    const Clause& operator[](Ref r) const { return (Clause&)RegionAllocator<uint32_t>::operator[](r); }operator []246,10104
    Clause*       lea       (Ref r)       { return (Clause*)RegionAllocator<uint32_t>::lea(r); }lea247,10208
    const Clause* lea       (Ref r) const { return (Clause*)RegionAllocator<uint32_t>::lea(r); }lea248,10305
    Ref           ael       (const Clause* t){ return RegionAllocator<uint32_t>::ael((uint32_t*)t); }ael249,10402
    void free_(CRef cid)free_251,10505
    void reloc(CRef& cr, ClauseAllocator& to)reloc257,10665
class OccListsOccLists284,11581
    vec<Vec>  occs;occs286,11598
    vec<char> dirty;dirty287,11618
    vec<Idx>  dirties;dirties288,11639
    Deleted   deleted;deleted289,11662
    OccLists(const Deleted& d) : deleted(d) {}OccLists292,11695
    void  init      (const Idx& idx){ occs.growTo(toInt(idx)+1); dirty.growTo(toInt(idx)+1, 0); }init294,11747
    Vec&  operator[](const Idx& idx){ return occs[toInt(idx)]; }operator []296,11913
    Vec&  lookup    (const Idx& idx){ if (dirty[toInt(idx)]) clean(idx); return occs[toInt(idx)]; }lookup297,11978
    void  smudge    (const Idx& idx){smudge301,12141
    void  clear(bool free = true){clear308,12299
void OccLists<Idx,Vec,Deleted>::cleanAll()cleanAll317,12478
void OccLists<Idx,Vec,Deleted>::clean(const Idx& idx)clean328,12798
class CMapCMap345,13228
    struct CRefHash {CRefHash347,13241
        uint32_t operator()(CRef cr) const { return (uint32_t)cr; } };operator ()348,13263
    typedef Map<CRef, T, CRefHash> HashTable;HashTable350,13335
    HashTable map;map351,13381
    void     clear       ()                           { map.clear(); }clear355,13442
    int      size        ()                const      { return map.elems(); }size356,13513
    void     insert      (CRef cr, const T& t){ map.insert(cr, t); }insert360,13632
    void     growTo      (CRef cr, const T& t){ map.insert(cr, t); } // NOTE: for compatibilitygrowTo361,13701
    void     remove      (CRef cr)            { map.remove(cr); }remove362,13797
    bool     has         (CRef cr, T& t)      { return map.peek(cr, t); }has363,13863
    const T& operator [] (CRef cr) const      { return map[cr]; }operator []366,13999
    T&       operator [] (CRef cr)            { return map[cr]; }operator []367,14065
    int  bucket_count() const { return map.bucket_count(); }bucket_count370,14189
    const vec<typename HashTable::Pair>& bucket(int i) const { return map.bucket(i); }bucket371,14250
    void moveTo(CMap& other){ map.moveTo(other.map); }moveTo374,14373
    void debug(){debug377,14447
inline Lit Clause::subsumes(const Clause& other) constsubsumes395,15142
inline void Clause::strengthen(Lit p)strengthen426,16165

src/sat/glucose/stdint.h,0

src/sat/glucose/ParseUtils.h,1268
#define Glucose_ParseUtils_hGlucose_ParseUtils_h22,1350
namespace Gluco {Gluco32,1499
static const int buffer_size = 1048576;buffer_size37,1664
class StreamBuffer {StreamBuffer40,1706
    gzFile        in;in41,1727
    unsigned char buf[buffer_size];buf42,1749
    int           pos;pos43,1785
    int           size;size44,1808
    void assureLookahead() {assureLookahead46,1833
    explicit StreamBuffer(gzFile i) : in(i), pos(0), size(0) { assureLookahead(); }StreamBuffer52,1973
    int  operator *  () const { return (pos >= size) ? EOF : buf[pos]; }operator *54,2058
    void operator ++ ()       { pos++; assureLookahead(); }operator ++55,2131
    int  position    () const { return pos; }position56,2191
static inline bool isEof(StreamBuffer& in) { return *in == EOF;  }isEof64,2407
static inline bool isEof(const char*   in) { return *in == '\0'; }isEof65,2474
static void skipWhitespace(B& in) {skipWhitespace72,2730
static void skipLine(B& in) {skipLine78,2851
static double parseDouble(B& in) { // only in the form X.XXXXXe-XXparseDouble85,3006
static int parseInt(B& in) {parseInt114,3937
static bool match(B& in, const char* str) {match130,4467
static bool eagerMatch(B& in, const char* str) {eagerMatch143,4762

src/sat/glucose/IntTypes.h,172
#define Glucose_IntTypes_hGlucose_IntTypes_h21,1294
#define __STDC_LIMIT_MACROS__STDC_LIMIT_MACROS33,1577
#define PRIu64 PRIu6442,1701
#define PRIi64 PRIi6443,1721

src/sat/lsat/solver.h,246
#define ABC__sat__lsat__solver_hABC__sat__lsat__solver_h22,1329
typedef struct solver_t solver;solver30,1412
typedef int solver_Var;solver_Var31,1444
typedef int solver_Lit;solver_Lit32,1468
typedef int solver_lbool;solver_lbool33,1492

src/sat/csat/csat_apis.c,3566
#define ABC_DEFAULT_CONF_LIMIT ABC_DEFAULT_CONF_LIMIT32,894
#define ABC_DEFAULT_IMP_LIMIT ABC_DEFAULT_IMP_LIMIT33,955
struct ABC_ManagerStruct_tABC_ManagerStruct_t36,1021
    stmm_table *          tName2Node;    // the hash table mapping names to nodestName2Node39,1087
    stmm_table *          tNode2Name;    // the hash table mapping nodes to namestNode2Name40,1169
    Abc_Ntk_t *           pNtk;          // the starting ABC networkpNtk41,1251
    Abc_Ntk_t *           pTarget;       // the AIG representing the targetpTarget42,1320
    char *                pDumpFileName; // the name of the file to dump the target networkpDumpFileName43,1396
    Mem_Flex_t *      pMmNames;      // memory manager for signal namespMmNames44,1488
    int                   mode;          // 0 = resource-aware integration; 1 = brute-force SATmode46,1586
    Prove_Params_t        Params;        // integrated CEC parametersParams47,1682
    int                   nog;           // the numbers of gates in the targetnog49,1789
    Vec_Ptr_t *           vNodes;        // the gates in the targetvNodes50,1868
    Vec_Int_t *           vValues;       // the values of gate's outputs in the targetvValues51,1936
    CSAT_Target_ResultT * pResult;       // the result of solving the targetpResult53,2039
ABC_Manager ABC_InitManager()ABC_InitManager81,2928
void ABC_ReleaseManager( ABC_Manager mng )ABC_ReleaseManager113,4008
void ABC_SetSolveOption( ABC_Manager mng, enum CSAT_OptionT option )ABC_SetSolveOption140,4903
void ABC_UseOnlyCoreSatSolver( ABC_Manager mng )ABC_UseOnlyCoreSatSolver155,5248
int ABC_AddGate( ABC_Manager mng, enum GateType type, char * name, int nofi, char ** fanins, int dc_attr )ABC_AddGate175,5907
void ABC_Network_Finalize( ABC_Manager mng )ABC_Network_Finalize308,11477
int ABC_Check_Integrity( ABC_Manager mng )ABC_Check_Integrity332,12232
void ABC_SetTimeLimit( ABC_Manager mng, int runtime )ABC_SetTimeLimit370,13187
void ABC_SetLearnLimit( ABC_Manager mng, int num )ABC_SetLearnLimit386,13568
void ABC_SetLearnBacktrackLimit( ABC_Manager mng, int num )ABC_SetLearnBacktrackLimit402,13947
void ABC_SetSolveBacktrackLimit( ABC_Manager mng, int num )ABC_SetSolveBacktrackLimit418,14344
void ABC_SetSolveImplicationLimit( ABC_Manager mng, int num )ABC_SetSolveImplicationLimit434,14685
void ABC_SetTotalBacktrackLimit( ABC_Manager mng, ABC_UINT64_T num )ABC_SetTotalBacktrackLimit450,15086
void ABC_SetTotalInspectLimit( ABC_Manager mng, ABC_UINT64_T num )ABC_SetTotalInspectLimit466,15438
ABC_UINT64_T ABC_GetTotalBacktracksMade( ABC_Manager mng )ABC_GetTotalBacktracksMade481,15785
ABC_UINT64_T ABC_GetTotalInspectsMade( ABC_Manager mng )ABC_GetTotalInspectsMade497,16128
void ABC_EnableDump( ABC_Manager mng, char * dump_file )ABC_EnableDump513,16543
int ABC_AddTarget( ABC_Manager mng, int nog, char ** names, int * values )ABC_AddTarget534,17196
void ABC_SolveInit( ABC_Manager mng )ABC_SolveInit570,18423
void ABC_AnalyzeTargets( ABC_Manager mng )ABC_AnalyzeTargets596,19217
enum CSAT_StatusT ABC_Solve( ABC_Manager mng )ABC_Solve611,19543
CSAT_Target_ResultT * ABC_Get_Target_Result( ABC_Manager mng, int TargetID )ABC_Get_Target_Result664,21380
void ABC_Dump_Bench_File( ABC_Manager mng )ABC_Dump_Bench_File680,21822
CSAT_Target_ResultT * ABC_TargetResAlloc( int nVars )ABC_TargetResAlloc709,22616
void ABC_TargetResFree( CSAT_Target_ResultT * p )ABC_TargetResFree733,23283
char * ABC_GetNodeName( ABC_Manager mng, Abc_Obj_t * pNode )ABC_GetNodeName761,23869

src/sat/csat/csat_apis.h,3344
#define ABC__sat__csat__csat_apis_hABC__sat__csat__csat_apis_h20,549
typedef struct ABC_ManagerStruct_t     ABC_Manager_t;ABC_Manager_t41,1279
typedef struct ABC_ManagerStruct_t *   ABC_Manager;ABC_Manager42,1333
#define _ABC_GATE_TYPE__ABC_GATE_TYPE_48,1495
enum GateTypeGateType49,1519
    CSAT_CONST = 0,  // constant gateCSAT_CONST51,1535
    CSAT_BPI,    // boolean PICSAT_BPI52,1573
    CSAT_BPPI,   // bit level PSEUDO PRIMARY INPUTCSAT_BPPI53,1604
    CSAT_BAND,   // bit level ANDCSAT_BAND54,1655
    CSAT_BNAND,  // bit level NANDCSAT_BNAND55,1689
    CSAT_BOR,    // bit level ORCSAT_BOR56,1724
    CSAT_BNOR,   // bit level NORCSAT_BNOR57,1757
    CSAT_BXOR,   // bit level XORCSAT_BXOR58,1791
    CSAT_BXNOR,  // bit level XNORCSAT_BXNOR59,1825
    CSAT_BINV,   // bit level INVERTERCSAT_BINV60,1860
    CSAT_BBUF,   // bit level BUFFERCSAT_BBUF61,1899
    CSAT_BMUX,   // bit level MUX --not supported CSAT_BMUX62,1936
    CSAT_BDFF,   // bit level D-type FFCSAT_BDFF63,1987
    CSAT_BSDFF,  // bit level scan FF --not supported CSAT_BSDFF64,2027
    CSAT_BTRIH,  // bit level TRISTATE gate with active high control --not supported CSAT_BTRIH65,2082
    CSAT_BTRIL,  // bit level TRISTATE gate with active low control --not supported CSAT_BTRIL66,2168
    CSAT_BBUS,   // bit level BUS --not supported CSAT_BBUS67,2253
    CSAT_BPPO,   // bit level PSEUDO PRIMARY OUTPUTCSAT_BPPO68,2304
    CSAT_BPO,    // boolean POCSAT_BPO69,2356
    CSAT_BCNF,   // boolean constraintCSAT_BCNF70,2387
    CSAT_BDC,    // boolean don't care gate (2 input)CSAT_BDC71,2426
#define _ABC_STATUS__ABC_STATUS_78,2569
enum CSAT_StatusT CSAT_StatusT79,2590
    UNDETERMINED = 0,UNDETERMINED81,2611
    UNSATISFIABLE,UNSATISFIABLE82,2633
    SATISFIABLE,SATISFIABLE83,2652
    TIME_OUT,TIME_OUT84,2669
    FRAME_OUT,FRAME_OUT85,2683
    NO_TARGET,NO_TARGET86,2698
    ABORTED,ABORTED87,2713
    SEQ_SATISFIABLE     SEQ_SATISFIABLE88,2726
#define _ABC_CALLER__ABC_CALLER_95,2826
enum CSAT_CallerTCSAT_CallerT96,2847
    BLS = 0,BLS98,2867
    SATORI,SATORI99,2880
    NONENONE100,2892
#define _ABC_OPTION__ABC_OPTION_108,3033
enum CSAT_OptionTCSAT_OptionT109,3054
    BASE_LINE = 0,BASE_LINE111,3074
    IMPLICT_LEARNING, //defaultIMPLICT_LEARNING112,3093
    EXPLICT_LEARNINGEXPLICT_LEARNING113,3125
#define _ABC_Target_Result_ABC_Target_Result119,3185
typedef struct _CSAT_Target_ResultT CSAT_Target_ResultT;CSAT_Target_ResultT120,3212
struct _CSAT_Target_ResultT_CSAT_Target_ResultT121,3269
    enum CSAT_StatusT status; // solve status of the targetstatus123,3299
    int num_dec;              // num of decisions to solve the targetnum_dec124,3359
    int num_imp;              // num of implications to solve the targetnum_imp125,3429
    int num_cftg;             // num of conflict gates learned num_cftg126,3502
    int num_cfts;             // num of conflict signals in conflict gatesnum_cfts127,3566
    double time;              // time(in second) used to solve the targettime128,3641
    int no_sig;               // if "status" is SATISFIABLE, "no_sig" is the number of no_sig129,3715
    char** names;             // if the "status" is SATISFIABLE, "names" is the name array ofnames132,3964
    int* values;values138,4489

src/sat/satoko/solver.c,1977
static inline int lit_is_removable(solver_t* s, unsigned lit, unsigned min_level)lit_is_removable32,942
static inline unsigned clause_clac_lbd(solver_t *s, unsigned *lits, unsigned size)clause_clac_lbd88,3265
static inline void clause_bin_resolution(solver_t *s, vec_uint_t *clause_lits)clause_bin_resolution104,3667
static inline void clause_minimize(solver_t *s, vec_uint_t *clause_lits)clause_minimize137,4800
static inline void clause_realloc(struct cdb *dest, struct cdb *src, unsigned *cref)clause_realloc164,5758
static inline unsigned solver_decide(solver_t *s)solver_decide185,6571
static inline void solver_new_decision(solver_t *s, unsigned lit)solver_new_decision201,7058
static inline unsigned solver_calc_bt_level(solver_t *s, vec_uint_t *learnt)solver_calc_bt_level211,7420
static inline void solver_analyze(solver_t *s, unsigned cref, vec_uint_t *learnt,solver_analyze253,8988
static inline int solver_rst(solver_t *s)solver_rst329,11570
static inline int solver_block_rst(solver_t *s)solver_block_rst335,11758
static inline void solver_handle_conflict(solver_t *s, unsigned confl_cref)solver_handle_conflict342,12012
static inline void solver_analyze_final(solver_t *s, unsigned lit)solver_analyze_final363,12610
static inline void solver_garbage_collect(solver_t *s)solver_garbage_collect397,13898
static inline void solver_reduce_cdb(solver_t *s)solver_reduce_cdb429,14967
unsigned solver_clause_create(solver_t *s, vec_uint_t *lits, unsigned f_learnt)solver_clause_create483,16994
void solver_cancel_until(solver_t *s, unsigned level)solver_cancel_until515,18049
unsigned solver_propagate(solver_t *s)solver_propagate534,18682
char solver_search(solver_t *s)solver_search627,21844
void solver_debug_check_trail(solver_t *s)solver_debug_check_trail696,24555
void solver_debug_check_clauses(solver_t *s)solver_debug_check_clauses725,25588
void solver_debug_check(solver_t *s, int result)solver_debug_check749,26323

src/sat/satoko/act_var.h,269
#define satoko__act_var_hsatoko__act_var_h10,338
static inline void var_act_rescale(solver_t *s)var_act_rescale22,570
static inline void var_act_bump(solver_t *s, unsigned var)var_act_bump34,945
static inline void var_act_decay(solver_t *s)var_act_decay47,1357

src/sat/satoko/solver_api.c,2964
static inline void solver_rebuild_order(solver_t *s)solver_rebuild_order24,707
static inline int clause_is_satisfied(solver_t *s, struct clause *clause)clause_is_satisfied36,1066
static inline void solver_clean_stats(solver_t *s)solver_clean_stats46,1352
static inline void print_opts(solver_t *s)print_opts55,1679
static inline void print_stats(solver_t *s)print_stats77,2878
solver_t * satoko_create()satoko_create88,3361
void satoko_destroy(solver_t *s)satoko_destroy132,4802
void satoko_default_opts(satoko_opts_t *opts)satoko_default_opts161,5598
void satoko_configure(satoko_t *s, satoko_opts_t *user_opts)satoko_configure196,6631
int satoko_simplify(solver_t * s)satoko_simplify202,6776
void satoko_setnvars(solver_t *s, int nvars)satoko_setnvars230,7631
int satoko_add_variable(solver_t *s, char sign)satoko_add_variable237,7774
int satoko_add_clause(solver_t *s, int *lits, int size)satoko_add_clause255,8336
void satoko_assump_push(solver_t *s, int lit)satoko_assump_push298,9751
void satoko_assump_pop(solver_t *s)satoko_assump_pop306,10023
int satoko_solve(solver_t *s)satoko_solve314,10292
int satoko_solve_assumptions(solver_t *s, int * plits, int nlits)satoko_solve_assumptions347,11125
int satoko_solve_assumptions_limit(satoko_t *s, int * plits, int nlits, int nconflim)satoko_solve_assumptions_limit364,11801
int satoko_minimize_assumptions(satoko_t * s, int * plits, int nlits, int nconflim)satoko_minimize_assumptions372,12113
int satoko_final_conflict(solver_t *s, int **out)satoko_final_conflict427,14241
satoko_stats_t * satoko_stats(satoko_t *s)satoko_stats433,14393
satoko_opts_t * satoko_options(satoko_t *s)satoko_options438,14463
void satoko_bookmark(satoko_t *s)satoko_bookmark443,14533
void satoko_unbookmark(satoko_t *s)satoko_unbookmark456,14937
void satoko_reset(satoko_t *s)satoko_reset469,15226
void satoko_rollback(satoko_t *s)satoko_rollback508,16365
void satoko_mark_cone(satoko_t *s, int * pvars, int n_vars)satoko_mark_cone562,18402
void satoko_unmark_cone(satoko_t *s, int *pvars, int n_vars)satoko_unmark_cone575,18790
void satoko_write_dimacs(satoko_t *s, char *fname, int wrt_lrnt, int zero_var)satoko_write_dimacs583,18970
int satoko_varnum(satoko_t *s)satoko_varnum625,20371
int satoko_clausenum(satoko_t *s)satoko_clausenum630,20445
int satoko_learntnum(satoko_t *s)satoko_learntnum635,20524
int satoko_conflictnum(satoko_t *s)satoko_conflictnum640,20601
void satoko_set_stop(satoko_t *s, int * pstop)satoko_set_stop645,20687
void satoko_set_stop_func(satoko_t *s, int (*fnct)(int))satoko_set_stop_func650,20761
void satoko_set_runid(satoko_t *s, int id)satoko_set_runid655,20848
int satoko_read_cex_varvalue(satoko_t *s, int ivar)satoko_read_cex_varvalue660,20915
abctime satoko_set_runtime_limit(satoko_t* s, abctime Limit)satoko_set_runtime_limit665,21032
char satoko_var_polarity(satoko_t *s, unsigned var)satoko_var_polarity672,21200

src/sat/satoko/act_clause.h,302
#define satoko__act_clause_hsatoko__act_clause_h10,341
static inline void clause_act_rescale(solver_t *s)clause_act_rescale18,473
static inline void clause_act_bump(solver_t *s, struct clause *clause)clause_act_bump30,792
static inline void clause_act_decay(solver_t *s)clause_act_decay37,1009

src/sat/satoko/cdb.h,1004
#define satoko__cdb_hsatoko__cdb_h10,334
struct cdb {cdb18,472
    unsigned size;size19,485
    unsigned cap;cap20,504
    unsigned wasted;wasted21,522
    unsigned *data;data22,543
static inline struct clause *cdb_handler(struct cdb *p, unsigned cref)cdb_handler28,746
static inline unsigned cdb_cref(struct cdb *p, unsigned *clause)cdb_cref33,896
static inline void cdb_grow(struct cdb *p, unsigned cap)cdb_grow38,1013
static inline struct cdb *cdb_alloc(unsigned cap)cdb_alloc53,1401
static inline void cdb_free(struct cdb *p)cdb_free62,1587
static inline unsigned cdb_append(struct cdb *p, unsigned size)cdb_append68,1681
static inline void cdb_remove(struct cdb *p, struct clause *clause)cdb_remove79,1930
static inline void cdb_clear(struct cdb *p)cdb_clear84,2034
static inline unsigned cdb_capacity(struct cdb *p)cdb_capacity90,2119
static inline unsigned cdb_size(struct cdb *p)cdb_size95,2194
static inline unsigned cdb_wasted(struct cdb *p)cdb_wasted100,2266

src/sat/satoko/utils/sdbl.h,958
#define satoko__utils__sdbl_hsatoko__utils__sdbl_h11,364
typedef word sdbl_t;sdbl_t32,1169
static sdbl_t SDBL_CONST1 = ABC_CONST(0x0000800000000000);SDBL_CONST134,1191
static sdbl_t SDBL_MAX = ~(sdbl_t)(0);SDBL_MAX35,1250
union ui64_dbl { word ui64; double dbl; };ui64_dbl37,1290
union ui64_dbl { word ui64; double dbl; };ui6437,1290
union ui64_dbl { word ui64; double dbl; };dbl37,1290
static inline word sdbl_exp(sdbl_t a) { return a >> 48;         }sdbl_exp39,1334
static inline word sdbl_mnt(sdbl_t a) { return (a << 16) >> 16; }sdbl_mnt40,1400
static inline double sdbl2double(sdbl_t a) {sdbl2double42,1467
static inline sdbl_t double2sdbl(double value)double2sdbl49,1666
static inline sdbl_t sdbl_add(sdbl_t a, sdbl_t b)sdbl_add60,1932
static inline sdbl_t sdbl_mult(sdbl_t a, sdbl_t b)sdbl_mult81,2373
static inline sdbl_t sdbl_div(sdbl_t a, unsigned deg2)sdbl_div113,3172
static inline void sdbl_test()sdbl_test120,3350

src/sat/satoko/utils/vec/vec_int.h,2415
#define satoko__utils__vec__vec_int_hsatoko__utils__vec__vec_int_h10,350
typedef struct vec_int_t_ vec_int_t;vec_int_t21,532
struct vec_int_t_ {vec_int_t_22,569
    unsigned cap;cap23,589
    unsigned size;size24,607
    int *data;data25,626
#define vec_int_foreach(vec_int_foreach31,824
#define vec_int_foreach_start(vec_int_foreach_start34,943
#define vec_int_foreach_stop(vec_int_foreach_stop37,1087
static inline vec_int_t *vec_int_alloc(unsigned cap)vec_int_alloc43,1388
static inline vec_int_t *vec_int_alloc_exact(unsigned cap)vec_int_alloc_exact55,1647
static inline vec_int_t *vec_int_init(unsigned size, int value)vec_int_init65,1865
static inline void vec_int_free(vec_int_t *p)vec_int_free76,2143
static inline unsigned vec_int_size(vec_int_t *p)vec_int_size83,2269
static inline void vec_int_resize(vec_int_t *p, unsigned new_size)vec_int_resize88,2344
static inline void vec_int_reserve(vec_int_t *p, unsigned new_cap)vec_int_reserve98,2590
static inline unsigned vec_int_capacity(vec_int_t *p)vec_int_capacity107,2809
static inline int vec_int_empty(vec_int_t *p)vec_int_empty112,2887
static inline void vec_int_erase(vec_int_t *p)vec_int_erase117,2966
static inline int vec_int_at(vec_int_t *p, unsigned i)vec_int_at124,3077
static inline int *vec_int_at_ptr(vec_int_t *p, unsigned i)vec_int_at_ptr130,3195
static inline void vec_int_duplicate(vec_int_t *dest, const vec_int_t *src)vec_int_duplicate136,3319
static inline void vec_int_copy(vec_int_t *dest, const vec_int_t *src)vec_int_copy144,3564
static inline void vec_int_push_back(vec_int_t *p, int value)vec_int_push_back152,3806
static inline void vec_int_assign(vec_int_t *p, unsigned i, int value)vec_int_assign164,4071
static inline void vec_int_insert(vec_int_t *p, unsigned i, int value)vec_int_insert170,4218
static inline void vec_int_drop(vec_int_t *p, unsigned i)vec_int_drop178,4470
static inline void vec_int_clear(vec_int_t *p)vec_int_clear185,4674
static inline int vec_int_asc_compare(const void *p1, const void *p2)vec_int_asc_compare190,4743
static inline int vec_int_desc_compare(const void* p1, const void* p2)vec_int_desc_compare202,4990
static inline void vec_int_sort(vec_int_t* p, int ascending)vec_int_sort214,5238
static inline long vec_int_memory(vec_int_t *p)vec_int_memory224,5601
static inline void vec_int_print(vec_int_t *p)vec_int_print229,5723

src/sat/satoko/utils/vec/vec_char.h,2767
#define satoko__utils__vec__vec_char_hsatoko__utils__vec__vec_char_h10,351
typedef struct vec_char_t_ vec_char_t;vec_char_t21,534
struct vec_char_t_ {vec_char_t_22,573
    unsigned cap;cap23,594
    unsigned size;size24,612
    char *data;data25,631
#define vec_char_foreach(vec_char_foreach31,830
#define vec_char_foreach_start(vec_char_foreach_start34,960
#define vec_char_foreach_stop(vec_char_foreach_stop37,1107
static inline vec_char_t * vec_char_alloc(unsigned cap)vec_char_alloc43,1410
static inline vec_char_t * vec_char_alloc_exact(unsigned cap)vec_char_alloc_exact55,1675
static inline vec_char_t * vec_char_init(unsigned size, char value)vec_char_init66,1913
static inline void vec_char_free(vec_char_t *p)vec_char_free77,2199
static inline unsigned vec_char_size(vec_char_t *p)vec_char_size84,2327
static inline void vec_char_resize(vec_char_t *p, unsigned new_size)vec_char_resize89,2404
static inline void vec_char_shrink(vec_char_t *p, unsigned new_size)vec_char_shrink99,2653
static inline void vec_char_reserve(vec_char_t *p, unsigned new_cap)vec_char_reserve105,2782
static inline unsigned vec_char_capacity(vec_char_t *p)vec_char_capacity114,3004
static inline int vec_char_empty(vec_char_t *p)vec_char_empty119,3084
static inline void vec_char_erase(vec_char_t *p)vec_char_erase124,3165
static inline char vec_char_at(vec_char_t *p, unsigned idx)vec_char_at131,3278
static inline char * vec_char_at_ptr(vec_char_t *p, unsigned idx)vec_char_at_ptr137,3407
static inline char * vec_char_data(vec_char_t *p)vec_char_data143,3543
static inline void vec_char_duplicate(vec_char_t *dest, const vec_char_t *src)vec_char_duplicate149,3633
static inline void vec_char_copy(vec_char_t *dest, const vec_char_t *src)vec_char_copy157,3883
static inline void vec_char_push_back(vec_char_t *p, char value)vec_char_push_back165,4130
static inline char vec_char_pop_back(vec_char_t *p)vec_char_pop_back177,4400
static inline void vec_char_assign(vec_char_t *p, unsigned idx, char value)vec_char_assign183,4514
static inline void vec_char_insert(vec_char_t *p, unsigned idx, char value)vec_char_insert189,4673
static inline void vec_char_drop(vec_char_t *p, unsigned idx)vec_char_drop197,4945
static inline void vec_char_clear(vec_char_t *p)vec_char_clear204,5165
static inline int vec_char_asc_compare(const void *p1, const void *p2)vec_char_asc_compare209,5236
static inline int vec_char_desc_compare(const void *p1, const void *p2)vec_char_desc_compare221,5486
static inline void vec_char_sort(vec_char_t *p, int ascending)vec_char_sort233,5737
static inline long vec_char_memory(vec_char_t *p)vec_char_memory244,6110
static inline void vec_char_print(vec_char_t* p)vec_char_print249,6236

src/sat/satoko/utils/vec/vec_flt.h,2499
#define satoko__utils__vec__vec_flt_hsatoko__utils__vec__vec_flt_h10,350
typedef struct vec_flt_t_ vec_flt_t;vec_flt_t21,532
struct vec_flt_t_ {vec_flt_t_22,569
    unsigned cap;cap23,589
    unsigned size;size24,607
    float *data;data25,626
#define vec_flt_foreach(vec_flt_foreach31,826
#define vec_flt_foreach_start(vec_flt_foreach_start34,945
#define vec_flt_foreach_stop(vec_flt_foreach_stop37,1089
static inline vec_flt_t *vec_flt_alloc(unsigned cap)vec_flt_alloc43,1390
static inline vec_flt_t *vec_flt_alloc_exact(unsigned cap)vec_flt_alloc_exact55,1651
static inline vec_flt_t *vec_flt_init(unsigned size, float value)vec_flt_init65,1871
static inline void vec_flt_free(vec_flt_t *p)vec_flt_free76,2155
static inline unsigned vec_flt_size(vec_flt_t *p)vec_flt_size83,2281
static inline void vec_flt_resize(vec_flt_t *p, unsigned new_size)vec_flt_resize88,2356
static inline void vec_flt_reserve(vec_flt_t *p, unsigned new_cap)vec_flt_reserve98,2604
static inline unsigned vec_flt_capacity(vec_flt_t *p)vec_flt_capacity107,2825
static inline int vec_flt_empty(vec_flt_t *p)vec_flt_empty112,2903
static inline void vec_flt_erase(vec_flt_t *p)vec_flt_erase117,2982
static inline float vec_flt_at(vec_flt_t *p, unsigned i)vec_flt_at124,3093
static inline float *vec_flt_at_ptr(vec_flt_t *p, unsigned i)vec_flt_at_ptr130,3213
static inline float *vec_flt_data(vec_flt_t *p)vec_flt_data136,3339
static inline void vec_flt_duplicate(vec_flt_t *dest, const vec_flt_t *src)vec_flt_duplicate142,3427
static inline void vec_flt_copy(vec_flt_t *dest, const vec_flt_t *src)vec_flt_copy150,3674
static inline void vec_flt_push_back(vec_flt_t *p, float value)vec_flt_push_back158,3918
static inline void vec_flt_assign(vec_flt_t *p, unsigned i, float value)vec_flt_assign170,4185
static inline void vec_flt_insert(vec_flt_t *p, unsigned i, float value)vec_flt_insert176,4334
static inline void vec_flt_drop(vec_flt_t *p, unsigned i)vec_flt_drop184,4590
static inline void vec_flt_clear(vec_flt_t *p)vec_flt_clear191,4796
static inline int vec_flt_asc_compare(const void *p1, const void *p2)vec_flt_asc_compare196,4865
static inline int vec_flt_desc_compare(const void* p1, const void* p2)vec_flt_desc_compare208,5120
static inline void vec_flt_sort(vec_flt_t* p, int ascending)vec_flt_sort220,5376
static inline long vec_flt_memory(vec_flt_t *p)vec_flt_memory230,5743
static inline void vec_flt_print(vec_flt_t *p)vec_flt_print235,5867

src/sat/satoko/utils/vec/vec_sdbl.h,2689
#define satoko__utils__vec__vec_sdbl_hsatoko__utils__vec__vec_sdbl_h10,351
typedef struct vec_sdbl_t_ vec_sdbl_t;vec_sdbl_t22,555
struct vec_sdbl_t_ {vec_sdbl_t_23,594
    unsigned cap;cap24,615
    unsigned size;size25,633
    sdbl_t *data;data26,652
#define vec_sdbl_foreach(vec_sdbl_foreach32,853
#define vec_sdbl_foreach_start(vec_sdbl_foreach_start35,974
#define vec_sdbl_foreach_stop(vec_sdbl_foreach_stop38,1121
static inline vec_sdbl_t *vec_sdbl_alloc(unsigned cap)vec_sdbl_alloc44,1424
static inline vec_sdbl_t *vec_sdbl_alloc_exact(unsigned cap)vec_sdbl_alloc_exact56,1690
static inline vec_sdbl_t *vec_sdbl_init(unsigned size, sdbl_t value)vec_sdbl_init66,1915
static inline void vec_sdbl_free(vec_sdbl_t *p)vec_sdbl_free77,2206
static inline unsigned vec_sdbl_size(vec_sdbl_t *p)vec_sdbl_size84,2334
static inline void vec_sdbl_shrink(vec_sdbl_t *p, unsigned new_size)vec_sdbl_shrink89,2411
static inline void vec_sdbl_resize(vec_sdbl_t *p, unsigned new_size)vec_sdbl_resize95,2541
static inline void vec_sdbl_reserve(vec_sdbl_t *p, unsigned new_cap)vec_sdbl_reserve105,2792
static inline unsigned vec_sdbl_capacity(vec_sdbl_t *p)vec_sdbl_capacity114,3016
static inline int vec_sdbl_empty(vec_sdbl_t *p)vec_sdbl_empty119,3096
static inline void vec_sdbl_erase(vec_sdbl_t *p)vec_sdbl_erase124,3177
static inline sdbl_t vec_sdbl_at(vec_sdbl_t *p, unsigned i)vec_sdbl_at131,3290
static inline sdbl_t *vec_sdbl_at_ptr(vec_sdbl_t *p, unsigned i)vec_sdbl_at_ptr137,3413
static inline sdbl_t *vec_sdbl_data(vec_sdbl_t *p)vec_sdbl_data143,3542
static inline void vec_sdbl_duplicate(vec_sdbl_t *dest, const vec_sdbl_t *src)vec_sdbl_duplicate149,3633
static inline void vec_sdbl_copy(vec_sdbl_t *dest, const vec_sdbl_t *src)vec_sdbl_copy157,3885
static inline void vec_sdbl_push_back(vec_sdbl_t *p, sdbl_t value)vec_sdbl_push_back165,4134
static inline void vec_sdbl_assign(vec_sdbl_t *p, unsigned i, sdbl_t value)vec_sdbl_assign177,4406
static inline void vec_sdbl_insert(vec_sdbl_t *p, unsigned i, sdbl_t value)vec_sdbl_insert183,4559
static inline void vec_sdbl_drop(vec_sdbl_t *p, unsigned i)vec_sdbl_drop191,4821
static inline void vec_sdbl_clear(vec_sdbl_t *p)vec_sdbl_clear198,5031
static inline int vec_sdbl_asc_compare(const void *p1, const void *p2)vec_sdbl_asc_compare203,5102
static inline int vec_sdbl_desc_compare(const void* p1, const void* p2)vec_sdbl_desc_compare215,5362
static inline void vec_sdbl_sort(vec_sdbl_t* p, int ascending)vec_sdbl_sort227,5623
static inline long vec_sdbl_memory(vec_sdbl_t *p)vec_sdbl_memory237,5996
static inline void vec_sdbl_print(vec_sdbl_t *p)vec_sdbl_print242,6124

src/sat/satoko/utils/vec/vec_uint.h,2894
#define satoko__utils__vec__vec_uint_hsatoko__utils__vec__vec_uint_h10,351
typedef struct vec_uint_t_ vec_uint_t;vec_uint_t21,534
struct vec_uint_t_ {vec_uint_t_22,573
    unsigned cap;cap23,594
    unsigned size;size24,612
    unsigned* data;data25,631
#define vec_uint_foreach(vec_uint_foreach31,834
#define vec_uint_foreach_start(vec_uint_foreach_start34,964
#define vec_uint_foreach_stop(vec_uint_foreach_stop37,1111
static inline vec_uint_t * vec_uint_alloc(unsigned cap)vec_uint_alloc43,1414
static inline vec_uint_t * vec_uint_alloc_exact(unsigned cap)vec_uint_alloc_exact55,1683
static inline vec_uint_t * vec_uint_init(unsigned size, unsigned value)vec_uint_init66,1925
static inline void vec_uint_free(vec_uint_t *p)vec_uint_free77,2224
static inline unsigned vec_uint_size(vec_uint_t *p)vec_uint_size84,2352
static inline void vec_uint_resize(vec_uint_t *p, unsigned new_size)vec_uint_resize89,2429
static inline void vec_uint_shrink(vec_uint_t *p, unsigned new_size)vec_uint_shrink99,2682
static inline void vec_uint_reserve(vec_uint_t *p, unsigned new_cap)vec_uint_reserve105,2812
static inline unsigned vec_uint_capacity(vec_uint_t *p)vec_uint_capacity114,3038
static inline int vec_uint_empty(vec_uint_t *p)vec_uint_empty119,3118
static inline void vec_uint_erase(vec_uint_t *p)vec_uint_erase124,3199
static inline unsigned vec_uint_at(vec_uint_t *p, unsigned idx)vec_uint_at131,3312
static inline unsigned * vec_uint_at_ptr(vec_uint_t *p, unsigned idx)vec_uint_at_ptr137,3445
static inline unsigned vec_uint_find(vec_uint_t *p, unsigned entry)vec_uint_find143,3585
static inline unsigned * vec_uint_data(vec_uint_t *p)vec_uint_data152,3777
static inline void vec_uint_duplicate(vec_uint_t *dest, const vec_uint_t *src)vec_uint_duplicate158,3871
static inline void vec_uint_copy(vec_uint_t *dest, const vec_uint_t *src)vec_uint_copy166,4125
static inline void vec_uint_push_back(vec_uint_t *p, unsigned value)vec_uint_push_back174,4376
static inline unsigned vec_uint_pop_back(vec_uint_t *p)vec_uint_pop_back186,4650
static inline void vec_uint_assign(vec_uint_t *p, unsigned idx, unsigned value)vec_uint_assign192,4768
static inline void vec_uint_insert(vec_uint_t *p, unsigned idx, unsigned value)vec_uint_insert198,4931
static inline void vec_uint_drop(vec_uint_t *p, unsigned idx)vec_uint_drop206,5211
static inline void vec_uint_clear(vec_uint_t *p)vec_uint_clear213,5435
static inline int vec_uint_asc_compare(const void *p1, const void *p2)vec_uint_asc_compare218,5506
static inline int vec_uint_desc_compare(const void *p1, const void *p2)vec_uint_desc_compare230,5778
static inline void vec_uint_sort(vec_uint_t *p, int ascending)vec_uint_sort242,6051
static inline long vec_uint_memory(vec_uint_t *p)vec_uint_memory252,6431
static inline void vec_uint_print(vec_uint_t* p)vec_uint_print257,6561

src/sat/satoko/utils/heap.h,1543
#define satoko__utils__heap_hsatoko__utils__heap_h10,339
typedef struct heap_t_ heap_t;heap_t21,549
struct heap_t_ {heap_t_22,580
    vec_int_t *indices;indices23,597
    vec_uint_t *data;data24,621
    vec_act_t *weights;weights25,643
static inline unsigned left(unsigned i) { return 2 * i + 1; }left30,859
static inline unsigned right(unsigned i) { return (i + 1) * 2; }right31,921
static inline unsigned parent(unsigned i) { return (i - 1) >> 1; }parent32,986
static inline int compare(heap_t *p, unsigned x, unsigned y)compare34,1054
static inline void heap_percolate_up(heap_t *h, unsigned i)heap_percolate_up39,1186
static inline void heap_percolate_down(heap_t *h, unsigned i)heap_percolate_down54,1641
static inline heap_t *heap_alloc(vec_act_t *weights)heap_alloc78,2508
static inline void heap_free(heap_t *p)heap_free87,2715
static inline unsigned heap_size(heap_t *p)heap_size94,2838
static inline int heap_in_heap(heap_t *p, unsigned entry)heap_in_heap99,2922
static inline void heap_increase(heap_t *p, unsigned entry)heap_increase105,3083
static inline void heap_decrease(heap_t *p, unsigned entry)heap_decrease111,3254
static inline void heap_insert(heap_t *p, unsigned entry)heap_insert117,3423
static inline void heap_update(heap_t *p, unsigned i)heap_update133,3995
static inline void heap_build(heap_t *p, vec_uint_t *entries)heap_build143,4265
static inline void heap_clear(heap_t *p)heap_clear159,4733
static inline unsigned heap_remove_min(heap_t *p)heap_remove_min165,4839

src/sat/satoko/utils/mem.h,229
#define satoko__utils__mem_hsatoko__utils__mem_h10,341
#define satoko_alloc(satoko_alloc17,454
#define satoko_calloc(satoko_calloc18,540
#define satoko_realloc(satoko_realloc19,626
#define satoko_free(satoko_free20,725

src/sat/satoko/utils/b_queue.h,798
#define satoko__utils__b_queue_hsatoko__utils__b_queue_h10,345
typedef struct b_queue_t_ b_queue_t;b_queue_t18,479
struct b_queue_t_ {b_queue_t_19,516
    unsigned size;size20,536
    unsigned cap;cap21,555
    unsigned i_first;i_first22,573
    unsigned i_empty;i_empty23,595
    unsigned long sum;sum24,617
    unsigned *data;data25,640
static inline b_queue_t *b_queue_alloc(unsigned cap)b_queue_alloc31,847
static inline void b_queue_free(b_queue_t *p)b_queue_free39,1029
static inline void b_queue_push(b_queue_t *p, unsigned Value)b_queue_push45,1126
static inline unsigned b_queue_avg(b_queue_t *p)b_queue_avg62,1526
static inline unsigned b_queue_is_valid(b_queue_t *p)b_queue_is_valid67,1639
static inline void b_queue_clean(b_queue_t *p)b_queue_clean72,1730

src/sat/satoko/utils/sort.h,208
#define satoko__utils__sort_hsatoko__utils__sort_h10,342
static inline void select_sort(void **data, unsigned size,select_sort15,435
static void satoko_sort(void **data, unsigned size,satoko_sort33,883

src/sat/satoko/utils/misc.h,264
#define satoko__utils__misc_hsatoko__utils__misc_h10,342
#define stk_swap(stk_swap15,435
static inline unsigned stk_uint_max(unsigned a, unsigned b)stk_uint_max17,496
static inline int stk_uint_compare(const void *p1, const void *p2)stk_uint_compare22,588

src/sat/satoko/types.h,732
#define satoko__types_hsatoko__types_h10,336
#define VAR_ACT_INIT_INC VAR_ACT_INIT_INC20,530
#define VAR_ACT_LIMIT VAR_ACT_LIMIT21,567
#define VAR_ACT_RESCALE VAR_ACT_RESCALE22,619
typedef sdbl_t act_t;act_t23,647
typedef vec_sdbl_t vec_act_t ;vec_act_t24,669
#define vec_act_alloc(vec_act_alloc25,700
#define vec_act_free(vec_act_free26,749
#define vec_act_size(vec_act_size27,794
#define vec_act_data(vec_act_data28,839
#define vec_act_clear(vec_act_clear29,884
#define vec_act_shrink(vec_act_shrink30,931
#define vec_act_at(vec_act_at31,992
#define vec_act_push_back(vec_act_push_back32,1043
#define CLAUSE_ACT_INIT_INC CLAUSE_ACT_INIT_INC35,1114
typedef unsigned clause_act_t;clause_act_t36,1152

src/sat/satoko/solver.h,4484
#define satoko__solver_hsatoko__solver_h10,337
#define UNDEF UNDEF35,802
typedef struct solver_t_ solver_t;solver_t37,828
struct solver_t_ {solver_t_38,863
    int status;status39,882
    vec_uint_t *assumptions;assumptions41,918
    vec_uint_t *final_conflict;final_conflict42,947
    struct cdb *all_clauses;all_clauses45,1007
    vec_uint_t *learnts;learnts46,1036
    vec_uint_t *originals;originals47,1061
    vec_wl_t *watches;watches48,1088
    act_t var_act_inc; /* Amount to bump next variable with. */var_act_inc51,1141
    clause_act_t clause_act_inc; /* Amount to bump next clause with. */clause_act_inc52,1205
    vec_act_t *activity; /* A heuristic measurement of the activity of a variable. */activity55,1309
    heap_t *var_order;var_order56,1395
    vec_uint_t *levels;  /* Decision level of the current assignment */levels57,1418
    vec_uint_t *reasons; /* Reason (clause) of the current assignment */reasons58,1490
    vec_char_t *assigns;assigns59,1563
    vec_char_t *polarity;polarity60,1588
    vec_uint_t *trail;trail63,1637
    vec_uint_t *trail_lim; /* Separator indices for different decision levels in 'trail'. */trail_lim64,1660
    unsigned i_qhead; /* Head of propagation queue (as index into the trail). */i_qhead65,1753
    unsigned n_assigns_simplify; /* Number of top-level assignments sincen_assigns_simplify66,1834
    long n_props_simplify;  /* Remaining number of propagations thatn_props_simplify68,1963
    vec_uint_t *temp_lits;temp_lits73,2167
    vec_char_t *seen;seen74,2194
    vec_uint_t *tagged; /* Stack */tagged75,2216
    vec_uint_t *stack;stack76,2252
    vec_uint_t *last_dlevel;last_dlevel77,2275
    b_queue_t *bq_trail;bq_trail80,2352
    b_queue_t *bq_lbd;bq_lbd81,2377
    long RC1;RC182,2400
    long RC2;RC283,2414
    long n_confl_bfr_reduce;n_confl_bfr_reduce84,2428
    float sum_lbd;sum_lbd85,2457
    unsigned cur_stamp; /* Used for marking literals and levels of interest */cur_stamp88,2502
    vec_uint_t *stamps; /* Multipurpose stamp used to calculate LBD andstamps89,2581
    unsigned book_cl_orig; /* Bookmark for orignal problem clauses vector */book_cl_orig93,2739
    unsigned book_cl_lrnt; /* Bookmark for learnt clauses vector */book_cl_lrnt94,2816
    unsigned book_cdb;     /* Bookmark clause database size */book_cdb95,2884
    unsigned book_vars;    /* Bookmark number of variables */book_vars96,2947
    unsigned book_trail;   /* Bookmark trail size */book_trail97,3009
    vec_char_t *marks;marks101,3179
    abctime nRuntimeLimit;nRuntimeLimit104,3246
    int    *pstop;pstop105,3273
    int     RunId;           RunId106,3292
    int   (*pFuncStop)(int);  pFuncStop107,3322
    struct satoko_stats stats;stats109,3354
    struct satoko_opts opts;opts110,3385
static inline unsigned var2lit(unsigned var, char polarity)var2lit127,4071
static inline unsigned lit2var(unsigned lit)lit2var132,4187
static inline char var_value(solver_t *s, unsigned var)var_value139,4443
static inline unsigned var_dlevel(solver_t *s, unsigned var)var_dlevel144,4545
static inline unsigned var_reason(solver_t *s, unsigned var)var_reason149,4651
static inline int var_mark(solver_t *s, unsigned var)var_mark153,4757
static inline void var_set_mark(solver_t *s, unsigned var)var_set_mark157,4859
static inline void var_clean_mark(solver_t *s, unsigned var)var_clean_mark161,4961
static inline unsigned lit_compl(unsigned lit)lit_compl168,5251
static inline char lit_polarity(unsigned lit)lit_polarity173,5323
static inline char lit_value(solver_t *s, unsigned lit)lit_value178,5402
static inline unsigned lit_dlevel(solver_t *s, unsigned lit)lit_dlevel183,5533
static inline unsigned lit_reason(solver_t *s, unsigned lit)lit_reason188,5648
static inline unsigned solver_check_limits(solver_t *s)solver_check_limits195,5958
static inline unsigned solver_dlevel(solver_t *s)solver_dlevel202,6230
static inline int solver_enqueue(solver_t *s, unsigned lit, unsigned reason)solver_enqueue207,6325
static inline int solver_has_marks(satoko_t *s)solver_has_marks219,6718
static inline int solver_stop(satoko_t *s)solver_stop224,6807
static inline struct clause *clause_fetch(solver_t *s, unsigned cref)clause_fetch232,7078
static inline void clause_watch(solver_t *s, unsigned cref)clause_watch237,7199
static inline void clause_unwatch(solver_t *s, unsigned cref)clause_unwatch251,7692

src/sat/satoko/cnf_reader.c,380
static char * file_open(const char *fname)file_open29,711
static void skip_spaces(char **pos)skip_spaces50,1194
static void skip_line(char **pos)skip_line56,1298
static int read_int(char **token)read_int65,1483
static void read_clause(char **token, vec_uint_t *lits)read_clause88,1965
int satoko_parse_dimacs(char *fname, satoko_t **solver)satoko_parse_dimacs108,2401

src/sat/satoko/watch_list.h,1714
#define satoko__watch_list_hsatoko__watch_list_h10,341
struct watcher {watcher18,481
    unsigned cref;cref19,498
    unsigned blocker;blocker20,517
struct watch_list {watch_list23,543
    unsigned cap;cap24,563
    unsigned size;size25,581
    unsigned n_bin;n_bin26,600
    struct watcher *watchers;watchers27,620
typedef struct vec_wl_t_ vec_wl_t;vec_wl_t30,654
struct vec_wl_t_ {vec_wl_t_31,689
    unsigned cap;cap32,708
    unsigned size;size33,726
    struct watch_list *watch_lists;watch_lists34,745
#define watch_list_foreach(watch_list_foreach40,968
#define watch_list_foreach_bin(watch_list_foreach_bin45,1184
static inline void watch_list_free(struct watch_list *wl)watch_list_free52,1573
static inline unsigned watch_list_size(struct watch_list *wl)watch_list_size58,1693
static inline void watch_list_shrink(struct watch_list *wl, unsigned size)watch_list_shrink63,1781
static inline void watch_list_grow(struct watch_list *wl)watch_list_grow69,1912
static inline void watch_list_push(struct watch_list *wl, struct watcher w, unsigned is_bin)watch_list_push86,2434
static inline struct watcher *watch_list_array(struct watch_list *wl)watch_list_array98,2796
static inline void watch_list_remove(struct watch_list *wl, unsigned cref, unsigned is_bin)watch_list_remove105,3011
static inline vec_wl_t *vec_wl_alloc(unsigned cap)vec_wl_alloc140,4153
static inline void vec_wl_free(vec_wl_t *vec_wl)vec_wl_free154,4490
static inline void vec_wl_clean(vec_wl_t *vec_wl)vec_wl_clean163,4711
static inline void vec_wl_push(vec_wl_t *vec_wl)vec_wl_push173,4934
static inline struct watch_list *vec_wl_at(vec_wl_t *vec_wl, unsigned idx)vec_wl_at195,5694

src/sat/satoko/clause.h,695
#define satoko__clause_hsatoko__clause_h10,337
struct clause {clause17,445
    unsigned f_learnt    : 1;f_learnt18,461
    unsigned f_mark      : 1;f_mark19,491
    unsigned f_reallocd  : 1;f_reallocd20,521
    unsigned f_deletable : 1;f_deletable21,551
    unsigned lbd : 28;lbd22,581
    unsigned size;size23,604
        unsigned lit;lit25,635
        clause_act_t act;act26,657
    } data[0];data27,683
static inline int clause_compare(const void *p1, const void *p2)clause_compare33,878
static inline void clause_print(struct clause *clause)clause_print53,1387
static inline void clause_dump(FILE *file, struct clause *clause, int no_zero_var) clause_dump62,1583

src/sat/satoko/satoko.h,2692
#define satoko__satoko_hsatoko__satoko_h10,337
    SATOKO_ERR = 0,SATOKO_ERR18,472
    SATOKO_OK  = 1SATOKO_OK19,492
    SATOKO_UNDEC = 0, /* Undecided */SATOKO_UNDEC23,522
    SATOKO_SAT   = 1,SATOKO_SAT24,560
    SATOKO_UNSAT = -1SATOKO_UNSAT25,582
    SATOKO_LIT_FALSE = 1,SATOKO_LIT_FALSE29,615
    SATOKO_LIT_TRUE = 0,SATOKO_LIT_TRUE30,641
    SATOKO_VAR_UNASSING = 3SATOKO_VAR_UNASSING31,666
typedef struct solver_t_ satoko_t;satoko_t35,716
typedef struct satoko_opts satoko_opts_t;satoko_opts_t37,752
struct satoko_opts {satoko_opts38,794
    long conf_limit;  /* Limit on the n.of conflicts */conf_limit40,832
    long prop_limit;  /* Limit on the n.of propagations */prop_limit41,888
    double f_rst;          /* Used to force a restart */f_rst44,995
    double b_rst;          /* Used to block a restart */b_rst45,1052
    unsigned fst_block_rst;   /* Lower bound n.of conflicts for start blocking restarts */fst_block_rst46,1109
    unsigned sz_lbd_bqueue;   /* Size of the moving avarege queue for LBD (force restart) */sz_lbd_bqueue47,1200
    unsigned sz_trail_bqueue; /* Size of the moving avarege queue for Trail size (block restart) */sz_trail_bqueue48,1293
    unsigned n_conf_fst_reduce;  /* N.of conflicts before first clause databese reduction */n_conf_fst_reduce51,1459
    unsigned inc_reduce;         /* Increment to reduce */inc_reduce52,1552
    unsigned inc_special_reduce; /* Special increment to reduce */inc_special_reduce53,1611
    unsigned lbd_freeze_clause;lbd_freeze_clause54,1678
    float learnt_ratio;          /* Percentage of learned clauses to remove */learnt_ratio55,1710
    double var_decay;var_decay58,1816
    float clause_decay;clause_decay59,1838
    unsigned var_act_rescale;var_act_rescale60,1862
    act_t var_act_limit;var_act_limit61,1892
    unsigned clause_max_sz_bin_resol;clause_max_sz_bin_resol65,1947
    unsigned clause_min_lbd_bin_resol;clause_min_lbd_bin_resol66,1985
    float garbage_max_ratio;garbage_max_ratio67,2024
    char verbose;verbose68,2053
    char no_simplify;no_simplify69,2071
typedef struct satoko_stats satoko_stats_t;satoko_stats_t72,2097
struct satoko_stats {satoko_stats73,2141
    unsigned n_starts;n_starts74,2163
    unsigned n_reduce_db;n_reduce_db75,2186
    long n_decisions;n_decisions77,2213
    long n_propagations;n_propagations78,2235
    long n_propagations_all;n_propagations_all79,2260
    long n_inspects;n_inspects80,2289
    long n_conflicts;n_conflicts81,2310
    long n_conflicts_all;n_conflicts_all82,2332
    long n_original_lits;n_original_lits84,2359
    long n_learnt_lits;n_learnt_lits85,2385

src/sat/cnf/cnfPost.c,279
void Cnf_ManPostprocess_old( Cnf_Man_t * p )Cnf_ManPostprocess_old45,1204
void Cnf_ManTransferCuts( Cnf_Man_t * p )Cnf_ManTransferCuts117,3418
void Cnf_ManFreeCuts( Cnf_Man_t * p )Cnf_ManFreeCuts142,4042
void Cnf_ManPostprocess( Cnf_Man_t * p )Cnf_ManPostprocess165,4529

src/sat/cnf/cnfCut.c,1076
Cnf_Cut_t * Cnf_CutAlloc( Cnf_Man_t * p, int nLeaves )Cnf_CutAlloc46,1260
void Cnf_CutFree( Cnf_Cut_t * pCut )Cnf_CutFree68,1902
Cnf_Cut_t * Cnf_CutCreate( Cnf_Man_t * p, Aig_Obj_t * pObj )Cnf_CutCreate87,2339
void Cnf_CutPrint( Cnf_Cut_t * pCut )Cnf_CutPrint115,3157
void Cnf_CutDeref( Cnf_Man_t * p, Cnf_Cut_t * pCut )Cnf_CutDeref135,3602
void Cnf_CutRef( Cnf_Man_t * p, Cnf_Cut_t * pCut )Cnf_CutRef157,4081
void Cnf_CutUpdateRefs( Cnf_Man_t * p, Cnf_Cut_t * pCut, Cnf_Cut_t * pCutFan, Cnf_Cut_t * pCutRes )Cnf_CutUpdateRefs178,4523
static inline int Cnf_CutMergeLeaves( Cnf_Cut_t * pCut, Cnf_Cut_t * pCutFan, int * pFanins )Cnf_CutMergeLeaves196,5011
static inline unsigned Cnf_TruthPhase( Cnf_Cut_t * pCut, Cnf_Cut_t * pCut1 )Cnf_TruthPhase226,6008
void Cnf_CutRemoveIthVar( Cnf_Cut_t * pCut, int iVar, int iFan )Cnf_CutRemoveIthVar254,6693
void Cnf_CutInsertIthVar( Cnf_Cut_t * pCut, int iVar, int iFan )Cnf_CutInsertIthVar274,7191
Cnf_Cut_t * Cnf_CutCompose( Cnf_Man_t * p, Cnf_Cut_t * pCut, Cnf_Cut_t * pCutFan, int iFan )Cnf_CutCompose294,7709

src/sat/cnf/cnfData.c,265
static const char s_Data3[82] = "!#&()*+,-.0123456789:;<=>?ABCDEFGHIJKLMNOPQRSTUVWXYZ[]abcdefghijklmnopqrstuvwxyz|";s_Data330,750
static const char * s_Data4[] = {s_Data432,868
void Cnf_ReadMsops( char ** ppSopSizes, char *** ppSops )Cnf_ReadMsops4537,355811

src/sat/cnf/cnfMan.c,2175
static inline int Cnf_Lit2Var( int Lit )        { return (Lit & 1)? -(Lit >> 1)-1 : (Lit >> 1)+1;  }Cnf_Lit2Var33,841
static inline int Cnf_Lit2Var2( int Lit )       { return (Lit & 1)? -(Lit >> 1)   : (Lit >> 1);    }Cnf_Lit2Var234,942
Cnf_Man_t * Cnf_ManStart()Cnf_ManStart51,1526
void Cnf_ManStop( Cnf_Man_t * p )Cnf_ManStop82,2421
Vec_Int_t * Cnf_DataCollectPiSatNums( Cnf_Dat_t * pCnf, Aig_Man_t * p )Cnf_DataCollectPiSatNums104,2926
Cnf_Dat_t * Cnf_DataAlloc( Aig_Man_t * pAig, int nVars, int nClauses, int nLiterals )Cnf_DataAlloc126,3473
Cnf_Dat_t * Cnf_DataDup( Cnf_Dat_t * p )Cnf_DataDup157,4454
void Cnf_DataFree( Cnf_Dat_t * p )Cnf_DataFree180,5142
void Cnf_DataLift( Cnf_Dat_t * p, int nVarsPlus )Cnf_DataLift205,5688
void Cnf_DataCollectFlipLits( Cnf_Dat_t * p, int iFlipVar, Vec_Int_t * vFlips )Cnf_DataCollectFlipLits218,6033
void Cnf_DataLiftAndFlipLits( Cnf_Dat_t * p, int nVarsPlus, Vec_Int_t * vLits )Cnf_DataLiftAndFlipLits227,6324
void Cnf_DataPrint( Cnf_Dat_t * p, int fReadable )Cnf_DataPrint246,6812
void Cnf_DataWriteIntoFileGz( Cnf_Dat_t * p, char * pFileName, int fReadable, Vec_Int_t * vForAlls, Vec_Int_t * vExists )Cnf_DataWriteIntoFileGz271,7565
void Cnf_DataWriteIntoFile( Cnf_Dat_t * p, char * pFileName, int fReadable, Vec_Int_t * vForAlls, Vec_Int_t * vExists )Cnf_DataWriteIntoFile318,9063
void * Cnf_DataWriteIntoSolverInt( void * pSolver, Cnf_Dat_t * p, int nFrames, int fInit )Cnf_DataWriteIntoSolverInt370,10712
void * Cnf_DataWriteIntoSolver( Cnf_Dat_t * p, int nFrames, int fInit )Cnf_DataWriteIntoSolver463,13589
void * Cnf_DataWriteIntoSolver2( Cnf_Dat_t * p, int nFrames, int fInit )Cnf_DataWriteIntoSolver2479,14001
int Cnf_DataWriteOrClause( void * p, Cnf_Dat_t * pCnf )Cnf_DataWriteOrClause571,16840
int Cnf_DataWriteOrClause2( void * p, Cnf_Dat_t * pCnf )Cnf_DataWriteOrClause2599,17574
int Cnf_DataWriteAndClauses( void * p, Cnf_Dat_t * pCnf )Cnf_DataWriteAndClauses627,18315
void Cnf_DataTranformPolarity( Cnf_Dat_t * pCnf, int fTransformPos )Cnf_DataTranformPolarity652,18944
int Cnf_DataAddXorClause( void * pSat, int iVarA, int iVarB, int iVarC )Cnf_DataAddXorClause688,19996

src/sat/cnf/cnf.h,3722
#define ABC__aig__cnf__cnf_hABC__aig__cnf__cnf_h22,531
typedef struct Cnf_Man_t_            Cnf_Man_t;Cnf_Man_t51,1414
typedef struct Cnf_Dat_t_            Cnf_Dat_t;Cnf_Dat_t52,1462
typedef struct Cnf_Cut_t_            Cnf_Cut_t;Cnf_Cut_t53,1510
struct Cnf_Dat_t_Cnf_Dat_t_56,1603
    Aig_Man_t *     pMan;            // the AIG manager, for which CNF is computedpMan58,1623
    int             nVars;           // the number of variablesnVars59,1706
    int             nLiterals;       // the number of CNF literalsnLiterals60,1770
    int             nClauses;        // the number of CNF clausesnClauses61,1837
    int **          pClauses;        // the CNF clausespClauses62,1903
    int *           pVarNums;        // the number of CNF variable for each node ID (-1 if unused)pVarNums63,1959
    int *           pObj2Clause;     // the mapping of objects into clausespObj2Clause64,2058
    int *           pObj2Count;      // the mapping of objects into clause numberpObj2Count65,2134
    unsigned char * pClaPols;        // polarity of input literals in each clausepClaPols66,2216
    Vec_Int_t *     vMapping;        // mapping of internal nodesvMapping67,2298
struct Cnf_Cut_t_Cnf_Cut_t_71,2413
    char            nFanins;         // the number of leavesnFanins73,2433
    char            Cost;            // the cost of this cutCost74,2494
    short           nWords;          // the number of words in truth tablenWords75,2555
    Vec_Int_t *     vIsop[2];        // neg/pos ISOPsvIsop76,2630
    int             pFanins[0];      // the fanins (followed by the truth table)pFanins77,2684
struct Cnf_Man_t_Cnf_Man_t_81,2800
    Aig_Man_t *     pManAig;         // the underlying AIG managerpManAig83,2820
    char *          pSopSizes;       // sizes of SOPs for 4-variable functionspSopSizes84,2887
    char **         pSops;           // the SOPs for 4-variable functionspSops85,2966
    int             aArea;           // the area of the mappingaArea86,3040
    Aig_MmFlex_t *  pMemCuts;        // memory manager for cutspMemCuts87,3104
    int             nMergeLimit;     // the limit on the size of merged cutnMergeLimit88,3168
    unsigned *      pTruths[4];      // temporary truth tablespTruths89,3244
    Vec_Int_t *     vMemory;         // memory for intermediate ISOP representationvMemory90,3307
    abctime         timeCuts; timeCuts91,3391
    abctime         timeMap;timeMap92,3422
    abctime         timeSave;timeSave93,3451
static inline Dar_Cut_t *  Dar_ObjBestCut( Aig_Obj_t * pObj ) { Dar_Cut_t * pCut; int i; Dar_ObjForEachCut( pObj, pCut, i ) if ( pCut->fBest ) return pCut; return NULL; }Dar_ObjBestCut97,3486
static inline int          Cnf_CutSopCost( Cnf_Man_t * p, Dar_Cut_t * pCut ) { return p->pSopSizes[pCut->uTruth] + p->pSopSizes[0xFFFF & ~pCut->uTruth]; }Cnf_CutSopCost99,3658
static inline int          Cnf_CutLeaveNum( Cnf_Cut_t * pCut )    { return pCut->nFanins;                               }Cnf_CutLeaveNum101,3814
static inline int *        Cnf_CutLeaves( Cnf_Cut_t * pCut )      { return pCut->pFanins;                               }Cnf_CutLeaves102,3936
static inline unsigned *   Cnf_CutTruth( Cnf_Cut_t * pCut )       { return (unsigned *)(pCut->pFanins + pCut->nFanins); }Cnf_CutTruth103,4058
static inline Cnf_Cut_t *  Cnf_ObjBestCut( Aig_Obj_t * pObj )                       { return (Cnf_Cut_t *)pObj->pData;  }Cnf_ObjBestCut105,4181
static inline void         Cnf_ObjSetBestCut( Aig_Obj_t * pObj, Cnf_Cut_t * pCut )  { pObj->pData = pCut;  }Cnf_ObjSetBestCut106,4303
#define Cnf_CnfForClause(Cnf_CnfForClause117,4882
#define Cnf_CutForEachLeaf(Cnf_CutForEachLeaf121,5085

src/sat/cnf/cnfMap.c,271
void Cnf_CutAssignAreaFlow( Cnf_Man_t * p, Dar_Cut_t * pCut, int * pAreaFlows )Cnf_CutAssignAreaFlow45,1232
int Cnf_CutSuperAreaFlow( Vec_Ptr_t * vSuper, int * pAreaFlows )Cnf_CutSuperAreaFlow73,2023
void Cnf_DeriveMapping( Cnf_Man_t * p )Cnf_DeriveMapping100,2722

src/sat/cnf/cnfWrite.c,872
Vec_Int_t * Cnf_ManWriteCnfMapping( Cnf_Man_t * p, Vec_Ptr_t * vMapped )Cnf_ManWriteCnfMapping45,1226
void Cnf_SopConvertToVector( char * pSop, int nCubes, Vec_Int_t * vCover )Cnf_SopConvertToVector82,2264
int Cnf_SopCountLiterals( char * pSop, int nCubes )Cnf_SopCountLiterals117,3148
int Cnf_IsopCountLiterals( Vec_Int_t * vIsop, int nVars )Cnf_IsopCountLiterals144,3742
int Cnf_IsopWriteCube( int Cube, int nVars, int * pVars, int * pLiterals )Cnf_IsopWriteCube170,4360
Cnf_Dat_t * Cnf_ManWriteCnf( Cnf_Man_t * p, Vec_Ptr_t * vMapped, int nOutputs )Cnf_ManWriteCnf199,5238
Cnf_Dat_t * Cnf_ManWriteCnfOther( Cnf_Man_t * p, Vec_Ptr_t * vMapped )Cnf_ManWriteCnfOther419,12970
Cnf_Dat_t * Cnf_DeriveSimple( Aig_Man_t * p, int nOutputs )Cnf_DeriveSimple587,18853
Cnf_Dat_t * Cnf_DeriveSimpleForRetiming( Aig_Man_t * p )Cnf_DeriveSimpleForRetiming709,23025

src/sat/cnf/cnfCore.c,660
static Cnf_Man_t * s_pManCnf = NULL;s_pManCnf30,750
void Cnf_ManPrepare()Cnf_ManPrepare46,1241
Cnf_Man_t * Cnf_ManRead()Cnf_ManRead54,1401
void Cnf_ManFree()Cnf_ManFree58,1453
Vec_Int_t * Cnf_DeriveMappingArray( Aig_Man_t * pAig )Cnf_DeriveMappingArray78,1842
Cnf_Dat_t * Cnf_DeriveWithMan( Cnf_Man_t * p, Aig_Man_t * pAig, int nOutputs )Cnf_DeriveWithMan129,3163
Cnf_Dat_t * Cnf_Derive( Aig_Man_t * pAig, int nOutputs )Cnf_Derive165,4164
Cnf_Dat_t * Cnf_DeriveOtherWithMan( Cnf_Man_t * p, Aig_Man_t * pAig, int fSkipTtMin )Cnf_DeriveOtherWithMan182,4575
Cnf_Dat_t * Cnf_DeriveOther( Aig_Man_t * pAig, int fSkipTtMin )Cnf_DeriveOther219,5646

src/sat/cnf/cnfFast.c,1226
void Cnf_CollectLeaves_rec( Aig_Obj_t * pRoot, Aig_Obj_t * pObj, Vec_Ptr_t * vSuper, int fStopCompl )Cnf_CollectLeaves_rec45,1274
void Cnf_CollectLeaves( Aig_Obj_t * pRoot, Vec_Ptr_t * vSuper, int fStopCompl )Cnf_CollectLeaves76,2227
void Cnf_CollectVolume_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Cnf_CollectVolume_rec94,2708
void Cnf_CollectVolume( Aig_Man_t * p, Aig_Obj_t * pRoot, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vNodes )Cnf_CollectVolume116,3351
word Cnf_CutDeriveTruth( Aig_Man_t * p, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vNodes )Cnf_CutDeriveTruth138,3951
static inline int Cnf_ObjGetLit( Vec_Int_t * vMap, Aig_Obj_t * pObj, int fCompl )Cnf_ObjGetLit180,5260
void Cnf_ComputeClauses( Aig_Man_t * p, Aig_Obj_t * pRoot, Cnf_ComputeClauses198,5758
void Cnf_DeriveFastMark( Aig_Man_t * p )Cnf_DeriveFastMark297,8993
int Cnf_CutCountClauses( Aig_Man_t * p, Vec_Ptr_t * vLeaves, Vec_Ptr_t * vNodes, Vec_Int_t * vCover )Cnf_CutCountClauses450,13941
int Cnf_CountCnfSize( Aig_Man_t * p )Cnf_CountCnfSize496,15407
Cnf_Dat_t * Cnf_DeriveFastClauses( Aig_Man_t * p, int nOutputs )Cnf_DeriveFastClauses545,16763
Cnf_Dat_t * Cnf_DeriveFast( Aig_Man_t * p, int nOutputs )Cnf_DeriveFast666,20581

src/sat/cnf/cnf_.c,0

src/sat/cnf/cnfUtil.c,1040
int Aig_ManScanMapping_rec( Cnf_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vMapped )Aig_ManScanMapping_rec46,1293
Vec_Ptr_t * Aig_ManScanMapping( Cnf_Man_t * p, int fCollect )Aig_ManScanMapping90,2733
int Cnf_ManScanMapping_rec( Cnf_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vMapped, int fPreorder )Cnf_ManScanMapping_rec120,3713
Vec_Ptr_t * Cnf_ManScanMapping( Cnf_Man_t * p, int fCollect, int fPreorder )Cnf_ManScanMapping170,5401
Vec_Int_t * Cnf_DataCollectCiSatNums( Cnf_Dat_t * pCnf, Aig_Man_t * p )Cnf_DataCollectCiSatNums200,6378
Vec_Int_t * Cnf_DataCollectCoSatNums( Cnf_Dat_t * pCnf, Aig_Man_t * p )Cnf_DataCollectCoSatNums222,6931
unsigned char * Cnf_DataDeriveLitPolarities( Cnf_Dat_t * p )Cnf_DataDeriveLitPolarities244,7456
Cnf_Dat_t * Cnf_DataReadFromFile( char * pFileName )Cnf_DataReadFromFile304,9935
int Cnf_DataSolveFromFile( char * pFileName, int nConfLimit, int nLearnedStart, int nLearnedDelta, int nLearnedPerce, int fVerbose, int fShowPattern, int ** ppModel, int nPis )Cnf_DataSolveFromFile402,12992

src/sat/xsat/xsatSolver.h,4975
#define ABC__sat__xSAT__xsatSolver_hABC__sat__xSAT__xsatSolver_h22,600
#  define false false46,1203
#  define true true49,1241
    Var0 = 1,Var055,1280
    Var1 = 0,Var156,1294
    VarX = 3VarX57,1308
    LBoolUndef =  0,LBoolUndef62,1332
    LBoolTrue  =  1,LBoolTrue63,1353
    LBoolFalse = -1LBoolFalse64,1374
    VarUndef = -1,VarUndef69,1405
    LitUndef = -2LitUndef70,1424
#define CRefUndef CRefUndef73,1446
typedef struct xSAT_SolverOptions_t_ xSAT_SolverOptions_t;xSAT_SolverOptions_t78,1695
struct xSAT_SolverOptions_t_xSAT_SolverOptions_t_79,1754
    char fVerbose;fVerbose81,1785
    iword   nConfLimit;    // external limit on the number of conflictsnConfLimit84,1819
    iword   nInsLimit;     // external limit on the number of implicationsnInsLimit85,1891
    abctime nRuntimeLimit; // external limit on runtimenRuntimeLimit86,1966
    double K; // Forces a restartK89,2067
    double R; // Block a restartR90,2101
    int nFirstBlockRestart; // Lower bound number of conflicts for start blocking restartsnFirstBlockRestart91,2134
    int nSizeLBDQueue;      // Size of the moving avarege queue for LBD (force restart)nSizeLBDQueue92,2225
    int nSizeTrailQueue;    // Size of the moving avarege queue for Trail size (block restart)nSizeTrailQueue93,2313
    int nConfFirstReduce;  // Number of conflicts before first reductionnConfFirstReduce96,2471
    int nIncReduce;        // Increment to reducenIncReduce97,2544
    int nSpecialIncReduce; // Special increment to reducenSpecialIncReduce98,2594
    unsigned nLBDFrozenClause;nLBDFrozenClause99,2652
typedef struct xSAT_Stats_t_ xSAT_Stats_t;xSAT_Stats_t102,2687
struct xSAT_Stats_t_xSAT_Stats_t_103,2730
    unsigned nStarts;nStarts105,2753
    unsigned nReduceDB;nReduceDB106,2775
    iword nDecisions;nDecisions108,2800
    iword nPropagations;nPropagations109,2822
    iword nInspects;nInspects110,2847
    iword nConflicts;nConflicts111,2868
    iword nClauseLits;nClauseLits113,2891
    iword nLearntLits;nLearntLits114,2914
struct xSAT_Solver_t_xSAT_Solver_t_117,2941
    xSAT_Mem_t * pMemory;pMemory120,2992
    Vec_Int_t  * vLearnts;vLearnts121,3018
    Vec_Int_t  * vClauses;vClauses122,3045
    xSAT_VecWatchList_t * vWatches;vWatches123,3072
    xSAT_VecWatchList_t * vBinWatches;vBinWatches124,3108
    int nVarActInc;       /* Amount to bump next variable with. */nVarActInc127,3177
    int nClaActInc;       /* Amount to bump next clause with. */nClaActInc128,3244
    Vec_Int_t * vActivity;      /* A heuristic measurement of the activity of a variable. */vActivity131,3341
    xSAT_Heap_t * hOrder;hOrder132,3434
    Vec_Int_t * vLevels;        /* Decision level of the current assignment */vLevels133,3460
    Vec_Int_t * vReasons;       /* Reason (clause) of the current assignment */vReasons134,3539
    Vec_Str_t * vAssigns;       /* Current assignment. */vAssigns135,3619
    Vec_Str_t * vPolarity;vPolarity136,3677
    Vec_Str_t * vTags;vTags137,3704
    Vec_Int_t * vTrail;vTrail140,3750
    Vec_Int_t * vTrailLim; // Separator indices for different decision levels in 'trail'.vTrailLim141,3774
    int iQhead;            // Head of propagation queue (as index into the trail).iQhead142,3864
    int     nAssignSimplify; /* Number of top-level assignments since lastnAssignSimplify144,3948
    iword   nPropSimplify;   /* Remaining number of propagations that must benPropSimplify146,4085
    xSAT_BQueue_t * bqTrail;bqTrail150,4290
    xSAT_BQueue_t * bqLBD;bqLBD151,4319
    float nSumLBD;nSumLBD152,4346
    int  nConfBeforeReduce;nConfBeforeReduce153,4365
    long nRC1;nRC1154,4393
    int  nRC2;nRC2155,4408
    Vec_Int_t * vLearntClause;vLearntClause158,4465
    Vec_Str_t * vSeen;vSeen159,4496
    Vec_Int_t * vTagged;vTagged160,4519
    Vec_Int_t * vStack;vStack161,4544
    Vec_Int_t * vLastDLevel;vLastDLevel162,4568
    unsigned nStamp;nStamp165,4623
    Vec_Int_t * vStamp;        /* Multipurpose stamp used to calculate LBD andvStamp166,4644
    xSAT_SolverOptions_t Config;Config169,4805
    xSAT_Stats_t Stats;Stats170,4838
static inline int xSAT_Var2Lit( int Var, int c )xSAT_Var2Lit173,4866
static inline int  xSAT_NegLit( int Lit )xSAT_NegLit178,4955
static inline int  xSAT_Lit2Var( int Lit )xSAT_Lit2Var183,5022
static inline int  xSAT_LitSign( int Lit )xSAT_LitSign188,5091
static inline int xSAT_SolverDecisionLevel( xSAT_Solver_t * s )xSAT_SolverDecisionLevel193,5159
static inline xSAT_Clause_t * xSAT_SolverReadClause( xSAT_Solver_t * s, unsigned h )xSAT_SolverReadClause198,5268
static inline int xSAT_SolverIsClauseSatisfied( xSAT_Solver_t * s, xSAT_Clause_t * pCla )xSAT_SolverIsClauseSatisfied203,5406
static inline void xSAT_SolverPrintClauses( xSAT_Solver_t * s )xSAT_SolverPrintClauses215,5738
static inline void xSAT_SolverPrintState( xSAT_Solver_t * s )xSAT_SolverPrintState224,5948

src/sat/xsat/xsatBQueue.h,953
#define ABC__sat__xSAT__xsatBQueue_hABC__sat__xSAT__xsatBQueue_h22,594
typedef struct xSAT_BQueue_t_ xSAT_BQueue_t;xSAT_BQueue_t34,1133
struct xSAT_BQueue_t_xSAT_BQueue_t_35,1178
    int nSize;nSize37,1202
    int nCap;nCap38,1217
    int iFirst;iFirst39,1231
    int iEmpty;iEmpty40,1247
    word nSum;nSum41,1263
    unsigned * pData;pData42,1278
static inline xSAT_BQueue_t * xSAT_BQueueNew( int nCap )xSAT_BQueueNew59,1742
static inline void xSAT_BQueueFree( xSAT_BQueue_t * p )xSAT_BQueueFree78,2158
static inline void xSAT_BQueuePush( xSAT_BQueue_t * p, unsigned Value )xSAT_BQueuePush95,2483
static inline int xSAT_BQueuePop( xSAT_BQueue_t * p )xSAT_BQueuePop126,3132
static inline unsigned xSAT_BQueueAvg( xSAT_BQueue_t * p )xSAT_BQueueAvg148,3600
static inline int xSAT_BQueueIsValid( xSAT_BQueue_t * p )xSAT_BQueueIsValid164,3943
static inline void xSAT_BQueueClean( xSAT_BQueue_t * p )xSAT_BQueueClean180,4261

src/sat/xsat/xsatCnfReader.c,465
char * xSAT_FileRead( FILE * pFile )xSAT_FileRead49,1394
static void skipLine( char ** pIn )skipLine79,2177
static int xSAT_ReadInt( char ** pIn )xSAT_ReadInt105,2616
static void xSAT_ReadClause( char ** pIn, xSAT_Solver_t * p, Vec_Int_t * vLits )xSAT_ReadClause136,3285
static int xSAT_ParseDimacs( char * pText, xSAT_Solver_t ** pS )xSAT_ParseDimacs163,3870
int xSAT_SolverParseDimacs( FILE * pFile, xSAT_Solver_t ** p )xSAT_SolverParseDimacs222,5381

src/sat/xsat/xsat.h,128
#define ABC__sat__xSAT__xSAT_hABC__sat__xSAT__xSAT_h22,589
typedef struct xSAT_Solver_t_ xSAT_Solver_t;xSAT_Solver_t36,1174

src/sat/xsat/xsatUtils.h,337
#define ABC__sat__xSAT__xsatUtils_hABC__sat__xSAT__xsatUtils_h22,593
static inline void xSAT_UtilSelectSort( void** pArray, int nSize, int(* CompFnct )( const void *, const void * ) )xSAT_UtilSelectSort42,1131
static void xSAT_UtilSort( void** pArray, int nSize, int(* CompFnct )( const void *, const void *) )xSAT_UtilSort72,1817

src/sat/xsat/xsatSolverAPI.c,597
xSAT_SolverOptions_t DefaultConfig =DefaultConfig33,924
xSAT_Solver_t* xSAT_SolverCreate()xSAT_SolverCreate66,1618
void xSAT_SolverDestroy( xSAT_Solver_t * s )xSAT_SolverDestroy121,3071
int xSAT_SolverSimplify( xSAT_Solver_t * s )xSAT_SolverSimplify164,4084
void xSAT_SolverAddVariable( xSAT_Solver_t* s, int Sign )xSAT_SolverAddVariable219,5770
int xSAT_SolverAddClause( xSAT_Solver_t * s, Vec_Int_t * vLits )xSAT_SolverAddClause251,6603
int xSAT_SolverSolve( xSAT_Solver_t* s )xSAT_SolverSolve299,7873
void xSAT_SolverPrintStats( xSAT_Solver_t * s )xSAT_SolverPrintStats338,9871

src/sat/xsat/xsatSolver.c,2228
static inline int xSAT_SolverDecide( xSAT_Solver_t * s )xSAT_SolverDecide49,1400
void xSAT_SolverRebuildOrderHeap( xSAT_Solver_t * s )xSAT_SolverRebuildOrderHeap77,2010
static inline void xSAT_SolverVarActRescale( xSAT_Solver_t * s )xSAT_SolverVarActRescale101,2593
static inline void xSAT_SolverVarActBump( xSAT_Solver_t * s, int Var )xSAT_SolverVarActBump124,3139
static inline void xSAT_SolverVarActDecay( xSAT_Solver_t * s )xSAT_SolverVarActDecay147,3713
static inline void xSAT_SolverClaActRescale( xSAT_Solver_t * s )xSAT_SolverClaActRescale163,4045
static inline void xSAT_SolverClaActBump( xSAT_Solver_t* s, xSAT_Clause_t * pCla )xSAT_SolverClaActBump188,4625
static inline void xSAT_SolverClaActDecay( xSAT_Solver_t * s )xSAT_SolverClaActDecay206,5075
static inline int xSAT_SolverClaCalcLBD( xSAT_Solver_t * s, xSAT_Clause_t * pCla )xSAT_SolverClaCalcLBD222,5408
static inline int xSAT_SolverClaCalcLBD2( xSAT_Solver_t * s, Vec_Int_t * vLits )xSAT_SolverClaCalcLBD2240,5880
unsigned xSAT_SolverClaNew( xSAT_Solver_t * s, Vec_Int_t * vLits , int fLearnt )xSAT_SolverClaNew269,6584
int xSAT_SolverEnqueue( xSAT_Solver_t * s, int Lit, unsigned Reason )xSAT_SolverEnqueue333,8500
static inline void xSAT_SolverNewDecision( xSAT_Solver_t * s, int Lit )xSAT_SolverNewDecision356,9085
void xSAT_SolverCancelUntil( xSAT_Solver_t * s, int Level )xSAT_SolverCancelUntil375,9584
static int xSAT_SolverIsLitRemovable( xSAT_Solver_t* s, int Lit, int MinLevel )xSAT_SolverIsLitRemovable410,10600
static void xSAT_SolverClaMinimisation( xSAT_Solver_t * s, Vec_Int_t * vLits )xSAT_SolverClaMinimisation468,12637
static void xSAT_SolverAnalyze( xSAT_Solver_t* s, unsigned ConfCRef, Vec_Int_t * vLearnt, int * OutBtLevel, unsigned * nLBD )xSAT_SolverAnalyze542,15108
unsigned xSAT_SolverPropagate( xSAT_Solver_t* s )xSAT_SolverPropagate665,19042
void xSAT_SolverReduceDB( xSAT_Solver_t * s )xSAT_SolverReduceDB777,22674
char xSAT_SolverSearch( xSAT_Solver_t * s )xSAT_SolverSearch847,24973
void xSAT_SolverClaRealloc( xSAT_Mem_t * pDest, xSAT_Mem_t * pSrc, unsigned * pCRef )xSAT_SolverClaRealloc934,27762
void xSAT_SolverGarbageCollect( xSAT_Solver_t * s )xSAT_SolverGarbageCollect964,28611

src/sat/xsat/xsatHeap.h,1716
#define ABC__sat__xSAT__xsatHeap_hABC__sat__xSAT__xsatHeap_h22,581
typedef struct xSAT_Heap_t_ xSAT_Heap_t;xSAT_Heap_t32,928
struct xSAT_Heap_t_xSAT_Heap_t_33,969
    Vec_Int_t * vActivity;vActivity35,991
    Vec_Int_t * vIndices;vIndices36,1018
    Vec_Int_t * vHeap;vHeap37,1044
static inline int xSAT_HeapSize( xSAT_Heap_t * h )xSAT_HeapSize51,1290
static inline int xSAT_HeapInHeap( xSAT_Heap_t * h, int Var )xSAT_HeapInHeap67,1601
static inline int Left  ( int i ) { return 2 * i + 1; }Left72,1762
static inline int Right ( int i ) { return ( i + 1 ) * 2; }Right73,1818
static inline int Parent( int i ) { return ( i - 1 ) >> 1; }Parent74,1878
static inline int Compare( xSAT_Heap_t * p, int x, int y )Compare75,1939
static inline void xSAT_HeapPercolateUp( xSAT_Heap_t * h, int i )xSAT_HeapPercolateUp91,2324
static inline void xSAT_HeapPercolateDown( xSAT_Heap_t * h, int i )xSAT_HeapPercolateDown118,3030
static inline xSAT_Heap_t * xSAT_HeapAlloc( Vec_Int_t * vActivity )xSAT_HeapAlloc154,4199
static inline void xSAT_HeapFree( xSAT_Heap_t * p )xSAT_HeapFree175,4658
static inline void xSAT_HeapIncrease( xSAT_Heap_t * h, int e )xSAT_HeapIncrease193,5014
static inline void xSAT_HeapDecrease( xSAT_Heap_t * p, int e )xSAT_HeapDecrease210,5405
static inline void xSAT_HeapInsert( xSAT_Heap_t * p, int n )xSAT_HeapInsert227,5795
static inline void xSAT_HeapUpdate( xSAT_Heap_t * p, int i )xSAT_HeapUpdate248,6329
static inline void xSAT_HeapBuild( xSAT_Heap_t * p, Vec_Int_t * Vars )xSAT_HeapBuild270,6840
static inline void xSAT_HeapClear( xSAT_Heap_t * p )xSAT_HeapClear299,7524
static inline int xSAT_HeapRemoveMin( xSAT_Heap_t * p )xSAT_HeapRemoveMin316,7895

src/sat/xsat/xsatWatchList.h,1756
#define ABC__sat__xSAT__xsatWatchList_hABC__sat__xSAT__xsatWatchList_h22,623
typedef struct xSAT_Watcher_t_ xSAT_Watcher_t;xSAT_Watcher_t34,1165
struct xSAT_Watcher_t_xSAT_Watcher_t_35,1212
    unsigned CRef;CRef37,1237
    int Blocker;Blocker38,1256
typedef struct xSAT_WatchList_t_ xSAT_WatchList_t;xSAT_WatchList_t41,1277
struct xSAT_WatchList_t_xSAT_WatchList_t_42,1328
    int nCap;nCap44,1355
    int nSize;nSize45,1369
    xSAT_Watcher_t * pArray;pArray46,1384
typedef struct xSAT_VecWatchList_t_ xSAT_VecWatchList_t;xSAT_VecWatchList_t49,1417
struct xSAT_VecWatchList_t_xSAT_VecWatchList_t_50,1474
    int nCap;nCap52,1504
    int nSize;nSize53,1518
    xSAT_WatchList_t * pArray;pArray54,1533
static inline void xSAT_WatchListFree( xSAT_WatchList_t * v )xSAT_WatchListFree68,1787
static inline int  xSAT_WatchListSize( xSAT_WatchList_t * v )xSAT_WatchListSize85,2125
static inline void xSAT_WatchListShrink( xSAT_WatchList_t * v, int k )xSAT_WatchListShrink101,2432
static inline void xSAT_WatchListPush( xSAT_WatchList_t * v, xSAT_Watcher_t e )xSAT_WatchListPush118,2772
static inline xSAT_Watcher_t* xSAT_WatchListArray( xSAT_WatchList_t * v )xSAT_WatchListArray149,3558
static inline void xSAT_WatchListRemove( xSAT_WatchList_t * v, unsigned CRef )xSAT_WatchListRemove165,3878
static inline xSAT_VecWatchList_t * xSAT_VecWatchListAlloc( int nCap )xSAT_VecWatchListAlloc187,4445
static inline void xSAT_VecWatchListFree( xSAT_VecWatchList_t* v )xSAT_VecWatchListFree208,4967
static inline void xSAT_VecWatchListPush( xSAT_VecWatchList_t* v )xSAT_VecWatchListPush229,5397
static inline xSAT_WatchList_t * xSAT_VecWatchListEntry( xSAT_VecWatchList_t* v, int iEntry )xSAT_VecWatchListEntry260,6240

src/sat/xsat/xsatMemory.h,1072
#define ABC__sat__xSAT__xsatMemory_hABC__sat__xSAT__xsatMemory_h22,598
typedef struct xSAT_Mem_t_ xSAT_Mem_t;xSAT_Mem_t36,1162
struct xSAT_Mem_t_xSAT_Mem_t_37,1201
    unsigned   nSize;nSize39,1222
    unsigned   nCap;nCap40,1244
    unsigned   nWasted;nWasted41,1265
    unsigned * pData;pData42,1289
static inline xSAT_Clause_t *  xSAT_MemClauseHand( xSAT_Mem_t * p, int h )xSAT_MemClauseHand59,1753
static inline void xSAT_MemGrow( xSAT_Mem_t * p, unsigned nCap )xSAT_MemGrow75,2125
static inline xSAT_Mem_t * xSAT_MemAlloc( int nCap )xSAT_MemAlloc101,2769
static inline void xSAT_MemRestart( xSAT_Mem_t * p )xSAT_MemRestart123,3207
static inline void xSAT_MemFree( xSAT_Mem_t * p )xSAT_MemFree140,3537
static inline unsigned xSAT_MemAppend( xSAT_Mem_t * p, int nSize )xSAT_MemAppend157,3917
static inline unsigned xSAT_MemCRef( xSAT_Mem_t * p, unsigned * pC )xSAT_MemCRef179,4401
static inline unsigned xSAT_MemCap( xSAT_Mem_t * p )xSAT_MemCap195,4742
static inline unsigned xSAT_MemWastedCap( xSAT_Mem_t * p )xSAT_MemWastedCap211,5039

src/sat/xsat/xsatClause.h,716
#define ABC__sat__xSAT__xsatClause_hABC__sat__xSAT__xsatClause_h22,593
typedef struct xSAT_Clause_t_ xSAT_Clause_t;xSAT_Clause_t34,1132
struct xSAT_Clause_t_xSAT_Clause_t_35,1177
    unsigned fLearnt   :  1;fLearnt37,1201
    unsigned fMark     :  1;fMark38,1230
    unsigned fReallocd :  1;fReallocd39,1259
    unsigned fCanBeDel :  1;fCanBeDel40,1288
    unsigned nLBD      : 28;nLBD41,1317
    int nSize;nSize42,1346
        int Lit;Lit44,1373
        unsigned Act;Act45,1390
    } pData[0];pData46,1412
static inline int xSAT_ClauseCompare( const void * p1, const void * p2 )xSAT_ClauseCompare63,1870
static inline void xSAT_ClausePrint( xSAT_Clause_t * pCla )xSAT_ClausePrint94,2630

src/sat/bmc/bmc.h,7447
#define ABC___sat_bmc_BMC_hABC___sat_bmc_BMC_h22,538
typedef struct Bmc_EsPar_t_ Bmc_EsPar_t;Bmc_EsPar_t47,1369
struct Bmc_EsPar_t_Bmc_EsPar_t_48,1410
    int        nVars; nVars50,1432
    int        nNodes;nNodes51,1455
    int        nLutSize;nLutSize52,1478
    int        nMajSupp;nMajSupp53,1503
    int        fMajority;fMajority54,1528
    int        fUseIncr;fUseIncr55,1554
    int        fOnlyAnd;fOnlyAnd56,1579
    int        fGlucose;fGlucose57,1604
    int        fOrderNodes;fOrderNodes58,1629
    int        fEnumSols;fEnumSols59,1657
    int        fFewerVars;fFewerVars60,1683
    int        RuntimeLim;RuntimeLim61,1710
    int        fVerbose; fVerbose62,1737
    char *     pTtStr;pTtStr63,1763
static inline void Bmc_EsParSetDefault( Bmc_EsPar_t * pPars )Bmc_EsParSetDefault66,1790
typedef struct Unr_Man_t_ Unr_Man_t;Unr_Man_t86,2299
typedef struct Saig_ParBmc_t_ Saig_ParBmc_t;Saig_ParBmc_t88,2337
struct Saig_ParBmc_t_Saig_ParBmc_t_89,2382
    int         nStart;         // starting timeframenStart91,2406
    int         nFramesMax;     // maximum number of timeframes nFramesMax92,2460
    int         nConfLimit;     // maximum number of conflicts at a nodenConfLimit93,2525
    int         nConfLimitJump; // maximum number of conflicts after jumpingnConfLimitJump94,2598
    int         nFramesJump;    // the number of tiemframes to jumpnFramesJump95,2675
    int         nTimeOut;       // approximate timeout in secondsnTimeOut96,2743
    int         nTimeOutGap;    // approximate timeout in seconds since the last changenTimeOutGap97,2809
    int         nTimeOutOne;    // timeout per output in multi-output solvingnTimeOutOne98,2897
    int         nPisAbstract;   // the number of PIs to abstractnPisAbstract99,2975
    int         fSolveAll;      // does not stop at the first SAT outputfSolveAll100,3040
    int         fStoreCex;      // enable storing CEXes in the MO modefStoreCex101,3113
    int         fUseBridge;     // use bridge interfacefUseBridge102,3184
    int         fDropSatOuts;   // replace sat outputs by constant 0fDropSatOuts103,3240
    int         nFfToAddMax;    // max number of flops to add during CBAnFfToAddMax104,3309
    int         fSkipRand;      // skip random decisionsfSkipRand105,3382
    int         fNoRestarts;    // disables periodic restartsfNoRestarts106,3439
    int         fUseSatoko;     // enables using SatokofUseSatoko107,3501
    int         fUseGlucose;    // enables using Glucose 3.0fUseGlucose108,3557
    int         nLearnedStart;  // starting learned clause limitnLearnedStart109,3618
    int         nLearnedDelta;  // delta of learned clause limitnLearnedDelta110,3683
    int         nLearnedPerce;  // ratio of learned clause limitnLearnedPerce111,3748
    int         fVerbose;       // verbose fVerbose112,3813
    int         fNotVerbose;    // skip line-by-line print-out fNotVerbose113,3857
    char *      pLogFileName;   // log file namepLogFileName114,3921
    int         fSilent;        // completely silentfSilent115,3970
    int         iFrame;         // explored up to this frameiFrame116,4023
    int         nFailOuts;      // the number of failed outputsnFailOuts117,4084
    int         nDropOuts;      // the number of dropped outputsnDropOuts118,4148
    abctime     timeLastSolved; // the time when the last output was solvedtimeLastSolved119,4213
    int(*pFuncOnFail)(int,Abc_Cex_t*); // called for a failed output in MO modepFuncOnFail120,4289
    int         RunId;          // BMC id in this run RunId121,4369
    int(*pFuncStop)(int);       // callback to terminatepFuncStop122,4424
typedef struct Bmc_AndPar_t_ Bmc_AndPar_t;Bmc_AndPar_t126,4487
struct Bmc_AndPar_t_Bmc_AndPar_t_127,4530
    int         nStart;         // starting timeframenStart129,4553
    int         nFramesMax;     // maximum number of timeframes nFramesMax130,4607
    int         nFramesAdd;     // the number of additional framesnFramesAdd131,4672
    int         nConfLimit;     // maximum number of conflicts at a nodenConfLimit132,4739
    int         nTimeOut;       // timeout in secondsnTimeOut133,4812
    int         nLutSize;       // LUT size for cut computationnLutSize134,4866
    int         nProcs;         // the number of parallel solversnProcs135,4930
    int         fLoadCnf;       // dynamic CNF loadingfLoadCnf136,4996
    int         fDumpFrames;    // dump unrolled timeframesfDumpFrames137,5051
    int         fUseSynth;      // use synthesisfUseSynth138,5111
    int         fUseOldCnf;     // use old CNF constructionfUseOldCnf139,5160
    int         fUseGlucose;    // use Glucose 3.0 as the default solverfUseGlucose140,5220
    int         fUseEliminate;  // use variable eliminationfUseEliminate141,5293
    int         fVerbose;       // verbose fVerbose142,5353
    int         fVeryVerbose;   // very verbose fVeryVerbose143,5397
    int         fNotVerbose;    // skip line-by-line print-out fNotVerbose144,5446
    int         iFrame;         // explored up to this frameiFrame145,5510
    int         nFailOuts;      // the number of failed outputsnFailOuts146,5571
    int         nDropOuts;      // the number of dropped outputsnDropOuts147,5635
    void (*pFuncOnFrameDone)(int, int, int); // callback on each frame status (frame, po, statuss)pFuncOnFrameDone149,5705
typedef struct Bmc_BCorePar_t_ Bmc_BCorePar_t;Bmc_BCorePar_t152,5810
struct Bmc_BCorePar_t_Bmc_BCorePar_t_153,5857
    int         iFrame;         // timeframeiFrame155,5882
    int         iOutput;        // property outputiOutput156,5927
    int         nTimeOut;       // timeout in secondsnTimeOut157,5978
    char *      pFilePivots;    // file name with AIG IDs of pivot objectspFilePivots158,6032
    char *      pFileProof;     // file name to write the resulting proofpFileProof159,6107
    int         fVerbose;       // verbose outputfVerbose160,6181
typedef struct Bmc_MulPar_t_ Bmc_MulPar_t;Bmc_MulPar_t163,6235
struct Bmc_MulPar_t_Bmc_MulPar_t_164,6278
    int         TimeOutGlo;TimeOutGlo166,6301
    int         TimeOutLoc;TimeOutLoc167,6329
    int         TimeOutInc;TimeOutInc168,6357
    int         TimeOutGap;TimeOutGap169,6385
    int         TimePerOut;TimePerOut170,6413
    int         fUseSyn;fUseSyn171,6441
    int         fDumpFinal;fDumpFinal172,6466
    int         fVerbose;fVerbose173,6494
    int         fVeryVerbose;fVeryVerbose174,6520
typedef struct Bmc_ParFf_t_ Bmc_ParFf_t;Bmc_ParFf_t177,6554
struct Bmc_ParFf_t_Bmc_ParFf_t_178,6595
    char *     pFileName;pFileName180,6617
    char *     pFormStr;pFormStr181,6643
    int        Algo;Algo182,6668
    int        fComplVars;fComplVars183,6689
    int        fStartPats;fStartPats184,6716
    int        nTimeOut;nTimeOut185,6743
    int        nIterCheck;nIterCheck186,6768
    int        nCardConstr;nCardConstr187,6795
    int        fNonStrict;fNonStrict188,6823
    int        fBasic;fBasic189,6850
    int        fFfOnly;fFfOnly190,6873
    int        fCheckUntest;fCheckUntest191,6897
    int        fDump;fDump192,6926
    int        fDumpDelay;fDumpDelay193,6948
    int        fDumpUntest;fDumpUntest194,6975
    int        fDumpNewFaults;fDumpNewFaults195,7003
    int        fVerbose;fVerbose196,7034

src/sat/bmc/bmcMesh2.c,899
#define NCPARS NCPARS32,852
static inline int Bmc_MeshTVar( int Me[102][102], int x, int y ) { return Me[x][y];                                         }Bmc_MeshTVar34,871
static inline int Bmc_MeshGVar( int Me[102][102], int x, int y ) { return Me[x][y] + Me[101][100];                          }Bmc_MeshGVar35,997
static inline int Bmc_MeshCVar( int Me[102][102], int x, int y ) { return Me[x][y] + Me[101][100] + Me[101][101];           }Bmc_MeshCVar36,1123
static inline int Bmc_MeshUVar( int Me[102][102], int x, int y ) { return Me[x][y] + Me[101][100] + Me[101][101] + NCPARS;  }Bmc_MeshUVar37,1249
static inline int Bmc_MeshVarValue2( sat_solver * p, int v )Bmc_MeshVarValue256,1832
int Bmc_MeshAddOneHotness2( sat_solver * pSat, int iFirst, int iLast )Bmc_MeshAddOneHotness274,2316
void Bmc_MeshTest2( Gia_Man_t * p, int X, int Y, int T, int fVerbose )Bmc_MeshTest2109,3285

src/sat/bmc/bmcMaj2.c,7050
#define MAJ_NOBJS MAJ_NOBJS33,915
typedef struct Maj_Man_t_ Maj_Man_t;Maj_Man_t35,974
struct Maj_Man_t_ Maj_Man_t_36,1011
    int               nVars;     // inputsnVars38,1032
    int               nNodes;    // internal nodesnNodes39,1075
    int               nObjs;     // total objects (2 consts, nVars inputs, nNodes internal nodes)nObjs40,1126
    int               nWords;    // the truth table size in 64-bit wordsnWords41,1224
    int               iVar;      // the next available SAT variableiVar42,1297
    int               fUseConst; // use constant faninsfUseConst43,1365
    int               fUseLine;  // use cascade topologyfUseLine44,1421
    int               fUseRand;  // use random topologyfUseRand45,1478
    int               nRands;    // number of random connectionsnRands46,1534
    int               fVerbose;  // verbose flagfVerbose47,1599
    Vec_Wrd_t *       vInfo;     // Const0 + Const1 + nVars + nNodes + Maj(nVars)vInfo48,1648
    int               VarMarks[MAJ_NOBJS][3][MAJ_NOBJS]; // variable marksVarMarks49,1730
    int               VarVals[MAJ_NOBJS+2]; // values of the first 2 + nVars variablesVarVals50,1805
    Vec_Wec_t *       vOutLits;  // output varsvOutLits51,1892
    sat_solver *      pSat;      // SAT solverpSat52,1940
static inline word *  Maj_ManTruth( Maj_Man_t * p, int v ) { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Maj_ManTruth55,1991
static int Maj_ManValue( int iMint, int nVars )Maj_ManValue72,2558
static Vec_Wrd_t * Maj_ManTruthTables( Maj_Man_t * p )Maj_ManTruthTables79,2736
static void Maj_ManConnect( int VarCons[MAJ_NOBJS][3], int nVars, int nObjs, int nRands, int fVerbose )Maj_ManConnect92,3293
static void Maj_ManConnect2( int VarCons[MAJ_NOBJS][3], int nVars, int nObjs, int nRands )Maj_ManConnect2145,4802
static int Maj_ManMarkup( Maj_Man_t * p )Maj_ManMarkup156,5124
static Maj_Man_t * Maj_ManAlloc( int nVars, int nNodes, int fUseConst, int fUseLine, int fUseRand, int nRands, int fVerbose )Maj_ManAlloc229,7402
static void Maj_ManFree( Maj_Man_t * p )Maj_ManFree249,8117
static inline int Maj_ManFindFanin( Maj_Man_t * p, int i, int k )Maj_ManFindFanin269,8512
static inline int Maj_ManEval( Maj_Man_t * p )Maj_ManEval281,8849
static void Maj_ManPrintSolution( Maj_Man_t * p )Maj_ManPrintSolution329,10278
static int Maj_ManAddCnfStart( Maj_Man_t * p )Maj_ManAddCnfStart363,11193
static int Maj_ManAddCnf( Maj_Man_t * p, int iMint )Maj_ManAddCnf410,12987
int Maj_ManExactSynthesis2( int nVars, int nNodes, int fUseConst, int fUseLine, int fUseRand, int nRands, int fVerbose )Maj_ManExactSynthesis2462,15093
int Maj_ManExactSynthesisTest()Maj_ManExactSynthesisTest503,16638
typedef struct Exa_Man_t_ Exa_Man_t;Exa_Man_t516,16885
struct Exa_Man_t_ Exa_Man_t_517,16922
    Bmc_EsPar_t *     pPars;     // parameterspPars519,16943
    int               nVars;     // inputsnVars520,16990
    int               nNodes;    // internal nodesnNodes521,17033
    int               nObjs;     // total objects (nVars inputs + nNodes internal nodes)nObjs522,17084
    int               nWords;    // the truth table size in 64-bit wordsnWords523,17173
    int               iVar;      // the next available SAT variableiVar524,17246
    word *            pTruth;    // truth tablepTruth525,17314
    Vec_Wrd_t *       vInfo;     // nVars + nNodes + 1vInfo526,17362
    int               VarMarks[MAJ_NOBJS][2][MAJ_NOBJS]; // variable marksVarMarks527,17417
    int               VarVals[MAJ_NOBJS]; // values of the first nVars variablesVarVals528,17492
    Vec_Wec_t *       vOutLits;  // output varsvOutLits529,17573
    sat_solver *      pSat;      // SAT solverpSat530,17621
static inline word *  Exa_ManTruth( Exa_Man_t * p, int v ) { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Exa_ManTruth533,17672
static Vec_Wrd_t * Exa_ManTruthTables( Exa_Man_t * p )Exa_ManTruthTables547,18020
static int Exa_ManMarkup( Exa_Man_t * p )Exa_ManMarkup555,18343
static Exa_Man_t * Exa_ManAlloc( Bmc_EsPar_t * pPars, word * pTruth )Exa_ManAlloc595,19552
static void Exa_ManFree( Exa_Man_t * p )Exa_ManFree611,20125
static inline int Exa_ManFindFanin( Exa_Man_t * p, int i, int k )Exa_ManFindFanin631,20520
static inline int Exa_ManEval( Exa_Man_t * p )Exa_ManEval643,20857
static void Exa_ManPrintSolution( Exa_Man_t * p, int fCompl )Exa_ManPrintSolution681,22125
static int Exa_ManAddCnfStart( Exa_Man_t * p, int fOnlyAnd )Exa_ManAddCnfStart720,23365
static int Exa_ManAddCnf( Exa_Man_t * p, int iMint )Exa_ManAddCnf797,26283
void Exa_ManExactSynthesis2( Bmc_EsPar_t * pPars )Exa_ManExactSynthesis2852,28503
typedef struct Exa3_Man_t_ Exa3_Man_t;Exa3_Man_t897,29994
struct Exa3_Man_t_ Exa3_Man_t_898,30033
    Bmc_EsPar_t *     pPars;     // parameterspPars900,30055
    int               nVars;     // inputsnVars901,30102
    int               nNodes;    // internal nodesnNodes902,30145
    int               nLutSize;  // lut sizenLutSize903,30196
    int               LutMask;   // lut maskLutMask904,30241
    int               nObjs;     // total objects (nVars inputs + nNodes internal nodes)nObjs905,30286
    int               nWords;    // the truth table size in 64-bit wordsnWords906,30375
    int               iVar;      // the next available SAT variableiVar907,30448
    word *            pTruth;    // truth tablepTruth908,30516
    Vec_Wrd_t *       vInfo;     // nVars + nNodes + 1vInfo909,30564
    int               VarMarks[MAJ_NOBJS][6][MAJ_NOBJS]; // variable marksVarMarks910,30619
    int               VarVals[MAJ_NOBJS]; // values of the first nVars variablesVarVals911,30694
    Vec_Wec_t *       vOutLits;  // output varsvOutLits912,30775
    sat_solver *      pSat;      // SAT solverpSat913,30823
static inline word *  Exa3_ManTruth( Exa3_Man_t * p, int v ) { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Exa3_ManTruth916,30874
static Vec_Wrd_t * Exa3_ManTruthTables( Exa3_Man_t * p )Exa3_ManTruthTables930,31224
static int Exa3_ManMarkup( Exa3_Man_t * p )Exa3_ManMarkup938,31551
static int Exa3_ManInitPolarityFindVar( Exa3_Man_t * p, int i, int k, int * pIndex )Exa3_ManInitPolarityFindVar980,32915
static void Exa3_ManInitPolarity( Exa3_Man_t * p )Exa3_ManInitPolarity990,33199
static Exa3_Man_t * Exa3_ManAlloc( Bmc_EsPar_t * pPars, word * pTruth )Exa3_ManAlloc1028,34401
static void Exa3_ManFree( Exa3_Man_t * p )Exa3_ManFree1047,35098
static inline int Exa3_ManFindFanin( Exa3_Man_t * p, int i, int k )Exa3_ManFindFanin1067,35495
static inline int Exa3_ManEval( Exa3_Man_t * p )Exa3_ManEval1079,35834
static void Exa3_ManPrintSolution( Exa3_Man_t * p, int fCompl )Exa3_ManPrintSolution1120,37402
static int Exa3_ManAddCnfStart( Exa3_Man_t * p, int fOnlyAnd )Exa3_ManAddCnfStart1174,39088
static int Exa3_ManAddCnf( Exa3_Man_t * p, int iMint )Exa3_ManAddCnf1255,42183
void Exa3_ManExactSynthesis2( Bmc_EsPar_t * pPars )Exa3_ManExactSynthesis21313,44749

src/sat/bmc/bmc.c,0

src/sat/bmc/bmcGen.c,491
static inline word * Gia_ManMoObj( Gia_Man_t * p, int iObj )Gia_ManMoObj47,1302
static inline void Gia_ManMoSetCi( Gia_Man_t * p, int iObj )Gia_ManMoSetCi51,1426
static inline void Gia_ManMoSimAnd( Gia_Man_t * p, int iObj )Gia_ManMoSimAnd58,1627
static inline void Gia_ManMoSetCo( Gia_Man_t * p, int iObj )Gia_ManMoSetCo84,2500
void Gia_ManMoFindSimulate( Gia_Man_t * p, int nWords )Gia_ManMoFindSimulate101,2961
int Gia_ManTestSatEnum( Gia_Man_t * p )Gia_ManTestSatEnum129,3694

src/sat/bmc/bmcBmcG.c,2890
#define PAR_THR_MAX PAR_THR_MAX31,836
typedef struct Bmcg_Man_t_ Bmcg_Man_t;Bmcg_Man_t33,861
struct Bmcg_Man_t_Bmcg_Man_t_34,900
    Bmc_AndPar_t *    pPars;               // parameterspPars36,921
    Gia_Man_t *       pGia;                // user's AIGpGia37,978
    Gia_Man_t *       pFrames;             // unfolded AIG (pFrames->vCopies point to pClean)pFrames38,1035
    Gia_Man_t *       pClean;              // incremental AIG (pClean->Value point to pFrames)pClean39,1129
    Vec_Ptr_t         vGia2Fr;             // copies of GIA in each timeframevGia2Fr40,1224
    Vec_Int_t         vFr2Sat;             // mapping of objects in pFrames into SAT variablesvFr2Sat41,1302
    Vec_Int_t         vCiMap;              // maps CIs of pFrames into CIs/frames of GIAvCiMap42,1397
    bmcg_sat_solver * pSats[PAR_THR_MAX];  // concurrent SAT solverspSats43,1486
    int               nSatVars;            // number of SAT variables usednSatVars44,1555
    int               nOldFrPis;           // number of primary inputsnOldFrPis45,1630
    int               nOldFrPos;           // number of primary outputnOldFrPos46,1701
    int               fStopNow;            // signal when it is time to stopfStopNow47,1772
    abctime           timeUnf;             // runtime of unfoldingtimeUnf48,1849
    abctime           timeCnf;             // runtime of CNF generationtimeCnf49,1916
    abctime           timeSmp;             // runtime of CNF simplificationtimeSmp50,1988
    abctime           timeSat;             // runtime of the solverstimeSat51,2064
    abctime           timeOth;             // other runtimetimeOth52,2133
static inline int * Bmcg_ManCopies( Bmcg_Man_t * p, int f ) { return (int*)Vec_PtrEntry(&p->vGia2Fr, f); }Bmcg_ManCopies55,2197
Bmcg_Man_t * Bmcg_ManStart( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Bmcg_ManStart72,2759
void Bmcg_ManStop( Bmcg_Man_t * p )Bmcg_ManStop100,3902
int Bmcg_ManUnfold_rec( Bmcg_Man_t * p, int iObj, int f )Bmcg_ManUnfold_rec127,4551
int Bmcg_ManCollect_rec( Bmcg_Man_t * p, int iObj )Bmcg_ManCollect_rec163,5757
Gia_Man_t * Bmcg_ManUnfold( Bmcg_Man_t * p, int f, int nFramesAdd )Bmcg_ManUnfold187,6738
Cnf_Dat_t * Bmcg_ManAddNewCnf( Bmcg_Man_t * p, int f, int nFramesAdd )Bmcg_ManAddNewCnf233,8974
void Bmcg_ManPrintFrame( Bmcg_Man_t * p, int f, int nClauses, int Solver, abctime clkStart )Bmcg_ManPrintFrame275,10230
void Bmcg_ManPrintTime( Bmcg_Man_t * p )Bmcg_ManPrintTime294,11305
Abc_Cex_t * Bmcg_ManGenerateCex( Bmcg_Man_t * p, int i, int f, int s )Bmcg_ManGenerateCex306,11826
void Bmcg_ManAddCnf( Bmcg_Man_t * p, bmcg_sat_solver * pSat, Cnf_Dat_t * pCnf )Bmcg_ManAddCnf322,12568
int Bmcg_ManPerformOne( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Bmcg_ManPerformOne357,14044
int Bmcg_ManPerform( Gia_Man_t * pGia, Bmc_AndPar_t * pPars ) Bmcg_ManPerform443,17684

src/sat/bmc/bmcLoad.c,897
typedef struct Bmc_Load_t_ Bmc_Load_t;  Bmc_Load_t31,820
struct Bmc_Load_t_Bmc_Load_t_32,861
    Bmc_AndPar_t *   pPars;     // parameterspPars34,882
    Gia_Man_t *      pGia;      // unrolled AIGpGia35,928
    sat_solver *     pSat;      // SAT solverspSat36,976
    Vec_Int_t *      vSat2Id;   // maps SAT var into its nodevSat2Id37,1023
    int              nCallBacks1; nCallBacks140,1199
    int              nCallBacks2; nCallBacks241,1234
int Bmc_LoadGetSatVar( Bmc_Load_t * p, int Id )Bmc_LoadGetSatVar60,1750
int Bmc_LoadAddCnf( void * pMan, int iLit )Bmc_LoadAddCnf71,2069
int Bmc_LoadAddCnf_rec( Bmc_Load_t * p, int Id )Bmc_LoadAddCnf_rec101,3299
Bmc_Load_t * Bmc_LoadStart( Gia_Man_t * pGia )Bmc_LoadStart126,3996
void Bmc_LoadStop( Bmc_Load_t * p )Bmc_LoadStop143,4493
void Bmc_LoadTest( Gia_Man_t * pGia, int fLoadCnf, int fVerbose )Bmc_LoadTest161,4852

src/sat/bmc/bmcBCore.c,689
Vec_Int_t * Bmc_ManBCoreReadPivots( char * pName )Bmc_ManBCoreReadPivots47,1334
Vec_Int_t * Bmc_ManBCoreCollectPivots( Gia_Man_t * p, char * pName, Vec_Int_t * vVarMap )Bmc_ManBCoreCollectPivots57,1614
static inline void Bmc_ManBCoreAssignVar( Gia_Man_t * p, Gia_Obj_t * pObj, int f, Vec_Int_t * vNodes )Bmc_ManBCoreAssignVar90,2679
void Bmc_ManBCoreCollect_rec( Gia_Man_t * p, int Id, int f, Vec_Int_t * vNodes, Vec_Int_t * vRootsNew )Bmc_ManBCoreCollect_rec98,3039
Vec_Int_t * Bmc_ManBCoreCollect( Gia_Man_t * p, int iFrame, int iOut, sat_solver * pSat )Bmc_ManBCoreCollect117,3727
void Bmc_ManBCorePerform( Gia_Man_t * p, Bmc_BCorePar_t * pPars )Bmc_ManBCorePerform196,6790

src/sat/bmc/bmcCexMin2.c,1374
static inline int  Abc_InfoGet2Bits( Vec_Int_t * vData, int nWords, int iFrame, int iObj )Abc_InfoGet2Bits31,808
static inline void Abc_InfoSet2Bits( Vec_Int_t * vData, int nWords, int iFrame, int iObj, int Value )Abc_InfoSet2Bits36,1036
static inline void Abc_InfoAdd2Bits( Vec_Int_t * vData, int nWords, int iFrame, int iObj, int Value )Abc_InfoAdd2Bits42,1334
static inline int  Gia_ManGetTwo( Gia_Man_t * p, int iFrame, Gia_Obj_t * pObj )              { return Abc_InfoGet2Bits( p->vTruths, p->nTtWords, iFrame, Gia_ObjId(p, pObj) ); }Gia_ManGetTwo48,1572
static inline void Gia_ManSetTwo( Gia_Man_t * p, int iFrame, Gia_Obj_t * pObj, int Value )   { Abc_InfoSet2Bits( p->vTruths, p->nTtWords, iFrame, Gia_ObjId(p, pObj), Value ); }Gia_ManSetTwo49,1749
static inline void Gia_ManAddTwo( Gia_Man_t * p, int iFrame, Gia_Obj_t * pObj, int Value )   { Abc_InfoAdd2Bits( p->vTruths, p->nTtWords, iFrame, Gia_ObjId(p, pObj), Value ); }Gia_ManAddTwo50,1926
int Gia_ManAnnotateUnrolling( Gia_Man_t * p, Abc_Cex_t * pCex, int fJustMax )Gia_ManAnnotateUnrolling72,2783
Gia_Man_t * Gia_ManCreateUnate( Gia_Man_t * p, Abc_Cex_t * pCex, int iFrame, int nRealPis, int fUseAllObjects )Gia_ManCreateUnate183,6981
Abc_Cex_t * Gia_ManCexMin( Gia_Man_t * p, Abc_Cex_t * pCex, int iFrameStart, int nRealPis, int fJustMax, int fUseAll, int fVerbose )Gia_ManCexMin317,11822

src/sat/bmc/bmcBmc2.c,5261
typedef struct Saig_Bmc_t_ Saig_Bmc_t;Saig_Bmc_t35,953
struct Saig_Bmc_t_Saig_Bmc_t_36,992
    int                   nFramesMax;     // the max number of timeframes to considernFramesMax39,1031
    int                   nNodesMax;      // the max number of nodes to addnNodesMax40,1117
    int                   nConfMaxOne;    // the max number of conflicts at a targetnConfMaxOne41,1193
    int                   nConfMaxAll;    // the max number of conflicts for all targetsnConfMaxAll42,1278
    int                   fVerbose;       // enables verbose outputfVerbose43,1367
    Aig_Man_t *           pAig;           // the user's AIG managerpAig45,1455
    Aig_Man_t *           pFrm;           // Frames managerpFrm46,1523
    Vec_Int_t *           vVisited;       // nodes visited in FramesvVisited47,1583
    int                   nObjs;          // the largest number of an AIG objectnObjs49,1672
    Vec_Ptr_t *           vAig2Frm;       // mapping of AIG nodees into Frames nodesvAig2Frm50,1753
    sat_solver *          pSat;           // SAT solverpSat52,1856
    satoko_t *            pSat2;          // SAT solverpSat253,1912
    int                   nSatVars;       // the number of used SAT variablesnSatVars54,1968
    Vec_Int_t *           vObj2Var;       // mapping of frames objects in CNF variablesvObj2Var55,2046
    int                   nStitchVars;nStitchVars56,2134
    Vec_Ptr_t *           vTargets;       // targets to be solved in this intervalvTargets58,2192
    int                   iFramePrev;     // previous frame  iFramePrev59,2275
    int                   iFrameLast;     // last frame  iFrameLast60,2337
    int                   iOutputLast;    // last outputiOutputLast61,2395
    int                   iFrameFail;     // failed frame iFrameFail62,2452
    int                   iOutputFail;    // failed outputiOutputFail63,2511
static inline Aig_Obj_t * Saig_BmcObjFrame( Saig_Bmc_t * p, Aig_Obj_t * pObj, int i )                       Saig_BmcObjFrame66,2574
static inline void        Saig_BmcObjSetFrame( Saig_Bmc_t * p, Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) Saig_BmcObjSetFrame81,3194
static inline Aig_Obj_t * Saig_BmcObjChild0( Saig_Bmc_t * p, Aig_Obj_t * pObj, int i )                   { assert( !Aig_IsComplement(pObj) ); return Aig_NotCond(Saig_BmcObjFrame(p, Aig_ObjFanin0(pObj), i), Aig_ObjFaninC0(pObj));  }Saig_BmcObjChild097,3831
static inline Aig_Obj_t * Saig_BmcObjChild1( Saig_Bmc_t * p, Aig_Obj_t * pObj, int i )                   { assert( !Aig_IsComplement(pObj) ); return Aig_NotCond(Saig_BmcObjFrame(p, Aig_ObjFanin1(pObj), i), Aig_ObjFaninC1(pObj));  }Saig_BmcObjChild198,4063
static inline int         Saig_BmcSatNum( Saig_Bmc_t * p, Aig_Obj_t * pObj )                             { return Vec_IntGetEntry( p->vObj2Var, pObj->Id );  }Saig_BmcSatNum100,4296
static inline void        Saig_BmcSetSatNum( Saig_Bmc_t * p, Aig_Obj_t * pObj, int Num )                 { Vec_IntSetEntry(p->vObj2Var, pObj->Id, Num);      }Saig_BmcSetSatNum101,4455
#define ABS_ZER ABS_ZER107,4835
#define ABS_ONE ABS_ONE108,4853
#define ABS_UND ABS_UND109,4871
static inline int Abs_ManSimInfoNot( int Value )Abs_ManSimInfoNot111,4890
static inline int Abs_ManSimInfoAnd( int Value0, int Value1 )Abs_ManSimInfoAnd120,5068
static inline int Abs_ManSimInfoGet( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame )Abs_ManSimInfoGet129,5303
static inline void Abs_ManSimInfoSet( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame, int Value )Abs_ManSimInfoSet135,5546
int Abs_ManExtendOneEval_rec( Vec_Ptr_t * vSimInfo, Aig_Man_t * p, Aig_Obj_t * pObj, int iFrame )Abs_ManExtendOneEval_rec154,6184
Vec_Ptr_t * Abs_ManTernarySimulate( Aig_Man_t * p, int nFramesMax, int fVerbose )Abs_ManTernarySimulate202,7782
void Abs_ManFreeAray( Vec_Ptr_t * p )Abs_ManFreeAray261,9978
Saig_Bmc_t * Saig_BmcManStart( Aig_Man_t * pAig, int nFramesMax, int nNodesMax, int nConfMaxOne, int nConfMaxAll, int fVerbose, int fUseSatoko )Saig_BmcManStart282,10396
void Saig_BmcManStop( Saig_Bmc_t * p )Saig_BmcManStop349,12686
Aig_Obj_t * Saig_BmcIntervalConstruct_rec( Saig_Bmc_t * p, Aig_Obj_t * pObj, int i, Vec_Int_t * vVisited )Saig_BmcIntervalConstruct_rec426,15092
void Saig_BmcInterval( Saig_Bmc_t * p )Saig_BmcInterval470,16578
Aig_Obj_t * Saig_BmcIntervalToAig_rec( Saig_Bmc_t * p, Aig_Man_t * pNew, Aig_Obj_t * pObj )Saig_BmcIntervalToAig_rec512,18220
Aig_Man_t * Saig_BmcIntervalToAig( Saig_Bmc_t * p )Saig_BmcIntervalToAig539,19150
void Saig_BmcLoadCnf( Saig_Bmc_t * p, Cnf_Dat_t * pCnf )Saig_BmcLoadCnf572,20136
void Saig_BmcDeriveFailed( Saig_Bmc_t * p, int iTargetFail )Saig_BmcDeriveFailed645,22346
Abc_Cex_t * Saig_BmcGenerateCounterExample( Saig_Bmc_t * p )Saig_BmcGenerateCounterExample672,23013
int Saig_BmcSolveTargets( Saig_Bmc_t * p, int nStart, int * pnOutsSolved )Saig_BmcSolveTargets717,24454
void Saig_BmcAddTargetsAsPos( Saig_Bmc_t * p )Saig_BmcAddTargetsAsPos789,27085
int Saig_BmcPerform( Aig_Man_t * pAig, int nStart, int nFramesMax, int nNodesMax, int nTimeOut, int nConfMaxOne, int nConfMaxAll, int fVerbose, int fVerbOverwrite, int * piFrames, int fSilent, int fUseSatoko )Saig_BmcPerform811,27646

src/sat/bmc/bmcICheck.c,1037
static inline Cnf_Dat_t * Cnf_DeriveGiaRemapped( Gia_Man_t * p )Cnf_DeriveGiaRemapped48,1329
static inline void Cnf_DataLiftGia( Cnf_Dat_t * p, Gia_Man_t * pGia, int nVarsPlus )Cnf_DataLiftGia69,1817
sat_solver * Bmc_DeriveSolver( Gia_Man_t * p, Gia_Man_t * pMiter, Cnf_Dat_t * pCnf, int nFramesMax, int nTimeOut, int fVerbose )Bmc_DeriveSolver91,2412
void Bmc_PerformICheck( Gia_Man_t * p, int nFramesMax, int nTimeOut, int fEmpty, int fVerbose )Bmc_PerformICheck196,6334
void Bmc_PerformFindFlopOrder_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vRegs )Bmc_PerformFindFlopOrder_rec307,10244
void Bmc_PerformFindFlopOrder( Gia_Man_t * p, Vec_Int_t * vRegs )Bmc_PerformFindFlopOrder322,10748
int Bmc_PerformISearchOne( Gia_Man_t * p, int nFramesMax, int nTimeOut, int fReverse, int fBackTopo, int fVerbose, Vec_Int_t * vLits )Bmc_PerformISearchOne370,12263
Vec_Int_t * Bmc_PerformISearch( Gia_Man_t * p, int nFramesMax, int nTimeOut, int fReverse, int fBackTopo, int fDump, int fVerbose )Bmc_PerformISearch489,16842

src/sat/bmc/bmcFx.c,2934
#define TAB_UNUSED TAB_UNUSED48,1383
typedef struct Tab_Obj_t_ Tab_Obj_t; // 16 bytesTab_Obj_t49,1409
struct Tab_Obj_t_Tab_Obj_t_50,1458
    int         Table;Table52,1478
    int         Next;Next53,1501
    unsigned    Cost : 17;Cost54,1523
    unsigned    LitA : 15;LitA55,1550
    unsigned    LitB : 15;LitB56,1577
    unsigned    LitC : 15;LitC57,1604
    unsigned    Func :  2;Func58,1631
typedef struct Tab_Tab_t_ Tab_Tab_t; // 16 bytesTab_Tab_t60,1661
struct Tab_Tab_t_Tab_Tab_t_61,1710
    int         SizeMask;SizeMask63,1730
    int         nBins;nBins64,1756
    Tab_Obj_t * pBins;pBins65,1779
static inline Tab_Tab_t * Tab_TabAlloc( int LogSize )Tab_TabAlloc67,1805
static inline void Tab_TabFree( Tab_Tab_t * p )Tab_TabFree76,2083
static inline Vec_Int_t * Tab_TabFindBest( Tab_Tab_t * p, int nDivs )Tab_TabFindBest81,2180
static inline int Tab_Hash( int LitA, int LitB, int LitC, int Func, int Mask )Tab_Hash105,3178
static inline void Tab_TabRehash( Tab_Tab_t * p )Tab_TabRehash109,3355
static inline Tab_Obj_t * Tab_TabEntry( Tab_Tab_t * p, int i ) { return i ? p->pBins + i : NULL; }Tab_TabEntry130,4184
static inline int         Tab_TabHashAdd( Tab_Tab_t * p, int * pLits, int Func, int Cost )Tab_TabHashAdd131,4283
    DIV_CST = 0,   // 0: constant 1DIV_CST168,5546
    DIV_AND,       // 1: and (ordered fanins)DIV_AND169,5582
    DIV_XOR,       // 2: xor (ordered fanins)DIV_XOR170,5628
    DIV_MUX,       // 3: mux (c, d1, d0)DIV_MUX171,5674
    DIV_NONE       // 4: not usedDIV_NONE172,5715
} Div_Type_t; Div_Type_t173,5749
static inline Div_Type_t Bmc_FxDivOr( int LitA, int LitB, int * pLits, int * pPhase )Bmc_FxDivOr175,5765
static inline Div_Type_t Bmc_FxDivXor( int LitA, int LitB, int * pLits, int * pPhase )Bmc_FxDivXor187,6120
static inline Div_Type_t Bmc_FxDivMux( int LitC, int LitCn, int LitT, int LitE, int * pLits, int * pPhase )Bmc_FxDivMux196,6407
static inline Div_Type_t Div_FindType( int LitA[2], int LitB[2], int * pLits, int * pPhase )Div_FindType219,7098
static inline int Div_AddLit( int Lit, int pLits[2] )Div_AddLit269,9199
int Div_FindDiv( Vec_Int_t * vA, Vec_Int_t * vB, int pLitsA[2], int pLitsB[2] )Div_FindDiv278,9395
void Div_CubePrintOne( Vec_Int_t * vCube, Vec_Str_t * vStr, int nVars )Div_CubePrintOne308,10275
void Div_CubePrint( Vec_Wec_t * p, int nVars )Div_CubePrint316,10581
Vec_Int_t * Div_CubePairs( Vec_Wec_t * p, int nVars, int nDivs )Div_CubePairs325,10825
int Bmc_FxSolve( sat_solver * pSat, int iOut, int iAuxVar, Vec_Int_t * vVars, int fDumpPla, int fVerbose, int * pCounter, Vec_Wec_t * vCubes )Bmc_FxSolve389,12935
int Bmc_FxCompute( Gia_Man_t * p )Bmc_FxCompute593,20829
void Bmc_FxAddClauses( sat_solver * pSat, Vec_Int_t * vDivs, int iCiVarBeg, int iVarStart )Bmc_FxAddClauses645,22744
int Bmc_FxComputeOne( Gia_Man_t * p, int nIterMax, int nDiv2Add )Bmc_FxComputeOne671,24170

src/sat/bmc/bmcEco.c,416
Gia_Man_t * Bmc_EcoMiter( Gia_Man_t * pGold, Gia_Man_t * pOld, Vec_Int_t * vFans )Bmc_EcoMiter48,1352
static inline Cnf_Dat_t * Cnf_DeriveGiaRemapped( Gia_Man_t * p )Cnf_DeriveGiaRemapped117,4050
int Bmc_EcoSolve( sat_solver * pSat, int Root, Vec_Int_t * vVars )Bmc_EcoSolve138,4568
int Bmc_EcoPatch( Gia_Man_t * p, int nIns, int nOuts )Bmc_EcoPatch202,6954
void Bmc_EcoMiterTest()Bmc_EcoMiterTest259,8861

src/sat/bmc/bmcMesh.c,889
#define NCPARS NCPARS31,818
static inline int Bmc_MeshTVar( int Me[102][102], int x, int y ) { return Me[x][y];                                         }Bmc_MeshTVar33,837
static inline int Bmc_MeshGVar( int Me[102][102], int x, int y ) { return Me[x][y] + Me[101][100];                          }Bmc_MeshGVar34,963
static inline int Bmc_MeshCVar( int Me[102][102], int x, int y ) { return Me[x][y] + Me[101][100] + Me[101][101];           }Bmc_MeshCVar35,1089
static inline int Bmc_MeshUVar( int Me[102][102], int x, int y ) { return Me[x][y] + Me[101][100] + Me[101][101] + NCPARS;  }Bmc_MeshUVar36,1215
static inline int Bmc_MeshVarValue( satoko_t * p, int v )Bmc_MeshVarValue53,1796
int Bmc_MeshAddOneHotness( satoko_t * pSat, int iFirst, int iLast )Bmc_MeshAddOneHotness71,2293
void Bmc_MeshTest( Gia_Man_t * p, int X, int Y, int T, int fVerbose )Bmc_MeshTest106,3249

src/sat/bmc/bmcCexCut.c,1227
int Bmc_GiaGenerateJust_rec( Gia_Man_t * p, int iFrame, int iObj, Vec_Bit_t * vValues, Vec_Bit_t * vJustis )Bmc_GiaGenerateJust_rec46,1317
void Bmc_GiaGenerateJustNonRec( Gia_Man_t * p, int iFrame, Vec_Bit_t * vValues, Vec_Bit_t * vJustis )Bmc_GiaGenerateJustNonRec74,2688
void Bmc_GiaGenerateJust( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Bit_t ** pvValues, Vec_Bit_t ** pvJustis )Bmc_GiaGenerateJust106,4212
Gia_Man_t * Bmc_GiaGenerateGiaOne( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Bit_t ** pvInits, int iFrBeg, int iFrEnd )Bmc_GiaGenerateGiaOne192,7525
Gia_Man_t * Bmc_GiaGenerateGiaAllFrames( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Bit_t ** pvInits, int iFrBeg, int iFrEnd )Bmc_GiaGenerateGiaAllFrames237,9172
Gia_Man_t * Bmc_GiaGenerateGiaAllOne( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Bit_t ** pvInits, int iFrBeg, int iFrEnd )Bmc_GiaGenerateGiaAllOne365,14119
Gia_Man_t * Bmc_GiaTargetStates( Gia_Man_t * p, Abc_Cex_t * pCex, int iFrBeg, int iFrEnd, int fCombOnly, int fUseOne, int fAllFrames, int fVerbose )Bmc_GiaTargetStates461,17681
Aig_Man_t * Bmc_AigTargetStates( Aig_Man_t * p, Abc_Cex_t * pCex, int iFrBeg, int iFrEnd, int fCombOnly, int fUseOne, int fAllFrames, int fVerbose )Bmc_AigTargetStates513,19541

src/sat/bmc/bmcUnroll.c,4087
#define UNR_DIFF_NULL UNR_DIFF_NULL29,775
typedef struct Unr_Obj_t_ Unr_Obj_t; // 24 bytes + (RankMax-1) * 4 bytesUnr_Obj_t31,805
struct Unr_Obj_t_Unr_Obj_t_32,878
    unsigned              hFan0;        // address of the faninhFan034,898
    unsigned              hFan1;        // address of the faninhFan135,962
    unsigned              fCompl0 :  1; // complemented bitfCompl036,1026
    unsigned              fCompl1 :  1; // complemented bitfCompl137,1086
    unsigned              uRDiff0 : 15; // rank diff of the faninuRDiff038,1146
    unsigned              uRDiff1 : 15; // rank diff of the faninuRDiff139,1212
    unsigned              fItIsPi :  1; // remember attributesfItIsPi40,1278
    unsigned              fItIsPo :  1; // remember attributesfItIsPo41,1341
    unsigned              RankMax : 15; // max rank diff between node and its fanoutRankMax42,1404
    unsigned              RankCur : 15; // cur rank of the nodeRankCur43,1489
    unsigned              OrigId;       // original object IDOrigId44,1553
    unsigned              Res[1];       // RankMax entriesRes45,1615
struct Unr_Man_t_Unr_Man_t_48,1678
    Gia_Man_t *           pGia;           // the user's AIG managerpGia51,1716
    Gia_Man_t *           pFrames;        // unrolled managerpFrames52,1784
    int                   nObjs;          // the number of objectsnObjs53,1846
    Vec_Int_t *           vOrder;         // ordering of GIA objectsvOrder55,1938
    Vec_Int_t *           vOrderLim;      // beginning of each time framevOrderLim56,2007
    Vec_Int_t *           vTents;         // tents of GIA objectsvTents57,2081
    Vec_Int_t *           vRanks;         // ranks of GIA objectsvRanks58,2147
    int *                 pObjs;          // storage for unroling objectspObjs60,2235
    int *                 pEnd;           // end of storagepEnd61,2309
    Vec_Int_t *           vObjLim;        // handle of the first object in each framevObjLim62,2369
    Vec_Int_t *           vCiMap;         // mapping of GIA CIs into unrolling objectsvCiMap63,2455
    Vec_Int_t *           vCoMap;         // mapping of GIA POs into unrolling objectsvCoMap64,2542
    Vec_Int_t *           vPiLits;        // storage for PI literalsvPiLits65,2629
static inline Unr_Obj_t * Unr_ManObj( Unr_Man_t * p, int h )  { assert( h >= 0 && h < p->pEnd - p->pObjs ); return (Unr_Obj_t *)(p->pObjs + h);  }Unr_ManObj68,2702
static inline int         Unr_ObjSizeInt( int Rank )          { return 0xFFFFFFFE & (sizeof(Unr_Obj_t) / sizeof(int) + Rank);                    }Unr_ObjSizeInt69,2849
static inline int         Unr_ObjSize( Unr_Obj_t * pObj )     { return Unr_ObjSizeInt(pObj->RankMax);                                            }Unr_ObjSize70,2996
static inline int Unr_ManFanin0Value( Unr_Man_t * p, Unr_Obj_t * pObj )Unr_ManFanin0Value72,3144
static inline int Unr_ManFanin1Value( Unr_Man_t * p, Unr_Obj_t * pObj )Unr_ManFanin1Value80,3522
static inline int Unr_ManObjReadValue( Unr_Obj_t * pObj )Unr_ManObjReadValue88,3900
static inline void Unr_ManObjSetValue( Unr_Obj_t * pObj, int Value )Unr_ManObjSetValue93,4068
static inline void Vec_IntWriteMaxEntry( Vec_Int_t * p, int i, int Entry )Vec_IntWriteMaxEntry115,4737
void Unr_ManProfileRanks( Vec_Int_t * vRanks )Unr_ManProfileRanks132,5143
void Unr_ManSetup_rec( Unr_Man_t * p, int iObj, int iTent, Vec_Int_t * vRoots )Unr_ManSetup_rec161,6003
void Unr_ManSetup( Unr_Man_t * p, int fVerbose )Unr_ManSetup186,7010
Unr_Man_t * Unr_ManAlloc( Gia_Man_t * pGia )Unr_ManAlloc321,12219
void Unr_ManFree( Unr_Man_t * p )Unr_ManFree340,12906
Unr_Man_t * Unr_ManUnrollStart( Gia_Man_t * pGia, int fVerbose )Unr_ManUnrollStart368,13587
Gia_Man_t * Unr_ManUnrollFrame( Unr_Man_t * p, int f )Unr_ManUnrollFrame379,13968
Gia_Man_t * Unr_ManUnroll( Gia_Man_t * pGia, int nFrames )Unr_ManUnroll414,15529
Gia_Man_t * Unr_ManUnrollSimple( Gia_Man_t * pGia, int nFrames )Unr_ManUnrollSimple438,16103
void Unr_ManTest( Gia_Man_t * pGia, int nFrames )Unr_ManTest480,17449

src/sat/bmc/bmcBmcS.c,4952
    #define l_Undef l_Undef30,681
    #define l_True l_True31,704
    #define l_False l_False32,727
    #define l_Undef l_Undef34,756
    #define l_True l_True35,779
    #define l_False l_False36,802
    #define bmc_sat_solver bmc_sat_solver37,825
    #define bmc_sat_solver_start(bmc_sat_solver_start38,881
    #define bmc_sat_solver_stop bmc_sat_solver_stop39,944
    #define bmc_sat_solver_addclause bmc_sat_solver_addclause40,1006
    #define bmc_sat_solver_addvar(bmc_sat_solver_addvar41,1071
    #define bmc_sat_solver_solve bmc_sat_solver_solve42,1144
    #define bmc_sat_solver_read_cex_varvalue bmc_sat_solver_read_cex_varvalue43,1216
    #define bmc_sat_solver_setstop bmc_sat_solver_setstop44,1288
#define PAR_THR_MAX PAR_THR_MAX67,1750
typedef struct Bmcs_Man_t_ Bmcs_Man_t;Bmcs_Man_t69,1775
struct Bmcs_Man_t_Bmcs_Man_t_70,1814
    Bmc_AndPar_t *    pPars;               // parameterspPars72,1835
    Gia_Man_t *       pGia;                // user's AIGpGia73,1892
    Gia_Man_t *       pFrames;             // unfolded AIG (pFrames->vCopies point to pClean)pFrames74,1949
    Gia_Man_t *       pClean;              // incremental AIG (pClean->Value point to pFrames)pClean75,2043
    Vec_Ptr_t         vGia2Fr;             // copies of GIA in each timeframevGia2Fr76,2138
    Vec_Int_t         vFr2Sat;             // mapping of objects in pFrames into SAT variablesvFr2Sat77,2216
    Vec_Int_t         vCiMap;              // maps CIs of pFrames into CIs/frames of GIAvCiMap78,2311
    bmc_sat_solver *  pSats[PAR_THR_MAX];  // concurrent SAT solverspSats79,2400
    int               nSatVars;            // number of SAT variables usednSatVars80,2469
    int               nSatVarsOld;         // number of SAT variables usednSatVarsOld81,2544
    int               fStopNow;            // signal when it is time to stopfStopNow82,2619
    abctime           timeUnf;             // runtime of unfoldingtimeUnf83,2696
    abctime           timeCnf;             // runtime of CNF generationtimeCnf84,2763
    abctime           timeSat;             // runtime of the solverstimeSat85,2835
    abctime           timeOth;             // other runtimetimeOth86,2904
static inline int * Bmcs_ManCopies( Bmcs_Man_t * p, int f ) { return (int*)Vec_PtrEntry(&p->vGia2Fr, f); }Bmcs_ManCopies90,3104
void Bmc_SuperBuildTents_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vIns, Vec_Int_t * vCuts, Vec_Int_t * vFlops, Vec_Int_t * vObjs, Vec_Int_t * vRankIns, Vec_Int_t * vRankCuts, int Rank )Bmc_SuperBuildTents_rec107,3688
Gia_Man_t * Bmc_SuperBuildTents( Gia_Man_t * p, Vec_Int_t ** pvMap )Bmc_SuperBuildTents143,4854
void Gia_ManCountTents_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vRoots )Gia_ManCountTents_rec253,8672
int Gia_ManCountTents( Gia_Man_t * p )Gia_ManCountTents270,9267
void Gia_ManCountRanks_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vRoots, Vec_Int_t * vRanks, Vec_Int_t * vCands, int Rank )Gia_ManCountRanks_rec303,10191
int Gia_ManCountRanks( Gia_Man_t * p )Gia_ManCountRanks325,11036
Bmcs_Man_t * Bmcs_ManStart( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Bmcs_ManStart365,12308
void Bmcs_ManStop( Bmcs_Man_t * p )Bmcs_ManStop404,13803
int Bmcs_ManUnfold_rec( Bmcs_Man_t * p, int iObj, int f )Bmcs_ManUnfold_rec431,14451
int Bmcs_ManCollect_rec( Bmcs_Man_t * p, int iObj )Bmcs_ManCollect_rec467,15657
Gia_Man_t * Bmcs_ManUnfold( Bmcs_Man_t * p, int f, int nFramesAdd )Bmcs_ManUnfold491,16638
Cnf_Dat_t * Bmcs_ManAddNewCnf( Bmcs_Man_t * p, int f, int nFramesAdd )Bmcs_ManAddNewCnf537,18874
void Bmcs_ManPrintFrame( Bmcs_Man_t * p, int f, int nClauses, int Solver, abctime clkStart )Bmcs_ManPrintFrame579,20130
void Bmcs_ManPrintTime( Bmcs_Man_t * p )Bmcs_ManPrintTime601,21163
Abc_Cex_t * Bmcs_ManGenerateCex( Bmcs_Man_t * p, int i, int f, int s )Bmcs_ManGenerateCex612,21614
void Bmcs_ManAddCnf( Bmcs_Man_t * p, bmc_sat_solver * pSat, Cnf_Dat_t * pCnf )Bmcs_ManAddCnf628,22355
int Bmcs_ManPerformOne( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Bmcs_ManPerformOne637,22716
int Bmcs_ManPerformMulti( Gia_Man_t * pGia, Bmc_AndPar_t * pPars ) { return Bmcs_ManPerformOne(pGia, pPars); }Bmcs_ManPerformMulti728,26416
typedef struct Par_ThData_t_Par_ThData_t_733,26557
    bmc_sat_solver *  pSat;pSat735,26588
    int         iLit;iLit736,26616
    int         iThread;iThread737,26638
    int         fWorking;fWorking738,26663
    int         status;status739,26689
} Par_ThData_t;Par_ThData_t740,26713
void * Bmcs_ManWorkerThread( void * pArg )Bmcs_ManWorkerThread742,26730
int Bmcs_ManPerform_Solve( Bmcs_Man_t * p, int iLit, pthread_t * WorkerThread, Par_ThData_t * ThData, int nProcs, int * pSolver )Bmcs_ManPerform_Solve767,27361
int Bmcs_ManPerformMulti( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Bmcs_ManPerformMulti812,28574
int Bmcs_ManPerform( Gia_Man_t * pGia, Bmc_AndPar_t * pPars ) Bmcs_ManPerform925,33119

src/sat/bmc/bmcMulti.c,716
Vec_Int_t * Gia_ManProcessOutputs( Vec_Ptr_t * vCexesIn, Vec_Ptr_t * vCexesOut, Vec_Int_t * vOutMap )Gia_ManProcessOutputs50,1534
int Gia_ManCountConst0PosGia( Gia_Man_t * p )Gia_ManCountConst0PosGia87,2683
int Gia_ManCountConst0Pos( Aig_Man_t * p )Gia_ManCountConst0Pos95,2888
void Gia_ManMultiReport( Aig_Man_t * p, char * pStr, int nTotalPo, int nTotalSize, abctime clkStart )Gia_ManMultiReport115,3334
Aig_Man_t * Gia_ManMultiProveSyn( Aig_Man_t * p, int fVerbose, int fVeryVerbose )Gia_ManMultiProveSyn138,4190
Vec_Ptr_t * Gia_ManMultiProveAig( Aig_Man_t * p, Bmc_MulPar_t * pPars )Gia_ManMultiProveAig161,4764
int Gia_ManMultiProve( Gia_Man_t * p, Bmc_MulPar_t * pPars )Gia_ManMultiProve279,9671

src/sat/bmc/bmcChain.c,1051
Abc_Cex_t * Bmc_ChainFailOneOutput( Gia_Man_t * p, int nFrameMax, int nConfMax, int fVerbose, int fVeryVerbose )Bmc_ChainFailOneOutput48,1352
Gia_Man_t * Gia_ManDupWithInit( Gia_Man_t * p )Gia_ManDupWithInit82,2494
Gia_Man_t * Gia_ManVerifyCexAndMove( Gia_Man_t * pGia, Abc_Cex_t * p )Gia_ManVerifyCexAndMove110,3445
Gia_Man_t * Gia_ManDupPosAndPropagateInit( Gia_Man_t * p )Gia_ManDupPosAndPropagateInit159,5169
sat_solver * Gia_ManDeriveSatSolver( Gia_Man_t * p, Vec_Int_t * vSatIds )Gia_ManDeriveSatSolver186,6159
Vec_Int_t * Bmc_ChainFindFailedOutputs( Gia_Man_t * p, Vec_Ptr_t * vCexes )Bmc_ChainFindFailedOutputs207,6922
static inline void Gia_ObjMakePoConst0( Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ObjMakePoConst0261,8684
int Gia_ManCountNonConst0( Gia_Man_t * p )Gia_ManCountNonConst0267,8860
Gia_Man_t * Bmc_ChainCleanup( Gia_Man_t * p, Vec_Int_t * vOutputs )Bmc_ChainCleanup275,9057
int Bmc_ChainTest( Gia_Man_t * p, int nFrameMax, int nConfMax, int fVerbose, int fVeryVerbose, Vec_Ptr_t ** pvCexes )Bmc_ChainTest299,9661

src/sat/bmc/bmcClp.c,2960
int Bmc_ComputeSimDiff( Gia_Man_t * p, Vec_Int_t * vPat, Vec_Int_t * vPat2 )Bmc_ComputeSimDiff48,1400
void Bmc_ComputeSimTest( Gia_Man_t * p )Bmc_ComputeSimTest80,2566
static abctime clkCheck1 = 0;clkCheck1182,5321
static abctime clkCheck2 = 0;clkCheck2183,5351
static abctime clkCheckS = 0;clkCheckS184,5381
static abctime clkCheckU = 0;clkCheckU185,5411
#define Bmc_SopForEachCube(Bmc_SopForEachCube188,5472
int Bmc_CollapseIrredundant( Vec_Str_t * vSop, int nCubes, int nVars )Bmc_CollapseIrredundant202,5974
int Bmc_CollapseIrredundantFull( Vec_Str_t * vSop, int nCubes, int nVars )Bmc_CollapseIrredundantFull275,8771
int Bmc_CollapseExpandRound2( sat_solver * pSat, Vec_Int_t * vLits, Vec_Int_t * vTemp, int nBTLimit, int fOnOffSetLit )Bmc_CollapseExpandRound2356,11828
int Bmc_CollapseExpandRound( sat_solver * pSat, sat_solver * pSatOn, Vec_Int_t * vLits, Vec_Int_t * vNums, Vec_Int_t * vTemp, int nBTLimit, int fCanon, int fOnOffSetLit )Bmc_CollapseExpandRound381,12726
int Bmc_CollapseExpand( sat_solver * pSat, sat_solver * pSatOn, Vec_Int_t * vLits, Vec_Int_t * vNums, Vec_Int_t * vTemp, int nBTLimit, int fCanon, int fOnOffSetLit )Bmc_CollapseExpand460,15631
int Bmc_CollapseExpand2( sat_solver * pSat, sat_solver * pSatOn, Vec_Int_t * vLits, Vec_Int_t * vNums, Vec_Int_t * vTemp, int nBTLimit, int fCanon, int fOnOffSetLit )Bmc_CollapseExpand2507,17343
int Bmc_ComputeCanonical2( sat_solver * pSat, Vec_Int_t * vLits, Vec_Int_t * vTemp, int nBTLimit )Bmc_ComputeCanonical2619,21013
int Bmc_ComputeCanonical( sat_solver * pSat, Vec_Int_t * vLits, Vec_Int_t * vTemp, int nBTLimit )Bmc_ComputeCanonical648,22134
Vec_Str_t * Bmc_CollapseOneInt2( Gia_Man_t * p, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose, int fCompl )Bmc_CollapseOneInt2665,22619
Vec_Str_t * Bmc_CollapseOneOld2( Gia_Man_t * p, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose )Bmc_CollapseOneOld2823,28335
Vec_Str_t * Bmc_CollapseOneOld( Gia_Man_t * p, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose )Bmc_CollapseOneOld864,29553
Vec_Str_t * Bmc_CollapseOne_int3( sat_solver * pSat0, sat_solver * pSat1, sat_solver * pSat2, sat_solver * pSat3, int nVars, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose )Bmc_CollapseOne_int31040,36669
Vec_Str_t * Bmc_CollapseOne3( Gia_Man_t * p, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose )Bmc_CollapseOne31198,43170
Vec_Str_t * Bmc_CollapseOne_int2( sat_solver * pSat1, sat_solver * pSat2, int nVars, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose )Bmc_CollapseOne_int21226,44267
Vec_Str_t * Bmc_CollapseOne_int( sat_solver * pSat, int nVars, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose )Bmc_CollapseOne_int1389,50999
Vec_Str_t * Bmc_CollapseOne( Gia_Man_t * p, int nCubeLim, int nBTLimit, int fCanon, int fReverse, int fVerbose )Bmc_CollapseOne1532,56949

src/sat/bmc/bmcEnum.c,247
Gia_Man_t * Gia_ManDeriveOne( Gia_Man_t * p, Vec_Int_t * vValues )Gia_ManDeriveOne47,1283
Gia_Man_t * Gia_ManDeriveOneTest2( Gia_Man_t * p )Gia_ManDeriveOneTest2143,4500
void Gia_ManDeriveOneTest( Gia_Man_t * p )Gia_ManDeriveOneTest164,5009

src/sat/bmc/bmcBmc3.c,6962
typedef struct Gia_ManBmc_t_ Gia_ManBmc_t;Gia_ManBmc_t36,1020
struct Gia_ManBmc_t_Gia_ManBmc_t_37,1063
    Saig_ParBmc_t *   pPars;       // parameterspPars40,1111
    Aig_Man_t *       pAig;        // user AIGpAig41,1160
    Vec_Ptr_t *       vCexes;      // counter-examplesvCexes42,1207
    Vec_Int_t *       vMapping;    // mappingvMapping44,1287
    Vec_Int_t *       vMapRefs;    // mapping referencesvMapRefs45,1333
    Vec_Int_t *       vId2Num;     // number of each node vId2Num47,1439
    Vec_Ptr_t *       vTerInfo;    // ternary informationvTerInfo48,1498
    Vec_Ptr_t *       vId2Var;     // SAT vars for each objectvId2Var49,1556
    Vec_Wec_t *       vVisited;    // visited nodesvVisited50,1619
    abctime *         pTime4Outs;  // timeout per outputpTime4Outs51,1671
    Vec_Int_t *       vData;       // storage for cutsvData53,1746
    Hsh_IntMan_t *    vHash;       // hash tablevHash54,1801
    Vec_Int_t *       vId2Lit;     // mapping cuts into literalsvId2Lit55,1850
    int               nHashHit;    // hash table hitsnHashHit56,1915
    int               nHashMiss;   // hash table missesnHashMiss57,1969
    int               nBufNum;     // the number of simple nodesnBufNum58,2025
    int               nDupNum;     // the number of simple nodesnDupNum59,2090
    int               nUniProps;   // propagating learned clause valuesnUniProps60,2155
    int               nLitUsed;    // used literalsnLitUsed61,2227
    int               nLitUseless; // useless literalsnLitUseless62,2279
    sat_solver *      pSat;        // SAT solverpSat64,2352
    satoko_t *        pSat2;       // SAT solverpSat265,2401
    bmcg_sat_solver * pSat3;       // SAT solverpSat366,2450
    int               nSatVars;    // SAT variablesnSatVars67,2499
    int               nObjNums;    // SAT objectsnObjNums68,2551
    int               nWordNum;    // unsigned words for ternary simulationnWordNum69,2601
    char * pSopSizes, ** pSops;    // CNF representationpSopSizes70,2677
    char * pSopSizes, ** pSops;    // CNF representationpSops70,2677
void Gia_ManReportProgress( FILE * pFile, int prop_no, int depth )Gia_ManReportProgress75,2834
#define SAIG_TER_NON SAIG_TER_NON87,3385
#define SAIG_TER_ZER SAIG_TER_ZER88,3408
#define SAIG_TER_ONE SAIG_TER_ONE89,3431
#define SAIG_TER_UND SAIG_TER_UND90,3454
static inline int Saig_ManBmcSimInfoNot( int Value )Saig_ManBmcSimInfoNot92,3478
static inline int Saig_ManBmcSimInfoAnd( int Value0, int Value1 )Saig_ManBmcSimInfoAnd101,3685
static inline int Saig_ManBmcSimInfoGet( unsigned * pInfo, Aig_Obj_t * pObj )Saig_ManBmcSimInfoGet110,3959
static inline void Saig_ManBmcSimInfoSet( unsigned * pInfo, Aig_Obj_t * pObj, int Value )Saig_ManBmcSimInfoSet115,4121
static inline int Saig_ManBmcSimInfoClear( unsigned * pInfo, Aig_Obj_t * pObj )Saig_ManBmcSimInfoClear122,4406
int Saig_ManBmcTerSimCount01( Aig_Man_t * p, unsigned * pInfo )Saig_ManBmcTerSimCount01140,4925
unsigned * Saig_ManBmcTerSimOne( Aig_Man_t * p, unsigned * pPrev )Saig_ManBmcTerSimOne163,5560
Vec_Ptr_t * Saig_ManBmcTerSim( Aig_Man_t * p )Saig_ManBmcTerSim213,7246
void Saig_ManBmcTerSimTest( Aig_Man_t * p )Saig_ManBmcTerSimTest242,8012
int Saig_ManBmcCountNonternary_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vInfos, unsigned * pInfo, int f, int * pCounter )Saig_ManBmcCountNonternary_rec267,8619
void Saig_ManBmcCountNonternary( Aig_Man_t * p, Vec_Ptr_t * vInfos, int iFrame )Saig_ManBmcCountNonternary285,9576
int Saig_ManBmcTerSimCount01Po( Aig_Man_t * p, unsigned * pInfo )Saig_ManBmcTerSimCount01Po309,10395
Vec_Ptr_t * Saig_ManBmcTerSimPo( Aig_Man_t * p )Saig_ManBmcTerSimPo317,10640
void Saig_ManBmcTerSimTestPo( Aig_Man_t * p )Saig_ManBmcTerSimTestPo337,11245
void Saig_ManBmcDfs_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vNodes )Saig_ManBmcDfs_rec358,11668
Vec_Ptr_t * Saig_ManBmcDfsNodes( Aig_Man_t * p, Vec_Ptr_t * vRoots )Saig_ManBmcDfsNodes383,12371
Vec_Vec_t * Saig_ManBmcSections( Aig_Man_t * p )Saig_ManBmcSections405,12907
void Saig_ManBmcSectionsTest( Aig_Man_t * p )Saig_ManBmcSectionsTest453,14250
void Saig_ManBmcSupergate_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vSuper )Saig_ManBmcSupergate_rec478,14808
Vec_Ptr_t * Saig_ManBmcSupergate( Aig_Man_t * p, int iPo )Saig_ManBmcSupergate502,15539
int Saig_ManBmcCountRefed( Aig_Man_t * p, Vec_Ptr_t * vSuper )Saig_ManBmcCountRefed536,16423
void Saig_ManBmcSupergateTest( Aig_Man_t * p )Saig_ManBmcSupergateTest559,16946
void Saig_ManBmcWriteBlif( Aig_Man_t * p, Vec_Int_t * vMapping, char * pFileName )Saig_ManBmcWriteBlif585,17573
void Saig_ManBmcMappingTest( Aig_Man_t * p )Saig_ManBmcMappingTest670,20089
Vec_Int_t * Saig_ManBmcComputeMappingRefs( Aig_Man_t * p, Vec_Int_t * vMap )Saig_ManBmcComputeMappingRefs690,20527
Gia_ManBmc_t * Saig_Bmc3ManStart( Aig_Man_t * pAig, int nTimeOutOne, int nConfLimit, int fUseSatoko, int fUseGlucose )Saig_Bmc3ManStart721,21411
void Saig_Bmc3ManStop( Gia_ManBmc_t * p )Saig_Bmc3ManStop799,24082
static inline int * Saig_ManBmcMapping( Gia_ManBmc_t * p, Aig_Obj_t * pObj )Saig_ManBmcMapping855,26129
static inline int Saig_ManBmcLiteral( Gia_ManBmc_t * p, Aig_Obj_t * pObj, int iFrame )Saig_ManBmcLiteral873,26610
static inline int Saig_ManBmcSetLiteral( Gia_ManBmc_t * p, Aig_Obj_t * pObj, int iFrame, int iLit )Saig_ManBmcSetLiteral896,27265
static inline int Saig_ManBmcCof0( int t, int v )Saig_ManBmcCof0925,28022
static inline int Saig_ManBmcCof1( int t, int v )Saig_ManBmcCof1930,28213
static inline int Saig_ManBmcCofEqual( int t, int v )Saig_ManBmcCofEqual935,28402
static inline int Saig_ManBmcReduceTruth( int uTruth, int Lits[] )Saig_ManBmcReduceTruth960,29047
static inline void Saig_ManBmcAddClauses( Gia_ManBmc_t * p, int uTruth, int Lits[], int iLitOut )Saig_ManBmcAddClauses993,29879
int Saig_ManBmcCreateCnf_rec( Gia_ManBmc_t * p, Aig_Obj_t * pObj, int iFrame )Saig_ManBmcCreateCnf_rec1052,31782
void Saig_ManBmcCreateCnf_iter( Gia_ManBmc_t * p, Aig_Obj_t * pObj, int iFrame, Vec_Int_t * vVisit )Saig_ManBmcCreateCnf_iter1139,34666
int Saig_ManBmcRunTerSim_rec( Gia_ManBmc_t * p, Aig_Obj_t * pObj, int iFrame )Saig_ManBmcRunTerSim_rec1179,35843
int Saig_ManBmcCreateCnf( Gia_ManBmc_t * p, Aig_Obj_t * pObj, int iFrame )Saig_ManBmcCreateCnf1254,38473
int Aig_NodeCompareRefsIncrease( Aig_Obj_t ** pp1, Aig_Obj_t ** pp2 )Aig_NodeCompareRefsIncrease1308,40285
void Saig_ParBmcSetDefaultParams( Saig_ParBmc_t * p )Saig_ParBmcSetDefaultParams1334,40904
abctime Saig_ManBmcTimeToStop( Saig_ParBmc_t * pPars, abctime nTimeToStopNG )Saig_ManBmcTimeToStop1369,42543
Abc_Cex_t * Saig_ManGenerateCex( Gia_ManBmc_t * p, int f, int i )Saig_ManGenerateCex1393,43283
int Saig_ManCallSolver( Gia_ManBmc_t * p, int Lit )Saig_ManCallSolver1433,44618
int Saig_ManBmcScalable( Aig_Man_t * pAig, Saig_ParBmc_t * pPars )Saig_ManBmcScalable1461,45463

src/sat/bmc/bmcBmci.c,931
static inline Cnf_Dat_t * Cnf_DeriveGiaRemapped( Gia_Man_t * p )Cnf_DeriveGiaRemapped48,1298
static inline void Cnf_DataLiftGia( Cnf_Dat_t * p, Gia_Man_t * pGia, int nVarsPlus )Cnf_DataLiftGia69,1786
void Bmc_BmciUnfold( Gia_Man_t * pNew, Gia_Man_t * p, Vec_Int_t * vFFLits, int fPiReuse )Bmc_BmciUnfold91,2381
int Bmc_BmciPart_rec( Gia_Man_t * pNew, Vec_Int_t * vSatMap, int iIdNew, Gia_Man_t * pPart, Vec_Int_t * vPartMap, Vec_Int_t * vCopies )Bmc_BmciPart_rec118,3315
Gia_Man_t * Bmc_BmciPart( Gia_Man_t * pNew, Vec_Int_t * vSatMap, Vec_Int_t * vMiters, Vec_Int_t * vPartMap, Vec_Int_t * vCopies )Bmc_BmciPart141,4408
int Bmc_BmciPerform( Gia_Man_t * p, Vec_Int_t * vInit0, Vec_Int_t * vInit1, int nFrames, int nWords, int nTimeOut, int fVerbose )Bmc_BmciPerform176,5552
int Gia_ManBmciTest( Gia_Man_t * p, Vec_Int_t * vInit, int nFrames, int nWords, int nTimeOut, int fSim, int fVerbose )Gia_ManBmciTest330,11296

src/sat/bmc/bmcExpand.c,368
#define Bmc_SopForEachCube(Bmc_SopForEachCube34,911
int Abc_ObjExpandCubesTry( Vec_Str_t * vSop, sat_solver * pSat, Vec_Int_t * vVars )Abc_ObjExpandCubesTry51,1518
int Abc_ObjExpandCubes( Vec_Str_t * vSop, Gia_Man_t * p, int nVars )Abc_ObjExpandCubes88,2859
void Abc_NtkExpandCubes( Abc_Ntk_t * pNtk, Gia_Man_t * pGia, int fVerbose )Abc_NtkExpandCubes135,4414

src/sat/bmc/bmcCexDepth.c,633
Gia_Man_t * Bmc_CexTargetEnlarge( Gia_Man_t * p, int nFrames )Bmc_CexTargetEnlarge49,1633
Gia_Man_t * Bmc_CexTarget( Gia_Man_t * p, int nFrames )Bmc_CexTarget94,3150
Gia_Man_t * Bmc_CexBuildNetwork2( Gia_Man_t * p, Abc_Cex_t * pCex, int fStart )Bmc_CexBuildNetwork2128,4154
Gia_Man_t * Bmc_CexBuildNetwork2_( Gia_Man_t * p, Abc_Cex_t * pCex, int fStart )Bmc_CexBuildNetwork2_220,7655
Gia_Man_t * Bmc_CexBuildNetwork2Test( Gia_Man_t * p, Abc_Cex_t * pCex, int nFramesMax )Bmc_CexBuildNetwork2Test294,10324
Gia_Man_t * Bmc_CexDepthTest( Gia_Man_t * p, Abc_Cex_t * pCex, int nFrames, int fVerbose )Bmc_CexDepthTest335,11747

src/sat/bmc/bmcCexCare.c,1373
Abc_Cex_t * Bmc_CexCareExtendToObjects( Gia_Man_t * p, Abc_Cex_t * pCex, Abc_Cex_t * pCexCare )Bmc_CexCareExtendToObjects46,1350
void Bmc_CexCarePropagateFwdOne( Gia_Man_t * p, Abc_Cex_t * pCex, int f, Vec_Int_t * vPriosIn )Bmc_CexCarePropagateFwdOne100,3211
void Bmc_CexCarePropagateFwd( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Int_t * vPriosIn, Vec_Int_t * vPriosFf )Bmc_CexCarePropagateFwd128,4377
void Bmc_CexCarePropagateBwdOne( Gia_Man_t * p, Abc_Cex_t * pCex, int f, Abc_Cex_t * pCexMin )Bmc_CexCarePropagateBwdOne155,5233
Abc_Cex_t * Bmc_CexCarePropagateBwd( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Int_t * vPriosIn, Vec_Int_t * vPriosFf )Bmc_CexCarePropagateBwd206,7003
Abc_Cex_t * Bmc_CexCareTotal( Abc_Cex_t ** pCexes, int nCexes )Bmc_CexCareTotal240,8155
Abc_Cex_t * Bmc_CexCareMinimizeAig( Gia_Man_t * p, int nRealPis, Abc_Cex_t * pCex, int nTryCexes, int fCheck, int fVerbose )Bmc_CexCareMinimizeAig254,8670
Abc_Cex_t * Bmc_CexCareMinimize( Aig_Man_t * p, int nRealPis, Abc_Cex_t * pCex, int nTryCexes, int fCheck, int fVerbose )Bmc_CexCareMinimize426,16754
Abc_Cex_t * Bmc_CexCareSatBasedMinimize( Aig_Man_t * p, int nRealPis, Abc_Cex_t * pCex, int fHighEffort, int fCheck, int fVerbose )Bmc_CexCareSatBasedMinimize433,17078
void Bmc_CexCareVerify( Aig_Man_t * p, Abc_Cex_t * pCex, Abc_Cex_t * pCexMin, int fVerbose )Bmc_CexCareVerify458,17829

src/sat/bmc/bmcBmc.c,580
Aig_Man_t * Saig_ManFramesBmc( Aig_Man_t * pAig, int nFrames )Saig_ManFramesBmc49,1487
int Saig_ManFramesCount_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Saig_ManFramesCount_rec97,3159
Aig_Man_t * Saig_ManFramesBmcLimit( Aig_Man_t * pAig, int nFrames, int nSizeMax )Saig_ManFramesBmcLimit122,3985
int * Sat2_SolverGetModel( satoko_t * p, int * pVars, int nVars )Sat2_SolverGetModel186,6012
int Saig_ManBmcSimple( Aig_Man_t * pAig, int nFrames, int nSizeMax, int nConfLimit, int fRewrite, int fVerbose, int * piFrame, int nCofFanLit, int fUseSatoko )Saig_ManBmcSimple207,6535

src/sat/bmc/bmcCexMin1.c,1827
void Saig_ManCexMinGetCos( Aig_Man_t * pAig, Abc_Cex_t * pCex, Vec_Int_t * vLeaves, Vec_Int_t * vRoots )Saig_ManCexMinGetCos46,1296
void Saig_ManCexMinCollectFrameTerms_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vFrameCisOne )Saig_ManCexMinCollectFrameTerms_rec73,2051
Vec_Vec_t * Saig_ManCexMinCollectFrameTerms( Aig_Man_t * pAig, Abc_Cex_t * pCex )Saig_ManCexMinCollectFrameTerms100,2958
void Saig_ManCexMinDerivePhasePriority_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj )Saig_ManCexMinDerivePhasePriority_rec136,4027
void Saig_ManCexMinVerifyPhase( Aig_Man_t * pAig, Abc_Cex_t * pCex, int f )Saig_ManCexMinVerifyPhase180,5757
void Saig_ManCexMinDerivePhasePriority( Aig_Man_t * pAig, Abc_Cex_t * pCex, Vec_Vec_t * vFrameCis, Vec_Vec_t * vFramePPs, int f, Vec_Int_t * vRoots )Saig_ManCexMinDerivePhasePriority215,6854
Vec_Vec_t * Saig_ManCexMinCollectPhasePriority_( Aig_Man_t * pAig, Abc_Cex_t * pCex, Vec_Vec_t * vFrameCis )Saig_ManCexMinCollectPhasePriority_255,8191
Vec_Vec_t * Saig_ManCexMinCollectPhasePriority( Aig_Man_t * pAig, Abc_Cex_t * pCex, Vec_Vec_t * vFrameCis )Saig_ManCexMinCollectPhasePriority309,10221
void Saig_ManCexMinCollectReason_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Int_t * vReason, int fPiReason )Saig_ManCexMinCollectReason_rec364,12249
Vec_Vec_t * Saig_ManCexMinCollectReason( Aig_Man_t * pAig, Abc_Cex_t * pCex, Vec_Vec_t * vFrameCis, Vec_Vec_t * vFramePPs, int fPiReason )Saig_ManCexMinCollectReason426,14706
Vec_Vec_t * Saig_ManCexMinComputeReason( Aig_Man_t * pAig, Abc_Cex_t * pCex, int fPiReason )Saig_ManCexMinComputeReason464,16058
Aig_Man_t * Saig_ManCexMinDupWithCubes( Aig_Man_t * pAig, Vec_Vec_t * vReg2Value )Saig_ManCexMinDupWithCubes494,17073
Abc_Cex_t * Saig_ManCexMinPerform( Aig_Man_t * pAig, Abc_Cex_t * pCex )Saig_ManCexMinPerform547,18876

src/sat/bmc/bmcMaxi.c,503
static inline Cnf_Dat_t * Cnf_DeriveGiaRemapped( Gia_Man_t * p )Cnf_DeriveGiaRemapped48,1298
Gia_Man_t * Gia_ManMaxiUnfold( Gia_Man_t * p, int nFrames, int fUseVars, Vec_Int_t * vInit )Gia_ManMaxiUnfold69,1786
Vec_Int_t * Gia_ManMaxiPerform( Gia_Man_t * p, Vec_Int_t * vInit, int nFrames, int nTimeOut, int fVerbose )Gia_ManMaxiPerform136,4167
Vec_Int_t * Gia_ManMaxiTest( Gia_Man_t * p, Vec_Int_t * vInit0, int nFrames, int nWords, int nTimeOut, int fSim, int fVerbose )Gia_ManMaxiTest266,9094

src/sat/bmc/bmcCexTools.c,3036
static inline word Bmc_CexBitMask( int iBit )                                    { assert( iBit < 64 ); return ~(((word)1) << iBit); }Bmc_CexBitMask30,806
static inline void Bmc_CexCopySim( Vec_Wrd_t * vSims, int iObjTo, int iObjFrom ) { Vec_WrdWriteEntry( vSims, iObjTo, iObjFrom );     }Bmc_CexCopySim31,941
static inline void Bmc_CexAndSim( Vec_Wrd_t * vSims, int iObjTo, int i, int j )  { Vec_WrdWriteEntry( vSims, iObjTo, Vec_WrdEntry(vSims, i) & Vec_WrdEntry(vSims, j) ); }Bmc_CexAndSim32,1076
static inline void Bmc_CexOrSim( Vec_Wrd_t * vSims, int iObjTo, int i, int j )   { Vec_WrdWriteEntry( vSims, iObjTo, Vec_WrdEntry(vSims, i) | Vec_WrdEntry(vSims, j) ); }Bmc_CexOrSim33,1246
static inline int  Bmc_CexSim( Vec_Wrd_t * vSims, int iObj, int i )              { return (Vec_WrdEntry(vSims, iObj) >> i) & 1;      }Bmc_CexSim34,1416
int Bmc_CexBitCount( Abc_Cex_t * p, int nInputs )Bmc_CexBitCount51,2006
void Bmc_CexDumpStats( Gia_Man_t * p, Abc_Cex_t * pCex, Abc_Cex_t * pCexCare, Abc_Cex_t * pCexEss, Abc_Cex_t * pCexMin, abctime clk )Bmc_CexDumpStats78,2657
void Bmc_CexDumpAogStats( Gia_Man_t * p, abctime clk )Bmc_CexDumpAogStats115,4009
Gia_Man_t * Bmc_CexPerformUnrolling( Gia_Man_t * p, Abc_Cex_t * pCex )Bmc_CexPerformUnrolling138,4705
void Bmc_CexPerformUnrollingTest( Gia_Man_t * p, Abc_Cex_t * pCex )Bmc_CexPerformUnrollingTest170,5860
Gia_Man_t * Bmc_CexBuildNetwork( Gia_Man_t * p, Abc_Cex_t * pCex )Bmc_CexBuildNetwork195,6585
void Bmc_CexBuildNetworkTest( Gia_Man_t * p, Abc_Cex_t * pCex )Bmc_CexBuildNetworkTest282,9742
void Bmc_CexPrint( Abc_Cex_t * pCex, int nRealPis, int fVerbose )Bmc_CexPrint307,10456
int Bmc_CexVerify( Gia_Man_t * p, Abc_Cex_t * pCex, Abc_Cex_t * pCexCare )Bmc_CexVerify346,11525
Abc_Cex_t * Bmc_CexInnerStates( Gia_Man_t * p, Abc_Cex_t * pCex, Abc_Cex_t ** ppCexImpl, int fVerbose )Bmc_CexInnerStates388,12845
void Bmc_CexCareBits_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Bmc_CexCareBits_rec491,16235
void Bmc_CexCareBits2_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Bmc_CexCareBits2_rec519,17084
Abc_Cex_t * Bmc_CexCareBits( Gia_Man_t * p, Abc_Cex_t * pCexState, Abc_Cex_t * pCexImpl, Abc_Cex_t * pCexEss, int fFindAll, int fVerbose )Bmc_CexCareBits550,17980
Abc_Cex_t * Bmc_CexEssentialBitOne( Gia_Man_t * p, Abc_Cex_t * pCexState, int iBit, Abc_Cex_t * pCexPrev, int * pfEqual )Bmc_CexEssentialBitOne644,21469
void Bmc_CexEssentialBitTest( Gia_Man_t * p, Abc_Cex_t * pCexState )Bmc_CexEssentialBitTest724,24391
Abc_Cex_t * Bmc_CexEssentialBits( Gia_Man_t * p, Abc_Cex_t * pCexState, Abc_Cex_t * pCexCare, int fVerbose )Bmc_CexEssentialBits755,25163
void Bmc_CexTest( Gia_Man_t * p, Abc_Cex_t * pCex, int fVerbose )Bmc_CexTest816,27107
void Gia_ManCountCareBits( Gia_Man_t * p, Vec_Wec_t * vPats )Gia_ManCountCareBits859,28492
unsigned char * Mnist_ReadImages1_()Mnist_ReadImages1_922,30609
Vec_Wec_t * Mnist_ReadImages_( int nPats )Mnist_ReadImages_932,30931
void Gia_ManCountCareBitsTest( Gia_Man_t * p )Gia_ManCountCareBitsTest944,31308

src/sat/bmc/bmcMaj.c,6784
#define MAJ_NOBJS MAJ_NOBJS33,895
typedef struct Maj_Man_t_ Maj_Man_t;Maj_Man_t35,954
struct Maj_Man_t_ Maj_Man_t_36,991
    int               nVars;     // inputsnVars38,1012
    int               nNodes;    // internal nodesnNodes39,1055
    int               nObjs;     // total objects (2 consts, nVars inputs, nNodes internal nodes)nObjs40,1106
    int               nWords;    // the truth table size in 64-bit wordsnWords41,1204
    int               iVar;      // the next available SAT variableiVar42,1277
    int               fUseConst; // use constant faninsfUseConst43,1345
    int               fUseLine;  // use cascade topologyfUseLine44,1401
    Vec_Wrd_t *       vInfo;     // Const0 + Const1 + nVars + nNodes + Maj(nVars)vInfo45,1458
    int               VarMarks[MAJ_NOBJS][3][MAJ_NOBJS]; // variable marksVarMarks46,1540
    int               VarVals[MAJ_NOBJS+2]; // values of the first 2 + nVars variablesVarVals47,1615
    Vec_Wec_t *       vOutLits;  // output varsvOutLits48,1702
    bmcg_sat_solver * pSat;      // SAT solverpSat49,1750
static inline word *  Maj_ManTruth( Maj_Man_t * p, int v ) { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Maj_ManTruth52,1801
int Maj_ManValue( int iMint, int nVars )Maj_ManValue69,2368
Vec_Wrd_t * Maj_ManTruthTables( Maj_Man_t * p )Maj_ManTruthTables76,2539
int Maj_ManMarkup( Maj_Man_t * p )Maj_ManMarkup89,3089
Maj_Man_t * Maj_ManAlloc( int nVars, int nNodes, int fUseConst, int fUseLine )Maj_ManAlloc136,4447
void Maj_ManFree( Maj_Man_t * p )Maj_ManFree153,5040
static inline int Maj_ManFindFanin( Maj_Man_t * p, int i, int k )Maj_ManFindFanin173,5431
static inline int Maj_ManEval( Maj_Man_t * p )Maj_ManEval185,5781
void Maj_ManPrintSolution( Maj_Man_t * p )Maj_ManPrintSolution233,7210
int Maj_ManAddCnfStart( Maj_Man_t * p )Maj_ManAddCnfStart267,8118
int Maj_ManAddCnf( Maj_Man_t * p, int iMint )Maj_ManAddCnf314,9841
int Maj_ManExactSynthesis( int nVars, int nNodes, int fUseConst, int fUseLine, int fVerbose )Maj_ManExactSynthesis366,11944
typedef struct Exa_Man_t_ Exa_Man_t;Exa_Man_t410,13301
struct Exa_Man_t_ Exa_Man_t_411,13338
    Bmc_EsPar_t *     pPars;     // parameterspPars413,13359
    int               nVars;     // inputsnVars414,13406
    int               nNodes;    // internal nodesnNodes415,13449
    int               nObjs;     // total objects (nVars inputs + nNodes internal nodes)nObjs416,13500
    int               nWords;    // the truth table size in 64-bit wordsnWords417,13589
    int               iVar;      // the next available SAT variableiVar418,13662
    word *            pTruth;    // truth tablepTruth419,13730
    Vec_Wrd_t *       vInfo;     // nVars + nNodes + 1vInfo420,13778
    int               VarMarks[MAJ_NOBJS][2][MAJ_NOBJS]; // variable marksVarMarks421,13833
    int               VarVals[MAJ_NOBJS]; // values of the first nVars variablesVarVals422,13908
    Vec_Wec_t *       vOutLits;  // output varsvOutLits423,13989
    bmcg_sat_solver * pSat;      // SAT solverpSat424,14037
static inline word *  Exa_ManTruth( Exa_Man_t * p, int v ) { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Exa_ManTruth427,14088
Vec_Wrd_t * Exa_ManTruthTables( Exa_Man_t * p )Exa_ManTruthTables441,14436
int Exa_ManMarkup( Exa_Man_t * p )Exa_ManMarkup449,14752
Exa_Man_t * Exa_ManAlloc( Bmc_EsPar_t * pPars, word * pTruth )Exa_ManAlloc489,15954
void Exa_ManFree( Exa_Man_t * p )Exa_ManFree507,16666
static inline int Exa_ManFindFanin( Exa_Man_t * p, int i, int k )Exa_ManFindFanin527,17057
static inline int Exa_ManEval( Exa_Man_t * p )Exa_ManEval539,17407
void Exa_ManDumpBlif( Exa_Man_t * p, int fCompl )Exa_ManDumpBlif577,18688
void Exa_ManPrintSolution( Exa_Man_t * p, int fCompl )Exa_ManPrintSolution630,20740
int Exa_ManAddCnfStart( Exa_Man_t * p, int fOnlyAnd )Exa_ManAddCnfStart669,22012
int Exa_ManAddCnf( Exa_Man_t * p, int iMint )Exa_ManAddCnf746,24918
void Exa_ManExactSynthesis( Bmc_EsPar_t * pPars )Exa_ManExactSynthesis801,27135
typedef struct Exa3_Man_t_ Exa3_Man_t;Exa3_Man_t852,28841
struct Exa3_Man_t_ Exa3_Man_t_853,28880
    Bmc_EsPar_t *     pPars;     // parameterspPars855,28902
    int               nVars;     // inputsnVars856,28949
    int               nNodes;    // internal nodesnNodes857,28992
    int               nLutSize;  // lut sizenLutSize858,29043
    int               LutMask;   // lut maskLutMask859,29088
    int               nObjs;     // total objects (nVars inputs + nNodes internal nodes)nObjs860,29133
    int               nWords;    // the truth table size in 64-bit wordsnWords861,29222
    int               iVar;      // the next available SAT variableiVar862,29295
    word *            pTruth;    // truth tablepTruth863,29363
    Vec_Wrd_t *       vInfo;     // nVars + nNodes + 1vInfo864,29411
    Vec_Bit_t *       vUsed2;    // bit masksvUsed2865,29466
    Vec_Bit_t *       vUsed3;    // bit masksvUsed3866,29512
    int               VarMarks[MAJ_NOBJS][6][MAJ_NOBJS]; // variable marksVarMarks867,29558
    int               VarVals[MAJ_NOBJS]; // values of the first nVars variablesVarVals868,29633
    Vec_Wec_t *       vOutLits;  // output varsvOutLits869,29714
    bmcg_sat_solver * pSat;      // SAT solverpSat870,29762
    int               nUsed[2];nUsed871,29809
static inline word *  Exa3_ManTruth( Exa3_Man_t * p, int v ) { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Exa3_ManTruth874,29845
static inline int     Exa3_ManIsUsed2( Exa3_Man_t * p, int m, int n, int i, int j )Exa3_ManIsUsed2876,29960
static inline int     Exa3_ManIsUsed3( Exa3_Man_t * p, int m, int n, int i, int j, int k )Exa3_ManIsUsed3888,30334
static Vec_Wrd_t * Exa3_ManTruthTables( Exa3_Man_t * p )Exa3_ManTruthTables912,30985
static int Exa3_ManMarkup( Exa3_Man_t * p )Exa3_ManMarkup920,31312
static Exa3_Man_t * Exa3_ManAlloc( Bmc_EsPar_t * pPars, word * pTruth )Exa3_ManAlloc961,32630
static void Exa3_ManFree( Exa3_Man_t * p )Exa3_ManFree985,33728
static inline int Exa3_ManFindFanin( Exa3_Man_t * p, int i, int k )Exa3_ManFindFanin1007,34192
static inline int Exa3_ManEval( Exa3_Man_t * p )Exa3_ManEval1019,34544
static void Exa3_ManPrintSolution( Exa3_Man_t * p, int fCompl )Exa3_ManPrintSolution1060,36125
static int Exa3_ManAddCnfStart( Exa3_Man_t * p, int fOnlyAnd )Exa3_ManAddCnfStart1105,37430
static int Exa3_ManAddCnf( Exa3_Man_t * p, int iMint )Exa3_ManAddCnf1187,40526
static int Exa3_ManAddCnf2( Exa3_Man_t * p, int iMint )Exa3_ManAddCnf21247,43173
void Exa3_ManPrint( Exa3_Man_t * p, int i, int iMint, abctime clk )Exa3_ManPrint1300,45551
void Exa3_ManExactSynthesis( Bmc_EsPar_t * pPars )Exa3_ManExactSynthesis1309,45948

src/sat/bmc/bmcMaj3.c,7211
#define MAJ3_OBJS MAJ3_OBJS34,908
typedef struct Maj3_Man_t_ Maj3_Man_t;Maj3_Man_t36,948
struct Maj3_Man_t_ Maj3_Man_t_37,987
    int               nVars;     // inputsnVars39,1009
    int               nNodes;    // internal nodesnNodes40,1052
    int               nObjs;     // total objects (nVars inputs, nNodes internal nodes)nObjs41,1103
    int               nWords;    // the truth table size in 64-bit wordsnWords42,1191
    int               iVar;      // the next available SAT variableiVar43,1264
    Vec_Wrd_t *       vInfo;     // nVars + nNodes + 1vInfo44,1332
    Vec_Int_t *       vLevels;   // distriction of nodes by levelsvLevels45,1387
    int               VarMarks[MAJ3_OBJS][MAJ3_OBJS]; // variable marksVarMarks46,1454
    int               ObjVals[MAJ3_OBJS];             // object valuesObjVals47,1526
    int               pLits[2][MAJ3_OBJS]; // neg, pos literalspLits48,1597
    int               nLits[3];  // neg, pos, fixed literalnLits49,1661
    bmcg_sat_solver * pSat;      // SAT solverpSat50,1721
static inline word *  Maj3_ManTruth( Maj3_Man_t * p, int v ) { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Maj3_ManTruth53,1772
static inline int Maj3_ManValue( int iMint, int nVars )Maj3_ManValue70,2341
Vec_Wrd_t * Maj3_ManTruthTables( Maj3_Man_t * p )Maj3_ManTruthTables77,2527
void Maj3_ManFirstAndLevel( Vec_Int_t * vLevels, int Firsts[MAJ3_OBJS], int Levels[MAJ3_OBJS], int nVars, int nObjs )Maj3_ManFirstAndLevel89,3032
int Maj3_ManMarkup( Maj3_Man_t * p )Maj3_ManMarkup105,3521
void Maj3_ManVarMapPrint( Maj3_Man_t * p )Maj3_ManVarMapPrint132,4665
static inline int Maj3_ManFindFanin( Maj3_Man_t * p, int i, int * pFanins )Maj3_ManFindFanin170,5885
static inline void Maj3_ManPrintSolution( Maj3_Man_t * p )Maj3_ManPrintSolution194,6647
static inline int Maj3_ManEval( Maj3_Man_t * p )Maj3_ManEval215,7342
void Maj3_PrintClause( int * pLits, int nLits )Maj3_PrintClause266,8870
int Maj3_ManAddCnfStart( Maj3_Man_t * p )Maj3_ManAddCnfStart273,9075
int Maj3_ManAddCnf( Maj3_Man_t * p, int iMint )Maj3_ManAddCnf323,10783
int Maj3_ManAddConstraintsLazy( Maj3_Man_t * p )Maj3_ManAddConstraintsLazy376,12854
Maj3_Man_t * Maj3_ManAlloc( int nVars, int nNodes, Vec_Int_t * vLevels )Maj3_ManAlloc417,14048
void Maj3_ManFree( Maj3_Man_t * p )Maj3_ManFree432,14564
int Maj3_ManExactSynthesis( int nVars, int nNodes, int fVerbose, Vec_Int_t * vLevels )Maj3_ManExactSynthesis450,14924
int Maj3_ManTest()Maj3_ManTest510,16948
typedef struct Zyx_Man_t_ Zyx_Man_t;Zyx_Man_t551,17806
struct Zyx_Man_t_ Zyx_Man_t_552,17843
    Bmc_EsPar_t *     pPars;      // parameterspPars554,17864
    word *            pTruth;     // truth tablepTruth555,17912
    int               nObjs;      // total objects (nVars inputs, nNodes internal nodes)nObjs556,17961
    int               nWords;     // the truth table size in 64-bit wordsnWords557,18050
    int               LutMask;    // 1 << nLutSizeLutMask558,18124
    int               TopoBase;   // (1 << nLutSize) * nObjsTopoBase559,18175
    int               MintBase;   // TopoBase + nObjs * nObjsMintBase560,18236
    Vec_Wrd_t *       vInfo;      // nVars + nNodes + 1vInfo561,18298
    Vec_Int_t *       vVarValues; // variable valuesvVarValues562,18354
    Vec_Int_t *       vMidMints;  // middle mintermsvMidMints563,18407
    Vec_Bit_t *       vUsed2;     // bit masksvUsed2564,18460
    Vec_Bit_t *       vUsed3;     // bit masksvUsed3565,18507
    Vec_Int_t *       vPairs;     // sym var pairsvPairs566,18554
    int               nUsed[2];nUsed567,18605
    int               pFanins[MAJ3_OBJS][MAJ3_OBJS];  // faninspFanins568,18637
    int               pLits[2][2*MAJ3_OBJS]; // neg/pos literalspLits569,18701
    int               nLits[2];   // neg/pos literalnLits570,18766
    int               Counts[1024];Counts571,18819
    bmcg_sat_solver * pSat;       // SAT solverpSat572,18855
    abctime           clkEval;clkEval573,18903
static inline word *  Zyx_ManTruth( Zyx_Man_t * p, int v )        { return Vec_WrdEntryP( p->vInfo, p->nWords * v ); }Zyx_ManTruth576,18938
static inline int     Zyx_FuncVar( Zyx_Man_t * p, int i, int m )  { return (p->LutMask + 1) * (i - p->pPars->nVars) + m;         }Zyx_FuncVar578,19058
static inline int     Zyx_TopoVar( Zyx_Man_t * p, int i, int f )  { return p->TopoBase + p->nObjs * (i - p->pPars->nVars) + f;   }Zyx_TopoVar579,19189
static inline int     Zyx_MintVar( Zyx_Man_t * p, int m, int i )  { return p->MintBase + p->nObjs * m + i;                       }Zyx_MintVar580,19320
static inline int     Zyx_ManIsUsed2( Zyx_Man_t * p, int m, int n, int i, int j )Zyx_ManIsUsed2584,19687
static inline int     Zyx_ManIsUsed3( Zyx_Man_t * p, int m, int n, int i, int j, int k )Zyx_ManIsUsed3596,20059
void Zyx_SetConstVar( Zyx_Man_t * p, int Var, int Value )Zyx_SetConstVar619,20707
void Zyx_ManSetupVars( Zyx_Man_t * p )Zyx_ManSetupVars628,21066
int Zyx_ManAddCnfStart( Zyx_Man_t * p )Zyx_ManAddCnfStart653,22106
void Zyx_ManPrintVarMap( Zyx_Man_t * p, int fSat )Zyx_ManPrintVarMap703,23743
void Zyx_PrintClause( int * pLits, int nLits )Zyx_PrintClause727,24680
static inline int Zyx_ManValue( int iMint, int nVars )Zyx_ManValue746,25119
Vec_Wrd_t * Zyx_ManTruthTables( Zyx_Man_t * p, word * pTruth )Zyx_ManTruthTables753,25304
Vec_Int_t * Zyx_ManCreateSymVarPairs( word * pTruth, int nVars )Zyx_ManCreateSymVarPairs772,26156
Zyx_Man_t * Zyx_ManAlloc( Bmc_EsPar_t * pPars, word * pTruth )Zyx_ManAlloc793,26852
void Zyx_ManFree( Zyx_Man_t * p )Zyx_ManFree821,28245
int Zyx_ManCollectFanins( Zyx_Man_t * p, int i )Zyx_ManCollectFanins844,28764
int Zyx_ManAddCnfLazyTopo( Zyx_Man_t * p )Zyx_ManAddCnfLazyTopo857,29187
int Zyx_ManAddCnfBlockSolution( Zyx_Man_t * p )Zyx_ManAddCnfBlockSolution986,34850
int Zyx_ManAddCnfLazyFunc2( Zyx_Man_t * p, int iMint )Zyx_ManAddCnfLazyFunc21003,35507
int Zyx_ManAddCnfLazyFunc( Zyx_Man_t * p, int iMint )Zyx_ManAddCnfLazyFunc1059,37981
static void Zyx_ManPrintSolutionFile( Zyx_Man_t * p, int fCompl, int fFirst )Zyx_ManPrintSolutionFile1129,40691
static void Zyx_ManPrintSolution( Zyx_Man_t * p, int fCompl, int fFirst )Zyx_ManPrintSolution1167,42213
static inline int Zyx_ManEval( Zyx_Man_t * p )Zyx_ManEval1197,43367
static inline void Zyx_ManEvalStats( Zyx_Man_t * p )Zyx_ManEvalStats1243,45300
static inline void Zyx_ManPrint( Zyx_Man_t * p, int Iter, int iMint, int nLazyAll, abctime clk )Zyx_ManPrint1250,45484
void Zyx_ManExactSynthesis( Bmc_EsPar_t * pPars )Zyx_ManExactSynthesis1262,45992
int Zyx_TestGetTruthTablePars( char * pFileName, word * pTruth, int * nVars, int * nLutSize, int * nNodes )Zyx_TestGetTruthTablePars1360,49390
static inline word *  Zyx_TestTruth( Vec_Wrd_t * vInfo, int i, int nWords ) { return Vec_WrdEntryP(vInfo, nWords * i); }Zyx_TestTruth1413,50788
Vec_Wrd_t * Zyx_TestCreateTruthTables( int nVars, int nNodes )Zyx_TestCreateTruthTables1415,50910
int Zyx_TestReadNode( char * pLine, Vec_Wrd_t * vTruths, int nVars, int nLutSize, int iObj )Zyx_TestReadNode1424,51279
void Zyx_TestExact( char * pFileName )Zyx_TestExact1461,52820

src/sat/bmc/bmcInse.c,1299
static inline void   Gia_ParTestAlloc( Gia_Man_t * p, int nWords ) { assert( !p->pData ); p->pData = (unsigned *)ABC_ALLOC(word, 2*nWords*Gia_ManObjNum(p)); p->iData = nWords; }Gia_ParTestAlloc33,844
static inline void   Gia_ParTestFree( Gia_Man_t * p )              { ABC_FREE( p->pData ); p->iData = 0;             }Gia_ParTestFree34,1022
static inline word * Gia_ParTestObj( Gia_Man_t * p, int Id )       { return (word *)p->pData + Id*(p->iData << 1);   }Gia_ParTestObj35,1141
void Gia_ManInseInit( Gia_Man_t * p, Vec_Int_t * vInit )Gia_ManInseInit52,1715
void Gia_ManInseSimulateObj( Gia_Man_t * p, int Id )Gia_ManInseSimulateObj72,2422
int Gia_ManInseHighestScore( Gia_Man_t * p, int * pCost )Gia_ManInseHighestScore173,5591
void Gia_ManInseFindStarting( Gia_Man_t * p, int iPat, Vec_Int_t * vInit, Vec_Int_t * vInputs )Gia_ManInseFindStarting198,6406
Vec_Int_t * Gia_ManInseSimulate( Gia_Man_t * p, Vec_Int_t * vInit0, Vec_Int_t * vInputs, Vec_Int_t * vInit )Gia_ManInseSimulate231,7564
Vec_Int_t * Gia_ManInsePerform( Gia_Man_t * p, Vec_Int_t * vInit0, int nFrames, int nWords, int fVerbose )Gia_ManInsePerform277,9321
Vec_Int_t * Gia_ManInseTest( Gia_Man_t * p, Vec_Int_t * vInit0, int nFrames, int nWords, int nTimeOut, int fSim, int fVerbose )Gia_ManInseTest328,11197

src/sat/bmc/bmcBmcAnd.c,3726
typedef struct Bmc_Mna_t_ Bmc_Mna_t; Bmc_Mna_t33,875
struct Bmc_Mna_t_Bmc_Mna_t_34,913
    Gia_Man_t *         pFrames;  // time framespFrames36,933
    Cnf_Dat_t *         pCnf;     // CNF derived for the timeframespCnf37,982
    Vec_Int_t *         vPiMap;   // maps unrolled GIA PIs into user GIA PIsvPiMap38,1050
    Vec_Int_t *         vId2Var;  // maps GIA IDs into SAT varsvId2Var39,1127
    Vec_Int_t *         vInputs;  // inputs of the conevInputs40,1191
    Vec_Int_t *         vOutputs; // outputs of the conevOutputs41,1247
    Vec_Int_t *         vNodes;   // internal nodes of the conevNodes42,1304
    sat_solver *        pSat;     // SAT solverpSat43,1368
    int                 nSatVars; // the counter of SAT variablesnSatVars44,1416
    abctime             clkStart; // starting timeclkStart45,1482
static inline int Gia_ManTerSimInfoGet( unsigned * pInfo, int i )Gia_ManTerSimInfoGet48,1537
static inline void Gia_ManTerSimInfoSet( unsigned * pInfo, int i, int Value )Gia_ManTerSimInfoSet52,1658
Vec_Ptr_t * Bmc_MnaTernary( Gia_Man_t * p, int nFrames, int nFramesAdd, int fVerbose, int * iFirst )Bmc_MnaTernary74,2386
void Bmc_MnaCollect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes, unsigned * pState )Bmc_MnaCollect_rec142,4943
void Bmc_MnaCollect( Gia_Man_t * p, Vec_Int_t * vCos, Vec_Int_t * vNodes, unsigned * pState )Bmc_MnaCollect160,5715
void Bmc_MnaSelect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vLeaves )Bmc_MnaSelect_rec187,6518
void Bmc_MnaSelect( Gia_Man_t * p, Vec_Int_t * vCos, Vec_Int_t * vNodes, Vec_Int_t * vLeaves )Bmc_MnaSelect205,7259
void Bmc_MnaBuild_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Gia_Man_t * pNew, Vec_Int_t * vMap, Vec_Int_t * vPiMap )Bmc_MnaBuild_rec228,7902
void Bmc_MnaBuild( Gia_Man_t * p, Vec_Int_t * vCos, Vec_Int_t * vNodes, Gia_Man_t * pNew, Vec_Int_t * vMap, Vec_Int_t * vPiMap )Bmc_MnaBuild256,9166
Gia_Man_t * Gia_ManBmcUnroll( Gia_Man_t * pGia, int nFramesMax, int nFramesAdd, int fVerbose, Vec_Int_t ** pvPiMap )Gia_ManBmcUnroll284,10050
Bmc_Mna_t * Bmc_MnaAlloc()Bmc_MnaAlloc389,14155
void Bmc_MnaFree( Bmc_Mna_t * p )Bmc_MnaFree403,14550
Gia_Man_t * Gia_ManBmcDupCone( Gia_Man_t * p, Vec_Int_t * vIns, Vec_Int_t * vNodes, Vec_Int_t * vOuts )Gia_ManBmcDupCone426,15100
int Gia_ManBmcAssignVarIds( Bmc_Mna_t * p, Vec_Int_t * vIns, Vec_Int_t * vUsed, Vec_Int_t * vOuts )Gia_ManBmcAssignVarIds467,16373
void Gia_ManBmcAddCnf( Bmc_Mna_t * p, Gia_Man_t * pGia, Vec_Int_t * vIns, Vec_Int_t * vNodes, Vec_Int_t * vOuts )Gia_ManBmcAddCnf500,17451
void Gia_ManBmcAddCone_rec( Bmc_Mna_t * p, Gia_Obj_t * pObj )Gia_ManBmcAddCone_rec573,20162
void Gia_ManBmcAddCone( Bmc_Mna_t * p, int iStart, int iStop )Gia_ManBmcAddCone589,20631
int Gia_ManBmcCheckOutputs( Gia_Man_t * pFrames, int iStart, int iStop )Gia_ManBmcCheckOutputs623,21648
int Gia_ManBmcFindFirst( Gia_Man_t * pFrames )Gia_ManBmcFindFirst631,21889
int Gia_ManBmcPerform_Unr( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Gia_ManBmcPerform_Unr652,22347
Abc_Cex_t * Gia_ManBmcCexGen( Bmc_Mna_t * pMan, Gia_Man_t * p, int iOut )Gia_ManBmcCexGen735,25669
int Gia_ManBmcPerform_old_cnf( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Gia_ManBmcPerform_old_cnf773,26909
void Gia_ManBmcAddCnfNew_rec( Bmc_Mna_t * p, Gia_Obj_t * pObj )Gia_ManBmcAddCnfNew_rec868,30758
void Gia_ManBmcAddCnfNew( Bmc_Mna_t * p, int iStart, int iStop )Gia_ManBmcAddCnfNew914,32666
static inline Cnf_Dat_t * Cnf_DeriveGia( Gia_Man_t * p )Cnf_DeriveGia938,33225
int Gia_ManBmcPerformInt( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Gia_ManBmcPerformInt957,33662
int Gia_ManBmcPerform( Gia_Man_t * pGia, Bmc_AndPar_t * pPars )Gia_ManBmcPerform1066,38224

src/sat/bmc/bmcFault.c,4424
#define FFTEST_MAX_VARS FFTEST_MAX_VARS34,907
#define FFTEST_MAX_PARS FFTEST_MAX_PARS35,933
void Gia_DeriveFormula_rec( Gia_Man_t * pGia, char ** ppNamesIn, Vec_Str_t * vStr, int iLit )Gia_DeriveFormula_rec52,1453
char * Gia_DeriveFormula( Gia_Man_t * pGia, char ** ppNamesIn )Gia_DeriveFormula81,2723
void Gia_ParFfSetDefault( Bmc_ParFf_t * p )Gia_ParFfSetDefault108,3521
static inline void Cnf_AddSorder( sat_solver * p, int * pVars, int i, int k, int * pnVars )Cnf_AddSorder136,4321
static inline void Cnf_AddCardinConstrMerge( sat_solver * p, int * pVars, int lo, int hi, int r, int * pnVars )Cnf_AddCardinConstrMerge145,4649
static inline void Cnf_AddCardinConstrRange( sat_solver * p, int * pVars, int lo, int hi, int * pnVars )Cnf_AddCardinConstrRange156,5069
void Cnf_AddCardinConstrPairWise( sat_solver * p, Vec_Int_t * vVars, int K, int fStrict )Cnf_AddCardinConstrPairWise168,5559
static inline int Cnf_AddCardinVar( int Level, int Base, Vec_Int_t * vVars, int k )Cnf_AddCardinVar221,7395
void Cnf_AddCardinConstrGeneral( sat_solver * p, Vec_Int_t * vVars, int K, int fStrict )Cnf_AddCardinConstrGeneral225,7539
static inline int Cnf_AddCardinConstr( sat_solver * p, Vec_Int_t * vVars )Cnf_AddCardinConstr270,9238
void Cnf_AddCardinConstrTest()Cnf_AddCardinConstrTest293,10181
static inline Cnf_Dat_t * Cnf_DeriveGiaRemapped( Gia_Man_t * p )Cnf_DeriveGiaRemapped333,11373
static inline void Cnf_DataLiftGia( Cnf_Dat_t * p, Gia_Man_t * pGia, int nVarsPlus )Cnf_DataLiftGia355,11926
Gia_Man_t * Gia_ManFaultUnfold( Gia_Man_t * p, int fUseMuxes, int fFfOnly )Gia_ManFaultUnfold377,12521
Gia_Man_t * Gia_ManStuckAtUnfold( Gia_Man_t * p, Vec_Int_t * vMap )Gia_ManStuckAtUnfold448,15063
Gia_Man_t * Gia_ManFlipUnfold( Gia_Man_t * p, Vec_Int_t * vMap )Gia_ManFlipUnfold493,16523
Gia_Man_t * Gia_ManFOFUnfold( Gia_Man_t * p, Vec_Int_t * vMap )Gia_ManFOFUnfold532,17782
int Gia_FormStrCount( char * pStr, int * pnVars, int * pnPars )Gia_FormStrCount599,20292
void Gia_FormStrTransform( char * pStr, char * pForm )Gia_FormStrTransform656,22183
char * Gia_ManFormulaEndToken( char * pForm )Gia_ManFormulaEndToken684,22794
void Gia_ManPrintFormula_rec( char * pBeg, char * pEnd )Gia_ManPrintFormula_rec701,23172
void Gia_ManPrintFormula( char * pStr )Gia_ManPrintFormula763,24957
int Gia_ManRealizeFormula_rec( Gia_Man_t * p, int * pVars, int * pPars, char * pBeg, char * pEnd, int nPars )Gia_ManRealizeFormula_rec783,25448
int Gia_ManRealizeFormula( Gia_Man_t * p, int * pVars, int * pPars, char * pStr, int nPars )Gia_ManRealizeFormula833,27328
Gia_Man_t * Gia_ManFormulaUnfold( Gia_Man_t * p, char * pForm, int fFfOnly )Gia_ManFormulaUnfold837,27516
Gia_Man_t * Gia_ManFaultCofactor( Gia_Man_t * p, Vec_Int_t * vValues )Gia_ManFaultCofactor910,29948
void Gia_ManDumpTests( Vec_Int_t * vTests, int nIter, char * pFileName )Gia_ManDumpTests947,31043
void Gia_ManDumpTestsSimulate( Gia_Man_t * p, Vec_Int_t * vValues )Gia_ManDumpTestsSimulate969,31684
void Gia_ManDumpTestsDelay( Vec_Int_t * vTests, int nIter, char * pFileName, Gia_Man_t * p )Gia_ManDumpTestsDelay987,32461
void Gia_ManPrintResults( Gia_Man_t * p, sat_solver * pSat, int nIter, abctime clk )Gia_ManPrintResults1034,34127
int Gia_ManFaultAddOne( Gia_Man_t * pM, Cnf_Dat_t * pCnf, sat_solver * pSat, Vec_Int_t * vLits, int nFuncVars, int fAddOr, Gia_Man_t * pGiaCnf )Gia_ManFaultAddOne1065,35057
int Gia_ManDumpUntests( Gia_Man_t * pM, Cnf_Dat_t * pCnf, sat_solver * pSat, int nFuncVars, char * pFileName, int fVerbose )Gia_ManDumpUntests1136,37321
Vec_Int_t * Gia_ManGetTestPatterns( char * pFileName )Gia_ManGetTestPatterns1197,39492
Gia_Man_t * Gia_ManDeriveDup( Gia_Man_t * p, int nPisNew )Gia_ManDeriveDup1234,40439
int Gia_ManFaultAnalyze( sat_solver * pSat, Vec_Int_t * vPars, Vec_Int_t * vMap, Vec_Int_t * vLits, int Iter )Gia_ManFaultAnalyze1254,40872
int Gia_ManFaultDumpNewFaults( Gia_Man_t * pM, int nFuncVars, Vec_Int_t * vTests, Vec_Int_t * vTestNew, Bmc_ParFf_t * pPars )Gia_ManFaultDumpNewFaults1305,42800
int Gia_ManFaultPrepare( Gia_Man_t * p, Gia_Man_t * pG, Bmc_ParFf_t * pPars, int nFuncVars, Vec_Int_t * vMap, Vec_Int_t * vTests, Vec_Int_t * vLits, Gia_Man_t ** ppMiter, Cnf_Dat_t ** ppCnf, sat_solver ** ppSat, int fWarmUp )Gia_ManFaultPrepare1368,44909
void Gia_ManFaultTest( Gia_Man_t * p, Gia_Man_t * pG, Bmc_ParFf_t * pPars )Gia_ManFaultTest1554,52180

src/sat/psat/m114p.h,193
#define ABC__sat__psat__m114p_hABC__sat__psat__m114p_h4,72
#define M114p_SolverForEachRoot(M114p_SolverForEachRoot34,1472
#define M114p_SolverForEachChain(M114p_SolverForEachChain39,1782

src/sat/psat/m114p_types.h,124
#define ABC__sat__psat__m114p_types_hABC__sat__psat__m114p_types_h4,78
typedef int   M114p_Solver_t;M114p_Solver_t9,146

src/sat/proof/pr.c,6451
typedef unsigned lit;lit36,877
typedef struct Pr_Cls_t_ Pr_Cls_t;Pr_Cls_t38,900
struct Pr_Cls_t_Pr_Cls_t_39,935
    unsigned        uTruth;       // interpolantuTruth41,954
    void *          pProof;       // the proof node pProof42,1003
    Pr_Cls_t *      pNext;        // the next clausepNext44,1111
    Pr_Cls_t *      pNext0;       // the next 0-watchpNext045,1164
    Pr_Cls_t *      pNext1;       // the next 0-watchpNext146,1218
    int             Id;           // the clause IDId47,1272
    unsigned        fA     :  1;  // belongs to AfA48,1323
    unsigned        fRoot  :  1;  // original clausefRoot49,1373
    unsigned        fVisit :  1;  // visited clausefVisit50,1426
    unsigned        nLits  : 24;  // the number of literalsnLits51,1478
    lit             pLits[0];     // literals of this clausepLits52,1538
struct Pr_Man_t_Pr_Man_t_55,1603
    int             fProofWrite;  // writes the proof filefProofWrite58,1642
    int             fProofVerif;  // verifies the prooffProofVerif59,1701
    int             nVars;        // the number of variablesnVars60,1757
    int             nVarsAB;      // the number of global variablesnVarsAB61,1818
    int             nRoots;       // the number of root clausesnRoots62,1886
    int             nClauses;     // the number of all clausesnClauses63,1950
    int             nClausesA;    // the number of clauses of A nClausesA64,2013
    Pr_Cls_t *      pHead;        // the head clausepHead65,2078
    Pr_Cls_t *      pTail;        // the tail clausepTail66,2131
    Pr_Cls_t *      pLearnt;      // the tail clausepLearnt67,2184
    Pr_Cls_t *      pEmpty;       // the empty clausepEmpty68,2237
    int             nRootSize;    // the number of root level assignmentsnRootSize70,2311
    int             nTrailSize;   // the number of assignments made nTrailSize71,2385
    lit *           pTrail;       // chronological order of assignments (size nVars)pTrail72,2454
    lit *           pAssigns;     // assignments by variable (size nVars) pAssigns73,2539
    char *          pSeens;       // temporary mark (size nVars)pSeens74,2614
    char *          pVarTypes;    // variable type (size nVars) [1=A, 0=B, <0=AB]pVarTypes75,2679
    Pr_Cls_t **     pReasons;     // reasons for each assignment (size nVars)          pReasons76,2761
    Pr_Cls_t **     pWatches;     // watched clauses for each literal (size 2*nVars)          pWatches77,2849
    int             nVarsAlloc;   // the allocated size of arraysnVarsAlloc78,2944
    void *          pManProof;    // proof managerpManProof80,3033
    int             Counter;      // counter of resolved clausesCounter81,3084
    int             nChunkSize;   // the number of bytes in a chunknChunkSize83,3174
    int             nChunkUsed;   // the number of bytes used in the last chunknChunkUsed84,3242
    char *          pChunkLast;   // the last memory chunkpChunkLast85,3322
    lit *           pResLits;     // the literals of the resolvent   pResLits87,3410
    int             nResLits;     // the number of literals of the resolventnResLits88,3480
    int             nResLitsAlloc;// the number of literals of the resolventnResLitsAlloc89,3557
    abctime         timeBcp;timeBcp91,3655
    abctime         timeTrace;timeTrace92,3684
    abctime         timeRead;timeRead93,3715
    abctime         timeTotal;timeTotal94,3745
static const lit  LIT_UNDEF = 0xffffffff;LIT_UNDEF98,3805
static inline lit   toLit    (int v)        { return v + v;  }toLit101,3901
static inline lit   toLitCond(int v, int c) { return v + v + (c != 0); }toLitCond102,3964
static inline lit   lit_neg  (lit l)        { return l ^ 1;  }lit_neg103,4037
static inline int   lit_var  (lit l)        { return l >> 1; }lit_var104,4100
static inline int   lit_sign (lit l)        { return l & 1;  }lit_sign105,4163
static inline int   lit_print(lit l)        { return lit_sign(l)? -lit_var(l)-1 : lit_var(l)+1; }lit_print106,4226
static inline lit   lit_read (int s)        { return s > 0 ? toLit(s-1) : lit_neg(toLit(-s-1)); }lit_read107,4324
static inline int   lit_check(lit l, int n) { return l >= 0 && lit_var(l) < n;                  }lit_check108,4422
#define Pr_ManForEachClause(Pr_ManForEachClause111,4554
#define Pr_ManForEachClauseRoot(Pr_ManForEachClauseRoot112,4649
#define Pr_ManForEachClauseLearnt(Pr_ManForEachClauseLearnt113,4758
Pr_Man_t * Pr_ManAlloc( int nVarsAlloc )Pr_ManAlloc141,5805
void Pr_ManResize( Pr_Man_t * p, int nVarsNew )Pr_ManResize173,6656
void Pr_ManFree( Pr_Man_t * p )Pr_ManFree214,8404
static inline void Pr_ManWatchClause( Pr_Man_t * p, Pr_Cls_t * pClause, lit Lit )Pr_ManWatchClause244,9140
int Pr_ManAddClause( Pr_Man_t * p, lit * pBeg, lit * pEnd, int fRoot, int fClauseA )Pr_ManAddClause268,9784
char * Pr_ManMemoryFetch( Pr_Man_t * p, int nBytes )Pr_ManMemoryFetch345,11877
void Pr_ManMemoryStop( Pr_Man_t * p )Pr_ManMemoryStop371,12549
int Pr_ManMemoryReport( Pr_Man_t * p )Pr_ManMemoryReport392,13050
void Extra_PrintBinary_( FILE * pFile, unsigned Sign[], int nBits )Extra_PrintBinary_415,13587
void Pr_ManPrintInterOne( Pr_Man_t * p, Pr_Cls_t * pClause )Pr_ManPrintInterOne439,14275
static inline int Pr_ManEnqueue( Pr_Man_t * p, lit Lit, Pr_Cls_t * pReason )Pr_ManEnqueue459,14733
static inline void Pr_ManCancelUntil( Pr_Man_t * p, int Level )Pr_ManCancelUntil482,15354
static inline Pr_Cls_t * Pr_ManPropagateOne( Pr_Man_t * p, lit Lit )Pr_ManPropagateOne508,15970
Pr_Cls_t * Pr_ManPropagate( Pr_Man_t * p, int Start )Pr_ManPropagate577,18163
void Pr_ManPrintClause( Pr_Cls_t * pClause )Pr_ManPrintClause607,18810
void Pr_ManPrintResolvent( lit * pResLits, int nResLits )Pr_ManPrintResolvent627,19322
void Pr_ManProofWriteOne( Pr_Man_t * p, Pr_Cls_t * pClause )Pr_ManProofWriteOne647,19792
int Pr_ManProofTraceOne( Pr_Man_t * p, Pr_Cls_t * pConflict, Pr_Cls_t * pFinal )Pr_ManProofTraceOne672,20476
int Pr_ManProofRecordOne( Pr_Man_t * p, Pr_Cls_t * pClause )Pr_ManProofRecordOne829,26048
int Pr_ManProcessRoots( Pr_Man_t * p )Pr_ManProcessRoots905,28111
void Pr_ManPrepareInter( Pr_Man_t * p )Pr_ManPrepareInter973,29991
int Pr_ManProofWrite( Pr_Man_t * p )Pr_ManProofWrite1050,32203
Pr_Man_t * Pr_ManProofRead( char * pFileName )Pr_ManProofRead1108,33434
int Pr_ManProofTest( char * pFileName )Pr_ManProofTest1226,36755

src/sat/proof/pr.h,141
#define ABC__sat__proof__pr_hABC__sat__proof__pr_h22,521
#define inline inline26,567
typedef struct Pr_Man_t_ Pr_Man_t;Pr_Man_t46,1319

src/proof/live/ltl_parser.c,3750
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };ltlToken32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };AND32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };OR32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };NOT32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };IMPLY32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };GLOBALLY32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };EVENTUALLY32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };NEXT32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };UNTIL32,692
enum ltlToken { AND, OR, NOT, IMPLY, GLOBALLY, EVENTUALLY, NEXT, UNTIL, BOOL };BOOL32,692
enum ltlGrammerToken { OPERAND, LTL, BINOP, UOP };ltlGrammerToken33,772
enum ltlGrammerToken { OPERAND, LTL, BINOP, UOP };OPERAND33,772
enum ltlGrammerToken { OPERAND, LTL, BINOP, UOP };LTL33,772
enum ltlGrammerToken { OPERAND, LTL, BINOP, UOP };BINOP33,772
enum ltlGrammerToken { OPERAND, LTL, BINOP, UOP };UOP33,772
typedef enum ltlToken tokenType;tokenType34,823
typedef enum ltlGrammerToken ltlGrammerTokenType;ltlGrammerTokenType35,856
struct ltlNode_tltlNode_t37,907
    tokenType type;type39,926
    char *name;name40,946
    Aig_Obj_t *pObj;pObj41,962
    struct ltlNode_t *left;left42,983
    struct ltlNode_t *right;right43,1011
typedef struct ltlNode_t ltlNode;ltlNode46,1044
ltlNode *generateTypedNode( tokenType new_type )generateTypedNode48,1079
static inline int isNotVarNameSymbol( char c )isNotVarNameSymbol68,1580
void Abc_FrameCopyLTLDataBase( Abc_Frame_t *pAbc, Abc_Ntk_t * pNtk )Abc_FrameCopyLTLDataBase73,1708
char *getVarName( char *suffixFormula, int startLoc, int *endLocation )getVarName93,2415
int startOfSuffixString = 0;startOfSuffixString114,2903
int isUnexpectedEOS( char *formula, int index )isUnexpectedEOS116,2933
int isTemporalOperator( char *formula, int index )isTemporalOperator127,3166
ltlNode *readLtlFormula( char *formula )readLtlFormula137,3523
void resetGlobalVar()resetGlobalVar361,13635
ltlNode *parseFormulaCreateAST( char *inputFormula )parseFormulaCreateAST366,13691
void traverseAbstractSyntaxTree( ltlNode *node )traverseAbstractSyntaxTree377,13949
void traverseAbstractSyntaxTree_postFix( ltlNode *node )traverseAbstractSyntaxTree_postFix436,15927
void populateAigPointerUnitGF( Aig_Man_t *pAigNew, ltlNode *topASTNode, Vec_Ptr_t *vSignal, Vec_Vec_t *vAigGFMap )populateAigPointerUnitGF505,18261
Aig_Obj_t *buildLogicFromLTLNode_combinationalOnly( Aig_Man_t *pAigNew, ltlNode *pLtlNode )buildLogicFromLTLNode_combinationalOnly558,20378
Aig_Obj_t *buildLogicFromLTLNode( Aig_Man_t *pAig, ltlNode *pLtlNode )buildLogicFromLTLNode601,22273
int isNonTemporalSubformula( ltlNode *topNode )isNonTemporalSubformula644,24096
int isWellFormed( ltlNode *topNode )isWellFormed661,24550
int checkBooleanConstant( char *targetName )checkBooleanConstant690,25326
int checkSignalNameExistence( Abc_Ntk_t *pNtk, ltlNode *topASTNode )checkSignalNameExistence699,25517
void populateBoolWithAigNodePtr( Abc_Ntk_t *pNtk, Aig_Man_t *pAigOld, Aig_Man_t *pAigNew, ltlNode *topASTNode )populateBoolWithAigNodePtr742,26983
int checkAllBoolHaveAIGPointer( ltlNode *topASTNode )checkAllBoolHaveAIGPointer795,28911
void setAIGNodePtrOfGloballyNode( ltlNode *astNode, Aig_Obj_t *pObjLo )setAIGNodePtrOfGloballyNode828,29926
Aig_Obj_t *retriveAIGPointerFromLTLNode( ltlNode *astNode )retriveAIGPointerFromLTLNode833,30043

src/proof/live/monotone.c,1781
struct aigPoIndicesaigPoIndices35,1071
    int attrPendingSignalIndex;attrPendingSignalIndex37,1093
    int attrHintSingalBeginningMarker;attrHintSingalBeginningMarker38,1125
    int attrHintSingalEndMarker;attrHintSingalEndMarker39,1164
    int attrSafetyInvarIndex;attrSafetyInvarIndex40,1197
struct aigPoIndices *allocAigPoIndices()allocAigPoIndices43,1231
void deallocAigPoIndices(struct aigPoIndices *toBeDeletedAigPoIndices)deallocAigPoIndices57,1677
struct monotoneVectorsStructmonotoneVectorsStruct63,1834
    Vec_Int_t *attrKnownMonotone;attrKnownMonotone65,1865
    Vec_Int_t *attrCandMonotone;attrCandMonotone66,1899
    Vec_Int_t *attrHintMonotone;attrHintMonotone67,1932
struct monotoneVectorsStruct *allocPointersToMonotoneVectors()allocPointersToMonotoneVectors70,1969
void deallocPointersToMonotoneVectors(struct monotoneVectorsStruct *toBeDeleted)deallocPointersToMonotoneVectors84,2497
Vec_Int_t *findHintOutputs(Abc_Ntk_t *pNtk)findHintOutputs90,2643
int findPendingSignal(Abc_Ntk_t *pNtk)findPendingSignal112,3120
int checkSanityOfKnownMonotone( Vec_Int_t *vKnownMonotone, Vec_Int_t *vCandMonotone, Vec_Int_t *vHintMonotone )checkSanityOfKnownMonotone129,3459
Aig_Man_t *createMonotoneTester(Aig_Man_t *pAig, struct aigPoIndices *aigPoIndicesArg, struct monotoneVectorsStruct *monotoneVectorArg, int *startMonotonePropPo)createMonotoneTester145,3907
Vec_Int_t *findNewMonotone( Aig_Man_t *pAig, struct aigPoIndices *aigPoIndicesArg, struct monotoneVectorsStruct *monotoneVectorArg )findNewMonotone348,12979
Vec_Int_t *findRemainingMonotoneCandidates(Vec_Int_t *vKnownMonotone, Vec_Int_t *vHintMonotone)findRemainingMonotoneCandidates396,14949
Vec_Int_t *findMonotoneSignals( Abc_Ntk_t *pNtk )findMonotoneSignals413,15435

src/proof/live/kLiveConstraints.c,587
Aig_Obj_t *createConstrained0LiveCone( Aig_Man_t *pNewAig, Vec_Ptr_t *signalList )createConstrained0LiveCone32,807
Vec_Ptr_t *collectCSSignals( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )collectCSSignals55,1691
Aig_Man_t *createNewAigWith0LivePo( Aig_Man_t *pAig, Vec_Ptr_t *signalList, int *index0Live )createNewAigWith0LivePo75,2402
Vec_Ptr_t *checkMonotoneSignal()checkMonotoneSignal144,4895
Vec_Ptr_t *gatherMonotoneSignals(Aig_Man_t *pAig)gatherMonotoneSignals149,4950
Aig_Man_t *generateWorkingAig( Aig_Man_t *pAig, Abc_Ntk_t *pNtk, int *pIndex0Live )generateWorkingAig163,5170

src/proof/live/disjunctiveMonotone.c,2118
struct aigPoIndicesaigPoIndices31,755
    int attrPendingSignalIndex;attrPendingSignalIndex33,777
    int attrHintSingalBeginningMarker;attrHintSingalBeginningMarker34,809
    int attrHintSingalEndMarker;attrHintSingalEndMarker35,848
    int attrSafetyInvarIndex;attrSafetyInvarIndex36,881
struct antecedentConsequentVectorsStructantecedentConsequentVectorsStruct43,1103
    Vec_Int_t *attrAntecedents;attrAntecedents45,1146
    Vec_Int_t *attrConsequentCandidates;attrConsequentCandidates46,1178
struct antecedentConsequentVectorsStruct *allocAntecedentConsequentVectorsStruct()allocAntecedentConsequentVectorsStruct49,1223
void deallocAntecedentConsequentVectorsStruct(struct antecedentConsequentVectorsStruct *toBeDeleted)deallocAntecedentConsequentVectorsStruct62,1658
Aig_Man_t *createDisjunctiveMonotoneTester(Aig_Man_t *pAig, struct aigPoIndices *aigPoIndicesArg, createDisjunctiveMonotoneTester72,2023
Vec_Int_t *findNewDisjunctiveMonotone( Aig_Man_t *pAig, struct aigPoIndices *aigPoIndicesArg, struct antecedentConsequentVectorsStruct *anteConseVectors )findNewDisjunctiveMonotone275,10771
Vec_Int_t *updateAnteConseVectors(struct antecedentConsequentVectorsStruct *anteConse )updateAnteConseVectors344,12727
Vec_Int_t *vectorDifference(Vec_Int_t *A, Vec_Int_t *B)vectorDifference363,13389
Vec_Int_t *createSingletonIntVector( int iElem )createSingletonIntVector380,13679
int Vec_IntPushUniqueLocal( Vec_Int_t * p, int Entry )Vec_IntPushUniqueLocal440,15166
Vec_Ptr_t *findNextLevelDisjunctiveMonotone( findNextLevelDisjunctiveMonotone450,15376
void printAllIntVectors(Vec_Ptr_t *vDisjunctions, Abc_Ntk_t *pNtk, char *fileName)printAllIntVectors498,17262
void printAllIntVectorsStabil(Vec_Ptr_t *vDisjunctions, Abc_Ntk_t *pNtk, char *fileName)printAllIntVectorsStabil529,18033
void appendVecToMasterVecInt(Vec_Ptr_t *masterVec, Vec_Ptr_t *candVec )appendVecToMasterVecInt566,18983
void deallocateVecOfIntVec( Vec_Ptr_t *vecOfIntVec )deallocateVecOfIntVec581,19339
Vec_Ptr_t *findDisjunctiveMonotoneSignals( Abc_Ntk_t *pNtk )findDisjunctiveMonotoneSignals596,19620

src/proof/live/arenaViolation.c,1814
#define BARRIER_MONOTONE_TESTBARRIER_MONOTONE_TEST29,733
Vec_Ptr_t * createArenaLO( Aig_Man_t *pAigNew, Vec_Ptr_t *vBarriers )createArenaLO33,790
Vec_Ptr_t * createArenaLi( Aig_Man_t *pAigNew, Vec_Ptr_t *vBarriers, Vec_Ptr_t *vArenaSignal )createArenaLi57,1287
Vec_Ptr_t *createMonotoneBarrierLO( Aig_Man_t *pAigNew, Vec_Ptr_t *vBarriers )createMonotoneBarrierLO82,1901
Aig_Obj_t *driverToPoNew( Aig_Man_t *pAig, Aig_Obj_t *pObjPo )driverToPoNew106,2419
Vec_Ptr_t *collectBarrierDisjunctions(Aig_Man_t *pAigOld, Aig_Man_t *pAigNew, Vec_Ptr_t *vBarriers)collectBarrierDisjunctions124,3025
Aig_Obj_t *Aig_Xor( Aig_Man_t *pAig, Aig_Obj_t *pObj1, Aig_Obj_t *pObj2 )Aig_Xor160,4237
Aig_Obj_t *createArenaViolation(createArenaViolation165,4423
Aig_Obj_t *createConstrained0LiveConeWithDSC( Aig_Man_t *pNewAig, Vec_Ptr_t *signalList )createConstrained0LiveConeWithDSC212,6215
Vec_Ptr_t *collectCSSignalsWithDSC( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )collectCSSignalsWithDSC235,7106
int collectWindowBeginSignalWithDSC( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )collectWindowBeginSignalWithDSC255,7824
int collectWithinWindowSignalWithDSC( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )collectWithinWindowSignalWithDSC271,8142
int collectPendingSignalWithDSC( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )collectPendingSignalWithDSC285,8441
Aig_Obj_t *createAndGateForMonotonicityVerification(createAndGateForMonotonicityVerification299,8735
Aig_Man_t *createNewAigWith0LivePoWithDSC( Aig_Man_t *pAig, Vec_Ptr_t *signalList, int *index0Live, int windowBeginIndex, int withinWindowIndex, int pendingSignalIndex, Vec_Ptr_t *vBarriers )createNewAigWith0LivePoWithDSC323,9606
Aig_Man_t *generateWorkingAigWithDSC( Aig_Man_t *pAig, Abc_Ntk_t *pNtk, int *pIndex0Live, Vec_Ptr_t *vMasterBarriers )generateWorkingAigWithDSC529,18172

src/proof/live/combination.c,619
long countCombination(long n, long k)countCombination12,222
void listCombination(int n, int t)listCombination20,415
int generateCombinatorialStabil( Aig_Man_t *pAigNew, Aig_Man_t *pAigOld, generateCombinatorialStabil54,1262
int generateCombinatorialStabilExhaust( Aig_Man_t *pAigNew, Aig_Man_t *pAigOld, generateCombinatorialStabilExhaust101,2790
Aig_Man_t *generateDisjunctiveTester( Abc_Ntk_t *pNtk, Aig_Man_t *pAig, int combN, int combK )generateDisjunctiveTester148,4336
Aig_Man_t *generateGeneralDisjunctiveTester( Abc_Ntk_t *pNtk, Aig_Man_t *pAig, int combK )generateGeneralDisjunctiveTester321,10439

src/proof/live/liveness.c,3173
#define PROPAGATE_NAMESPROPAGATE_NAMES30,691
#define MULTIPLE_LTL_FORMULAMULTIPLE_LTL_FORMULA31,715
#define ALLOW_SAFETY_PROPERTIESALLOW_SAFETY_PROPERTIES32,744
#define FULL_BIERE_MODE FULL_BIERE_MODE34,777
#define IGNORE_LIVENESS_KEEP_SAFETY_MODE IGNORE_LIVENESS_KEEP_SAFETY_MODE35,803
#define IGNORE_SAFETY_KEEP_LIVENESS_MODE IGNORE_SAFETY_KEEP_LIVENESS_MODE36,846
#define IGNORE_SAFETY_KEEP_LIVENESS_ONE_LOOP_MODE IGNORE_SAFETY_KEEP_LIVENESS_ONE_LOOP_MODE37,889
#define FULL_BIERE_ONE_LOOP_MODE FULL_BIERE_ONE_LOOP_MODE38,941
typedef struct ltlNode_t ltlNode;ltlNode48,1320
static int nodeName_starts_with( Abc_Obj_t *pNode, const char *prefix )nodeName_starts_with84,3521
void printVecPtrOfString( Vec_Ptr_t *vec )printVecPtrOfString92,3716
int getPoIndex( Aig_Man_t *pAig, Aig_Obj_t *pPivot )getPoIndex102,3899
char * retrieveTruePiName( Abc_Ntk_t *pNtkOld, Aig_Man_t *pAigOld, Aig_Man_t *pAigNew, Aig_Obj_t *pObjPivot )retrieveTruePiName115,4107
char * retrieveLOName( Abc_Ntk_t *pNtkOld, Aig_Man_t *pAigOld, Aig_Man_t *pAigNew, Aig_Obj_t *pObjPivot, Vec_Ptr_t *vLive, Vec_Ptr_t * vFair )retrieveLOName137,4785
Vec_Ptr_t *vecPis, *vecPiNames;vecPis218,7781
Vec_Ptr_t *vecPis, *vecPiNames;vecPiNames218,7781
Vec_Ptr_t *vecLos, *vecLoNames;vecLos219,7813
Vec_Ptr_t *vecLos, *vecLoNames;vecLoNames219,7813
int Aig_ManCiCleanupBiere( Aig_Man_t * p )Aig_ManCiCleanupBiere222,7847
int Aig_ManCoCleanupBiere( Aig_Man_t * p )Aig_ManCoCleanupBiere234,8116
Aig_Man_t * LivenessToSafetyTransformation( int mode, Abc_Ntk_t * pNtk, Aig_Man_t * p, LivenessToSafetyTransformation244,8375
Aig_Man_t * LivenessToSafetyTransformationAbs( int mode, Abc_Ntk_t * pNtk, Aig_Man_t * p, Vec_Int_t *vFlops, LivenessToSafetyTransformationAbs542,21793
Aig_Man_t * LivenessToSafetyTransformationOneStepLoop( int mode, Abc_Ntk_t * pNtk, Aig_Man_t * p, LivenessToSafetyTransformationOneStepLoop843,35510
Vec_Ptr_t * populateLivenessVector( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )populateLivenessVector1143,47706
Vec_Ptr_t * populateFairnessVector( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )populateFairnessVector1161,48247
Vec_Ptr_t * populateSafetyAssertionVector( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )populateSafetyAssertionVector1179,48788
Vec_Ptr_t * populateSafetyAssumptionVector( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )populateSafetyAssumptionVector1197,49429
void updateNewNetworkNameManager( Abc_Ntk_t *pNtk, Aig_Man_t *pAig, Vec_Ptr_t *vPiNames, Vec_Ptr_t *vLoNames )updateNewNetworkNameManager1215,50078
int Abc_CommandAbcLivenessToSafety( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbcLivenessToSafety1254,51590
Vec_Int_t * prepareFlopVector( Aig_Man_t * pAig, int vectorLength )prepareFlopVector1569,65461
int Abc_CommandAbcLivenessToSafetyAbstraction( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbcLivenessToSafetyAbstraction1599,66163
Aig_Man_t * LivenessToSafetyTransformationWithLTL( int mode, Abc_Ntk_t * pNtk, Aig_Man_t * p, LivenessToSafetyTransformationWithLTL1798,74764
int Abc_CommandAbcLivenessToSafetyWithLTL( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbcLivenessToSafetyWithLTL2268,101915

src/proof/live/kliveness.c,1746
#define SIMPLE_kCS SIMPLE_kCS57,2340
#define kCS_WITH_SAFETY_INVARIANTS kCS_WITH_SAFETY_INVARIANTS58,2361
#define kCS_WITH_DISCOVER_MONOTONE_SIGNALS kCS_WITH_DISCOVER_MONOTONE_SIGNALS59,2398
#define kCS_WITH_SAFETY_AND_DCS_INVARIANTS kCS_WITH_SAFETY_AND_DCS_INVARIANTS60,2443
#define kCS_WITH_SAFETY_AND_USER_GIVEN_DCS_INVARIANTS kCS_WITH_SAFETY_AND_USER_GIVEN_DCS_INVARIANTS61,2488
Aig_Obj_t *readLiveSignal_0( Aig_Man_t *pAig, int liveIndex_0 )readLiveSignal_083,2983
Aig_Obj_t *readLiveSignal_k( Aig_Man_t *pAig, int liveIndex_k )readLiveSignal_k91,3197
Aig_Man_t *introduceAbsorberLogic( Aig_Man_t *pAig, int *pLiveIndex_0, int *pLiveIndex_k, int nonFirstIteration )introduceAbsorberLogic175,5653
void modifyAigToApplySafetyInvar(Aig_Man_t *pAig, int csTarget, int safetyInvarPO)modifyAigToApplySafetyInvar326,11121
int flipConePdr( Aig_Man_t *pAig, int directive, int targetCSPropertyIndex, int safetyInvariantPOIndex, int absorberCount )flipConePdr341,11818
int collectSafetyInvariantPOIndex(Abc_Ntk_t *pNtk)collectSafetyInvariantPOIndex425,13792
Vec_Ptr_t *collectUserGivenDisjunctiveMonotoneSignals( Abc_Ntk_t *pNtk )collectUserGivenDisjunctiveMonotoneSignals439,14047
void deallocateMasterBarrierDisjunctInt(Vec_Ptr_t *vMasterBarrierDisjunctsArg)deallocateMasterBarrierDisjunctInt463,14617
void deallocateMasterBarrierDisjunctVecPtrVecInt(Vec_Ptr_t *vMasterBarrierDisjunctsArg)deallocateMasterBarrierDisjunctVecPtrVecInt478,14963
Vec_Ptr_t *getVecOfVecFairness(FILE *fp)getVecOfVecFairness502,15656
int Abc_CommandCS_kLiveness( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandCS_kLiveness525,16017
int Abc_CommandNChooseK( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandNChooseK718,22450

src/proof/live/liveness_sim.c,1547
#define PROPAGATE_NAMESPROPAGATE_NAMES30,669
static void printVecPtrOfString( Vec_Ptr_t *vec )printVecPtrOfString55,2070
static int getPoIndex( Aig_Man_t *pAig, Aig_Obj_t *pPivot )getPoIndex65,2260
static char * retrieveTruePiName( Abc_Ntk_t *pNtkOld, Aig_Man_t *pAigOld, Aig_Man_t *pAigNew, Aig_Obj_t *pObjPivot )retrieveTruePiName78,2475
static char * retrieveLOName( Abc_Ntk_t *pNtkOld, Aig_Man_t *pAigOld, Aig_Man_t *pAigNew, Aig_Obj_t *pObjPivot, Vec_Ptr_t *vLive, Vec_Ptr_t * vFair )retrieveLOName100,3160
static int Aig_ManCiCleanupBiere( Aig_Man_t * p )Aig_ManCiCleanupBiere176,5882
static int Aig_ManCoCleanupBiere( Aig_Man_t * p )Aig_ManCoCleanupBiere188,6158
static Aig_Man_t * LivenessToSafetyTransformationSim( Abc_Ntk_t * pNtk, Aig_Man_t * p, Vec_Ptr_t *vLive, Vec_Ptr_t *vFair )LivenessToSafetyTransformationSim198,6424
static Aig_Man_t * LivenessToSafetyTransformationOneStepLoopSim( Abc_Ntk_t * pNtk, Aig_Man_t * p, Vec_Ptr_t *vLive, Vec_Ptr_t *vFair )LivenessToSafetyTransformationOneStepLoopSim480,17864
static Vec_Ptr_t * populateLivenessVector( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )populateLivenessVector698,26124
static Vec_Ptr_t * populateFairnessVector( Abc_Ntk_t *pNtk, Aig_Man_t *pAig )populateFairnessVector715,26613
static void updateNewNetworkNameManager( Abc_Ntk_t *pNtk, Aig_Man_t *pAig, Vec_Ptr_t *vPiNames, Vec_Ptr_t *vLoNames )updateNewNetworkNameManager732,27102
int Abc_CommandAbcLivenessToSafetySim( Abc_Frame_t * pAbc, int argc, char ** argv )Abc_CommandAbcLivenessToSafetySim754,28113

src/proof/int/intCheck.c,1358
struct Inter_Check_t_Inter_Check_t_31,823
    int           nFramesK;     // the number of timeframes (K=1 for simple induction)nFramesK33,847
    int           nVars;        // the current number of variables in the solvernVars34,934
    Aig_Man_t *   pFrames;      // unrolled timeframespFrames35,1015
    Cnf_Dat_t *   pCnf;         // CNF of unrolled timeframes pCnf36,1070
    sat_solver *  pSat;         // SAT solver pSat37,1133
    Vec_Int_t *   vOrLits;      // OR vars in each time frame (total number is the number nFrames)vOrLits38,1180
    Vec_Int_t *   vAndLits;     // AND vars in the last timeframe (total number is the number of interpolants)vAndLits39,1279
    Vec_Int_t *   vAssLits;     // assumptions (the union of the two)vAssLits40,1390
Aig_Man_t * Inter_ManUnrollFrames( Aig_Man_t * pAig, int nFrames )Inter_ManUnrollFrames59,2082
Inter_Check_t * Inter_CheckStart( Aig_Man_t * pTrans, int nFramesK )Inter_CheckStart105,3653
void Inter_CheckStop( Inter_Check_t * p )Inter_CheckStop137,4755
void Inter_CheckAddOrGate( Inter_Check_t * p, int iVarA, int iVarB, int iVarC )Inter_CheckAddOrGate162,5313
void Inter_CheckAddEqual( Inter_Check_t * p, int iVarA, int iVarB )Inter_CheckAddEqual194,6310
int Inter_CheckPerform( Inter_Check_t * p, Cnf_Dat_t * pCnfInt, abctime nTimeNewOut )Inter_CheckPerform220,7088

src/proof/int/intMan.c,321
Inter_Man_t * Inter_ManCreate( Aig_Man_t * pAig, Inter_ManParams_t * pPars )Inter_ManCreate46,1295
void Inter_ManClean( Inter_Man_t * p )Inter_ManClean73,2047
void Inter_ManInterDump( Inter_Man_t * p, int fProved )Inter_ManInterDump104,2802
void Inter_ManStop( Inter_Man_t * p, int fProved )Inter_ManStop128,3523

src/proof/int/intM114.c,206
sat_solver * Inter_ManDeriveSatSolver( Inter_ManDeriveSatSolver46,1416
int Inter_ManPerformOneStep( Inter_Man_t * p, int fUseBias, int fUseBackward, abctime nTimeNewOut )Inter_ManPerformOneStep203,7146

src/proof/int/intUtil.c,160
int Inter_ManCheckInitialState( Aig_Man_t * p )Inter_ManCheckInitialState46,1291
int Inter_ManCheckAllStates( Aig_Man_t * p )Inter_ManCheckAllStates85,2500

src/proof/int/intM114p.c,613
M114p_Solver_t Inter_ManDeriveSatSolverM114p( Inter_ManDeriveSatSolverM114p48,1454
int Inter_ManResolveM114p( Vec_Int_t * vResolvent, int * pLits, int nLits, int iVar )Inter_ManResolveM114p159,5382
Aig_Man_t * Inter_ManInterpolateM114pPudlak( M114p_Solver_t s, Vec_Int_t * vMapRoots, Vec_Int_t * vMapVars )Inter_ManInterpolateM114pPudlak208,7013
Aig_Man_t * Inter_ManpInterpolateM114( M114p_Solver_t s, Vec_Int_t * vMapRoots, Vec_Int_t * vMapVars )Inter_ManpInterpolateM114320,11211
int Inter_ManPerformOneStepM114p( Inter_Man_t * p, int fUsePudlak, int fUseOther )Inter_ManPerformOneStepM114p393,13521

src/proof/int/intContain.c,736
int Inter_ManCheckContainment( Aig_Man_t * pNew, Aig_Man_t * pOld )Inter_ManCheckContainment47,1415
int Inter_ManCheckEquivalence( Aig_Man_t * pNew, Aig_Man_t * pOld )Inter_ManCheckEquivalence78,2335
Aig_Man_t * Inter_ManFramesLatches( Aig_Man_t * pAig, int nFrames, Vec_Ptr_t ** pvMapReg )Inter_ManFramesLatches111,3380
void Inter_ManAppendCone( Aig_Man_t * pOld, Aig_Man_t * pNew, Aig_Obj_t ** ppNewPis, int fCompl )Inter_ManAppendCone160,5047
int Inter_ManCheckInductiveContainment( Aig_Man_t * pTrans, Aig_Man_t * pInter, int nSteps, int fBackward )Inter_ManCheckInductiveContainment190,5984
int Inter_ManCheckUniqueness( Aig_Man_t * p, sat_solver * pSat, Cnf_Dat_t * pCnf, int nFrames )Inter_ManCheckUniqueness264,8149

src/proof/int/intCore.c,224
void Inter_ManSetDefaultParams( Inter_ManParams_t * p )Inter_ManSetDefaultParams46,1310
int Inter_ManPerformInterpolation( Aig_Man_t * pAig, Inter_ManParams_t * pPars, int * piFrame )Inter_ManPerformInterpolation79,2922

src/proof/int/intInter.c,357
Aig_Man_t * Inter_ManDupExpand( Aig_Man_t * pInter, Aig_Man_t * pOther )Inter_ManDupExpand45,1266
void Inter_ManVerifyInterpolant1( Inta_Man_t * pMan, Sto_Man_t * pCnf, Aig_Man_t * pInter )Inter_ManVerifyInterpolant166,1837
void Inter_ManVerifyInterpolant2( Intb_Man_t * pMan, Sto_Man_t * pCnf, Aig_Man_t * pInter )Inter_ManVerifyInterpolant2106,3041

src/proof/int/intDup.c,271
Aig_Man_t * Inter_ManStartInitState( int nRegs )Inter_ManStartInitState45,1288
Aig_Man_t * Inter_ManStartDuplicated( Aig_Man_t * p )Inter_ManStartDuplicated73,2001
Aig_Man_t * Inter_ManStartOneOutput( Aig_Man_t * p, int fAddFirstPo )Inter_ManStartOneOutput122,3503

src/proof/int/int.h,1717
#define ABC__aig__int__int_hABC__aig__int__int_h22,527
typedef struct Inter_ManParams_t_ Inter_ManParams_t;Inter_ManParams_t48,1439
struct Inter_ManParams_t_Inter_ManParams_t_49,1492
    int  nBTLimit;      // limit on the number of conflictsnBTLimit51,1520
    int  nFramesMax;    // the max number timeframes to unrollnFramesMax52,1580
    int  nSecLimit;     // time limit in secondsnSecLimit53,1643
    int  nFramesK;      // the number of timeframes to use in inductionnFramesK54,1692
    int  fRewrite;      // use additional rewriting to simplify timeframesfRewrite55,1764
    int  fTransLoop;    // add transition into the init state under new PI varfTransLoop56,1839
    int  fUsePudlak;    // use Pudluk interpolation procedurefUsePudlak57,1918
    int  fUseOther;     // use other undisclosed optionfUseOther58,1980
    int  fUseMiniSat;   // use MiniSat-1.14p instead of internal proof enginefUseMiniSat59,2036
    int  fCheckKstep;   // check using K-step inductionfCheckKstep60,2114
    int  fUseBias;      // bias decisions to global variablesfUseBias61,2170
    int  fUseBackward;  // perform backward interpolationfUseBackward62,2232
    int  fUseSeparate;  // solve each output separatelyfUseSeparate63,2290
    int  fUseTwoFrames; // create the OR of two last timeframesfUseTwoFrames64,2346
    int  fDropSatOuts;  // replace by 1 the solved outputsfDropSatOuts65,2410
    int  fDropInvar;    // dump inductive invariant into filefDropInvar66,2469
    int  fVerbose;      // print verbose statisticsfVerbose67,2531
    int  iFrameMax;     // the time frame reachediFrameMax68,2583
    char * pFileName;   // file name to dump interpolantpFileName69,2633

src/proof/int/intFrames.c,131
Aig_Man_t * Inter_ManFramesInter( Aig_Man_t * pAig, int nFrames, int fAddRegOuts, int fUseTwoFrames )Inter_ManFramesInter47,1493

src/proof/int/intInt.h,1702
#define ABC__aig__int__intInt_hABC__aig__int__intInt_h22,536
typedef struct Inter_Man_t_ Inter_Man_t;Inter_Man_t49,1419
struct Inter_Man_t_Inter_Man_t_50,1460
    Aig_Man_t *      pAig;         // the original AIG managerpAig53,1501
    Aig_Man_t *      pAigTrans;    // the transformed original AIG managerpAigTrans54,1564
    Cnf_Dat_t *      pCnfAig;      // CNF for the original managerpCnfAig55,1639
    Aig_Man_t *      pInter;       // the current interpolantpInter57,1725
    Cnf_Dat_t *      pCnfInter;    // CNF for the current interplantpCnfInter58,1787
    Aig_Man_t *      pFrames;      // the timeframes      pFrames60,1874
    Cnf_Dat_t *      pCnfFrames;   // CNF for the timeframes pCnfFrames61,1933
    Vec_Int_t *      vVarsAB;      // the variables participating in vVarsAB63,2013
    Aig_Man_t *      pInterNew;pInterNew65,2130
    Vec_Ptr_t *      vInters;vInters66,2162
    int              nFrames;      // the number of timeframesnFrames68,2210
    int              nConfCur;     // the current number of conflictsnConfCur69,2273
    int              nConfLimit;   // the limit on the number of conflictsnConfLimit70,2343
    int              fVerbose;     // the verbosiness flagfVerbose71,2418
    char *           pFileName;pFileName72,2477
    abctime          timeRwr;timeRwr74,2524
    abctime          timeCnf;timeCnf75,2554
    abctime          timeSat;timeSat76,2584
    abctime          timeInt;timeInt77,2614
    abctime          timeEqu;timeEqu78,2644
    abctime          timeOther;timeOther79,2674
    abctime          timeTotal;timeTotal80,2706
typedef struct Inter_Check_t_ Inter_Check_t;Inter_Check_t84,2774

src/proof/int/intCtrex.c,207
Aig_Man_t * Inter_ManFramesBmc( Aig_Man_t * pAig, int nFrames )Inter_ManFramesBmc46,1341
void * Inter_ManGetCounterExample( Aig_Man_t * pAig, int nFrames, int fVerbose )Inter_ManGetCounterExample95,3057

src/proof/dch/dch.h,1444
#define ABC__aig__dch__dch_hABC__aig__dch__dch_h22,543
typedef struct Dch_Pars_t_ Dch_Pars_t;Dch_Pars_t43,1288
struct Dch_Pars_t_Dch_Pars_t_44,1327
    int              nWords;        // the number of simulation wordsnWords46,1348
    int              nBTLimit;      // conflict limit at a nodenBTLimit47,1418
    int              nSatVarMax;    // the max number of SAT variablesnSatVarMax48,1482
    int              fSynthesis;    // set to 1 to perform synthesisfSynthesis49,1553
    int              fPolarFlip;    // uses polarity adjustmentfPolarFlip50,1622
    int              fSimulateTfo;  // uses simulation of TFO classesfSimulateTfo51,1686
    int              fPower;        // uses power-aware rewritingfPower52,1756
    int              fUseGia;       // uses GIA package fUseGia53,1822
    int              fUseCSat;      // uses circuit-based solverfUseCSat54,1879
    int              fLightSynth;   // uses lighter version of synthesisfLightSynth55,1944
    int              fSkipRedSupp;  // skip choices with redundant support varsfSkipRedSupp56,2017
    int              fVerbose;      // verbose statsfVerbose57,2097
    abctime          timeSynth;     // synthesis runtimetimeSynth58,2150
    int              nNodesAhead;   // the lookahead in terms of nodesnNodesAhead59,2207
    int              nCallsRecycle; // calls to perform before recycling SAT solvernCallsRecycle60,2278

src/proof/dch/dchSat.c,101
int Dch_NodesAreEquiv( Dch_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew )Dch_NodesAreEquiv45,1282

src/proof/dch/dchCore.c,347
void Dch_ManSetDefaultParams( Dch_Pars_t * p )Dch_ManSetDefaultParams45,1279
int Dch_ManReadVerbose( Dch_Pars_t * p )Dch_ManReadVerbose73,2396
Aig_Man_t * Dch_ComputeChoices( Aig_Man_t * pAig, Dch_Pars_t * pPars )Dch_ComputeChoices89,2783
void Dch_ComputeEquivalences( Aig_Man_t * pAig, Dch_Pars_t * pPars )Dch_ComputeEquivalences134,4334

src/proof/dch/dchSimSat.c,646
void Dch_ManCollectTfoCands_rec( Dch_Man_t * p, Aig_Obj_t * pObj )Dch_ManCollectTfoCands_rec45,1318
void Dch_ManCollectTfoCands( Dch_Man_t * p, Aig_Obj_t * pObj1, Aig_Obj_t * pObj2 )Dch_ManCollectTfoCands84,2504
void Dch_ManResimulateSolved_rec( Dch_Man_t * p, Aig_Obj_t * pObj )Dch_ManResimulateSolved_rec111,3434
void Dch_ManResimulateOther_rec( Dch_Man_t * p, Aig_Obj_t * pObj )Dch_ManResimulateOther_rec149,4841
void Dch_ManResimulateCex( Dch_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pRepr )Dch_ManResimulateCex177,5688
void Dch_ManResimulateCex2( Dch_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pRepr )Dch_ManResimulateCex2225,7446

src/proof/dch/dchClass.c,3438
struct Dch_Cla_t_Dch_Cla_t_36,1099
    Aig_Man_t *      pAig;             // original AIG managerpAig39,1144
    Aig_Obj_t ***    pId2Class;        // non-const classes by ID of repr nodepId2Class40,1207
    int *            pClassSizes;      // sizes of each equivalence classpClassSizes41,1286
    int              nClasses;         // the total number of non-const classesnClasses43,1378
    int              nCands1;          // the total number of const candidatesnCands144,1458
    int              nLits;            // the number of literals in all classesnLits45,1537
    Aig_Obj_t **     pMemClasses;      // memory allocated for equivalence classespMemClasses47,1631
    Aig_Obj_t **     pMemClassesFree;  // memory allocated for equivalence classes to be usedpMemClassesFree48,1714
    Vec_Ptr_t *      vClassOld;        // old equivalence class after splittingvClassOld50,1830
    Vec_Ptr_t *      vClassNew;        // new equivalence class(es) after splittingvClassNew51,1910
    void *           pManData;pManData53,2038
    unsigned (*pFuncNodeHash) (void *,Aig_Obj_t *);              // returns hash key of the nodepFuncNodeHash54,2069
    int (*pFuncNodeIsConst)   (void *,Aig_Obj_t *);              // returns 1 if the node is a constantpFuncNodeIsConst55,2166
    int (*pFuncNodesAreEqual) (void *,Aig_Obj_t *, Aig_Obj_t *); // returns 1 if nodes are equal up to a complementpFuncNodesAreEqual56,2270
static inline Aig_Obj_t *  Dch_ObjNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj )                       { return ppNexts[pObj->Id];  }Dch_ObjNext63,2610
static inline void         Dch_ObjSetNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj, Aig_Obj_t * pNext ) { ppNexts[pObj->Id] = pNext; }Dch_ObjSetNext64,2744
#define Dch_ManForEachClass(Dch_ManForEachClass67,2923
#define Dch_ClassForEachNode(Dch_ClassForEachNode71,3153
static inline void Dch_ObjAddClass( Dch_Cla_t * p, Aig_Obj_t * pRepr, Aig_Obj_t ** pClass, int nSize ) Dch_ObjAddClass90,3834
static inline Aig_Obj_t ** Dch_ObjRemoveClass( Dch_Cla_t * p, Aig_Obj_t * pRepr ) Dch_ObjRemoveClass112,4449
Dch_Cla_t * Dch_ClassesStart( Aig_Man_t * pAig )Dch_ClassesStart137,5113
void Dch_ClassesSetData( Dch_Cla_t * p, void * pManData, Dch_ClassesSetData163,5896
void Dch_ClassesStop( Dch_Cla_t * p )Dch_ClassesStop185,6728
int Dch_ClassesLitNum( Dch_Cla_t * p )Dch_ClassesLitNum206,7273
Aig_Obj_t ** Dch_ClassesReadClass( Dch_Cla_t * p, Aig_Obj_t * pRepr, int * pnSize )Dch_ClassesReadClass222,7615
void Dch_ClassesCheck( Dch_Cla_t * p )Dch_ClassesCheck241,8144
void Dch_ClassesPrintOne( Dch_Cla_t * p, Aig_Obj_t * pRepr )Dch_ClassesPrintOne282,9252
void Dch_ClassesPrint( Dch_Cla_t * p, int fVeryVerbose )Dch_ClassesPrint303,9802
void Dch_ClassesPrepare( Dch_Cla_t * p, int fLatchCorr, int nMaxLevs )Dch_ClassesPrepare336,10842
int Dch_ClassesRefineOneClass( Dch_Cla_t * p, Aig_Obj_t * pReprOld, int fRecursive )Dch_ClassesRefineOneClass443,14546
int Dch_ClassesRefine( Dch_Cla_t * p )Dch_ClassesRefine504,16501
void Dch_ClassesCollectOneClass( Dch_Cla_t * p, Aig_Obj_t * pRepr, Vec_Ptr_t * vRoots )Dch_ClassesCollectOneClass525,16998
void Dch_ClassesCollectConst1Group( Dch_Cla_t * p, Aig_Obj_t * pObj, int nNodes, Vec_Ptr_t * vRoots )Dch_ClassesCollectConst1Group546,17553
int Dch_ClassesRefineConst1Group( Dch_Cla_t * p, Vec_Ptr_t * vRoots, int fRecursive )Dch_ClassesRefineConst1Group570,18244

src/proof/dch/dchMan.c,288
Dch_Man_t * Dch_ManCreate( Aig_Man_t * pAig, Dch_Pars_t * pPars )Dch_ManCreate45,1262
void Dch_ManPrintStats( Dch_Man_t * p )Dch_ManPrintStats77,2266
void Dch_ManStop( Dch_Man_t * p )Dch_ManStop122,4377
void Dch_ManSatSolverRecycle( Dch_Man_t * p )Dch_ManSatSolverRecycle153,5172

src/proof/dch/dchInt.h,3774
#define ABC__aig__dch__dchInt_hABC__aig__dch__dchInt_h22,551
typedef struct Dch_Cla_t_ Dch_Cla_t;Dch_Cla_t47,1374
typedef struct Dch_Man_t_ Dch_Man_t;Dch_Man_t50,1432
struct Dch_Man_t_Dch_Man_t_51,1469
    Dch_Pars_t *     pPars;          // choicing parameterspPars54,1507
    Aig_Man_t *      pAigTotal;      // intermediate AIGpAigTotal57,1657
    Aig_Man_t *      pAigFraig;      // final AIGpAigFraig58,1714
    Dch_Cla_t *      ppClasses;      // equivalence classes of nodesppClasses60,1791
    Aig_Obj_t **     pReprsProved;   // equivalences provedpReprsProved61,1860
    sat_solver *     pSat;           // recyclable SAT solverpSat63,1939
    int              nSatVars;       // the counter of SAT variablesnSatVars64,2001
    int *            pSatVars;       // mapping of each node into its SAT varpSatVars65,2070
    Vec_Ptr_t *      vUsedNodes;     // nodes whose SAT vars are assignedvUsedNodes66,2148
    int              nRecycles;      // the number of times SAT solver was recyclednRecycles67,2222
    int              nCallsSince;    // the number of calls since the last recyclenCallsSince68,2306
    Vec_Ptr_t *      vFanins;        // fanins of the CNF nodevFanins69,2389
    Vec_Ptr_t *      vSimRoots;      // the roots of cand const 1 nodes to simulatevSimRoots70,2452
    Vec_Ptr_t *      vSimClasses;    // the roots of cand equiv classes to simulatevSimClasses71,2536
    int              nConeThis;nConeThis73,2644
    int              nConeMax;nConeMax74,2676
    int              nSatCalls;      // the number of SAT callsnSatCalls76,2735
    int              nSatProof;      // the number of proofsnSatProof77,2799
    int              nSatFailsReal;  // the number of timeoutsnSatFailsReal78,2860
    int              nSatCallsUnsat; // the number of unsat SAT callsnSatCallsUnsat79,2923
    int              nSatCallsSat;   // the number of sat SAT callsnSatCallsSat80,2993
    int              nLits;          // the number of lits in the cand equiv classesnLits82,3091
    int              nReprs;         // the number of proved equivalent pairsnReprs83,3176
    int              nEquivs;        // the number of final equivalencesnEquivs84,3254
    int              nChoices;       // the number of final choice nodesnChoices85,3327
    abctime          timeSimInit;    // simulation and class computationtimeSimInit87,3421
    abctime          timeSimSat;     // simulation of the counter-examplestimeSimSat88,3494
    abctime          timeSat;        // solving SATtimeSat89,3569
    abctime          timeSatSat;     // sattimeSatSat90,3621
    abctime          timeSatUnsat;   // unsattimeSatUnsat91,3665
    abctime          timeSatUndec;   // undecidedtimeSatUndec92,3711
    abctime          timeChoice;     // choice computationtimeChoice93,3761
    abctime          timeOther;      // other runtimetimeOther94,3820
    abctime          timeTotal;      // total runtimetimeTotal95,3874
static inline int  Dch_ObjSatNum( Dch_Man_t * p, Aig_Obj_t * pObj )             { return p->pSatVars[pObj->Id]; }Dch_ObjSatNum102,4152
static inline void Dch_ObjSetSatNum( Dch_Man_t * p, Aig_Obj_t * pObj, int Num ) { p->pSatVars[pObj->Id] = Num;  }Dch_ObjSetSatNum103,4266
static inline Aig_Obj_t * Dch_ObjFraig( Aig_Obj_t * pObj )                       { return (Aig_Obj_t *)pObj->pData;  }Dch_ObjFraig105,4381
static inline void        Dch_ObjSetFraig( Aig_Obj_t * pObj, Aig_Obj_t * pNode ) { pObj->pData = pNode; }Dch_ObjSetFraig106,4500
static inline int  Dch_ObjIsConst1Cand( Aig_Man_t * pAig, Aig_Obj_t * pObj ) Dch_ObjIsConst1Cand108,4607
static inline void Dch_ObjSetConst1Cand( Aig_Man_t * pAig, Aig_Obj_t * pObj ) Dch_ObjSetConst1Cand112,4748

src/proof/dch/dchSweep.c,604
static inline Aig_Obj_t * Dch_ObjChild0Fra( Aig_Obj_t * pObj ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond(Dch_ObjFraig(Aig_ObjFanin0(pObj)), Aig_ObjFaninC0(pObj)) : NULL;  }Dch_ObjChild0Fra31,820
static inline Aig_Obj_t * Dch_ObjChild1Fra( Aig_Obj_t * pObj ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond(Dch_ObjFraig(Aig_ObjFanin1(pObj)), Aig_ObjFaninC1(pObj)) : NULL;  }Dch_ObjChild1Fra32,1028
void Dch_ManSweepNode( Dch_Man_t * p, Aig_Obj_t * pObj )Dch_ManSweepNode49,1747
void Dch_ManSweep( Dch_Man_t * p )Dch_ManSweep106,3584

src/proof/dch/dchCnf.c,630
void Dch_AddClausesMux( Dch_Man_t * p, Aig_Obj_t * pNode )Dch_AddClausesMux45,1265
void Dch_AddClausesSuper( Dch_Man_t * p, Aig_Obj_t * pNode, Vec_Ptr_t * vSuper )Dch_AddClausesSuper164,5409
void Dch_CollectSuper_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Dch_CollectSuper_rec217,7242
void Dch_CollectSuper( Aig_Obj_t * pObj, int fUseMuxes, Vec_Ptr_t * vSuper )Dch_CollectSuper243,8063
void Dch_ObjAddToFrontier( Dch_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vFrontier )Dch_ObjAddToFrontier262,8571
void Dch_CnfNodeAddToSolver( Dch_Man_t * p, Aig_Obj_t * pObj )Dch_CnfNodeAddToSolver287,9267

src/proof/dch/dchSim.c,824
static inline unsigned * Dch_ObjSim( Vec_Ptr_t * vSims, Aig_Obj_t * pObj )Dch_ObjSim30,808
static inline unsigned Dch_ObjRandomSim()    Dch_ObjRandomSim34,945
int Dch_NodeIsConstCex( void * p, Aig_Obj_t * pObj )Dch_NodeIsConstCex54,1552
int Dch_NodesAreEqualCex( void * p, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Dch_NodesAreEqualCex70,1921
unsigned Dch_NodeHash( void * p, Aig_Obj_t * pObj )Dch_NodeHash86,2374
int Dch_NodeIsConst( void * p, Aig_Obj_t * pObj )Dch_NodeIsConst134,4142
int Dch_NodesAreEqual( void * p, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Dch_NodesAreEqual167,4932
void Dch_PerformRandomSimulation( Aig_Man_t * pAig, Vec_Ptr_t * vSims )Dch_PerformRandomSimulation201,5825
Dch_Cla_t * Dch_CreateCandEquivClasses( Aig_Man_t * pAig, int nWords, int fVerbose )Dch_CreateCandEquivClasses264,7851

src/proof/dch/dchAig.c,173
void Dch_DeriveTotalAig_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Dch_DeriveTotalAig_rec45,1262
Aig_Man_t * Dch_DeriveTotalAig( Vec_Ptr_t * vAigs )Dch_DeriveTotalAig65,1820

src/proof/dch/dchChoice.c,1870
int Dch_ObjCountSupp_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Dch_ObjCountSupp_rec45,1268
int Dch_ObjCountSupp( Aig_Man_t * p, Aig_Obj_t * pObj )Dch_ObjCountSupp58,1672
int Dch_DeriveChoiceCountReprs( Aig_Man_t * pAig )Dch_DeriveChoiceCountReprs75,2081
int Dch_DeriveChoiceCountEquivs( Aig_Man_t * pAig )Dch_DeriveChoiceCountEquivs89,2412
int Dch_ObjMarkTfi_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Dch_ObjMarkTfi_rec115,3068
int Dch_ObjCheckSuppRed( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pRepr )Dch_ObjCheckSuppRed135,3711
void Aig_ManCheckReprs( Aig_Man_t * p )Aig_ManCheckReprs163,4647
void Dch_CheckChoices( Aig_Man_t * p, int fSkipRedSupps )Dch_CheckChoices206,6080
int Aig_ManCheckAcyclic_rec( Aig_Man_t * p, Aig_Obj_t * pNode, int fVerbose )Aig_ManCheckAcyclic_rec257,7957
int Aig_ManCheckAcyclic( Aig_Man_t * p, int fVerbose )Aig_ManCheckAcyclic331,10601
int Dch_ObjCheckTfi_rec( Aig_Man_t * p, Aig_Obj_t * pObj )Dch_ObjCheckTfi_rec372,11877
int Dch_ObjCheckTfi( Aig_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pRepr )Dch_ObjCheckTfi393,12500
static inline Aig_Obj_t * Aig_ObjGetRepr( Aig_Man_t * p, Aig_Obj_t * pObj )Aig_ObjGetRepr422,13381
static inline Aig_Obj_t * Aig_ObjChild0CopyRepr( Aig_Man_t * p, Aig_Obj_t * pObj ) { return Aig_ObjGetRepr( p, Aig_ObjChild0Copy(pObj) ); }Aig_ObjChild0CopyRepr429,13661
static inline Aig_Obj_t * Aig_ObjChild1CopyRepr( Aig_Man_t * p, Aig_Obj_t * pObj ) { return Aig_ObjGetRepr( p, Aig_ObjChild1Copy(pObj) ); }Aig_ObjChild1CopyRepr430,13801
void Dch_DeriveChoiceAigNode( Aig_Man_t * pAigNew, Aig_Man_t * pAigOld, Aig_Obj_t * pObj, int fSkipRedSupps )Dch_DeriveChoiceAigNode443,14226
Aig_Man_t * Dch_DeriveChoiceAigInt( Aig_Man_t * pAig, int fSkipRedSupps )Dch_DeriveChoiceAigInt501,16395
Aig_Man_t * Dch_DeriveChoiceAig( Aig_Man_t * pAig, int fSkipRedSupps )Dch_DeriveChoiceAig524,17366

src/proof/int2/int2Int.h,1826
#define ABC__Gia__int2__intInt_hABC__Gia__int2__intInt_h22,537
typedef struct Int2_Man_t_ Int2_Man_t;Int2_Man_t45,1386
struct Int2_Man_t_Int2_Man_t_46,1425
    Int2_ManPars_t * pPars;        // parameterspPars49,1464
    Gia_Man_t *      pGia;         // original managerpGia51,1533
    Gia_Man_t *      pGiaPref;     // prefix managerpGiaPref52,1588
    Gia_Man_t *      pGiaSuff;     // suffix managerpGiaSuff53,1641
    Vec_Int_t *      vSuffCis;     // suffix CIsvSuffCis55,1723
    Vec_Int_t *      vSuffCos;     // suffix COsvSuffCos56,1772
    Vec_Int_t *      vPrefCos;     // suffix POsvPrefCos57,1821
    Vec_Int_t *      vStack;       // temporary stackvStack58,1870
    Vec_Int_t *      vImageOne;    // latest preimagevImageOne60,1941
    Vec_Int_t *      vImagesAll;   // cumulative preimagevImagesAll61,1995
    Vec_Ptr_t *      vMapFrames;   // mapping of GIA IDs into frame IDsvMapFrames63,2074
    Vec_Int_t *      vMapPref;     // mapping of flop inputs into SAT variablesvMapPref64,2146
    Vec_Int_t *      vMapSuff;     // mapping of flop outputs into SAT variablesvMapSuff65,2226
    Vec_Int_t *      vAssign;      // assignment of PIs in pGiaSuffvAssign67,2335
    Vec_Int_t *      vPrio;        // priority of PIs in pGiaSuffvPrio68,2403
    sat_solver *     pSatPref;     // prefix solverpSatPref70,2488
    sat_solver *     pSatSuff;     // suffix solverpSatSuff71,2540
    abctime          timeSatPref;timeSatPref73,2607
    abctime          timeSatSuff;timeSatSuff74,2641
    abctime          timeOther;timeOther75,2675
    abctime          timeTotal;timeTotal76,2707
static inline Int2_Man_t * Int2_ManCreate( Gia_Man_t * pGia, Int2_ManPars_t * pPars )Int2_ManCreate79,2743
static inline void Int2_ManStop( Int2_Man_t * p )Int2_ManStop105,3738

src/proof/int2/int2Util.c,416
Vec_Int_t * Int2_ManComputeCoPres( Vec_Int_t * vSop, int nRegs )Int2_ManComputeCoPres45,1224
void Int2_ManCollectInternal_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes )Int2_ManCollectInternal_rec72,1986
Vec_Int_t * Int2_ManCollectInternal( Gia_Man_t * p, Vec_Int_t * vCoPres )Int2_ManCollectInternal84,2435
Gia_Man_t * Int2_ManProbToGia( Gia_Man_t * p, Vec_Int_t * vSop )Int2_ManProbToGia98,2922

src/proof/int2/int2.h,1093
#define ABC__aig__int2__int_hABC__aig__int2__int_h22,528
typedef struct Int2_ManPars_t_ Int2_ManPars_t;Int2_ManPars_t50,1551
struct Int2_ManPars_t_Int2_ManPars_t_51,1598
    int     nBTLimit;       // limit on the number of conflictsnBTLimit53,1623
    int     nFramesS;       // the starting number timeframesnFramesS54,1687
    int     nFramesMax;     // the max number timeframes to unrollnFramesMax55,1749
    int     nSecLimit;      // time limit in secondsnSecLimit56,1816
    int     nFramesK;       // the number of timeframes to use in inductionnFramesK57,1869
    int     fRewrite;       // use additional rewriting to simplify timeframesfRewrite58,1945
    int     fTransLoop;     // add transition into the init state under new PI varfTransLoop59,2024
    int     fDropInvar;     // dump inductive invariant into filefDropInvar60,2107
    int     fVerbose;       // print verbose statisticsfVerbose61,2173
    int     iFrameMax;      // the time frame reachediFrameMax62,2229
    char *  pFileName;      // file name to dump interpolantpFileName63,2283

src/proof/int2/int2Bmc.c,765
Gia_Man_t * Int2_ManDupInit( Gia_Man_t * p, int fVerbose )Int2_ManDupInit46,1274
int Int2_ManCheckInit( Gia_Man_t * p )Int2_ManCheckInit92,2842
Gia_Man_t * Int2_ManFrameInit( Gia_Man_t * p, int nFrames, int fVerbose )Int2_ManFrameInit136,4245
sat_solver * Int2_ManSetupBmcSolver( Gia_Man_t * p, int nFrames )Int2_ManSetupBmcSolver170,5547
static inline int Int2_ManCheckFrames( Int2_Man_t * p, int iFrame, int iObj )Int2_ManCheckFrames208,6801
static inline void Int2_ManWriteFrames( Int2_Man_t * p, int iFrame, int iObj, int iRes )Int2_ManWriteFrames213,7003
void Int2_ManCreateFrames( Int2_Man_t * p, int iFrame, Vec_Int_t * vPrefCos )Int2_ManCreateFrames219,7273
int Int2_ManCheckBmc( Int2_Man_t * p, Vec_Int_t * vCube )Int2_ManCheckBmc318,11106

src/proof/int2/int2Refine.c,225
void Int2_ManJustify_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSelect )Int2_ManJustify_rec45,1228
Vec_Int_t * Int2_ManRefineCube( Gia_Man_t * p, Vec_Int_t * vAssign, Vec_Int_t * vPrio )Int2_ManRefineCube104,3272

src/proof/int2/int2Core.c,760
void Int2_ManSetDefaultParams( Int2_ManPars_t * p )Int2_ManSetDefaultParams45,1285
Gia_Man_t * Int2_ManUnroll( Gia_Man_t * p, int nFrames )Int2_ManUnroll70,2280
sat_solver * Int2_ManPreparePrefix( Gia_Man_t * p, int f, Vec_Int_t ** pvCiMap )Int2_ManPreparePrefix99,3383
sat_solver * Int2_ManPrepareSuffix( Gia_Man_t * p, Vec_Int_t * vImageOne, Vec_Int_t * vImagesAll, Vec_Int_t ** pvCoMap, Gia_Man_t ** ppSuff )Int2_ManPrepareSuffix132,4351
Vec_Int_t * Int2_ManComputePreimage( Gia_Man_t * pSuff, sat_solver * pSatPref, sat_solver * pSatSuff, Vec_Int_t * vCiMap, Vec_Int_t * vCoMap, Vec_Int_t * vPrio )Int2_ManComputePreimage197,6344
int Int2_ManPerformInterpolation( Gia_Man_t * pInit, Int2_ManPars_t * pPars )Int2_ManPerformInterpolation259,8671

src/proof/abs/absOldRef.c,1210
void Gia_ManAbsSetDefaultParams( Gia_ParAbs_t * p )Gia_ManAbsSetDefaultParams50,1418
Abc_Cex_t * Saig_ManCexRemap( Aig_Man_t * p, Aig_Man_t * pAbs, Abc_Cex_t * pCexAbs )Saig_ManCexRemap84,2822
int Saig_ManCexFirstFlopPi( Aig_Man_t * p, Aig_Man_t * pAbs )Saig_ManCexFirstFlopPi134,4476
Aig_Man_t * Saig_ManCexRefine( Aig_Man_t * p, Aig_Man_t * pAbs, Vec_Int_t * vFlops, int nFrames, int nConfMaxOne, int fUseBdds, int fUseDprove, int fVerbose, int * pnUseStart, int * piRetValue, int * pnFrames )Saig_ManCexRefine158,5041
int Saig_ManCexRefineStep( Aig_Man_t * p, Vec_Int_t * vFlops, Vec_Int_t * vFlopClasses, Abc_Cex_t * pCex, int nFfToAddMax, int fTryFour, int fSensePath, int fVerbose )Saig_ManCexRefineStep255,8667
Vec_Int_t * Gia_ManClasses2Flops( Vec_Int_t * vFlopClasses )Gia_ManClasses2Flops329,11616
Vec_Int_t * Gia_ManFlops2Classes( Gia_Man_t * pGia, Vec_Int_t * vFlops )Gia_ManFlops2Classes351,12154
int Gia_ManCexAbstractionRefine( Gia_Man_t * pGia, Abc_Cex_t * pCex, int nFfToAddMax, int fTryFour, int fSensePath, int fVerbose )Gia_ManCexAbstractionRefine372,12732
Vec_Int_t * Saig_ManCexAbstractionFlops( Aig_Man_t * p, Gia_ParAbs_t * pPars )Saig_ManCexAbstractionFlops409,13892

src/proof/abs/absRef.h,3277
#define ABC__proof_abs__AbsRef_hABC__proof_abs__AbsRef_h22,533
typedef struct Rnm_Obj_t_ Rnm_Obj_t; // refinement objectRnm_Obj_t45,1478
struct Rnm_Obj_t_Rnm_Obj_t_46,1536
    unsigned        Value     :  1;  // binary valueValue48,1556
    unsigned        fVisit    :  1;  // visited objectfVisit49,1609
    unsigned        fVisitJ   :  1;  // justified visited objectfVisitJ50,1664
    unsigned        fPPi      :  1;  // PPI objectfPPi51,1729
    unsigned        Prio      : 24;  // priority (0 - highest)Prio52,1780
typedef struct Rnm_Man_t_ Rnm_Man_t; // refinement managerRnm_Man_t55,1847
struct Rnm_Man_t_Rnm_Man_t_56,1906
    Gia_Man_t *     pGia;            // working AIG manager (it is completely owned by this package)pGia59,1943
    Abc_Cex_t *     pCex;            // counter-examplepCex60,2044
    Vec_Int_t *     vMap;            // mapping of CEX inputs into objects (PI + PPI, in any order)vMap61,2100
    int             fPropFanout;     // propagate fanoutsfPropFanout62,2200
    int             fVerbose;        // verbose flagfVerbose63,2258
    int             nRefId;          // refinement IDnRefId64,2311
    Vec_Int_t *     vObjs;           // internal objects used in value propagationvObjs66,2388
    Vec_Str_t *     vCounts;         // fanin countersvCounts68,2508
    Vec_Int_t *     vFanins;         // faninsvFanins69,2563
    Rnm_Obj_t *     pObjs;           // refinement objectspObjs78,2921
    int             nObjs;           // the number of used objectsnObjs79,2980
    int             nObjsAlloc;      // the number of allocated objectsnObjsAlloc80,3047
    int             nObjsFrame;      // the number of used objects in each framenObjsFrame81,3119
    int             nCalls;          // total number of callsnCalls82,3200
    int             nRefines;        // total refined objectsnRefines83,3262
    int             nVisited;        // visited during justificationnVisited84,3324
    abctime         timeFwd;         // forward propagationtimeFwd86,3413
    abctime         timeBwd;         // backward propagationtimeBwd87,3473
    abctime         timeVer;         // ternary simulationtimeVer88,3534
    abctime         timeTotal;       // other timetimeTotal89,3593
static inline Rnm_Obj_t * Rnm_ManObj( Rnm_Man_t * p, Gia_Obj_t * pObj, int f )  Rnm_ManObj93,3683
static inline void  Rnm_ManSetRefId( Rnm_Man_t * p, int RefId )               { p->nRefId = RefId; }Rnm_ManSetRefId100,3973
static inline int   Rnm_ObjCount( Rnm_Man_t * p, Gia_Obj_t * pObj )           { return Vec_StrEntry( p->vCounts, Gia_ObjId(p->pGia, pObj) );                           }Rnm_ObjCount102,4075
static inline void  Rnm_ObjSetCount( Rnm_Man_t * p, Gia_Obj_t * pObj, int c ) { Vec_StrWriteEntry( p->vCounts, Gia_ObjId(p->pGia, pObj), (char)c );                    }Rnm_ObjSetCount103,4244
static inline int   Rnm_ObjAddToCount( Rnm_Man_t * p, Gia_Obj_t * pObj )      { int c = Rnm_ObjCount(p, pObj); if ( c < 16 )  Rnm_ObjSetCount(p, pObj, c+1); return c; }Rnm_ObjAddToCount104,4413
static inline int   Rnm_ObjIsJust( Rnm_Man_t * p, Gia_Obj_t * pObj )          { return Gia_ObjIsConst0(pObj) || (pObj->Value && Rnm_ManObj(p, pObj, 0)->fVisitJ);      }Rnm_ObjIsJust106,4583

src/proof/abs/absUtil.c,751
void Abs_ParSetDefaults( Abs_Par_t * p )Abs_ParSetDefaults44,1263
Vec_Int_t * Gia_VtaConvertToGla( Gia_Man_t * p, Vec_Int_t * vVta )Gia_VtaConvertToGla78,2893
Vec_Int_t * Gia_VtaConvertFromGla( Gia_Man_t * p, Vec_Int_t * vGla, int nFrames )Gia_VtaConvertFromGla111,3934
void Gia_FlaConvertToGla_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vGla )Gia_FlaConvertToGla_rec149,5168
Vec_Int_t * Gia_FlaConvertToGla( Gia_Man_t * p, Vec_Int_t * vFla )Gia_FlaConvertToGla173,5880
Vec_Int_t * Gia_GlaConvertToFla( Gia_Man_t * p, Vec_Int_t * vGla )Gia_GlaConvertToFla208,7005
int Gia_GlaCountFlops( Gia_Man_t * p, Vec_Int_t * vGla )Gia_GlaCountFlops231,7562
int Gia_GlaCountNodes( Gia_Man_t * p, Vec_Int_t * vGla )Gia_GlaCountNodes240,7795

src/proof/abs/absOldSat.c,2334
typedef struct Saig_RefMan_t_ Saig_RefMan_t;Saig_RefMan_t33,872
struct Saig_RefMan_t_Saig_RefMan_t_34,917
    Aig_Man_t * pAig;       // user's AIGpAig37,958
    Abc_Cex_t * pCex;       // user's CEXpCex38,1000
    int         nInputs;    // the number of first inputs to skipnInputs39,1042
    int         fVerbose;   // verbose flagfVerbose40,1108
    Aig_Man_t * pFrames;    // unrolled timeframespFrames42,1169
    Vec_Int_t * vMapPiF2A;  // mapping of frame PIs into real PIsvMapPiF2A43,1220
Vec_Int_t * Saig_RefManReason2Inputs( Saig_RefMan_t * p, Vec_Int_t * vReasons )Saig_RefManReason2Inputs64,1940
Abc_Cex_t * Saig_RefManReason2Cex( Saig_RefMan_t * p, Vec_Int_t * vReasons )Saig_RefManReason2Cex93,2837
void Saig_RefManFindReason_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Int_t * vPrios, Vec_Int_t * vReasons )Saig_RefManFindReason_rec120,3724
Vec_Int_t * Saig_RefManFindReason( Saig_RefMan_t * p )Saig_RefManFindReason168,5403
void Saig_ManUnrollCollect_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vObjs, Vec_Int_t * vRoots )Saig_ManUnrollCollect_rec236,8033
Aig_Man_t * Saig_ManUnrollWithCex( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, Vec_Int_t ** pvMapPiF2A )Saig_ManUnrollWithCex264,8987
Saig_RefMan_t * Saig_RefManStart( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, int fVerbose )Saig_RefManStart363,12675
void Saig_RefManStop( Saig_RefMan_t * p )Saig_RefManStop386,13289
int Saig_RefManSetPhases( Saig_RefMan_t * p, Abc_Cex_t * pCare, int fValue1 )Saig_RefManSetPhases404,13694
Vec_Vec_t * Saig_RefManOrderLiterals( Saig_RefMan_t * p, Vec_Int_t * vVar2PiId, Vec_Int_t * vAssumps )Saig_RefManOrderLiterals438,15039
Abc_Cex_t * Saig_RefManCreateCex( Saig_RefMan_t * p, Vec_Int_t * vVar2PiId, Vec_Int_t * vAssumps )Saig_RefManCreateCex473,16260
Abc_Cex_t * Saig_RefManRunSat( Saig_RefMan_t * p, int fNewOrder )Saig_RefManRunSat502,17265
Vec_Int_t * Saig_RefManRefineWithSat( Saig_RefMan_t * p, Vec_Int_t * vAigPis )Saig_RefManRefineWithSat706,24427
Abc_Cex_t * Saig_ManFindCexCareBits( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, int fNewOrder, int fVerbose )Saig_ManFindCexCareBits866,30407
Vec_Int_t * Saig_ManExtendCounterExampleTest3( Aig_Man_t * pAig, int iFirstFlopPi, Abc_Cex_t * pCex, int fVerbose )Saig_ManExtendCounterExampleTest3930,32273

src/proof/abs/absVta.c,6634
#define VTA_LARGE VTA_LARGE27,617
typedef struct Vta_Obj_t_ Vta_Obj_t; // objectVta_Obj_t33,867
struct Vta_Obj_t_Vta_Obj_t_34,914
    int           iObj;iObj36,934
    int           iFrame;iFrame37,958
    int           iNext;iNext38,984
    unsigned      Prio   : 28;  // related to VTA_LARGEPrio39,1009
    unsigned      Value  :  2;Value40,1065
    unsigned      fAdded :  1;fAdded41,1096
    unsigned      fVisit :  1;fVisit42,1127
typedef struct Vta_Man_t_ Vta_Man_t; // managerVta_Man_t45,1162
struct Vta_Man_t_Vta_Man_t_46,1210
    Gia_Man_t *   pGia;         // AIG managerpGia49,1247
    Abs_Par_t *   pPars;        // parameterspPars50,1294
    int           nObjs;        // the number of objectsnObjs52,1361
    int           nObjsAlloc;   // the number of objects allocatednObjsAlloc53,1418
    int           nBins;        // number of hash table entriesnBins54,1485
    int *         pBins;        // hash table binspBins55,1549
    Vta_Obj_t *   pObjs;        // storage for objectspObjs56,1600
    Vec_Int_t *   vOrder;       // objects in DPS ordervOrder57,1655
    int           nObjBits;     // the number of bits to represent objectsnObjBits59,1730
    unsigned      nObjMask;     // object masknObjMask60,1805
    Vec_Ptr_t *   vFrames;      // start abstraction for each framevFrames61,1852
    int           nWords;       // the number of words in the recordnWords62,1920
    int           nCexes;       // the number of CEXesnCexes63,1989
    int           nObjAdded;    // objects added to the abstractionnObjAdded64,2044
    Vec_Int_t *   vSeens;       // seen objectsvSeens65,2112
    Vec_Bit_t *   vSeenGla;     // seen objects in all framesvSeenGla66,2160
    int           nSeenGla;     // seen objects in all framesnSeenGla67,2222
    int           nSeenAll;     // seen objects in all framesnSeenAll68,2284
    Vec_Ptr_t *   vCores;       // unsat core for each framevCores70,2364
    sat_solver2 * pSat;         // incremental SAT solverpSat71,2425
    Vec_Int_t *   vAddedNew;    // the IDs of variables added to the solvervAddedNew72,2483
    abctime       timeSat;timeSat74,2578
    abctime       timeUnsat;timeUnsat75,2605
    abctime       timeCex;timeCex76,2634
    abctime       timeOther;timeOther77,2661
#define VTA_VAR0 VTA_VAR083,2718
#define VTA_VAR1 VTA_VAR184,2739
#define VTA_VARX VTA_VARX85,2760
static inline int Vta_ValIs0( Vta_Obj_t * pThis, int fCompl )Vta_ValIs087,2782
static inline int Vta_ValIs1( Vta_Obj_t * pThis, int fCompl )Vta_ValIs195,2991
static inline Vta_Obj_t *  Vta_ManObj( Vta_Man_t * p, int i )           { assert( i >= 0 && i < p->nObjs ); return i ? p->pObjs + i : NULL;                     }Vta_ManObj104,3201
static inline int          Vta_ObjId( Vta_Man_t * p, Vta_Obj_t * pObj ) { assert( pObj > p->pObjs && pObj < p->pObjs + p->nObjs ); return pObj - p->pObjs;      }Vta_ObjId105,3363
#define Vta_ManForEachObj(Vta_ManForEachObj107,3526
#define Vta_ManForEachObjObj(Vta_ManForEachObjObj109,3670
#define Vta_ManForEachObjObjReverse(Vta_ManForEachObjObjReverse111,3869
#define Vta_ManForEachObjVec(Vta_ManForEachObjVec114,4083
#define Vta_ManForEachObjVecReverse(Vta_ManForEachObjVecReverse116,4255
#define Vta_ManForEachObjObjVec(Vta_ManForEachObjObjVec119,4433
#define Vta_ManForEachObjObjVecReverse(Vta_ManForEachObjObjVecReverse121,4652
Vec_Ptr_t * Gia_VtaAbsToFrames( Vec_Int_t * vAbs )Gia_VtaAbsToFrames148,5729
Vec_Int_t * Gia_VtaFramesToAbs( Vec_Vec_t * vFrames )Gia_VtaFramesToAbs180,6710
static inline Vec_Int_t * Vta_ManDeriveAbsAll( Vec_Int_t * p, int nWords )Vta_ManDeriveAbsAll212,7719
int Vec_IntDoubleWidth( Vec_Int_t * p, int nWords )Vec_IntDoubleWidth241,8516
static inline int Vga_ManHash( int iObj, int iFrame, int nBins )Vga_ManHash269,9216
static inline int * Vga_ManLookup( Vta_Man_t * p, int iObj, int iFrame )Vga_ManLookup273,9355
static inline Vta_Obj_t * Vga_ManFind( Vta_Man_t * p, int iObj, int iFrame )Vga_ManFind284,9753
static inline Vta_Obj_t * Vga_ManFindOrAdd( Vta_Man_t * p, int iObj, int iFrame )Vga_ManFindOrAdd289,9922
static inline void Vga_ManDelete( Vta_Man_t * p, int iObj, int iFrame )Vga_ManDelete321,10979
Abc_Cex_t * Vga_ManDeriveCex( Vta_Man_t * p )Vga_ManDeriveCex342,11522
void Vta_ManUnsatCoreRemap( Vta_Man_t * p, Vec_Int_t * vCore )Vta_ManUnsatCoreRemap368,12335
int Vta_ManComputeDepthIncrease( Vta_Obj_t ** pp1, Vta_Obj_t ** pp2 )Vta_ManComputeDepthIncrease391,12920
int Vta_ManObjIsUsed( Vta_Man_t * p, int iObj )Vta_ManObjIsUsed417,13512
static inline void Vta_ObjPreds( Vta_Man_t * p, Vta_Obj_t * pThis, Gia_Obj_t * pObj, Vta_Obj_t ** ppThis0, Vta_Obj_t ** ppThis1 )Vta_ObjPreds438,14020
void Vta_ManCollectNodes_rec( Vta_Man_t * p, Vta_Obj_t * pThis, Vec_Int_t * vOrder )Vta_ManCollectNodes_rec471,15146
Vec_Int_t * Vta_ManCollectNodes( Vta_Man_t * p, int f )Vta_ManCollectNodes487,15681
void Vta_ManSatVerify( Vta_Man_t * p )Vta_ManSatVerify512,16336
void Vta_ManProfileAddition( Vta_Man_t * p, Vec_Int_t * vTermsToAdd )Vta_ManProfileAddition557,17870
Abc_Cex_t * Vta_ManRefineAbstraction( Vta_Man_t * p, int f )Vta_ManRefineAbstraction581,18556
Vta_Man_t * Vga_ManStart( Gia_Man_t * pGia, Abs_Par_t * pPars )Vga_ManStart983,33097
void Vga_ManStop( Vta_Man_t * p )Vga_ManStop1033,34834
static inline int Vga_ManGetOutLit( Vta_Man_t * p, int f )Vga_ManGetOutLit1062,35808
Vec_Int_t * Vta_ManUnsatCore( int iLit, sat_solver2 * pSat, int nConfMax, int fVerbose, int * piRetValue, int * pnConfls )Vta_ManUnsatCore1083,36523
int Vta_ManAbsPrintFrame( Vta_Man_t * p, Vec_Int_t * vCore, int nFrames, int nConfls, int nCexes, abctime Time, int fVerbose )Vta_ManAbsPrintFrame1143,38356
void Vga_ManAddClausesOne( Vta_Man_t * p, int iObj, int iFrame )Vga_ManAddClausesOne1254,41960
void Vga_ManLoadSlice( Vta_Man_t * p, Vec_Int_t * vOne, int Lift )Vga_ManLoadSlice1313,43948
void Vga_ManPrintCore( Vta_Man_t * p, Vec_Int_t * vCore, int Lift )Vga_ManPrintCore1332,44438
void Vga_ManRollBack( Vta_Man_t * p, int nObjOld )Vga_ManRollBack1355,44993
void Gia_VtaSendAbsracted( Vta_Man_t * p, int fVerbose )Gia_VtaSendAbsracted1384,45907
void Gia_VtaSendCancel( Vta_Man_t * p, int fVerbose )Gia_VtaSendCancel1404,46698
void Gia_VtaDumpAbsracted( Vta_Man_t * p, int fVerbose )Gia_VtaDumpAbsracted1424,47311
void Gia_VtaPrintMemory( Vta_Man_t * p )Gia_VtaPrintMemory1458,48447
int Gia_VtaPerformInt( Gia_Man_t * pAig, Abs_Par_t * pPars )Gia_VtaPerformInt1492,49742
int Gia_VtaPerform( Gia_Man_t * pAig, Abs_Par_t * pPars )Gia_VtaPerform1743,60102

src/proof/abs/abs.h,6212
#define ABC__proof_abs__Abs_hABC__proof_abs__Abs_h22,527
typedef struct Abs_Par_t_ Abs_Par_t;Abs_Par_t46,1356
struct Abs_Par_t_Abs_Par_t_47,1393
    int            nFramesMax;         // maximum framesnFramesMax49,1413
    int            nFramesStart;       // starting frame nFramesStart50,1470
    int            nFramesPast;        // overlap framesnFramesPast51,1528
    int            nConfLimit;         // conflict limitnConfLimit52,1585
    int            nLearnedMax;        // max number of learned clausesnLearnedMax53,1642
    int            nLearnedStart;      // max number of learned clausesnLearnedStart54,1714
    int            nLearnedDelta;      // delta increase of learned clausesnLearnedDelta55,1786
    int            nLearnedPerce;      // percentage of clauses to leavenLearnedPerce56,1862
    int            nTimeOut;           // timeout in secondsnTimeOut57,1935
    int            nRatioMin;          // stop when less than this % of object is unabstractednRatioMin58,1996
    int            nRatioMin2;         // stop when less than this % of object is unabstracted during refinementnRatioMin259,2091
    int            nRatioMax;          // restart when the number of abstracted object is more than thisnRatioMax60,2204
    int            fUseTermVars;       // use terminal variablesfUseTermVars61,2309
    int            fUseRollback;       // use rollback to the starting number of framesfUseRollback62,2374
    int            fPropFanout;        // propagate fanout implicationsfPropFanout63,2462
    int            fAddLayer;          // refinement strategy by adding layersfAddLayer64,2534
    int            fNewRefine;         // uses new refinement heuristicsfNewRefine65,2613
    int            fUseSkip;           // skip proving intermediate timeframesfUseSkip66,2686
    int            fUseSimple;         // use simple CNF constructionfUseSimple67,2765
    int            fSkipHash;          // skip hashing CNF while unrollingfSkipHash68,2835
    int            fUseFullProof;      // use full proof for UNSAT coresfUseFullProof69,2910
    int            fDumpVabs;          // dumps the abstracted modelfDumpVabs70,2983
    int            fDumpMabs;          // dumps the original AIG with abstraction mapfDumpMabs71,3052
    int            fCallProver;        // calls the proverfCallProver72,3138
    int            fSimpProver;        // calls simplification before proverfSimpProver73,3197
    char *         pFileVabs;          // dumps the abstracted model into this filepFileVabs74,3274
    int            fVerbose;           // verbose flagfVerbose75,3358
    int            fVeryVerbose;       // print additional informationfVeryVerbose76,3413
    int            iFrame;             // the number of frames coverediFrame77,3484
    int            iFrameProved;       // the number of frames provediFrameProved78,3555
    int            nFramesNoChange;    // the number of last frames without changesnFramesNoChange79,3625
    int            nFramesNoChangeLim; // the number of last frames without changes to dump abstractionnFramesNoChangeLim80,3709
typedef struct Gia_ParAbs_t_ Gia_ParAbs_t;Gia_ParAbs_t84,3847
struct Gia_ParAbs_t_Gia_ParAbs_t_85,3890
    int            Algo;               // the algorithm to be usedAlgo87,3913
    int            nFramesMax;         // timeframes for PBAnFramesMax88,3980
    int            nConfMax;           // conflicts for PBAnConfMax89,4041
    int            fDynamic;           // dynamic unfolding for PBAfDynamic90,4101
    int            fConstr;            // use constraintsfConstr91,4169
    int            nFramesBmc;         // timeframes for BMCnFramesBmc92,4227
    int            nConfMaxBmc;        // conflicts for BMCnConfMaxBmc93,4288
    int            nStableMax;         // the number of stable frames to quitnStableMax94,4348
    int            nRatio;             // ratio of flops to quitnRatio95,4426
    int            TimeOut;            // approximate timeout in secondsTimeOut96,4491
    int            TimeOutVT;          // approximate timeout in secondsTimeOutVT97,4564
    int            nBobPar;            // Bob's parameternBobPar98,4637
    int            fUseBdds;           // use BDDs to refine abstractionfUseBdds99,4695
    int            fUseDprove;         // use 'dprove' to refine abstractionfUseDprove100,4768
    int            fUseStart;          // use starting framefUseStart101,4845
    int            fVerbose;           // verbose outputfVerbose102,4906
    int            fVeryVerbose;       // printing additional informationfVeryVerbose103,4963
    int            Status;             // the problem statusStatus104,5037
    int            nFramesDone;        // the number of frames coverednFramesDone105,5098
static inline int         Ga2_ObjOffset( Gia_Man_t * p, Gia_Obj_t * pObj )          { return Vec_IntEntry(p->vMapping, Gia_ObjId(p, pObj));                                                         }Ga2_ObjOffset112,5393
static inline int         Ga2_ObjLeaveNum( Gia_Man_t * p, Gia_Obj_t * pObj )        { return Vec_IntEntry(p->vMapping, Ga2_ObjOffset(p, pObj));                                                     }Ga2_ObjLeaveNum113,5591
static inline int *       Ga2_ObjLeavePtr( Gia_Man_t * p, Gia_Obj_t * pObj )        { return Vec_IntEntryP(p->vMapping, Ga2_ObjOffset(p, pObj) + 1);                                                }Ga2_ObjLeavePtr114,5789
static inline unsigned    Ga2_ObjTruth( Gia_Man_t * p, Gia_Obj_t * pObj )           { return (unsigned)Vec_IntEntry(p->vMapping, Ga2_ObjOffset(p, pObj) + Ga2_ObjLeaveNum(p, pObj) + 1);            }Ga2_ObjTruth115,5987
static inline int         Ga2_ObjRefNum( Gia_Man_t * p, Gia_Obj_t * pObj )          { return (unsigned)Vec_IntEntry(p->vMapping, Ga2_ObjOffset(p, pObj) + Ga2_ObjLeaveNum(p, pObj) + 2);            }Ga2_ObjRefNum116,6185
static inline Vec_Int_t * Ga2_ObjLeaves( Gia_Man_t * p, Gia_Obj_t * pObj )          { static Vec_Int_t v; v.nSize = Ga2_ObjLeaveNum(p, pObj), v.pArray = Ga2_ObjLeavePtr(p, pObj); return &v;       }Ga2_ObjLeaves117,6383

src/proof/abs/absDup.c,923
void Gia_ManDupAbsFlops_rec( Gia_Man_t * pNew, Gia_Obj_t * pObj )Gia_ManDupAbsFlops_rec44,1261
Gia_Man_t * Gia_ManDupAbsFlops( Gia_Man_t * p, Vec_Int_t * vFlopClasses )Gia_ManDupAbsFlops65,1898
Vec_Int_t * Gia_GlaCollectAssigned( Gia_Man_t * p, Vec_Int_t * vGateClasses )Gia_GlaCollectAssigned121,3590
void Gia_ManGlaCollect( Gia_Man_t * p, Vec_Int_t * vGateClasses, Vec_Int_t ** pvPis, Vec_Int_t ** pvPPis, Vec_Int_t ** pvFlops, Vec_Int_t ** pvNodes )Gia_ManGlaCollect158,4690
void Gia_ManDupAbsGates_rec( Gia_Man_t * pNew, Gia_Obj_t * pObj )Gia_ManDupAbsGates_rec198,6242
Gia_Man_t * Gia_ManDupAbsGates( Gia_Man_t * p, Vec_Int_t * vGateClasses )Gia_ManDupAbsGates220,6990
void Gia_ManPrintFlopClasses( Gia_Man_t * p )Gia_ManPrintFlopClasses301,9732
void Gia_ManPrintGateClasses( Gia_Man_t * p )Gia_ManPrintGateClasses331,10723
void Gia_ManPrintObjClasses( Gia_Man_t * p )Gia_ManPrintObjClasses367,12049

src/proof/abs/absRefJ.h,144
#define ABC__proof_abs__AbsRef2_hABC__proof_abs__AbsRef2_h22,570
typedef struct Rf2_Man_t_ Rf2_Man_t; // refinement managerRf2_Man_t40,1295

src/proof/abs/absRef.c,1087
Rnm_Man_t * Rnm_ManStart( Gia_Man_t * pGia )Rnm_ManStart264,10950
void Rnm_ManStop( Rnm_Man_t * p, int fProfile )Rnm_ManStop285,11626
double Rnm_ManMemoryUsage( Rnm_Man_t * p )Rnm_ManMemoryUsage317,13055
void Rnm_ManCollect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vObjs, int nAddOn )Rnm_ManCollect_rec334,13570
void Rnm_ManCollect( Rnm_Man_t * p )Rnm_ManCollect351,14196
void Rnm_ManCleanValues( Rnm_Man_t * p )Rnm_ManCleanValues375,15154
int Rnm_ManSensitize( Rnm_Man_t * p )Rnm_ManSensitize396,15658
void Rnm_ManJustifyPropFanout_rec( Rnm_Man_t * p, Gia_Obj_t * pObj, int f, Vec_Int_t * vSelect )Rnm_ManJustifyPropFanout_rec470,18489
void Rnm_ManJustify_rec( Rnm_Man_t * p, Gia_Obj_t * pObj, int f, Vec_Int_t * vSelect )Rnm_ManJustify_rec524,20608
void Rnm_ManVerifyUsingTerSim( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Int_t * vMap, Vec_Int_t * vObjs, Vec_Int_t * vRes )Rnm_ManVerifyUsingTerSim619,23679
Vec_Int_t * Rnm_ManRefine( Rnm_Man_t * p, Abc_Cex_t * pCex, Vec_Int_t * vMap, int fPropFanout, int fNewRefinement, int fVerbose )Rnm_ManRefine673,25424

src/proof/abs/absRefSelect.c,436
void Rnm_ManPrintSelected( Rnm_Man_t * p, Vec_Int_t * vNewPPis )Rnm_ManPrintSelected45,1286
void Ga2_StructAnalize( Gia_Man_t * p, Vec_Int_t * vFront, Vec_Int_t * vInter, Vec_Int_t * vNewPPis )Ga2_StructAnalize70,1986
Vec_Int_t * Rnm_ManFilterSelected( Rnm_Man_t * p, Vec_Int_t * vOldPPis )Rnm_ManFilterSelected126,3949
Vec_Int_t * Rnm_ManFilterSelectedNew( Rnm_Man_t * p, Vec_Int_t * vOldPPis )Rnm_ManFilterSelectedNew207,6876

src/proof/abs/absPth.c,327
void Gia_GlaProveAbsracted( Gia_Man_t * p, int fSimpProver, int fVerbose ) {}Gia_GlaProveAbsracted45,979
void Gia_GlaProveCancel( int fVerbose )                                    {}Gia_GlaProveCancel46,1057
int  Gia_GlaProveCheck( int fVerbose )                                     { return 0; }Gia_GlaProveCheck47,1135

src/proof/abs/abs.c,0

src/proof/abs/absRpmOld.c,332
Gia_Man_t * Gia_ManDupIn2Ff( Gia_Man_t * p )Gia_ManDupIn2Ff45,1317
int Gia_ManDupFf2In_rec( Gia_Man_t * pNew, Gia_Obj_t * pObj )Gia_ManDupFf2In_rec87,2760
Gia_Man_t * Gia_ManDupFf2In( Gia_Man_t * p, int nFlopsOld )Gia_ManDupFf2In108,3385
Gia_Man_t * Abs_RpmPerformOld( Gia_Man_t * p, int fVerbose )Abs_RpmPerformOld141,4444

src/proof/abs/absGlaOld.c,8651
typedef struct Rfn_Obj_t_ Rfn_Obj_t; // refinement objectRfn_Obj_t33,873
struct Rfn_Obj_t_Rfn_Obj_t_34,931
    unsigned       Value     :  1;  // valueValue36,951
    unsigned       fVisit    :  1;  // visitedfVisit37,996
    unsigned       fPPi      :  1;  // PPIfPPi38,1043
    unsigned       Prio      : 16;  // priorityPrio39,1086
    unsigned       Sign      : 12;  // traversal signatureSign40,1134
typedef struct Gla_Obj_t_ Gla_Obj_t; // abstraction objectGla_Obj_t43,1197
struct Gla_Obj_t_Gla_Obj_t_44,1256
    int            iGiaObj;         // corresponding GIA objiGiaObj46,1276
    unsigned       fAbs      :  1;  // belongs to abstractionfAbs47,1337
    unsigned       fCompl0   :  1;  // compl bit of the first faninfCompl048,1399
    unsigned       fConst    :  1;  // object attributefConst49,1467
    unsigned       fPi       :  1;  // object attributefPi50,1523
    unsigned       fPo       :  1;  // object attributefPo51,1579
    unsigned       fRo       :  1;  // object attributefRo52,1635
    unsigned       fRi       :  1;  // object attributefRi53,1691
    unsigned       fAnd      :  1;  // object attributefAnd54,1747
    unsigned       fMark     :  1;  // nearby objectfMark55,1803
    unsigned       nFanins   : 23;  // fanin countnFanins56,1856
    int            Fanins[4];       // faninsFanins57,1907
    Vec_Int_t      vFrames;         // variables in each timeframevFrames58,1953
typedef struct Gla_Man_t_ Gla_Man_t; // managerGla_Man_t61,2024
struct Gla_Man_t_Gla_Man_t_62,2072
    Gia_Man_t *    pGia0;           // starting AIG managerpGia065,2109
    Gia_Man_t *    pGia;            // working AIG managerpGia66,2169
    Abs_Par_t *    pPars;           // parameterspPars67,2228
    Vec_Int_t *    vAbs;            // abstracted objectsvAbs69,2299
    Gla_Obj_t *    pObjRoot;        // the primary outputpObjRoot70,2357
    Gla_Obj_t *    pObjs;           // objectspObjs71,2415
    unsigned *     pObj2Obj;        // mapping of GIA obj into GLA objpObj2Obj72,2462
    int            nObjs;           // the number of objectsnObjs73,2533
    int            nAbsOld;         // previous abstractionnAbsOld74,2594
    int            nCexes;          // the number of counter-examplesnCexes79,2856
    int            nObjAdded;       // total number of objects addednObjAdded80,2926
    int            nSatVars;        // the number of SAT variablesnSatVars81,2995
    Cnf_Dat_t *    pCnf;            // CNF derived for the nodespCnf82,3062
    sat_solver2 *  pSat;            // incremental SAT solverpSat83,3127
    Vec_Int_t *    vTemp;           // temporary arrayvTemp84,3189
    Vec_Int_t *    vAddedNew;       // temporary arrayvAddedNew85,3244
    Vec_Int_t *    vObjCounts;      // object countersvObjCounts86,3299
    Vec_Int_t *    vCoreCounts;     // counts how many times each object appears in the corevCoreCounts87,3354
    Vec_Int_t *    vProofIds;       // counts how many times each object appears in the corevProofIds88,3447
    int            nProofIds;       // proof ID counternProofIds89,3540
    Vec_Int_t *    pvRefis;         // vectors of each objectpvRefis91,3614
    Gia_Man_t *    pGia2;pGia293,3702
    Rnm_Man_t *    pRnm;pRnm94,3728
    abctime        timeInit;timeInit96,3773
    abctime        timeSat;timeSat97,3802
    abctime        timeUnsat;timeUnsat98,3830
    abctime        timeCex;timeCex99,3860
    abctime        timeOther;timeOther100,3888
static inline int         Gla_ObjId( Gla_Man_t * p, Gla_Obj_t * pObj )      { assert( pObj > p->pObjs && pObj < p->pObjs + p->nObjs ); return pObj - p->pObjs;    }Gla_ObjId109,4182
static inline Gla_Obj_t * Gla_ManObj( Gla_Man_t * p, int i )                { assert( i >= 0 && i < p->nObjs ); return i ? p->pObjs + i : NULL;                   }Gla_ManObj110,4346
static inline Gia_Obj_t * Gla_ManGiaObj( Gla_Man_t * p, Gla_Obj_t * pObj )  { return Gia_ManObj( p->pGia, pObj->iGiaObj );                                        }Gla_ManGiaObj111,4510
static inline int         Gla_ObjSatValue( Gla_Man_t * p, int iGia, int f ) { return Gla_ManCheckVar(p, p->pObj2Obj[iGia], f) ? sat_solver2_var_value( p->pSat, Gla_ManGetVar(p, p->pObj2Obj[iGia], f) ) : 0;  }Gla_ObjSatValue112,4674
static inline Rfn_Obj_t * Gla_ObjRef( Gla_Man_t * p, Gia_Obj_t * pObj, int f ) { return (Rfn_Obj_t *)Vec_IntGetEntryP( &(p->pvRefis[Gia_ObjId(p->pGia, pObj)]), f ); }Gla_ObjRef114,4884
static inline void        Gla_ObjClearRef( Rfn_Obj_t * p )                     { *((int *)p) = 0;                                                                    }Gla_ObjClearRef115,5051
#define Gla_ManForEachObj(Gla_ManForEachObj119,5259
#define Gla_ManForEachObjAbs(Gla_ManForEachObjAbs121,5389
#define Gla_ManForEachObjAbsVec(Gla_ManForEachObjAbsVec123,5555
#define Gla_ObjForEachFanin(Gla_ObjForEachFanin127,5767
void Gia_GlaPrepareCexAndMap( Gla_Man_t * p, Abc_Cex_t ** ppCex, Vec_Int_t ** pvMap )Gia_GlaPrepareCexAndMap149,6685
Abc_Cex_t * Gla_ManDeriveCex( Gla_Man_t * p, Vec_Int_t * vPis )Gla_ManDeriveCex188,7935
void Gla_ManCollectInternal_rec( Gia_Man_t * p, Gia_Obj_t * pGiaObj, Vec_Int_t * vRoAnds )Gla_ManCollectInternal_rec219,8883
void Gla_ManCollect( Gla_Man_t * p, Vec_Int_t * vPis, Vec_Int_t * vPPis, Vec_Int_t * vCos, Vec_Int_t * vRoAnds )Gla_ManCollect229,9309
void Gia_ManRefSetAndPropFanout_rec( Gla_Man_t * p, Gia_Obj_t * pObj, int f, Vec_Int_t * vSelect, int Sign )Gia_ManRefSetAndPropFanout_rec286,11379
void Gla_ManRefSelect_rec( Gla_Man_t * p, Gia_Obj_t * pObj, int f, Vec_Int_t * vSelect, int Sign )Gla_ManRefSelect_rec347,13669
void Gla_ManVerifyUsingTerSim( Gla_Man_t * p, Vec_Int_t * vPis, Vec_Int_t * vPPis, Vec_Int_t * vRoAnds, Vec_Int_t * vCos, Vec_Int_t * vRes )Gla_ManVerifyUsingTerSim436,16662
Vec_Int_t * Gla_ManRefinement( Gla_Man_t * p )Gla_ManRefinement499,18811
Vec_Int_t * Gla_ManRefinement2( Gla_Man_t * p )Gla_ManRefinement2535,19840
void Gla_ManCollectFanins( Gla_Man_t * p, Gla_Obj_t * pGla, int iObj, Vec_Int_t * vFanins )Gla_ManCollectFanins715,26266
void Gia_ManDupMapped_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Gia_Man_t * pNew )Gia_ManDupMapped_rec741,27165
Gia_Man_t * Gia_ManDupMapped( Gia_Man_t * p, Vec_Int_t * vMapping )Gia_ManDupMapped752,27647
Gla_Man_t * Gla_ManStart( Gia_Man_t * pGia0, Abs_Par_t * pPars )Gla_ManStart825,30146
Gla_Man_t * Gla_ManStart2( Gia_Man_t * pGia, Abs_Par_t * pPars )Gla_ManStart21002,36869
void Gla_ManStop( Gla_Man_t * p )Gla_ManStop1094,39979
int Gia_GlaAbsCount( Gla_Man_t * p, int fRo, int fAnd )Gia_GlaAbsCount1141,41415
int Gla_ManTranslate_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vGla, int nUsageCount )Gla_ManTranslate_rec1169,42172
Vec_Int_t * Gla_ManTranslate( Gla_Man_t * p )Gla_ManTranslate1184,42760
Vec_Int_t * Gla_ManCollectPPis( Gla_Man_t * p, Vec_Int_t * vPis )Gla_ManCollectPPis1234,44403
int Gla_ManCountPPis( Gla_Man_t * p )Gla_ManCountPPis1257,45130
void Gla_ManExplorePPis( Gla_Man_t * p, Vec_Int_t * vPPis )Gla_ManExplorePPis1264,45315
int Gla_ManCheckVar( Gla_Man_t * p, int iObj, int iFrame )Gla_ManCheckVar1298,46213
int Gla_ManGetVar( Gla_Man_t * p, int iObj, int iFrame )Gla_ManGetVar1305,46443
void Gla_ManAddClauses( Gla_Man_t * p, int iObj, int iFrame, Vec_Int_t * vLits )Gla_ManAddClauses1319,46892
void Gia_GlaAddToCounters( Gla_Man_t * p, Vec_Int_t * vCore )Gia_GlaAddToCounters1361,48437
void Gia_GlaAddToAbs( Gla_Man_t * p, Vec_Int_t * vAbsAdd, int fCheck )Gia_GlaAddToAbs1368,48648
void Gia_GlaAddTimeFrame( Gla_Man_t * p, int f )Gia_GlaAddTimeFrame1389,49319
void Gia_GlaAddOneSlice( Gla_Man_t * p, int fCur, Vec_Int_t * vCore )Gia_GlaAddOneSlice1397,49546
void Gla_ManRollBack( Gla_Man_t * p )Gla_ManRollBack1405,49821
int Gla_ManGetOutLit( Gla_Man_t * p, int f )Gla_ManGetOutLit1436,50622
Vec_Int_t * Gla_ManUnsatCore( Gla_Man_t * p, int f, sat_solver2 * pSat, int nConfMax, int fVerbose, int * piRetValue, int * pnConfls )Gla_ManUnsatCore1445,50944
void Gla_ManAbsPrintFrame( Gla_Man_t * p, int nCoreSize, int nFrames, int nConfls, int nCexes, abctime Time )Gla_ManAbsPrintFrame1509,52907
void Gla_ManReportMemory( Gla_Man_t * p )Gla_ManReportMemory1537,54316
void Gia_GlaSendAbsracted( Gla_Man_t * p, int fVerbose )Gia_GlaSendAbsracted1574,55812
void Gia_GlaSendCancel( Gla_Man_t * p, int fVerbose )Gia_GlaSendCancel1589,56352
void Gia_GlaDumpAbsracted( Gla_Man_t * p, int fVerbose )Gia_GlaDumpAbsracted1609,56965
int Gia_ManPerformGlaOld( Gia_Man_t * pAig, Abs_Par_t * pPars, int fStartVta )Gia_ManPerformGlaOld1638,57826

src/proof/abs/absOldCex.c,4458
typedef struct Saig_ManCba_t_ Saig_ManCba_t;Saig_ManCba_t31,819
struct Saig_ManCba_t_Saig_ManCba_t_32,864
    Aig_Man_t * pAig;       // user's AIGpAig35,905
    Abc_Cex_t * pCex;       // user's CEXpCex36,947
    int         nInputs;    // the number of first inputs to skipnInputs37,989
    int         fVerbose;   // verbose flagfVerbose38,1055
    Aig_Man_t * pFrames;    // unrolled timeframespFrames40,1116
    Vec_Int_t * vMapPiF2A;  // mapping of frame PIs into real PIsvMapPiF2A41,1167
    Vec_Vec_t * vReg2Frame; // register to frame mappingvReg2Frame43,1263
    Vec_Vec_t * vReg2Value; // register to value mappingvReg2Value44,1320
Vec_Int_t * Saig_ManCbaFilterFlops( Aig_Man_t * pAig, Abc_Cex_t * pAbsCex, Vec_Int_t * vFlopClasses, Vec_Int_t * vAbsFfsToAdd, int nFfsToSelect )Saig_ManCbaFilterFlops66,2138
Aig_Man_t * Saig_ManDupWithCubes( Aig_Man_t * pAig, Vec_Vec_t * vReg2Value )Saig_ManDupWithCubes146,5452
Vec_Int_t * Saig_ManCbaReason2Inputs( Saig_ManCba_t * p, Vec_Int_t * vReasons )Saig_ManCbaReason2Inputs195,7172
Abc_Cex_t * Saig_ManCbaReason2Cex( Saig_ManCba_t * p, Vec_Int_t * vReasons )Saig_ManCbaReason2Cex224,8091
void Saig_ManCbaFindReason_rec( Aig_Man_t * p, Aig_Obj_t * pObj, Vec_Int_t * vPrios, Vec_Int_t * vReasons )Saig_ManCbaFindReason_rec261,9262
Vec_Int_t * Saig_ManCbaFindReason( Saig_ManCba_t * p )Saig_ManCbaFindReason311,10990
void Saig_ManCbaUnrollCollect_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vObjs, Vec_Int_t * vRoots )Saig_ManCbaUnrollCollect_rec371,13252
Aig_Man_t * Saig_ManCbaUnrollWithCex( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, Vec_Int_t ** pvMapPiF2A, Vec_Vec_t ** pvReg2Frame )Saig_ManCbaUnrollWithCex399,14218
Saig_ManCba_t * Saig_ManCbaStart( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, int fVerbose )Saig_ManCbaStart513,18497
void Saig_ManCbaStop( Saig_ManCba_t * p )Saig_ManCbaStop535,19033
void Saig_ManCbaShrink( Saig_ManCba_t * p )Saig_ManCbaShrink555,19501
static inline void Saig_ObjCexMinSet0( Aig_Obj_t * pObj ) { pObj->fMarkA = 1; pObj->fMarkB = 0;    }Saig_ObjCexMinSet0588,20966
static inline void Saig_ObjCexMinSet1( Aig_Obj_t * pObj ) { pObj->fMarkA = 0; pObj->fMarkB = 1;    }Saig_ObjCexMinSet1589,21067
static inline void Saig_ObjCexMinSetX( Aig_Obj_t * pObj ) { pObj->fMarkA = 1; pObj->fMarkB = 1;    }Saig_ObjCexMinSetX590,21168
static inline int  Saig_ObjCexMinGet0( Aig_Obj_t * pObj ) { return  pObj->fMarkA && !pObj->fMarkB; }Saig_ObjCexMinGet0592,21270
static inline int  Saig_ObjCexMinGet1( Aig_Obj_t * pObj ) { return !pObj->fMarkA &&  pObj->fMarkB; }Saig_ObjCexMinGet1593,21371
static inline int  Saig_ObjCexMinGetX( Aig_Obj_t * pObj ) { return  pObj->fMarkA &&  pObj->fMarkB; }Saig_ObjCexMinGetX594,21472
static inline int  Saig_ObjCexMinGet0Fanin0( Aig_Obj_t * pObj ) { return (Saig_ObjCexMinGet1(Aig_ObjFanin0(pObj)) && Aig_ObjFaninC0(pObj)) || (Saig_ObjCexMinGet0(Aig_ObjFanin0(pObj)) && !Aig_ObjFaninC0(pObj)); }Saig_ObjCexMinGet0Fanin0596,21574
static inline int  Saig_ObjCexMinGet1Fanin0( Aig_Obj_t * pObj ) { return (Saig_ObjCexMinGet0(Aig_ObjFanin0(pObj)) && Aig_ObjFaninC0(pObj)) || (Saig_ObjCexMinGet1(Aig_ObjFanin0(pObj)) && !Aig_ObjFaninC0(pObj)); }Saig_ObjCexMinGet1Fanin0597,21786
static inline int  Saig_ObjCexMinGet0Fanin1( Aig_Obj_t * pObj ) { return (Saig_ObjCexMinGet1(Aig_ObjFanin1(pObj)) && Aig_ObjFaninC1(pObj)) || (Saig_ObjCexMinGet0(Aig_ObjFanin1(pObj)) && !Aig_ObjFaninC1(pObj)); }Saig_ObjCexMinGet0Fanin1599,21999
static inline int  Saig_ObjCexMinGet1Fanin1( Aig_Obj_t * pObj ) { return (Saig_ObjCexMinGet0(Aig_ObjFanin1(pObj)) && Aig_ObjFaninC1(pObj)) || (Saig_ObjCexMinGet1(Aig_ObjFanin1(pObj)) && !Aig_ObjFaninC1(pObj)); }Saig_ObjCexMinGet1Fanin1600,22211
static inline void Saig_ObjCexMinSim( Aig_Obj_t * pObj )Saig_ObjCexMinSim602,22424
static inline void Saig_ObjCexMinPrint( Aig_Obj_t * pObj )Saig_ObjCexMinPrint625,23126
int Saig_ManCexVerifyUsingTernary( Aig_Man_t * pAig, Abc_Cex_t * pCex, Abc_Cex_t * pCare )Saig_ManCexVerifyUsingTernary647,23612
Abc_Cex_t * Saig_ManCbaFindCexCareBits( Aig_Man_t * pAig, Abc_Cex_t * pCex, int nInputs, int fVerbose )Saig_ManCbaFindCexCareBits718,25885
Vec_Int_t * Saig_ManCbaFilterInputs( Aig_Man_t * pAig, int iFirstFlopPi, Abc_Cex_t * pCex, int fVerbose )Saig_ManCbaFilterInputs785,27889
Vec_Int_t * Saig_ManCbaPerform( Aig_Man_t * pAbs, int nInputs, Saig_ParBmc_t * pPars )Saig_ManCbaPerform830,29318

src/proof/abs/absOut.c,685
Abc_Cex_t * Gia_ManCexRemap( Gia_Man_t * p, Abc_Cex_t * pCexAbs, Vec_Int_t * vPis )Gia_ManCexRemap45,1282
int Gia_ManGlaRefine( Gia_Man_t * p, Abc_Cex_t * pCex, int fMinCut, int fVerbose )Gia_ManGlaRefine90,2790
Vec_Int_t * Gia_ManGetStateAndCheckCex( Gia_Man_t * pAig, Abc_Cex_t * p, int iFrame )Gia_ManGetStateAndCheckCex251,8427
void Gia_ManCheckCex( Gia_Man_t * pAig, Abc_Cex_t * p, int iFrame )Gia_ManCheckCex298,10102
Gia_Man_t * Gia_ManTransformFlops( Gia_Man_t * p, Vec_Int_t * vFlops, Vec_Int_t * vInit )Gia_ManTransformFlops340,11681
int Gia_ManNewRefine( Gia_Man_t * p, Abc_Cex_t * pCex, int iFrameStart, int iFrameExtra, int fVerbose )Gia_ManNewRefine373,12641

src/proof/abs/absRpm.c,2491
static inline int   Gia_ObjDom( Gia_Man_t * p, Gia_Obj_t * pObj )            { return Vec_IntEntry(p->vDoms, Gia_ObjId(p, pObj));   }Gia_ObjDom30,805
static inline void  Gia_ObjSetDom( Gia_Man_t * p, Gia_Obj_t * pObj, int d )  { Vec_IntWriteEntry(p->vDoms, Gia_ObjId(p, pObj), d);  }Gia_ObjSetDom31,939
void Gia_ManAddDom( Gia_Man_t * p, Gia_Obj_t * pObj, int iDom0 )Gia_ManAddDom53,1897
void Gia_ManComputeDoms( Gia_Man_t * p )Gia_ManComputeDoms86,2747
Vec_Wec_t * Gia_ManCreateSupps( Gia_Man_t * p, int fVerbose )Gia_ManCreateSupps123,3729
void Gia_ManDomTest( Gia_Man_t * p )Gia_ManDomTest140,4513
void Gia_ManTestDoms2( Gia_Man_t * p )Gia_ManTestDoms2190,6105
Vec_Int_t * Gia_ManCollectDoms( Gia_Man_t * p )Gia_ManCollectDoms246,7767
Vec_Int_t * Gia_ManComputePiDoms( Gia_Man_t * p )Gia_ManComputePiDoms276,8612
void Gia_ManTestDoms( Gia_Man_t * p )Gia_ManTestDoms284,8806
void Gia_ManCountFanoutlessFlops( Gia_Man_t * p )Gia_ManCountFanoutlessFlops315,9558
void Gia_ManCountPisNodes_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vPis, Vec_Int_t * vAnds )Gia_ManCountPisNodes_rec339,10107
void Gia_ManCountPisNodes( Gia_Man_t * p, Vec_Int_t * vPis, Vec_Int_t * vAnds )Gia_ManCountPisNodes354,10629
int Abs_GiaObjDeref_rec( Gia_Man_t * p, Gia_Obj_t * pNode )Abs_GiaObjDeref_rec381,11396
int Abs_GiaObjRef_rec( Gia_Man_t * p, Gia_Obj_t * pNode )Abs_GiaObjRef_rec398,11978
int Abs_GiaSortNodes( Gia_Man_t * p, Vec_Int_t * vSupp )Abs_GiaSortNodes425,12744
void Abs_ManSupport1_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp )Abs_ManSupport1_rec458,13868
int Abs_ManSupport1( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp )Abs_ManSupport1472,14324
void Abs_ManSupport2_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp )Abs_ManSupport2_rec492,14884
int Abs_ManSupport2( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp )Abs_ManSupport2506,15370
int Abs_ManSupport3( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp )Abs_ManSupport3528,16000
int Abs_GiaCofPrint( word * pTruth, int nSize, int nSize0, int Res )Abs_GiaCofPrint594,18024
int Abs_GiaCheckTruth( word * pTruth, int nSize, int nSize0 )Abs_GiaCheckTruth629,18985
void Abs_RpmPerformMark( Gia_Man_t * p, int nCutMax, int fVerbose, int fVeryVerbose )Abs_RpmPerformMark680,20510
Gia_Man_t * Gia_ManDupRpm( Gia_Man_t * p )Gia_ManDupRpm805,24944
Gia_Man_t * Abs_RpmPerform( Gia_Man_t * p, int nCutMax, int fVerbose, int fVeryVerbose )Abs_RpmPerform853,26341

src/proof/abs/absGla.c,8918
#define GA2_BIG_NUM GA2_BIG_NUM35,933
typedef struct Ga2_Man_t_ Ga2_Man_t; // managerGa2_Man_t37,965
struct Ga2_Man_t_Ga2_Man_t_38,1013
    Gia_Man_t *    pGia;         // working AIG managerpGia41,1050
    Abs_Par_t *    pPars;        // parameterspPars42,1106
    Vec_Ptr_t *    vCnfs;        // for each object: CNF0, CNF1vCnfs44,1170
    Vec_Int_t *    vIds;         // abstraction ID for each GIA objectvIds46,1253
    Vec_Int_t *    vProofIds;    // mapping of GIA objects into their proof IDsvProofIds47,1324
    Vec_Int_t *    vAbs;         // array of abstracted objectsvAbs48,1404
    Vec_Int_t *    vValues;      // array of objects with abstraction ID assignedvValues49,1468
    int            nProofIds;    // the counter of proof IDsnProofIds50,1550
    int            LimAbs;       // limit value for starting abstraction objectsLimAbs51,1611
    int            LimPpi;       // limit value for starting PPI objectsLimPpi52,1692
    int            nMarked;      // total number of marked nodes and flopsnMarked53,1765
    int            fUseNewLine;  // remember that you used new linefUseNewLine54,1840
    Rnm_Man_t *    pRnm;         // refinement managerpRnm56,1926
    Vec_Ptr_t *    vId2Lit;      // mapping, for each timeframe, of object ID into SAT literalvId2Lit59,2070
    sat_solver2 *  pSat;         // incremental SAT solverpSat60,2165
    int            nSatVars;     // the number of SAT variablesnSatVars61,2224
    int            nCexes;       // the number of counter-examplesnCexes62,2288
    int            nObjAdded;    // objs added during refinementnObjAdded63,2355
    int            nPdrCalls;    // count the number of concurrent callsnPdrCalls64,2420
    int *          pTable;pTable66,2511
    int            nTable;nTable67,2538
    int            nHashHit;nHashHit68,2565
    int            nHashMiss;nHashMiss69,2594
    int            nHashOver;nHashOver70,2624
    Vec_Int_t *    vLits;vLits72,2673
    Vec_Int_t *    vIsopMem;vIsopMem73,2699
    char * pSopSizes, ** pSops;  // CNF representationpSopSizes74,2728
    char * pSopSizes, ** pSops;  // CNF representationpSops74,2728
    abctime        timeStart;timeStart76,2803
    abctime        timeInit;timeInit77,2833
    abctime        timeSat;timeSat78,2862
    abctime        timeUnsat;timeUnsat79,2890
    abctime        timeCex;timeCex80,2920
    abctime        timeOther;timeOther81,2948
static inline int         Ga2_ObjId( Ga2_Man_t * p, Gia_Obj_t * pObj )           { return Vec_IntEntry(p->vIds, Gia_ObjId(p->pGia, pObj));                                                  }Ga2_ObjId84,2982
static inline void        Ga2_ObjSetId( Ga2_Man_t * p, Gia_Obj_t * pObj, int i ) { Vec_IntWriteEntry(p->vIds, Gia_ObjId(p->pGia, pObj), i);                                                 }Ga2_ObjSetId85,3172
static inline Vec_Int_t * Ga2_ObjCnf0( Ga2_Man_t * p, Gia_Obj_t * pObj )         { assert(Ga2_ObjId(p,pObj) >= 0); return (Vec_Int_t *)Vec_PtrEntry( p->vCnfs, 2*Ga2_ObjId(p,pObj)   );                  }Ga2_ObjCnf087,3363
static inline Vec_Int_t * Ga2_ObjCnf1( Ga2_Man_t * p, Gia_Obj_t * pObj )         { assert(Ga2_ObjId(p,pObj) >= 0); return (Vec_Int_t *)Vec_PtrEntry( p->vCnfs, 2*Ga2_ObjId(p,pObj)+1 );                  }Ga2_ObjCnf188,3566
static inline int         Ga2_ObjIsAbs0( Ga2_Man_t * p, Gia_Obj_t * pObj )       { assert(Ga2_ObjId(p,pObj) >= 0); return Ga2_ObjId(p,pObj) >= 0         && Ga2_ObjId(p,pObj) < p->LimAbs;  }Ga2_ObjIsAbs090,3770
static inline int         Ga2_ObjIsLeaf0( Ga2_Man_t * p, Gia_Obj_t * pObj )      { assert(Ga2_ObjId(p,pObj) >= 0); return Ga2_ObjId(p,pObj) >= p->LimAbs && Ga2_ObjId(p,pObj) < p->LimPpi;  }Ga2_ObjIsLeaf091,3960
static inline int         Ga2_ObjIsAbs( Ga2_Man_t * p, Gia_Obj_t * pObj )        { return Ga2_ObjId(p,pObj) >= 0 &&  Ga2_ObjCnf0(p,pObj);                                                   }Ga2_ObjIsAbs92,4150
static inline int         Ga2_ObjIsLeaf( Ga2_Man_t * p, Gia_Obj_t * pObj )       { return Ga2_ObjId(p,pObj) >= 0 && !Ga2_ObjCnf0(p,pObj);                                                   }Ga2_ObjIsLeaf93,4340
static inline Vec_Int_t * Ga2_MapFrameMap( Ga2_Man_t * p, int f )                { return (Vec_Int_t *)Vec_PtrEntry( p->vId2Lit, f );                                                       }Ga2_MapFrameMap95,4531
static inline int Ga2_ObjFindLit( Ga2_Man_t * p, Gia_Obj_t * pObj, int f )  Ga2_ObjFindLit98,4809
static inline void Ga2_ObjAddLit( Ga2_Man_t * p, Gia_Obj_t * pObj, int f, int Lit )  Ga2_ObjAddLit105,5113
static inline int Ga2_ObjFindOrAddLit( Ga2_Man_t * p, Gia_Obj_t * pObj, int f )  Ga2_ObjFindOrAddLit112,5404
unsigned Ga2_ObjComputeTruth_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int fFirst )Ga2_ObjComputeTruth_rec140,6193
unsigned Ga2_ManComputeTruth( Gia_Man_t * p, Gia_Obj_t * pRoot, Vec_Int_t * vLeaves )Ga2_ManComputeTruth150,6619
int Ga2_ManBreakTree_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int fFirst, int N )Ga2_ManBreakTree_rec176,7507
int Ga2_ManCheckNodesAnd( Gia_Man_t * p, Vec_Int_t * vNodes )Ga2_ManCheckNodesAnd212,8409
void Ga2_ManCollectNodes_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vNodes, int fFirst )Ga2_ManCollectNodes_rec222,8733
void Ga2_ManCollectLeaves_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vLeaves, int fFirst )Ga2_ManCollectLeaves_rec232,9098
int Ga2_ManMarkup( Gia_Man_t * p, int N, int fSimple )Ga2_ManMarkup243,9491
void Ga2_ManComputeTest( Gia_Man_t * p )Ga2_ManComputeTest338,12847
Ga2_Man_t * Ga2_ManStart( Gia_Man_t * pGia, Abs_Par_t * pPars )Ga2_ManStart372,13724
void Ga2_ManDumpStats( Gia_Man_t * pGia, Abs_Par_t * pPars, sat_solver2 * pSat, int iFrame, int fUseN )Ga2_ManDumpStats410,14979
void Ga2_ManReportMemory( Ga2_Man_t * p )Ga2_ManReportMemory432,15742
void Ga2_ManStop( Ga2_Man_t * p )Ga2_ManStop460,17101
static inline unsigned Ga2_ObjTruthDepends( unsigned t, int v )Ga2_ObjTruthDepends506,18848
unsigned Ga2_ObjComputeTruthSpecial( Gia_Man_t * p, Gia_Obj_t * pRoot, Vec_Int_t * vLeaves, Vec_Int_t * vLits )Ga2_ObjComputeTruthSpecial512,19100
Vec_Int_t * Ga2_ManCnfCompute( unsigned uTruth, int nVars, Vec_Int_t * vCover )Ga2_ManCnfCompute630,22522
static inline void Ga2_ManCnfAddDynamic( Ga2_Man_t * p, int uTruth, int Lits[], int iLitOut, int ProofId )Ga2_ManCnfAddDynamic652,23113
void Ga2_ManCnfAddStatic( sat_solver2 * pSat, Vec_Int_t * vCnf0, Vec_Int_t * vCnf1, int Lits[], int iLitOut, int ProofId )Ga2_ManCnfAddStatic684,24289
static inline unsigned Saig_ManBmcHashKey( int * pArray )Saig_ManBmcHashKey727,25651
static inline int * Saig_ManBmcLookup( Ga2_Man_t * p, int * pArray )Saig_ManBmcLookup735,25909
static inline void Ga2_ManSetupNode( Ga2_Man_t * p, Gia_Obj_t * pObj, int fAbs )Ga2_ManSetupNode764,26612
static inline void Ga2_ManAddToAbsOneStatic( Ga2_Man_t * p, Gia_Obj_t * pObj, int f, int fUseId )Ga2_ManAddToAbsOneStatic792,27734
static inline void Ga2_ManAddToAbsOneDynamic( Ga2_Man_t * p, Gia_Obj_t * pObj, int f )Ga2_ManAddToAbsOneDynamic825,29150
void Ga2_ManAddAbsClauses( Ga2_Man_t * p, int f )Ga2_ManAddAbsClauses959,34410
void Ga2_ManAddToAbs( Ga2_Man_t * p, Vec_Int_t * vToAdd )Ga2_ManAddToAbs979,34959
void Ga2_ManShrinkAbs( Ga2_Man_t * p, int nAbs, int nValues, int nSatVars )Ga2_ManShrinkAbs1009,35977
void Ga2_ManAbsTranslate_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vClasses, int fFirst )Ga2_ManAbsTranslate_rec1067,37710
Vec_Int_t * Ga2_ManAbsTranslate( Ga2_Man_t * p )Ga2_ManAbsTranslate1077,38092
Vec_Int_t * Ga2_ManAbsDerive( Gia_Man_t * p )Ga2_ManAbsDerive1097,38741
void Ga2_ManRestart( Ga2_Man_t * p )Ga2_ManRestart1112,39212
static inline int Ga2_ObjSatValue( Ga2_Man_t * p, Gia_Obj_t * pObj, int f )Ga2_ObjSatValue1156,40706
Abc_Cex_t * Ga2_ManDeriveCex( Ga2_Man_t * p, Vec_Int_t * vPis )Ga2_ManDeriveCex1166,41055
void Ga2_ManRefinePrint( Ga2_Man_t * p, Vec_Int_t * vVec )Ga2_ManRefinePrint1185,41716
void Ga2_ManRefinePrintPPis( Ga2_Man_t * p )Ga2_ManRefinePrintPPis1223,42905
void Ga2_GlaPrepareCexAndMap( Ga2_Man_t * p, Abc_Cex_t ** ppCex, Vec_Int_t ** pvMaps )Ga2_GlaPrepareCexAndMap1247,43616
Vec_Int_t * Ga2_ManRefine( Ga2_Man_t * p )Ga2_ManRefine1280,44751
int Ga2_GlaAbsCount( Ga2_Man_t * p, int fRo, int fAnd )Ga2_GlaAbsCount1344,46861
void Ga2_ManAbsPrintFrame( Ga2_Man_t * p, int nFrames, int nConfls, int nCexes, abctime Time, int fFinal )Ga2_ManAbsPrintFrame1369,47490
char * Ga2_GlaGetFileName( Ga2_Man_t * p, int fAbs )Ga2_GlaGetFileName1406,49001
void Ga2_GlaDumpAbsracted( Ga2_Man_t * p, int fVerbose )Ga2_GlaDumpAbsracted1421,49422
void Gia_Ga2SendAbsracted( Ga2_Man_t * p, int fVerbose )Gia_Ga2SendAbsracted1464,50892
void Gia_Ga2SendCancel( Ga2_Man_t * p, int fVerbose )Gia_Ga2SendCancel1480,51468
int Gia_ManPerformGla( Gia_Man_t * pAig, Abs_Par_t * pPars )Gia_ManPerformGla1500,52012

src/proof/abs/absOldSim.c,2351
#define SAIG_ZER SAIG_ZER30,811
#define SAIG_ONE SAIG_ONE31,830
#define SAIG_UND SAIG_UND32,849
static inline int Saig_ManSimInfoNot( int Value )Saig_ManSimInfoNot34,869
static inline int Saig_ManSimInfoAnd( int Value0, int Value1 )Saig_ManSimInfoAnd43,1053
static inline int Saig_ManSimInfoGet( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame )Saig_ManSimInfoGet52,1296
static inline void Saig_ManSimInfoSet( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame, int Value )Saig_ManSimInfoSet58,1531
#define SAIG_ZER_NEW SAIG_ZER_NEW68,1891
#define SAIG_ONE_NEW SAIG_ONE_NEW69,1933
#define SAIG_ZER_OLD SAIG_ZER_OLD70,1975
#define SAIG_ONE_OLD SAIG_ONE_OLD71,2013
static inline int Saig_ManSimInfo2IsOld( int Value )Saig_ManSimInfo2IsOld73,2052
static inline int Saig_ManSimInfo2SetOld( int Value )Saig_ManSimInfo2SetOld78,2169
static inline int Saig_ManSimInfo2Not( int Value )Saig_ManSimInfo2Not88,2383
static inline int Saig_ManSimInfo2And( int Value0, int Value1 )Saig_ManSimInfo2And102,2718
static inline int Saig_ManSimInfo2Get( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame )Saig_ManSimInfo2Get112,2996
static inline void Saig_ManSimInfo2Set( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame, int Value )Saig_ManSimInfo2Set118,3232
int Saig_ManExtendOneEval( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame )Saig_ManExtendOneEval143,4174
int Saig_ManSimDataInit( Aig_Man_t * p, Abc_Cex_t * pCex, Vec_Ptr_t * vSimInfo, Vec_Int_t * vRes )Saig_ManSimDataInit174,5159
int Saig_ManExtendOneEval2( Vec_Ptr_t * vSimInfo, Aig_Obj_t * pObj, int iFrame )Saig_ManExtendOneEval2213,6714
int Saig_ManSimDataInit2( Aig_Man_t * p, Abc_Cex_t * pCex, Vec_Ptr_t * vSimInfo )Saig_ManSimDataInit2244,7711
void Saig_ManSetAndDriveImplications_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int f, int fMax, Vec_Ptr_t * vSimInfo )Saig_ManSetAndDriveImplications_rec280,9146
void Saig_ManExplorePaths_rec( Aig_Man_t * p, Aig_Obj_t * pObj, int f, int fMax, Vec_Ptr_t * vSimInfo )Saig_ManExplorePaths_rec333,11233
Vec_Int_t * Saig_ManProcessCex( Aig_Man_t * p, int iFirstFlopPi, Abc_Cex_t * pCex, Vec_Ptr_t * vSimInfo, int fVerbose )Saig_ManProcessCex388,13040
Vec_Int_t * Saig_ManExtendCounterExampleTest2( Aig_Man_t * p, int iFirstFlopPi, Abc_Cex_t * pCex, int fVerbose )Saig_ManExtendCounterExampleTest2443,15104

src/proof/abs/absIter.c,723
static inline int  Gia_ObjIsInGla( Gia_Man_t * p, Gia_Obj_t * pObj )    { return Vec_IntEntry(p->vGateClasses, Gia_ObjId(p, pObj));  }Gia_ObjIsInGla31,809
static inline void Gia_ObjAddToGla( Gia_Man_t * p, Gia_Obj_t * pObj )   { Vec_IntWriteEntry(p->vGateClasses, Gia_ObjId(p, pObj), 1); }Gia_ObjAddToGla32,944
static inline void Gia_ObjRemFromGla( Gia_Man_t * p, Gia_Obj_t * pObj ) { Vec_IntWriteEntry(p->vGateClasses, Gia_ObjId(p, pObj), 0); }Gia_ObjRemFromGla33,1079
int Gia_IterTryImprove( Gia_Man_t * p, int nTimeOut, int iFrame0 )Gia_IterTryImprove50,1669
Gia_Man_t * Gia_ManShrinkGla( Gia_Man_t * p, int nFrameMax, int nTimeOut, int fUsePdr, int fUseSat, int fUseBdd, int fVerbose )Gia_ManShrinkGla67,2366

src/proof/abs/absRefJ.c,4513
typedef struct Rf2_Obj_t_ Rf2_Obj_t; // refinement objectRf2_Obj_t75,3565
struct Rf2_Obj_t_Rf2_Obj_t_76,3623
    unsigned       Value     :  1;  // binary valueValue78,3643
    unsigned       fVisit    :  1;  // visited objectfVisit79,3695
    unsigned       fPPi      :  1;  // PPI objectfPPi80,3749
    unsigned       Prio      : 24;  // priority (0 - highest)Prio81,3799
struct Rf2_Man_t_Rf2_Man_t_84,3865
    Gia_Man_t *    pGia;            // working AIG manager (it is completely owned by this package)pGia87,3902
    Abc_Cex_t *    pCex;            // counter-examplepCex88,4002
    Vec_Int_t *    vMap;            // mapping of CEX inputs into objects (PI + PPI, in any order)vMap89,4057
    int            fPropFanout;     // propagate fanoutsfPropFanout90,4156
    int            fVerbose;        // verbose flagfVerbose91,4213
    Vec_Int_t *    vObjs;           // internal objects used in value propagationvObjs93,4288
    Vec_Int_t *    vFanins;         // fanins of the PPI nodesvFanins94,4370
    Vec_Int_t *    pvVecs;          // vectors of integers for each objectpvVecs95,4433
    Vec_Vec_t *    vGrp2Ppi;        // for each node, the set of PPIs to includevGrp2Ppi96,4508
    int            nMapWords;nMapWords97,4589
    Rf2_Obj_t *    pObjs;           // refinement objectspObjs99,4640
    int            nObjs;           // the number of used objectsnObjs100,4698
    int            nObjsAlloc;      // the number of allocated objectsnObjsAlloc101,4764
    int            nObjsFrame;      // the number of used objects in each framenObjsFrame102,4835
    int            nCalls;          // total number of callsnCalls103,4915
    int            nRefines;        // total refined objectsnRefines104,4976
    clock_t        timeFwd;         // forward propagationtimeFwd106,5057
    clock_t        timeBwd;         // backward propagationtimeBwd107,5116
    clock_t        timeVer;         // ternary simulationtimeVer108,5176
    clock_t        timeTotal;       // other timetimeTotal109,5234
static inline Rf2_Obj_t * Rf2_ManObj( Rf2_Man_t * p, Gia_Obj_t * pObj, int f )  Rf2_ManObj113,5323
static inline Vec_Int_t * Rf2_ObjVec( Rf2_Man_t * p, Gia_Obj_t * pObj )  Rf2_ObjVec121,5614
static inline unsigned * Rf2_ObjA( Rf2_Man_t * p, Gia_Obj_t * pObj )  Rf2_ObjA127,5743
static inline unsigned * Rf2_ObjN( Rf2_Man_t * p, Gia_Obj_t * pObj )  Rf2_ObjN131,5876
static inline void Rf2_ObjClear( Rf2_Man_t * p, Gia_Obj_t * pObj )  Rf2_ObjClear135,6024
static inline void Rf2_ObjStart( Rf2_Man_t * p, Gia_Obj_t * pObj, int i )  Rf2_ObjStart139,6156
static inline void Rf2_ObjCopy( Rf2_Man_t * p, Gia_Obj_t * pObj, Gia_Obj_t * pFanin )  Rf2_ObjCopy151,6552
static inline void Rf2_ObjDeriveAnd( Rf2_Man_t * p, Gia_Obj_t * pObj, int One )  Rf2_ObjDeriveAnd156,6801
static inline void Rf2_ObjPrint( Rf2_Man_t * p, Gia_Obj_t * pRoot )  Rf2_ObjPrint178,7740
Rf2_Man_t * Rf2_ManStart( Gia_Man_t * pGia )Rf2_ManStart211,8761
void Rf2_ManStop( Rf2_Man_t * p, int fProfile )Rf2_ManStop225,9173
double Rf2_ManMemoryUsage( Rf2_Man_t * p )Rf2_ManMemoryUsage249,10367
void Rf2_ManCollect_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vObjs )Rf2_ManCollect_rec266,10854
void Rf2_ManCollect( Rf2_Man_t * p )Rf2_ManCollect282,11397
int Rf2_ManSensitize( Rf2_Man_t * p )Rf2_ManSensitize315,12422
void Rf2_ManVerifyUsingTerSim( Gia_Man_t * p, Abc_Cex_t * pCex, Vec_Int_t * vMap, Vec_Int_t * vObjs, Vec_Int_t * vRes )Rf2_ManVerifyUsingTerSim390,15213
void Rf2_ManGatherFanins_rec( Rf2_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vFanins, int Depth, int RootId, int fFirst )Rf2_ManGatherFanins_rec444,16958
void Rf2_ManGatherFanins( Rf2_Man_t * p, int Depth )Rf2_ManGatherFanins475,18112
static inline int Rf2_ManCountPpis( Rf2_Man_t * p )Rf2_ManCountPpis545,20132
static inline void Rf2_ManPrintVector( Vec_Int_t * p, int Num )Rf2_ManPrintVector566,20673
static inline void Rf2_ManProcessVector( Vec_Int_t * p, int Limit )Rf2_ManProcessVector588,21209
int Rf2_ManAssignJustIds( Rf2_Man_t * p )Rf2_ManAssignJustIds636,22532
static inline void Rf2_ManPrintVectorSpecial( Rf2_Man_t * p, Vec_Int_t * vVec )Rf2_ManPrintVectorSpecial661,23347
Vec_Int_t * Rf2_ManPropagate( Rf2_Man_t * p, int Limit )Rf2_ManPropagate699,24353
void Rf2_ManBounds( Rf2_Man_t * p )Rf2_ManBounds792,28007
Vec_Int_t * Rf2_ManRefine( Rf2_Man_t * p, Abc_Cex_t * pCex, Vec_Int_t * vMap, int fPropFanout, int fVerbose )Rf2_ManRefine863,30692

src/proof/fraig/fraigUtil.c,3353
static int bit_count[256] = {bit_count29,782
Fraig_NodeVec_t * Fraig_Dfs( Fraig_Man_t * pMan, int fEquiv )Fraig_Dfs58,2051
Fraig_NodeVec_t * Fraig_DfsOne( Fraig_Man_t * pMan, Fraig_Node_t * pNode, int fEquiv )Fraig_DfsOne80,2652
Fraig_NodeVec_t * Fraig_DfsNodes( Fraig_Man_t * pMan, Fraig_Node_t ** ppNodes, int nNodes, int fEquiv )Fraig_DfsNodes100,3193
void Fraig_Dfs_rec( Fraig_Man_t * pMan, Fraig_Node_t * pNode, Fraig_NodeVec_t * vNodes, int fEquiv )Fraig_Dfs_rec122,3818
int Fraig_CountNodes( Fraig_Man_t * pMan, int fEquiv )Fraig_CountNodes152,4747
int Fraig_CheckTfi( Fraig_Man_t * pMan, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_CheckTfi173,5253
int Fraig_CheckTfi_rec( Fraig_Man_t * pMan, Fraig_Node_t * pNode, Fraig_Node_t * pOld )Fraig_CheckTfi_rec192,5770
int Fraig_CheckTfi2( Fraig_Man_t * pMan, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_CheckTfi2226,6745
void Fraig_ManMarkRealFanouts( Fraig_Man_t * p )Fraig_ManMarkRealFanouts251,7629
int Fraig_BitStringCountOnes( unsigned * pString, int nWords )Fraig_BitStringCountOnes288,8683
int Fraig_ManCheckConsistency( Fraig_Man_t * p )Fraig_ManCheckConsistency312,9547
void Fraig_PrintNode( Fraig_Man_t * p, Fraig_Node_t * pNode )Fraig_PrintNode358,10985
void Fraig_PrintBinary( FILE * pFile, unsigned * pSign, int nBits )Fraig_PrintBinary402,12382
int Fraig_GetMaxLevel( Fraig_Man_t * pMan )Fraig_GetMaxLevel428,13079
int Fraig_MappingUpdateLevel_rec( Fraig_Man_t * pMan, Fraig_Node_t * pNode, int fMaximum )Fraig_MappingUpdateLevel_rec449,13656
void Fraig_MappingSetChoiceLevels( Fraig_Man_t * pMan, int fMaximum )Fraig_MappingSetChoiceLevels499,15470
void Fraig_ManReportChoices( Fraig_Man_t * pMan )Fraig_ManReportChoices520,16190
int Fraig_NodeIsExorType( Fraig_Node_t * pNode )Fraig_NodeIsExorType558,17470
int Fraig_NodeIsMuxType( Fraig_Node_t * pNode )Fraig_NodeIsMuxType591,18557
int Fraig_NodeIsExor( Fraig_Node_t * pNode )Fraig_NodeIsExor633,19979
Fraig_Node_t * Fraig_NodeRecognizeMux( Fraig_Node_t * pNode, Fraig_Node_t ** ppNodeT, Fraig_Node_t ** ppNodeE )Fraig_NodeRecognizeMux658,20865
int Fraig_ManCountExors( Fraig_Man_t * pMan )Fraig_ManCountExors742,23485
int Fraig_ManCountMuxes( Fraig_Man_t * pMan )Fraig_ManCountMuxes763,23977
int Fraig_NodeSimsContained( Fraig_Man_t * pMan, Fraig_Node_t * pNode1, Fraig_Node_t * pNode2 )Fraig_NodeSimsContained784,24494
int Fraig_CountPis( Fraig_Man_t * p, Msat_IntVec_t * vVarNums )Fraig_CountPis817,25353
int Fraig_ManPrintRefs( Fraig_Man_t * pMan )Fraig_ManPrintRefs842,25957
int Fraig_NodeIsInSupergate( Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_NodeIsInSupergate905,27975
void Fraig_CollectSupergate_rec( Fraig_Node_t * pNode, Fraig_NodeVec_t * vSuper, int fFirst, int fStopAtMux )Fraig_CollectSupergate_rec933,28822
Fraig_NodeVec_t * Fraig_CollectSupergate( Fraig_Node_t * pNode, int fStopAtMux )Fraig_CollectSupergate960,29830
void Fraig_ManIncrementTravId( Fraig_Man_t * pMan )Fraig_ManIncrementTravId980,30302
void Fraig_NodeSetTravIdCurrent( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_NodeSetTravIdCurrent996,30616
int Fraig_NodeIsTravIdCurrent( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_NodeIsTravIdCurrent1012,30969
int Fraig_NodeIsTravIdPrevious( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_NodeIsTravIdPrevious1028,31328

src/proof/fraig/fraigMan.c,1167
abctime timeSelect;timeSelect28,778
abctime timeAssign;timeAssign29,798
void Prove_ParamsSetDefault( Prove_Params_t * pParams )Prove_ParamsSetDefault46,1373
void Prove_ParamsPrint( Prove_Params_t * pParams )Prove_ParamsPrint89,3583
void Fraig_ParamsSetDefault( Fraig_Params_t * pParams )Fraig_ParamsSetDefault122,5375
void Fraig_ParamsSetDefaultFull( Fraig_Params_t * pParams )Fraig_ParamsSetDefaultFull153,7160
Fraig_Man_t * Fraig_ManCreate( Fraig_Params_t * pParams )Fraig_ManCreate184,8882
void Fraig_ManFree( Fraig_Man_t * p )Fraig_ManFree262,12474
void Fraig_ManCreateSolver( Fraig_Man_t * p )Fraig_ManCreateSolver325,14277
void Fraig_ManPrintStats( Fraig_Man_t * p )Fraig_ManPrintStats351,14998
Fraig_NodeVec_t * Fraig_UtilInfoAlloc( int nSize, int nWords, int fClean )Fraig_UtilInfoAlloc389,16831
Fraig_NodeVec_t * Fraig_ManGetSimInfo( Fraig_Man_t * p )Fraig_ManGetSimInfo417,17684
int Fraig_ManCheckClauseUsingSimInfo( Fraig_Man_t * p, Fraig_Node_t * pNode1, Fraig_Node_t * pNode2 )Fraig_ManCheckClauseUsingSimInfo454,18820
void Fraig_ManAddClause( Fraig_Man_t * p, Fraig_Node_t ** ppNodes, int nNodes )Fraig_ManAddClause521,20989

src/proof/fraig/fraigNode.c,470
#define Fraig_NodeIsSimComplement(Fraig_NodeIsSimComplement29,826
Fraig_Node_t * Fraig_NodeCreateConst( Fraig_Man_t * p )Fraig_NodeCreateConst46,1409
Fraig_Node_t * Fraig_NodeCreatePi( Fraig_Man_t * p )Fraig_NodeCreatePi87,2796
Fraig_Node_t * Fraig_NodeCreate( Fraig_Man_t * p, Fraig_Node_t * p1, Fraig_Node_t * p2 )Fraig_NodeCreate160,5369
void Fraig_NodeSimulate( Fraig_Node_t * pNode, int iWordStart, int iWordStop, int fUseRand )Fraig_NodeSimulate226,7811

src/proof/fraig/fraigChoice.c,101
void Fraig_ManAddChoices( Fraig_Man_t * pMan, int fVerbose, int nLimit )Fraig_ManAddChoices44,1350

src/proof/fraig/fraigTable.c,1748
Fraig_HashTable_t * Fraig_HashTableCreate( int nSize )Fraig_HashTableCreate46,1391
void Fraig_HashTableFree( Fraig_HashTable_t * p )Fraig_HashTableFree70,2067
int Fraig_HashTableLookupS( Fraig_Man_t * pMan, Fraig_Node_t * p1, Fraig_Node_t * p2, Fraig_Node_t ** ppNodeRes )Fraig_HashTableLookupS90,2690
Fraig_Node_t * Fraig_HashTableLookupF( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_HashTableLookupF136,4108
Fraig_Node_t * Fraig_HashTableLookupF0( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_HashTableLookupF0193,6053
void Fraig_HashTableInsertF0( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_HashTableInsertF0237,7366
void Fraig_TableResizeS( Fraig_HashTable_t * p )Fraig_TableResizeS259,7868
void Fraig_TableResizeF( Fraig_HashTable_t * p, int fUseSimR )Fraig_TableResizeF303,9190
int Fraig_CompareSimInfo( Fraig_Node_t * pNode1, Fraig_Node_t * pNode2, int iWordLast, int fUseRand )Fraig_CompareSimInfo351,10649
int Fraig_FindFirstDiff( Fraig_Node_t * pNode1, Fraig_Node_t * pNode2, int fCompl, int iWordLast, int fUseRand )Fraig_FindFirstDiff390,11787
int Fraig_CompareSimInfoUnderMask( Fraig_Node_t * pNode1, Fraig_Node_t * pNode2, int iWordLast, int fUseRand, unsigned * puMask )Fraig_CompareSimInfoUnderMask451,13807
void Fraig_CollectXors( Fraig_Node_t * pNode1, Fraig_Node_t * pNode2, int iWordLast, int fUseRand, unsigned * puMask )Fraig_CollectXors478,14697
void Fraig_TablePrintStatsS( Fraig_Man_t * pMan )Fraig_TablePrintStatsS504,15492
void Fraig_TablePrintStatsF( Fraig_Man_t * pMan )Fraig_TablePrintStatsF537,16340
void Fraig_TablePrintStatsF0( Fraig_Man_t * pMan )Fraig_TablePrintStatsF0566,17100
int Fraig_TableRehashF0( Fraig_Man_t * pMan, int fLinkEquiv )Fraig_TableRehashF0604,18459

src/proof/fraig/fraigFanout.c,438
void Fraig_NodeAddFaninFanout( Fraig_Node_t * pFanin, Fraig_Node_t * pFanout )Fraig_NodeAddFaninFanout45,1309
void Fraig_NodeRemoveFaninFanout( Fraig_Node_t * pFanin, Fraig_Node_t * pFanoutToRemove )Fraig_NodeRemoveFaninFanout101,2896
void Fraig_NodeTransferFanout( Fraig_Node_t * pNodeFrom, Fraig_Node_t * pNodeTo )Fraig_NodeTransferFanout130,3815
int Fraig_NodeGetFanoutNum( Fraig_Node_t * pNode )Fraig_NodeGetFanoutNum164,5025

src/proof/fraig/fraigInt.h,13438
#define ABC__sat__fraig__fraigInt_hABC__sat__fraig__fraigInt_h20,551
#define FRAIG_ENABLE_FANOUTSFRAIG_ENABLE_FANOUTS57,1876
#define FRAIG_PATTERNS_RANDOM FRAIG_PATTERNS_RANDOM58,1905
#define FRAIG_PATTERNS_DYNAMIC FRAIG_PATTERNS_DYNAMIC59,2002
#define FRAIG_MAX_PRIMES FRAIG_MAX_PRIMES60,2099
#define FRAIG_WORDS_STORE FRAIG_WORDS_STORE67,2518
#define FRAIG_MASK(FRAIG_MASK70,2577
#define FRAIG_FULL FRAIG_FULL71,2642
#define FRAIG_NUM_WORDS(FRAIG_NUM_WORDS72,2694
#define FRAIG_RANDOM_UNSIGNED FRAIG_RANDOM_UNSIGNED76,2927
#define Fraig_BitStringSetBit(Fraig_BitStringSetBit79,3026
#define Fraig_BitStringXorBit(Fraig_BitStringXorBit80,3095
#define Fraig_BitStringHasBit(Fraig_BitStringHasBit81,3164
#define Fraig_NodeSetVarStr(Fraig_NodeSetVarStr86,3562
#define Fraig_NodeHasVarStr(Fraig_NodeHasVarStr87,3651
#define Fraig_PrintTime(Fraig_PrintTime90,3786
#define Fraig_HashKey2(Fraig_HashKey292,3905
typedef struct Fraig_MemFixed_t_    Fraig_MemFixed_t;    Fraig_MemFixed_t101,4534
struct Fraig_ManStruct_t_Fraig_ManStruct_t_104,4616
    Fraig_NodeVec_t *     vInputs;       // the array of primary inputsvInputs107,4665
    Fraig_NodeVec_t *     vNodes;        // the array of all nodes, including primary inputsvNodes108,4737
    Fraig_NodeVec_t *     vOutputs;      // the array of primary outputs (some internal nodes)vOutputs109,4830
    Fraig_Node_t *        pConst1;       // the pointer to the constant node (vNodes->pArray[0])pConst1110,4925
    char **               ppInputNames;  // the primary input namesppInputNames113,5062
    char **               ppOutputNames; // the primary output namesppOutputNames114,5130
    Fraig_HashTable_t *   pTableS;       // hashing by structurepTableS117,5227
    Fraig_HashTable_t *   pTableF;       // hashing by simulation infopTableF118,5292
    Fraig_HashTable_t *   pTableF0;      // hashing by simulation info (sparse functions)pTableF0119,5363
    int                   nWordsRand;    // the number of words of random simulation infonWordsRand122,5472
    int                   nWordsDyna;    // the number of words of dynamic simulation infonWordsDyna123,5562
    int                   nBTLimit;      // the max number of backtracks to performnBTLimit124,5653
    int                   nSeconds;      // the runtime limit for the miter proofnSeconds125,5737
    int                   fFuncRed;      // performs only one level hashingfFuncRed126,5819
    int                   fFeedBack;     // enables solver feedbackfFeedBack127,5895
    int                   fDist1Pats;    // enables solver feedbackfDist1Pats128,5963
    int                   fDoSparse;     // performs equiv tests for sparse functions fDoSparse129,6031
    int                   fChoicing;     // enables recording structural choicesfChoicing130,6118
    int                   fTryProve;     // tries to solve the final miterfTryProve131,6199
    int                   fVerbose;      // the verbosiness flagfVerbose132,6274
    int                   fVerboseP;     // the verbosiness flagfVerboseP133,6339
    ABC_INT64_T                nInspLimit;    // the inspection limitnInspLimit134,6404
    int                   nTravIds;      // the traversal counternTravIds136,6475
    int                   nTravIds2;     // the traversal counternTravIds2137,6541
    int                   iWordStart;    // the first word to use for simulationiWordStart140,6651
    int                   iWordPerm;     // the number of words stored permanentlyiWordPerm141,6732
    int                   iPatsPerm;     // the number of patterns stored permanentlyiPatsPerm142,6815
    Fraig_NodeVec_t *     vCones;        // the temporary array of internal variablesvCones143,6901
    Msat_IntVec_t *       vPatsReal;     // the array of real pattern numbersvPatsReal144,6987
    unsigned *            pSimsReal;     // used for simulation patternspSimsReal145,7065
    unsigned *            pSimsDiff;     // used for simulation patternspSimsDiff146,7138
    unsigned *            pSimsTemp;     // used for simulation patternspSimsTemp147,7211
    int                   nSuppWords;nSuppWords150,7316
    unsigned **           pSuppS;pSuppS151,7354
    unsigned **           pSuppF;pSuppF152,7388
    Fraig_MemFixed_t *    mmNodes;       // the memory manager for nodesmmNodes155,7450
    Fraig_MemFixed_t *    mmSims;        // the memory manager for simulation infommSims156,7523
    Msat_Solver_t *       pSat;          // the SAT solverpSat159,7638
    Msat_IntVec_t *       vProj;         // the temporary array of projection vars vProj160,7697
    int                   nSatNums;      // the counter of SAT variablesnSatNums161,7781
    int *                 pModel;        // the assignment, which satisfies the miterpModel162,7854
    Msat_IntVec_t *       vVarsInt;      // the temporary array of variablesvVarsInt164,7981
    Msat_ClauseVec_t *    vAdjacents;    // the temporary storage for connectivityvAdjacents165,8058
    Msat_IntVec_t *       vVarsUsed;     // the array marking vars appearing in the conevVarsUsed166,8141
    int                   nSatCalls;     // the number of times equivalence checking was callednSatCalls169,8266
    int                   nSatProof;     // the number of times a proof was foundnSatProof170,8362
    int                   nSatCounter;   // the number of times a counter example was foundnSatCounter171,8444
    int                   nSatFails;     // the number of times the SAT solver failed to complete due to resource limit or predictionnSatFails172,8536
    int                   nSatFailsReal; // the number of times the SAT solver failed to complete due to resource limitnSatFailsReal173,8670
    int                   nSatCallsImp;  // the number of times equivalence checking was callednSatCallsImp175,8791
    int                   nSatProofImp;  // the number of times a proof was foundnSatProofImp176,8887
    int                   nSatCounterImp;// the number of times a counter example was foundnSatCounterImp177,8969
    int                   nSatFailsImp;  // the number of times the SAT solver failed to completenSatFailsImp178,9061
    int                   nSatZeros;     // the number of times the simulation vector is zeronSatZeros180,9160
    int                   nSatSupps;     // the number of times the support info was usefulnSatSupps181,9254
    int                   nRefErrors;    // the number of ref counting errorsnRefErrors182,9346
    int                   nImplies;      // the number of implication casesnImplies183,9424
    int                   nSatImpls;     // the number of implication SAT callsnSatImpls184,9500
    int                   nVarsClauses;  // the number of variables with clausesnVarsClauses185,9580
    int                   nSimplifies0;nSimplifies0186,9661
    int                   nSimplifies1;nSimplifies1187,9701
    int                   nImplies0;nImplies0188,9741
    int                   nImplies1;nImplies1189,9778
    abctime               timeToAig;     // time to transfer to the mapping structuretimeToAig192,9842
    abctime               timeSims;      // time to compute k-feasible cutstimeSims193,9928
    abctime               timeTrav;      // time to traverse the networktimeTrav194,10004
    abctime               timeFeed;      // time for solver feedback (recording and resimulating)timeFeed195,10077
    abctime               timeImply;     // time to analyze implicationstimeImply196,10175
    abctime               timeSat;       // time to compute the truth table for each cuttimeSat197,10248
    abctime               timeToNet;     // time to transfer back to the networktimeToNet198,10337
    abctime               timeTotal;     // the total mapping timetimeTotal199,10418
    abctime               time1;         // time to perform one tasktime1200,10485
    abctime               time2;         // time to perform another tasktime2201,10554
    abctime               time3;         // time to perform another tasktime3202,10627
    abctime               time4;         // time to perform another tasktime4203,10700
struct Fraig_NodeStruct_t_ Fraig_NodeStruct_t_207,10797
    int                   Num;           // the unique number (SAT var number) of this node Num210,10875
    int                   NumPi;         // if the node is a PI, this is its variable numberNumPi211,10968
    int                   Level;         // the level of the nodeLevel212,11061
    int                   nRefs;         // the number of references of the nodenRefs213,11127
    int                   TravId;        // the traversal ID (use to avoid cleaning marks)TravId214,11208
    int                   TravId2;       // the traversal ID (use to avoid cleaning marks)TravId2215,11299
    unsigned              fInv     :  1; // the mark to show that simulation info is complementedfInv218,11433
    unsigned              fNodePo  :  1; // the mark used for primary outputsfNodePo219,11531
    unsigned              fClauses :  1; // the clauses for this node are loadedfClauses220,11609
    unsigned              fMark0   :  1; // the mark used for traversalsfMark0221,11690
    unsigned              fMark1   :  1; // the mark used for traversalsfMark1222,11763
    unsigned              fMark2   :  1; // the mark used for traversalsfMark2223,11836
    unsigned              fMark3   :  1; // the mark used for traversalsfMark3224,11909
    unsigned              fFeedUse :  1; // the presence of the variable in the feedbackfFeedUse225,11982
    unsigned              fFeedVal :  1; // the value of the variable in the feedbackfFeedVal226,12071
    unsigned              fFailTfo :  1; // the node is in the TFO of the failed SAT runfFailTfo227,12157
    unsigned              nFanouts :  2; // the indicator of fanouts (none, one, or many)nFanouts228,12246
    unsigned              nOnes    : 20; // the number of 1's in the random sim infonOnes229,12336
    Fraig_Node_t *        p1;            // the first childp1232,12455
    Fraig_Node_t *        p2;            // the second childp2233,12515
    Fraig_NodeVec_t *     vFanins;       // the fanins of the supergate rooted at this nodevFanins234,12576
    Fraig_Node_t *        pNextS;        // the next node in the structural hash tablepNextS238,12792
    Fraig_Node_t *        pNextF;        // the next node in the functional (simulation) hash tablepNextF239,12879
    Fraig_Node_t *        pNextD;        // the next node in the list of nodes based on dynamic simulationpNextD240,12979
    Fraig_Node_t *        pNextE;        // the next structural choice (functionally-equivalent node)pNextE241,13086
    Fraig_Node_t *        pRepr;         // the canonical functional representative of the nodepRepr242,13188
    unsigned              uHashR;        // the hash value for random informationuHashR245,13308
    unsigned              uHashD;        // the hash value for dynamic information uHashD246,13390
    unsigned *            puSimR;        // the simulation information (random)puSimR247,13474
    unsigned *            puSimD;        // the simulation information (dynamic)puSimD248,13554
    Fraig_Node_t *        pData0;        // temporary storage for the corresponding network nodepData0251,13662
    Fraig_Node_t *        pData1;        // temporary storage for the corresponding network nodepData1252,13759
    Fraig_Node_t *        pFanPivot;     // the first fanout of this nodepFanPivot256,13925
    Fraig_Node_t *        pFanFanin1;    // the next fanout of p1pFanFanin1257,13999
    Fraig_Node_t *        pFanFanin2;    // the next fanout of p2pFanFanin2258,14065
struct Fraig_NodeVecStruct_t_Fraig_NodeVecStruct_t_263,14166
    int                   nCap;          // the number of allocated entriesnCap265,14198
    int                   nSize;         // the number of entries in the arraynSize266,14274
    Fraig_Node_t **       pArray;        // the array of nodespArray267,14353
struct Fraig_HashTableStruct_t_Fraig_HashTableStruct_t_271,14439
    Fraig_Node_t **       pBins;         // the table binspBins273,14473
    int                   nBins;         // the size of the tablenBins274,14532
    int                   nEntries;      // the total number of entries in the tablenEntries275,14598
#define Fraig_NodeReadNextFanout(Fraig_NodeReadNextFanout279,14734
#define Fraig_NodeReadNextFanoutPlace(Fraig_NodeReadNextFanoutPlace284,15068
#define Fraig_NodeForEachFanout(Fraig_NodeForEachFanout288,15307
#define Fraig_NodeForEachFanoutSafe(Fraig_NodeForEachFanoutSafe292,15555
#define Fraig_TableBinForEachEntryS(Fraig_TableBinForEachEntryS301,16072
#define Fraig_TableBinForEachEntrySafeS(Fraig_TableBinForEachEntrySafeS305,16308
#define Fraig_TableBinForEachEntryF(Fraig_TableBinForEachEntryF312,16756
#define Fraig_TableBinForEachEntrySafeF(Fraig_TableBinForEachEntrySafeF316,16992
#define Fraig_TableBinForEachEntryD(Fraig_TableBinForEachEntryD323,17451
#define Fraig_TableBinForEachEntrySafeD(Fraig_TableBinForEachEntrySafeD327,17687
#define Fraig_TableBinForEachEntryE(Fraig_TableBinForEachEntryE334,18122
#define Fraig_TableBinForEachEntrySafeE(Fraig_TableBinForEachEntrySafeE338,18358

src/proof/fraig/fraigVec.c,2509
Fraig_NodeVec_t * Fraig_NodeVecAlloc( int nCap )Fraig_NodeVecAlloc43,1260
void Fraig_NodeVecFree( Fraig_NodeVec_t * p )Fraig_NodeVecFree66,1789
Fraig_NodeVec_t * Fraig_NodeVecDup( Fraig_NodeVec_t * pVec )Fraig_NodeVecDup83,2149
Fraig_Node_t ** Fraig_NodeVecReadArray( Fraig_NodeVec_t * p )Fraig_NodeVecReadArray105,2733
int Fraig_NodeVecReadSize( Fraig_NodeVec_t * p )Fraig_NodeVecReadSize121,3056
void Fraig_NodeVecGrow( Fraig_NodeVec_t * p, int nCapMin )Fraig_NodeVecGrow137,3406
void Fraig_NodeVecShrink( Fraig_NodeVec_t * p, int nSizeNew )Fraig_NodeVecShrink156,3843
void Fraig_NodeVecClear( Fraig_NodeVec_t * p )Fraig_NodeVecClear173,4205
void Fraig_NodeVecPush( Fraig_NodeVec_t * p, Fraig_Node_t * Entry )Fraig_NodeVecPush189,4509
int Fraig_NodeVecPushUnique( Fraig_NodeVec_t * p, Fraig_Node_t * Entry )Fraig_NodeVecPushUnique212,5123
void Fraig_NodeVecPushOrder( Fraig_NodeVec_t * p, Fraig_Node_t * pNode )Fraig_NodeVecPushOrder233,5640
int Fraig_NodeVecPushUniqueOrder( Fraig_NodeVec_t * p, Fraig_Node_t * pNode )Fraig_NodeVecPushUniqueOrder261,6411
void Fraig_NodeVecPushOrderByLevel( Fraig_NodeVec_t * p, Fraig_Node_t * pNode )Fraig_NodeVecPushOrderByLevel282,6938
int Fraig_NodeVecPushUniqueOrderByLevel( Fraig_NodeVec_t * p, Fraig_Node_t * pNode )Fraig_NodeVecPushUniqueOrderByLevel310,7760
Fraig_Node_t * Fraig_NodeVecPop( Fraig_NodeVec_t * p )Fraig_NodeVecPop331,8252
void Fraig_NodeVecRemove( Fraig_NodeVec_t * p, Fraig_Node_t * Entry )Fraig_NodeVecRemove347,8580
void Fraig_NodeVecWriteEntry( Fraig_NodeVec_t * p, int i, Fraig_Node_t * Entry )Fraig_NodeVecWriteEntry370,9111
Fraig_Node_t * Fraig_NodeVecReadEntry( Fraig_NodeVec_t * p, int i )Fraig_NodeVecReadEntry387,9495
int Fraig_NodeVecCompareLevelsIncreasing( Fraig_Node_t ** pp1, Fraig_Node_t ** pp2 )Fraig_NodeVecCompareLevelsIncreasing404,9902
int Fraig_NodeVecCompareLevelsDecreasing( Fraig_Node_t ** pp1, Fraig_Node_t ** pp2 )Fraig_NodeVecCompareLevelsDecreasing426,10459
int Fraig_NodeVecCompareNumbers( Fraig_Node_t ** pp1, Fraig_Node_t ** pp2 )Fraig_NodeVecCompareNumbers448,11016
int Fraig_NodeVecCompareRefCounts( Fraig_Node_t ** pp1, Fraig_Node_t ** pp2 )Fraig_NodeVecCompareRefCounts470,11548
void Fraig_NodeVecSortByLevel( Fraig_NodeVec_t * p, int fIncreasing )Fraig_NodeVecSortByLevel501,12280
void Fraig_NodeVecSortByNumber( Fraig_NodeVec_t * p )Fraig_NodeVecSortByNumber522,13007
void Fraig_NodeVecSortByRefCount( Fraig_NodeVec_t * p )Fraig_NodeVecSortByRefCount539,13497

src/proof/fraig/fraigPrime.c,71
int s_FraigPrimes[FRAIG_MAX_PRIMES] = { 2, 3, 5, s_FraigPrimes30,903

src/proof/fraig/fraigApi.c,8395
Fraig_NodeVec_t * Fraig_ManReadVecInputs( Fraig_Man_t * p )                   { return p->vInputs;            }Fraig_ManReadVecInputs43,1295
Fraig_NodeVec_t * Fraig_ManReadVecOutputs( Fraig_Man_t * p )                  { return p->vOutputs;           }Fraig_ManReadVecOutputs44,1407
Fraig_NodeVec_t * Fraig_ManReadVecNodes( Fraig_Man_t * p )                    { return p->vNodes;             }Fraig_ManReadVecNodes45,1519
Fraig_Node_t **   Fraig_ManReadInputs ( Fraig_Man_t * p )                     { return p->vInputs->pArray;    }Fraig_ManReadInputs46,1631
Fraig_Node_t **   Fraig_ManReadOutputs( Fraig_Man_t * p )                     { return p->vOutputs->pArray;   }Fraig_ManReadOutputs47,1743
Fraig_Node_t **   Fraig_ManReadNodes( Fraig_Man_t * p )                       { return p->vNodes->pArray;     }Fraig_ManReadNodes48,1855
int               Fraig_ManReadInputNum ( Fraig_Man_t * p )                   { return p->vInputs->nSize;     }Fraig_ManReadInputNum49,1967
int               Fraig_ManReadOutputNum( Fraig_Man_t * p )                   { return p->vOutputs->nSize;    }Fraig_ManReadOutputNum50,2079
int               Fraig_ManReadNodeNum( Fraig_Man_t * p )                     { return p->vNodes->nSize;      }Fraig_ManReadNodeNum51,2191
Fraig_Node_t *    Fraig_ManReadConst1 ( Fraig_Man_t * p )                     { return p->pConst1;            }Fraig_ManReadConst152,2303
Fraig_Node_t *    Fraig_ManReadIthNode( Fraig_Man_t * p, int i )              { assert ( i < p->vNodes->nSize  ); return p->vNodes->pArray[i];  }Fraig_ManReadIthNode53,2415
char **           Fraig_ManReadInputNames( Fraig_Man_t * p )                  { return p->ppInputNames;       }Fraig_ManReadInputNames54,2561
char **           Fraig_ManReadOutputNames( Fraig_Man_t * p )                 { return p->ppOutputNames;      }Fraig_ManReadOutputNames55,2673
char *            Fraig_ManReadVarsInt( Fraig_Man_t * p )                     { return (char *)p->vVarsInt;   }Fraig_ManReadVarsInt56,2785
char *            Fraig_ManReadSat( Fraig_Man_t * p )                         { return (char *)p->pSat;       }Fraig_ManReadSat57,2897
int               Fraig_ManReadFuncRed( Fraig_Man_t * p )                     { return p->fFuncRed;   }Fraig_ManReadFuncRed58,3009
int               Fraig_ManReadFeedBack( Fraig_Man_t * p )                    { return p->fFeedBack;  }Fraig_ManReadFeedBack59,3113
int               Fraig_ManReadDoSparse( Fraig_Man_t * p )                    { return p->fDoSparse;  }Fraig_ManReadDoSparse60,3217
int               Fraig_ManReadChoicing( Fraig_Man_t * p )                    { return p->fChoicing;  }Fraig_ManReadChoicing61,3321
int               Fraig_ManReadVerbose( Fraig_Man_t * p )                     { return p->fVerbose;   }Fraig_ManReadVerbose62,3425
int *             Fraig_ManReadModel( Fraig_Man_t * p )                       { return p->pModel;     }Fraig_ManReadModel63,3529
int               Fraig_ManReadPatternNumRandom( Fraig_Man_t * p )            { return p->nWordsRand * 32;  }Fraig_ManReadPatternNumRandom65,3735
int               Fraig_ManReadPatternNumDynamic( Fraig_Man_t * p )           { return p->iWordStart * 32;  }Fraig_ManReadPatternNumDynamic67,3990
int               Fraig_ManReadPatternNumDynamicFiltered( Fraig_Man_t * p )   { return p->iPatsPerm;        }Fraig_ManReadPatternNumDynamicFiltered69,4264
int               Fraig_ManReadSatFails( Fraig_Man_t * p )                    { return p->nSatFailsReal;    }      Fraig_ManReadSatFails71,4429
int               Fraig_ManReadConflicts( Fraig_Man_t * p )                   { return p->pSat? Msat_SolverReadBackTracks(p->pSat) : 0; }      Fraig_ManReadConflicts73,4598
int               Fraig_ManReadInspects( Fraig_Man_t * p )                    { return p->pSat? Msat_SolverReadInspects(p->pSat) : 0;   }            Fraig_ManReadInspects75,4797
void            Fraig_ManSetFuncRed( Fraig_Man_t * p, int fFuncRed )        { p->fFuncRed  = fFuncRed;  }Fraig_ManSetFuncRed88,5238
void            Fraig_ManSetFeedBack( Fraig_Man_t * p, int fFeedBack )      { p->fFeedBack = fFeedBack; }Fraig_ManSetFeedBack89,5344
void            Fraig_ManSetDoSparse( Fraig_Man_t * p, int fDoSparse )      { p->fDoSparse = fDoSparse; }Fraig_ManSetDoSparse90,5450
void            Fraig_ManSetChoicing( Fraig_Man_t * p, int fChoicing )      { p->fChoicing = fChoicing; }Fraig_ManSetChoicing91,5556
void            Fraig_ManSetTryProve( Fraig_Man_t * p, int fTryProve )      { p->fTryProve = fTryProve; }Fraig_ManSetTryProve92,5662
void            Fraig_ManSetVerbose( Fraig_Man_t * p, int fVerbose )        { p->fVerbose  = fVerbose;  }Fraig_ManSetVerbose93,5768
void            Fraig_ManSetOutputNames( Fraig_Man_t * p, char ** ppNames ) { p->ppOutputNames = ppNames; }Fraig_ManSetOutputNames94,5874
void            Fraig_ManSetInputNames( Fraig_Man_t * p, char ** ppNames )  { p->ppInputNames  = ppNames; }Fraig_ManSetInputNames95,5982
Fraig_Node_t *  Fraig_NodeReadData0( Fraig_Node_t * p )                   { return p->pData0;    }Fraig_NodeReadData0108,6379
Fraig_Node_t *  Fraig_NodeReadData1( Fraig_Node_t * p )                   { return p->pData1;    }Fraig_NodeReadData1109,6478
int             Fraig_NodeReadNum( Fraig_Node_t * p )                     { return p->Num;       }Fraig_NodeReadNum110,6577
Fraig_Node_t *  Fraig_NodeReadOne( Fraig_Node_t * p )                     { assert (!Fraig_IsComplement(p)); return p->p1; }Fraig_NodeReadOne111,6676
Fraig_Node_t *  Fraig_NodeReadTwo( Fraig_Node_t * p )                     { assert (!Fraig_IsComplement(p)); return p->p2; }Fraig_NodeReadTwo112,6801
Fraig_Node_t *  Fraig_NodeReadNextE( Fraig_Node_t * p )                   { return p->pNextE;    }Fraig_NodeReadNextE113,6926
Fraig_Node_t *  Fraig_NodeReadRepr( Fraig_Node_t * p )                    { return p->pRepr;     }Fraig_NodeReadRepr114,7025
int             Fraig_NodeReadNumRefs( Fraig_Node_t * p )                 { return p->nRefs;     }Fraig_NodeReadNumRefs115,7124
int             Fraig_NodeReadNumFanouts( Fraig_Node_t * p )              { return p->nFanouts;  }Fraig_NodeReadNumFanouts116,7223
int             Fraig_NodeReadSimInv( Fraig_Node_t * p )                  { return p->fInv;      }Fraig_NodeReadSimInv117,7322
int             Fraig_NodeReadNumOnes( Fraig_Node_t * p )                 { return p->nOnes;     }Fraig_NodeReadNumOnes118,7421
unsigned *      Fraig_NodeReadPatternsRandom( Fraig_Node_t * p )          { return p->puSimR;    }Fraig_NodeReadPatternsRandom121,7768
unsigned *      Fraig_NodeReadPatternsDynamic( Fraig_Node_t * p )         { return p->puSimD;    }Fraig_NodeReadPatternsDynamic124,8141
void            Fraig_NodeSetData0( Fraig_Node_t * p, Fraig_Node_t * pData )      { p->pData0  = pData;  }Fraig_NodeSetData0137,8528
void            Fraig_NodeSetData1( Fraig_Node_t * p, Fraig_Node_t * pData )      { p->pData1  = pData;  }Fraig_NodeSetData1138,8635
int             Fraig_NodeIsConst( Fraig_Node_t * p )    {  return (Fraig_Regular(p))->Num   == 0;  }Fraig_NodeIsConst151,9005
int             Fraig_NodeIsVar( Fraig_Node_t * p )      {  return (Fraig_Regular(p))->NumPi >= 0;  }Fraig_NodeIsVar152,9107
int             Fraig_NodeIsAnd( Fraig_Node_t * p )      {  return (Fraig_Regular(p))->NumPi <  0 && (Fraig_Regular(p))->Num > 0;  }Fraig_NodeIsAnd153,9209
int             Fraig_NodeComparePhase( Fraig_Node_t * p1, Fraig_Node_t * p2 ) { assert( !Fraig_IsComplement(p1) ); assert( !Fraig_IsComplement(p2) ); return p1->fInv ^ p2->fInv; }Fraig_NodeComparePhase154,9342
Fraig_Node_t * Fraig_ManReadIthVar( Fraig_Man_t * p, int i )Fraig_ManReadIthVar168,9877
void Fraig_ManSetPo( Fraig_Man_t * p, Fraig_Node_t * pNode )Fraig_ManSetPo194,10569
Fraig_Node_t * Fraig_NodeAnd( Fraig_Man_t * p, Fraig_Node_t * p1, Fraig_Node_t * p2 )Fraig_NodeAnd212,11046
Fraig_Node_t * Fraig_NodeOr( Fraig_Man_t * p, Fraig_Node_t * p1, Fraig_Node_t * p2 )Fraig_NodeOr228,11464
Fraig_Node_t * Fraig_NodeExor( Fraig_Man_t * p, Fraig_Node_t * p1, Fraig_Node_t * p2 )Fraig_NodeExor244,11918
Fraig_Node_t * Fraig_NodeMux( Fraig_Man_t * p, Fraig_Node_t * pC, Fraig_Node_t * pT, Fraig_Node_t * pE )Fraig_NodeMux260,12348
void Fraig_NodeSetChoice( Fraig_Man_t * pMan, Fraig_Node_t * pNodeOld, Fraig_Node_t * pNodeNew )Fraig_NodeSetChoice285,13221

src/proof/fraig/fraig.h,4140
#define ABC__sat__fraig__fraig_hABC__sat__fraig__fraig_h20,542
typedef struct Fraig_ManStruct_t_         Fraig_Man_t;Fraig_Man_t40,1268
typedef struct Fraig_NodeStruct_t_        Fraig_Node_t;Fraig_Node_t41,1323
typedef struct Fraig_NodeVecStruct_t_     Fraig_NodeVec_t;Fraig_NodeVec_t42,1379
typedef struct Fraig_HashTableStruct_t_   Fraig_HashTable_t;Fraig_HashTable_t43,1438
typedef struct Fraig_ParamsStruct_t_      Fraig_Params_t;Fraig_Params_t44,1499
typedef struct Fraig_PatternsStruct_t_    Fraig_Patterns_t;Fraig_Patterns_t45,1557
typedef struct Prove_ParamsStruct_t_      Prove_Params_t;Prove_Params_t46,1617
struct Fraig_ParamsStruct_t_Fraig_ParamsStruct_t_48,1676
    int  nPatsRand;     // the number of words of random simulation infonPatsRand50,1707
    int  nPatsDyna;     // the number of words of dynamic simulation infonPatsDyna51,1780
    int  nBTLimit;      // the max number of backtracks to performnBTLimit52,1854
    int  nSeconds;      // the timeout for the final proofnSeconds53,1921
    int  fFuncRed;      // performs only one level hashingfFuncRed54,1980
    int  fFeedBack;     // enables solver feedbackfFeedBack55,2039
    int  fDist1Pats;    // enables distance-1 patternsfDist1Pats56,2090
    int  fDoSparse;     // performs equiv tests for sparse functions fDoSparse57,2145
    int  fChoicing;     // enables recording structural choicesfChoicing58,2215
    int  fTryProve;     // tries to solve the final miterfTryProve59,2279
    int  fVerbose;      // the verbosiness flagfVerbose60,2337
    int  fVerboseP;     // the verbosiness flag (for proof reporting)fVerboseP61,2385
    int  fInternal;     // is set to 1 for internal fraig callsfInternal62,2455
    int  nConfLimit;    // the limit on the number of conflictsnConfLimit63,2519
    ABC_INT64_T nInspLimit;  // the limit on the number of inspectionsnInspLimit64,2583
struct Prove_ParamsStruct_t_Prove_ParamsStruct_t_67,2658
    int     fUseFraiging;          // enables fraigingfUseFraiging70,2715
    int     fUseRewriting;         // enables rewritingfUseRewriting71,2770
    int     fUseBdds;              // enables BDD construction when other methods failfUseBdds72,2826
    int     fVerbose;              // prints verbose statsfVerbose73,2913
    int     nItersMax;             // the number of iterationsnItersMax75,2990
    int     nMiteringLimitStart;   // starting mitering limitnMiteringLimitStart77,3070
    float   nMiteringLimitMulti;   // multiplicative coefficient to increase the limit in each iterationnMiteringLimitMulti78,3132
    int     nRewritingLimitStart;  // the number of rewriting iterationsnRewritingLimitStart80,3255
    float   nRewritingLimitMulti;  // multiplicative coefficient to increase the limit in each iterationnRewritingLimitMulti81,3328
    int     nFraigingLimitStart;   // starting backtrack(conflict) limitnFraigingLimitStart83,3450
    float   nFraigingLimitMulti;   // multiplicative coefficient to increase the limit in each iterationnFraigingLimitMulti84,3523
    int     nBddSizeLimit;         // the number of BDD nodes when construction is abortednBddSizeLimit86,3662
    int     fBddReorder;           // enables dynamic BDD variable reorderingfBddReorder87,3753
    int     nMiteringLimitLast;    // final mitering limitnMiteringLimitLast89,3857
    ABC_INT64_T  nTotalBacktrackLimit;  // global limit on the number of backtracksnTotalBacktrackLimit91,3948
    ABC_INT64_T  nTotalInspectLimit;    // global limit on the number of clause inspectsnTotalInspectLimit92,4032
    ABC_INT64_T  nTotalBacktracksMade;  // the total number of backtracks madenTotalBacktracksMade94,4153
    ABC_INT64_T  nTotalInspectsMade;    // the total number of inspects madenTotalInspectsMade95,4232
#define Fraig_IsComplement(Fraig_IsComplement107,4814
#define Fraig_Regular(Fraig_Regular108,4883
#define Fraig_Not(Fraig_Not109,4962
#define Fraig_NotCond(Fraig_NotCond110,5040
#define Fraig_Ref(Fraig_Ref113,5151
#define Fraig_Deref(Fraig_Deref114,5186
#define Fraig_RecursiveDeref(Fraig_RecursiveDeref115,5221

src/proof/fraig/fraigSat.c,2656
static int nMuxes;nMuxes48,2122
int Fraig_NodesAreEqual( Fraig_Man_t * p, Fraig_Node_t * pNode1, Fraig_Node_t * pNode2, int nBTLimit, int nTimeLimit )Fraig_NodesAreEqual65,2667
void Fraig_ManProveMiter( Fraig_Man_t * p )Fraig_ManProveMiter85,3267
int Fraig_ManCheckMiter( Fraig_Man_t * p )Fraig_ManCheckMiter130,4599
int Fraig_MarkTfi_rec( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_MarkTfi_rec173,5890
int Fraig_MarkTfi2_rec( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_MarkTfi2_rec198,6587
int Fraig_MarkTfi3_rec( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_MarkTfi3_rec229,7432
void Fraig_VarsStudy( Fraig_Man_t * p, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_VarsStudy260,8237
int Fraig_NodeIsEquivalent( Fraig_Man_t * p, Fraig_Node_t * pOld, Fraig_Node_t * pNew, int nBTLimit, int nTimeLimit )Fraig_NodeIsEquivalent302,9483
int Fraig_NodeIsImplication( Fraig_Man_t * p, Fraig_Node_t * pOld, Fraig_Node_t * pNew, int nBTLimit )Fraig_NodeIsImplication551,16751
int Fraig_ManCheckClauseUsingSat( Fraig_Man_t * p, Fraig_Node_t * pNode1, Fraig_Node_t * pNode2, int nBTLimit )Fraig_ManCheckClauseUsingSat653,19803
void Fraig_PrepareCones( Fraig_Man_t * pMan, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_PrepareCones746,22703
void Fraig_PrepareCones_rec( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_PrepareCones_rec793,24072
void Fraig_OrderVariables( Fraig_Man_t * pMan, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_OrderVariables875,27056
void Fraig_SetupAdjacent( Fraig_Man_t * pMan, Msat_IntVec_t * vConeVars )Fraig_SetupAdjacent974,30580
void Fraig_SetupAdjacentMark( Fraig_Man_t * pMan, Msat_IntVec_t * vConeVars )Fraig_SetupAdjacentMark1034,32516
void Fraig_SupergateAddClauses( Fraig_Man_t * p, Fraig_Node_t * pNode, Fraig_NodeVec_t * vSuper )Fraig_SupergateAddClauses1104,34618
void Fraig_SupergateAddClausesExor( Fraig_Man_t * p, Fraig_Node_t * pNode )Fraig_SupergateAddClausesExor1163,36630
void Fraig_SupergateAddClausesMux( Fraig_Man_t * p, Fraig_Node_t * pNode )Fraig_SupergateAddClausesMux1214,38690
void Fraig_DetectFanoutFreeCone_rec( Fraig_Node_t * pNode, Fraig_NodeVec_t * vSuper, Fraig_NodeVec_t * vInside, int fFirst )Fraig_DetectFanoutFreeCone_rec1308,41780
void Fraig_DetectFanoutFreeConeMux_rec( Fraig_Node_t * pNode, Fraig_NodeVec_t * vSuper, Fraig_NodeVec_t * vInside, int fFirst )Fraig_DetectFanoutFreeConeMux_rec1371,43700
void Fraig_DetectFanoutFreeConeMux( Fraig_Man_t * pMan, Fraig_Node_t * pNode )Fraig_DetectFanoutFreeConeMux1401,44911
void Fraig_SetActivity( Fraig_Man_t * pMan, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_SetActivity1436,46010

src/proof/fraig/fraigFeed.c,1822
void Fraig_FeedBackInit( Fraig_Man_t * p )Fraig_FeedBackInit57,2105
void Fraig_FeedBack( Fraig_Man_t * p, int * pModel, Msat_IntVec_t * vVars, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_FeedBack80,2946
int Fraig_FeedBackPrepare( Fraig_Man_t * p, int * pModel, Msat_IntVec_t * vVars )Fraig_FeedBackPrepare125,4478
int Fraig_FeedBackInsert( Fraig_Man_t * p, int nVarsPi )Fraig_FeedBackInsert167,5575
void Fraig_FeedBackVerify( Fraig_Man_t * p, Fraig_Node_t * pOld, Fraig_Node_t * pNew )Fraig_FeedBackVerify252,8333
int Fraig_FeedBackCompress( Fraig_Man_t * p )Fraig_FeedBackCompress278,9064
void Fraig_FeedBackCovering( Fraig_Man_t * p, Msat_IntVec_t * vPats )Fraig_FeedBackCovering386,12601
Fraig_NodeVec_t * Fraig_FeedBackCoveringStart( Fraig_Man_t * p )Fraig_FeedBackCoveringStart449,14831
int Fraig_GetSmallestColumn( int * pHits, int nHits )Fraig_GetSmallestColumn555,18973
int Fraig_GetHittingPattern( unsigned * pSims, int nWords )Fraig_GetHittingPattern587,19810
void Fraig_CancelCoveredColumns( Fraig_NodeVec_t * vColumns, int * pHits, int iPat )Fraig_CancelCoveredColumns612,20369
void Fraig_FeedBackCheckTable( Fraig_Man_t * p )Fraig_FeedBackCheckTable636,20968
void Fraig_FeedBackCheckTableF0( Fraig_Man_t * p )Fraig_FeedBackCheckTableF0674,22239
void Fraig_ReallocateSimulationInfo( Fraig_Man_t * p )Fraig_ReallocateSimulationInfo711,23434
int * Fraig_ManAllocCounterExample( Fraig_Man_t * p )Fraig_ManAllocCounterExample787,26172
int Fraig_ManSimulateBitNode_rec( Fraig_Man_t * p, Fraig_Node_t * pNode )Fraig_ManSimulateBitNode_rec807,26637
int Fraig_ManSimulateBitNode( Fraig_Man_t * p, Fraig_Node_t * pNode, int * pModel )Fraig_ManSimulateBitNode832,27416
int * Fraig_ManSaveCounterExample( Fraig_Man_t * p, Fraig_Node_t * pNode )Fraig_ManSaveCounterExample860,28199

src/proof/fraig/fraigMem.c,1529
struct Fraig_MemFixed_t_Fraig_MemFixed_t_28,795
    int           nEntrySize;    // the size of one entrynEntrySize31,866
    int           nEntriesAlloc; // the total number of entries allocatednEntriesAlloc32,924
    int           nEntriesUsed;  // the number of entries in usenEntriesUsed33,998
    int           nEntriesMax;   // the max number of entries in usenEntriesMax34,1063
    char *        pEntriesFree;  // the linked list of free entriespEntriesFree35,1132
    int           nChunkSize;    // the size of one chunknChunkSize38,1243
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc39,1301
    int           nChunks;       // the current number of memory chunks nChunks40,1374
    char **       pChunks;       // the allocated memorypChunks41,1447
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed44,1523
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc45,1596
Fraig_MemFixed_t * Fraig_MemFixedStart( int nEntrySize )Fraig_MemFixedStart63,2193
void Fraig_MemFixedStop( Fraig_MemFixed_t * p, int fVerbose )Fraig_MemFixedStop102,3128
char * Fraig_MemFixedEntryFetch( Fraig_MemFixed_t * p )Fraig_MemFixedEntryFetch131,4017
void Fraig_MemFixedEntryRecycle( Fraig_MemFixed_t * p, char * pEntry )Fraig_MemFixedEntryRecycle182,5670
void Fraig_MemFixedRestart( Fraig_MemFixed_t * p )Fraig_MemFixedRestart202,6275
int Fraig_MemFixedReadMemUsage( Fraig_MemFixed_t * p )Fraig_MemFixedReadMemUsage240,7280

src/proof/fraig/fraigCanon.c,121
Fraig_Node_t * Fraig_NodeAndCanon( Fraig_Man_t * pMan, Fraig_Node_t * p1, Fraig_Node_t * p2 )Fraig_NodeAndCanon52,1950

src/proof/cec/cecClass.c,2494
static inline unsigned * Cec_ObjSim( Cec_ManSim_t * p, int Id )            { return p->pMems + p->pSimInfo[Id] + 1;   }Cec_ObjSim30,796
static inline void       Cec_ObjSetSim( Cec_ManSim_t * p, int Id, int n )  { p->pSimInfo[Id] = n;                     }Cec_ObjSetSim31,916
static inline float      Cec_MemUsage( Cec_ManSim_t * p )                  { return 1.0*p->nMemsMax*(p->pPars->nWords+1)/(1<<20);   }Cec_MemUsage33,1037
int Cec_ManSimCompareConst( unsigned * p, int nWords )Cec_ManSimCompareConst50,1679
int Cec_ManSimCompareEqual( unsigned * p0, unsigned * p1, int nWords )Cec_ManSimCompareEqual80,2300
int Cec_ManSimCompareConstFirstBit( unsigned * p, int nWords )Cec_ManSimCompareConstFirstBit110,2973
int Cec_ManSimCompareEqualFirstBit( unsigned * p0, unsigned * p1, int nWords )Cec_ManSimCompareEqualFirstBit140,3673
void Cec_ManSimCompareConstScore( unsigned * p, int nWords, int * pScores )Cec_ManSimCompareConstScore170,4443
void Cec_ManSimCompareEqualScore( unsigned * p0, unsigned * p1, int nWords, int * pScores )Cec_ManSimCompareEqualScore202,5269
void Cec_ManSimClassCreate( Gia_Man_t * p, Vec_Int_t * vClass )Cec_ManSimClassCreate234,6145
int Cec_ManSimClassRefineOne( Cec_ManSim_t * p, int i )Cec_ManSimClassRefineOne268,6981
int Cec_ManSimClassRemoveOne( Cec_ManSim_t * p, int i )Cec_ManSimClassRemoveOne308,8184
int Cec_ManSimHashKey( unsigned * pSim, int nWords, int nTableSize )Cec_ManSimHashKey350,9327
void Cec_ManSimMemRelink( Cec_ManSim_t * p )Cec_ManSimMemRelink378,10109
unsigned * Cec_ManSimSimRef( Cec_ManSim_t * p, int i )Cec_ManSimSimRef404,10738
unsigned * Cec_ManSimSimDeref( Cec_ManSim_t * p, int i )Cec_ManSimSimDeref441,11703
void Cec_ManSimProcessRefined( Cec_ManSim_t * p, Vec_Int_t * vRefined )Cec_ManSimProcessRefined467,12314
void Cec_ManSimSavePattern( Cec_ManSim_t * p, int iPat )Cec_ManSimSavePattern518,13922
void Cec_ManSimFindBestPattern( Cec_ManSim_t * p )Cec_ManSimFindBestPattern548,14862
int Cec_ManSimAnalyzeOutputs( Cec_ManSim_t * p )Cec_ManSimAnalyzeOutputs584,16013
int Cec_ManSimSimulateRound( Cec_ManSim_t * p, Vec_Ptr_t * vInfoCis, Vec_Ptr_t * vInfoCos )Cec_ManSimSimulateRound652,18198
void Cec_ManSimCreateInfo( Cec_ManSim_t * p, Vec_Ptr_t * vInfoCis, Vec_Ptr_t * vInfoCos )Cec_ManSimCreateInfo808,23359
int Cec_ManSimClassesPrepare( Cec_ManSim_t * p, int LevelMax )Cec_ManSimClassesPrepare851,24685
int Cec_ManSimClassesRefine( Cec_ManSim_t * p )Cec_ManSimClassesRefine923,27412

src/proof/cec/cec.h,8920
#define ABC__aig__cec__cec_hABC__aig__cec__cec_h22,541
typedef struct Cec_ParSat_t_ Cec_ParSat_t;Cec_ParSat_t43,1289
struct Cec_ParSat_t_Cec_ParSat_t_44,1332
    int              nBTLimit;      // conflict limit at a nodenBTLimit46,1355
    int              nSatVarMax;    // the max number of SAT variablesnSatVarMax47,1419
    int              nCallsRecycle; // calls to perform before recycling SAT solvernCallsRecycle48,1490
    int              fNonChrono;    // use non-chronological backtracling (for circuit SAT only)fNonChrono49,1574
    int              fPolarFlip;    // flops polarity of variablesfPolarFlip50,1671
    int              fCheckMiter;   // the circuit is the miterfCheckMiter51,1738
    int              fLearnCls;     // perform clause learningfLearnCls53,1872
    int              fSaveCexes;    // saves counter-examplesfSaveCexes54,1935
    int              fVerbose;      // verbose statsfVerbose55,1997
typedef struct Cec_ParSim_t_ Cec_ParSim_t;Cec_ParSim_t59,2079
struct Cec_ParSim_t_ Cec_ParSim_t_60,2122
    int              nWords;        // the number of simulation wordsnWords62,2146
    int              nFrames;       // the number of simulation framesnFrames63,2216
    int              nRounds;       // the number of simulation roundsnRounds64,2287
    int              nNonRefines;   // the max number of rounds without refinementnNonRefines65,2358
    int              TimeLimit;     // the runtime limit in secondsTimeLimit66,2441
    int              fDualOut;      // miter with separate outputsfDualOut67,2509
    int              fCheckMiter;   // the circuit is the miterfCheckMiter68,2576
    int              fSeqSimulate;  // performs sequential simulationfSeqSimulate70,2710
    int              fLatchCorr;    // consider only latch outputsfLatchCorr71,2780
    int              fConstCorr;    // consider only constantsfConstCorr72,2847
    int              fVeryVerbose;  // verbose statsfVeryVerbose73,2910
    int              fVerbose;      // verbose statsfVerbose74,2963
typedef struct Cec_ParSmf_t_ Cec_ParSmf_t;Cec_ParSmf_t78,3045
struct Cec_ParSmf_t_Cec_ParSmf_t_79,3088
    int              nWords;        // the number of simulation wordsnWords81,3111
    int              nRounds;       // the number of simulation roundsnRounds82,3181
    int              nFrames;       // the max number of time framesnFrames83,3252
    int              nNonRefines;   // the max number of rounds without refinementnNonRefines84,3321
    int              nMinOutputs;   // the min outputs to accumulatenMinOutputs85,3404
    int              nBTLimit;      // conflict limit at a nodenBTLimit86,3473
    int              TimeLimit;     // the runtime limit in secondsTimeLimit87,3537
    int              fDualOut;      // miter with separate outputsfDualOut88,3605
    int              fCheckMiter;   // the circuit is the miterfCheckMiter89,3672
    int              fVerbose;      // verbose statsfVerbose91,3806
typedef struct Cec_ParFra_t_ Cec_ParFra_t;Cec_ParFra_t95,3904
struct Cec_ParFra_t_Cec_ParFra_t_96,3947
    int              nWords;        // the number of simulation wordsnWords98,3970
    int              nRounds;       // the number of simulation roundsnRounds99,4040
    int              nItersMax;     // the maximum number of iterations of SAT sweepingnItersMax100,4111
    int              nBTLimit;      // conflict limit at a nodenBTLimit101,4199
    int              TimeLimit;     // the runtime limit in secondsTimeLimit102,4263
    int              nLevelMax;     // restriction on the level nodes to be sweptnLevelMax103,4331
    int              nDepthMax;     // the depth in terms of steps of speculative reductionnDepthMax104,4413
    int              fRewriting;    // enables AIG rewritingfRewriting105,4505
    int              fCheckMiter;   // the circuit is the miterfCheckMiter106,4566
    int              fDualOut;      // miter with separate outputsfDualOut108,4700
    int              fColorDiff;    // miter with separate outputsfColorDiff109,4767
    int              fSatSweeping;  // enable SAT sweepingfSatSweeping110,4834
    int              fRunCSat;      // enable another solverfRunCSat111,4893
    int              fUseCones;     // use conesfUseCones112,4954
    int              fUseOrigIds;   // enable recording of original IDsfUseOrigIds113,5003
    int              fVeryVerbose;  // verbose statsfVeryVerbose114,5075
    int              fVerbose;      // verbose statsfVerbose115,5128
    int              iOutFail;      // the failed outputiOutFail116,5181
typedef struct Cec_ParCec_t_ Cec_ParCec_t;Cec_ParCec_t120,5291
struct Cec_ParCec_t_Cec_ParCec_t_121,5334
    int              nBTLimit;      // conflict limit at a nodenBTLimit123,5357
    int              TimeLimit;     // the runtime limit in secondsTimeLimit124,5421
    int              fUseSmartCnf;  // use smart CNF computationfUseSmartCnf126,5559
    int              fRewriting;    // enables AIG rewritingfRewriting127,5624
    int              fNaive;        // performs naive SAT-based checkingfNaive128,5685
    int              fSilent;       // print no messagesfSilent129,5758
    int              fVeryVerbose;  // verbose statsfVeryVerbose130,5815
    int              fVerbose;      // verbose statsfVerbose131,5868
    int              iOutFail;      // the number of failed outputiOutFail132,5921
typedef struct Cec_ParCor_t_ Cec_ParCor_t;Cec_ParCor_t136,6040
struct Cec_ParCor_t_Cec_ParCor_t_137,6083
    int              nWords;        // the number of simulation wordsnWords139,6106
    int              nRounds;       // the number of simulation roundsnRounds140,6176
    int              nFrames;       // the number of time framesnFrames141,6247
    int              nPrefix;       // the number of time frames in the prefixnPrefix142,6312
    int              nBTLimit;      // conflict limit at a nodenBTLimit143,6391
    int              nLevelMax;     // (scorr only) the max number of levelsnLevelMax144,6455
    int              nStepsMax;     // (scorr only) the max number of induction stepsnStepsMax145,6532
    int              fLatchCorr;    // consider only latch outputsfLatchCorr146,6618
    int              fConstCorr;    // consider only constantsfConstCorr147,6685
    int              fUseRings;     // use ringsfUseRings148,6748
    int              fMakeChoices;  // use equilvaences as choicesfMakeChoices149,6797
    int              fUseCSat;      // use circuit-based solverfUseCSat150,6864
    int              fUseSmartCnf;  // use smart CNF computationfUseSmartCnf152,6998
    int              fStopWhenGone; // quit when PO is not a candidate constantfStopWhenGone153,7063
    int              fVerboseFlops; // verbose statsfVerboseFlops154,7143
    int              fVeryVerbose;  // verbose statsfVeryVerbose155,7196
    int              fVerbose;      // verbose statsfVerbose156,7249
    void *           pData;pData158,7318
    void *           pFunc;pFunc159,7346
typedef struct Cec_ParChc_t_ Cec_ParChc_t;Cec_ParChc_t163,7426
struct Cec_ParChc_t_Cec_ParChc_t_164,7469
    int              nWords;        // the number of simulation wordsnWords166,7492
    int              nRounds;       // the number of simulation roundsnRounds167,7562
    int              nBTLimit;      // conflict limit at a nodenBTLimit168,7633
    int              fUseRings;     // use ringsfUseRings169,7697
    int              fUseCSat;      // use circuit-based solverfUseCSat170,7746
    int              fVeryVerbose;  // verbose statsfVeryVerbose171,7810
    int              fVerbose;      // verbose statsfVerbose172,7863
typedef struct Cec_ParSeq_t_ Cec_ParSeq_t;Cec_ParSeq_t176,7955
struct Cec_ParSeq_t_Cec_ParSeq_t_177,7998
    int              fUseLcorr;     // enables latch correspondencefUseLcorr179,8021
    int              fUseScorr;     // enables signal correspondencefUseScorr180,8089
    int              nBTLimit;      // (scorr/lcorr) conflict limit at a nodenBTLimit181,8158
    int              nFrames;       // (scorr/lcorr) the number of timeframesnFrames182,8236
    int              nLevelMax;     // (scorr only) the max number of levelsnLevelMax183,8314
    int              fConsts;       // (scl only) merging constantsfConsts184,8391
    int              fEquivs;       // (scl only) merging equivalencesfEquivs185,8459
    int              fUseMiniSat;   // enables MiniSat in lcorr/scorrfUseMiniSat186,8530
    int              nMinDomSize;   // the size of minimum clock domainnMinDomSize187,8600
    int              fVeryVerbose;  // verbose statsfVeryVerbose188,8672
    int              fVerbose;      // verbose statsfVerbose189,8725

src/proof/cec/cecInt.h,6834
#define ABC__aig__cec__cecInt_hABC__aig__cec__cecInt_h22,550
typedef struct Cec_ManPat_t_ Cec_ManPat_t;Cec_ManPat_t48,1406
struct Cec_ManPat_t_Cec_ManPat_t_49,1449
    Vec_Int_t *      vPattern1;      // pattern in terms of primary inputsvPattern151,1472
    Vec_Int_t *      vPattern2;      // pattern in terms of primary inputsvPattern252,1547
    Vec_Str_t *      vStorage;       // storage for compressed patternsvStorage53,1622
    int              iStart;         // position in the array where recent patterns beginiStart54,1694
    int              nPats;          // total number of recent patternsnPats55,1784
    int              nPatsAll;       // total number of all patternsnPatsAll56,1856
    int              nPatLits;       // total number of literals in recent patternsnPatLits57,1925
    int              nPatLitsAll;    // total number of literals in all patternsnPatLitsAll58,2009
    int              nPatLitsMin;    // total number of literals in minimized recent patternsnPatLitsMin59,2090
    int              nPatLitsMinAll; // total number of literals in minimized all patternsnPatLitsMinAll60,2184
    int              nSeries;        // simulation seriesnSeries61,2275
    int              fVerbose;       // verbose statsfVerbose62,2333
    abctime          timeFind;       // detecting the pattern  timeFind64,2413
    abctime          timeShrink;     // minimizing the patterntimeShrink65,2477
    abctime          timeVerify;     // verifying the result of minimisationtimeVerify66,2540
    abctime          timeSort;       // sorting literals timeSort67,2617
    abctime          timePack;       // packing into sim info structures timePack68,2675
    abctime          timeTotal;      // total runtime  timeTotal69,2749
    abctime          timeTotalSave;  // total runtime for saving  timeTotalSave70,2805
typedef struct Cec_ManSat_t_ Cec_ManSat_t;Cec_ManSat_t74,2899
struct Cec_ManSat_t_Cec_ManSat_t_75,2942
    Cec_ParSat_t *   pPars;          pPars78,2983
    Gia_Man_t *      pAig;           // the AIG whose outputs are consideredpAig80,3053
    Vec_Int_t *      vStatus;        // status for each outputvStatus81,3130
    sat_solver *     pSat;           // recyclable SAT solverpSat83,3212
    int              nSatVars;       // the counter of SAT variablesnSatVars84,3274
    int *            pSatVars;       // mapping of each node into its SAT varpSatVars85,3343
    Vec_Ptr_t *      vUsedNodes;     // nodes whose SAT vars are assignedvUsedNodes86,3421
    int              nRecycles;      // the number of times SAT solver was recyclednRecycles87,3495
    int              nCallsSince;    // the number of calls since the last recyclenCallsSince88,3579
    Vec_Ptr_t *      vFanins;        // fanins of the CNF nodevFanins89,3662
    Vec_Int_t *      vCex;           // the latest counter-examplevCex91,3749
    Vec_Int_t *      vVisits;        // temporary array for visited nodes  vVisits92,3816
    int              nSatUnsat;      // the number of proofsnSatUnsat94,3920
    int              nSatSat;        // the number of failurenSatSat95,3981
    int              nSatUndec;      // the number of timeoutsnSatUndec96,4043
    int              nSatTotal;      // the number of callsnSatTotal97,4106
    int              nCexLits;nCexLits98,4166
    int              nConfUnsat;     // conflicts in unsat problemsnConfUnsat100,4214
    int              nConfSat;       // conflicts in sat problemsnConfSat101,4282
    int              nConfUndec;     // conflicts in undec problemsnConfUndec102,4348
    int              timeSatUnsat;   // unsattimeSatUnsat104,4437
    int              timeSatSat;     // sattimeSatSat105,4483
    int              timeSatUndec;   // undecidedtimeSatUndec106,4527
    int              timeTotal;      // total runtimetimeTotal107,4577
typedef struct Cec_ManSim_t_ Cec_ManSim_t;Cec_ManSim_t111,4671
struct Cec_ManSim_t_Cec_ManSim_t_112,4714
    Gia_Man_t *      pAig;           // the AIG to be used for simulationpAig115,4755
    Cec_ParSim_t *   pPars;          // simulation parameters pPars116,4829
    int              nWords;         // the number of simulation wordsnWords117,4892
    int *            pSimInfo;       // simulation information offsetspSimInfo119,4987
    unsigned *       pMems;          // allocated simulaton memorypMems120,5058
    int              nWordsAlloc;    // the number of allocated entriesnWordsAlloc121,5125
    int              nMems;          // the number of used entries  nMems122,5197
    int              nMemsMax;       // the max number of used entries nMemsMax123,5266
    int              MemFree;        // next free entryMemFree124,5338
    int              nWordsOld;      // the number of simulation words after previous relinknWordsOld125,5394
    Vec_Ptr_t *      vCiSimInfo;     // CI simulation info  vCiSimInfo127,5519
    Vec_Ptr_t *      vCoSimInfo;     // CO simulation info  vCoSimInfo128,5580
    void **          pCexes;         // counter-examples for each outputpCexes130,5665
    int              iOut;           // first failed outputiOut131,5738
    int              nOuts;          // the number of failed outputsnOuts132,5798
    Abc_Cex_t *      pCexComb;       // counter-example for the first failed outputpCexComb133,5867
    Abc_Cex_t *      pBestState;     // the state that led to most of the refinementspBestState134,5951
    int *            pScores;        // counters of refinement for each patternpScores136,6072
    Vec_Int_t *      vClassOld;      // old class numbersvClassOld138,6171
    Vec_Int_t *      vClassNew;      // new class numbersvClassNew139,6229
    Vec_Int_t *      vClassTemp;     // temporary storagevClassTemp140,6287
    Vec_Int_t *      vRefinedC;      // refined const reprsvRefinedC141,6345
typedef struct Cec_ManFra_t_ Cec_ManFra_t;Cec_ManFra_t145,6445
struct Cec_ManFra_t_Cec_ManFra_t_146,6488
    Gia_Man_t *      pAig;           // the AIG to be used for simulationpAig149,6529
    Cec_ParFra_t *   pPars;          // SAT sweeping parameters pPars150,6603
    Vec_Int_t *      vXorNodes;      // nodes used in speculative reductionvXorNodes152,6695
    int              nAllProved;     // total number of proved nodesnAllProved153,6771
    int              nAllDisproved;  // total number of disproved nodesnAllDisproved154,6840
    int              nAllFailed;     // total number of failed nodesnAllFailed155,6912
    abctime          timeSim;        // unsattimeSim157,7002
    abctime          timePat;        // unsattimePat158,7048
    abctime          timeSat;        // sattimeSat159,7094
    abctime          timeTotal;      // total runtimetimeTotal160,7138

src/proof/cec/cecSat.c,6014
typedef struct Cec2_Par_t_ Cec2_Par_t;Cec2_Par_t33,904
struct Cec2_Par_t_Cec2_Par_t_34,943
    int              nSimWords;     // simulation wordsnSimWords36,964
    int              nSimRounds;    // simulation roundsnSimRounds37,1020
    int              nItersMax;     // max number of iterationsnItersMax38,1077
    int              nConfLimit;    // SAT solver conflict limitnConfLimit39,1141
    int              fIsMiter;      // this is a miterfIsMiter40,1206
    int              fUseCones;     // use logic conesfUseCones41,1261
    int              fVeryVerbose;  // verbose statsfVeryVerbose42,1316
    int              fVerbose;      // verbose statsfVerbose43,1369
typedef struct Cec2_Man_t_ Cec2_Man_t;Cec2_Man_t47,1449
struct Cec2_Man_t_Cec2_Man_t_48,1488
    Cec2_Par_t *     pPars;          // parameterspPars50,1509
    Gia_Man_t *      pAig;           // user's AIGpAig51,1560
    Gia_Man_t *      pNew;           // internal AIGpNew52,1611
    satoko_t *       pSat;           // SAT solverpSat54,1683
    Vec_Ptr_t *      vFrontier;      // CNF constructionvFrontier55,1734
    Vec_Ptr_t *      vFanins;        // CNF constructionvFanins56,1791
    Vec_Wrd_t *      vSims;          // CI simulation infovSims57,1848
    Vec_Int_t *      vNodesNew;      // nodesvNodesNew58,1907
    Vec_Int_t *      vSatVars;       // nodesvSatVars59,1953
    Vec_Int_t *      vObjSatPairs;   // nodesvObjSatPairs60,1999
    Vec_Int_t *      vCexTriples;    // nodesvCexTriples61,2045
    int              nPatterns;nPatterns63,2109
    int              nSatSat;nSatSat64,2141
    int              nSatUnsat;nSatUnsat65,2171
    int              nSatUndec;nSatUndec66,2203
    abctime          timeSatSat;timeSatSat67,2235
    abctime          timeSatUnsat;timeSatUnsat68,2268
    abctime          timeSatUndec;timeSatUndec69,2303
    abctime          timeSim;timeSim70,2338
    abctime          timeRefine;timeRefine71,2368
    abctime          timeExtra;timeExtra72,2401
    abctime          timeStart;timeStart73,2433
static inline int    Cec2_ObjSatId( Gia_Man_t * p, Gia_Obj_t * pObj )             { return Gia_ObjCopy2Array(p, Gia_ObjId(p, pObj));                                                     }Cec2_ObjSatId76,2469
static inline int    Cec2_ObjSetSatId( Gia_Man_t * p, Gia_Obj_t * pObj, int Num ) { assert(Cec2_ObjSatId(p, pObj) == -1); Gia_ObjSetCopy2Array(p, Gia_ObjId(p, pObj), Num); return Num;  }Cec2_ObjSetSatId77,2656
static inline void   Cec2_ObjCleanSatId( Gia_Man_t * p, Gia_Obj_t * pObj )        { assert(Cec2_ObjSatId(p, pObj) != -1); Gia_ObjSetCopy2Array(p, Gia_ObjId(p, pObj), -1);               }Cec2_ObjCleanSatId78,2843
void Cec2_SetDefaultParams( Cec2_Par_t * p )Cec2_SetDefaultParams95,3509
void Cec2_AddClausesMux( Gia_Man_t * p, Gia_Obj_t * pNode, satoko_t * pSat )Cec2_AddClausesMux119,4319
void Cec2_AddClausesSuper( Gia_Man_t * p, Gia_Obj_t * pNode, Vec_Ptr_t * vSuper, satoko_t * pSat )Cec2_AddClausesSuper227,8180
void Cec2_CollectSuper_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Cec2_CollectSuper_rec281,10047
void Cec2_CollectSuper( Gia_Man_t * p, Gia_Obj_t * pObj, int fUseMuxes, Vec_Ptr_t * vSuper )Cec2_CollectSuper295,10663
void Cec2_ObjAddToFrontier( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Ptr_t * vFrontier, satoko_t * pSat )Cec2_ObjAddToFrontier302,10921
int Gia_ObjGetCnfVar( Gia_Man_t * pGia, int iObj, Vec_Ptr_t * vFrontier, Vec_Ptr_t * vFanins, satoko_t * pSat )Gia_ObjGetCnfVar320,11510
int Cec2_ObjGetCnfVar( Cec2_Man_t * p, int iObj )Cec2_ObjGetCnfVar373,13721
static inline word * Cec2_ObjSim( Gia_Man_t * p, int iObj )Cec2_ObjSim390,14118
static inline void Cec2_ObjSimSetInputBit( Gia_Man_t * p, int iObj, int Bit )Cec2_ObjSimSetInputBit394,14241
static inline void Cec2_ObjSimRo( Gia_Man_t * p, int iObj )Cec2_ObjSimRo400,14484
static inline void Cec2_ObjSimCo( Gia_Man_t * p, int iObj )Cec2_ObjSimCo408,14739
static inline void Cec2_ObjSimAnd( Gia_Man_t * p, int iObj )Cec2_ObjSimAnd421,15178
static inline int Cec2_ObjSimEqual( Gia_Man_t * p, int iObj0, int iObj1 )Cec2_ObjSimEqual441,16020
static inline void Cec2_ObjSimCi( Gia_Man_t * p, int iObj )Cec2_ObjSimCi461,16533
void Cec2_ManSimulateCis( Gia_Man_t * p )Cec2_ManSimulateCis469,16749
Abc_Cex_t * Cec2_ManDeriveCex( Gia_Man_t * p, int iOut, int iPat )Cec2_ManDeriveCex476,16897
int Cec2_ManSimulateCos( Gia_Man_t * p )Cec2_ManSimulateCos489,17286
void Cec2_ManSaveCis( Gia_Man_t * p )Cec2_ManSaveCis503,17675
int Cec2_ManSimulate( Gia_Man_t * p, Vec_Int_t * vTriples, Cec2_Man_t * pMan )Cec2_ManSimulate511,17911
void Cec2_ManSimAlloc( Gia_Man_t * p, int nWords )Cec2_ManSimAlloc541,18963
int Cec2_ManSimHashKey( word * pSim, int nSims, int nTableSize )Cec2_ManSimHashKey562,19536
void Cec2_ManSimClassRefineOne( Gia_Man_t * p, int iRepr )Cec2_ManSimClassRefineOne590,20361
void Cec2_ManCreateClasses( Gia_Man_t * p, Cec2_Man_t * pMan )Cec2_ManCreateClasses622,21425
Cec2_Man_t * Cec2_ManCreate( Gia_Man_t * pAig, Cec2_Par_t * pPars )Cec2_ManCreate676,23001
void Cec2_ManDestroy( Cec2_Man_t * p )Cec2_ManDestroy710,24241
int Cec2_ManVerify_rec( Gia_Man_t * p, int iObj, satoko_t * pSat )Cec2_ManVerify_rec756,25864
void Cec2_ManVerify( Gia_Man_t * p, int iObj0, int iObj1, int fPhase, satoko_t * pSat )Cec2_ManVerify771,26548
void Cec2_ManCollect_rec( Cec2_Man_t * p, int iObj )Cec2_ManCollect_rec794,27283
int Cec2_ManSolveTwo( Cec2_Man_t * p, int iObj0, int iObj1, int fPhase )Cec2_ManSolveTwo819,28086
int Cec2_ManSweepNode( Cec2_Man_t * p, int iObj )Cec2_ManSweepNode864,29994
void Cec2_ManPrintStats( Gia_Man_t * p, Cec2_Par_t * pPars, Cec2_Man_t * pMan )Cec2_ManPrintStats907,31629
int Cec2_ManPerformSweeping( Gia_Man_t * p, Cec2_Par_t * pPars, Gia_Man_t ** ppNew )Cec2_ManPerformSweeping916,31975
Gia_Man_t * Cec2_ManSimulateTest( Gia_Man_t * p, Cec_ParFra_t * pPars0 )Cec2_ManSimulateTest1024,36348

src/proof/cec/cecSeq.c,904
void Cec_ManSeqDeriveInfoFromCex( Vec_Ptr_t * vInfo, Gia_Man_t * pAig, Abc_Cex_t * pCex )Cec_ManSeqDeriveInfoFromCex45,1308
void Cec_ManSeqDeriveInfoInitRandom( Vec_Ptr_t * vInfo, Gia_Man_t * pAig, Abc_Cex_t * pCex )Cec_ManSeqDeriveInfoInitRandom104,3325
int Cec_ManSeqResimulate( Cec_ManSim_t * p, Vec_Ptr_t * vInfo )Cec_ManSeqResimulate137,4345
int Cec_ManSeqResimulateInfo( Gia_Man_t * pAig, Vec_Ptr_t * vSimInfo, Abc_Cex_t * pBestState, int fCheckMiter )Cec_ManSeqResimulateInfo184,6021
int Cec_ManSeqResimulateCounter( Gia_Man_t * pAig, Cec_ParSim_t * pPars, Abc_Cex_t * pCex )Cec_ManSeqResimulateCounter215,7153
int Cec_ManCountNonConstOutputs( Gia_Man_t * pAig )Cec_ManCountNonConstOutputs272,9192
int Cec_ManCheckNonTrivialCands( Gia_Man_t * pAig )Cec_ManCheckNonTrivialCands295,9782
int Cec_ManSeqSemiformal( Gia_Man_t * pAig, Cec_ParSmf_t * pPars )Cec_ManSeqSemiformal328,10719

src/proof/cec/cec.c,0

src/proof/cec/cecCec.c,1137
void Cec_ManTransformPattern( Gia_Man_t * p, int iOut, int * pValues )Cec_ManTransformPattern49,1417
int Cec_ManVerifyOld( Gia_Man_t * pMiter, int fVerbose, int * piOutFail, abctime clkTotal, int fSilent )Cec_ManVerifyOld71,2024
int Cec_ManHandleSpecialCases( Gia_Man_t * p, Cec_ParCec_t * pPars )Cec_ManHandleSpecialCases142,4352
int Cec_ManVerifyNaive( Gia_Man_t * p, Cec_ParCec_t * pPars )Cec_ManVerifyNaive226,7417
int Cec_ManVerify( Gia_Man_t * pInit, Cec_ParCec_t * pPars )Cec_ManVerify326,10633
int Cec_ManVerifySimple( Gia_Man_t * p )Cec_ManVerifySimple432,14169
int Cec_ManVerifyTwo( Gia_Man_t * p0, Gia_Man_t * p1, int fVerbose )Cec_ManVerifyTwo453,14710
int Cec_ManVerifyTwoAigs( Aig_Man_t * pAig0, Aig_Man_t * pAig1, int fVerbose )Cec_ManVerifyTwoAigs482,15688
Aig_Man_t * Cec_LatchCorrespondence( Aig_Man_t * pAig, int nConfs, int fUseCSat )Cec_LatchCorrespondence513,16481
Aig_Man_t * Cec_SignalCorrespondence( Aig_Man_t * pAig, int nConfs, int fUseCSat )Cec_SignalCorrespondence539,17259
Aig_Man_t * Cec_FraigCombinational( Aig_Man_t * pAig, int nConfs, int fVerbose )Cec_FraigCombinational564,17990

src/proof/cec/cecIso.c,1353
static inline unsigned * Cec_ManIsoInfo( unsigned * pStore, int nWords, int Id ) { return pStore + nWords * Id; }Cec_ManIsoInfo30,799
static inline void Gia_ManIsoSimulate( Gia_Obj_t * pObj, int Id, unsigned * pStore, int nWords )Gia_ManIsoSimulate47,1406
static inline void Gia_ManIsoCopy( int IdDest, int IdSour, unsigned * pStore, int nWords )Gia_ManIsoCopy84,2553
static inline int Gia_ManIsoEqual( int Id0, int Id1, unsigned * pStore, int nWords )Gia_ManIsoEqual104,3130
static inline void Gia_ManIsoRandom( int Id, unsigned * pStore, int nWords )Gia_ManIsoRandom126,3733
static inline int Gia_ManIsoHashKey( int Id, unsigned * pStore, int nWords, int nTableSize )Gia_ManIsoHashKey145,4237
static inline void Gia_ManIsoTableAdd( Gia_Man_t * p, int Id, unsigned * pStore, int nWords, int * pTable, int nTableSize )Gia_ManIsoTableAdd170,4964
static inline int Gia_ManIsoExtractClasses( Gia_Man_t * p, int Bin, unsigned * pStore, int nWords, Vec_Int_t * vNodesA, Vec_Int_t * vNodesB )Gia_ManIsoExtractClasses206,6239
static inline void Gia_ManIsoMatchNodes( int * pIso, unsigned * pStore, int nWords, Vec_Int_t * vNodesA, Vec_Int_t * vNodesB )Gia_ManIsoMatchNodes239,7231
void Cec_ManTransformClasses( Gia_Man_t * p )Cec_ManTransformClasses268,8032
int * Cec_ManDetectIsomorphism( Gia_Man_t * p )Cec_ManDetectIsomorphism297,8831

src/proof/cec/cecChoice.c,815
static inline int Cec_ManCombSpecReal( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Cec_ManCombSpecReal52,1688
void Cec_ManCombSpecReduce_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Cec_ManCombSpecReduce_rec71,2321
Gia_Man_t * Cec_ManCombSpecReduce( Gia_Man_t * p, Vec_Int_t ** pvOutputs, int fRings )Cec_ManCombSpecReduce96,3037
int Cec_ManChoiceComputation_int( Gia_Man_t * pAig, Cec_ParChc_t * pPars )Cec_ManChoiceComputation_int201,7232
Gia_Man_t * Cec_ManChoiceComputationVec( Gia_Man_t * pGia, int nGias, Cec_ParChc_t * pPars )Cec_ManChoiceComputationVec313,11523
Gia_Man_t * Cec_ManChoiceComputation( Gia_Man_t * pAig, Cec_ParChc_t * pParsChc )Cec_ManChoiceComputation348,12784
Aig_Man_t * Cec_ComputeChoices( Gia_Man_t * pGia, Dch_Pars_t * pPars )Cec_ComputeChoices385,13898

src/proof/cec/cecSynth.c,1047
void Cec_SeqSynthesisSetDefaultParams( Cec_ParSeq_t * p )Cec_SeqSynthesisSetDefaultParams46,1323
int Cec_SeqReadMinDomSize( Cec_ParSeq_t * p )Cec_SeqReadMinDomSize73,2341
int Cec_SeqReadVerbose( Cec_ParSeq_t * p )Cec_SeqReadVerbose89,2653
Gia_Man_t * Gia_ManRegCreatePart( Gia_Man_t * p, Vec_Int_t * vPart, int * pnCountPis, int * pnCountRegs, int ** ppMapBack )Gia_ManRegCreatePart105,2994
int Gia_TransferMappedClasses( Gia_Man_t * pPart, int * pMapBack, int * pReprs )Gia_TransferMappedClasses204,6698
int Gia_ManFindRepr_rec( int * pReprs, int Id )Gia_ManFindRepr_rec242,7660
void Gia_ManNormalizeEquivalences( Gia_Man_t * p, int * pReprs )Gia_ManNormalizeEquivalences262,8117
int Cec_SequentialSynthesisPart( Gia_Man_t * p, Cec_ParSeq_t * pPars )Cec_SequentialSynthesisPart291,8971
static inline int Gia_ManTestOnePair_rec( sat_solver * pSat, Gia_Man_t * p, int iObj, Vec_Int_t * vSatVar )Gia_ManTestOnePair_rec386,12577
int Gia_ManTestOnePair( Gia_Man_t * p, int iObj1, int iObj2, int fPhase )Gia_ManTestOnePair403,13284

src/proof/cec/cecPat.c,1802
static inline void Cec_ManPatStoreNum( Cec_ManPat_t * p, int Num )Cec_ManPatStoreNum45,1231
static inline int Cec_ManPatRestoreNum( Cec_ManPat_t * p )Cec_ManPatRestoreNum68,1737
static inline void Cec_ManPatStore( Cec_ManPat_t * p, Vec_Int_t * vPat )Cec_ManPatStore87,2190
static inline void Cec_ManPatRestore( Cec_ManPat_t * p, Vec_Int_t * vPat )Cec_ManPatRestore113,2873
int Cec_ManPatComputePattern_rec( Cec_ManSat_t * pSat, Gia_Man_t * p, Gia_Obj_t * pObj )Cec_ManPatComputePattern_rec140,3548
void Cec_ManPatComputePattern1_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vPat )Cec_ManPatComputePattern1_rec170,4498
void Cec_ManPatComputePattern2_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vPat )Cec_ManPatComputePattern2_rec208,5718
int Cec_ManPatComputePattern3_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Cec_ManPatComputePattern3_rec246,6938
void Cec_ManPatVerifyPattern( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vPat )Cec_ManPatVerifyPattern278,7911
void Cec_ManPatComputePattern4_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Cec_ManPatComputePattern4_rec317,8994
void Cec_ManPatCleanMark0( Gia_Man_t * p, Gia_Obj_t * pObj )Cec_ManPatCleanMark0341,9623
void Cec_ManPatSavePattern( Cec_ManPat_t * pMan, Cec_ManSat_t *  p, Gia_Obj_t * pObj )Cec_ManPatSavePattern359,10050
void Cec_ManPatSavePatternCSat( Cec_ManPat_t * pMan, Vec_Int_t * vPat )Cec_ManPatSavePatternCSat402,11718
int Cec_ManPatCollectTry( Vec_Ptr_t * vInfo, Vec_Ptr_t * vPres, int iBit, int * pLits, int nLits )Cec_ManPatCollectTry421,12178
Vec_Ptr_t * Cec_ManPatCollectPatterns( Cec_ManPat_t *  pMan, int nInputs, int nWordsInit )Cec_ManPatCollectPatterns455,13295
Vec_Ptr_t * Cec_ManPatPackPatterns( Vec_Int_t * vCexStore, int nInputs, int nRegs, int nWordsInit )Cec_ManPatPackPatterns513,15262

src/proof/cec/cecSimBack.c,491
int Cec_ObjSatVerify( Gia_Man_t * p, Gia_Obj_t * pRoot, int Value )Cec_ObjSatVerify46,1273
word Cec_ManCheckSat2_rec( Gia_Man_t * p, Gia_Obj_t * pObj, word Value, Vec_Wrd_t * vValues )Cec_ManCheckSat2_rec80,2358
word Cec_ManCheckSat2( Gia_Man_t * p, Gia_Obj_t * pObj, int Value, Vec_Wrd_t * vValues )Cec_ManCheckSat2110,3536
int Cec_ManCheckSat_rec( Gia_Man_t * p, Gia_Obj_t * pObj, int Value )Cec_ManCheckSat_rec126,3910
void Cec_ManSimBack( Gia_Man_t * p )Cec_ManSimBack156,5014

src/proof/cec/cecSatG.c,6112
typedef struct Cec3_Par_t_ Cec3_Par_t;Cec3_Par_t33,909
struct Cec3_Par_t_Cec3_Par_t_34,948
    int              nSimWords;     // simulation wordsnSimWords36,969
    int              nSimRounds;    // simulation roundsnSimRounds37,1025
    int              nItersMax;     // max number of iterationsnItersMax38,1082
    int              nConfLimit;    // SAT solver conflict limitnConfLimit39,1146
    int              fIsMiter;      // this is a miterfIsMiter40,1211
    int              fUseCones;     // use logic conesfUseCones41,1266
    int              fVeryVerbose;  // verbose statsfVeryVerbose42,1321
    int              fVerbose;      // verbose statsfVerbose43,1374
typedef struct Cec3_Man_t_ Cec3_Man_t;Cec3_Man_t47,1454
struct Cec3_Man_t_Cec3_Man_t_48,1493
    Cec3_Par_t *     pPars;          // parameterspPars50,1514
    Gia_Man_t *      pAig;           // user's AIGpAig51,1565
    Gia_Man_t *      pNew;           // internal AIGpNew52,1616
    bmcg_sat_solver* pSat;           // SAT solverpSat54,1688
    Vec_Ptr_t *      vFrontier;      // CNF constructionvFrontier55,1739
    Vec_Ptr_t *      vFanins;        // CNF constructionvFanins56,1796
    Vec_Wrd_t *      vSims;          // CI simulation infovSims57,1853
    Vec_Int_t *      vNodesNew;      // nodesvNodesNew58,1912
    Vec_Int_t *      vSatVars;       // nodesvSatVars59,1958
    Vec_Int_t *      vObjSatPairs;   // nodesvObjSatPairs60,2004
    Vec_Int_t *      vCexTriples;    // nodesvCexTriples61,2050
    int              nPatterns;nPatterns63,2114
    int              nSatSat;nSatSat64,2146
    int              nSatUnsat;nSatUnsat65,2176
    int              nSatUndec;nSatUndec66,2208
    abctime          timeSatSat;timeSatSat67,2240
    abctime          timeSatUnsat;timeSatUnsat68,2273
    abctime          timeSatUndec;timeSatUndec69,2308
    abctime          timeSim;timeSim70,2343
    abctime          timeRefine;timeRefine71,2373
    abctime          timeExtra;timeExtra72,2406
    abctime          timeStart;timeStart73,2438
static inline int    Cec3_ObjSatId( Gia_Man_t * p, Gia_Obj_t * pObj )             { return Gia_ObjCopy2Array(p, Gia_ObjId(p, pObj));                                                     }Cec3_ObjSatId76,2474
static inline int    Cec3_ObjSetSatId( Gia_Man_t * p, Gia_Obj_t * pObj, int Num ) { assert(Cec3_ObjSatId(p, pObj) == -1); Gia_ObjSetCopy2Array(p, Gia_ObjId(p, pObj), Num); return Num;  }Cec3_ObjSetSatId77,2661
static inline void   Cec3_ObjCleanSatId( Gia_Man_t * p, Gia_Obj_t * pObj )        { assert(Cec3_ObjSatId(p, pObj) != -1); Gia_ObjSetCopy2Array(p, Gia_ObjId(p, pObj), -1);               }Cec3_ObjCleanSatId78,2848
static inline void   satoko_mark_cone( bmcg_sat_solver * p, int * pVars, int nVars )   {}satoko_mark_cone80,3036
static inline void   satoko_unmark_cone( bmcg_sat_solver * p, int * pVars, int nVars ) {}satoko_unmark_cone81,3126
void Cec3_SetDefaultParams( Cec3_Par_t * p )Cec3_SetDefaultParams98,3695
void Cec3_AddClausesMux( Gia_Man_t * p, Gia_Obj_t * pNode, bmcg_sat_solver * pSat )Cec3_AddClausesMux122,4505
void Cec3_AddClausesSuper( Gia_Man_t * p, Gia_Obj_t * pNode, Vec_Ptr_t * vSuper, bmcg_sat_solver * pSat )Cec3_AddClausesSuper230,8421
void Cec3_CollectSuper_rec( Gia_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Cec3_CollectSuper_rec284,10311
void Cec3_CollectSuper( Gia_Obj_t * pObj, int fUseMuxes, Vec_Ptr_t * vSuper )Cec3_CollectSuper298,10868
void Cec3_ObjAddToFrontier( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Ptr_t * vFrontier, bmcg_sat_solver * pSat )Cec3_ObjAddToFrontier305,11108
int Cec3_ObjGetCnfVar( Cec3_Man_t * p, int iObj )Cec3_ObjGetCnfVar316,11530
static inline word * Cec3_ObjSim( Gia_Man_t * p, int iObj )Cec3_ObjSim372,13650
static inline void Cec3_ObjSimSetInputBit( Gia_Man_t * p, int iObj, int Bit )Cec3_ObjSimSetInputBit376,13773
static inline void Cec3_ObjSimRo( Gia_Man_t * p, int iObj )Cec3_ObjSimRo382,14016
static inline void Cec3_ObjSimCo( Gia_Man_t * p, int iObj )Cec3_ObjSimCo390,14271
static inline void Cec3_ObjSimAnd( Gia_Man_t * p, int iObj )Cec3_ObjSimAnd403,14710
static inline int Cec3_ObjSimEqual( Gia_Man_t * p, int iObj0, int iObj1 )Cec3_ObjSimEqual423,15552
static inline void Cec3_ObjSimCi( Gia_Man_t * p, int iObj )Cec3_ObjSimCi443,16065
void Cec3_ManSimulateCis( Gia_Man_t * p )Cec3_ManSimulateCis451,16281
Abc_Cex_t * Cec3_ManDeriveCex( Gia_Man_t * p, int iOut, int iPat )Cec3_ManDeriveCex458,16429
int Cec3_ManSimulateCos( Gia_Man_t * p )Cec3_ManSimulateCos471,16818
void Cec3_ManSaveCis( Gia_Man_t * p )Cec3_ManSaveCis485,17207
int Cec3_ManSimulate( Gia_Man_t * p, Vec_Int_t * vTriples, Cec3_Man_t * pMan )Cec3_ManSimulate493,17443
void Cec3_ManSimAlloc( Gia_Man_t * p, int nWords )Cec3_ManSimAlloc526,18627
int Cec3_ManSimHashKey( word * pSim, int nSims, int nTableSize )Cec3_ManSimHashKey547,19200
void Cec3_ManSimClassRefineOne( Gia_Man_t * p, int iRepr )Cec3_ManSimClassRefineOne575,20025
void Cec3_ManCreateClasses( Gia_Man_t * p, Cec3_Man_t * pMan )Cec3_ManCreateClasses607,21089
Cec3_Man_t * Cec3_ManCreate( Gia_Man_t * pAig, Cec3_Par_t * pPars )Cec3_ManCreate661,22665
void Cec3_ManDestroy( Cec3_Man_t * p )Cec3_ManDestroy695,23921
int Cec3_ManVerify_rec( Gia_Man_t * p, int iObj, bmcg_sat_solver * pSat )Cec3_ManVerify_rec741,25550
void Cec3_ManVerify( Gia_Man_t * p, int iObj0, int iObj1, int fPhase, bmcg_sat_solver * pSat )Cec3_ManVerify757,26338
void Cec3_ManCollect_rec( Cec3_Man_t * p, int iObj )Cec3_ManCollect_rec782,27286
int Cec3_ManSolveTwo( Cec3_Man_t * p, int iObj0, int iObj1, int fPhase )Cec3_ManSolveTwo807,28089
int Cec3_ManSweepNode( Cec3_Man_t * p, int iObj )Cec3_ManSweepNode861,30517
void Cec3_ManPrintStats( Gia_Man_t * p, Cec3_Par_t * pPars, Cec3_Man_t * pMan )Cec3_ManPrintStats905,32270
int Cec3_ManPerformSweeping( Gia_Man_t * p, Cec3_Par_t * pPars, Gia_Man_t ** ppNew )Cec3_ManPerformSweeping914,32616
Gia_Man_t * Cec3_ManSimulateTest( Gia_Man_t * p, Cec_ParFra_t * pPars0 )Cec3_ManSimulateTest1022,36989

src/proof/cec/cecSplit.c,178
int Cec_GiaSplitTest( Gia_Man_t * p, int nProcs, int nTimeOut, int nIterMax, int LookAhead, int fVerbose, int fVeryVerbose, int fSilent ) { return -1; }Cec_GiaSplitTest49,1133

src/proof/cec/cecSim.c,0

src/proof/cec/cecMan.c,776
Cec_ManSat_t * Cec_ManSatCreate( Gia_Man_t * pAig, Cec_ParSat_t * pPars )Cec_ManSatCreate45,1256
void Cec_ManSatPrintStats( Cec_ManSat_t * p )Cec_ManSatPrintStats74,2090
void Cec_ManSatStop( Cec_ManSat_t * p )Cec_ManSatStop105,3572
Cec_ManPat_t * Cec_ManPatStart()  Cec_ManPatStart130,4094
void Cec_ManPatPrintStats( Cec_ManPat_t * p )  Cec_ManPatPrintStats151,4580
void Cec_ManPatStop( Cec_ManPat_t * p )  Cec_ManPatStop178,5730
Cec_ManSim_t * Cec_ManSimStart( Gia_Man_t * pAig, Cec_ParSim_t *  pPars )  Cec_ManSimStart199,6142
void Cec_ManSimStop( Cec_ManSim_t * p )  Cec_ManSimStop233,7203
Cec_ManFra_t * Cec_ManFraStart( Gia_Man_t * pAig, Cec_ParFra_t *  pPars )  Cec_ManFraStart263,7916
void Cec_ManFraStop( Cec_ManFra_t * p )  Cec_ManFraStop285,8445

src/proof/cec/cecCore.c,1017
void Cec_ManSatSetDefaultParams( Cec_ParSat_t * p )Cec_ManSatSetDefaultParams45,1275
void Cec_ManSimSetDefaultParams( Cec_ParSim_t * p )Cec_ManSimSetDefaultParams70,2266
void Cec_ManSmfSetDefaultParams( Cec_ParSmf_t * p )Cec_ManSmfSetDefaultParams98,3424
void Cec_ManFraSetDefaultParams( Cec_ParFra_t * p )Cec_ManFraSetDefaultParams125,4525
void Cec_ManCecSetDefaultParams( Cec_ParCec_t * p )Cec_ManCecSetDefaultParams158,6002
void Cec_ManCorSetDefaultParams( Cec_ParCor_t * p )Cec_ManCorSetDefaultParams182,6861
void Cec_ManChcSetDefaultParams( Cec_ParChc_t * p )Cec_ManChcSetDefaultParams212,8141
Gia_Man_t * Cec_ManSatSolving( Gia_Man_t * pAig, Cec_ParSat_t * pPars )Cec_ManSatSolving235,8918
int Cec_ManSimulationOne( Gia_Man_t * pAig, Cec_ParSim_t * pPars )Cec_ManSimulationOne260,9625
void Cec_ManSimulation( Gia_Man_t * pAig, Cec_ParSim_t * pPars )Cec_ManSimulation287,10557
Gia_Man_t * Cec_ManSatSweeping( Gia_Man_t * pAig, Cec_ParFra_t * pPars, int fSilent )Cec_ManSatSweeping340,12208

src/proof/cec/cecCorr.c,2798
static inline int Gia_ManCorrSpecReal( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, int f, int nPrefix )Gia_ManCorrSpecReal47,1430
void Gia_ManCorrSpecReduce_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, int f, int nPrefix )Gia_ManCorrSpecReduce_rec77,2454
Gia_Man_t * Gia_ManCorrSpecReduce( Gia_Man_t * p, int nFrames, int fScorr, Vec_Int_t ** pvOutputs, int fRings )Gia_ManCorrSpecReduce106,3392
Gia_Man_t * Gia_ManCorrSpecReduceInit( Gia_Man_t * p, int nFrames, int nPrefix, int fScorr, Vec_Int_t ** pvOutputs, int fRings )Gia_ManCorrSpecReduceInit223,8304
void Cec_ManStartSimInfo( Vec_Ptr_t * vInfo, int nFlops )Cec_ManStartSimInfo292,10891
void Gia_ManCorrRemapSimInfo( Gia_Man_t * p, Vec_Ptr_t * vInfo )Gia_ManCorrRemapSimInfo323,11741
Vec_Int_t * Gia_ManCorrCreateRemapping( Gia_Man_t * p )Gia_ManCorrCreateRemapping362,13060
void Gia_ManCorrPerformRemapping( Vec_Int_t * vPairs, Vec_Ptr_t * vInfo )Gia_ManCorrPerformRemapping395,14169
int Cec_ManLoadCounterExamplesTry( Vec_Ptr_t * vInfo, Vec_Ptr_t * vPres, int iBit, int * pLits, int nLits )Cec_ManLoadCounterExamplesTry424,15025
int Cec_ManLoadCounterExamples( Vec_Ptr_t * vInfo, Vec_Int_t * vCexStore, int iStart )Cec_ManLoadCounterExamples458,16146
int Cec_ManLoadCounterExamples2( Vec_Ptr_t * vInfo, Vec_Int_t * vCexStore, int iStart )Cec_ManLoadCounterExamples2504,17594
int Cec_ManResimulateCounterExamples( Cec_ManSim_t * pSim, Vec_Int_t * vCexStore, int nFrames )Cec_ManResimulateCounterExamples545,18914
int Cec_ManResimulateCounterExamplesComb( Cec_ManSim_t * pSim, Vec_Int_t * vCexStore )Cec_ManResimulateCounterExamplesComb583,20372
int Gia_ManCheckRefinements( Gia_Man_t * p, Vec_Str_t * vStatus, Vec_Int_t * vOutputs, Cec_ManSim_t * pSim, int fRings )Gia_ManCheckRefinements612,21347
void Gia_ManCorrReduce_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_ManCorrReduce_rec662,23092
Gia_Man_t * Gia_ManCorrReduce( Gia_Man_t * p )Gia_ManCorrReduce690,23996
void Cec_ManRefinedClassPrintStats( Gia_Man_t * p, Vec_Str_t * vStatus, int iIter, abctime Time )Cec_ManRefinedClassPrintStats725,24989
void Cec_ManLSCorrespondenceBmc( Gia_Man_t * pAig, Cec_ParCor_t * pPars, int nPrefs )Cec_ManLSCorrespondenceBmc771,26438
int Cec_ManLSCorrAnalyzeDependence( Gia_Man_t * p, Vec_Int_t * vEquivs, Vec_Str_t * vStatus )Cec_ManLSCorrAnalyzeDependence839,28745
int Cec_ManLSCorrespondenceClasses( Gia_Man_t * pAig, Cec_ParCor_t * pPars )Cec_ManLSCorrespondenceClasses909,30848
unsigned * Cec_ManComputeInitState( Gia_Man_t * pAig, int nFrames )Cec_ManComputeInitState1068,37048
void Cec_ManPrintFlopEquivs( Gia_Man_t * p )Cec_ManPrintFlopEquivs1113,38543
Gia_Man_t * Cec_ManLSCorrespondence( Gia_Man_t * pAig, Cec_ParCor_t * pPars )Cec_ManLSCorrespondence1147,39740

src/proof/cec/cecSolve.c,3029
static inline int  Cec_ObjSatNum( Cec_ManSat_t * p, Gia_Obj_t * pObj )             { return p->pSatVars[Gia_ObjId(p->pAig,pObj)]; }Cec_ObjSatNum30,801
static inline void Cec_ObjSetSatNum( Cec_ManSat_t * p, Gia_Obj_t * pObj, int Num ) { p->pSatVars[Gia_ObjId(p->pAig,pObj)] = Num;  }Cec_ObjSetSatNum31,933
int Cec_ObjSatVarValue( Cec_ManSat_t * p, Gia_Obj_t * pObj )             Cec_ObjSatVarValue48,1554
void Cec_AddClausesMux( Cec_ManSat_t * p, Gia_Obj_t * pNode )Cec_AddClausesMux64,1964
void Cec_AddClausesSuper( Cec_ManSat_t * p, Gia_Obj_t * pNode, Vec_Ptr_t * vSuper )Cec_AddClausesSuper183,6111
void Cec_CollectSuper_rec( Gia_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Cec_CollectSuper_rec236,7946
void Cec_CollectSuper( Gia_Obj_t * pObj, int fUseMuxes, Vec_Ptr_t * vSuper )Cec_CollectSuper262,8768
void Cec_ObjAddToFrontier( Cec_ManSat_t * p, Gia_Obj_t * pObj, Vec_Ptr_t * vFrontier )Cec_ObjAddToFrontier281,9276
void Cec_CnfNodeAddToSolver( Cec_ManSat_t * p, Gia_Obj_t * pObj )Cec_CnfNodeAddToSolver306,9974
void Cec_ManSatSolverRecycle( Cec_ManSat_t * p )Cec_ManSatSolverRecycle365,12015
void Cec_SetActivityFactors_rec( Cec_ManSat_t * p, Gia_Obj_t * pObj, int LevelMin, int LevelMax )Cec_SetActivityFactors_rec406,13289
int Cec_SetActivityFactors( Cec_ManSat_t * p, Gia_Obj_t * pObj )Cec_SetActivityFactors440,14494
int Cec_ManSatCheckNode( Cec_ManSat_t * p, Gia_Obj_t * pObj )Cec_ManSatCheckNode470,15360
int Cec_ManSatCheckNodeTwo( Cec_ManSat_t * p, Gia_Obj_t * pObj1, Gia_Obj_t * pObj2 )Cec_ManSatCheckNodeTwo569,18384
Abc_Cex_t * Cex_ManGenSimple( Cec_ManSat_t * p, int iOut )Cex_ManGenSimple676,22003
Abc_Cex_t * Cex_ManGenCex( Cec_ManSat_t * p, int iOut )Cex_ManGenCex684,22205
void Cec_ManSatSolve( Cec_ManPat_t * pPat, Gia_Man_t * pAig, Cec_ParSat_t * pPars, Vec_Int_t * vIdsOrig, Vec_Int_t * vMiterPairs, Vec_Int_t * vEquivPairs )Cec_ManSatSolve699,22653
int Cec_ManSatSolveExractPattern( Vec_Int_t * vCexStore, int iStart, Vec_Int_t * vPat )Cec_ManSatSolveExractPattern791,25900
void Cec_ManSatSolveCSat( Cec_ManPat_t * pPat, Gia_Man_t * pAig, Cec_ParSat_t * pPars )Cec_ManSatSolveCSat806,26347
Vec_Int_t * Cec_ManSatReadCex( Cec_ManSat_t * pSat )Cec_ManSatReadCex861,27985
void Cec_ManSatSolveSeq_rec( Cec_ManSat_t * pSat, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Ptr_t * vInfo, int iPat, int nRegs )Cec_ManSatSolveSeq_rec877,28337
Vec_Str_t * Cec_ManSatSolveSeq( Vec_Ptr_t * vPatts, Gia_Man_t * pAig, Cec_ParSat_t * pPars, int nRegs, int * pnPats )Cec_ManSatSolveSeq908,29549
void Cec_ManSatAddToStore( Vec_Int_t * vCexStore, Vec_Int_t * vCex, int Out )Cec_ManSatAddToStore993,32412
void Cec_ManSatSolveMiter_rec( Cec_ManSat_t * pSat, Gia_Man_t * p, Gia_Obj_t * pObj )Cec_ManSatSolveMiter_rec1019,33085
void Cec_ManSavePattern( Cec_ManSat_t * p, Gia_Obj_t * pObj1, Gia_Obj_t * pObj2 )Cec_ManSavePattern1046,33865
Vec_Int_t * Cec_ManSatSolveMiter( Gia_Man_t * pAig, Cec_ParSat_t * pPars, Vec_Str_t ** pvStatus )Cec_ManSatSolveMiter1067,34555

src/proof/cec/cecSweep.c,447
Gia_Man_t * Cec_ManFraSpecReduction( Cec_ManFra_t * p )Cec_ManFraSpecReduction45,1281
int Cec_ManFraClassesUpdate_rec( Gia_Obj_t * pObj )Cec_ManFraClassesUpdate_rec140,4900
void Cec_ManFraCreateInfo( Cec_ManSim_t * p, Vec_Ptr_t * vCiInfo, Vec_Ptr_t * vInfo, int nSeries )Cec_ManFraCreateInfo163,5528
int Cec_ManFraClassesUpdate( Cec_ManFra_t * p, Cec_ManSim_t * pSim, Cec_ManPat_t * pPat, Gia_Man_t * pNew )Cec_ManFraClassesUpdate188,6243

src/proof/ssw/sswSat.c,309
int Ssw_NodesAreEquiv( Ssw_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew )Ssw_NodesAreEquiv45,1343
int Ssw_NodesAreConstrained( Ssw_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew )Ssw_NodesAreConstrained196,5832
int Ssw_NodeIsConstrained( Ssw_Man_t * p, Aig_Obj_t * pPoObj )Ssw_NodeIsConstrained286,8696

src/proof/ssw/ssw.h,5240
#define ABC__aig__ssw__ssw_hABC__aig__ssw__ssw_h22,544
typedef struct Ssw_Pars_t_ Ssw_Pars_t;Ssw_Pars_t40,1286
struct Ssw_Pars_t_Ssw_Pars_t_41,1325
    int              nPartSize;     // size of the partitionnPartSize43,1346
    int              nOverSize;     // size of the overlap between partitionsnOverSize44,1407
    int              nFramesK;      // the induction depthnFramesK45,1485
    int              nFramesAddSim; // the number of additional frames to simulatenFramesAddSim46,1544
    int              fConstrs;      // treat the last nConstrs POs as seq constraintsfConstrs47,1627
    int              fMergeFull;    // enables full merge when constraints are usedfMergeFull48,1713
    int              nMaxLevs;      // the max number of levels of nodes to considernMaxLevs49,1797
    int              nBTLimit;      // conflict limit at a nodenBTLimit50,1882
    int              nBTLimitGlobal;// conflict limit for multiple runsnBTLimitGlobal51,1946
    int              nMinDomSize;   // min clock domain considered for optimizationnMinDomSize52,2018
    int              nItersStop;    // stop after the given number of iterationsnItersStop53,2102
    int              fDumpSRInit;   // dumps speculative reductionfDumpSRInit54,2183
    int              nResimDelta;   // the number of nodes to resimulatenResimDelta55,2250
    int              nStepsMax;     // (scorr only) the max number of induction stepsnStepsMax56,2323
    int              TimeLimit;     // time out in secondsTimeLimit57,2409
    int              fPolarFlip;    // uses polarity adjustmentfPolarFlip58,2468
    int              fLatchCorr;    // perform register correspondencefLatchCorr59,2532
    int              fConstCorr;    // perform constant correspondencefConstCorr60,2603
    int              fOutputCorr;   // perform 'PO correspondence'fOutputCorr61,2674
    int              fSemiFormal;   // enable semiformal filteringfSemiFormal62,2741
    int              fDynamic;      // enable dynamic addition of constraintsfDynamic64,2879
    int              fLocalSim;     // enable local simulation simulationfLocalSim65,2957
    int              fPartSigCorr;  // uses partial signal correspondencefPartSigCorr66,3031
    int              nIsleDist;     // extends islands by the given distancenIsleDist67,3105
    int              fScorrGia;     // new signal correspondence implementationfScorrGia68,3182
    int              fUseCSat;      // new SAT solver using when fScorrGia is selectedfUseCSat69,3262
    int              fVerbose;      // verbose statsfVerbose70,3349
    int              fFlopVerbose;  // verbose printout of redundant flopsfFlopVerbose71,3402
    int              fEquivDump;    // enables dumping equivalencesfEquivDump72,3477
    int              fEquivDump2;   // enables dumping equivalencesfEquivDump273,3545
    int              fStopWhenGone; // stop when PO output is not a candidate constantfStopWhenGone74,3613
    int              fLatchCorrOpt; // perform register correspondence (optimized)fLatchCorrOpt76,3738
    int              nSatVarMax;    // max number of SAT vars before recycling SAT solver (optimized latch corr only)nSatVarMax77,3821
    int              nRecycleCalls; // calls to perform before recycling SAT solver (optimized latch corr only)nRecycleCalls78,3939
    int              nSatVarMax2;   // max number of SAT vars before recycling SAT solver (optimized latch corr only)nSatVarMax280,4090
    int              nRecycleCalls2;// calls to perform before recycling SAT solver (optimized latch corr only)nRecycleCalls281,4208
    int              nIters;        // the number of iterations performednIters83,4347
    int              nConflicts;    // the total number of conflicts performednConflicts84,4421
    void *           pData;pData86,4516
    void *           pFunc;pFunc87,4544
typedef struct Ssw_RarPars_t_ Ssw_RarPars_t;Ssw_RarPars_t90,4576
struct Ssw_RarPars_t_Ssw_RarPars_t_91,4621
    int              nFrames;nFrames93,4645
    int              nWords;nWords94,4675
    int              nBinSize;nBinSize95,4704
    int              nRounds;nRounds96,4735
    int              nRestart;nRestart97,4765
    int              nRandSeed;nRandSeed98,4796
    int              TimeOut;TimeOut99,4828
    int              TimeOutGap;TimeOutGap100,4858
    int              fSolveAll;fSolveAll101,4891
    int              fSetLastState;fSetLastState102,4923
    int              fVerbose;fVerbose103,4959
    int              fNotVerbose;fNotVerbose104,4990
    int              fSilent;fSilent105,5024
    int              fDropSatOuts;fDropSatOuts106,5054
    int              fMiter;fMiter107,5089
    int              fUseCex;fUseCex108,5118
    int              fLatchOnly;fLatchOnly109,5148
    int              fUseFfGrouping;fUseFfGrouping110,5181
    int              nSolved;nSolved111,5218
    Abc_Cex_t *      pCex;pCex112,5248
    int(*pFuncOnFail)(int,Abc_Cex_t*); // called for a failed output in MO modepFuncOnFail113,5275
typedef struct Ssw_Sml_t_ Ssw_Sml_t; // sequential simulation managerSsw_Sml_t116,5359

src/proof/ssw/sswMan.c,338
Ssw_Man_t * Ssw_ManCreate( Aig_Man_t * pAig, Ssw_Pars_t * pPars )Ssw_ManCreate45,1264
int Ssw_ManCountEquivs( Ssw_Man_t * p )Ssw_ManCountEquivs84,2543
void Ssw_ManPrintStats( Ssw_Man_t * p )Ssw_ManPrintStats104,3017
void Ssw_ManCleanup( Ssw_Man_t * p )Ssw_ManCleanup158,6082
void Ssw_ManStop( Ssw_Man_t * p )Ssw_ManStop189,6820

src/proof/ssw/sswSweep.c,774
int Ssw_ManGetSatVarValue( Ssw_Man_t * p, Aig_Obj_t * pObj, int f )Ssw_ManGetSatVarValue46,1321
void Ssw_CheckConstraints( Ssw_Man_t * p )Ssw_CheckConstraints84,2533
void Ssw_SmlSavePatternAigPhase( Ssw_Man_t * p, int f )Ssw_SmlSavePatternAigPhase115,3514
void Ssw_SmlSavePatternAig( Ssw_Man_t * p, int f )Ssw_SmlSavePatternAig136,4109
void Ssw_SmlAddPatternDyn( Ssw_Man_t * p )Ssw_SmlAddPatternDyn157,4668
int Ssw_ManSweepNode( Ssw_Man_t * p, Aig_Obj_t * pObj, int f, int fBmc, Vec_Int_t * vPairs )Ssw_ManSweepNode187,5514
int Ssw_ManSweepBmc( Ssw_Man_t * p )Ssw_ManSweepBmc272,8372
void Ssw_ManDumpEquivMiter( Aig_Man_t * p, Vec_Int_t * vPairs, int Num, int fAddOuts )Ssw_ManDumpEquivMiter342,10905
int Ssw_ManSweep( Ssw_Man_t * p )Ssw_ManSweep373,11804

src/proof/ssw/sswCnf.c,840
Ssw_Sat_t * Ssw_SatStart( int fPolarFlip )Ssw_SatStart45,1262
void Ssw_SatStop( Ssw_Sat_t * p )Ssw_SatStop81,2331
void Ssw_AddClausesMux( Ssw_Sat_t * p, Aig_Obj_t * pNode )Ssw_AddClausesMux104,2930
void Ssw_AddClausesSuper( Ssw_Sat_t * p, Aig_Obj_t * pNode, Vec_Ptr_t * vSuper )Ssw_AddClausesSuper223,7015
void Ssw_CollectSuper_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Ssw_CollectSuper_rec276,8812
void Ssw_CollectSuper( Aig_Obj_t * pObj, int fUseMuxes, Vec_Ptr_t * vSuper )Ssw_CollectSuper303,9640
void Ssw_ObjAddToFrontier( Ssw_Sat_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vFrontier )Ssw_ObjAddToFrontier322,10133
void Ssw_CnfNodeAddToSolver( Ssw_Sat_t * p, Aig_Obj_t * pObj )Ssw_CnfNodeAddToSolver351,10986
int Ssw_CnfGetNodeValue( Ssw_Sat_t * p, Aig_Obj_t * pObj )Ssw_CnfGetNodeValue402,12799

src/proof/ssw/sswInt.h,9798
#define ABC__aig__ssw__sswInt_hABC__aig__ssw__sswInt_h22,553
typedef struct Ssw_Man_t_ Ssw_Man_t; // signal correspondence managerSsw_Man_t47,1380
typedef struct Ssw_Frm_t_ Ssw_Frm_t; // unrolled frames managerSsw_Frm_t48,1450
typedef struct Ssw_Sat_t_ Ssw_Sat_t; // SAT solver managerSsw_Sat_t49,1514
typedef struct Ssw_Cla_t_ Ssw_Cla_t; // equivalence classe managerSsw_Cla_t50,1573
struct Ssw_Man_t_Ssw_Man_t_52,1641
    Ssw_Pars_t *     pPars;          // parameterspPars55,1679
    int              nFrames;        // for quick lookupnFrames56,1730
    Aig_Man_t *      pAig;           // user-given AIGpAig58,1819
    Aig_Man_t *      pFrames;        // final AIGpFrames59,1874
    Aig_Obj_t **     pNodeToFrames;  // mapping of AIG nodes into FRAIG nodespNodeToFrames60,1924
    Ssw_Cla_t *      ppClasses;      // equivalence classes of nodesppClasses62,2029
    int              fRefined;       // is set to 1 when refinement happensfRefined63,2098
    Ssw_Sat_t *      pMSatBmc;       // SAT manager for base casepMSatBmc65,2194
    Ssw_Sat_t *      pMSat;          // SAT manager for inductive casepMSat66,2260
    Vec_Ptr_t *      vSimInfo;       // simulation information for the framed PIsvSimInfo68,2368
    int              nPatterns;      // the number of patterns savednPatterns69,2450
    int              nSimRounds;     // the number of simulation rounds performednSimRounds70,2519
    int              nCallsCount;    // the number of calls in this roundnCallsCount71,2601
    int              nCallsDelta;    // the number of calls to skipnCallsDelta72,2675
    int              nCallsSat;      // the number of SAT calls in this roundnCallsSat73,2743
    int              nCallsUnsat;    // the number of UNSAT calls in this roundnCallsUnsat74,2821
    int              nRecycleCalls;  // the number of calls since last recyclingnRecycleCalls75,2901
    int              nRecycles;      // the number of time SAT solver was recyclednRecycles76,2982
    int              nRecyclesTotal; // the number of time SAT solver was recyclednRecyclesTotal77,3065
    int              nVarsMax;       // the maximum variables in the solvernVarsMax78,3148
    int              nCallsMax;      // the maximum number of SAT callsnCallsMax79,3224
    Vec_Ptr_t *      vCommon;        // the set of common variables in the logic conesvCommon81,3314
    int              iOutputLit;     // the output literal of the uniqueness constraintiOutputLit82,3401
    Vec_Int_t *      vDiffPairs;     // is set to 1 if reg pair can be diffvDiffPairs83,3489
    int              nUniques;       // the number of uniqueness constraints used nUniques84,3565
    int              nUniquesAdded;  // useful uniqueness constraintsnUniquesAdded85,3648
    int              nUniquesUseful; // useful uniqueness constraintsnUniquesUseful86,3718
    int              nSRMiterMaxId;  // max ID after which the last frame beginsnSRMiterMaxId88,3823
    Vec_Ptr_t *      vNewLos;        // new time frame LOs of to constrainvNewLos89,3904
    Vec_Int_t *      vNewPos;        // new time frame POs of to add constraintsvNewPos90,3979
    int *            pVisited;       // flags to label visited nodes in each framepVisited91,4060
    int              nVisCounter;    // the traversal IDnVisCounter92,4143
    Ssw_Sml_t *      pSml;           // the simulatorpSml94,4229
    int              iNodeStart;     // the first node considerediNodeStart95,4283
    int              iNodeLast;      // the last node considerediNodeLast96,4349
    Vec_Ptr_t *      vResimConsts;   // resimulation constantsvResimConsts97,4414
    Vec_Ptr_t *      vResimClasses;  // resimulation classesvResimClasses98,4477
    Vec_Int_t *      vInits;         // the init values of primary inputs under constraintsvInits99,4538
    int              nPatWords;      // the number of words in the counter examplenPatWords101,4661
    unsigned *       pPatWords;      // the counter examplepPatWords102,4744
    int              nConstrTotal;   // the number of total constraintsnConstrTotal104,4823
    int              nConstrReduced; // the number of reduced constraintsnConstrReduced105,4895
    int              nStrangers;     // the number of strange situationsnStrangers106,4969
    int              nSatCalls;      // the number of SAT callsnSatCalls108,5070
    int              nSatProof;      // the number of proofsnSatProof109,5134
    int              nSatFailsReal;  // the number of timeoutsnSatFailsReal110,5195
    int              nSatCallsUnsat; // the number of unsat SAT callsnSatCallsUnsat111,5258
    int              nSatCallsSat;   // the number of sat SAT callsnSatCallsSat112,5328
    int              nLitsBeg;nLitsBeg114,5432
    int              nLitsEnd;nLitsEnd115,5463
    int              nNodesBeg;nNodesBeg116,5494
    int              nNodesEnd;nNodesEnd117,5526
    int              nRegsBeg;nRegsBeg118,5558
    int              nRegsEnd;nRegsEnd119,5589
    int              nConesTotal;nConesTotal121,5643
    int              nConesConstr;nConesConstr122,5677
    int              nEquivsTotal;nEquivsTotal123,5712
    int              nEquivsConstr;nEquivsConstr124,5747
    int              nNodesBegC;nNodesBegC125,5783
    int              nNodesEndC;nNodesEndC126,5816
    int              nRegsBegC;nRegsBegC127,5849
    int              nRegsEndC;nRegsEndC128,5881
    abctime          timeBmc;        // bounded model checkingtimeBmc130,5934
    abctime          timeReduce;     // speculative reductiontimeReduce131,5997
    abctime          timeMarkCones;  // marking the cones not to be refinedtimeMarkCones132,6059
    abctime          timeSimSat;     // simulation of the counter-examplestimeSimSat133,6135
    abctime          timeSat;        // solving SATtimeSat134,6210
    abctime          timeSatSat;     // sattimeSatSat135,6262
    abctime          timeSatUnsat;   // unsattimeSatUnsat136,6306
    abctime          timeSatUndec;   // undecidedtimeSatUndec137,6352
    abctime          timeOther;      // other runtimetimeOther138,6402
    abctime          timeTotal;      // total runtimetimeTotal139,6456
struct Ssw_Sat_t_Ssw_Sat_t_143,6538
    Aig_Man_t *      pAig;           // the AIG managerpAig145,6558
    int              fPolarFlip;     // flips polarity fPolarFlip146,6614
    sat_solver *     pSat;           // recyclable SAT solverpSat147,6670
    int              nSatVars;       // the counter of SAT variablesnSatVars148,6732
    Vec_Int_t *      vSatVars;       // mapping of each node into its SAT varvSatVars149,6801
    Vec_Ptr_t *      vFanins;        // fanins of the CNF nodevFanins150,6879
    Vec_Ptr_t *      vUsedPis;       // the PIs with SAT variables vUsedPis151,6942
    int              nSolverCalls;   // the total number of SAT callsnSolverCalls152,7010
struct Ssw_Frm_t_Ssw_Frm_t_156,7111
    Aig_Man_t *      pAig;           // user-given AIGpAig158,7131
    int              nObjs;          // offset in terms of AIG nodesnObjs159,7186
    int              nFrames;        // the number of frames in current unrollingnFrames160,7255
    Aig_Man_t *      pFrames;        // unrolled AIGpFrames161,7337
    Vec_Ptr_t *      vAig2Frm;       // mapping of AIG nodes into frame nodesvAig2Frm162,7390
static inline int  Ssw_ObjSatNum( Ssw_Sat_t * p, Aig_Obj_t * pObj )             { return Vec_IntGetEntry( p->vSatVars, pObj->Id );  }Ssw_ObjSatNum169,7692
static inline void Ssw_ObjSetSatNum( Ssw_Sat_t * p, Aig_Obj_t * pObj, int Num ) { Vec_IntSetEntry(p->vSatVars, pObj->Id, Num);      }Ssw_ObjSetSatNum170,7826
static inline int  Ssw_ObjIsConst1Cand( Aig_Man_t * pAig, Aig_Obj_t * pObj ) Ssw_ObjIsConst1Cand172,7961
static inline void Ssw_ObjSetConst1Cand( Aig_Man_t * pAig, Aig_Obj_t * pObj ) Ssw_ObjSetConst1Cand176,8102
static inline Aig_Obj_t * Ssw_ObjFrame( Ssw_Man_t * p, Aig_Obj_t * pObj, int i )                       { return p->pNodeToFrames[p->nFrames*pObj->Id + i];  }Ssw_ObjFrame182,8291
static inline void        Ssw_ObjSetFrame( Ssw_Man_t * p, Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) { p->pNodeToFrames[p->nFrames*pObj->Id + i] = pNode; }Ssw_ObjSetFrame183,8449
static inline Aig_Obj_t * Ssw_ObjChild0Fra( Ssw_Man_t * p, Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond(Ssw_ObjFrame(p, Aig_ObjFanin0(pObj), i), Aig_ObjFaninC0(pObj)) : NULL;  }Ssw_ObjChild0Fra185,8608
static inline Aig_Obj_t * Ssw_ObjChild1Fra( Ssw_Man_t * p, Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond(Ssw_ObjFrame(p, Aig_ObjFanin1(pObj), i), Aig_ObjFaninC1(pObj)) : NULL;  }Ssw_ObjChild1Fra186,8844
static inline Aig_Obj_t * Ssw_ObjFrame_( Ssw_Frm_t * p, Aig_Obj_t * pObj, int i )                       { return (Aig_Obj_t *)Vec_PtrGetEntry( p->vAig2Frm, p->nObjs*i+pObj->Id );     }Ssw_ObjFrame_188,9081
static inline void        Ssw_ObjSetFrame_( Ssw_Frm_t * p, Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) { Vec_PtrSetEntry( p->vAig2Frm, p->nObjs*i+pObj->Id, pNode );     }Ssw_ObjSetFrame_189,9266
static inline Aig_Obj_t * Ssw_ObjChild0Fra_( Ssw_Frm_t * p, Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond(Ssw_ObjFrame_(p, Aig_ObjFanin0(pObj), i), Aig_ObjFaninC0(pObj)) : NULL;  }Ssw_ObjChild0Fra_191,9439
static inline Aig_Obj_t * Ssw_ObjChild1Fra_( Ssw_Frm_t * p, Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond(Ssw_ObjFrame_(p, Aig_ObjFanin1(pObj), i), Aig_ObjFaninC1(pObj)) : NULL;  }Ssw_ObjChild1Fra_192,9677

src/proof/ssw/sswClass.c,4882
struct Ssw_Cla_t_Ssw_Cla_t_36,1101
    Aig_Man_t *      pAig;             // original AIG managerpAig39,1146
    Aig_Obj_t ***    pId2Class;        // non-const classes by ID of repr nodepId2Class40,1209
    int *            pClassSizes;      // sizes of each equivalence classpClassSizes41,1288
    int              fConstCorr;fConstCorr42,1362
    int              nClasses;         // the total number of non-const classesnClasses44,1413
    int              nCands1;          // the total number of const candidatesnCands145,1493
    int              nLits;            // the number of literals in all classesnLits46,1572
    Aig_Obj_t **     pMemClasses;      // memory allocated for equivalence classespMemClasses48,1666
    Aig_Obj_t **     pMemClassesFree;  // memory allocated for equivalence classes to be usedpMemClassesFree49,1749
    Vec_Ptr_t *      vClassOld;        // old equivalence class after splittingvClassOld51,1865
    Vec_Ptr_t *      vClassNew;        // new equivalence class(es) after splittingvClassNew52,1945
    Vec_Ptr_t *      vRefined;         // the nodes refined since the last iterationvRefined53,2029
    void *           pManData;pManData55,2158
    unsigned (*pFuncNodeHash) (void *,Aig_Obj_t *);              // returns hash key of the nodepFuncNodeHash56,2189
    int (*pFuncNodeIsConst)   (void *,Aig_Obj_t *);              // returns 1 if the node is a constantpFuncNodeIsConst57,2286
    int (*pFuncNodesAreEqual) (void *,Aig_Obj_t *, Aig_Obj_t *); // returns 1 if nodes are equal up to a complementpFuncNodesAreEqual58,2390
static inline Aig_Obj_t *  Ssw_ObjNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj )                       { return ppNexts[pObj->Id];  }Ssw_ObjNext65,2730
static inline void         Ssw_ObjSetNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj, Aig_Obj_t * pNext ) { ppNexts[pObj->Id] = pNext; }Ssw_ObjSetNext66,2864
#define Ssw_ManForEachClass(Ssw_ManForEachClass69,3043
#define Ssw_ClassForEachNode(Ssw_ClassForEachNode73,3273
static inline void Ssw_ObjAddClass( Ssw_Cla_t * p, Aig_Obj_t * pRepr, Aig_Obj_t ** pClass, int nSize )Ssw_ObjAddClass92,3954
static inline Aig_Obj_t ** Ssw_ObjRemoveClass( Ssw_Cla_t * p, Aig_Obj_t * pRepr )Ssw_ObjRemoveClass115,4601
Ssw_Cla_t * Ssw_ClassesStart( Aig_Man_t * pAig )Ssw_ClassesStart140,5248
void Ssw_ClassesSetData( Ssw_Cla_t * p, void * pManData,Ssw_ClassesSetData167,6060
void Ssw_ClassesStop( Ssw_Cla_t * p )Ssw_ClassesStop189,6876
Aig_Man_t * Ssw_ClassesReadAig( Ssw_Cla_t * p )Ssw_ClassesReadAig211,7438
Vec_Ptr_t * Ssw_ClassesGetRefined( Ssw_Cla_t * p )Ssw_ClassesGetRefined227,7730
void Ssw_ClassesClearRefined( Ssw_Cla_t * p )Ssw_ClassesClearRefined243,8029
int Ssw_ClassesCand1Num( Ssw_Cla_t * p )Ssw_ClassesCand1Num259,8375
int Ssw_ClassesClassNum( Ssw_Cla_t * p )Ssw_ClassesClassNum275,8706
int Ssw_ClassesLitNum( Ssw_Cla_t * p )Ssw_ClassesLitNum291,9038
Aig_Obj_t ** Ssw_ClassesReadClass( Ssw_Cla_t * p, Aig_Obj_t * pRepr, int * pnSize )Ssw_ClassesReadClass307,9365
void Ssw_ClassesCollectClass( Ssw_Cla_t * p, Aig_Obj_t * pRepr, Vec_Ptr_t * vClass )Ssw_ClassesCollectClass328,9949
void Ssw_ClassesCheck( Ssw_Cla_t * p )Ssw_ClassesCheck350,10566
void Ssw_ClassesPrintOne( Ssw_Cla_t * p, Aig_Obj_t * pRepr )Ssw_ClassesPrintOne392,11729
void Ssw_ClassesPrint( Ssw_Cla_t * p, int fVeryVerbose )Ssw_ClassesPrint414,12329
void Ssw_ClassesRemoveNode( Ssw_Cla_t * p, Aig_Obj_t * pObj )Ssw_ClassesRemoveNode448,13377
int Ssw_ClassesPrepareRehash( Ssw_Cla_t * p, Vec_Ptr_t * vCands, int fConstCorr )Ssw_ClassesPrepareRehash500,14926
Ssw_Cla_t * Ssw_ClassesPrepare( Aig_Man_t * pAig, int nFramesK, int fLatchCorr, int fConstCorr, int fOutputCorr, int nMaxLevs, int fVerbose )Ssw_ClassesPrepare596,18252
Ssw_Cla_t * Ssw_ClassesPrepareSimple( Aig_Man_t * pAig, int fLatchCorr, int nMaxLevs )Ssw_ClassesPrepareSimple724,22260
Ssw_Cla_t * Ssw_ClassesPrepareFromReprs( Aig_Man_t * pAig )Ssw_ClassesPrepareFromReprs768,23483
Ssw_Cla_t * Ssw_ClassesPrepareTargets( Aig_Man_t * pAig )Ssw_ClassesPrepareTargets831,25398
Ssw_Cla_t * Ssw_ClassesPreparePairs( Aig_Man_t * pAig, Vec_Int_t ** pvClasses )Ssw_ClassesPreparePairs862,26195
Ssw_Cla_t * Ssw_ClassesPreparePairsSimple( Aig_Man_t * pMiter, Vec_Int_t * vPairs )Ssw_ClassesPreparePairsSimple928,28327
int Ssw_ClassesRefineOneClass( Ssw_Cla_t * p, Aig_Obj_t * pReprOld, int fRecursive )Ssw_ClassesRefineOneClass970,29660
int Ssw_ClassesRefine( Ssw_Cla_t * p, int fRecursive )Ssw_ClassesRefine1034,31738
int Ssw_ClassesRefineGroup( Ssw_Cla_t * p, Vec_Ptr_t * vReprs, int fRecursive )Ssw_ClassesRefineGroup1054,32237
int Ssw_ClassesRefineConst1Group( Ssw_Cla_t * p, Vec_Ptr_t * vRoots, int fRecursive )Ssw_ClassesRefineConst1Group1074,32766
int Ssw_ClassesRefineConst1( Ssw_Cla_t * p, int fRecursive )Ssw_ClassesRefineConst11119,34281

src/proof/ssw/sswAig.c,464
Ssw_Frm_t * Ssw_FrmStart( Aig_Man_t * pAig )Ssw_FrmStart45,1260
void Ssw_FrmStop( Ssw_Frm_t * p )Ssw_FrmStop70,1901
static inline void Ssw_FramesConstrainNode( Ssw_Man_t * p, Aig_Man_t * pFrames, Aig_Man_t * pAig, Aig_Obj_t * pObj, int iFrame, int fTwoPos )Ssw_FramesConstrainNode89,2311
Aig_Man_t * Ssw_FramesWithClasses( Ssw_Man_t * p )Ssw_FramesWithClasses144,4069
Aig_Man_t * Ssw_SpeculativeReduction( Ssw_Man_t * p )Ssw_SpeculativeReduction212,6736

src/proof/ssw/sswDyn.c,716
void Ssw_ManLabelPiNodes( Ssw_Man_t * p )Ssw_ManLabelPiNodes46,1335
void Ssw_ManCollectPis_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vNewPis )Ssw_ManCollectPis_rec76,2123
void Ssw_ManCollectPos_rec( Ssw_Man_t * p, Aig_Obj_t * pObj, Vec_Int_t * vNewPos )Ssw_ManCollectPos_rec103,2795
void Ssw_ManLoadSolver( Ssw_Man_t * p, Aig_Obj_t * pRepr, Aig_Obj_t * pObj )Ssw_ManLoadSolver142,4057
void Ssw_ManSweepTransferDyn( Ssw_Man_t * p )Ssw_ManSweepTransferDyn211,6485
int Ssw_ManSweepResimulateDyn( Ssw_Man_t * p, int f )Ssw_ManSweepResimulateDyn263,8105
int Ssw_ManSweepResimulateDynLocal( Ssw_Man_t * p, int f )Ssw_ManSweepResimulateDynLocal295,9116
int Ssw_ManSweepDyn( Ssw_Man_t * p )Ssw_ManSweepDyn373,11971

src/proof/ssw/sswSimSat.c,229
void Ssw_ManResimulateBit( Ssw_Man_t * p, Aig_Obj_t * pCand, Aig_Obj_t * pRepr )Ssw_ManResimulateBit45,1298
void Ssw_ManResimulateWord( Ssw_Man_t * p, Aig_Obj_t * pCand, Aig_Obj_t * pRepr, int f )Ssw_ManResimulateWord92,2864

src/proof/ssw/sswSim.c,5896
struct Ssw_Sml_t_Ssw_Sml_t_31,838
    Aig_Man_t *      pAig;              // the original AIG managerpAig33,858
    int              nPref;             // the number of timeframes in the prefixnPref34,926
    int              nFrames;           // the number of timeframes nFrames35,1008
    int              nWordsFrame;       // the number of words in each timeframenWordsFrame36,1077
    int              nWordsTotal;       // the total number of words at a nodenWordsTotal37,1158
    int              nWordsPref;        // the number of word in the prefixnWordsPref38,1237
    int              fNonConstOut;      // have seen a non-const-0 output during simulationfNonConstOut39,1313
    int              nSimRounds;        // statisticsnSimRounds40,1405
    abctime          timeSim;           // statisticstimeSim41,1459
    unsigned         pData[0];          // simulation data for the nodespData42,1513
static inline unsigned * Ssw_ObjSim( Ssw_Sml_t * p, int Id )  { return p->pData + p->nWordsTotal * Id; }Ssw_ObjSim45,1590
static inline unsigned   Ssw_ObjRandomSim()                   { return Aig_ManRandom(0);               }Ssw_ObjRandomSim46,1695
unsigned Ssw_SmlObjHashWord( Ssw_Sml_t * p, Aig_Obj_t * pObj )Ssw_SmlObjHashWord63,2313
int Ssw_SmlObjIsConstWord( Ssw_Sml_t * p, Aig_Obj_t * pObj )Ssw_SmlObjIsConstWord102,3832
int Ssw_SmlObjsAreEqualWord( Ssw_Sml_t * p, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Ssw_SmlObjsAreEqualWord124,4342
int Ssw_SmlObjIsConstBit( void * p, Aig_Obj_t * pObj )Ssw_SmlObjIsConstBit147,4957
int Ssw_SmlObjsAreEqualBit( void * p, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Ssw_SmlObjsAreEqualBit163,5313
int Ssw_SmlNodeNotEquWeight( Ssw_Sml_t * p, int Left, int Right )Ssw_SmlNodeNotEquWeight180,5750
int Ssw_SmlCheckXorImplication( Ssw_Sml_t * p, Aig_Obj_t * pObjLi, Aig_Obj_t * pObjLo, Aig_Obj_t * pCand )Ssw_SmlCheckXorImplication202,6321
int Ssw_SmlCountXorImplication( Ssw_Sml_t * p, Aig_Obj_t * pObjLi, Aig_Obj_t * pObjLo, Aig_Obj_t * pCand )Ssw_SmlCountXorImplication237,7406
int Ssw_SmlCountEqual( Ssw_Sml_t * p, Aig_Obj_t * pObjLi, Aig_Obj_t * pObjLo )Ssw_SmlCountEqual270,8508
int Ssw_SmlNodeIsZero( Ssw_Sml_t * p, Aig_Obj_t * pObj )Ssw_SmlNodeIsZero294,9266
int Ssw_SmlNodeIsZeroFrame( Ssw_Sml_t * p, Aig_Obj_t * pObj, int f )Ssw_SmlNodeIsZeroFrame316,9786
int Ssw_SmlNodeCountOnesReal( Ssw_Sml_t * p, Aig_Obj_t * pObj )Ssw_SmlNodeCountOnesReal333,10209
int Ssw_SmlNodeCountOnesRealVec( Ssw_Sml_t * p, Vec_Ptr_t * vObjs )Ssw_SmlNodeCountOnesRealVec362,10968
void Ssw_SmlSavePattern0( Ssw_Man_t * p, int fInit )Ssw_SmlSavePattern0398,11855
void Ssw_SmlSavePattern1( Ssw_Man_t * p, int fInit )Ssw_SmlSavePattern1414,12223
int * Ssw_SmlCheckOutputSavePattern( Ssw_Sml_t * p, Aig_Obj_t * pObjPo )Ssw_SmlCheckOutputSavePattern440,12930
int * Ssw_SmlCheckOutput( Ssw_Sml_t * p )Ssw_SmlCheckOutput482,14186
void Ssw_SmlAssignRandom( Ssw_Sml_t * p, Aig_Obj_t * pObj )Ssw_SmlAssignRandom513,14988
void Ssw_SmlAssignRandomFrame( Ssw_Sml_t * p, Aig_Obj_t * pObj, int iFrame )Ssw_SmlAssignRandomFrame538,15681
void Ssw_SmlObjAssignConst( Ssw_Sml_t * p, Aig_Obj_t * pObj, int fConst1, int iFrame )Ssw_SmlObjAssignConst560,16271
void Ssw_SmlObjAssignConstWord( Ssw_Sml_t * p, Aig_Obj_t * pObj, int fConst1, int iFrame, int iWord )Ssw_SmlObjAssignConstWord582,16878
void Ssw_SmlObjSetWord( Ssw_Sml_t * p, Aig_Obj_t * pObj, unsigned Word, int iWord, int iFrame )Ssw_SmlObjSetWord603,17484
void Ssw_SmlAssignDist1( Ssw_Sml_t * p, unsigned * pPat )Ssw_SmlAssignDist1623,18031
void Ssw_SmlAssignDist1Plus( Ssw_Sml_t * p, unsigned * pPat )Ssw_SmlAssignDist1Plus674,19821
void Ssw_SmlNodeSimulate( Ssw_Sml_t * p, Aig_Obj_t * pObj, int iFrame )Ssw_SmlNodeSimulate706,20785
int Ssw_SmlNodesCompareInFrame( Ssw_Sml_t * p, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1, int iFrame0, int iFrame1 )Ssw_SmlNodesCompareInFrame772,23003
void Ssw_SmlNodeCopyFanin( Ssw_Sml_t * p, Aig_Obj_t * pObj, int iFrame )Ssw_SmlNodeCopyFanin803,23992
void Ssw_SmlNodeTransferNext( Ssw_Sml_t * p, Aig_Obj_t * pOut, Aig_Obj_t * pIn, int iFrame )Ssw_SmlNodeTransferNext837,25106
void Ssw_SmlNodeTransferFirst( Ssw_Sml_t * p, Aig_Obj_t * pOut, Aig_Obj_t * pIn )Ssw_SmlNodeTransferFirst866,26009
void Ssw_SmlInitialize( Ssw_Sml_t * p, int fInit )Ssw_SmlInitialize895,26854
void Ssw_SmlInitializeSpecial( Ssw_Sml_t * p, Vec_Int_t * vInit )Ssw_SmlInitializeSpecial928,27746
void Ssw_SmlReinitialize( Ssw_Sml_t * p )Ssw_SmlReinitialize955,28604
int Ssw_SmlCheckNonConstOutputs( Ssw_Sml_t * p )Ssw_SmlCheckNonConstOutputs980,29352
void Ssw_SmlSimulateOne( Ssw_Sml_t * p )Ssw_SmlSimulateOne1005,29967
void Ssw_SmlUnnormalize( Ssw_Sml_t * p )Ssw_SmlUnnormalize1044,31148
void Ssw_SmlSimulateOneDyn_rec( Ssw_Sml_t * p, Aig_Obj_t * pObj, int f, int * pVisited, int nVisCounter )Ssw_SmlSimulateOneDyn_rec1076,31994
void Ssw_SmlSimulateOneFrame( Ssw_Sml_t * p )Ssw_SmlSimulateOneFrame1117,33446
Ssw_Sml_t * Ssw_SmlStart( Aig_Man_t * pAig, int nPref, int nFrames, int nWordsFrame )Ssw_SmlStart1148,34279
void Ssw_SmlClean( Ssw_Sml_t * p )Ssw_SmlClean1173,35103
Vec_Ptr_t * Ssw_SmlSimDataPointers( Ssw_Sml_t * p )Ssw_SmlSimDataPointers1189,35472
void Ssw_SmlStop( Ssw_Sml_t * p )Ssw_SmlStop1211,36019
Ssw_Sml_t * Ssw_SmlSimulateComb( Aig_Man_t * pAig, int nWords )Ssw_SmlSimulateComb1228,36346
Ssw_Sml_t * Ssw_SmlSimulateSeq( Aig_Man_t * pAig, int nPref, int nFrames, int nWords )Ssw_SmlSimulateSeq1248,36818
void Ssw_SmlResimulateSeq( Ssw_Sml_t * p )Ssw_SmlResimulateSeq1269,37377
int Ssw_SmlNumFrames( Ssw_Sml_t * p )Ssw_SmlNumFrames1288,37814
int Ssw_SmlNumWordsTotal( Ssw_Sml_t * p )Ssw_SmlNumWordsTotal1304,38144
unsigned * Ssw_SmlSimInfo( Ssw_Sml_t * p, Aig_Obj_t * pObj )Ssw_SmlSimInfo1321,38587
Abc_Cex_t * Ssw_SmlGetCounterExample( Ssw_Sml_t * p )Ssw_SmlGetCounterExample1338,39009

src/proof/ssw/sswCore.c,877
void Ssw_ManSetDefaultParams( Ssw_Pars_t * p )Ssw_ManSetDefaultParams45,1281
void Ssw_ManSetDefaultParamsLcorr( Ssw_Pars_t * p )Ssw_ManSetDefaultParamsLcorr93,3676
void Ssw_ReportConeReductions( Ssw_Man_t * p, Aig_Man_t * pAigInit, Aig_Man_t * pAigStop )Ssw_ReportConeReductions111,4097
void Ssw_ReportOneOutput( Aig_Man_t * p, Aig_Obj_t * pObj )Ssw_ReportOneOutput141,4986
void Ssw_ReportOutputs( Aig_Man_t * pAig )Ssw_ReportOutputs162,5498
void Ssw_ManUpdateEquivs( Ssw_Man_t * p, Aig_Man_t * pAig, int fVerbose )Ssw_ManUpdateEquivs188,6145
Aig_Man_t * Ssw_SignalCorrespondenceRefine( Ssw_Man_t * p )Ssw_SignalCorrespondenceRefine235,7650
Aig_Man_t * Ssw_SignalCorrespondence( Aig_Man_t * pAig, Ssw_Pars_t * pPars )Ssw_SignalCorrespondence415,14427
Aig_Man_t * Ssw_LatchCorrespondence( Aig_Man_t * pAig, Ssw_Pars_t * pPars )Ssw_LatchCorrespondence522,18685

src/proof/ssw/sswIslands.c,1334
void Ssw_CreatePair( Vec_Int_t * vPairs, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Ssw_CreatePair45,1309
void Ssw_MatchingStart( Aig_Man_t * p0, Aig_Man_t * p1, Vec_Int_t * vPairs )Ssw_MatchingStart64,1809
void Ssw_MatchingExtendOne( Aig_Man_t * p, Vec_Ptr_t * vNodes )Ssw_MatchingExtendOne130,3758
int Ssw_MatchingCountUnmached( Aig_Man_t * p )Ssw_MatchingCountUnmached193,5721
void Ssw_MatchingExtend( Aig_Man_t * p0, Aig_Man_t * p1, int nDist, int fVerbose )Ssw_MatchingExtend219,6330
void Ssw_MatchingComplete( Aig_Man_t * p0, Aig_Man_t * p1 )Ssw_MatchingComplete287,8613
Vec_Int_t * Ssw_MatchingPairs( Aig_Man_t * p0, Aig_Man_t * p1 )Ssw_MatchingPairs332,9999
Vec_Int_t * Ssw_MatchingMiter( Aig_Man_t * pMiter, Aig_Man_t * p0, Aig_Man_t * p1, Vec_Int_t * vPairsAll )Ssw_MatchingMiter370,11021
Aig_Man_t * Ssw_SecWithSimilaritySweep( Aig_Man_t * p0, Aig_Man_t * p1, Vec_Int_t * vPairs, Ssw_Pars_t * pPars )Ssw_SecWithSimilaritySweep419,12695
int Ssw_SecWithSimilarityPairs( Aig_Man_t * p0, Aig_Man_t * p1, Vec_Int_t * vPairs, Ssw_Pars_t * pPars )Ssw_SecWithSimilarityPairs478,15320
Vec_Int_t * Saig_StrSimPerformMatching_hack( Aig_Man_t * p0, Aig_Man_t * p1 )Saig_StrSimPerformMatching_hack514,16563
int Ssw_SecWithSimilarity( Aig_Man_t * p0, Aig_Man_t * p1, Ssw_Pars_t * pPars )Ssw_SecWithSimilarity542,17280

src/proof/ssw/sswRarity2.c,2483
typedef struct Ssw_RarMan_t_ Ssw_RarMan_t;Ssw_RarMan_t31,848
struct Ssw_RarMan_t_Ssw_RarMan_t_32,891
    int            nWords;       // the number of words to simulatenWords35,932
    int            nFrames;      // the number of frames to simulatenFrames36,1000
    int            nBinSize;     // the number of flops in one groupnBinSize37,1069
    int            fVerbose;     // the verbosiness flagfVerbose38,1138
    int            nGroups;      // the number of flop groupsnGroups39,1195
    Aig_Man_t *    pAig;         // AIG with equivalence classespAig41,1278
    Ssw_Cla_t *    ppClasses;    // equivalence classesppClasses42,1343
    Ssw_Sml_t *    pSml;         // simulation managerpSml43,1399
    Vec_Ptr_t *    vSimInfo;     // simulation info from pSml managervSimInfo44,1454
    Vec_Int_t *    vInits;       // initial statevInits45,1524
    int *          pRarity;      // occur counts for patterns in groupspRarity47,1593
    int *          pGroupValues; // occur counts in each grouppGroupValues48,1665
    double *       pPatCosts;    // pattern costspPatCosts49,1728
static inline int  Ssw_RarGetBinPat( Ssw_RarMan_t * p, int iBin, int iPat )Ssw_RarGetBinPat53,1783
static inline void Ssw_RarSetBinPat( Ssw_RarMan_t * p, int iBin, int iPat, int Value )Ssw_RarSetBinPat59,2046
static inline void Ssw_RarAddToBinPat( Ssw_RarMan_t * p, int iBin, int iPat )Ssw_RarAddToBinPat65,2321
static Ssw_RarMan_t * Ssw_RarManStart( Aig_Man_t * pAig, int nWords, int nFrames, int nBinSize, int fVerbose )Ssw_RarManStart87,3021
static void Ssw_RarManStop( Ssw_RarMan_t * p )Ssw_RarManStop118,3973
static void Ssw_RarUpdateCounters( Ssw_RarMan_t * p )Ssw_RarUpdateCounters142,4560
static void Ssw_RarTransferPatterns( Ssw_RarMan_t * p, Vec_Int_t * vInits )Ssw_RarTransferPatterns188,5934
static Vec_Int_t * Ssw_RarFindStartingState( Aig_Man_t * pAig, Abc_Cex_t * pCex )Ssw_RarFindStartingState257,8183
int Ssw_RarSimulate2( Aig_Man_t * pAig, int nFrames, int nWords, int nBinSize, int nRounds, int TimeOut, int fVerbose )Ssw_RarSimulate2307,9991
int Ssw_RarSignalFilter2( Aig_Man_t * pAig, int nFrames, int nWords, int nBinSize, int nRounds, int TimeOut, Abc_Cex_t * pCex, int fLatchOnly, int fVerbose )Ssw_RarSignalFilter2386,12600
int Ssw_RarSignalFilterGia2( Gia_Man_t * p, int nFrames, int nWords, int nBinSize, int nRounds, int TimeOut, Abc_Cex_t * pCex, int fLatchOnly, int fVerbose )Ssw_RarSignalFilterGia2493,16529

src/proof/ssw/sswBmc.c,354
Aig_Obj_t * Ssw_BmcUnroll_rec( Ssw_Frm_t * pFrm, Aig_Obj_t * pObj, int f )Ssw_BmcUnroll_rec45,1302
Abc_Cex_t * Ssw_BmcGetCounterExample( Ssw_Frm_t * pFrm, Ssw_Sat_t * pSat, int iPo, int iFrame )Ssw_BmcGetCounterExample90,2696
int Ssw_BmcDynamic( Aig_Man_t * pAig, int nFramesMax, int nConfLimit, int fVerbose, int * piFrame )Ssw_BmcDynamic126,3831

src/proof/ssw/sswPairs.c,1107
int Ssw_MiterStatus( Aig_Man_t * p, int fVerbose )Ssw_MiterStatus45,1280
Vec_Int_t * Ssw_TransferSignalPairs( Aig_Man_t * pMiter, Aig_Man_t * pAig1, Aig_Man_t * pAig2, Vec_Int_t * vIds1, Vec_Int_t * vIds2 )Ssw_TransferSignalPairs108,2983
Vec_Int_t ** Ssw_TransformPairsIntoTempClasses( Vec_Int_t * vPairs, int nObjNumMax )Ssw_TransformPairsIntoTempClasses149,4207
void Ssw_FreeTempClasses( Vec_Int_t ** pvClasses, int nObjNumMax )Ssw_FreeTempClasses252,8174
Aig_Man_t * Ssw_SignalCorrespondenceWithPairs( Aig_Man_t * pAig1, Aig_Man_t * pAig2, Vec_Int_t * vIds1, Vec_Int_t * vIds2, Ssw_Pars_t * pPars )Ssw_SignalCorrespondenceWithPairs272,8692
Aig_Man_t * Ssw_SignalCorrespondeceTestPairs( Aig_Man_t * pAig )Ssw_SignalCorrespondeceTestPairs317,10550
int Ssw_SecWithPairs( Aig_Man_t * pAig1, Aig_Man_t * pAig2, Vec_Int_t * vIds1, Vec_Int_t * vIds2, Ssw_Pars_t * pPars )Ssw_SecWithPairs380,12779
int Ssw_SecGeneral( Aig_Man_t * pAig1, Aig_Man_t * pAig2, Ssw_Pars_t * pPars )Ssw_SecGeneral415,14041
int Ssw_SecGeneralMiter( Aig_Man_t * pMiter, Ssw_Pars_t * pPars )Ssw_SecGeneralMiter452,15307

src/proof/ssw/sswLcorr.c,522
void Ssw_ManSweepTransfer( Ssw_Man_t * p )Ssw_ManSweepTransfer46,1314
int Ssw_ManSweepResimulate( Ssw_Man_t * p )Ssw_ManSweepResimulate78,2230
void Ssw_SmlAddPattern( Ssw_Man_t * p, Aig_Obj_t * pRepr, Aig_Obj_t * pCand )Ssw_SmlAddPattern108,3129
void Ssw_ManBuildCone_rec( Ssw_Man_t * p, Aig_Obj_t * pObj )Ssw_ManBuildCone_rec136,3939
void Ssw_ManSweepLatchOne( Ssw_Man_t * p, Aig_Obj_t * pObjRepr, Aig_Obj_t * pObj )Ssw_ManSweepLatchOne160,4646
int Ssw_ManSweepLatch( Ssw_Man_t * p )Ssw_ManSweepLatch238,6992

src/proof/ssw/sswSemi.c,1508
typedef struct Ssw_Sem_t_ Ssw_Sem_t; // BMC managerSsw_Sem_t30,803
struct Ssw_Sem_t_Ssw_Sem_t_32,856
    int              nConfMaxStart;  // the starting conflict limitnConfMaxStart35,894
    int              nConfMax;       // the intermediate conflict limitnConfMax36,962
    int              nFramesSweep;   // the number of frames to sweepnFramesSweep37,1034
    int              fVerbose;       // prints output statisticsfVerbose38,1104
    Ssw_Man_t *      pMan;           // SAT sweeping managerpMan40,1200
    Vec_Ptr_t *      vTargets;       // the nodes that are watchedvTargets41,1261
    int              nPatternsAlloc; // the max number of interesting statesnPatternsAlloc43,1356
    int              nPatterns;      // the number of patternsnPatterns44,1433
    Vec_Ptr_t *      vPatterns;      // storage for the interesting statesvPatterns45,1496
    Vec_Int_t *      vHistory;       // what state and how many stepsvHistory46,1571
Ssw_Sem_t * Ssw_SemManStart( Ssw_Man_t * pMan, int nConfMax, int fVerbose )Ssw_SemManStart64,2099
void Ssw_SemManStop( Ssw_Sem_t * p )Ssw_SemManStop110,3701
int Ssw_SemCheckTargets( Ssw_Sem_t * p )Ssw_SemCheckTargets129,4078
void Ssw_ManFilterBmcSavePattern( Ssw_Sem_t * p )Ssw_ManFilterBmcSavePattern150,4530
int Ssw_ManFilterBmc( Ssw_Sem_t * pBmc, int iPat, int fCheckTargets )Ssw_ManFilterBmc177,5239
int Ssw_FilterUsingSemi( Ssw_Man_t * pMan, int fCheckTargets, int nConfMax, int fVerbose )Ssw_FilterUsingSemi261,8045

src/proof/ssw/sswFilter.c,963
void Ssw_ManRefineByFilterSim( Ssw_Man_t * p, int nFrames )Ssw_ManRefineByFilterSim46,1336
void Ssw_ManRollForward( Ssw_Man_t * p, int nFrames )Ssw_ManRollForward96,3035
void Ssw_ManFindStartingState( Ssw_Man_t * p, Abc_Cex_t * pCex )Ssw_ManFindStartingState138,4592
int Ssw_ManSweepNodeFilter( Ssw_Man_t * p, Aig_Obj_t * pObj, int f )Ssw_ManSweepNodeFilter185,6425
Aig_Obj_t * Ssw_ManSweepBmcFilter_rec( Ssw_Man_t * p, Aig_Obj_t * pObj, int f )Ssw_ManSweepBmcFilter_rec241,8487
int Ssw_ManSweepBmcFilter( Ssw_Man_t * p, int TimeLimit )Ssw_ManSweepBmcFilter278,9661
void Ssw_SignalFilter( Aig_Man_t * pAig, int nFramesMax, int nConfMax, int nRounds, int TimeLimit, int TimeLimit2, Abc_Cex_t * pCex, int fLatchOnly, int fVerbose )Ssw_SignalFilter382,13395
void Ssw_SignalFilterGia( Gia_Man_t * p, int nFramesMax, int nConfMax, int nRounds, int TimeLimit, int TimeLimit2, Abc_Cex_t * pCex, int fLatchOnly, int fVerbose )Ssw_SignalFilterGia473,16626

src/proof/ssw/sswConstr.c,1050
Aig_Man_t * Ssw_FramesWithConstraints( Aig_Man_t * p, int nFrames )Ssw_FramesWithConstraints47,1361
int Ssw_ManSetConstrPhases( Aig_Man_t * p, int nFrames, Vec_Int_t ** pvInits )Ssw_ManSetConstrPhases100,3246
int Ssw_ManSetConstrPhases_( Aig_Man_t * p, int nFrames, Vec_Int_t ** pvInits )Ssw_ManSetConstrPhases_156,4875
void Ssw_ManPrintPolarity( Aig_Man_t * p )Ssw_ManPrintPolarity227,7119
void Ssw_ManRefineByConstrSim( Ssw_Man_t * p )Ssw_ManRefineByConstrSim247,7596
int Ssw_ManSweepNodeConstr( Ssw_Man_t * p, Aig_Obj_t * pObj, int f, int fBmc )Ssw_ManSweepNodeConstr314,9983
Aig_Obj_t * Ssw_ManSweepBmcConstr_rec( Ssw_Man_t * p, Aig_Obj_t * pObj, int f )Ssw_ManSweepBmcConstr_rec370,12053
int Ssw_ManSweepBmcConstr_old( Ssw_Man_t * p )Ssw_ManSweepBmcConstr_old407,13217
int Ssw_ManSweepBmcConstr( Ssw_Man_t * p )Ssw_ManSweepBmcConstr498,16501
Aig_Obj_t * Ssw_FramesWithClasses_rec( Ssw_Man_t * p, Aig_Obj_t * pObj, int f )Ssw_FramesWithClasses_rec583,19478
int Ssw_ManSweepConstr( Ssw_Man_t * p )Ssw_ManSweepConstr621,20643

src/proof/ssw/sswPart.c,118
Aig_Man_t * Ssw_SignalCorrespondencePart( Aig_Man_t * pAig, Ssw_Pars_t * pPars )Ssw_SignalCorrespondencePart46,1326

src/proof/ssw/sswRarity.c,4517
typedef struct Ssw_RarMan_t_ Ssw_RarMan_t;Ssw_RarMan_t33,901
struct Ssw_RarMan_t_Ssw_RarMan_t_34,944
    Ssw_RarPars_t* pPars;pPars37,985
    int            nGroups;      // the number of flop groupsnGroups38,1011
    int            nWordsReg;    // the number of words in the registersnWordsReg39,1073
    Aig_Man_t *    pAig;         // AIG with equivalence classespAig41,1167
    Ssw_Cla_t *    ppClasses;    // equivalence classesppClasses42,1232
    Vec_Int_t *    vInits;       // initial statevInits43,1288
    word *         pObjData;     // simulation info for each objpObjData45,1361
    word *         pPatData;     // pattern data for each regpPatData46,1426
    Vec_Ptr_t *    vUpdConst;    // constant 1 candidatesvUpdConst48,1516
    Vec_Ptr_t *    vUpdClass;    // class representativesvUpdClass49,1574
    int *          pRarity;      // occur counts for patterns in groupspRarity51,1651
    double *       pPatCosts;    // pattern costspPatCosts52,1723
    Vec_Int_t *    vPatBests;    // best patternsvPatBests54,1794
    int            iFailPo;      // failed primary outputiFailPo55,1844
    int            iFailPat;     // failed patterniFailPat56,1902
    Vec_Ptr_t *    vCexes;vCexes58,1977
static inline int  Ssw_RarGetBinPat( Ssw_RarMan_t * p, int iBin, int iPat )Ssw_RarGetBinPat62,2009
static inline void Ssw_RarSetBinPat( Ssw_RarMan_t * p, int iBin, int iPat, int Value )Ssw_RarSetBinPat68,2293
static inline void Ssw_RarAddToBinPat( Ssw_RarMan_t * p, int iBin, int iPat )Ssw_RarAddToBinPat74,2589
static inline int    Ssw_RarBitWordNum( int nBits )             { return (nBits>>6) + ((nBits&63) > 0);  }Ssw_RarBitWordNum81,2871
static inline word * Ssw_RarObjSim( Ssw_RarMan_t * p, int Id )  { assert( Id < Aig_ManObjNumMax(p->pAig) ); return p->pObjData + p->pPars->nWords * Id;    }Ssw_RarObjSim83,2979
static inline word * Ssw_RarPatSim( Ssw_RarMan_t * p, int Id )  { assert( Id < 64 * p->pPars->nWords );     return p->pPatData + p->nWordsReg * Id;        }Ssw_RarPatSim84,3136
void Ssw_RarSetDefaultParams( Ssw_RarPars_t * p )Ssw_RarSetDefaultParams102,3734
void Ssw_RarManPrepareRandom( int nRandSeed )Ssw_RarManPrepareRandom131,4448
void Ssw_RarManAssingRandomPis( Ssw_RarMan_t * p )Ssw_RarManAssingRandomPis150,4853
Abc_Cex_t * Ssw_RarDeriveCex( Ssw_RarMan_t * p, int iFrame, int iPo, int iPatFinal, int fVerbose )Ssw_RarDeriveCex177,5529
void transpose32( unsigned A[32] )transpose32239,7500
void transpose64( word A[64] )transpose64265,8100
void transpose64Simple( word A[64], word B[64] )transpose64Simple291,8685
void TransposeTest()TransposeTest313,9199
void Ssw_RarTranspose( Ssw_RarMan_t * p )Ssw_RarTranspose360,10530
void Ssw_RarManInitialize( Ssw_RarMan_t * p, Vec_Int_t * vInit )Ssw_RarManInitialize415,11991
int Ssw_RarManPoIsConst0( void * pMan, Aig_Obj_t * pObj )Ssw_RarManPoIsConst0461,13353
int Ssw_RarManObjIsConst( void * pMan, Aig_Obj_t * pObj )Ssw_RarManObjIsConst483,13904
int Ssw_RarManObjsAreEqual( void * pMan, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Ssw_RarManObjsAreEqual506,14493
unsigned Ssw_RarManObjHashWord( void * pMan, Aig_Obj_t * pObj )Ssw_RarManObjHashWord530,15199
int Ssw_RarManObjWhichOne( Ssw_RarMan_t * p, Aig_Obj_t * pObj )Ssw_RarManObjWhichOne569,16736
int Ssw_RarManCheckNonConstOutputs( Ssw_RarMan_t * p, int iFrame, abctime Time )Ssw_RarManCheckNonConstOutputs597,17487
void Ssw_RarManSimulate( Ssw_RarMan_t * p, Vec_Int_t * vInit, int fUpdate, int fFirst )Ssw_RarManSimulate651,19285
static Ssw_RarMan_t * Ssw_RarManStart( Aig_Man_t * pAig, Ssw_RarPars_t * pPars )Ssw_RarManStart751,22443
static void Ssw_RarManStop( Ssw_RarMan_t * p )Ssw_RarManStop782,23493
static void Ssw_RarTransferPatterns( Ssw_RarMan_t * p, Vec_Int_t * vInits )Ssw_RarTransferPatterns814,24299
static Vec_Int_t * Ssw_RarFindStartingState( Aig_Man_t * pAig, Abc_Cex_t * pCex )Ssw_RarFindStartingState886,26484
int Ssw_RarCheckTrivial( Aig_Man_t * pAig, int fVerbose )Ssw_RarCheckTrivial941,28367
int Ssw_RarSimulate( Aig_Man_t * pAig, Ssw_RarPars_t * pPars )Ssw_RarSimulate973,29236
Vec_Int_t * Ssw_RarRandomPermFlop( int nFlops, int nUnused )Ssw_RarRandomPermFlop1150,36810
int Ssw_RarSimulateGia( Gia_Man_t * p, Ssw_RarPars_t * pPars )Ssw_RarSimulateGia1186,37810
int Ssw_RarSignalFilter( Aig_Man_t * pAig, Ssw_RarPars_t * pPars )Ssw_RarSignalFilter1219,38734
int Ssw_RarSignalFilterGia( Gia_Man_t * p, Ssw_RarPars_t * pPars )Ssw_RarSignalFilterGia1359,44511

src/proof/ssw/sswUnique.c,319
void Ssw_UniqueRegisterPairInfo( Ssw_Man_t * p )Ssw_UniqueRegisterPairInfo45,1316
int Ssw_ManUniqueOne( Ssw_Man_t * p, Aig_Obj_t * pRepr, Aig_Obj_t * pObj, int fVerbose )Ssw_ManUniqueOne90,2806
int Ssw_ManUniqueAddConstraint( Ssw_Man_t * p, Vec_Ptr_t * vCommon, int f1, int f2 )Ssw_ManUniqueAddConstraint151,4718

src/proof/pdr/pdrInt.h,6298
#define ABC__sat__pdr__pdrInt_hABC__sat__pdr__pdrInt_h22,548
    #define l_Undef l_Undef41,1088
    #define l_True l_True42,1111
    #define l_False l_False43,1134
    #define sat_solver sat_solver44,1157
    #define sat_solver_new sat_solver_new45,1211
    #define sat_solver_delete sat_solver_delete46,1270
    #define zsat_solver_new_seed(zsat_solver_new_seed47,1330
    #define zsat_solver_restart_seed(zsat_solver_restart_seed48,1391
    #define sat_solver_nvars sat_solver_nvars49,1452
    #define sat_solver_setnvars sat_solver_setnvars50,1511
    #define sat_solver_addclause(sat_solver_addclause51,1572
    #define sat_solver_final sat_solver_final52,1644
    #define sat_solver_solve(sat_solver_solve53,1711
    #define sat_solver_var_value sat_solver_var_value54,1803
    #define sat_solver_set_runtime_limit sat_solver_set_runtime_limit55,1873
    #define sat_solver_set_runid sat_solver_set_runid56,1943
    #define sat_solver_set_stop_func sat_solver_set_stop_func57,2016
    #define sat_solver_compress(sat_solver_compress58,2092
typedef struct Txs_Man_t_  Txs_Man_t;Txs_Man_t71,2629
typedef struct Txs3_Man_t_ Txs3_Man_t;Txs3_Man_t72,2667
typedef struct Pdr_Set_t_ Pdr_Set_t;Pdr_Set_t74,2707
struct Pdr_Set_t_Pdr_Set_t_75,2744
    word        Sign;      // signatureSign77,2764
    int         nRefs;     // ref counternRefs78,2804
    int         nTotal;    // total literalsnTotal79,2846
    int         nLits;     // num flop literalsnLits80,2891
    int         Lits[0];Lits81,2939
typedef struct Pdr_Obl_t_ Pdr_Obl_t;Pdr_Obl_t84,2968
struct Pdr_Obl_t_Pdr_Obl_t_85,3005
    int         iFrame;    // time frameiFrame87,3025
    int         prio;      // priorityprio88,3066
    int         nRefs;     // reference counternRefs89,3105
    Pdr_Set_t * pState;    // state cubepState90,3153
    Pdr_Obl_t * pNext;     // next onepNext91,3194
    Pdr_Obl_t * pLink;     // queue linkpLink92,3233
typedef struct Pdr_Man_t_ Pdr_Man_t;Pdr_Man_t95,3278
struct Pdr_Man_t_Pdr_Man_t_96,3315
    Pdr_Par_t * pPars;     // parameterspPars99,3356
    Aig_Man_t * pAig;      // user's AIGpAig100,3397
    Gia_Man_t * pGia;      // user's AIGpGia101,3438
    Cnf_Man_t * pCnfMan;   // CNF managerpCnfMan103,3512
    Cnf_Dat_t * pCnf1;     // CNF for this AIGpCnf1104,3554
    Vec_Int_t * vVar2Reg;  // mapping of SAT var into registersvVar2Reg105,3601
    Cnf_Dat_t * pCnf2;     // CNF for this AIGpCnf2107,3699
    Vec_Int_t * pvId2Vars; // for each used ObjId, maps frame into SAT varpvId2Vars108,3746
    Vec_Ptr_t   vVar2Ids;  // for each used frame, maps SAT var into ObjIdvVar2Ids109,3821
    Vec_Wec_t * vVLits;    // CNF literalsvVLits110,3896
    int         iOutCur;   // current outputiOutCur112,3966
    int         nPrioShift;// priority shiftnPrioShift113,4011
    Vec_Ptr_t * vCexes;    // counter-examples for each outputvCexes114,4056
    Vec_Ptr_t * vSolvers;  // SAT solversvSolvers115,4119
    Vec_Vec_t * vClauses;  // clauses by timeframevClauses116,4161
    Pdr_Obl_t * pQueue;    // proof obligationspQueue117,4212
    int *       pOrder;    // ordering of the litspOrder118,4260
    Vec_Int_t * vActVars;  // the counter of activation variablesvActVars119,4311
    int         iUseFrame; // the first used frameiUseFrame120,4377
    int         nAbsFlops; // the number of flops usednAbsFlops121,4428
    Vec_Int_t * vAbsFlops; // flops currently usedvAbsFlops122,4483
    Vec_Int_t * vMapFf2Ppi;vMapFf2Ppi123,4534
    Vec_Int_t * vMapPpi2Ff;vMapPpi2Ff124,4562
    int         nCexes;nCexes125,4590
    int         nCexesTotal;nCexesTotal126,4614
    Txs3_Man_t * pTxs3;      pTxs3128,4671
    Vec_Int_t * vPrio;     // priority flopsvPrio130,4721
    Vec_Int_t * vLits;     // array of literalsvLits131,4766
    Vec_Int_t * vCiObjs;   // cone leavesvCiObjs132,4814
    Vec_Int_t * vCoObjs;   // cone rootsvCoObjs133,4856
    Vec_Int_t * vCiVals;   // cone leaf valuesvCiVals134,4897
    Vec_Int_t * vCoVals;   // cone root valuesvCoVals135,4944
    Vec_Int_t * vNodes;    // cone nodesvNodes136,4991
    Vec_Int_t * vUndo;     // cone undosvUndo137,5032
    Vec_Int_t * vVisits;   // intermediatevVisits138,5073
    Vec_Int_t * vCi2Rem;   // CIs to be removedvCi2Rem139,5116
    Vec_Int_t * vRes;      // final resultvRes140,5164
    abctime *   pTime4Outs;// timeout per outputpTime4Outs141,5207
    Vec_Ptr_t * vInfCubes; // infinity clauses/cubesvInfCubes142,5256
    int         nBlocks;   // the number of times blockState was callednBlocks144,5327
    int         nObligs;   // the number of proof obligations derivednObligs145,5399
    int         nCubes;    // the number of cubes derivednCubes146,5469
    int         nCalls;    // the number of SAT callsnCalls147,5527
    int         nCallsS;   // the number of SAT calls (sat)nCallsS148,5581
    int         nCallsU;   // the number of SAT calls (unsat)nCallsU149,5641
    int         nStarts;   // the number of SAT solver restartsnStarts150,5703
    int         nFrames;   // frames explorednFrames151,5767
    int         nCasesSS;nCasesSS152,5813
    int         nCasesSU;nCasesSU153,5839
    int         nCasesUS;nCasesUS154,5865
    int         nCasesUU;nCasesUU155,5891
    int         nQueCur;nQueCur156,5917
    int         nQueMax;nQueMax157,5942
    int         nQueLim;nQueLim158,5967
    int         nXsimRuns;nXsimRuns159,5992
    int         nXsimLits;nXsimLits160,6019
    abctime     timeToStop;timeToStop162,6061
    abctime     timeToStopOne;timeToStopOne163,6089
    abctime     tSat;tSat165,6138
    abctime     tSatSat;tSatSat166,6160
    abctime     tSatUnsat;tSatUnsat167,6185
    abctime     tGeneral;tGeneral168,6212
    abctime     tPush;tPush169,6238
    abctime     tTsim;tTsim170,6261
    abctime     tContain;tContain171,6284
    abctime     tCnf;tCnf172,6310
    abctime     tAbs;tAbs173,6332
    abctime     tTotal;tTotal174,6354
static inline sat_solver * Pdr_ManSolver( Pdr_Man_t * p, int k )  { return (sat_solver *)Vec_PtrEntry(p->vSolvers, k); }Pdr_ManSolver181,6602
static inline abctime      Pdr_ManTimeLimit( Pdr_Man_t * p )Pdr_ManTimeLimit183,6724

src/proof/pdr/pdrTsim.c,1516
#define PDR_ZER PDR_ZER29,781
#define PDR_ONE PDR_ONE30,799
#define PDR_UND PDR_UND31,817
static inline int Pdr_ManSimInfoNot( int Value )Pdr_ManSimInfoNot33,836
static inline int Pdr_ManSimInfoAnd( int Value0, int Value1 )Pdr_ManSimInfoAnd42,1014
static inline int Pdr_ManSimInfoGet( Aig_Man_t * p, Aig_Obj_t * pObj )Pdr_ManSimInfoGet51,1249
static inline void Pdr_ManSimInfoSet( Aig_Man_t * p, Aig_Obj_t * pObj, int Value )Pdr_ManSimInfoSet56,1413
void Pdr_ManCollectCone_rec( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vCiObjs, Vec_Int_t * vNodes )Pdr_ManCollectCone_rec78,2182
void Pdr_ManCollectCone( Aig_Man_t * pAig, Vec_Int_t * vCoObjs, Vec_Int_t * vCiObjs, Vec_Int_t * vNodes )Pdr_ManCollectCone107,3059
int Pdr_ManExtendOneEval( Aig_Man_t * pAig, Aig_Obj_t * pObj )Pdr_ManExtendOneEval130,3743
int Pdr_ManSimDataInit( Aig_Man_t * pAig,Pdr_ManSimDataInit161,4641
int Pdr_ManExtendOne( Aig_Man_t * pAig, Aig_Obj_t * pObj, Vec_Int_t * vUndo, Vec_Int_t * vVis )Pdr_ManExtendOne199,5967
void Pdr_ManExtendUndo( Aig_Man_t * pAig, Vec_Int_t * vUndo )Pdr_ManExtendUndo251,7715
void Pdr_ManDeriveResult( Aig_Man_t * pAig, Vec_Int_t * vCiObjs, Vec_Int_t * vCiVals, Vec_Int_t * vCi2Rem, Vec_Int_t * vRes, Vec_Int_t * vPiLits )Pdr_ManDeriveResult274,8295
void Pdr_ManPrintCex( Aig_Man_t * pAig, Vec_Int_t * vCiObjs, Vec_Int_t * vCiVals, Vec_Int_t * vCi2Rem )Pdr_ManPrintCex317,9662
Pdr_Set_t * Pdr_ManTernarySim( Pdr_Man_t * p, int k, Pdr_Set_t * pCube )Pdr_ManTernarySim351,10973

src/proof/pdr/pdrIncr.c,1325
Vec_Ptr_t * IPdr_ManPushClausesK( Pdr_Man_t * p, int k )IPdr_ManPushClausesK42,1468
void IPdr_ManPrintClauses( Vec_Vec_t * vClauses, int kStart, int nRegs )IPdr_ManPrintClauses113,3721
int IPdr_ManCheckClauses( Pdr_Man_t * p )IPdr_ManCheckClauses144,4702
Vec_Vec_t * IPdr_ManSaveClauses( Pdr_Man_t * p, int fDropLast )IPdr_ManSaveClauses182,5597
sat_solver * IPdr_ManSetSolver( Pdr_Man_t * p, int k, int fSetPropOutput )IPdr_ManSetSolver216,6466
int IPdr_ManRebuildClauses( Pdr_Man_t * p, Vec_Vec_t * vClauses )IPdr_ManRebuildClauses256,7495
int IPdr_ManRestoreAbsFlops( Pdr_Man_t * p )IPdr_ManRestoreAbsFlops324,9361
int IPdr_ManRestoreClauses( Pdr_Man_t * p, Vec_Vec_t * vClauses, Vec_Int_t * vMap )IPdr_ManRestoreClauses338,9682
int IPdr_ManSolveInt( Pdr_Man_t * p, int fCheckClauses, int fPushClauses )IPdr_ManSolveInt373,10588
int IPdr_ManSolve( Aig_Man_t * pAig, Pdr_Par_t * pPars )IPdr_ManSolve792,30557
int IPdr_ManCheckCombUnsat( Pdr_Man_t * p )IPdr_ManCheckCombUnsat871,33292
int IPdr_ManCheckCubeReduce( Pdr_Man_t * p, Vec_Ptr_t * vClauses, Pdr_Set_t * pCube, int nConfLimit )IPdr_ManCheckCubeReduce885,33637
int IPdr_ManReduceClauses( Pdr_Man_t * p, Vec_Vec_t * vClauses )IPdr_ManReduceClauses971,36543
int Abc_NtkDarIPdr ( Abc_Ntk_t * pNtk, Pdr_Par_t * pPars )Abc_NtkDarIPdr998,37234

src/proof/pdr/pdrMan.c,538
Vec_Int_t * Pdr_ManDeriveFlopPriorities3( Gia_Man_t * p, int fMuxCtrls )Pdr_ManDeriveFlopPriorities346,1279
Vec_Int_t * Pdr_ManDeriveFlopPriorities2( Gia_Man_t * p, int fMuxCtrls )Pdr_ManDeriveFlopPriorities2153,5131
Pdr_Man_t * Pdr_ManStart( Aig_Man_t * pAig, Pdr_Par_t * pPars, Vec_Int_t * vPrioInit )Pdr_ManStart248,8517
void Pdr_ManStop( Pdr_Man_t * p )Pdr_ManStop318,11241
Abc_Cex_t * Pdr_ManDeriveCex( Pdr_Man_t * p )Pdr_ManDeriveCex408,14714
Abc_Cex_t * Pdr_ManDeriveCexAbs( Pdr_Man_t * p )Pdr_ManDeriveCexAbs448,16094

src/proof/pdr/pdrCnf.c,1349
static inline int Pdr_ObjSatVar1( Pdr_Man_t * p, int k, Aig_Obj_t * pObj )Pdr_ObjSatVar154,1697
static inline int Pdr_ObjSatVar2FindOrAdd( Pdr_Man_t * p, int k, Aig_Obj_t * pObj )Pdr_ObjSatVar2FindOrAdd72,2133
int Pdr_ObjSatVar2( Pdr_Man_t * p, int k, Aig_Obj_t * pObj, int Level, int Pol )Pdr_ObjSatVar298,3210
static inline int Pdr_ObjSatVar2FindOrAdd( Pdr_Man_t * p, int k, Aig_Obj_t * pObj, int * pfNewVar )Pdr_ObjSatVar2FindOrAdd173,6552
int Pdr_ObjSatVar2( Pdr_Man_t * p, int k, Aig_Obj_t * pObj, int Level, int Pol )Pdr_ObjSatVar2200,7663
int Pdr_ObjSatVar( Pdr_Man_t * p, int k, int Pol, Aig_Obj_t * pObj )Pdr_ObjSatVar241,9155
static inline int Pdr_ObjRegNum1( Pdr_Man_t * p, int k, int iSatVar )Pdr_ObjRegNum1261,9652
static inline int Pdr_ObjRegNum2( Pdr_Man_t * p, int k, int iSatVar )Pdr_ObjRegNum2285,10331
int Pdr_ObjRegNum( Pdr_Man_t * p, int k, int iSatVar )Pdr_ObjRegNum312,11190
int Pdr_ManFreeVar( Pdr_Man_t * p, int k )Pdr_ManFreeVar332,11661
static inline sat_solver * Pdr_ManNewSolver1( sat_solver * pSat, Pdr_Man_t * p, int k, int fInit )Pdr_ManNewSolver1355,12227
static inline sat_solver * Pdr_ManNewSolver2( sat_solver * pSat, Pdr_Man_t * p, int k, int fInit )Pdr_ManNewSolver2389,13365
sat_solver * Pdr_ManNewSolver( sat_solver * pSat, Pdr_Man_t * p, int k, int fInit )Pdr_ManNewSolver439,14913

src/proof/pdr/pdrInv.c,2278
void Pdr_ManPrintProgress( Pdr_Man_t * p, int fClose, abctime Time )Pdr_ManPrintProgress48,1414
Vec_Int_t * Pdr_ManCountFlops( Pdr_Man_t * p, Vec_Ptr_t * vCubes )Pdr_ManCountFlops118,3698
int Pdr_ManFindInvariantStart( Pdr_Man_t * p )Pdr_ManFindInvariantStart148,4496
Vec_Ptr_t * Pdr_ManCollectCubes( Pdr_Man_t * p, int kStart )Pdr_ManCollectCubes172,5278
Vec_Int_t * Pdr_ManCountFlopsInv( Pdr_Man_t * p )Pdr_ManCountFlopsInv196,5871
int Pdr_ManCountVariables( Pdr_Man_t * p, int kStart )Pdr_ManCountVariables216,6411
void Pdr_ManPrintClauses( Pdr_Man_t * p, int kStart )Pdr_ManPrintClauses244,7138
void Pdr_SetPrintOne( Pdr_Set_t * p )Pdr_SetPrintOne272,7897
Aig_Man_t * Pdr_ManDupAigWithClauses( Aig_Man_t * p, Vec_Ptr_t * vCubes )Pdr_ManDupAigWithClauses292,8375
void Pdr_ManDumpAig( Aig_Man_t * p, Vec_Ptr_t * vCubes )Pdr_ManDumpAig333,9948
void Pdr_ManDumpClauses( Pdr_Man_t * p, char * pFileName, int fProved )Pdr_ManDumpClauses352,10470
Vec_Str_t * Pdr_ManDumpString( Pdr_Man_t * p )Pdr_ManDumpString435,13270
void Pdr_ManReportInvariant( Pdr_Man_t * p )Pdr_ManReportInvariant477,14416
void Pdr_ManVerifyInvariant( Pdr_Man_t * p )Pdr_ManVerifyInvariant500,15273
int Pdr_ManDeriveMarkNonInductive( Pdr_Man_t * p, Vec_Ptr_t * vCubes )Pdr_ManDeriveMarkNonInductive557,17160
Vec_Int_t * Pdr_ManDeriveInfinityClauses( Pdr_Man_t * p, int fReduce )Pdr_ManDeriveInfinityClauses595,18513
#define Pdr_ForEachCube(Pdr_ForEachCube639,19830
Vec_Int_t * Pdr_InvMap( Vec_Int_t * vCounts )Pdr_InvMap641,19945
Vec_Int_t * Pdr_InvCounts( Vec_Int_t * vInv )Pdr_InvCounts650,20211
int Pdr_InvUsedFlopNum( Vec_Int_t * vInv )Pdr_InvUsedFlopNum659,20550
Vec_Str_t * Pdr_InvPrintStr( Vec_Int_t * vInv, Vec_Int_t * vCounts )Pdr_InvPrintStr667,20765
void Pdr_InvPrint( Vec_Int_t * vInv, int fVerbose )Pdr_InvPrint693,21764
int Pdr_InvCheck_int( Gia_Man_t * p, Vec_Int_t * vInv, int fVerbose, sat_solver * pSat, int fSkip )Pdr_InvCheck_int706,22292
int Pdr_InvCheck( Gia_Man_t * p, Vec_Int_t * vInv, int fVerbose )Pdr_InvCheck789,25363
Vec_Int_t * Pdr_InvMinimize( Gia_Man_t * p, Vec_Int_t * vInv, int fVerbose )Pdr_InvMinimize801,25798
Vec_Int_t * Pdr_InvMinimizeLits( Gia_Man_t * p, Vec_Int_t * vInv, int fVerbose )Pdr_InvMinimizeLits922,30619

src/proof/pdr/pdrClass.c,376
Aig_Man_t * Pdr_ManRehashWithMap( Aig_Man_t * pAig, Vec_Int_t * vMap )Pdr_ManRehashWithMap45,1356
Vec_Int_t * Pdr_ManCreateMap( Aig_Man_t * p )Pdr_ManCreateMap91,2923
int Pdr_ManCountMap( Vec_Int_t * vMap )Pdr_ManCountMap127,3894
void Pdr_ManPrintMap( Vec_Int_t * vMap )Pdr_ManPrintMap147,4340
void Pdr_ManEquivClasses( Aig_Man_t * pAig )Pdr_ManEquivClasses188,5442

src/proof/pdr/pdrCore.c,1329
void Pdr_ManSetDefaultParams( Pdr_Par_t * pPars )Pdr_ManSetDefaultParams50,1509
Pdr_Set_t * Pdr_ManReduceClause( Pdr_Man_t * p, int k, Pdr_Set_t * pCube )Pdr_ManReduceClause96,4034
int Pdr_ManPushClauses( Pdr_Man_t * p )Pdr_ManPushClauses149,5758
int Pdr_ManCheckContainment( Pdr_Man_t * p, int k, Pdr_Set_t * pSet )Pdr_ManCheckContainment255,9574
int * Pdr_ManSortByPriority( Pdr_Man_t * p, Pdr_Set_t * pCube )Pdr_ManSortByPriority279,10231
int ZPdr_ManSimpleMic( Pdr_Man_t * p, int k, Pdr_Set_t ** ppCube )ZPdr_ManSimpleMic318,11397
int ZPdr_ManDown( Pdr_Man_t * p, int k, Pdr_Set_t ** ppCube, Pdr_Set_t * pPred, Hash_Int_t * keep, Pdr_Set_t * pIndCube, int * added )ZPdr_ManDown374,12871
static inline int Vec_IntSelectSortPrioReverseLit( int * pArray, int nSize, Vec_Int_t * vPrios )Vec_IntSelectSortPrioReverseLit501,17183
int Pdr_ManGeneralize2( Pdr_Man_t * p, int k, Pdr_Set_t * pCube, Pdr_Set_t ** ppCubeMin )Pdr_ManGeneralize2526,17932
int Pdr_ManGeneralize( Pdr_Man_t * p, int k, Pdr_Set_t * pCube, Pdr_Set_t ** ppPred, Pdr_Set_t ** ppCubeMin )Pdr_ManGeneralize681,23931
int Pdr_ManBlockCube( Pdr_Man_t * p, Pdr_Set_t * pCube )Pdr_ManBlockCube894,31189
int Pdr_ManSolveInt( Pdr_Man_t * p )Pdr_ManSolveInt1040,36320
int Pdr_ManSolve( Aig_Man_t * pAig, Pdr_Par_t * pPars )Pdr_ManSolve1393,54080

src/proof/pdr/pdrSat.c,959
sat_solver * Pdr_ManCreateSolver( Pdr_Man_t * p, int k )Pdr_ManCreateSolver45,1260
sat_solver * Pdr_ManFetchSolver( Pdr_Man_t * p, int k )Pdr_ManFetchSolver77,2183
Vec_Int_t * Pdr_ManLitsToCube( Pdr_Man_t * p, int k, int * pArray, int nArray )Pdr_ManLitsToCube117,3430
Vec_Int_t * Pdr_ManCubeToLits( Pdr_Man_t * p, int k, Pdr_Set_t * pCube, int fCompl, int fNext )Pdr_ManCubeToLits144,4267
void Pdr_ManSetPropertyOutput( Pdr_Man_t * p, int k )Pdr_ManSetPropertyOutput179,5455
void Pdr_ManSolverAddClause( Pdr_Man_t * p, int k, Pdr_Set_t * pCube )Pdr_ManSolverAddClause213,6458
void Pdr_ManCollectValues( Pdr_Man_t * p, int k, Vec_Int_t * vObjIds, Vec_Int_t * vValues )Pdr_ManCollectValues236,7145
int Pdr_ManCheckCubeCs( Pdr_Man_t * p, int k, Pdr_Set_t * pCube )Pdr_ManCheckCubeCs262,7977
int Pdr_ManCheckCube( Pdr_Man_t * p, int k, Pdr_Set_t * pCube, Pdr_Set_t ** ppPred, int nConfLimit, int fTryConf, int fUseLit )Pdr_ManCheckCube290,8955

src/proof/pdr/pdrUtil.c,2308
Pdr_Set_t * Pdr_SetAlloc( int nSize )Pdr_SetAlloc46,1236
Pdr_Set_t * Pdr_SetCreate( Vec_Int_t * vLits, Vec_Int_t * vPiLits )Pdr_SetCreate65,1673
Pdr_Set_t * Pdr_SetCreateFrom( Pdr_Set_t * pSet, int iRemove )Pdr_SetCreateFrom98,2664
Pdr_Set_t * Pdr_SetCreateSubset( Pdr_Set_t * pSet, int * pLits, int nLits )Pdr_SetCreateSubset132,3550
Pdr_Set_t * Pdr_SetDup( Pdr_Set_t * pSet )Pdr_SetDup166,4517
Pdr_Set_t * Pdr_SetRef( Pdr_Set_t * p )Pdr_SetRef191,5114
void Pdr_SetDeref( Pdr_Set_t * p )Pdr_SetDeref208,5423
void Pdr_SetPrint( FILE * pFile, Pdr_Set_t * p, int nRegs, Vec_Int_t * vFlopCounts )Pdr_SetPrint225,5747
void ZPdr_SetPrint( Pdr_Set_t * p )ZPdr_SetPrint263,6689
Pdr_Set_t * ZPdr_SetIntersection( Pdr_Set_t * p1, Pdr_Set_t * p2, Hash_Int_t * keep )ZPdr_SetIntersection283,7104
void Pdr_SetPrintStr( Vec_Str_t * vStr, Pdr_Set_t * p, int nRegs, Vec_Int_t * vFlopCounts )Pdr_SetPrintStr342,8695
int Pdr_SetContains( Pdr_Set_t * pOld, Pdr_Set_t * pNew )Pdr_SetContains382,9779
int Pdr_SetContainsSimple( Pdr_Set_t * pOld, Pdr_Set_t * pNew )Pdr_SetContainsSimple420,10785
int Pdr_SetIsInit( Pdr_Set_t * pCube, int iRemove )Pdr_SetIsInit460,11810
int Pdr_SetCompare( Pdr_Set_t ** pp1, Pdr_Set_t ** pp2 )Pdr_SetCompare485,12344
Pdr_Obl_t * Pdr_OblStart( int k, int prio, Pdr_Set_t * pState, Pdr_Obl_t * pNext )Pdr_OblStart515,13036
Pdr_Obl_t * Pdr_OblRef( Pdr_Obl_t * p )Pdr_OblRef539,13559
void Pdr_OblDeref( Pdr_Obl_t * p )Pdr_OblDeref556,13868
int Pdr_QueueIsEmpty( Pdr_Man_t * p )Pdr_QueueIsEmpty578,14301
Pdr_Obl_t * Pdr_QueueHead( Pdr_Man_t * p )Pdr_QueueHead594,14608
Pdr_Obl_t * Pdr_QueuePop( Pdr_Man_t * p )Pdr_QueuePop610,14912
void Pdr_QueueClean( Pdr_Man_t * p )Pdr_QueueClean632,15372
void Pdr_QueuePush( Pdr_Man_t * p, Pdr_Obl_t * pObl )Pdr_QueuePush651,15760
void Pdr_QueuePrint( Pdr_Man_t * p )Pdr_QueuePrint681,16560
void Pdr_QueueStop( Pdr_Man_t * p )Pdr_QueueStop699,16994
#define PDR_VAL0 PDR_VAL0712,17209
#define PDR_VAL1 PDR_VAL1713,17229
#define PDR_VALX PDR_VALX714,17249
static inline int Pdr_ObjSatValue( Aig_Man_t * pAig, Aig_Obj_t * pNode, int fCompl )Pdr_ObjSatValue727,17546
int Pdr_NtkFindSatAssign_rec( Aig_Man_t * pAig, Aig_Obj_t * pNode, int Value, Pdr_Set_t * pCube, int Heur )Pdr_NtkFindSatAssign_rec745,18050

src/proof/pdr/pdr.c,0

src/proof/pdr/pdr.h,3620
#define ABC__sat__pdr__pdr_hABC__sat__pdr__pdr_h22,539
typedef struct Pdr_Par_t_ Pdr_Par_t;Pdr_Par_t40,1259
struct Pdr_Par_t_Pdr_Par_t_41,1296
    int nRecycle;         // limit on vars for recyclingnRecycle44,1392
    int nFrameMax;        // limit on frame countnFrameMax45,1449
    int nConfLimit;       // limit on SAT solver conflictsnConfLimit46,1499
    int nConfGenLimit;    // limit on SAT solver conflicts during generalizationnConfGenLimit47,1558
    int nRestLimit;       // limit on the number of proof-obligationsnRestLimit48,1639
    int nTimeOut;         // timeout in secondsnTimeOut49,1709
    int nTimeOutGap;      // approximate timeout in seconds since the last changenTimeOutGap50,1757
    int nTimeOutOne;      // approximate timeout in seconds per one outputnTimeOutOne51,1839
    int nRandomSeed;      // value to seed the SAT solver withnRandomSeed52,1914
    int fTwoRounds;       // use two rounds for generalizationfTwoRounds53,1977
    int fMonoCnf;         // monolythic CNFfMonoCnf54,2040
    int fNewXSim;         // updated X-valued simulationfNewXSim55,2084
    int fFlopPrio;        // use structural flop prioritiesfFlopPrio56,2141
    int fFlopOrder;       // order flops for 'analyze_final' during generalizationfFlopOrder57,2201
    int fDumpInv;         // dump inductive invariantfDumpInv58,2284
    int fUseSupp;         // use support in the invariantfUseSupp59,2338
    int fShortest;        // forces bug traces to be shortestfShortest60,2396
    int fShiftStart;      // allows clause pushing to start from an intermediate framefShiftStart61,2458
    int fReuseProofOblig; // reuses proof-obligationgs in the last timeframefReuseProofOblig62,2545
    int fSimpleGeneral;   // simplified generalizationfSimpleGeneral63,2622
    int fSkipGeneral;     // skips expensive generalization stepfSkipGeneral64,2677
    int fSkipDown;        // skips the application of downfSkipDown65,2742
    int fCtgs;            // handle CTGs in downfCtgs66,2801
    int fUseAbs;          // use abstraction fUseAbs67,2850
    int fUseSimpleRef;    // simplified CEX refinementfUseSimpleRef68,2896
    int fVerbose;         // verbose output`fVerbose69,2951
    int fVeryVerbose;     // very verbose outputfVeryVerbose70,2996
    int fNotVerbose;      // not printing line by line progressfNotVerbose71,3045
    int fSilent;          // totally silent executionfSilent72,3109
    int fSolveAll;        // do not stop when found a SAT outputfSolveAll73,3163
    int fStoreCex;        // enable storing counter-examples in MO modefStoreCex74,3228
    int fUseBridge;       // use bridge interfacefUseBridge75,3300
    int fUsePropOut;      // use property outputfUsePropOut76,3350
    int nFailOuts;        // the number of failed outputsnFailOuts77,3399
    int nDropOuts;        // the number of timed out outputsnDropOuts78,3457
    int nProveOuts;       // the number of proved outputsnProveOuts79,3518
    int iFrame;           // explored up to this frameiFrame80,3576
    int RunId;            // PDR id in this run RunId81,3631
    int(*pFuncStop)(int); // callback to terminatepFuncStop82,3680
    int(*pFuncOnFail)(int,Abc_Cex_t*); // called for a failed output in MO modepFuncOnFail83,3731
    abctime timeLastSolved; // the time when the last output was solvedtimeLastSolved84,3811
    Vec_Int_t * vOutMap;  // in the multi-output mode, contains status for each PO (0 = sat; 1 = unsat; negative = undecided)vOutMap85,3883
    char * pInvFileName;  // invariable file namepInvFileName86,4009

src/proof/pdr/pdrTsim2.c,2562
struct Txs_Man_t_Txs_Man_t_30,818
    Gia_Man_t * pGia;      // user's AIGpGia32,838
    Vec_Int_t * vPrio;     // priority of each flopvPrio33,879
    Vec_Int_t * vCiObjs;   // cone leaves (CI obj IDs)vCiObjs34,931
    Vec_Int_t * vCoObjs;   // cone roots (CO obj IDs)vCoObjs35,986
    Vec_Int_t * vCiVals;   // cone leaf values (0/1 CI values)vCiVals36,1040
    Vec_Int_t * vCoVals;   // cone root values (0/1 CO values)vCoVals37,1103
    Vec_Int_t * vNodes;    // cone nodes (node obj IDs)vNodes38,1166
    Vec_Int_t * vTemp;     // cone nodes (node obj IDs)vTemp39,1222
    Vec_Int_t * vPiLits;   // resulting array of PI literalsvPiLits40,1278
    Vec_Int_t * vFfLits;   // resulting array of flop literalsvFfLits41,1339
    Pdr_Man_t * pMan;      // calling managerpMan42,1402
Txs_Man_t * Txs_ManStart( Pdr_Man_t * pMan, Aig_Man_t * pAig, Vec_Int_t * vPrio )Txs_ManStart60,1951
void Txs_ManStop( Txs_Man_t * p )Txs_ManStop82,3053
void Txs_ManCollectCone_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vCiObjs, Vec_Int_t * vNodes )Txs_ManCollectCone_rec108,3734
void Txs_ManCollectCone( Gia_Man_t * p, Vec_Int_t * vCoObjs, Vec_Int_t * vCiObjs, Vec_Int_t * vNodes )Txs_ManCollectCone123,4237
void Txs_ManForwardPass( Gia_Man_t * p, Txs_ManForwardPass145,4948
static inline int Txs_ObjIsJust( Gia_Man_t * p, Gia_Obj_t * pObj )Txs_ObjIsJust199,6811
void Txs_ManBackwardPass( Gia_Man_t * p, Vec_Int_t * vCiObjs, Vec_Int_t * vNodes, Vec_Int_t * vPiLits, Vec_Int_t * vFfLits )Txs_ManBackwardPass217,7523
void Txs_ManSelectJustPath( Gia_Man_t * p, Vec_Int_t * vNodes, Vec_Int_t * vCoObjs, Vec_Int_t * vRes )Txs_ManSelectJustPath286,9747
void Txs_ManCollectJustPis( Gia_Man_t * p, Vec_Int_t * vCiObjs, Vec_Int_t * vPiLits )Txs_ManCollectJustPis324,10900
void Txs_ManInitPrio( Gia_Man_t * p, Vec_Int_t * vCiObjs )Txs_ManInitPrio332,11232
void Txs_ManPropagatePrio( Gia_Man_t * p, Vec_Int_t * vNodes, Vec_Int_t * vPrio )Txs_ManPropagatePrio339,11510
int Txs_ManFindMinId( Gia_Man_t * p, Vec_Int_t * vCoObjs, Vec_Int_t * vPrio )Txs_ManFindMinId380,13087
void Txs_ManFindCiReduction( Gia_Man_t * p, Txs_ManFindCiReduction391,13520
void Txs_ManPrintFlopLits( Vec_Int_t * vFfLits, Vec_Int_t * vPrio )Txs_ManPrintFlopLits416,14490
void Txs_ManVerify( Gia_Man_t * p, Vec_Int_t * vCiObjs, Vec_Int_t * vNodes, Vec_Int_t * vPiLits, Vec_Int_t * vFfLits, Vec_Int_t * vCoObjs, Vec_Int_t * vCoVals )Txs_ManVerify436,15068
Pdr_Set_t * Txs_ManTernarySim( Txs_Man_t * p, int k, Pdr_Set_t * pCube )Txs_ManTernarySim490,17017

src/proof/pdr/pdrTsim3.c,1473
struct Txs3_Man_t_Txs3_Man_t_30,820
    Gia_Man_t * pGia;      // user's AIGpGia32,841
    Vec_Int_t * vPrio;     // priority of each flopvPrio33,882
    Vec_Int_t * vCiObjs;   // cone leaves (CI obj IDs)vCiObjs34,934
    Vec_Int_t * vFosPre;   // cone leaves (CI obj IDs)vFosPre35,989
    Vec_Int_t * vFosAbs;   // cone leaves (CI obj IDs)vFosAbs36,1044
    Vec_Int_t * vCoObjs;   // cone roots (CO obj IDs)vCoObjs37,1099
    Vec_Int_t * vCiVals;   // cone leaf values (0/1 CI values)vCiVals38,1153
    Vec_Int_t * vCoVals;   // cone root values (0/1 CO values)vCoVals39,1216
    Vec_Int_t * vNodes;    // cone nodes (node obj IDs)vNodes40,1279
    Vec_Int_t * vTemp;     // cone nodes (node obj IDs)vTemp41,1335
    Vec_Int_t * vPiLits;   // resulting array of PI literalsvPiLits42,1391
    Vec_Int_t * vFfLits;   // resulting array of flop literalsvFfLits43,1452
    Pdr_Man_t * pMan;      // calling managerpMan44,1515
    int         nPiLits;   // the number of PI literalsnPiLits45,1561
Txs3_Man_t * Txs3_ManStart( Pdr_Man_t * pMan, Aig_Man_t * pAig, Vec_Int_t * vPrio )Txs3_ManStart63,2120
void Txs3_ManStop( Txs3_Man_t * p )Txs3_ManStop87,3354
void Txs3_ManCollectCone_rec( Txs3_Man_t * p, Gia_Obj_t * pObj )Txs3_ManCollectCone_rec115,4099
void Txs3_ManCollectCone( Txs3_Man_t * p, int fVerbose )Txs3_ManCollectCone140,4938
Pdr_Set_t * Txs3_ManTernarySim( Txs3_Man_t * p, int k, Pdr_Set_t * pCube )Txs3_ManTernarySim188,7005

src/proof/ssc/sscSat.c,1204
static inline int Ssc_ObjSatLit( Ssc_Man_t * p, int Lit ) { return Abc_Var2Lit( Ssc_ObjSatVar(p, Abc_Lit2Var(Lit)), Abc_LitIsCompl(Lit) ); }Ssc_ObjSatLit32,827
static void Gia_ManAddClausesMux( Ssc_Man_t * p, Gia_Obj_t * pNode )Gia_ManAddClausesMux49,1451
static void Gia_ManAddClausesSuper( Ssc_Man_t * p, Gia_Obj_t * pNode, Vec_Int_t * vSuper )Gia_ManAddClausesSuper128,3936
static void Ssc_ManCollectSuper_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Ssc_ManCollectSuper_rec165,5129
static void Ssc_ManCollectSuper( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSuper )Ssc_ManCollectSuper176,5561
static void Ssc_ManCnfAddToFrontier( Ssc_Man_t * p, int Id, Vec_Int_t * vFront )Ssc_ManCnfAddToFrontier196,6134
static void Ssc_ManCnfNodeAddToSolver( Ssc_Man_t * p, int NodeId )Ssc_ManCnfNodeAddToSolver208,6517
void Ssc_ManStartSolver( Ssc_Man_t * p )Ssc_ManStartSolver261,8386
void Ssc_ManCollectSatPattern( Ssc_Man_t * p, Vec_Int_t * vPattern )Ssc_ManCollectSatPattern315,10126
Vec_Int_t * Ssc_ManFindPivotSat( Ssc_Man_t * p )Ssc_ManFindPivotSat323,10415
int Ssc_ManCheckEquivalence( Ssc_Man_t * p, int iRepr, int iNode, int fCompl )Ssc_ManCheckEquivalence348,11082

src/proof/ssc/sscCore.c,1088
void Ssc_ManSetDefaultParams( Ssc_Pars_t * p )Ssc_ManSetDefaultParams46,1301
void Ssc_ManStop( Ssc_Man_t * p )Ssc_ManStop67,1949
Ssc_Man_t * Ssc_ManStart( Gia_Man_t * pAig, Gia_Man_t * pCare, Ssc_Pars_t * pPars )Ssc_ManStart80,2319
void Ssc_ManPrintStats( Ssc_Man_t * p )Ssc_ManPrintStats132,4068
int Ssc_GiaSimulatePatternFraig_rec( Ssc_Man_t * p, int iFraigObj )Ssc_GiaSimulatePatternFraig_rec164,5784
int Ssc_GiaSimulatePattern_rec( Ssc_Man_t * p, Gia_Obj_t * pObj )Ssc_GiaSimulatePattern_rec177,6368
int Ssc_GiaResimulateOneClass( Ssc_Man_t * p, int iRepr, int iObj )Ssc_GiaResimulateOneClass196,7124
int Ssc_PerformVerification( Gia_Man_t * p0, Gia_Man_t * p1, Gia_Man_t * pC )Ssc_PerformVerification223,8061
Gia_Man_t * Ssc_PerformSweepingInt( Gia_Man_t * pAig, Gia_Man_t * pCare, Ssc_Pars_t * pPars )Ssc_PerformSweepingInt264,9370
Gia_Man_t * Ssc_PerformSweeping( Gia_Man_t * pAig, Gia_Man_t * pCare, Ssc_Pars_t * pPars )Ssc_PerformSweeping413,14947
Gia_Man_t * Ssc_PerformSweepingConstr( Gia_Man_t * p, Ssc_Pars_t * pPars )Ssc_PerformSweepingConstr420,15217

src/proof/ssc/sscUtil.c,157
Gia_Man_t * Gia_ManDropContained( Gia_Man_t * p )Gia_ManDropContained47,1286
Gia_Man_t * Gia_ManOptimizeRing( Gia_Man_t * p )Gia_ManOptimizeRing126,3592

src/proof/ssc/sscClass.c,1033
static inline int Ssc_GiaSimHashKey( Gia_Man_t * p, int iObj, int nTableSize )Ssc_GiaSimHashKey45,1277
static inline int Ssc_GiaSimIsConst0( Gia_Man_t * p, int iObj0 )Ssc_GiaSimIsConst073,2154
static inline int Ssc_GiaSimAreEqual( Gia_Man_t * p, int iObj0, int iObj1 )Ssc_GiaSimAreEqual91,2560
static inline int Ssc_GiaSimAreEqualBit( Gia_Man_t * p, int iObj0, int iObj1 )Ssc_GiaSimAreEqualBit110,3068
void Ssc_GiaSimClassCreate( Gia_Man_t * p, Vec_Int_t * vClass )Ssc_GiaSimClassCreate128,3591
int Ssc_GiaSimClassRefineOneBit( Gia_Man_t * p, int i )Ssc_GiaSimClassRefineOneBit162,4456
int Ssc_GiaSimClassRefineOne( Gia_Man_t * p, int i )Ssc_GiaSimClassRefineOne197,5374
void Ssc_GiaSimProcessRefined( Gia_Man_t * p, Vec_Int_t * vRefined )Ssc_GiaSimProcessRefined221,6127
void Ssc_GiaClassesInit( Gia_Man_t * p )Ssc_GiaClassesInit265,7481
int Ssc_GiaClassesRefine( Gia_Man_t * p )Ssc_GiaClassesRefine279,7960
void Ssc_GiaClassesCheckPairs( Gia_Man_t * p, Vec_Int_t * vDisPairs )Ssc_GiaClassesCheckPairs309,8817

src/proof/ssc/sscInt.h,3410
#define ABC__aig__ssc__sscInt_hABC__aig__ssc__sscInt_h22,551
typedef struct Ssc_Man_t_ Ssc_Man_t;Ssc_Man_t46,1370
struct Ssc_Man_t_Ssc_Man_t_47,1407
    Ssc_Pars_t *     pPars;          // choicing parameterspPars50,1444
    Gia_Man_t *      pAig;           // subject AIGpAig51,1504
    Gia_Man_t *      pCare;          // care set AIGpCare52,1556
    Gia_Man_t *      pFraig;         // resulting AIGpFraig54,1630
    sat_solver *     pSat;           // recyclable SAT solverpSat55,1684
    Vec_Int_t *      vId2Var;        // mapping of each node into its SAT varvId2Var56,1746
    Vec_Int_t *      vVar2Id;        // mapping of each SAT var into its nodevVar2Id57,1824
    Vec_Int_t *      vPivot;         // one SAT patternvPivot58,1902
    int              nSatVarsPivot;  // the number of variables for constraintsnSatVarsPivot59,1958
    int              nSatVars;       // the current number of variables  nSatVars60,2038
    Vec_Int_t *      vFront;         // supergate faninsvFront62,2137
    Vec_Int_t *      vFanins;        // supergate faninsvFanins63,2194
    Vec_Int_t *      vPattern;       // counter-examplevPattern64,2251
    Vec_Int_t *      vDisPairs;      // disproved pairsvDisPairs65,2307
    int              nSimRounds;     // the number of simulation roundsnSimRounds67,2391
    int              nRecycles;      // the number of times SAT solver was recyclednRecycles68,2463
    int              nCallsSince;    // the number of calls since the last recyclenCallsSince69,2547
    int              nSatCalls;      // the number of SAT callsnSatCalls70,2630
    int              nSatCallsUnsat; // the number of unsat SAT callsnSatCallsUnsat71,2694
    int              nSatCallsSat;   // the number of sat SAT callsnSatCallsSat72,2764
    int              nSatCallsUndec; // the number of undec SAT callsnSatCallsUndec73,2832
    abctime          timeSimInit;    // simulation and class computationtimeSimInit75,2923
    abctime          timeSimSat;     // simulation of the counter-examplestimeSimSat76,2996
    abctime          timeCnfGen;     // generation of CNFtimeCnfGen77,3071
    abctime          timeSat;        // total SAT timetimeSat78,3129
    abctime          timeSatSat;     // sattimeSatSat79,3184
    abctime          timeSatUnsat;   // unsattimeSatUnsat80,3228
    abctime          timeSatUndec;   // undecidedtimeSatUndec81,3274
    abctime          timeOther;      // other runtimetimeOther82,3324
    abctime          timeTotal;      // total runtimetimeTotal83,3378
static inline int    Ssc_ObjSatVar( Ssc_Man_t * p, int iObj )             { return Vec_IntEntry(p->vId2Var, iObj);     }Ssc_ObjSatVar90,3656
static inline void   Ssc_ObjSetSatVar( Ssc_Man_t * p, int iObj, int Num ) { Vec_IntWriteEntry(p->vId2Var, iObj, Num);  Vec_IntWriteEntry(p->vVar2Id, Num, iObj);  }Ssc_ObjSetSatVar91,3777
static inline void   Ssc_ObjCleanSatVar( Ssc_Man_t * p, int Num )         { Vec_IntWriteEntry(p->vId2Var, Vec_IntEntry(p->vVar2Id, Num), Num);  Vec_IntWriteEntry(p->vVar2Id, Num, 0);                        }Ssc_ObjCleanSatVar92,3941
static inline int    Ssc_ObjFraig( Ssc_Man_t * p, Gia_Obj_t * pObj )      { return pObj->Value;           }Ssc_ObjFraig94,4150
static inline void   Ssc_ObjSetFraig( Gia_Obj_t * pObj, int iNode )       { pObj->Value = iNode;          }Ssc_ObjSetFraig95,4258

src/proof/ssc/sscSim.c,2276
static inline word Ssc_Random()            { return ((word)Gia_ManRandom(0) << 32) | ((word)Gia_ManRandom(0) << 0);              }Ssc_Random30,781
static inline word Ssc_Random1( int Bit )  { return ((word)Gia_ManRandom(0) << 32) | ((word)Gia_ManRandom(0) << 1) | (word)Bit;  }Ssc_Random131,912
static inline word Ssc_Random2()           { return ((word)Gia_ManRandom(0) << 32) | ((word)Gia_ManRandom(0) << 2) | (word)2;    }Ssc_Random232,1043
static inline void Ssc_SimAnd( word * pSim, word * pSim0, word * pSim1, int nWords, int fComp0, int fComp1 )Ssc_SimAnd34,1175
static inline void Ssc_SimDup( word * pSim, word * pSim0, int nWords, int fComp0 )Ssc_SimDup43,1673
static inline void Ssc_SimConst( word * pSim, int nWords, int fComp0 )Ssc_SimConst50,1914
static inline void Ssc_SimOr( word * pSim, word * pSim0, int nWords, int fComp0 )Ssc_SimOr57,2134
static inline int Ssc_SimFindBitWord( word t )Ssc_SimFindBitWord64,2376
static inline int Ssc_SimFindBit( word * pSim, int nWords )Ssc_SimFindBit76,2855
static inline int Ssc_SimCountBitsWord( word x )Ssc_SimCountBitsWord85,3059
static inline int Ssc_SimCountBits( word * pSim, int nWords )Ssc_SimCountBits95,3422
void Vec_WrdDoubleSimInfo( Vec_Wrd_t * p, int nObjs )Vec_WrdDoubleSimInfo119,4073
void Ssc_GiaResetPiPattern( Gia_Man_t * p, int nWords )Ssc_GiaResetPiPattern141,4719
void Ssc_GiaSavePiPattern( Gia_Man_t * p, Vec_Int_t * vPat )Ssc_GiaSavePiPattern149,4973
void Ssc_GiaRandomPiPattern( Gia_Man_t * p, int nWords, Vec_Int_t * vPivot )Ssc_GiaRandomPiPattern163,5508
void Ssc_GiaPrintPiPatterns( Gia_Man_t * p )Ssc_GiaPrintPiPatterns178,6038
int Ssc_GiaTransferPiPattern( Gia_Man_t * pAig, Gia_Man_t * pCare, Vec_Int_t * vPivot )Ssc_GiaTransferPiPattern201,6612
void Ssc_GiaResetSimInfo( Gia_Man_t * p )Ssc_GiaResetSimInfo240,7749
void Ssc_GiaSimRound( Gia_Man_t * p )Ssc_GiaSimRound247,7992
word * Ssc_GiaGetCareMask( Gia_Man_t * p )Ssc_GiaGetCareMask299,9614
Vec_Int_t * Ssc_GiaGetOneSim( Gia_Man_t * p )Ssc_GiaGetOneSim308,9895
Vec_Int_t * Ssc_GiaFindPivotSim( Gia_Man_t * p )Ssc_GiaFindPivotSim323,10363
int Ssc_GiaCountCaresSim( Gia_Man_t * p )Ssc_GiaCountCaresSim343,10795
int Ssc_GiaEstimateCare( Gia_Man_t * p, int nWords )Ssc_GiaEstimateCare351,11013

src/proof/ssc/ssc.h,765
#define ABC__aig__ssc__ssc_hABC__aig__ssc__ssc_h22,538
typedef struct Ssc_Pars_t_ Ssc_Pars_t;Ssc_Pars_t43,1283
struct Ssc_Pars_t_Ssc_Pars_t_44,1322
    int              nWords;        // the number of simulation wordsnWords46,1343
    int              nBTLimit;      // conflict limit at a nodenBTLimit47,1413
    int              nSatVarMax;    // the max number of SAT variablesnSatVarMax48,1477
    int              nCallsRecycle; // calls to perform before recycling SAT solvernCallsRecycle49,1548
    int              fAppend;       // append constraints to the resulting AIGfAppend50,1632
    int              fVerbose;      // verbose statsfVerbose51,1711
    int              fVerify;       // enable internal verificationfVerify52,1764

src/proof/acec/acecBo.c,616
int Acec_DetectBoothXorMux( Gia_Man_t * p, Gia_Obj_t * pMux, Gia_Obj_t * pXor, int pIns[3] )Acec_DetectBoothXorMux47,1286
int Acec_DetectBoothXorFanin( Gia_Man_t * p, Gia_Obj_t * pObj, int pIns[5] )Acec_DetectBoothXorFanin77,2446
int Acec_DetectBoothOne( Gia_Man_t * p, Gia_Obj_t * pObj, int pIns[5] )Acec_DetectBoothOne115,3773
int Acec_DetectBoothTwoXor( Gia_Man_t * p, Gia_Obj_t * pObj, int pIns[5] )Acec_DetectBoothTwoXor141,4482
int Acec_DetectBoothTwo( Gia_Man_t * p, Gia_Obj_t * pObj, int pIns[5] )Acec_DetectBoothTwo166,5258
void Acec_DetectBoothTest( Gia_Man_t * p )Acec_DetectBoothTest197,5996

src/proof/acec/acecStruct.c,719
Vec_Int_t * Acec_StructDetectXorRoots( Gia_Man_t * p )Acec_StructDetectXorRoots47,1294
Vec_Int_t * Acec_StructAssignRanks( Gia_Man_t * p, Vec_Int_t * vXorRoots )Acec_StructAssignRanks81,2338
Vec_Wec_t * Acec_FindTreeLeaves( Gia_Man_t * p, Vec_Int_t * vXorRoots, Vec_Int_t * vRanks )Acec_FindTreeLeaves133,4146
Vec_Int_t * Acec_FindShadows( Gia_Man_t * p, Vec_Int_t * vRanks )Acec_FindShadows176,5479
int Acec_CollectSupp_rec( Gia_Man_t * p, int iNode, int Rank, Vec_Int_t * vRanks )Acec_CollectSupp_rec205,6339
Vec_Wec_t * Acec_FindNexts( Gia_Man_t * p, Vec_Int_t * vRanks, Vec_Int_t * vShadows, Vec_Wec_t * vTreeLeaves )Acec_FindNexts220,6885
void Acec_StructTest( Gia_Man_t * p )Acec_StructTest261,8360

src/proof/acec/acecNorm.c,685
void Acec_InsertHadd( Gia_Man_t * pNew, int In[2], int Out[2] )Acec_InsertHadd45,1240
void Acec_InsertFadd( Gia_Man_t * pNew, int In[3], int Out[2] )Acec_InsertFadd53,1540
Vec_Int_t * Acec_InsertTree( Gia_Man_t * pNew, Vec_Wec_t * vLeafMap )Acec_InsertTree63,1842
int Acec_InsertBox_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Acec_InsertBox_rec118,3473
Vec_Int_t * Acec_BuildTree( Gia_Man_t * pNew, Gia_Man_t * p, Vec_Wec_t * vLeafLits, Vec_Int_t * vRootLits )Acec_BuildTree127,3855
Gia_Man_t * Acec_InsertBox( Acec_Box_t * pBox, int fAll )Acec_InsertBox156,4955
Gia_Man_t * Acec_Normalize( Gia_Man_t * pGia, int fBooth, int fVerbose )Acec_Normalize210,6749

src/proof/acec/acecUtil.c,387
void Gia_PolynCollectXors_rec( Gia_Man_t * pGia, int iObj, Vec_Int_t * vXors )Gia_PolynCollectXors_rec45,1233
Vec_Int_t * Gia_PolynCollectLastXor( Gia_Man_t * pGia, int fVerbose )Gia_PolynCollectLastXor57,1757
void Gia_PolynAnalyzeXors( Gia_Man_t * pGia, int fVerbose )Gia_PolynAnalyzeXors69,2192
Gia_Man_t * Gia_ManDupTopMostRange( Gia_Man_t * p )Gia_ManDupTopMostRange104,3121

src/proof/acec/acecInt.h,1200
#define ABC__proof__acec__acec__int_hABC__proof__acec__acec__int_h22,550
typedef struct Acec_Box_t_ Acec_Box_t;Acec_Box_t40,1105
struct Acec_Box_t_Acec_Box_t_41,1144
    Gia_Man_t *    pGia;      // AIG managerpGia43,1165
    Vec_Wec_t *    vAdds;     // adders by rankvAdds44,1210
    Vec_Wec_t *    vLeafLits; // leaf literals by rankvLeafLits45,1258
    Vec_Wec_t *    vRootLits; // root literals by rankvRootLits46,1313
    Vec_Wec_t *    vShared;   // shared leavesvShared47,1368
    Vec_Wec_t *    vUnique;   // unique leavesvUnique48,1415
static inline int Acec_SignBit( Vec_Int_t * vAdds, int iBox, int b )  { return (Vec_IntEntry(vAdds, 6*iBox+5) >> b)      & 1; }Acec_SignBit59,1906
static inline int Acec_SignBit2( Vec_Int_t * vAdds, int iBox, int b ) { return (Vec_IntEntry(vAdds, 6*iBox+5) >> (16+b)) & 1; }Acec_SignBit260,2034
static inline void Acec_SignSetBit( Vec_Int_t * vAdds, int iBox, int b, int v )  { if ( v ) *Vec_IntEntryP(vAdds, 6*iBox+5) |= (1 << b);      }Acec_SignSetBit62,2163
static inline void Acec_SignSetBit2( Vec_Int_t * vAdds, int iBox, int b, int v ) { if ( v ) *Vec_IntEntryP(vAdds, 6*iBox+5) |= (1 << (16+b)); }Acec_SignSetBit263,2307

src/proof/acec/acecPa.c,896
int Pas_ManVerifyPhaseOne_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Pas_ManVerifyPhaseOne_rec47,1286
void Pas_ManVerifyPhaseOne( Gia_Man_t * p, Vec_Int_t * vAdds, int iBox, Vec_Bit_t * vPhase )Pas_ManVerifyPhaseOne61,1855
void Pas_ManVerifyPhase( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vOrder, Vec_Bit_t * vPhase )Pas_ManVerifyPhase104,3254
void Pas_ManPhase_rec( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vMap, Gia_Obj_t * pObj, int fPhase, Vec_Bit_t * vPhase, Vec_Bit_t * vConstPhase )Pas_ManPhase_rec122,3710
Vec_Bit_t * Pas_ManPhase( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vMap, Vec_Int_t * vRoots, Vec_Bit_t ** pvConstPhase )Pas_ManPhase153,4902
int Pas_ManComputeCuts( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vOrder, Vec_Int_t * vIns, Vec_Int_t * vOuts )Pas_ManComputeCuts176,5632
void Pas_ManComputeCutsTest( Gia_Man_t * p )Pas_ManComputeCutsTest249,8001

src/proof/acec/acec.h,957
#define ABC__proof__acec__acec_hABC__proof__acec__acec_h22,539
typedef struct Acec_ParCec_t_ Acec_ParCec_t;Acec_ParCec_t42,1314
struct Acec_ParCec_t_Acec_ParCec_t_43,1359
    int              nBTLimit;      // conflict limit at a nodenBTLimit45,1383
    int              TimeLimit;     // the runtime limit in secondsTimeLimit46,1447
    int              fMiter;        // input circuit is a miterfMiter47,1515
    int              fDualOutput;   // dual-output miterfDualOutput48,1579
    int              fTwoOutput;    // two-output miterfTwoOutput49,1636
    int              fBooth;        // expecting Booth multiplierfBooth50,1692
    int              fSilent;       // print no messagesfSilent51,1758
    int              fVeryVerbose;  // verbose statsfVeryVerbose52,1815
    int              fVerbose;      // verbose statsfVerbose53,1868
    int              iOutFail;      // the number of failed outputiOutFail54,1921

src/proof/acec/acecMult.c,1301
unsigned s_Classes4a[96] = {s_Classes4a32,835
unsigned s_Classes4b[384] = {s_Classes4b43,1667
unsigned s_Classes4c[768] = {s_Classes4c78,4900
word Extra_TruthCanonNPN3( word uTruth, int nVars, Vec_Wrd_t * vRes )Extra_TruthCanonNPN3161,11842
void Acec_MultFuncTest6()Acec_MultFuncTest6194,12854
unsigned Extra_TruthCanonNPN2( unsigned uTruth, int nVars, Vec_Int_t * vRes )Extra_TruthCanonNPN2217,13468
void Acec_MultFuncTest5()Acec_MultFuncTest5266,14922
void Acec_MultFuncTest4()Acec_MultFuncTest4289,15519
Vec_Int_t * Acec_MultCollectInputs( Vec_Int_t * vPairs, Vec_Int_t * vRanks, int iObj )Acec_MultCollectInputs329,16504
Vec_Int_t * Acec_MultDetectInputs1( Gia_Man_t * p, Vec_Wec_t * vLeafLits, Vec_Wec_t * vRootLits )Acec_MultDetectInputs1343,17061
Vec_Int_t * Acec_MultDetectInputs( Gia_Man_t * p, Vec_Wec_t * vLeafLits, Vec_Wec_t * vRootLits )Acec_MultDetectInputs431,20302
Vec_Bit_t * Acec_MultMarkPPs( Gia_Man_t * p )Acec_MultMarkPPs509,23096
void Acec_MultFindPPs_rec( Gia_Man_t * p, int iObj, Vec_Int_t * vBold )Acec_MultFindPPs_rec575,25097
Vec_Int_t * Acec_MultFindPPs( Gia_Man_t * p )Acec_MultFindPPs588,25504
Vec_Bit_t * Acec_BoothFindPPG( Gia_Man_t * p )Acec_BoothFindPPG656,27828
void Acec_MultFindPPsTest( Gia_Man_t * p )Acec_MultFindPPsTest666,28138

src/proof/acec/acecCo.c,1991
void Gia_PolynCoreNonXors_rec( Gia_Man_t * pGia, Gia_Obj_t * pObj, Vec_Int_t * vXorPairs )Gia_PolynCoreNonXors_rec45,1278
Vec_Int_t * Gia_PolynAddHaRoots( Gia_Man_t * pGia )Gia_PolynAddHaRoots57,1880
Vec_Wec_t * Gia_PolynComputeMap( Vec_Int_t * vAdds, int nObjs )Gia_PolynComputeMap93,3035
Vec_Int_t * Gia_PolynCoreOrder_int( Gia_Man_t * pGia, Vec_Int_t * vAdds, Vec_Wec_t * vMap, Vec_Int_t * vRoots, Vec_Int_t ** pvIns )Gia_PolynCoreOrder_int108,3564
Vec_Int_t * Gia_PolynCoreOrder( Gia_Man_t * pGia, Vec_Int_t * vAdds, Vec_Int_t * vAddCos, Vec_Int_t ** pvIns, Vec_Int_t ** pvOuts )Gia_PolynCoreOrder163,5698
void Gia_PolyCollectRoots_rec( Vec_Int_t * vAdds, Vec_Wec_t * vMap, Vec_Bit_t * vMarks, int iBox, Vec_Int_t * vRoots )Gia_PolyCollectRoots_rec198,6805
void Gia_PolyCollectRoots( Vec_Int_t * vAdds, Vec_Wec_t * vMap, Vec_Bit_t * vMarks, int iBox, Vec_Int_t * vRoots )Gia_PolyCollectRoots215,7455
Vec_Wec_t * Gia_PolynCoreOrderArray( Gia_Man_t * pGia, Vec_Int_t * vAdds, Vec_Int_t * vRootBoxes )Gia_PolynCoreOrderArray222,7785
void Gia_PolynCoreCollect_rec( Gia_Man_t * pGia, int iObj, Vec_Int_t * vNodes, Vec_Bit_t * vVisited )Gia_PolynCoreCollect_rec255,8911
Vec_Int_t * Gia_PolynCoreCollect( Gia_Man_t * pGia, Vec_Int_t * vAdds, Vec_Int_t * vOrder )Gia_PolynCoreCollect264,9356
void Gia_PolynCorePrintCones( Gia_Man_t * pGia, Vec_Int_t * vLeaves, int fVerbose )Gia_PolynCorePrintCones299,10558
int Gia_PolynCoreDupTreePlus_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj )Gia_PolynCoreDupTreePlus_rec335,11609
Gia_Man_t * Gia_PolynCoreDupTree( Gia_Man_t * p, Vec_Int_t * vAddCos, Vec_Int_t * vLeaves, Vec_Int_t * vNodes, int fAddCones )Gia_PolynCoreDupTree344,12019
Gia_Man_t * Gia_PolynCoreDetectTest_int( Gia_Man_t * pGia, Vec_Int_t * vAddCos, int fAddCones, int fVerbose )Gia_PolynCoreDetectTest_int388,13392
Gia_Man_t * Gia_PolynCoreDetectTest( Gia_Man_t * pGia, int fAddExtra, int fAddCones, int fVerbose )Gia_PolynCoreDetectTest414,14481

src/proof/acec/acecCover.c,604
void Gia_AcecMark_rec( Gia_Man_t * p, int iObj, int fFirst )Gia_AcecMark_rec45,1233
void Gia_AcecMarkFadd( Gia_Man_t * p, int * pSigs )Gia_AcecMarkFadd55,1569
void Gia_AcecMarkHadd( Gia_Man_t * p, int * pSigs )Gia_AcecMarkHadd67,2032
void Gia_AcecCollectXors_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Bit_t * vMap, Vec_Int_t * vXors )Gia_AcecCollectXors_rec89,2679
Vec_Int_t * Gia_AcecCollectXors( Gia_Man_t * p, Vec_Bit_t * vMap )Gia_AcecCollectXors97,3058
void Gia_AcecExplore( Gia_Man_t * p, int fVerbose )Gia_AcecExplore116,3553
void Gia_AcecCover( Gia_Man_t * p )Gia_AcecCover226,7072

src/proof/acec/acec2Mult.c,6879
static int s_nFuncTruths4a = 192; // 0xACC0 -- F(a=0)  <== usefuls_nFuncTruths4a28,621
static unsigned s_FuncTruths4a[192] = {s_FuncTruths4a29,687
static int s_nFuncTruths4b = 48; // 0xF3C0 -- F(a=b)  <== usefuls_nFuncTruths4b71,3904
static unsigned s_FuncTruths4b[48] = {s_FuncTruths4b72,3969
static int s_nFuncTruths4 = 384; // 0x35C0 -- F(b=0, c=0)  <== usefuls_nFuncTruths486,4591
static unsigned s_FuncTruths4[384] = {s_FuncTruths487,4661
static int s_nFuncTruths5 = 960; // 0xF335ACC0s_nFuncTruths5147,9127
static unsigned s_FuncTruths5[960] = {s_FuncTruths5148,9174
#define SDB_MAX_CUTSIZE SDB_MAX_CUTSIZE275,20956
#define SDB_MAX_CUTNUM SDB_MAX_CUTNUM276,20985
#define SDB_MAX_TT_WORDS SDB_MAX_TT_WORDS277,21015
#define SDB_CUT_NO_LEAF SDB_CUT_NO_LEAF279,21098
typedef struct Sdb_Cut_t_ Sdb_Cut_t; Sdb_Cut_t281,21129
struct Sdb_Cut_t_Sdb_Cut_t_282,21167
    word            Sign;                      // signatureSign284,21187
    int             iFunc;                     // functionalityiFunc285,21247
    int             Cost;                      // cut costCost286,21311
    int             CostLev;                   // cut costCostLev287,21370
    unsigned        nTreeLeaves  : 28;         // tree leavesnTreeLeaves288,21429
    unsigned        nLeaves      :  4;         // leaf countnLeaves289,21491
    int             pLeaves[SDB_MAX_CUTSIZE];  // leavespLeaves290,21552
typedef struct Sdb_Sto_t_ Sdb_Sto_t; Sdb_Sto_t293,21613
struct Sdb_Sto_t_Sdb_Sto_t_294,21651
    int             nCutSize;nCutSize296,21671
    int             nCutNum;nCutNum297,21701
    int             fCutMin;fCutMin298,21730
    int             fTruthMin;fTruthMin299,21759
    int             fVerbose;fVerbose300,21790
    Gia_Man_t *     pGia;                      // user's AIG manager (will be modified by adding nodes)pGia301,21820
    Vec_Int_t *     vRefs;                     // refs for each nodevRefs302,21924
    Vec_Wec_t *     vCuts;                     // cuts for each nodevCuts303,21993
    Vec_Mem_t *     vTtMem;                    // truth tablesvTtMem304,22062
    Sdb_Cut_t       pCuts[3][SDB_MAX_CUTNUM];  // temporary cutspCuts305,22125
    Sdb_Cut_t *     ppCuts[SDB_MAX_CUTNUM];    // temporary cut pointersppCuts306,22190
    int             nCutsR;                    // the number of cutsnCutsR307,22263
    int             Pivot;                     // current objectPivot308,22332
    int             iCutBest;                  // best-delay cutiCutBest309,22397
    int             nCutsOver;                 // overflow cutsnCutsOver310,22462
    double          CutCount[4];               // cut countersCutCount311,22526
    abctime         clkStart;                  // starting timeclkStart312,22589
static inline word * Sdb_CutTruth( Sdb_Sto_t * p, Sdb_Cut_t * pCut ) { return Vec_MemReadEntry(p->vTtMem, Abc_Lit2Var(pCut->iFunc));           }Sdb_CutTruth315,22657
#define Sdb_ForEachCut(Sdb_ForEachCut317,22803
static inline word Sdb_CutGetSign( Sdb_Cut_t * pCut )Sdb_CutGetSign334,23397
static inline int Sdb_CutCheck( Sdb_Cut_t * pBase, Sdb_Cut_t * pCut ) // check if pCut is contained in pBaseSdb_CutCheck341,23602
static inline int Sdb_CutSetCheckArray( Sdb_Cut_t ** ppCuts, int nCuts )Sdb_CutSetCheckArray357,24053
static inline int Sdb_CutMergeOrder( Sdb_Cut_t * pCut0, Sdb_Cut_t * pCut1, Sdb_Cut_t * pCut, int nCutSize )Sdb_CutMergeOrder397,25134
static inline int Sdb_CutMergeOrder2( Sdb_Cut_t * pCut0, Sdb_Cut_t * pCut1, Sdb_Cut_t * pCut, int nCutSize )Sdb_CutMergeOrder2460,26856
static inline int Sdb_CutSetCutIsContainedOrder( Sdb_Cut_t * pBase, Sdb_Cut_t * pCut ) // check if pCut is contained in pBaseSdb_CutSetCutIsContainedOrder481,27592
static inline int Sdb_CutSetLastCutIsContained( Sdb_Cut_t ** pCuts, int nCuts )Sdb_CutSetLastCutIsContained507,28317
static inline int Sdb_CutCompare( Sdb_Cut_t * pCut0, Sdb_Cut_t * pCut1 )Sdb_CutCompare527,28891
static inline int Sdb_CutSetLastCutContains( Sdb_Cut_t ** pCuts, int nCuts )Sdb_CutSetLastCutContains535,29234
static inline void Sdb_CutSetSortByCost( Sdb_Cut_t ** pCuts, int nCuts )Sdb_CutSetSortByCost553,29894
static inline int Sdb_CutSetAddCut( Sdb_Cut_t ** pCuts, int nCuts, int nCutNum )Sdb_CutSetAddCut563,30171
static inline int Sdb_CutComputeTruth6( Sdb_Sto_t * p, Sdb_Cut_t * pCut0, Sdb_Cut_t * pCut1, int fCompl0, int fCompl1, Sdb_Cut_t * pCutR, int fIsXor )Sdb_CutComputeTruth6585,30737
static inline int Sdb_CutComputeTruth( Sdb_Sto_t * p, Sdb_Cut_t * pCut0, Sdb_Cut_t * pCut1, int fCompl0, int fCompl1, Sdb_Cut_t * pCutR, int fIsXor )Sdb_CutComputeTruth604,31752
static inline int Sdb_CutCountBits( word i )Sdb_CutCountBits645,33631
static inline void Sdb_CutAddUnit( Sdb_Sto_t * p, int iObj )Sdb_CutAddUnit652,33881
static inline void Sdb_CutAddZero( Sdb_Sto_t * p, int iObj )Sdb_CutAddZero663,34212
static inline int Sdb_CutTreeLeaves( Sdb_Sto_t * p, Sdb_Cut_t * pCut )Sdb_CutTreeLeaves671,34459
static inline int Sdb_StoPrepareSet( Sdb_Sto_t * p, int iObj, int Index )Sdb_StoPrepareSet678,34684
static inline void Sdb_StoInitResult( Sdb_Sto_t * p )Sdb_StoInitResult694,35281
static inline void Sdb_StoStoreResult( Sdb_Sto_t * p, int iObj, Sdb_Cut_t ** pCuts, int nCuts )Sdb_StoStoreResult700,35434
static inline void Sdb_CutPrint( Sdb_Sto_t * p, int iObj, Sdb_Cut_t * pCut )Sdb_CutPrint713,35890
void Sdb_StoMergeCuts( Sdb_Sto_t * p, int iObj )Sdb_StoMergeCuts726,36443
int Sdb_StoDiffExactlyOne( Vec_Wec_t * vCuts, int Limit, int * pCut )Sdb_StoDiffExactlyOne795,38991
int Sdb_StoDiffExactlyOne3( Vec_Wec_t * vCuts, int Limit, int * pCut, int * pCount )Sdb_StoDiffExactlyOne3827,39859
Vec_Int_t * Sdb_StoFindAll( Vec_Wec_t * vCuts )Sdb_StoFindAll856,40606
int Sdb_StoDiffExactlyOne2( Vec_Int_t * vAll, int * pCut )Sdb_StoDiffExactlyOne2865,40884
Vec_Int_t * Sdb_StoFindInputs( Vec_Wec_t * vCuts, int Front )Sdb_StoFindInputs881,41252
int Sdb_StoIterCutsOne( Sdb_Sto_t * p, int iObj, int CutSize, int ** ppCut )Sdb_StoIterCutsOne955,43580
Vec_Int_t * Sdb_StoIterCuts( Sdb_Sto_t * p )Sdb_StoIterCuts1044,46726
Sdb_Sto_t * Sdb_StoAlloc( Gia_Man_t * pGia, int nCutSize, int nCutNum, int fCutMin, int fTruthMin, int fVerbose )Sdb_StoAlloc1114,48847
void Sdb_StoFree( Sdb_Sto_t * p )Sdb_StoFree1133,49573
void Sdb_StoComputeCutsConst0( Sdb_Sto_t * p, int iObj )Sdb_StoComputeCutsConst01143,49804
void Sdb_StoComputeCutsCi( Sdb_Sto_t * p, int iObj )Sdb_StoComputeCutsCi1147,49896
void Sdb_StoComputeCutsNode( Sdb_Sto_t * p, int iObj )Sdb_StoComputeCutsNode1151,49984
void Sdb_StoRefObj( Sdb_Sto_t * p, int iObj )Sdb_StoRefObj1155,50076
Vec_Int_t * Sdb_StoComputeCutsDetect( Gia_Man_t * pGia )Sdb_StoComputeCutsDetect1168,50542
void Sdb_StoComputeCutsTest( Gia_Man_t * pGia )Sdb_StoComputeCutsTest1199,51871

src/proof/acec/acec.c,0

src/proof/acec/acecXor.c,1424
void Acec_CheckXors( Gia_Man_t * p, Vec_Int_t * vXors )Acec_CheckXors47,1295
Vec_Int_t * Acec_OrderTreeRoots( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vXorRoots, Vec_Int_t * vRanks )Acec_OrderTreeRoots76,2306
Vec_Bit_t * Acec_MapXorOuts( Gia_Man_t * p, Vec_Int_t * vXors )Acec_MapXorOuts129,4035
Vec_Bit_t * Acec_MapXorOuts2( Gia_Man_t * p, Vec_Int_t * vXors, Vec_Int_t * vRanks )Acec_MapXorOuts2137,4341
Vec_Bit_t * Acec_MapMajOuts( Gia_Man_t * p, Vec_Int_t * vAdds )Acec_MapMajOuts146,4717
Vec_Int_t * Acec_MapMajOuts2( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vRanks )Acec_MapMajOuts2154,5025
Vec_Bit_t * Acec_MapXorIns( Gia_Man_t * p, Vec_Int_t * vXors )Acec_MapXorIns163,5431
Vec_Int_t * Acec_FindXorRoots( Gia_Man_t * p, Vec_Int_t * vXors )Acec_FindXorRoots175,5910
Vec_Int_t * Acec_RankTrees( Gia_Man_t * p, Vec_Int_t * vXors, Vec_Int_t * vXorRoots )Acec_RankTrees186,6391
Vec_Wec_t * Acec_FindXorLeaves( Gia_Man_t * p, Vec_Int_t * vXors, Vec_Int_t * vAdds, Vec_Int_t * vXorRoots, Vec_Int_t * vRanks, Vec_Wec_t ** pvAddBoxes )Acec_FindXorLeaves227,7890
void Acec_CheckBoothPPs( Gia_Man_t * p, Vec_Wec_t * vLitLeaves )Acec_CheckBoothPPs265,9447
Acec_Box_t * Acec_FindBox( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Wec_t * vAddBoxes, Vec_Wec_t * vXorLeaves, Vec_Int_t * vXorRoots )Acec_FindBox285,10163
Acec_Box_t * Acec_ProduceBox( Gia_Man_t * p, int fVerbose )Acec_ProduceBox374,14361

src/proof/acec/acecPo.c,2784
void Acec_ParseSignatureMono( char * p, char * pStop, Vec_Int_t * vLevel )Acec_ParseSignatureMono46,1327
Vec_Wec_t * Acec_ParseSignatureOne( char * p, char * pStop )Acec_ParseSignatureOne72,2168
Vec_Wec_t * Acec_ParseDistribute( Vec_Wec_t * vM1, Vec_Wec_t * vM2, Vec_Wec_t * vAdd )Acec_ParseDistribute88,2720
Vec_Wec_t * Acec_ParseSignature( char * p )Acec_ParseSignature111,3592
void Acec_PrintSignature( Vec_Wec_t * vMonos )Acec_PrintSignature171,5439
void Acec_ParseSignatureTest()Acec_ParseSignatureTest189,6052
static inline void Vec_IntPushOrderAbs( Vec_Int_t * p, int Entry )Vec_IntPushOrderAbs208,6554
static inline void Vec_IntAppendMinusAbs( Vec_Int_t * vVec1, Vec_Int_t * vVec2, int fMinus )Vec_IntAppendMinusAbs228,7094
static inline void Vec_IntCheckUniqueOrderAbs( Vec_Int_t * p )Vec_IntCheckUniqueOrderAbs235,7342
static inline void Vec_IntCheckUniqueOrder( Vec_Int_t * p )Vec_IntCheckUniqueOrder241,7530
void Gia_PolynPrintMono( Vec_Int_t * vConst, Vec_Int_t * vMono, int Prev )Gia_PolynPrintMono259,7944
void Gia_PolynPrint( Vec_Wec_t * vPolyn )Gia_PolynPrint269,8335
void Gia_PolynPrintStats( Vec_Wec_t * vPolyn )Gia_PolynPrintStats282,8773
int Gia_PolynGetResultCompare( int * p0, int * p1 )Gia_PolynGetResultCompare325,10255
Vec_Wec_t * Gia_PolynGetResult( Hsh_VecMan_t * pHashC, Hsh_VecMan_t * pHashM, Vec_Int_t * vCoefs )Gia_PolynGetResult331,10397
static inline void Gia_PolynMergeConstOne( Vec_Int_t * vConst, int New )Gia_PolynMergeConstOne397,12807
static inline void Gia_PolynMergeConst( Vec_Int_t * vTempC, Hsh_VecMan_t * pHashC, int iConstAdd )Gia_PolynMergeConst425,13707
static inline int Gia_PolynBuildAdd( Hsh_VecMan_t * pHashC, Hsh_VecMan_t * pHashM, Vec_Int_t * vCoefs, Gia_PolynBuildAdd437,14134
static inline int Gia_PolynHandleOne( Hsh_VecMan_t * pHashC, Hsh_VecMan_t * pHashM, Vec_Int_t * vCoefs, Gia_PolynHandleOne482,15650
Vec_Wec_t * Gia_PolynBuildNew2( Gia_Man_t * pGia, Vec_Int_t * vRootLits, int nExtra, Vec_Int_t * vLeaves, Vec_Int_t * vNodes, int fSigned, int fVerbose, int fVeryVerbose )Gia_PolynBuildNew2512,17005
static inline void Gia_PolynPrepare2( Vec_Int_t * vTempC[2], Vec_Int_t * vTempM[2], int iObj, int iCst )Gia_PolynPrepare2615,21324
static inline void Gia_PolynPrepare4( Vec_Int_t * vTempC[4], Vec_Int_t * vTempM[4], Vec_Int_t * vConst, Vec_Int_t * vMono, int iObj, int iFan0, int iFan1 )Gia_PolynPrepare4622,21582
Vec_Wec_t * Gia_PolynBuildNew( Gia_Man_t * pGia, Vec_Wec_t * vSign, Vec_Int_t * vRootLits, int nExtra, Vec_Int_t * vLeaves, Vec_Int_t * vNodes, int fSigned, int fVerbose, int fVeryVerbose )Gia_PolynBuildNew639,22269
void Gia_PolynBuild2Test( Gia_Man_t * pGia, char * pSign, int nExtra, int fSigned, int fVerbose, int fVeryVerbose )Gia_PolynBuild2Test804,30044

src/proof/acec/acecCore.c,1688
#define TRUTH_UNUSED TRUTH_UNUSED33,867
void Acec_ManCecSetDefaultParams( Acec_ParCec_t * p )Acec_ManCecSetDefaultParams50,1401
void Acec_VerifyClasses( Gia_Man_t * p, Vec_Wec_t * vLits, Vec_Wec_t * vReprs )Acec_VerifyClasses75,2278
Gia_Man_t * Acec_CommonStart( Gia_Man_t * pBase, Gia_Man_t * pAdd )Acec_CommonStart148,4842
void Acec_CommonFinish( Gia_Man_t * pBase )Acec_CommonFinish173,5685
Vec_Int_t * Acec_CountRemap( Gia_Man_t * pAdd, Gia_Man_t * pBase )Acec_CountRemap181,5918
void Acec_ComputeEquivClasses( Gia_Man_t * pOne, Gia_Man_t * pTwo, Vec_Int_t ** pvMap1, Vec_Int_t ** pvMap2 )Acec_ComputeEquivClasses196,6474
void Acec_MatchBoxesSort( int * pArray, int nSize, int * pCostLits )Acec_MatchBoxesSort212,7120
void Acec_MatchPrintEquivLits( Gia_Man_t * p, Vec_Wec_t * vLits, int * pCostLits, int fVerbose )Acec_MatchPrintEquivLits224,7499
Vec_Wec_t * Acec_MatchCopy( Vec_Wec_t * vLits, Vec_Int_t * vMap )Acec_MatchCopy286,9691
int Acec_MatchCountCommon( Vec_Wec_t * vLits1, Vec_Wec_t * vLits2, int Shift )Acec_MatchCountCommon295,10044
void Vec_IntInsertOrder( Vec_Int_t * vLits, Vec_Int_t * vClasses, int Lit, int Class )Vec_IntInsertOrder310,10543
void Acec_MoveDuplicates( Vec_Wec_t * vLits, Vec_Wec_t * vClasses )Acec_MoveDuplicates319,10847
void Acec_MatchCheckShift( Gia_Man_t * pGia0, Gia_Man_t * pGia1, Vec_Wec_t * vLits0, Vec_Wec_t * vLits1, Vec_Int_t * vMap0, Vec_Int_t * vMap1, Vec_Wec_t * vRoots0, Vec_Wec_t * vRoots1 )Acec_MatchCheckShift356,12058
int Acec_MatchBoxes( Acec_Box_t * pBox0, Acec_Box_t * pBox1 )Acec_MatchBoxes394,13606
int Acec_Solve( Gia_Man_t * pGia0, Gia_Man_t * pGia1, Acec_ParCec_t * pPars )Acec_Solve488,17911

src/proof/acec/acecPolyn.c,1939
typedef struct Pln_Man_t_ Pln_Man_t;Pln_Man_t45,1168
struct Pln_Man_t_Pln_Man_t_46,1205
    Gia_Man_t *    pGia;      // AIG managerpGia48,1225
    Hsh_VecMan_t * pHashC;    // hash table for constantspHashC49,1270
    Hsh_VecMan_t * pHashM;    // hash table for monomialspHashM50,1328
    Vec_Que_t *    vQue;      // queue by largest nodevQue51,1386
    Vec_Flt_t *    vCounts;   // largest nodevCounts52,1441
    Vec_Int_t *    vCoefs;    // coefficients for each monomialvCoefs53,1487
    Vec_Int_t *    vTempC[2]; // polynomial representationvTempC54,1551
    Vec_Int_t *    vTempM[4]; // polynomial representationvTempM55,1610
    Vec_Int_t *    vOrder;    // order of collapsingvOrder56,1669
    int            nBuilds;   // built monomialsnBuilds57,1722
    int            nUsed;     // used monomialsnUsed58,1771
Pln_Man_t * Pln_ManAlloc( Gia_Man_t * pGia, Vec_Int_t * vOrder )Pln_ManAlloc76,2297
void Pln_ManStop( Pln_Man_t * p )Pln_ManStop101,3316
int Pln_ManCompare3( int * pData0, int * pData1 )Pln_ManCompare3117,3756
void Pln_ManPrintFinal( Pln_Man_t * p, int fVerbose, int fVeryVerbose )Pln_ManPrintFinal125,4000
static inline void Vec_IntAppendMinus2x( Vec_Int_t * vVec1, Vec_Int_t * vVec2 )Vec_IntAppendMinus2x173,5712
static inline void Gia_PolynMergeConstOne( Vec_Int_t * vConst, int New )Gia_PolynMergeConstOne192,6182
static inline void Gia_PolynMergeConst( Vec_Int_t * vConst, Pln_Man_t * p, int iConstAdd )Gia_PolynMergeConst220,7085
static inline void Gia_PolynBuildAdd( Pln_Man_t * p, Vec_Int_t * vTempC, Vec_Int_t * vTempM )Gia_PolynBuildAdd230,7432
void Gia_PolynBuildOne( Pln_Man_t * p, int iMono )Gia_PolynBuildOne258,8536
void Gia_PolynBuild( Gia_Man_t * pGia, Vec_Int_t * vOrder, int fSigned, int fVerbose, int fVeryVerbose )Gia_PolynBuild340,11814
void Gia_PolynBuild2( Gia_Man_t * pGia, int fSigned, int fVerbose, int fVeryVerbose )Gia_PolynBuild2428,14785

src/proof/acec/acecOrder.c,257
Vec_Int_t * Gia_PolynFindOrder( Gia_Man_t * pGia, Vec_Int_t * vFadds, Vec_Int_t * vHadds, int fVerbose, int fVeryVerbose )Gia_PolynFindOrder45,1231
Vec_Int_t * Gia_PolynReorder( Gia_Man_t * pGia, int fVerbose, int fVeryVerbose )Gia_PolynReorder199,7782

src/proof/acec/acecFadds.c,4771
#define Dtc_ForEachCut(Dtc_ForEachCut32,856
#define Dtc_ForEachFadd(Dtc_ForEachFadd33,969
Vec_Int_t * Gia_ManDetectHalfAdders( Gia_Man_t * p, int fVerbose )Gia_ManDetectHalfAdders50,1538
void Gia_ManIllustrateBoxes( Gia_Man_t * p )Gia_ManIllustrateBoxes140,5331
int Dtc_ManCutMergeOne( int * pCut0, int * pCut1, int * pCut )Dtc_ManCutMergeOne187,6712
int Dtc_ManCutCheckEqual( Vec_Int_t * vCuts, int * pCutNew )Dtc_ManCutCheckEqual217,7568
int Dtc_ObjComputeTruth_rec( Gia_Obj_t * pObj )Dtc_ObjComputeTruth_rec231,7913
void Dtc_ObjCleanTruth_rec( Gia_Obj_t * pObj )Dtc_ObjCleanTruth_rec244,8471
int Dtc_ObjComputeTruth( Gia_Man_t * p, int iObj, int * pCut, int * pTruth )Dtc_ObjComputeTruth254,8730
void Dtc_ManCutMerge( Gia_Man_t * p, int iObj, int * pList0, int * pList1, Vec_Int_t * vCuts, Vec_Int_t * vCutsXor2, Vec_Int_t * vCutsXor, Vec_Int_t * vCutsMaj )Dtc_ManCutMerge272,9428
void Dtc_ManComputeCuts( Gia_Man_t * p, Vec_Int_t ** pvCutsXor2, Vec_Int_t ** pvCutsXor, Vec_Int_t ** pvCutsMaj, int fVerbose )Dtc_ManComputeCuts330,11347
Vec_Int_t * Dtc_ManFindCommonCuts( Gia_Man_t * p, Vec_Int_t * vCutsXor, Vec_Int_t * vCutsMaj )Dtc_ManFindCommonCuts369,13019
void Dtc_ManPrintFadds( Vec_Int_t * vFadds )Dtc_ManPrintFadds399,14025
int Dtc_ManCompare( int * pCut0, int * pCut1 )Dtc_ManCompare420,14600
int Dtc_ManCompare2( int * pCut0, int * pCut1 )Dtc_ManCompare2430,14917
Vec_Int_t * Gia_ManDetectFullAdders( Gia_Man_t * p, int fVerbose, Vec_Int_t ** pvCutsXor2 )Gia_ManDetectFullAdders437,15142
Vec_Int_t * Gia_ManCreateMap( Gia_Man_t * p, Vec_Int_t * vFadds )Gia_ManCreateMap466,16423
int Gia_ManFindChains_rec( Gia_Man_t * p, int iMaj, Vec_Int_t * vFadds, Vec_Int_t * vMap, Vec_Int_t * vLength )Gia_ManFindChains_rec474,16761
void Gia_ManFindChains( Gia_Man_t * p, Vec_Int_t * vFadds, Vec_Int_t * vMap )Gia_ManFindChains505,18226
void Gia_ManCollectOneChain( Gia_Man_t * p, Vec_Int_t * vFadds, int iFaddTop, Vec_Int_t * vMap, Vec_Int_t * vChain )Gia_ManCollectOneChain515,18616
void Gia_ManMarkWithTravId_rec( Gia_Man_t * p, int Id )Gia_ManMarkWithTravId_rec528,19150
Vec_Wec_t * Gia_ManCollectTopmost( Gia_Man_t * p, Vec_Int_t * vFadds, Vec_Int_t * vMap, int nFaddMin )Gia_ManCollectTopmost541,19625
void Gia_ManPrintChains( Gia_Man_t * p, Vec_Int_t * vFadds, Vec_Int_t * vMap, Vec_Wec_t * vChains )Gia_ManPrintChains575,21059
Vec_Int_t * Gia_ManFindMapping( Gia_Man_t * p, Vec_Int_t * vFadds, Vec_Int_t * vMap, Vec_Wec_t * vChains )Gia_ManFindMapping605,22037
Vec_Int_t * Gia_ManCollectTruthTables( Gia_Man_t * p, Vec_Int_t * vFadds )Gia_ManCollectTruthTables637,23262
float * Gia_ManGenerateDelayTableFloat( int nIns, int nOuts )Gia_ManGenerateDelayTableFloat655,23936
Tim_Man_t * Gia_ManGenerateTim( int nPis, int nPos, int nBoxes, int nIns, int nOuts )Gia_ManGenerateTim667,24304
Gia_Man_t * Gia_ManGenerateExtraAig( int nBoxes, int nIns, int nOuts )Gia_ManGenerateExtraAig689,25034
void Gia_ManDupFadd( Gia_Man_t * pNew, Gia_Man_t * p, Vec_Int_t * vChain, Vec_Int_t * vFadds, Vec_Int_t * vMap, Vec_Wec_t * vChains, Vec_Int_t * vMap2Chain, Vec_Int_t * vTruths )Gia_ManDupFadd703,25644
void Gia_ManDupWithFaddBoxes_rec( Gia_Man_t * pNew, Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vFadds, Vec_Int_t * vMap, Vec_Wec_t * vChains, Vec_Int_t * vMap2Chain, Vec_Int_t * vTruths )Gia_ManDupWithFaddBoxes_rec769,28885
Gia_Man_t * Gia_ManDupWithNaturalBoxes( Gia_Man_t * p, int nFaddMin, int fVerbose )Gia_ManDupWithNaturalBoxes789,29769
int Gia_ObjFanin0CopyCarry( Vec_Int_t * vCarries, Gia_Obj_t * pObj, int Id )Gia_ObjFanin0CopyCarry894,33667
int Gia_ObjFanin1CopyCarry( Vec_Int_t * vCarries, Gia_Obj_t * pObj, int Id )Gia_ObjFanin1CopyCarry900,33977
Gia_Man_t * Gia_ManDupWithArtificalFaddBoxes( Gia_Man_t * p, int fUseFanout, int fXorTrick )Gia_ManDupWithArtificalFaddBoxes906,34287
Gia_Man_t * Gia_ManDupWithArtificalFaddBoxesTest( Gia_Man_t * p )Gia_ManDupWithArtificalFaddBoxesTest1007,38578
int Gia_ManFindAnnotatedDelay( Gia_Man_t * p, int DelayC, int * pnBoxes, int fIgnoreBoxDelays )Gia_ManFindAnnotatedDelay1040,39415
static inline int Gia_ObjIsUsed( Gia_Obj_t * pObj )Gia_ObjIsUsed1104,41645
int Gia_ManFindChainStart( Gia_Man_t * p )Gia_ManFindChainStart1109,41808
int Gia_ManFindPath( Gia_Man_t * p, int DelayC, int nPathMin, int nPathMax, Vec_Int_t * vPath )Gia_ManFindPath1126,42252
int Gia_ManIteratePaths( Gia_Man_t * p, int DelayC, int nPathMin, int nPathMax, int nPathLimit, int fIgnoreBoxDelays, int fVerbose )Gia_ManIteratePaths1196,44424
Gia_Man_t * Gia_ManDupWithArtificialBoxes( Gia_Man_t * p, int DelayC, int nPathMin, int nPathMax, int nPathLimit, int fUseFanout, int fXorTrick, int fIgnoreBoxDelays, int fVerbose )Gia_ManDupWithArtificialBoxes1225,45668

src/proof/acec/acecTree.c,3043
void Acec_BoxFree( Acec_Box_t * pBox )Acec_BoxFree45,1239
void Acec_BoxFreeP( Acec_Box_t ** ppBox )Acec_BoxFreeP54,1486
void Acec_VerifyBoxLeaves( Acec_Box_t * pBox, Vec_Bit_t * vIgnore )Acec_VerifyBoxLeaves72,1836
void Acec_TreeFilterOne( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vTree )Acec_TreeFilterOne96,2668
void Acec_TreeFilterTrees( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Wec_t * vTrees )Acec_TreeFilterTrees152,4851
void Acec_TreeMarkTFI_rec( Gia_Man_t * p, int Id, Vec_Bit_t * vMarked )Acec_TreeMarkTFI_rec171,5339
void Acec_TreeFilterOne2( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vTree )Acec_TreeFilterOne2182,5732
void Acec_TreeFilterTrees2( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Wec_t * vTrees )Acec_TreeFilterTrees2222,7347
int Acec_TreeVerifyPhaseOne_rec( Gia_Man_t * p, Gia_Obj_t * pObj )Acec_TreeVerifyPhaseOne_rec241,7798
void Acec_TreeVerifyPhaseOne( Gia_Man_t * p, Vec_Int_t * vAdds, int iBox )Acec_TreeVerifyPhaseOne255,8373
void Acec_TreeVerifyPhases( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Wec_t * vBoxes )Acec_TreeVerifyPhases298,10326
void Acec_TreeVerifyPhases2( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Wec_t * vBoxes )Acec_TreeVerifyPhases2306,10601
void Acec_TreeVerifyConnections( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Wec_t * vBoxes )Acec_TreeVerifyConnections336,12057
Vec_Int_t * Acec_TreeCarryMap( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Wec_t * vBoxes )Acec_TreeCarryMap379,13636
void Acec_TreePhases_rec( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vMap, int Node, int fPhase, Vec_Bit_t * vVisit )Acec_TreePhases_rec389,14012
void Acec_TreeAddInOutPoint( Vec_Int_t * vMap, int iObj, int iAdd, int fOut )Acec_TreeAddInOutPoint436,15769
Vec_Int_t * Acec_TreeFindPoints( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Bit_t * vIgnore )Acec_TreeFindPoints444,16018
int Acec_TreeWhichPoint( Vec_Int_t * vAdds, int iAdd, int iObj )Acec_TreeWhichPoint472,17083
void Acec_TreeFindTrees2_rec( Vec_Int_t * vAdds, Vec_Int_t * vMap, int iAdd, int Rank, Vec_Int_t * vTree, Vec_Bit_t * vFound )Acec_TreeFindTrees2_rec481,17300
void Acec_TreeFindTrees_rec( Vec_Int_t * vAdds, Vec_Int_t * vMap, int iObj, int Rank, Vec_Int_t * vTree, Vec_Bit_t * vFound )Acec_TreeFindTrees_rec494,18008
Vec_Wec_t * Acec_TreeFindTrees( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Bit_t * vIgnore, int fFilterIn, int fFilterOut )Acec_TreeFindTrees503,18492
void Acec_TreeFindTreesTest( Gia_Man_t * p )Acec_TreeFindTreesTest538,19829
void Acec_PrintAdders( Vec_Wec_t * vBoxes, Vec_Int_t * vAdds )Acec_PrintAdders570,20793
void Acec_TreePrintBox( Acec_Box_t * pBox, Vec_Int_t * vAdds )Acec_TreePrintBox586,21434
int Acec_CreateBoxMaxRank( Vec_Int_t * vTree )Acec_CreateBoxMaxRank600,22036
Acec_Box_t * Acec_CreateBox( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vTree )Acec_CreateBox607,22242
void Acec_CreateBoxTest( Gia_Man_t * p )Acec_CreateBoxTest711,26464
Acec_Box_t * Acec_DeriveBox( Gia_Man_t * p, Vec_Bit_t * vIgnore, int fFilterIn, int fFilterOut, int fVerbose )Acec_DeriveBox754,27900

src/proof/acec/acecCl.c,1127
void Acec_ManDerive_rec( Gia_Man_t * pNew, Gia_Man_t * p, int Node, Vec_Int_t * vMirrors )Acec_ManDerive_rec48,1287
Gia_Man_t * Acec_ManDerive( Gia_Man_t * p, Vec_Int_t * vMirrors )Acec_ManDerive69,2220
Vec_Int_t * Acec_CollectXorTops( Gia_Man_t * p )Acec_CollectXorTops103,3232
int Acec_DetectLitPolarity( Gia_Man_t * p, int Node, int Leaf )Acec_DetectLitPolarity157,5199
void Acec_DetectComputeSuppOne_rec( Gia_Man_t * p, Gia_Obj_t * pObj, Vec_Int_t * vSupp, Vec_Int_t * vNods )Acec_DetectComputeSuppOne_rec193,6273
void Acec_DetectComputeSupports( Gia_Man_t * p, Vec_Int_t * vRootXorSet )Acec_DetectComputeSupports208,6814
Gia_Man_t * Acec_DetectXorBuildNew( Gia_Man_t * p, Vec_Int_t * vRootXorSet )Acec_DetectXorBuildNew271,8941
Gia_Man_t * Acec_DetectAdditional( Gia_Man_t * p, int fVerbose )Acec_DetectAdditional307,10235
Vec_Int_t * Acec_RewriteTop( Gia_Man_t * p, Acec_Box_t * pBox )Acec_RewriteTop349,11451
Gia_Man_t * Acec_RewriteReplace( Gia_Man_t * p, Vec_Int_t * vRes )Acec_RewriteReplace386,12842
Gia_Man_t * Acec_ManDecla( Gia_Man_t * pGia, int fBooth, int fVerbose )Acec_ManDecla418,14019

src/proof/acec/acecPool.c,1973
Vec_Int_t * Acec_ManCreateCarryMap( Gia_Man_t * p, Vec_Int_t * vAdds )Acec_ManCreateCarryMap48,1291
int Acec_ManCheckCarryMap( Gia_Man_t * p, int Carry, Vec_Int_t * vAdds, Vec_Int_t * vCarryMap )Acec_ManCheckCarryMap56,1618
Vec_Int_t * Acec_ManCollectCarryRoots( Gia_Man_t * p, Vec_Int_t * vAdds )Acec_ManCollectCarryRoots64,2018
Vec_Int_t * Acec_ManCollectXorRoots( Gia_Man_t * p, Vec_Int_t * vXors )Acec_ManCollectXorRoots82,2745
void Acec_ManCountXorTreeInputs_rec( Gia_Man_t * p, int Node, Vec_Int_t * vXors, Vec_Int_t * vXorMap, Vec_Bit_t * vIsCarryRoot, Vec_Int_t * vCarryRootSet, Vec_Int_t * vXorSet )Acec_ManCountXorTreeInputs_rec100,3460
Vec_Wec_t * Acec_ManCollectCarryRootSets( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vCarryMap, Vec_Int_t * vXors, Vec_Int_t * vXorRoots, Vec_Int_t * vCarryRoots )Acec_ManCollectCarryRootSets117,4192
int Acec_ManCompareTwo( int * pPair0, int * pPair1 )Acec_ManCompareTwo179,6978
void Acec_ManCollectInsOuts( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vBoxes, Vec_Int_t * vBoxRanks, Vec_Bit_t * vBoxIns, Vec_Bit_t * vBoxOuts, Vec_Int_t * vResIns, Vec_Int_t * vResOuts )Acec_ManCollectInsOuts185,7137
void Acec_ManCollectBoxSets_rec( Gia_Man_t * p, int Carry, int iRank, Vec_Int_t * vAdds, Vec_Int_t * vCarryMap, Vec_Int_t * vBoxes, Vec_Int_t * vBoxRanks )Acec_ManCollectBoxSets_rec229,9611
Vec_Wec_t * Acec_ManCollectBoxSets( Gia_Man_t * p, Vec_Int_t * vAdds, Vec_Int_t * vXors )Acec_ManCollectBoxSets241,10327
void Acec_ManPrintRanks2( Vec_Int_t * vPairs )Acec_ManPrintRanks2270,11780
void Acec_ManPrintRanks( Vec_Int_t * vPairs )Acec_ManPrintRanks277,11960
void Acec_ManProfile( Gia_Man_t * p, int fVerbose )Acec_ManProfile304,12706
Vec_Bit_t * Acec_ManPoolGetPointed( Gia_Man_t * p, Vec_Int_t * vAdds )Acec_ManPoolGetPointed353,14539
Vec_Int_t * Acec_ManPoolTopMost( Gia_Man_t * p, Vec_Int_t * vAdds )Acec_ManPoolTopMost363,14862
void Acec_ManPool( Gia_Man_t * p )Acec_ManPool389,15689

src/proof/acec/acecRe.c,1992
#define Ree_ForEachCut(Ree_ForEachCut32,836
void Ree_TruthPrecompute()Ree_TruthPrecompute49,1431
void Ree_TruthPrecompute2()Ree_TruthPrecompute272,2031
static inline int Ree_ManCutMergeOne( int * pCut0, int * pCut1, int * pCut )Ree_ManCutMergeOne96,2576
static inline int Ree_ManCutCheckEqual( Vec_Int_t * vCuts, int * pCutNew )Ree_ManCutCheckEqual126,3446
static inline int Ree_ManCutFind( int iObj, int * pCut )Ree_ManCutFind140,3805
static inline int Ree_ManCutNotFind( int iObj1, int iObj2, int * pCut )Ree_ManCutNotFind148,4009
static inline int Ree_ManCutTruthOne( int * pCut0, int * pCut )Ree_ManCutTruthOne157,4319
static inline int Ree_ManCutTruth( Gia_Obj_t * pObj, int * pCut0, int * pCut1, int * pCut )Ree_ManCutTruth189,5413
void Ree_ManCutPrint( int * pCut, int Count, word Truth, int iObj )Ree_ManCutPrint246,7219
void Ree_ManCutMerge( Gia_Man_t * p, int iObj, int * pList0, int * pList1, Vec_Int_t * vCuts, Hash_IntMan_t * pHash, Vec_Int_t * vData, Vec_Int_t * vXors )Ree_ManCutMerge258,7556
Vec_Int_t * Ree_ManDeriveAdds( Hash_IntMan_t * p, Vec_Int_t * vData, int fVerbose )Ree_ManDeriveAdds328,10070
int Ree_ManCompare( int * pCut0, int * pCut1 )Ree_ManCompare400,12974
Vec_Int_t * Ree_ManComputeCuts( Gia_Man_t * p, Vec_Int_t ** pvXors, int fVerbose )Ree_ManComputeCuts408,13207
void Ree_CollectInsiders_rec( Gia_Man_t * pGia, int iObj, Vec_Bit_t * vVisited, Vec_Bit_t * vInsiders )Ree_CollectInsiders_rec468,15753
Vec_Bit_t * Ree_CollectInsiders( Gia_Man_t * pGia, Vec_Int_t * vAdds )Ree_CollectInsiders477,16214
void Ree_ManRemoveTrivial( Gia_Man_t * p, Vec_Int_t * vAdds )Ree_ManRemoveTrivial515,17536
void Ree_ManRemoveContained( Gia_Man_t * p, Vec_Int_t * vAdds )Ree_ManRemoveContained540,18537
int Ree_ManCountFadds( Vec_Int_t * vAdds )Ree_ManCountFadds556,19128
void Ree_ManPrintAdders( Vec_Int_t * vAdds, int fVerbose )Ree_ManPrintAdders564,19332
void Ree_ManComputeCutsTest( Gia_Man_t * p )Ree_ManComputeCutsTest584,19997

src/proof/acec/acecSt.c,185
int Npn3Table[256][2] = {Npn3Table33,881
void Acec_GenerateNpnTable()Acec_GenerateNpnTable309,9070
void Acec_StatsCollect( Gia_Man_t * p, int fVerbose )Acec_StatsCollect345,10002

src/proof/fra/fraIndVer.c,126
int Fra_InvariantVerify( Aig_Man_t * pAig, int nFrames, Vec_Int_t * vClauses, Vec_Int_t * vLits )Fra_InvariantVerify46,1301

src/proof/fra/fra.h,16345
#define ABC__aig__fra__fra_hABC__aig__fra__fra_h22,524
typedef struct Fra_Par_t_   Fra_Par_t;Fra_Par_t53,1461
typedef struct Fra_Ssw_t_   Fra_Ssw_t;Fra_Ssw_t54,1500
typedef struct Fra_Sec_t_   Fra_Sec_t;Fra_Sec_t55,1539
typedef struct Fra_Man_t_   Fra_Man_t;Fra_Man_t56,1578
typedef struct Fra_Cla_t_   Fra_Cla_t;Fra_Cla_t57,1617
typedef struct Fra_Sml_t_   Fra_Sml_t;Fra_Sml_t58,1656
typedef struct Fra_Bmc_t_   Fra_Bmc_t;Fra_Bmc_t59,1695
struct Fra_Par_t_Fra_Par_t_62,1755
    int              nSimWords;         // the number of words in the simulation infonSimWords64,1775
    double           dSimSatur;         // the ratio of refined classes when saturation is reacheddSimSatur65,1861
    int              fPatScores;        // enables simulation pattern scoringfPatScores66,1960
    int              MaxScore;          // max score after which resimulation is usedMaxScore67,2038
    double           dActConeRatio;     // the ratio of cone to be bumpeddActConeRatio68,2124
    double           dActConeBumpMax;   // the largest bump in activitydActConeBumpMax69,2198
    int              fChoicing;         // enables choicingfChoicing70,2270
    int              fSpeculate;        // use speculative reductionfSpeculate71,2330
    int              fProve;            // prove the miter outputsfProve72,2399
    int              fVerbose;          // verbose outputfVerbose73,2466
    int              fDoSparse;         // skip sparse functionsfDoSparse74,2524
    int              fConeBias;         // bias variables in the cone (good for unsat runs)fConeBias75,2589
    int              nBTLimitNode;      // conflict limit at a nodenBTLimitNode76,2681
    int              nBTLimitMiter;     // conflict limit at an outputnBTLimitMiter77,2749
    int              nLevelMax;         // the max level to consider seriouslynLevelMax78,2820
    int              nFramesP;          // the number of timeframes to in the prefixnFramesP79,2899
    int              nFramesK;          // the number of timeframes to unrollnFramesK80,2984
    int              nMaxImps;          // the maximum number of implications to considernMaxImps81,3062
    int              nMaxLevs;          // the maximum number of levels to considernMaxLevs82,3152
    int              fRewrite;          // use rewriting for constraint reductionfRewrite83,3236
    int              fLatchCorr;        // computes latch correspondence onlyfLatchCorr84,3318
    int              fUseImps;          // use implicationsfUseImps85,3396
    int              fUse1Hot;          // use one-hotness conditionsfUse1Hot86,3456
    int              fWriteImps;        // record implicationsfWriteImps87,3526
    int              fDontShowBar;      // does not show progressbar during fraigingfDontShowBar88,3589
struct Fra_Ssw_t_Fra_Ssw_t_92,3709
    int              nPartSize;         // size of the partitionnPartSize94,3729
    int              nOverSize;         // size of the overlap between partitionsnOverSize95,3794
    int              nFramesP;          // number of frames in the prefixnFramesP96,3876
    int              nFramesK;          // number of frames for induction (1=simple) nFramesK97,3950
    int              nMaxImps;          // max implications to considernMaxImps98,4036
    int              nMaxLevs;          // max levels to considernMaxLevs99,4108
    int              nMinDomSize;       // min clock domain considered for optimizationnMinDomSize100,4174
    int              fUseImps;          // use implications  fUseImps101,4262
    int              fRewrite;          // enable rewriting of the specualatively reduced modelfRewrite102,4324
    int              fFraiging;         // enable comb SAT sweeping as preprocessing fFraiging103,4420
    int              fLatchCorr;        // perform register correspondencefLatchCorr104,4506
    int              fWriteImps;        // write implications into a filefWriteImps105,4581
    int              fUse1Hot;          // use one-hotness constraintsfUse1Hot106,4655
    int              fVerbose;          // enable verbose output fVerbose107,4726
    int              fSilent;           // disable any output fSilent108,4792
    int              nIters;            // the number of iterations performednIters109,4855
    float            TimeLimit;         // the runtime budget for this callTimeLimit110,4933
struct Fra_Sec_t_Fra_Sec_t_114,5031
    int              fTryComb;          // try CEC call as a preprocessing stepfTryComb116,5051
    int              fTryBmc;           // try BMC call as a preprocessing step fTryBmc117,5131
    int              nFramesMax;        // the max number of frames used for inductionnFramesMax118,5212
    int              nBTLimit;          // the conflict limit at a nodenBTLimit119,5299
    int              nBTLimitGlobal;    // the global conflict limitnBTLimitGlobal120,5371
    int              nBTLimitInter;     // the conflict limit for interpolationnBTLimitInter121,5440
    int              nBddVarsMax;       // the state space limit for BDD reachabilitynBddVarsMax122,5520
    int              nBddMax;           // the max number of BDD nodesnBddMax123,5606
    int              nBddIterMax;       // the limit on the number of BDD iterationsnBddIterMax124,5677
    int              nPdrTimeout;       // the timeout for PDR in the endnPdrTimeout125,5762
    int              fPhaseAbstract;    // enables phase abstractionfPhaseAbstract126,5836
    int              fRetimeFirst;      // enables most-forward retiming at the beginningfRetimeFirst127,5905
    int              fRetimeRegs;       // enables min-register retiming at the beginningfRetimeRegs128,5995
    int              fFraiging;         // enables fraiging at the beginningfFraiging129,6085
    int              fInduction;        // enable the use of inductionfInduction130,6162
    int              fInterpolation;    // enables interpolationfInterpolation131,6233
    int              fInterSeparate;    // enables interpolation for each outputs separatelyfInterSeparate132,6298
    int              fReachability;     // enables BDD based reachabilityfReachability133,6391
    int              fReorderImage;     // enables BDD reordering during image computationfReorderImage134,6465
    int              fStopOnFirstFail;  // enables stopping after first output of a miter has failed to provefStopOnFirstFail135,6556
    int              fUseNewProver;     // the new proverfUseNewProver136,6666
    int              fUsePdr;           // the PDRfUsePdr137,6724
    int              fSilent;           // disables all outputfSilent138,6775
    int              fVerbose;          // enables verbose reporting of statisticsfVerbose139,6838
    int              fVeryVerbose;      // enables very verbose reporting  fVeryVerbose140,6921
    int              TimeLimit;         // enables the timeoutTimeLimit141,6997
    int              fReadUnsolved;     // inserts the unsolved model backfReadUnsolved142,7060
    int              nSMnumber;         // the number of model writtennSMnumber143,7135
    int              fRecursive;        // set to 1 when SEC is called recursivelyfRecursive145,7233
    int              fReportSolution;   // enables report solution in a special formfReportSolution146,7316
struct Fra_Cla_t_Fra_Cla_t_150,7434
    Aig_Man_t *      pAig;              // the original AIG managerpAig152,7454
    Aig_Obj_t **     pMemRepr;          // pointers to representatives of each nodepMemRepr153,7522
    Vec_Ptr_t *      vClasses;          // equivalence classesvClasses154,7606
    Vec_Ptr_t *      vClasses1;         // equivalence class of Const1 nodevClasses1155,7669
    Vec_Ptr_t *      vClassesTemp;      // temporary storage for new classesvClassesTemp156,7745
    Aig_Obj_t **     pMemClasses;       // memory allocated for equivalence classespMemClasses157,7822
    Aig_Obj_t **     pMemClassesFree;   // memory allocated for equivalence classes to be usedpMemClassesFree158,7906
    Vec_Ptr_t *      vClassOld;         // old equivalence class after splittingvClassOld159,8001
    Vec_Ptr_t *      vClassNew;         // new equivalence class(es) after splittingvClassNew160,8082
    int              nPairs;            // the number of pairs of nodesnPairs161,8167
    int              fRefinement;       // set to 1 when refinement has happenedfRefinement162,8239
    Vec_Int_t *      vImps;             // implicationsvImps163,8320
    int (*pFuncNodeHash)     (Aig_Obj_t *, int);         // returns has key of the nodepFuncNodeHash165,8420
    int (*pFuncNodeIsConst)  (Aig_Obj_t *);              // returns 1 if the node is a constantpFuncNodeIsConst166,8508
    int (*pFuncNodesAreEqual)(Aig_Obj_t *, Aig_Obj_t *); // returns 1 if nodes are equal up to a complementpFuncNodesAreEqual167,8604
struct Fra_Sml_t_Fra_Sml_t_171,8738
    Aig_Man_t *      pAig;              // the original AIG managerpAig173,8758
    int              nPref;             // the number of times frames in the prefixnPref174,8826
    int              nFrames;           // the number of times frames nFrames175,8910
    int              nWordsFrame;       // the number of words in each time framenWordsFrame176,8981
    int              nWordsTotal;       // the total number of words at a nodenWordsTotal177,9063
    int              nWordsPref;        // the number of word in the prefixnWordsPref178,9142
    int              fNonConstOut;      // have seen a non-const-0 output during simulationfNonConstOut179,9218
    int              nSimRounds;        // statisticsnSimRounds180,9310
    int              timeSim;           // statisticstimeSim181,9364
    unsigned         pData[0];          // simulation data for the nodespData182,9418
struct Fra_Man_t_Fra_Man_t_186,9512
    Fra_Par_t *      pPars;             // parameters governing fraigingpPars189,9559
    Aig_Man_t *      pManAig;           // the starting AIG managerpManAig191,9652
    Aig_Man_t *      pManFraig;         // the final AIG managerpManFraig192,9720
    int              nFramesAll;        // the number of timeframes usednFramesAll194,9815
    Aig_Obj_t **     pMemFraig;         // memory allocated for points to the fraig nodespMemFraig195,9888
    int              nSizeAlloc;        // allocated size of the arrays for timeframe nodesnSizeAlloc196,9978
    Fra_Cla_t *      pCla;              // representation of (candidate) equivalent nodespCla198,10098
    Fra_Sml_t *      pSml;              // simulation managerpSml200,10211
    Fra_Bmc_t *      pBmc;pBmc202,10311
    int              nPatWords;         // the number of words in the counter examplenPatWords204,10369
    unsigned *       pPatWords;         // the counter examplepPatWords205,10455
    Vec_Int_t *      vCex;vCex206,10518
    Vec_Int_t *      vOneHots;          vOneHots208,10575
    sat_solver *     pSat;              // SAT solverpSat210,10646
    int              nSatVars;          // the number of variables currently usednSatVars211,10700
    Vec_Ptr_t *      vPiVars;           // the PIs of the cone used vPiVars212,10782
    ABC_INT64_T           nBTLimitGlobal;    // resource limitnBTLimitGlobal213,10851
    ABC_INT64_T           nInsLimitGlobal;   // resource limitnInsLimitGlobal214,10914
    Vec_Ptr_t **     pMemFanins;        // the arrays of fanins for some FRAIG nodespMemFanins215,10977
    int *            pMemSatNums;       // the array of SAT numbers for some FRAIG nodespMemSatNums216,11062
    int              nMemAlloc;         // allocated size of the arrays for FRAIG varnums and faninsnMemAlloc217,11151
    Vec_Ptr_t *      vTimeouts;         // the nodes, for which equivalence checking timed outvTimeouts218,11252
    int              nSimRounds;nSimRounds220,11365
    int              nNodesMiter;nNodesMiter221,11398
    int              nLitsBeg;nLitsBeg222,11432
    int              nLitsEnd;nLitsEnd223,11463
    int              nNodesBeg;nNodesBeg224,11494
    int              nNodesEnd;nNodesEnd225,11526
    int              nRegsBeg;nRegsBeg226,11558
    int              nRegsEnd;nRegsEnd227,11589
    int              nSatCalls;nSatCalls228,11620
    int              nSatCallsSat;nSatCallsSat229,11652
    int              nSatCallsUnsat;nSatCallsUnsat230,11687
    int              nSatProof;nSatProof231,11724
    int              nSatFails;nSatFails232,11756
    int              nSatFailsReal;nSatFailsReal233,11788
    int              nSpeculs;   nSpeculs234,11824
    int              nChoices;nChoices235,11858
    int              nChoicesFake;nChoicesFake236,11889
    int              nSatCallsRecent;nSatCallsRecent237,11924
    int              nSatCallsSkipped;nSatCallsSkipped238,11962
    abctime          timeSim;timeSim240,12016
    abctime          timeTrav;timeTrav241,12046
    abctime          timeRwr;timeRwr242,12077
    abctime          timeSat;timeSat243,12107
    abctime          timeSatUnsat;timeSatUnsat244,12137
    abctime          timeSatSat;timeSatSat245,12172
    abctime          timeSatFail;timeSatFail246,12205
    abctime          timeRef;timeRef247,12239
    abctime          timeTotal;timeTotal248,12269
    abctime          time1;time1249,12301
    abctime          time2;time2250,12329
static inline unsigned *   Fra_ObjSim( Fra_Sml_t * p, int Id )                           { return p->pData + p->nWordsTotal * Id; }Fra_ObjSim257,12581
static inline unsigned     Fra_ObjRandomSim()                                            { return Aig_ManRandom(0);               }Fra_ObjRandomSim258,12713
static inline Aig_Obj_t *  Fra_ObjFraig( Aig_Obj_t * pObj, int i )                       { return ((Fra_Man_t *)pObj->pData)->pMemFraig[((Fra_Man_t *)pObj->pData)->nFramesAll*pObj->Id + i];  }Fra_ObjFraig260,12846
static inline void         Fra_ObjSetFraig( Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) { ((Fra_Man_t *)pObj->pData)->pMemFraig[((Fra_Man_t *)pObj->pData)->nFramesAll*pObj->Id + i] = pNode; }Fra_ObjSetFraig261,13039
static inline Vec_Ptr_t *  Fra_ObjFaninVec( Aig_Obj_t * pObj )                           { return ((Fra_Man_t *)pObj->pData)->pMemFanins[pObj->Id];      }Fra_ObjFaninVec263,13233
static inline void         Fra_ObjSetFaninVec( Aig_Obj_t * pObj, Vec_Ptr_t * vFanins )   { ((Fra_Man_t *)pObj->pData)->pMemFanins[pObj->Id] = vFanins;   }Fra_ObjSetFaninVec264,13388
static inline int          Fra_ObjSatNum( Aig_Obj_t * pObj )                             { return ((Fra_Man_t *)pObj->pData)->pMemSatNums[pObj->Id];     }Fra_ObjSatNum266,13544
static inline void         Fra_ObjSetSatNum( Aig_Obj_t * pObj, int Num )                 { ((Fra_Man_t *)pObj->pData)->pMemSatNums[pObj->Id] = Num;      }Fra_ObjSetSatNum267,13699
static inline Aig_Obj_t *  Fra_ClassObjRepr( Aig_Obj_t * pObj )                          { return ((Fra_Man_t *)pObj->pData)->pCla->pMemRepr[pObj->Id];  }Fra_ClassObjRepr269,13855
static inline void         Fra_ClassObjSetRepr( Aig_Obj_t * pObj, Aig_Obj_t * pNode )    { ((Fra_Man_t *)pObj->pData)->pCla->pMemRepr[pObj->Id] = pNode; }Fra_ClassObjSetRepr270,14010
static inline Aig_Obj_t *  Fra_ObjChild0Fra( Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond(Fra_ObjFraig(Aig_ObjFanin0(pObj),i), Aig_ObjFaninC0(pObj)) : NULL;  }Fra_ObjChild0Fra272,14166
static inline Aig_Obj_t *  Fra_ObjChild1Fra( Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond(Fra_ObjFraig(Aig_ObjFanin1(pObj),i), Aig_ObjFaninC1(pObj)) : NULL;  }Fra_ObjChild1Fra273,14384
static inline int          Fra_ImpLeft( int Imp )                                        { return Imp & 0xFFFF;         }Fra_ImpLeft275,14603
static inline int          Fra_ImpRight( int Imp )                                       { return Imp >> 16;            }Fra_ImpRight276,14725
static inline int          Fra_ImpCreate( int Left, int Right )                          { return (Right << 16) | Left; }Fra_ImpCreate277,14847

src/proof/fra/fraClass.c,2652
static inline Aig_Obj_t *  Fra_ObjNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj )                       { return ppNexts[pObj->Id];  }Fra_ObjNext42,1437
static inline void         Fra_ObjSetNext( Aig_Obj_t ** ppNexts, Aig_Obj_t * pObj, Aig_Obj_t * pNext ) { ppNexts[pObj->Id] = pNext; }Fra_ObjSetNext43,1571
Fra_Cla_t * Fra_ClassesStart( Aig_Man_t * pAig )Fra_ClassesStart60,2205
void Fra_ClassesStop( Fra_Cla_t * p )Fra_ClassesStop90,3166
void Fra_ClassesCopyReprs( Fra_Cla_t * p, Vec_Ptr_t * vFailed )Fra_ClassesCopyReprs114,3902
int Fra_ClassCount( Aig_Obj_t ** pClass )Fra_ClassCount145,4849
int Fra_ClassesCountLits( Fra_Cla_t * p )Fra_ClassesCountLits164,5252
int Fra_ClassesCountPairs( Fra_Cla_t * p )Fra_ClassesCountPairs189,5851
void Fra_PrintClass( Fra_Cla_t * p, Aig_Obj_t ** pClass )Fra_PrintClass213,6428
void Fra_ClassesPrint( Fra_Cla_t * p, int fVeryVerbose )Fra_ClassesPrint236,7059
void Fra_ClassesPrepare( Fra_Cla_t * p, int fLatchCorr, int nMaxLevs )Fra_ClassesPrepare276,8365
Aig_Obj_t ** Fra_RefineClassOne( Fra_Cla_t * p, Aig_Obj_t ** ppClass )Fra_RefineClassOne398,12660
int Fra_RefineClassLastIter( Fra_Cla_t * p, Vec_Ptr_t * vClasses )Fra_RefineClassLastIter457,14632
int Fra_ClassesRefine( Fra_Cla_t * p )Fra_ClassesRefine493,15694
int Fra_ClassesRefine1( Fra_Cla_t * p, int fRefineNewClass, int * pSkipped )Fra_ClassesRefine1527,16612
void Fra_ClassesTest( Fra_Cla_t * p, int Id1, int Id2 )Fra_ClassesTest590,18651
void Fra_ClassesLatchCorr( Fra_Man_t * p )Fra_ClassesLatchCorr615,19333
void Fra_ClassesPostprocess( Fra_Cla_t * p )Fra_ClassesPostprocess641,20137
void Fra_ClassesSelectRepr( Fra_Cla_t * p )Fra_ClassesSelectRepr706,22456
static inline Aig_Obj_t * Fra_ObjEqu( Aig_Obj_t ** ppEquivs, Aig_Obj_t * pObj )                       { return ppEquivs[pObj->Id];  }Fra_ObjEqu743,23673
static inline void        Fra_ObjSetEqu( Aig_Obj_t ** ppEquivs, Aig_Obj_t * pObj, Aig_Obj_t * pNode ) { ppEquivs[pObj->Id] = pNode; }Fra_ObjSetEqu744,23807
static inline Aig_Obj_t * Fra_ObjChild0Equ( Aig_Obj_t ** ppEquivs, Aig_Obj_t * pObj ) { return Aig_NotCond(Fra_ObjEqu(ppEquivs,Aig_ObjFanin0(pObj)), Aig_ObjFaninC0(pObj));  }Fra_ObjChild0Equ746,23942
static inline Aig_Obj_t * Fra_ObjChild1Equ( Aig_Obj_t ** ppEquivs, Aig_Obj_t * pObj ) { return Aig_NotCond(Fra_ObjEqu(ppEquivs,Aig_ObjFanin1(pObj)), Aig_ObjFaninC1(pObj));  }Fra_ObjChild1Equ747,24117
static inline void Fra_ClassesDeriveNode( Aig_Man_t * pManFraig, Aig_Obj_t * pObj, Aig_Obj_t ** ppEquivs )Fra_ClassesDeriveNode760,24575
Aig_Man_t * Fra_ClassesDeriveAig( Fra_Cla_t * p, int nFramesK )Fra_ClassesDeriveAig796,25985

src/proof/fra/fraPart.c,160
void Fra_ManPartitionTest( Aig_Man_t * p, int nComLim )Fra_ManPartitionTest45,1226
void Fra_ManPartitionTest2( Aig_Man_t * p )Fra_ManPartitionTest2187,5582

src/proof/fra/fraBmc.c,2834
struct Fra_Bmc_t_Fra_Bmc_t_31,788
    int              nPref;             // the size of the prefixnPref34,826
    int              nDepth;            // the depth of the framesnDepth35,892
    int              nFramesAll;        // the total number of timeframesnFramesAll36,959
    Vec_Int_t *      vImps;vImps38,1068
    Aig_Man_t *      pAig;              // the original AIG managerpAig40,1116
    Aig_Man_t *      pAigFrames;        // initialized timeframespAigFrames41,1184
    Aig_Man_t *      pAigFraig;         // the fraiged initialized timeframespAigFraig42,1250
    Aig_Obj_t **     pObjToFrames;      // mapping of the original node into framespObjToFrames44,1352
    Aig_Obj_t **     pObjToFraig;       // mapping of the frames node into fraigpObjToFraig45,1436
static inline Aig_Obj_t *  Bmc_ObjFrames( Aig_Obj_t * pObj, int i )                       { return ((Fra_Man_t *)pObj->pData)->pBmc->pObjToFrames[((Fra_Man_t *)pObj->pData)->pBmc->nFramesAll*pObj->Id + i];  }Bmc_ObjFrames48,1521
static inline void         Bmc_ObjSetFrames( Aig_Obj_t * pObj, int i, Aig_Obj_t * pNode ) { ((Fra_Man_t *)pObj->pData)->pBmc->pObjToFrames[((Fra_Man_t *)pObj->pData)->pBmc->nFramesAll*pObj->Id + i] = pNode; }Bmc_ObjSetFrames49,1730
static inline Aig_Obj_t *  Bmc_ObjFraig( Aig_Obj_t * pObj )                               { return ((Fra_Man_t *)pObj->pData)->pBmc->pObjToFraig[pObj->Id];  }Bmc_ObjFraig51,1940
static inline void         Bmc_ObjSetFraig( Aig_Obj_t * pObj, Aig_Obj_t * pNode )         { ((Fra_Man_t *)pObj->pData)->pBmc->pObjToFraig[pObj->Id] = pNode; }Bmc_ObjSetFraig52,2099
static inline Aig_Obj_t *  Bmc_ObjChild0Frames( Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin0(pObj)? Aig_NotCond(Bmc_ObjFrames(Aig_ObjFanin0(pObj),i), Aig_ObjFaninC0(pObj)) : NULL;  }Bmc_ObjChild0Frames54,2259
static inline Aig_Obj_t *  Bmc_ObjChild1Frames( Aig_Obj_t * pObj, int i ) { assert( !Aig_IsComplement(pObj) ); return Aig_ObjFanin1(pObj)? Aig_NotCond(Bmc_ObjFrames(Aig_ObjFanin1(pObj),i), Aig_ObjFaninC1(pObj)) : NULL;  }Bmc_ObjChild1Frames55,2481
int Fra_BmcNodesAreEqual( Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Fra_BmcNodesAreEqual72,3196
int Fra_BmcNodeIsConst( Aig_Obj_t * pObj )Fra_BmcNodeIsConst103,4140
void Fra_BmcFilterImplications( Fra_Man_t * p, Fra_Bmc_t * pBmc )Fra_BmcFilterImplications121,4654
Fra_Bmc_t * Fra_BmcStart( Aig_Man_t * pAig, int nPref, int nDepth )Fra_BmcStart191,7292
void Fra_BmcStop( Fra_Bmc_t * p )Fra_BmcStop216,8015
Aig_Man_t * Fra_BmcFrames( Fra_Bmc_t * p, int fKeepPos )Fra_BmcFrames237,8512
void Fra_BmcPerform( Fra_Man_t * p, int nPref, int nDepth )Fra_BmcPerform311,11088
void Fra_BmcPerformSimple( Aig_Man_t * pAig, int nFrames, int nBTLimit, int fRewrite, int fVerbose )Fra_BmcPerformSimple383,13863

src/proof/fra/fraSim.c,3129
int Fra_SmlNodeHash( Aig_Obj_t * pObj, int nTableSize )Fra_SmlNodeHash46,1282
int Fra_SmlNodeIsConst( Aig_Obj_t * pObj )Fra_SmlNodeIsConst86,2905
int Fra_SmlNodesAreEqual( Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Fra_SmlNodesAreEqual109,3476
int Fra_SmlNodeNotEquWeight( Fra_Sml_t * p, int Left, int Right )Fra_SmlNodeNotEquWeight133,4156
int Fra_SmlNodeIsZero( Fra_Sml_t * p, Aig_Obj_t * pObj )Fra_SmlNodeIsZero155,4777
int Fra_SmlNodeCountOnes( Fra_Sml_t * p, Aig_Obj_t * pObj )Fra_SmlNodeCountOnes177,5313
void Fra_SmlSavePattern0( Fra_Man_t * p, int fInit )Fra_SmlSavePattern0200,5836
void Fra_SmlSavePattern1( Fra_Man_t * p, int fInit )Fra_SmlSavePattern1216,6219
void Fra_SmlSavePattern( Fra_Man_t * p )Fra_SmlSavePattern241,6977
void Fra_SmlCheckOutputSavePattern( Fra_Man_t * p, Aig_Obj_t * pObjPo )Fra_SmlCheckOutputSavePattern281,8203
int Fra_SmlCheckOutput( Fra_Man_t * p )Fra_SmlCheckOutput326,9573
void Fra_SmlAssignRandom( Fra_Sml_t * p, Aig_Obj_t * pObj )Fra_SmlAssignRandom358,10401
void Fra_SmlAssignConst( Fra_Sml_t * p, Aig_Obj_t * pObj, int fConst1, int iFrame )Fra_SmlAssignConst379,10928
void Fra_SmlInitialize( Fra_Sml_t * p, int fInit )Fra_SmlInitialize400,11539
void Fra_SmlAssignDist1( Fra_Sml_t * p, unsigned * pPat )Fra_SmlAssignDist1433,12450
void Fra_SmlNodeSimulate( Fra_Sml_t * p, Aig_Obj_t * pObj, int iFrame )Fra_SmlNodeSimulate485,14229
int Fra_SmlNodesCompareInFrame( Fra_Sml_t * p, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1, int iFrame0, int iFrame1 )Fra_SmlNodesCompareInFrame550,16427
void Fra_SmlNodeCopyFanin( Fra_Sml_t * p, Aig_Obj_t * pObj, int iFrame )Fra_SmlNodeCopyFanin579,17359
void Fra_SmlNodeTransferNext( Fra_Sml_t * p, Aig_Obj_t * pOut, Aig_Obj_t * pIn, int iFrame )Fra_SmlNodeTransferNext613,18487
int Fra_SmlCheckNonConstOutputs( Fra_Sml_t * p )Fra_SmlCheckNonConstOutputs642,19397
void Fra_SmlSimulateOne( Fra_Sml_t * p )Fra_SmlSimulateOne663,19911
void Fra_SmlResimulate( Fra_Man_t * p )Fra_SmlResimulate703,21121
void Fra_SmlSimulate( Fra_Man_t * p, int fInit )Fra_SmlSimulate738,22265
Fra_Sml_t * Fra_SmlStart( Aig_Man_t * pAig, int nPref, int nFrames, int nWordsFrame )Fra_SmlStart813,25060
void Fra_SmlStop( Fra_Sml_t * p )Fra_SmlStop839,25992
Fra_Sml_t * Fra_SmlSimulateComb( Aig_Man_t * pAig, int nWords, int fCheckMiter )Fra_SmlSimulateComb856,26334
Vec_Str_t * Fra_SmlSimulateReadFile( char * pFileName )Fra_SmlSimulateReadFile879,27053
void Fra_SmlInitializeGiven( Fra_Sml_t * p, Vec_Str_t * vSimInfo )Fra_SmlInitializeGiven917,28082
void Fra_SmlPrintOutputs( Fra_Sml_t * p, int nPatterns )Fra_SmlPrintOutputs954,29314
Fra_Sml_t * Fra_SmlSimulateCombGiven( Aig_Man_t * pAig, char * pFileName, int fCheckMiter, int fVerbose )Fra_SmlSimulateCombGiven981,29971
Fra_Sml_t * Fra_SmlSimulateSeq( Aig_Man_t * pAig, int nPref, int nFrames, int nWords, int fCheckMiter )Fra_SmlSimulateSeq1021,31340
Abc_Cex_t * Fra_SmlGetCounterExample( Fra_Sml_t * p )Fra_SmlGetCounterExample1043,31973
Abc_Cex_t * Fra_SmlCopyCounterExample( Aig_Man_t * pAig, Aig_Man_t * pFrames, int * pModel )Fra_SmlCopyCounterExample1117,34154

src/proof/fra/fraInd.c,685
void Fra_FraigInductionRewrite( Fra_Man_t * p )Fra_FraigInductionRewrite48,1340
static inline void Fra_FramesConstrainNode( Aig_Man_t * pManFraig, Aig_Obj_t * pObj, int iFrame )Fra_FramesConstrainNode94,3135
Aig_Man_t * Fra_FramesWithClasses( Fra_Man_t * p )Fra_FramesWithClasses130,4501
void Fra_FramesAddMore( Aig_Man_t * p, int nFrames )Fra_FramesAddMore197,7097
Aig_Man_t * Fra_FraigInductionPart( Aig_Man_t * pAig, Fra_Ssw_t * pPars )Fra_FraigInductionPart253,8821
Aig_Man_t * Fra_FraigInduction( Aig_Man_t * pManAig, Fra_Ssw_t * pParams )Fra_FraigInduction344,12262
int Fra_FraigInductionTest( char * pFileName, Fra_Ssw_t * pParams )Fra_FraigInductionTest661,24687

src/proof/fra/fraMan.c,566
void Fra_ParamsDefault( Fra_Par_t * pPars )Fra_ParamsDefault45,1258
void Fra_ParamsDefaultSeq( Fra_Par_t * pPars )Fra_ParamsDefaultSeq75,2640
Fra_Man_t * Fra_ManStart( Aig_Man_t * pManAig, Fra_Par_t * pPars )Fra_ManStart104,3906
void Fra_ManClean( Fra_Man_t * p, int nNodesMax )Fra_ManClean145,5288
Aig_Man_t * Fra_ManPrepareComb( Fra_Man_t * p )Fra_ManPrepareComb176,6285
void Fra_ManFinalizeComb( Fra_Man_t * p )Fra_ManFinalizeComb217,7844
void Fra_ManStop( Fra_Man_t * p )Fra_ManStop240,8374
void Fra_ManPrint( Fra_Man_t * p )Fra_ManPrint278,9521

src/proof/fra/fraLcr.c,2717
typedef struct Fra_Lcr_t_    Fra_Lcr_t;Fra_Lcr_t30,780
struct Fra_Lcr_t_Fra_Lcr_t_31,820
    Aig_Man_t *      pAig;pAig34,860
    Fra_Cla_t *      pCla;       pCla36,927
    Vec_Ptr_t *      vParts;        // output partitionsvParts38,993
    int *            pInToOutPart;  // mapping of PI num into PO partition numpInToOutPart39,1050
    int *            pInToOutNum;   // mapping of PI num into the num of this PO in the partitionpInToOutNum40,1129
    Vec_Ptr_t *      vFraigs;vFraigs42,1258
    int              fRefining; fRefining44,1311
    int              nFramesP;nFramesP46,1362
    int              fVerbose;fVerbose47,1393
    int              nIters;nIters49,1442
    int              nLitsBeg;nLitsBeg50,1471
    int              nLitsEnd;nLitsEnd51,1502
    int              nNodesBeg;nNodesBeg52,1533
    int              nNodesEnd;nNodesEnd53,1565
    int              nRegsBeg;nRegsBeg54,1597
    int              nRegsEnd;nRegsEnd55,1628
    abctime          timeSim;timeSim57,1674
    abctime          timePart;timePart58,1704
    abctime          timeTrav;timeTrav59,1735
    abctime          timeFraig;timeFraig60,1766
    abctime          timeUpdate;timeUpdate61,1798
    abctime          timeTotal;timeTotal62,1831
Fra_Lcr_t * Lcr_ManAlloc( Aig_Man_t * pAig )Lcr_ManAlloc80,2352
void Lcr_ManPrint( Fra_Lcr_t * p )Lcr_ManPrint105,3094
void Lcr_ManFree( Fra_Lcr_t * p )Lcr_ManFree131,4113
Fra_Man_t * Fra_LcrAigPrepare( Aig_Man_t * pAig )Fra_LcrAigPrepare158,4806
void Fra_LcrAigPrepareTwo( Aig_Man_t * pAig, Fra_Man_t * p )Fra_LcrAigPrepareTwo182,5377
int Fra_LcrNodesAreEqual( Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Fra_LcrNodesAreEqual201,5835
int Fra_LcrNodeIsConst( Aig_Obj_t * pObj )Fra_LcrNodeIsConst239,7168
Aig_Obj_t * Fra_LcrManDup_rec( Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Fra_LcrManDup_rec266,8007
Aig_Man_t * Fra_LcrDeriveAigForPartitioning( Fra_Lcr_t * pLcr )Fra_LcrDeriveAigForPartitioning296,9278
void Fra_LcrRemapPartitions( Vec_Ptr_t * vParts, Fra_Cla_t * pCla, int * pInToOutPart, int * pInToOutNum )Fra_LcrRemapPartitions347,11023
Aig_Obj_t * Fra_LcrCreatePart_rec( Fra_Cla_t * pCla, Aig_Man_t * pNew, Aig_Man_t * p, Aig_Obj_t * pObj )Fra_LcrCreatePart_rec394,12722
Aig_Man_t * Fra_LcrCreatePart( Fra_Lcr_t * p, Vec_Int_t * vPart )Fra_LcrCreatePart429,13993
void Fra_ClassNodesMark( Fra_Lcr_t * p )Fra_ClassNodesMark465,15084
void Fra_ClassNodesUnmark( Fra_Lcr_t * p )Fra_ClassNodesUnmark498,16052
Aig_Man_t * Fra_FraigLatchCorrespondence( Aig_Man_t * pAig, int nFramesP, int nConfMax, int fProve, int fVerbose, int * pnIter, float TimeLimit )Fra_FraigLatchCorrespondence531,16996

src/proof/fra/fraImp.c,1648
static inline int Fra_SmlCountOnesOne( Fra_Sml_t * p, int Node )Fra_SmlCountOnesOne45,1285
static inline int * Fra_SmlCountOnes( Fra_Sml_t * p )Fra_SmlCountOnes66,1845
static inline int Sml_NodeCheckImp( Fra_Sml_t * p, int Left, int Right )Sml_NodeCheckImp88,2450
static inline int Sml_NodeNotImpWeight( Fra_Sml_t * p, int Left, int Right )Sml_NodeNotImpWeight111,3063
static inline void Sml_NodeSaveNotImpPatterns( Fra_Sml_t * p, int Left, int Right, unsigned * pResult )Sml_NodeSaveNotImpPatterns133,3685
Vec_Ptr_t * Fra_SmlSortUsingOnes( Fra_Sml_t * p, int fLatchCorr )Fra_SmlSortUsingOnes154,4294
Vec_Int_t * Fra_SmlSelectMaxCost( Vec_Int_t * vImps, int * pCosts, int nCostMax, int nImpLimit, int * pCostRange )Fra_SmlSelectMaxCost244,6944
int Sml_CompareMaxId( unsigned short * pImp1, unsigned short * pImp2 )Sml_CompareMaxId294,8479
Vec_Int_t * Fra_ImpDerive( Fra_Man_t * p, int nImpMaxLimit, int nImpUseLimit, int fLatchCorr )Fra_ImpDerive321,9375
void Fra_ImpAddToSolver( Fra_Man_t * p, Vec_Int_t * vImps, int * pSatVarNums )Fra_ImpAddToSolver428,13465
int Fra_ImpCheckForNode( Fra_Man_t * p, Vec_Int_t * vImps, Aig_Obj_t * pNode, int Pos )Fra_ImpCheckForNode503,16177
int Fra_ImpRefineUsingCex( Fra_Man_t * p, Vec_Int_t * vImps )Fra_ImpRefineUsingCex575,18894
void Fra_ImpCompactArray( Vec_Int_t * vImps )Fra_ImpCompactArray607,19788
double Fra_ImpComputeStateSpaceRatio( Fra_Man_t * p )Fra_ImpComputeStateSpaceRatio628,20309
int Fra_ImpVerifyUsingSimulation( Fra_Man_t * p )Fra_ImpVerifyUsingSimulation665,21505
void Fra_ImpRecordInManager( Fra_Man_t * p, Aig_Man_t * pNew )Fra_ImpRecordInManager705,22808

src/proof/fra/fra_.c,0

src/proof/fra/fraSat.c,680
int Fra_NodesAreEquiv( Fra_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew )Fra_NodesAreEquiv48,1344
int Fra_NodesAreImp( Fra_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew, int fComplL, int fComplR )Fra_NodesAreImp209,6234
int Fra_NodesAreClause( Fra_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew, int fComplL, int fComplR )Fra_NodesAreClause317,9667
int Fra_NodeIsConst( Fra_Man_t * p, Aig_Obj_t * pNew )Fra_NodeIsConst425,13122
int Fra_SetActivityFactors_rec( Fra_Man_t * p, Aig_Obj_t * pObj, int LevelMin, int LevelMax )Fra_SetActivityFactors_rec502,15328
int Fra_SetActivityFactors( Fra_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew )Fra_SetActivityFactors540,16756

src/proof/fra/fraCec.c,678
int Fra_FraigSat( Aig_Man_t * pMan, ABC_INT64_T nConfLimit, ABC_INT64_T nInsLimit, int nLearnedStart, int nLearnedDelta, int nLearnedPerce, int fFlipBits, int fAndOuts, int fNewSolver, int fVerbose )Fra_FraigSat47,1285
int Aig_ManCountXors( Aig_Man_t * p )Aig_ManCountXors298,9414
int Fra_FraigCec( Aig_Man_t ** ppAig, int nConfLimit, int fVerbose )Fra_FraigCec320,9920
int Fra_FraigCecPartitioned( Aig_Man_t * pMan1, Aig_Man_t * pMan2, int nConfLimit, int nPartSize, int fSmart, int fVerbose )Fra_FraigCecPartitioned451,13805
int Fra_FraigCecTop( Aig_Man_t * pMan1, Aig_Man_t * pMan2, int nConfLimit, int nPartSize, int fSmart, int fVerbose )Fra_FraigCecTop513,15729

src/proof/fra/fraCore.c,883
int Fra_FraigMiterStatus( Aig_Man_t * p )Fra_FraigMiterStatus62,2289
int Fra_FraigMiterAssertedOutput( Aig_Man_t * p )Fra_FraigMiterAssertedOutput125,4002
static inline void Fra_FraigNodeSpeculate( Fra_Man_t * p, Aig_Obj_t * pObj, Aig_Obj_t * pObjFraig, Aig_Obj_t * pObjReprFraig )Fra_FraigNodeSpeculate156,4848
void Fra_FraigVerifyCounterEx( Fra_Man_t * p, Vec_Int_t * vCex )Fra_FraigVerifyCounterEx186,5858
static inline void Fra_FraigNode( Fra_Man_t * p, Aig_Obj_t * pObj )Fra_FraigNode234,7844
void Fra_FraigSweep( Fra_Man_t * p )Fra_FraigSweep310,10902
Aig_Man_t * Fra_FraigPerform( Aig_Man_t * pManAig, Fra_Par_t * pPars )Fra_FraigPerform375,13275
Aig_Man_t * Fra_FraigChoice( Aig_Man_t * pManAig, int nConfMax, int nLevelMax )Fra_FraigChoice442,15514
Aig_Man_t * Fra_FraigEquivence( Aig_Man_t * pManAig, int nConfMax, int fProve )Fra_FraigEquivence468,16198

src/proof/fra/fraClau.c,2858
typedef struct Cla_Man_t_    Cla_Man_t;Cla_Man_t38,1016
struct Cla_Man_t_Cla_Man_t_39,1056
    sat_solver *     pSatMain;pSatMain42,1095
    sat_solver *     pSatTest;pSatTest43,1126
    sat_solver *     pSatBmc;pSatBmc44,1157
    Vec_Int_t *      vSatVarsMainCs;vSatVarsMainCs48,1272
    Vec_Int_t *      vSatVarsTestCs;vSatVarsTestCs49,1309
    Vec_Int_t *      vSatVarsTestNs;vSatVarsTestNs50,1346
    Vec_Int_t *      vSatVarsBmcNs;vSatVarsBmcNs51,1383
    int              nSatVarsTestBeg;nSatVarsTestBeg53,1443
    int              nSatVarsTestCur;nSatVarsTestCur54,1481
    Vec_Int_t *      vCexMain0;vCexMain056,1543
    Vec_Int_t *      vCexMain;vCexMain57,1575
    Vec_Int_t *      vCexTest;vCexTest58,1606
    Vec_Int_t *      vCexBase;vCexBase59,1637
    Vec_Int_t *      vCexAssm;vCexAssm60,1668
    Vec_Int_t *      vCexBmc;vCexBmc61,1699
    int *            pMapCsMainToCsTest; pMapCsMainToCsTest63,1770
    int *            pMapCsTestToCsMain; pMapCsTestToCsMain64,1812
    int *            pMapCsTestToNsTest; pMapCsTestToNsTest65,1854
    int *            pMapCsTestToNsBmc;  pMapCsTestToNsBmc66,1896
Vec_Int_t * Fra_ClauSaveLatchVars( Aig_Man_t * pMan, Cnf_Dat_t * pCnf, int fCsVars )Fra_ClauSaveLatchVars84,2443
Vec_Int_t * Fra_ClauSaveOutputVars( Aig_Man_t * pMan, Cnf_Dat_t * pCnf )Fra_ClauSaveOutputVars106,3082
Vec_Int_t * Fra_ClauSaveInputVars( Aig_Man_t * pMan, Cnf_Dat_t * pCnf, int nStarting )Fra_ClauSaveInputVars128,3657
int * Fra_ClauCreateMapping( Vec_Int_t * vSatVarsFrom, Vec_Int_t * vSatVarsTo, int nVarsMax )Fra_ClauCreateMapping154,4321
void Fra_ClauStop( Cla_Man_t * p )Fra_ClauStop178,4998
Cla_Man_t * Fra_ClauStart( Aig_Man_t * pMan )Fra_ClauStart211,6012
static Vec_Int_t * Vec_IntSplitHalf( Vec_Int_t * vVec )Vec_IntSplitHalf304,9877
static void Vec_IntComplement( Vec_Int_t * vVec )Vec_IntComplement327,10519
int Fra_ClauCheckProperty( Cla_Man_t * p, Vec_Int_t * vCex )Fra_ClauCheckProperty345,10980
int Fra_ClauCheckBmc( Cla_Man_t * p, Vec_Int_t * vClause )Fra_ClauCheckBmc379,11968
void Fra_ClauRemapClause( int * pMap, Vec_Int_t * vClause, Vec_Int_t * vRemapped, int fInv )Fra_ClauRemapClause402,12642
int Fra_ClauCheckClause( Cla_Man_t * p, Vec_Int_t * vClause, Vec_Int_t * vCex )Fra_ClauCheckClause425,13314
void Fra_ClauReduceClause( Vec_Int_t * vMain, Vec_Int_t * vNew )Fra_ClauReduceClause473,15278
void Fra_ClauMinimizeClause_rec( Cla_Man_t * p, Vec_Int_t * vBasis, Vec_Int_t * vExtra )Fra_ClauMinimizeClause_rec515,16472
void Fra_ClauMinimizeClause( Cla_Man_t * p, Vec_Int_t * vBasis, Vec_Int_t * vExtra )Fra_ClauMinimizeClause566,18021
void Fra_ClauPrintClause( Vec_Int_t * vSatCsVars, Vec_Int_t * vCex )Fra_ClauPrintClause598,19012
int Fra_Clau( Aig_Man_t * pMan, int nIters, int fVerbose, int fVeryVerbose )Fra_Clau637,20018

src/proof/fra/fraSec.c,177
void Fra_SecSetDefaultParams( Fra_Sec_t * p )Fra_SecSetDefaultParams51,1390
int Fra_FraigSec( Aig_Man_t * p, Fra_Sec_t * pParSec, Aig_Man_t ** ppResult )Fra_FraigSec95,3839

src/proof/fra/fraHot.c,1434
static inline int  Fra_RegToLit( int n, int c )   { return c? -n-1 : n+1;       }Fra_RegToLit30,786
static inline int  Fra_LitReg( int n )            { return (n>0)? n-1 : -n-1;   }Fra_LitReg31,868
static inline int  Fra_LitSign( int n )           { return (n<0);               }Fra_LitSign32,950
int Fra_OneHotNodeIsConst( Fra_Sml_t * pSeq, Aig_Obj_t * pObj )Fra_OneHotNodeIsConst49,1541
int Fra_OneHotNodesAreEqual( Fra_Sml_t * pSeq, Aig_Obj_t * pObj0, Aig_Obj_t * pObj1 )Fra_OneHotNodesAreEqual71,2078
int Fra_OneHotNodesAreClause( Fra_Sml_t * pSeq, Aig_Obj_t * pObj1, Aig_Obj_t * pObj2, int fCompl1, int fCompl2 )Fra_OneHotNodesAreClause94,2698
Vec_Int_t * Fra_OneHotCompute( Fra_Man_t * p, Fra_Sml_t * pSim )Fra_OneHotCompute134,3754
void Fra_OneHotAssume( Fra_Man_t * p, Vec_Int_t * vOneHots )Fra_OneHotAssume191,5866
void Fra_OneHotCheck( Fra_Man_t * p, Vec_Int_t * vOneHots )Fra_OneHotCheck229,7195
int Fra_OneHotRefineUsingCex( Fra_Man_t * p, Vec_Int_t * vOneHots )Fra_OneHotRefineUsingCex266,8512
int Fra_OneHotCount( Fra_Man_t * p, Vec_Int_t * vOneHots )Fra_OneHotCount303,9812
void Fra_OneHotEstimateCoverage( Fra_Man_t * p, Vec_Int_t * vOneHots )Fra_OneHotEstimateCoverage328,10449
Aig_Man_t * Fra_OneHotCreateExdc( Fra_Man_t * p, Vec_Int_t * vOneHots )Fra_OneHotCreateExdc398,12947
void Fra_OneHotAddKnownConstraint( Fra_Man_t * p, Vec_Ptr_t * vOnehots )Fra_OneHotAddKnownConstraint439,14375

src/proof/fra/fraCnf.c,635
void Fra_AddClausesMux( Fra_Man_t * p, Aig_Obj_t * pNode )Fra_AddClausesMux46,1226
void Fra_AddClausesSuper( Fra_Man_t * p, Aig_Obj_t * pNode, Vec_Ptr_t * vSuper )Fra_AddClausesSuper129,3730
void Fra_CollectSuper_rec( Aig_Obj_t * pObj, Vec_Ptr_t * vSuper, int fFirst, int fUseMuxes )Fra_CollectSuper_rec167,5073
Vec_Ptr_t * Fra_CollectSuper( Aig_Obj_t * pObj, int fUseMuxes )Fra_CollectSuper192,5884
void Fra_ObjAddToFrontier( Fra_Man_t * p, Aig_Obj_t * pObj, Vec_Ptr_t * vFrontier )Fra_ObjAddToFrontier213,6426
void Fra_CnfNodeAddToSolver( Fra_Man_t * p, Aig_Obj_t * pOld, Aig_Obj_t * pNew )Fra_CnfNodeAddToSolver238,7120

src/proof/fra/fraClaus.c,5537
typedef struct Clu_Man_t_    Clu_Man_t;Clu_Man_t32,839
struct Clu_Man_t_Clu_Man_t_33,879
    int              nFrames;        // the K of the K-step inductionnFrames36,917
    int              nPref;          // the number of timeframes to skip  nPref37,987
    int              nClausesMax;    // the max number of 4-clauses to considernClausesMax38,1062
    int              nLutSize;       // the max cut sizenLutSize39,1142
    int              nLevels;        // the number of levels for cut computationnLevels40,1199
    int              nCutsMax;       // the maximum number of cuts to compute at a nodenCutsMax41,1280
    int              nBatches;       // the number of clause batches to usenBatches42,1368
    int              fStepUp;        // increase cut size for each batchfStepUp43,1444
    int              fTarget;        // tries to prove the propertyfTarget44,1517
    int              fVerbose;       fVerbose45,1585
    int              fVeryVerbose;fVeryVerbose46,1623
    int              nSimWords;      // the number of simulation wordsnSimWords48,1685
    int              nSimWordsPref;  // the number of simulation words in the prefixnSimWordsPref49,1756
    int              nSimFrames;     // the number of frames to simulate nSimFrames50,1841
    int              nBTLimit;       // the largest number of backtracks (0 = infinite)nBTLimit51,1915
    Aig_Man_t *      pAig;pAig53,2023
    sat_solver *     pSatMain;pSatMain55,2069
    sat_solver *     pSatBmc;pSatBmc56,2100
    Cnf_Dat_t *      pCnf;pCnf58,2161
    int              fFail;fFail59,2188
    int              fFiltering; fFiltering60,2216
    int              fNothingNew;fNothingNew61,2250
    Vec_Int_t *      vLits;vLits63,2299
    Vec_Int_t *      vClauses;vClauses64,2327
    Vec_Int_t *      vCosts;vCosts65,2358
    int              nClauses;nClauses66,2387
    int              nCuts;nCuts67,2418
    int              nOneHots;nOneHots68,2446
    int              nOneHotsProven;nOneHotsProven69,2477
    Vec_Int_t *      vLitsProven;vLitsProven71,2536
    Vec_Int_t *      vClausesProven;vClausesProven72,2570
    Vec_Ptr_t *      vCexes;vCexes74,2631
    int              nCexes;nCexes75,2660
    int              nCexesAlloc;nCexesAlloc76,2689
int Fra_ClausRunBmc( Clu_Man_t * p )Fra_ClausRunBmc94,3216
int Fra_ClausRunSat( Clu_Man_t * p )Fra_ClausRunSat122,4042
int Fra_ClausRunSat0( Clu_Man_t * p )Fra_ClausRunSat0153,5004
void transpose32a( unsigned a[32] ) transpose32a176,5728
int Fra_ClausProcessClausesCut( Clu_Man_t * p, Fra_Sml_t * pSimMan, Dar_Cut_t * pCut, int * pScores )Fra_ClausProcessClausesCut202,6330
int Fra_ClausProcessClausesCut2( Clu_Man_t * p, Fra_Sml_t * pSimMan, Dar_Cut_t * pCut, int * pScores )Fra_ClausProcessClausesCut2248,7868
void Fra_ClausProcessClausesCut3( Clu_Man_t * p, Fra_Sml_t * pSimMan, Aig_Cut_t * pCut, int * pScores )Fra_ClausProcessClausesCut3290,9231
int Fra_ClausSelectClauses( Clu_Man_t * p )Fra_ClausSelectClauses350,11129
void Fra_ClausRecordClause( Clu_Man_t * p, Dar_Cut_t * pCut, int iMint, int Cost )Fra_ClausRecordClause405,12711
void Fra_ClausRecordClause2( Clu_Man_t * p, Aig_Cut_t * pCut, int iMint, int Cost )Fra_ClausRecordClause2425,13303
int Fra_ClausSmlNodeIsConst( Fra_Sml_t * pSeq, Aig_Obj_t * pObj )Fra_ClausSmlNodeIsConst445,13928
int Fra_ClausSmlNodesAreImp( Fra_Sml_t * pSeq, Aig_Obj_t * pObj1, Aig_Obj_t * pObj2 )Fra_ClausSmlNodesAreImp467,14459
int Fra_ClausSmlNodesAreImpC( Fra_Sml_t * pSeq, Aig_Obj_t * pObj1, Aig_Obj_t * pObj2 )Fra_ClausSmlNodesAreImpC490,15092
int Fra_ClausCollectLatchClauses( Clu_Man_t * p, Fra_Sml_t * pSeq )Fra_ClausCollectLatchClauses513,15696
int Fra_ClausProcessClauses( Clu_Man_t * p, int fRefs )Fra_ClausProcessClauses601,18897
int Fra_ClausProcessClauses2( Clu_Man_t * p, int fRefs )Fra_ClausProcessClauses2724,22320
int Fra_ClausBmcClauses( Clu_Man_t * p )Fra_ClausBmcClauses897,27756
void Fra_ClausSimInfoClean( Clu_Man_t * p )Fra_ClausSimInfoClean991,30630
void Fra_ClausSimInfoRealloc( Clu_Man_t * p )Fra_ClausSimInfoRealloc1009,31073
void Fra_ClausSimInfoRecord( Clu_Man_t * p, int * pModel )Fra_ClausSimInfoRecord1028,31570
int Fra_ClausSimInfoCheck( Clu_Man_t * p, int * pLits, int nLits )Fra_ClausSimInfoCheck1056,32381
int Fra_ClausInductiveClauses( Clu_Man_t * p )Fra_ClausInductiveClauses1098,33534
Clu_Man_t * Fra_ClausAlloc( Aig_Man_t * pAig, int nFrames, int nPref, int nClausesMax, int nLutSize, int nLevels, int nCutsMax, int nBatches, int fStepUp, int fTarget, int fVerbose, int fVeryVerbose )Fra_ClausAlloc1365,41501
void Fra_ClausFree( Clu_Man_t * p )Fra_ClausFree1410,43025
void Fra_ClausAddToStorage( Clu_Man_t * p )Fra_ClausAddToStorage1436,43843
void Fra_ClausPrintIndClauses( Clu_Man_t * p )Fra_ClausPrintIndClauses1483,45111
Aig_Obj_t * Fra_ClausGetLiteral( Clu_Man_t * p, int * pVar2Id, int Lit )Fra_ClausGetLiteral1520,46090
void Fra_ClausWriteIndClauses( Clu_Man_t * p )Fra_ClausWriteIndClauses1540,46652
void Fra_ClausEstimateCoverageOne( Fra_Sml_t * pSim, int * pLits, int nLits, int * pVar2Id, unsigned * pResult )Fra_ClausEstimateCoverageOne1592,48416
void Fra_ClausEstimateCoverage( Clu_Man_t * p )Fra_ClausEstimateCoverage1620,49204
int Fra_Claus( Aig_Man_t * pAig, int nFrames, int nPref, int nClausesMax, int nLutSize, int nLevels, int nCutsMax, int nBatches, int fStepUp, int fBmc, int fRefs, int fTarget, int fVerbose, int fVeryVerbose )Fra_Claus1682,51450

src/demo.c,102
using namespace ABC_NAMESPACE;ABC_NAMESPACE49,1312
int main( int argc, char * argv[] )main73,2205

src/map/amap/amapCore.c,167
void Amap_ManSetDefaultParams( Amap_Par_t * p )Amap_ManSetDefaultParams46,1315
Vec_Ptr_t * Amap_ManTest( Aig_Man_t * pAig, Amap_Par_t * pPars )Amap_ManTest70,2156

src/map/amap/amapRead.c,1990
#define AMAP_STRING_GATE AMAP_STRING_GATE31,797
#define AMAP_STRING_PIN AMAP_STRING_PIN32,835
#define AMAP_STRING_NONINV AMAP_STRING_NONINV33,872
#define AMAP_STRING_INV AMAP_STRING_INV34,912
#define AMAP_STRING_UNKNOWN AMAP_STRING_UNKNOWN35,949
#define AMAP_SYMB_AND AMAP_SYMB_AND38,1050
#define AMAP_SYMB_AND2 AMAP_SYMB_AND239,1079
#define AMAP_SYMB_OR1 AMAP_SYMB_OR140,1108
#define AMAP_SYMB_OR2 AMAP_SYMB_OR241,1137
#define AMAP_SYMB_XOR AMAP_SYMB_XOR42,1166
#define AMAP_SYMB_NOT AMAP_SYMB_NOT43,1195
#define AMAP_SYMB_AFTNOT AMAP_SYMB_AFTNOT44,1224
#define AMAP_SYMB_OPEN AMAP_SYMB_OPEN45,1254
#define AMAP_SYMB_CLOSE AMAP_SYMB_CLOSE46,1283
    AMAP_PHASE_UNKNOWN, AMAP_PHASE_UNKNOWN49,1329
    AMAP_PHASE_INV, AMAP_PHASE_INV50,1354
    AMAP_PHASE_NONINV AMAP_PHASE_NONINV51,1375
} Amap_PinPhase_t;Amap_PinPhase_t52,1398
static inline Amap_Gat_t * Amap_ParseGateAlloc( Aig_MmFlex_t * p, int nPins ) Amap_ParseGateAlloc54,1418
static inline char * Amap_ParseStrsav( Aig_MmFlex_t * p, char * pStr ) Amap_ParseStrsav56,1594
char * Amap_LoadFile( char * pFileName )Amap_LoadFile74,2238
void Amap_RemoveComments( char * pBuffer, int * pnDots, int * pnLines )Amap_RemoveComments121,3815
Vec_Ptr_t * Amap_DeriveTokens( char * pBuffer )Amap_DeriveTokens177,5343
int Amap_ParseCountPins( Vec_Ptr_t * vTokens, int iPos )Amap_ParseCountPins206,6112
int Amap_GateCollectNames( Aig_MmFlex_t * pMem, char * pForm, char * pPinNames[] )Amap_GateCollectNames229,6735
Amap_Gat_t * Amap_ParseGateWithSamePins( Amap_Gat_t * p )Amap_ParseGateWithSamePins271,8062
int Amap_CollectFormulaTokens( Vec_Ptr_t * vTokens, char * pToken, int iPos )Amap_CollectFormulaTokens301,8858
Amap_Lib_t * Amap_ParseTokens( Vec_Ptr_t * vTokens, int fVerbose )Amap_ParseTokens327,9457
Amap_Lib_t * Amap_LibReadBuffer( char * pBuffer, int fVerbose )Amap_LibReadBuffer447,14189
Amap_Lib_t * Amap_LibReadFile( char * pFileName, int fVerbose )Amap_LibReadFile474,14854

src/map/amap/amapMatch.c,2095
Amap_Cut_t * Amap_ManDupCut( Amap_Man_t * p, Amap_Cut_t * pCut )Amap_ManDupCut45,1270
static inline void Amap_ManMatchStart( Amap_Mat_t * p, Amap_Cut_t * pCut, Amap_Set_t * pSet )Amap_ManMatchStart65,1828
void Amap_ManCleanRefs( Amap_Man_t * p )Amap_ManCleanRefs83,2267
float Amap_ManMaxDelay( Amap_Man_t * p )Amap_ManMaxDelay102,2680
void Amap_ManCleanData( Amap_Man_t * p )Amap_ManCleanData123,3170
float Amap_ManComputeMapping_rec( Amap_Man_t * p, Amap_Obj_t * pObj, int fCompl )Amap_ManComputeMapping_rec144,3658
float Amap_ManComputeMapping( Amap_Man_t * p )Amap_ManComputeMapping179,4797
int Amap_ManCountInverters( Amap_Man_t * p )Amap_ManCountInverters201,5404
static inline int Amap_CutCompareDelay( Amap_Man_t * p, Amap_Mat_t * pM0, Amap_Mat_t * pM1 )Amap_CutCompareDelay221,5871
static inline int Amap_CutCompareArea( Amap_Man_t * p, Amap_Mat_t * pM0, Amap_Mat_t * pM1 )Amap_CutCompareArea242,6509
static inline float Amap_CutAreaDeref( Amap_Man_t * p, Amap_Mat_t * pM )Amap_CutAreaDeref275,7423
static inline float Amap_CutAreaRef2( Amap_Man_t * p, Amap_Mat_t * pM, Vec_Ptr_t * vTemp, int Limit )Amap_CutAreaRef2302,8288
static inline float Amap_CutAreaDerefed2( Amap_Man_t * p, Amap_Obj_t * pNode, Amap_Mat_t * pM )Amap_CutAreaDerefed2331,9300
static inline float Amap_CutAreaRef( Amap_Man_t * p, Amap_Mat_t * pM )Amap_CutAreaRef359,10187
static inline float Amap_CutAreaDerefed( Amap_Man_t * p, Amap_Obj_t * pNode, Amap_Mat_t * pM )Amap_CutAreaDerefed386,11061
static inline void Amap_CutAreaTest( Amap_Man_t * p, Amap_Obj_t * pNode )Amap_CutAreaTest412,11873
static inline void Amap_ManMatchGetFlows( Amap_Man_t * p, Amap_Mat_t * pM )Amap_ManMatchGetFlows442,12786
static inline void Amap_ManMatchGetExacts( Amap_Man_t * p, Amap_Obj_t * pNode, Amap_Mat_t * pM )Amap_ManMatchGetExacts485,14104
void Amap_ManMatchNode( Amap_Man_t * p, Amap_Obj_t * pNode, int fFlow, int fRefs )Amap_ManMatchNode519,15101
void Amap_ManMatch( Amap_Man_t * p, int fFlow, int fRefs )Amap_ManMatch618,18745
void Amap_ManMap( Amap_Man_t * p )Amap_ManMap657,19839

src/map/amap/amap.h,1204
#define ABC__map__amap__amap_hABC__map__amap__amap_h22,547
typedef struct Amap_Lib_t_ Amap_Lib_t;Amap_Lib_t42,1271
typedef struct Amap_Par_t_ Amap_Par_t;Amap_Par_t44,1311
struct Amap_Par_t_Amap_Par_t_45,1350
    int    nIterFlow;   // iterations of area flownIterFlow47,1371
    int    nIterArea;   // iteratoins of exact areanIterArea48,1422
    int    nCutsMax;    // the maximum number of cuts at a nodenCutsMax49,1474
    int    fUseMuxes;   // enables the use of MUXesfUseMuxes50,1538
    int    fUseXors;    // enables the use of XORsfUseXors51,1590
    int    fFreeInvs;   // assume inverters are free (area = 0)fFreeInvs52,1641
    float  fEpsilon;    // used to compare floating point numbersfEpsilon53,1705
    float  fADratio;    // ratio of area/delay improvementfADratio54,1771
    int    fVerbose;    // verbosity flagfVerbose55,1830
typedef struct Amap_Out_t_ Amap_Out_t;Amap_Out_t58,1876
struct Amap_Out_t_Amap_Out_t_59,1915
    char * pName;     // gate namepName61,1936
    short  Type;      // node type   (-1=input; 0=internal; 1=output)Type62,1971
    short  nFans;     // number of faninsnFans63,2041
    int    pFans[0];  // faninpFans64,2083

src/map/amap/amapMan.c,120
Amap_Man_t * Amap_ManStart( int nNodes )Amap_ManStart45,1261
void Amap_ManStop( Amap_Man_t * p )Amap_ManStop80,2265

src/map/amap/amapLib.c,1071
Amap_Lib_t * Amap_LibAlloc()Amap_LibAlloc45,1261
void Amap_LibFree( Amap_Lib_t * p )Amap_LibFree67,1783
int Amap_LibNumPinsMax( Amap_Lib_t * p )Amap_LibNumPinsMax103,2692
void Amap_LibWritePin( FILE * pFile, Amap_Pin_t * pPin )Amap_LibWritePin124,3173
void Amap_LibWriteGate( FILE * pFile, Amap_Gat_t * pGate, int fPrintDsd )Amap_LibWriteGate150,4057
void Amap_LibWrite( FILE * pFile, Amap_Lib_t * pLib, int fPrintDsd )Amap_LibWrite179,4893
int Amap_LibCompareGatesByArea( Amap_Gat_t ** pp1, Amap_Gat_t ** pp2 )Amap_LibCompareGatesByArea199,5436
Vec_Ptr_t * Amap_LibSortGatesByArea( Amap_Lib_t * pLib )Amap_LibSortGatesByArea220,5923
Amap_Gat_t * Amap_LibFindGate( Amap_Lib_t * p, unsigned uTruth )Amap_LibFindGate240,6519
Vec_Ptr_t * Amap_LibSelectGates( Amap_Lib_t * p, int fVerbose )Amap_LibSelectGates264,7149
void Amap_LibPrintSelectedGates( Amap_Lib_t * p, int fAllGates )Amap_LibPrintSelectedGates305,8484
Amap_Lib_t * Amap_LibReadAndPrepare( char * pFileName, char * pBuffer, int fVerbose, int fVeryVerbose )Amap_LibReadAndPrepare332,9258

src/map/amap/amapOutput.c,288
static inline char * Amap_OuputStrsav( Aig_MmFlex_t * p, char * pStr ) Amap_OuputStrsav30,798
Amap_Out_t * Amap_OutputStructAlloc( Aig_MmFlex_t * pMem, Amap_Gat_t * pGate )Amap_OutputStructAlloc48,1446
Vec_Ptr_t * Amap_ManProduceMapped( Amap_Man_t * p )Amap_ManProduceMapped71,2179

src/map/amap/amapMerge.c,1092
Amap_Cut_t * Amap_ManSetupPis( Amap_Man_t * p )Amap_ManSetupPis45,1293
Amap_Cut_t * Amap_ManCutStore( Amap_Man_t * p, Amap_Cut_t * pCut, int fCompl )Amap_ManCutStore76,2135
Amap_Cut_t * Amap_ManCutCreate( Amap_Man_t * p, Amap_ManCutCreate105,3111
Amap_Cut_t * Amap_ManCutCreate3( Amap_Man_t * p, Amap_ManCutCreate3139,4255
void Amap_ManCutSaveStored( Amap_Man_t * p, Amap_Obj_t * pNode )Amap_ManCutSaveStored174,5508
int Amap_ManMergeCountCuts( Amap_Man_t * p, Amap_Obj_t * pNode )Amap_ManMergeCountCuts254,7968
void Amap_ManPrintCuts( Amap_Obj_t * pNode )Amap_ManPrintCuts287,9100
void Amap_ManMergeNodeChoice( Amap_Man_t * p, Amap_Obj_t * pNode )Amap_ManMergeNodeChoice319,10040
int Amap_ManFindCut( Amap_Obj_t * pNode, Amap_Obj_t * pFanin, int fComplFanin, int Val, Vec_Ptr_t * vCuts )Amap_ManFindCut351,10905
void Amap_ManMergeNodeCutsMux( Amap_Man_t * p, Amap_Obj_t * pNode )Amap_ManMergeNodeCutsMux377,11622
void Amap_ManMergeNodeCuts( Amap_Man_t * p, Amap_Obj_t * pNode )Amap_ManMergeNodeCuts443,14458
void Amap_ManMerge( Amap_Man_t * p )Amap_ManMerge514,17133

src/map/amap/amapRule.c,1244
Vec_Int_t * Amap_CreateRulesPrime( Amap_Lib_t * p, Vec_Int_t * vNods0, Vec_Int_t * vNods1, Vec_Int_t * vNods2 )Amap_CreateRulesPrime48,1437
void Amap_CreateRulesTwo( Amap_Lib_t * p, Vec_Int_t * vNods, Vec_Int_t * vNods0, Vec_Int_t * vNods1, int fXor )Amap_CreateRulesTwo78,2317
int Amap_CreateCheckAllZero( Vec_Ptr_t * vVecNods )Amap_CreateCheckAllZero102,3008
Vec_Int_t * Amap_CreateRulesVector_rec( Amap_Lib_t * p, Vec_Ptr_t * vVecNods, int fXor )Amap_CreateRulesVector_rec123,3504
Vec_Int_t * Amap_CreateRulesFromDsd_rec( Amap_Lib_t * pLib, Kit_DsdNtk_t * p, int iLit )Amap_CreateRulesFromDsd_rec191,5990
Vec_Int_t * Amap_CreateRulesFromDsd( Amap_Lib_t * pLib, Kit_DsdNtk_t * p )Amap_CreateRulesFromDsd233,7568
int Amap_CreateCheckEqual_rec( Kit_DsdNtk_t * p, int iLit0, int iLit1 )Amap_CreateCheckEqual_rec260,8309
void Amap_CreateCheckAsym_rec( Kit_DsdNtk_t * p, int iLit, Vec_Int_t ** pvSyms )Amap_CreateCheckAsym_rec288,9287
void Amap_CreateCheckAsym( Kit_DsdNtk_t * p, Vec_Int_t ** pvSyms )Amap_CreateCheckAsym314,10321
void Amap_CreateRulesForGate( Amap_Lib_t * pLib, Amap_Gat_t * pGate )Amap_CreateRulesForGate330,10727
void Amap_LibCreateRules( Amap_Lib_t * pLib, int fVeryVerbose )Amap_LibCreateRules426,14209

src/map/amap/amapInt.h,15771
#define ABC__map__amap__amapInt_hABC__map__amap__amapInt_h22,556
#define AMAP_MAXINS AMAP_MAXINS44,1220
#define AMAP_STRING_CONST0 AMAP_STRING_CONST046,1244
#define AMAP_STRING_CONST1 AMAP_STRING_CONST147,1284
    AMAP_OBJ_NONE,    // 0: non-existent objectAMAP_OBJ_NONE51,1357
    AMAP_OBJ_CONST1,  // 1: constant 1 AMAP_OBJ_CONST152,1405
    AMAP_OBJ_PI,      // 2: primary inputAMAP_OBJ_PI53,1445
    AMAP_OBJ_PO,      // 3: primary outputAMAP_OBJ_PO54,1487
    AMAP_OBJ_AND,     // 4: AND nodeAMAP_OBJ_AND55,1530
    AMAP_OBJ_XOR,     // 5: XOR nodeAMAP_OBJ_XOR56,1567
    AMAP_OBJ_MUX,     // 6: MUX nodeAMAP_OBJ_MUX57,1604
    AMAP_OBJ_VOID     // 7: unused objectAMAP_OBJ_VOID58,1641
} Amap_Type_t;Amap_Type_t59,1683
typedef struct Amap_Pin_t_ Amap_Pin_t;Amap_Pin_t65,1919
typedef struct Amap_Gat_t_ Amap_Gat_t;Amap_Gat_t66,1958
typedef struct Amap_Nod_t_ Amap_Nod_t;Amap_Nod_t67,1997
typedef struct Amap_Set_t_ Amap_Set_t;Amap_Set_t68,2036
typedef struct Amap_Man_t_ Amap_Man_t;Amap_Man_t70,2076
typedef struct Amap_Obj_t_ Amap_Obj_t;Amap_Obj_t71,2115
typedef struct Amap_Cut_t_ Amap_Cut_t;Amap_Cut_t72,2154
typedef struct Amap_Mat_t_ Amap_Mat_t;Amap_Mat_t73,2193
struct Amap_Man_t_Amap_Man_t_75,2233
    Amap_Par_t *       pPars;pPars78,2271
    Amap_Lib_t *       pLib;pLib79,2301
    float              fEpsilonInternal;fEpsilonInternal81,2357
    float              fAreaInv;fAreaInv82,2398
    int                fUseXor;    fUseXor83,2431
    int                fUseMux;    fUseMux84,2467
    Vec_Ptr_t *        vPis;vPis86,2536
    Vec_Ptr_t *        vPos;vPos87,2565
    Vec_Ptr_t *        vObjs;vObjs88,2594
    Aig_MmFixed_t *    pMemObj;pMemObj89,2624
    Aig_MmFlex_t *     pMemCuts;pMemCuts90,2656
    Aig_MmFlex_t *     pMemCutBest;pMemCutBest91,2689
    Aig_MmFlex_t *     pMemTemp;pMemTemp92,2725
    Amap_Obj_t *       pConst1;pConst193,2758
    int                nObjs[AMAP_OBJ_VOID];nObjs94,2790
    int                nLevelMax;nLevelMax95,2835
    int                nChoicesGiven;nChoicesGiven96,2869
    int                nChoicesAdded;nChoicesAdded97,2907
    Vec_Int_t *        vTemp;vTemp99,2976
    int *              pMatsTemp;pMatsTemp100,3006
    Amap_Cut_t **      ppCutsTemp;ppCutsTemp101,3040
    Amap_Cut_t *       pCutsPi;pCutsPi102,3075
    Vec_Ptr_t *        vCuts0;vCuts0103,3107
    Vec_Ptr_t *        vCuts1;vCuts1104,3138
    Vec_Ptr_t *        vCuts2;vCuts2105,3169
    Vec_Ptr_t *        vTempP;vTempP106,3200
    int                nCutsUsed;nCutsUsed108,3249
    int                nCutsTried;nCutsTried109,3283
    int                nCutsTried3;nCutsTried3110,3318
    int                nBytesUsed;nBytesUsed111,3354
struct Amap_Lib_t_Amap_Lib_t_113,3392
    char *             pName;       // library namepName115,3413
    Vec_Ptr_t *        vGates;      // represenation of gatesvGates116,3465
    Vec_Ptr_t *        vSorted;     // gates sorted for area-only mappingvSorted117,3527
    Vec_Ptr_t *        vSelect;     // gates selected for area-only mappingvSelect118,3601
    Amap_Gat_t *       pGate0;      // the constant zero gatepGate0119,3677
    Amap_Gat_t *       pGate1;      // the constant one gatepGate1120,3739
    Amap_Gat_t *       pGateBuf;    // the bufferpGateBuf121,3800
    Amap_Gat_t *       pGateInv;    // the inverterpGateInv122,3850
    Aig_MmFlex_t *     pMemGates;   // memory manager for objectspMemGates123,3902
    int                fHasXor;     // XOR/NXOR gates are presentfHasXor124,3968
    int                fHasMux;     // MUX/NMUX gates are presentfHasMux125,4034
    int                fVerbose;    // enable detailed statisticsfVerbose127,4133
    Amap_Nod_t *       pNodes;      // representation nodespNodes128,4199
    int                nNodes;      // the number of nodes usednNodes129,4259
    int                nNodesAlloc; // the number of nodes allocatednNodesAlloc130,4323
    Vec_Ptr_t *        vRules;      // the rule of AND gatevRules131,4392
    Vec_Ptr_t *        vRulesX;     // the rule of XOR gatevRulesX132,4452
    Vec_Int_t *        vRules3;     // the rule of MUX gatevRules3133,4512
    int **             pRules;      // simplified representationpRules134,4572
    int **             pRulesX;     // simplified representationpRulesX135,4637
    Aig_MmFlex_t *     pMemSet;     // memory manager for setspMemSet136,4702
    int                nSets;       // the number of sets creatednSets137,4765
struct Amap_Pin_t_Amap_Pin_t_139,4834
    char *             pName;pName141,4855
    int                Phase;Phase142,4885
    double             dLoadInput;dLoadInput143,4915
    double             dLoadMax;dLoadMax144,4950
    double             dDelayBlockRise;dDelayBlockRise145,4983
    double             dDelayFanoutRise;dDelayFanoutRise146,5023
    double             dDelayBlockFall;dDelayBlockFall147,5064
    double             dDelayFanoutFall;dDelayFanoutFall148,5104
    double             dDelayBlockMax;dDelayBlockMax149,5145
struct Amap_Gat_t_Amap_Gat_t_151,5187
    Amap_Lib_t *       pLib;            // library   pLib153,5208
    Amap_Gat_t *       pTwin;           // twin gatepTwin154,5262
    char *             pName;           // the name of the gatepName155,5315
    char *             pOutName;        // name of the outputpOutName156,5379
    double             dArea;           // the area of the gatedArea157,5441
    char *             pForm;           // the formula describing functionalitypForm158,5505
    unsigned *         pFunc;           // truth tablepFunc159,5585
    unsigned           Id     :   23;   // unique number of the gateId160,5640
    unsigned           fMux   :    1;   // denotes MUX-gatesfMux161,5709
    unsigned           nPins  :    8;   // number of inputsnPins162,5770
    Amap_Pin_t         Pins[0];         // description of inputsPins163,5830
struct Amap_Set_t_Amap_Set_t_165,5898
    Amap_Set_t *       pNext;pNext167,5919
    unsigned           iGate    : 16;iGate168,5949
    unsigned           fInv     :  1;fInv169,5987
    unsigned           nIns     : 15;nIns170,6025
    char               Ins[AMAP_MAXINS];// mapping from gate inputs into faninsIns171,6063
struct Amap_Nod_t_Amap_Nod_t_173,6146
    unsigned           Id       : 16;   // ID of the nodeId175,6167
    unsigned           nSuppSize:  8;   // support sizenSuppSize176,6225
    unsigned           Type     :  8;   // the type of nodeType177,6281
    short              iFan0;           // fanin0iFan0178,6341
    short              iFan1;           // fanin1iFan1179,6391
    short              iFan2;           // fanin2iFan2180,6441
    short              Unused;          // Unused181,6491
    Amap_Set_t *       pSets;           // implementable gatespSets182,6535
struct Amap_Cut_t_Amap_Cut_t_184,6601
    unsigned           iMat     : 16;iMat186,6622
    unsigned           fInv     :  1;fInv187,6660
    unsigned           nFans  : 15;nFans188,6698
    int                Fans[0];Fans189,6734
struct Amap_Mat_t_Amap_Mat_t_191,6769
    Amap_Cut_t *       pCut;           // the cutpCut193,6790
    Amap_Set_t *       pSet;           // the setpSet194,6840
    float              Area;           // area flow / exact area of the nodeArea195,6890
    float              AveFan;         // edge flow of the nodeAveFan196,6967
    float              Delay;          // delay of the nodeDelay197,7031
struct Amap_Obj_t_Amap_Obj_t_199,7094
    unsigned           Type     :  3;   Type201,7115
    unsigned           Id       : 29;Id202,7156
    unsigned           IdPio    : 29;IdPio203,7194
    unsigned           fPhase   :  1;fPhase204,7232
    unsigned           fRepr    :  1;fRepr205,7270
    unsigned           fPolar   :  1;  // pCutBest->fInv ^ pSetBest->fInvfPolar206,7308
    unsigned           Level;Level207,7382
    unsigned           nCuts;nCuts208,7412
    int                nRefs;nRefs209,7442
    int                Equiv;Equiv210,7472
    int                Fan[3];Fan211,7502
    void *             pData;pData213,7545
    int                iData;iData214,7575
    float              EstRefs;        // the number of estimated fanoutsEstRefs217,7637
    int                nFouts[2];      // the number of refs in each polaritynFouts218,7711
    Amap_Mat_t         Best;           // the best match of the nodeBest219,7789
static inline Amap_Obj_t * Amap_Regular( Amap_Obj_t * p )                          { return (Amap_Obj_t *)((ABC_PTRUINT_T)(p) & ~01);  }Amap_Regular222,7862
static inline Amap_Obj_t * Amap_Not( Amap_Obj_t * p )                              { return (Amap_Obj_t *)((ABC_PTRUINT_T)(p) ^  01);  }Amap_Not223,7999
static inline Amap_Obj_t * Amap_NotCond( Amap_Obj_t * p, int c )                   { return (Amap_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c));  }Amap_NotCond224,8136
static inline int          Amap_IsComplement( Amap_Obj_t * p )                     { return (int )(((ABC_PTRUINT_T)p) & 01);           }Amap_IsComplement225,8273
static inline int          Amap_ManPiNum( Amap_Man_t * p )                         { return p->nObjs[AMAP_OBJ_PI];                      }Amap_ManPiNum227,8411
static inline int          Amap_ManPoNum( Amap_Man_t * p )                         { return p->nObjs[AMAP_OBJ_PO];                      }Amap_ManPoNum228,8549
static inline int          Amap_ManAndNum( Amap_Man_t * p )                        { return p->nObjs[AMAP_OBJ_AND];                     }Amap_ManAndNum229,8687
static inline int          Amap_ManXorNum( Amap_Man_t * p )                        { return p->nObjs[AMAP_OBJ_XOR];                     }Amap_ManXorNum230,8825
static inline int          Amap_ManMuxNum( Amap_Man_t * p )                        { return p->nObjs[AMAP_OBJ_MUX];                     }Amap_ManMuxNum231,8963
static inline int          Amap_ManObjNum( Amap_Man_t * p )                        { return Vec_PtrSize(p->vObjs);                      }Amap_ManObjNum232,9101
static inline int          Amap_ManNodeNum( Amap_Man_t * p )                       { return p->nObjs[AMAP_OBJ_AND] + p->nObjs[AMAP_OBJ_XOR] + p->nObjs[AMAP_OBJ_MUX];   }Amap_ManNodeNum233,9239
static inline Amap_Obj_t * Amap_ManConst1( Amap_Man_t * p )                        { return p->pConst1;                                 }Amap_ManConst1235,9410
static inline Amap_Obj_t * Amap_ManPi( Amap_Man_t * p, int i )                     { return (Amap_Obj_t *)Vec_PtrEntry( p->vPis, i );   }Amap_ManPi236,9548
static inline Amap_Obj_t * Amap_ManPo( Amap_Man_t * p, int i )                     { return (Amap_Obj_t *)Vec_PtrEntry( p->vPos, i );   }Amap_ManPo237,9686
static inline Amap_Obj_t * Amap_ManObj( Amap_Man_t * p, int i )                    { return (Amap_Obj_t *)Vec_PtrEntry( p->vObjs, i );  }Amap_ManObj238,9824
static inline int          Amap_ObjIsConst1( Amap_Obj_t * pObj )                   { return pObj->Type == AMAP_OBJ_CONST1;              }Amap_ObjIsConst1240,9963
static inline int          Amap_ObjIsPi( Amap_Obj_t * pObj )                       { return pObj->Type == AMAP_OBJ_PI;                  }Amap_ObjIsPi241,10101
static inline int          Amap_ObjIsPo( Amap_Obj_t * pObj )                       { return pObj->Type == AMAP_OBJ_PO;                  }Amap_ObjIsPo242,10239
static inline int          Amap_ObjIsAnd( Amap_Obj_t * pObj )                      { return pObj->Type == AMAP_OBJ_AND;                 }Amap_ObjIsAnd243,10377
static inline int          Amap_ObjIsXor( Amap_Obj_t * pObj )                      { return pObj->Type == AMAP_OBJ_XOR;                 }Amap_ObjIsXor244,10515
static inline int          Amap_ObjIsMux( Amap_Obj_t * pObj )                      { return pObj->Type == AMAP_OBJ_MUX;                 }Amap_ObjIsMux245,10653
static inline int          Amap_ObjIsNode( Amap_Obj_t * pObj )                     { return pObj->Type == AMAP_OBJ_AND || pObj->Type == AMAP_OBJ_XOR || pObj->Type == AMAP_OBJ_MUX;  }Amap_ObjIsNode246,10791
static inline int          Amap_ObjToLit( Amap_Obj_t * pObj )                      { return Abc_Var2Lit( Amap_Regular(pObj)->Id, Amap_IsComplement(pObj) ); }Amap_ObjToLit248,10975
static inline Amap_Obj_t * Amap_ObjFanin0( Amap_Man_t * p, Amap_Obj_t * pObj )     { return Amap_ManObj(p, Abc_Lit2Var(pObj->Fan[0])); }Amap_ObjFanin0249,11133
static inline Amap_Obj_t * Amap_ObjFanin1( Amap_Man_t * p, Amap_Obj_t * pObj )     { return Amap_ManObj(p, Abc_Lit2Var(pObj->Fan[1])); }Amap_ObjFanin1250,11270
static inline Amap_Obj_t * Amap_ObjFanin2( Amap_Man_t * p, Amap_Obj_t * pObj )     { return Amap_ManObj(p, Abc_Lit2Var(pObj->Fan[2])); }Amap_ObjFanin2251,11407
static inline int          Amap_ObjFaninC0( Amap_Obj_t * pObj )                    { return Abc_LitIsCompl(pObj->Fan[0]);              }Amap_ObjFaninC0252,11544
static inline int          Amap_ObjFaninC1( Amap_Obj_t * pObj )                    { return Abc_LitIsCompl(pObj->Fan[1]);              }Amap_ObjFaninC1253,11681
static inline int          Amap_ObjFaninC2( Amap_Obj_t * pObj )                    { return Abc_LitIsCompl(pObj->Fan[2]);              }Amap_ObjFaninC2254,11818
static inline void *       Amap_ObjCopy( Amap_Obj_t * pObj )                       { return pObj->pData;                                }Amap_ObjCopy255,11955
static inline int          Amap_ObjLevel( Amap_Obj_t * pObj )                      { return pObj->Level;                                }Amap_ObjLevel256,12093
static inline void         Amap_ObjSetLevel( Amap_Obj_t * pObj, int Level )        { pObj->Level = Level;                               }Amap_ObjSetLevel257,12231
static inline void         Amap_ObjSetCopy( Amap_Obj_t * pObj, void * pCopy )      { pObj->pData = pCopy;                               }Amap_ObjSetCopy258,12369
static inline Amap_Obj_t * Amap_ObjChoice( Amap_Man_t * p, Amap_Obj_t * pObj )     { return pObj->Equiv? Amap_ManObj(p, pObj->Equiv) : NULL; }Amap_ObjChoice259,12507
static inline void         Amap_ObjSetChoice( Amap_Obj_t * pObj, Amap_Obj_t * pEqu){ assert(pObj->Equiv==0); if (pObj->Id != pEqu->Id) pObj->Equiv = pEqu->Id; }Amap_ObjSetChoice260,12650
static inline int          Amap_ObjPhaseReal( Amap_Obj_t * pObj )                  { return Amap_Regular(pObj)->fPhase ^ Amap_IsComplement(pObj);   }Amap_ObjPhaseReal261,12811
static inline int          Amap_ObjRefsTotal( Amap_Obj_t * pObj )                  { return pObj->nFouts[0] + pObj->nFouts[1];          }Amap_ObjRefsTotal262,12961
static inline Amap_Gat_t * Amap_LibGate( Amap_Lib_t * p, int i ) { return (Amap_Gat_t *)Vec_PtrEntry(p->vGates, i); }Amap_LibGate264,13100
static inline Amap_Nod_t * Amap_LibNod( Amap_Lib_t * p, int i )  { return p->pNodes + i;           }Amap_LibNod265,13218
static inline Amap_Cut_t * Amap_ManCutNext( Amap_Cut_t * pCut )Amap_ManCutNext268,13376
static inline Amap_Cut_t ** Amap_ManCutNextP( Amap_Cut_t * pCut )Amap_ManCutNextP271,13566
#define Amap_ManForEachPi(Amap_ManForEachPi281,14014
#define Amap_ManForEachPo(Amap_ManForEachPo284,14186
#define Amap_ManForEachObj(Amap_ManForEachObj287,14386
#define Amap_ManForEachNode(Amap_ManForEachNode290,14579
#define Amap_LibForEachGate(Amap_LibForEachGate294,14816
#define Amap_GateForEachPin(Amap_GateForEachPin297,14998
#define Amap_NodeForEachCut(Amap_NodeForEachCut301,15191
#define Amap_LibNodeForEachSet(Amap_LibNodeForEachSet306,15439
#define Amap_MatchForEachFaninCompl(Amap_MatchForEachFaninCompl310,15618
#define Amap_MatchForEachFanin(Amap_MatchForEachFanin317,16071

src/map/amap/amapUniq.c,840
static inline int Vec_IntCheckWithMask( Vec_Int_t * p, int Entry )Vec_IntCheckWithMask45,1314
static inline void Vec_IntPushOrderWithMask( Vec_Int_t * p, int Entry )Vec_IntPushOrderWithMask65,1815
int Amap_LibFindNode( Amap_Lib_t * pLib, int iFan0, int iFan1, int fXor )Amap_LibFindNode90,2424
int Amap_LibFindMux( Amap_Lib_t * p, int iFan0, int iFan1, int iFan2 )Amap_LibFindMux109,2991
Amap_Nod_t * Amap_LibCreateObj( Amap_Lib_t * p )Amap_LibCreateObj135,3647
int Amap_LibCreateVar( Amap_Lib_t * p )Amap_LibCreateVar164,4456
int Amap_LibCreateNode( Amap_Lib_t * p, int iFan0, int iFan1, int fXor )Amap_LibCreateNode189,5063
int Amap_LibCreateMux( Amap_Lib_t * p, int iFan0, int iFan1, int iFan2 )Amap_LibCreateMux244,6881
int ** Amap_LibLookupTableAlloc( Vec_Ptr_t * vVec, int fVerbose )Amap_LibLookupTableAlloc278,8006

src/map/amap/amapGraph.c,1360
Amap_Obj_t * Amap_ManSetupObj( Amap_Man_t * p )Amap_ManSetupObj45,1262
Amap_Obj_t * Amap_ManCreateConst1( Amap_Man_t * p )Amap_ManCreateConst167,1861
Amap_Obj_t * Amap_ManCreatePi( Amap_Man_t * p )Amap_ManCreatePi88,2339
Amap_Obj_t * Amap_ManCreatePo( Amap_Man_t * p, Amap_Obj_t * pFan0 )Amap_ManCreatePo110,2881
Amap_Obj_t * Amap_ManCreateAnd( Amap_Man_t * p, Amap_Obj_t * pFan0, Amap_Obj_t * pFan1 )Amap_ManCreateAnd137,3695
Amap_Obj_t * Amap_ManCreateXor( Amap_Man_t * p, Amap_Obj_t * pFan0, Amap_Obj_t * pFan1 )Amap_ManCreateXor165,4715
Amap_Obj_t * Amap_ManCreateMux( Amap_Man_t * p, Amap_Obj_t * pFan0, Amap_Obj_t * pFan1, Amap_Obj_t * pFanC )Amap_ManCreateMux192,5665
void Amap_ManCreateChoice( Amap_Man_t * p, Amap_Obj_t * pObj )Amap_ManCreateChoice222,6900
void Amap_ManCreateXorChoices( Amap_Man_t * p, Amap_Obj_t * pFan0, Amap_Obj_t * pFan1, Amap_Obj_t * pChoices[] )Amap_ManCreateXorChoices251,7806
void Amap_ManCreateMuxChoices( Amap_Man_t * p, Amap_Obj_t * pFan0, Amap_Obj_t * pFan1, Amap_Obj_t * pFanC, Amap_Obj_t * pChoices[] )Amap_ManCreateMuxChoices270,8479
static inline Amap_Obj_t * Amap_AndToObj( Aig_Obj_t * pObj )Amap_AndToObj289,9258
Amap_Obj_t * Amap_ManGetLast_rec( Amap_Man_t * p, Amap_Obj_t * pObj )Amap_ManGetLast_rec305,9672
void Amap_ManCreate( Amap_Man_t * p, Aig_Man_t * pAig )Amap_ManCreate323,10115

src/map/amap/amapPerm.c,784
void Amap_LibCollectFanins_rec( Amap_Lib_t * pLib, Amap_Nod_t * pNod, Vec_Int_t * vFanins )Amap_LibCollectFanins_rec46,1312
Vec_Int_t * Amap_LibCollectFanins( Amap_Lib_t * pLib, Amap_Nod_t * pNod )Amap_LibCollectFanins77,2272
Vec_Int_t * Amap_LibDeriveGatePerm_rec( Amap_Lib_t * pLib, Kit_DsdNtk_t * pNtk, int iLit, Amap_Nod_t * pNod )Amap_LibDeriveGatePerm_rec95,2780
unsigned * Amap_LibVerifyPerm_rec( Amap_Lib_t * pLib, Amap_Nod_t * pNod, Amap_LibVerifyPerm_rec237,7735
void Amap_LibVerifyPerm( Amap_Lib_t * pLib, Amap_Gat_t * pGate, Kit_DsdNtk_t * pNtk, Amap_Nod_t * pNod, int * pArray )Amap_LibVerifyPerm280,9533
int Amap_LibDeriveGatePerm( Amap_Lib_t * pLib, Amap_Gat_t * pGate, Kit_DsdNtk_t * pNtk, Amap_Nod_t * pNod, char * pArray )Amap_LibDeriveGatePerm331,11463

src/map/amap/amapParse.c,1501
#define AMAP_EQN_SYM_OPEN AMAP_EQN_SYM_OPEN33,914
#define AMAP_EQN_SYM_CLOSE AMAP_EQN_SYM_CLOSE34,972
#define AMAP_EQN_SYM_CONST0 AMAP_EQN_SYM_CONST035,1030
#define AMAP_EQN_SYM_CONST1 AMAP_EQN_SYM_CONST136,1079
#define AMAP_EQN_SYM_NEG AMAP_EQN_SYM_NEG37,1128
#define AMAP_EQN_SYM_NEGAFT AMAP_EQN_SYM_NEGAFT38,1195
#define AMAP_EQN_SYM_AND AMAP_EQN_SYM_AND39,1261
#define AMAP_EQN_SYM_AND2 AMAP_EQN_SYM_AND240,1309
#define AMAP_EQN_SYM_XOR AMAP_EQN_SYM_XOR41,1357
#define AMAP_EQN_SYM_OR AMAP_EQN_SYM_OR42,1405
#define AMAP_EQN_SYM_OR2 AMAP_EQN_SYM_OR243,1452
#define AMAP_EQN_OPER_NEG AMAP_EQN_OPER_NEG46,1562
#define AMAP_EQN_OPER_AND AMAP_EQN_OPER_AND47,1609
#define AMAP_EQN_OPER_XOR AMAP_EQN_OPER_XOR48,1657
#define AMAP_EQN_OPER_OR AMAP_EQN_OPER_OR49,1705
#define AMAP_EQN_OPER_MARK AMAP_EQN_OPER_MARK50,1752
#define AMAP_EQN_FLAG_START AMAP_EQN_FLAG_START53,1882
#define AMAP_EQN_FLAG_VAR AMAP_EQN_FLAG_VAR54,1951
#define AMAP_EQN_FLAG_OPER AMAP_EQN_FLAG_OPER55,2017
#define AMAP_EQN_FLAG_ERROR AMAP_EQN_FLAG_ERROR56,2090
Hop_Obj_t * Amap_ParseFormulaOper( Hop_Man_t * pMan, Vec_Ptr_t * pStackFn, int Oper )Amap_ParseFormulaOper73,2661
Hop_Obj_t * Amap_ParseFormula( FILE * pOutput, char * pFormInit, Vec_Ptr_t * vVarNames, Hop_Man_t * pMan, char * pGateName )Amap_ParseFormula106,3758
int Amap_LibParseEquations( Amap_Lib_t * p, int fVerbose )Amap_LibParseEquations392,14920
void Amap_LibParseTest( char * pFileName )Amap_LibParseTest461,17444

src/map/amap/amapLiberty.c,6151
#define ABC_MAX_LIB_STR_LEN ABC_MAX_LIB_STR_LEN30,791
    AMAP_LIBERTY_NONE = 0,        // 0:  unknownAMAP_LIBERTY_NONE34,856
    AMAP_LIBERTY_PROC,            // 1:  procedure :  key(head){body}AMAP_LIBERTY_PROC35,905
    AMAP_LIBERTY_EQUA,            // 2:  equation  :  key:head;AMAP_LIBERTY_EQUA36,975
    AMAP_LIBERTY_LIST             // 3:  list      :  key(head) AMAP_LIBERTY_LIST37,1039
} Amap_LibertyType_t;Amap_LibertyType_t38,1104
typedef struct Amap_Pair_t_ Amap_Pair_t;Amap_Pair_t40,1127
struct Amap_Pair_t_Amap_Pair_t_41,1168
    int             Beg;          // item beginningBeg43,1190
    int             End;          // item endEnd44,1242
typedef struct Amap_Item_t_ Amap_Item_t;Amap_Item_t47,1292
struct Amap_Item_t_Amap_Item_t_48,1333
    int             Type;         // Amap_LibertyType_tType50,1355
    int             iLine;        // file line where the item's spec beginsiLine51,1411
    Amap_Pair_t     Key;          // key partKey52,1487
    Amap_Pair_t     Head;         // head part Head53,1533
    Amap_Pair_t     Body;         // body partBody54,1581
    int             Next;         // next item in the list Next55,1628
    int             Child;        // first child item Child56,1688
typedef struct Amap_Tree_t_ Amap_Tree_t;Amap_Tree_t59,1747
struct Amap_Tree_t_Amap_Tree_t_60,1788
    char *          pFileName;    // input Liberty file namepFileName62,1810
    char *          pContents;    // file contentspContents63,1871
    int             nContents;    // file sizenContents64,1922
    int             nLines;       // line counternLines65,1969
    int             nItems;       // number of itemsnItems66,2019
    int             nItermAlloc;  // number of items allocatednItermAlloc67,2072
    Amap_Item_t *   pItems;       // the itemspItems68,2135
    char *          pError;       // the error stringpError69,2182
static inline Amap_Item_t *  Amap_LibertyRoot( Amap_Tree_t * p )                                       { return p->pItems;                                                 }Amap_LibertyRoot72,2240
static inline Amap_Item_t *  Amap_LibertyItem( Amap_Tree_t * p, int v )                                { assert( v < p->nItems ); return v < 0 ? NULL : p->pItems + v;     }Amap_LibertyItem73,2413
static inline int            Amap_LibertyCompare( Amap_Tree_t * p, Amap_Pair_t Pair, char * pStr )     { return strncmp( p->pContents+Pair.Beg, pStr, Pair.End-Pair.Beg ); }Amap_LibertyCompare74,2586
static inline void           Amap_PrintWord( FILE * pFile, Amap_Tree_t * p, Amap_Pair_t Pair )         { char * pBeg = p->pContents+Pair.Beg, * pEnd = p->pContents+Pair.End; while ( pBeg < pEnd ) fputc( *pBeg++, pFile ); }Amap_PrintWord75,2759
static inline void           Amap_PrintSpace( FILE * pFile, int nOffset )                              { int i; for ( i = 0; i < nOffset; i++ ) fputc(' ', pFile);         }Amap_PrintSpace76,2982
static inline int            Amap_LibertyItemId( Amap_Tree_t * p, Amap_Item_t * pItem )                { return pItem - p->pItems;                                         }Amap_LibertyItemId77,3155
#define Amap_ItemForEachChild(Amap_ItemForEachChild79,3329
void Amap_LibertyPrintLibertyItem( FILE * pFile, Amap_Tree_t * p, Amap_Item_t * pItem, int nOffset )Amap_LibertyPrintLibertyItem97,3964
int Amap_LibertyPrintLiberty( Amap_Tree_t * p, char * pFileName )Amap_LibertyPrintLiberty143,5506
char * Amap_LibertyTimeStamp()Amap_LibertyTimeStamp175,6290
int Amap_LibertyCellIsFlop( Amap_Tree_t * p, Amap_Item_t * pCell )Amap_LibertyCellIsFlop200,6869
int Amap_LibertyCellIsDontUse( Amap_Tree_t * p, Amap_Item_t * pCell )Amap_LibertyCellIsDontUse221,7408
Amap_Item_t * Amap_LibertyPinFunction( Amap_Tree_t * p, Amap_Item_t * pPin )Amap_LibertyPinFunction241,7894
Amap_Item_t * Amap_LibertyCellOutput( Amap_Tree_t * p, Amap_Item_t * pCell )Amap_LibertyCellOutput261,8392
Vec_Ptr_t * Amap_LibertyCellOutputs( Amap_Tree_t * p, Amap_Item_t * pCell )Amap_LibertyCellOutputs273,8721
Amap_Item_t * Amap_LibertyCellArea( Amap_Tree_t * p, Amap_Item_t * pCell )Amap_LibertyCellArea299,9371
int Amap_LibertyCellCountOutputs( Amap_Tree_t * p, Amap_Item_t * pCell )Amap_LibertyCellCountOutputs322,9925
char * Amap_LibertyGetString( Amap_Tree_t * p, Amap_Pair_t Pair )   Amap_LibertyGetString347,10515
char * Amap_LibertyGetStringFormula( Amap_Tree_t * p, Amap_Pair_t Pair )   Amap_LibertyGetStringFormula367,11053
int Amap_LibertyPrintGenlib( Amap_Tree_t * p, char * pFileName, int fVerbose )Amap_LibertyPrintGenlib387,11618
Vec_Str_t * Amap_LibertyPrintGenlibStr( Amap_Tree_t * p, int fVerbose )Amap_LibertyPrintGenlibStr504,16114
int Amap_LibertyFileSize( char * pFileName )Amap_LibertyFileSize606,20476
void Amap_LibertyFixFileHead( char * pFileName )Amap_LibertyFixFileHead633,21081
int Amap_LibertyCountItems( char * pBeg, char * pEnd )Amap_LibertyCountItems652,21475
void Amap_LibertyWipeOutComments( char * pBeg, char * pEnd )Amap_LibertyWipeOutComments671,21920
static inline int Amap_LibertyCharIsSpace( char c )Amap_LibertyCharIsSpace696,22610
static inline int Amap_LibertySkipSpaces( Amap_Tree_t * p, char ** ppPos, char * pEnd, int fStopAtNewLine )Amap_LibertySkipSpaces712,23016
static inline int Amap_LibertySkipEntry( char ** ppPos, char * pEnd )Amap_LibertySkipEntry741,23748
static inline char * Amap_LibertyFindMatch( char * pPos, char * pEnd )Amap_LibertyFindMatch777,24665
static inline Amap_Pair_t Amap_LibertyUpdateHead( Amap_Tree_t * p, Amap_Pair_t Head )Amap_LibertyUpdateHead820,25653
static inline Amap_Item_t * Amap_LibertyNewItem( Amap_Tree_t * p, int Type )Amap_LibertyNewItem857,26714
int Amap_LibertyBuildItem( Amap_Tree_t * p, char ** ppPos, char * pEnd )Amap_LibertyBuildItem877,27241
Amap_Tree_t * Amap_LibertyStart( char * pFileName )Amap_LibertyStart983,30859
void Amap_LibertyStop( Amap_Tree_t * p )Amap_LibertyStop1024,32031
int Amap_LibertyParse( char * pFileName, int fVerbose )Amap_LibertyParse1044,32538
Vec_Str_t * Amap_LibertyParseStr( char * pFileName, int fVerbose )Amap_LibertyParseStr1091,33930

src/map/mio/mioFunc.c,732
#define MIO_SYMB_AND MIO_SYMB_AND31,854
#define MIO_SYMB_AND2 MIO_SYMB_AND232,882
#define MIO_SYMB_OR MIO_SYMB_OR33,910
#define MIO_SYMB_OR2 MIO_SYMB_OR234,938
#define MIO_SYMB_XOR MIO_SYMB_XOR35,966
#define MIO_SYMB_NOT MIO_SYMB_NOT36,994
#define MIO_SYMB_AFTNOT MIO_SYMB_AFTNOT37,1022
#define MIO_SYMB_OPEN MIO_SYMB_OPEN38,1051
#define MIO_SYMB_CLOSE MIO_SYMB_CLOSE39,1079
char * Mio_SopRegister( Mem_Flex_t * pMan, char * pName )Mio_SopRegister56,1605
int Mio_GateCollectNames( char * pFormula, char * pPinNames[] )Mio_GateCollectNames76,2112
int Mio_GateParseFormula( Mio_Gate_t * pGate )Mio_GateParseFormula125,3508
int Mio_LibraryParseFormulas( Mio_Library_t * pLib )Mio_LibraryParseFormulas305,9375

src/map/mio/mioForm.c,731
#define MIO_SYMB_AND MIO_SYMB_AND30,827
#define MIO_SYMB_AND2 MIO_SYMB_AND231,855
#define MIO_SYMB_OR MIO_SYMB_OR32,883
#define MIO_SYMB_OR2 MIO_SYMB_OR233,911
#define MIO_SYMB_XOR MIO_SYMB_XOR34,939
#define MIO_SYMB_NOT MIO_SYMB_NOT35,967
#define MIO_SYMB_AFTNOT MIO_SYMB_AFTNOT36,995
#define MIO_SYMB_OPEN MIO_SYMB_OPEN37,1024
#define MIO_SYMB_CLOSE MIO_SYMB_CLOSE38,1052
int Mio_LibraryParseFormulas( Mio_Library_t * pLib )Mio_LibraryParseFormulas58,1703
char * Mio_SopRegister( Mem_Flex_t * pMan, char * pName )Mio_SopRegister91,2537
int Mio_GateParseFormula( Mio_Gate_t * pGate )Mio_GateParseFormula111,3047
int Mio_GateCollectNames( char * pFormula, char * pPinNames[] )Mio_GateCollectNames265,8087

src/map/mio/exp.h,2007
#define ABC__map__mio__exp_hABC__map__mio__exp_h22,525
#define EXP_CONST0 EXP_CONST043,1464
#define EXP_CONST1 EXP_CONST144,1486
static inline Vec_Int_t * Exp_Const0()Exp_Const046,1509
static inline Vec_Int_t * Exp_Const1()Exp_Const153,1658
static inline int Exp_IsConst( Vec_Int_t * p )Exp_IsConst60,1807
static inline int Exp_IsConst0( Vec_Int_t * p )Exp_IsConst064,1937
static inline int Exp_IsConst1( Vec_Int_t * p )Exp_IsConst168,2033
static inline Vec_Int_t * Exp_Var( int iVar )Exp_Var72,2129
static inline int Exp_LitShift( int nVars, int Lit, int Shift )Exp_LitShift79,2283
static inline int Exp_IsLit( Vec_Int_t * p )Exp_IsLit85,2426
static inline int Exp_NodeNum( Vec_Int_t * p )Exp_NodeNum89,2526
static inline Vec_Int_t * Exp_Not( Vec_Int_t * p )Exp_Not93,2606
static inline void Exp_PrintLit( int nVars, int Lit )Exp_PrintLit98,2729
static inline void Exp_Print( int nVars, Vec_Int_t * p )Exp_Print109,3085
static inline Vec_Int_t * Exp_Reverse( Vec_Int_t * p )Exp_Reverse124,3531
static inline void Exp_PrintReverse( int nVars, Vec_Int_t * p )Exp_PrintReverse129,3634
static inline Vec_Int_t * Exp_And( int * pMan, int nVars, Vec_Int_t * p0, Vec_Int_t * p1, int fCompl0, int fCompl1 )Exp_And135,3773
static inline Vec_Int_t * Exp_Or( int * pMan, int nVars, Vec_Int_t * p0, Vec_Int_t * p1 )Exp_Or150,4490
static inline Vec_Int_t * Exp_Xor( int * pMan, int nVars, Vec_Int_t * p0, Vec_Int_t * p1 )Exp_Xor154,4642
static inline word Exp_Truth6Lit( int nVars, int Lit, word * puFanins, word * puNodes )Exp_Truth6Lit173,5579
static inline word Exp_Truth6( int nVars, Vec_Int_t * p, word * puFanins )Exp_Truth6183,5928
static inline void Exp_Truth8( int nVars, Vec_Int_t * p, word ** puFanins, word * puRes )Exp_Truth8205,6762
static inline void Exp_TruthLit( int nVars, int Lit, word ** puFanins, word ** puNodes, word * pRes, int nWords )Exp_TruthLit264,9845
static inline void Exp_Truth( int nVars, Vec_Int_t * p, word * pRes )Exp_Truth280,10449

src/map/mio/mioInt.h,4732
#define ABC__map__mio__mioInt_hABC__map__mio__mioInt_h20,519
#define    MIO_STRING_GATE MIO_STRING_GATE43,1196
#define    MIO_STRING_LATCH MIO_STRING_LATCH44,1236
#define    MIO_STRING_PIN MIO_STRING_PIN45,1277
#define    MIO_STRING_NONINV MIO_STRING_NONINV46,1316
#define    MIO_STRING_INV MIO_STRING_INV47,1358
#define    MIO_STRING_UNKNOWN MIO_STRING_UNKNOWN48,1397
#define    MIO_STRING_CONST0 MIO_STRING_CONST050,1441
#define    MIO_STRING_CONST1 MIO_STRING_CONST151,1483
#define    MIO_MASK(MIO_MASK54,1544
#define    MIO_FULL MIO_FULL55,1606
struct  Mio_LibraryStruct_t_Mio_LibraryStruct_t_61,1876
    char *             pName;       // the name of the librarypName63,1907
    int                nGates;      // the number of the gatesnGates64,1970
    Mio_Gate_t **      ppGates0;    // the array of gates in the original orderppGates065,2033
    Mio_Gate_t **      ppGatesName; // the array of gates sorted by nameppGatesName66,2113
    Mio_Gate_t *       pGates;      // the linked list of all gates in no particular orderpGates67,2186
    Mio_Gate_t *       pGate0;      // the constant zero gatepGate068,2277
    Mio_Gate_t *       pGate1;      // the constant one gatepGate169,2339
    Mio_Gate_t *       pGateBuf;    // the bufferpGateBuf70,2400
    Mio_Gate_t *       pGateInv;    // the inverterpGateInv71,2450
    Mio_Gate_t *       pGateNand2;  // the NAND2 gatepGateNand272,2502
    Mio_Gate_t *       pGateAnd2;   // the AND2 gatepGateAnd273,2556
    Mio_Gate_t *       pGateNor2;   // the NOR2 gatepGateNor274,2609
    Mio_Gate_t *       pGateOr2;    // the OR2 gatepGateOr275,2662
    st__table *         tName2Gate;  // the mapping of gate names into their pointertName2Gate76,2714
    Mem_Flex_t *       pMmFlex;     // the memory manaqer for SOPspMmFlex77,2799
    Vec_Str_t *        vCube;       // temporary cubevCube78,2866
    int                fPinFilter;  // pin filteringfPinFilter80,2936
    int                fPinPerm;    // pin permutationfPinPerm81,2989
    int                fPinQuick;   // pin permutationfPinQuick82,3044
    Vec_Mem_t *        vTtMem;      // truth tablesvTtMem83,3099
    Vec_Wec_t *        vTt2Match;   // matches for truth tablesvTt2Match84,3151
    Mio_Cell2_t *      pCells;      // library gatespCells85,3215
    int                nCells;      // library gate countnCells86,3268
    Vec_Ptr_t *        vNames;vNames87,3326
    Vec_Wrd_t *        vTruths; vTruths88,3357
    Vec_Int_t *        vTt2Match4;vTt2Match489,3390
    Vec_Int_t *        vConfigs;vConfigs90,3425
    Vec_Mem_t *        vTtMem2[3]; vTtMem291,3458
    Vec_Int_t *        vTt2Match2[3];vTt2Match292,3494
struct  Mio_GateStruct_t_Mio_GateStruct_t_95,3537
    char *             pName;       // the name of the gatepName98,3613
    double             dArea;       // the area of the gatedArea99,3673
    char *             pForm;       // the formula describing functionality of the gatepForm100,3733
    Mio_Pin_t *        pPins;       // the linked list of all pins (one pin if info is the same)pPins101,3821
    char *             pOutName;    // the name of the output pin pOutName102,3918
    Mio_Library_t *    pLib; pLib104,4031
    Mio_Gate_t *       pNext;    pNext106,4094
    Mio_Gate_t *       pTwin;    pTwin107,4128
    int                Cell;        // cell idCell110,4194
    int                nInputs;     // the number of inputsnInputs111,4241
    int                Profile;     // the number of occurrencesProfile112,4301
    int                Profile2;    // the number of occurrencesProfile2113,4366
    double             dDelayMax;   // the maximum delaydDelayMax114,4431
    char *             pSop;        // sum-of-productspSop115,4488
    Vec_Int_t *        vExpr;       // boolean expressionvExpr116,4543
    union { word       uTruth;      // truth tableuTruth117,4601
    word *             pTruth; };   // pointer to the truth tablepTruth118,4652
    int                Value;       // user's informationValue119,4718
struct  Mio_PinStruct_t_Mio_PinStruct_t_122,4780
    char *             pName;pName124,4807
    Mio_PinPhase_t     Phase;Phase125,4837
    double             dLoadInput;dLoadInput126,4867
    double             dLoadMax;dLoadMax127,4902
    double             dDelayBlockRise;dDelayBlockRise128,4935
    double             dDelayFanoutRise;dDelayFanoutRise129,4975
    double             dDelayBlockFall;dDelayBlockFall130,5016
    double             dDelayFanoutFall;dDelayFanoutFall131,5056
    double             dDelayBlockMax;dDelayBlockMax132,5097
    Mio_Pin_t *        pNext;     pNext133,5136

src/map/mio/mioParse.c,1671
#define MIO_EQN_SYM_OPEN MIO_EQN_SYM_OPEN30,819
#define MIO_EQN_SYM_CLOSE MIO_EQN_SYM_CLOSE31,876
#define MIO_EQN_SYM_CONST0 MIO_EQN_SYM_CONST032,933
#define MIO_EQN_SYM_CONST1 MIO_EQN_SYM_CONST133,981
#define MIO_EQN_SYM_NEG MIO_EQN_SYM_NEG34,1029
#define MIO_EQN_SYM_NEGAFT MIO_EQN_SYM_NEGAFT35,1095
#define MIO_EQN_SYM_AND MIO_EQN_SYM_AND36,1160
#define MIO_EQN_SYM_AND2 MIO_EQN_SYM_AND237,1207
#define MIO_EQN_SYM_XOR MIO_EQN_SYM_XOR38,1254
#define MIO_EQN_SYM_OR MIO_EQN_SYM_OR39,1301
#define MIO_EQN_SYM_OR2 MIO_EQN_SYM_OR240,1347
#define MIO_EQN_OPER_NEG MIO_EQN_OPER_NEG43,1456
#define MIO_EQN_OPER_AND MIO_EQN_OPER_AND44,1502
#define MIO_EQN_OPER_XOR MIO_EQN_OPER_XOR45,1549
#define MIO_EQN_OPER_OR MIO_EQN_OPER_OR46,1596
#define MIO_EQN_OPER_MARK MIO_EQN_OPER_MARK47,1642
#define MIO_EQN_FLAG_START MIO_EQN_FLAG_START50,1771
#define MIO_EQN_FLAG_VAR MIO_EQN_FLAG_VAR51,1839
#define MIO_EQN_FLAG_OPER MIO_EQN_FLAG_OPER52,1904
#define MIO_EQN_FLAG_ERROR MIO_EQN_FLAG_ERROR53,1976
Vec_Int_t * Mio_ParseFormulaOper( int * pMan, int nVars, Vec_Ptr_t * pStackFn, int Oper )Mio_ParseFormulaOper70,2546
Vec_Int_t * Mio_ParseFormula( char * pFormInit, char ** ppVarNames, int nVars )Mio_ParseFormula105,3722
Vec_Wrd_t * Mio_ParseFormulaTruth( char * pFormInit, char ** ppVarNames, int nVars )Mio_ParseFormulaTruth396,14875
void Mio_ParseFormulaTruthTest( char * pFormInit, char ** ppVarNames, int nVars )Mio_ParseFormulaTruthTest410,15334
int Mio_ParseCheckName( Mio_Gate_t * pGate, char ** ppStr )Mio_ParseCheckName429,15928
int Mio_ParseCheckFormula( Mio_Gate_t * pGate, char * pForm )Mio_ParseCheckFormula444,16571

src/map/mio/mioSop.c,1636
static inline unsigned Mio_CubeVar0( int v )                       { return (1<< (v<<1)   );                   }Mio_CubeVar029,764
static inline unsigned Mio_CubeVar1( int v )                       { return (1<<((v<<1)+1));                   }Mio_CubeVar130,877
static inline int      Mio_CubeHasVar0( unsigned x, int v )        { return (x & Mio_CubeVar0(v)) > 0;         }Mio_CubeHasVar031,990
static inline int      Mio_CubeHasVar1( unsigned x, int v )        { return (x & Mio_CubeVar1(v)) > 0;         }Mio_CubeHasVar132,1103
static inline int      Mio_CubeEmpty( unsigned x )                 { return (x & (x>>1) & 0x55555555) != 0;    }Mio_CubeEmpty33,1216
static inline unsigned Mio_CubeAnd( unsigned x, unsigned y )       { return x | y;                             }Mio_CubeAnd34,1329
static inline int      Mio_CubeContains( unsigned x, unsigned y )  { return (x | y) == y;                      } // x contains yMio_CubeContains35,1442
void Mio_SopPushSCC( Vec_Int_t * p, unsigned c )Mio_SopPushSCC52,2052
Vec_Int_t * Mio_SopCoverOr( Vec_Int_t * p, Vec_Int_t * q )Mio_SopCoverOr82,2771
Vec_Int_t * Mio_SopCoverAnd( Vec_Int_t * p, Vec_Int_t * q )Mio_SopCoverAnd106,3364
Vec_Int_t * Mio_SopVar0( int i )Mio_SopVar0130,4035
Vec_Int_t * Mio_SopVar1( int i )Mio_SopVar1149,4442
Vec_Int_t * Mio_SopConst0()Mio_SopConst0168,4851
Vec_Int_t * Mio_SopConst1()Mio_SopConst1186,5213
char * Mio_SopDeriveFromArray( Vec_Int_t * vSop, int nVars, Vec_Str_t * vStr, int fPolarity )Mio_SopDeriveFromArray205,5623
char * Mio_LibDeriveSop( int nVars, Vec_Int_t * vExpr, Vec_Str_t * vStr )Mio_LibDeriveSop257,7164

src/map/mio/mio.h,2223
#define ABC__map__mio__mio_hABC__map__mio__mio_h20,512
typedef enum { MIO_PHASE_UNKNOWN, MIO_PHASE_INV, MIO_PHASE_NONINV } Mio_PinPhase_t;MIO_PHASE_UNKNOWN40,1234
typedef enum { MIO_PHASE_UNKNOWN, MIO_PHASE_INV, MIO_PHASE_NONINV } Mio_PinPhase_t;MIO_PHASE_INV40,1234
typedef enum { MIO_PHASE_UNKNOWN, MIO_PHASE_INV, MIO_PHASE_NONINV } Mio_PinPhase_t;MIO_PHASE_NONINV40,1234
typedef enum { MIO_PHASE_UNKNOWN, MIO_PHASE_INV, MIO_PHASE_NONINV } Mio_PinPhase_t;Mio_PinPhase_t40,1234
typedef struct  Mio_LibraryStruct_t_      Mio_Library_t;Mio_Library_t42,1319
typedef struct  Mio_GateStruct_t_         Mio_Gate_t;Mio_Gate_t43,1376
typedef struct  Mio_PinStruct_t_          Mio_Pin_t;Mio_Pin_t44,1430
typedef struct Mio_Cell_t_ Mio_Cell_t; Mio_Cell_t46,1484
struct Mio_Cell_t_Mio_Cell_t_47,1524
    char *          pName;          // namepName49,1545
    unsigned        Id       : 28;  // gate IDId50,1589
    unsigned        nFanins  :  4;  // gate faninsnFanins51,1636
    float           Area;           // areaArea52,1687
    word            uTruth;         // truth tableuTruth53,1731
    float           Delays[6];      // delayDelays54,1782
typedef struct Mio_Cell2_t_ Mio_Cell2_t; Mio_Cell2_t57,1831
struct Mio_Cell2_t_Mio_Cell2_t_58,1873
    char *          pName;          // namepName60,1895
    Vec_Int_t *     vExpr;          // expressionvExpr61,1939
    unsigned        Id       : 26;  // gate IDId62,1989
    unsigned        Type     :  2;  // gate typeType63,2036
    unsigned        nFanins  :  4;  // gate faninsnFanins64,2085
    float           AreaF;          // areaAreaF65,2136
    word            AreaW;          // areaAreaW66,2180
    word            uTruth;         // truth tableuTruth67,2224
    int             iDelayAve;      // average delayiDelayAve68,2275
    int             iDelays[6];     // delayiDelays69,2328
    void *          pMioGate;       // gate pointerpMioGate70,2373
#define Mio_LibraryForEachGate(Mio_LibraryForEachGate81,2870
#define Mio_LibraryForEachGateSafe(Mio_LibraryForEachGateSafe85,3104
#define Mio_GateForEachPin(Mio_GateForEachPin92,3482
#define Mio_GateForEachPinSafe(Mio_GateForEachPinSafe96,3713

src/map/mio/mio.c,1071
#define _BSD_SOURCE_BSD_SOURCE19,482
void Mio_Init( Abc_Frame_t * pAbc )Mio_Init86,3584
void Mio_End( Abc_Frame_t * pAbc )Mio_End114,4748
void Mio_UpdateGenlib( Mio_Library_t * pLib )Mio_UpdateGenlib131,5145
int Mio_UpdateGenlib2( Vec_Str_t * vStr, Vec_Str_t * vStr2, char * pFileName, int fVerbose )Mio_UpdateGenlib2148,5686
int Mio_CommandReadLiberty( Abc_Frame_t * pAbc, int argc, char **argv )Mio_CommandReadLiberty189,6862
int Mio_CommandReadGenlib( Abc_Frame_t * pAbc, int argc, char **argv )Mio_CommandReadGenlib281,9628
int Mio_CommandWriteGenlib( Abc_Frame_t * pAbc, int argc, char **argv )Mio_CommandWriteGenlib406,13915
int Mio_CommandPrintGenlib( Abc_Frame_t * pAbc, int argc, char **argv )Mio_CommandPrintGenlib487,16426
int Mio_CommandReadProfile( Abc_Frame_t * pAbc, int argc, char **argv )Mio_CommandReadProfile550,18199
int Mio_CommandWriteProfile( Abc_Frame_t * pAbc, int argc, char **argv )Mio_CommandWriteProfile620,20092
int Mio_CommandPrintProfile( Abc_Frame_t * pAbc, int argc, char **argv )Mio_CommandPrintProfile683,21801

src/map/mio/mioRead.c,1717
Mio_Library_t * Mio_LibraryRead( char * FileName, char * pBuffer, char * ExcludeFile, int fVerbose )Mio_LibraryRead54,2072
char * Mio_ReadFile( char * FileName, int fAddEnd )Mio_ReadFile114,4011
Mio_Library_t * Mio_LibraryReadBuffer( char * pBuffer, int fExtendedFormat, st__table * tExcludeGate, int fVerbose )Mio_LibraryReadBuffer155,5213
Mio_Library_t * Mio_LibraryReadOne( char * FileName, int fExtendedFormat, st__table * tExcludeGate, int fVerbose )Mio_LibraryReadOne199,6448
int Mio_LibraryReadInternal( Mio_Library_t * pLib, char * pBuffer, int fExtendedFormat, st__table * tExcludeGate, int fVerbose )Mio_LibraryReadInternal228,7389
char * Mio_LibraryCleanStr( char * p )Mio_LibraryCleanStr335,10641
Mio_Gate_t * Mio_LibraryReadGate( char ** ppToken, int fExtendedFormat )Mio_LibraryReadGate359,11432
Mio_Pin_t * Mio_LibraryReadPin( char ** ppToken, int fExtendedFormat )Mio_LibraryReadPin429,13160
char * chomp( char *s )chomp512,15393
int Mio_LibraryCompareGatesByArea( Mio_Gate_t ** pp1, Mio_Gate_t ** pp2 )Mio_LibraryCompareGatesByArea541,16041
int Mio_LibraryCompareGatesByName( Mio_Gate_t ** pp1, Mio_Gate_t ** pp2 )Mio_LibraryCompareGatesByName562,16508
void Mio_LibrarySortGates( Mio_Library_t * pLib )Mio_LibrarySortGates583,16977
static inline Mio_Gate_t * Mio_GateCompare( Mio_Gate_t * pThis, Mio_Gate_t * pNew, word uTruth )Mio_GateCompare617,18017
void Mio_LibraryDetectSpecialGates( Mio_Library_t * pLib )Mio_LibraryDetectSpecialGates627,18371
int Mio_LibraryReadExclude( char * ExcludeFile, st__table * tExcludeGate )Mio_LibraryReadExclude685,20671
void Io_ReadFileRemoveComments( char * pBuffer, int * pnDots, int * pnLines )Io_ReadFileRemoveComments729,21790

src/map/mio/mioApi.c,9623
char *            Mio_LibraryReadName          ( Mio_Library_t * pLib )  { return pLib->pName;      }Mio_LibraryReadName43,1209
int               Mio_LibraryReadGateNum       ( Mio_Library_t * pLib )  { return pLib->nGates;     }Mio_LibraryReadGateNum44,1311
Mio_Gate_t *      Mio_LibraryReadGates         ( Mio_Library_t * pLib )  { return pLib->pGates;     }Mio_LibraryReadGates45,1413
Mio_Gate_t **     Mio_LibraryReadGateArray     ( Mio_Library_t * pLib )  { return pLib->ppGatesName;}Mio_LibraryReadGateArray46,1515
Mio_Gate_t *      Mio_LibraryReadGateById      ( Mio_Library_t * pLib, int Id ) { assert( pLib->ppGates0[Id]->Cell == Id ); return pLib->ppGates0[Id];}Mio_LibraryReadGateById47,1617
Mio_Gate_t *      Mio_LibraryReadBuf           ( Mio_Library_t * pLib )  { return pLib->pGateBuf;   }Mio_LibraryReadBuf48,1769
Mio_Gate_t *      Mio_LibraryReadInv           ( Mio_Library_t * pLib )  { return pLib->pGateInv;   }Mio_LibraryReadInv49,1871
Mio_Gate_t *      Mio_LibraryReadConst0        ( Mio_Library_t * pLib )  { return pLib->pGate0;     }Mio_LibraryReadConst050,1973
Mio_Gate_t *      Mio_LibraryReadConst1        ( Mio_Library_t * pLib )  { return pLib->pGate1;     }Mio_LibraryReadConst151,2075
Mio_Gate_t *      Mio_LibraryReadNand2         ( Mio_Library_t * pLib )  { return pLib->pGateNand2; }Mio_LibraryReadNand252,2177
Mio_Gate_t *      Mio_LibraryReadAnd2          ( Mio_Library_t * pLib )  { return pLib->pGateAnd2;  }Mio_LibraryReadAnd253,2279
Mio_Gate_t *      Mio_LibraryReadNor2          ( Mio_Library_t * pLib )  { return pLib->pGateNor2;  }Mio_LibraryReadNor254,2381
Mio_Gate_t *      Mio_LibraryReadOr2           ( Mio_Library_t * pLib )  { return pLib->pGateOr2;   }Mio_LibraryReadOr255,2483
float             Mio_LibraryReadDelayInvRise  ( Mio_Library_t * pLib )  { return (float)(pLib->pGateInv?   pLib->pGateInv->pPins->dDelayBlockRise   : 0.0); }Mio_LibraryReadDelayInvRise56,2585
float             Mio_LibraryReadDelayInvFall  ( Mio_Library_t * pLib )  { return (float)(pLib->pGateInv?   pLib->pGateInv->pPins->dDelayBlockFall   : 0.0); }Mio_LibraryReadDelayInvFall57,2744
float             Mio_LibraryReadDelayInvMax   ( Mio_Library_t * pLib )  { return (float)(pLib->pGateInv?   pLib->pGateInv->pPins->dDelayBlockMax    : 0.0); }Mio_LibraryReadDelayInvMax58,2903
float             Mio_LibraryReadDelayNand2Rise( Mio_Library_t * pLib )  { return (float)(pLib->pGateNand2? pLib->pGateNand2->pPins->dDelayBlockRise : 0.0); }Mio_LibraryReadDelayNand2Rise59,3062
float             Mio_LibraryReadDelayNand2Fall( Mio_Library_t * pLib )  { return (float)(pLib->pGateNand2? pLib->pGateNand2->pPins->dDelayBlockFall : 0.0); }Mio_LibraryReadDelayNand2Fall60,3221
float             Mio_LibraryReadDelayNand2Max ( Mio_Library_t * pLib )  { return (float)(pLib->pGateNand2? pLib->pGateNand2->pPins->dDelayBlockMax  : 0.0); }Mio_LibraryReadDelayNand2Max61,3380
float             Mio_LibraryReadDelayAnd2Max  ( Mio_Library_t * pLib )  { return (float)(pLib->pGateAnd2?  pLib->pGateAnd2->pPins->dDelayBlockMax   : 0.0); }Mio_LibraryReadDelayAnd2Max62,3539
float             Mio_LibraryReadDelayAigNode  ( Mio_Library_t * pLib )  { return pLib->pGateAnd2 ? Mio_LibraryReadDelayAnd2Max(pLib) : Mio_LibraryReadDelayNand2Max(pLib); } // approximate delay of the AIG nodeMio_LibraryReadDelayAigNode63,3698
float             Mio_LibraryReadAreaInv       ( Mio_Library_t * pLib )  { return (float)(pLib->pGateInv?   pLib->pGateInv->dArea   : 0.0); }Mio_LibraryReadAreaInv64,3909
float             Mio_LibraryReadAreaBuf       ( Mio_Library_t * pLib )  { return (float)(pLib->pGateBuf?   pLib->pGateBuf->dArea   : 0.0); }Mio_LibraryReadAreaBuf65,4051
float             Mio_LibraryReadAreaNand2     ( Mio_Library_t * pLib )  { return (float)(pLib->pGateNand2? pLib->pGateNand2->dArea : 0.0); }Mio_LibraryReadAreaNand266,4193
void              Mio_LibrarySetName           ( Mio_Library_t * pLib, char * pName ) { ABC_FREE(pLib->pName); pLib->pName = pName;         }Mio_LibrarySetName67,4335
int Mio_LibraryReadGateNameMax( Mio_Library_t * pLib )Mio_LibraryReadGateNameMax80,4742
Mio_Gate_t * Mio_LibraryReadGateByName( Mio_Library_t * pLib, char * pName, char * pOutName )      Mio_LibraryReadGateByName104,5302
Mio_Gate_t * Mio_LibraryReadGateByTruth( Mio_Library_t * pLib, word t )Mio_LibraryReadGateByTruth129,6044
char * Mio_LibraryReadSopByName( Mio_Library_t * pLib, char * pName )      Mio_LibraryReadSopByName149,6550
char *            Mio_GateReadName     ( Mio_Gate_t * pGate )            { return pGate->pName;     }Mio_GateReadName168,7001
char *            Mio_GateReadOutName  ( Mio_Gate_t * pGate )            { return pGate->pOutName;  }Mio_GateReadOutName169,7103
double            Mio_GateReadArea     ( Mio_Gate_t * pGate )            { return pGate->dArea;     }Mio_GateReadArea170,7205
char *            Mio_GateReadForm     ( Mio_Gate_t * pGate )            { return pGate->pForm;     }Mio_GateReadForm171,7307
Mio_Pin_t *       Mio_GateReadPins     ( Mio_Gate_t * pGate )            { return pGate->pPins;     }Mio_GateReadPins172,7409
Mio_Library_t *   Mio_GateReadLib      ( Mio_Gate_t * pGate )            { return pGate->pLib;      }Mio_GateReadLib173,7511
Mio_Gate_t *      Mio_GateReadNext     ( Mio_Gate_t * pGate )            { return pGate->pNext;     }Mio_GateReadNext174,7613
Mio_Gate_t *      Mio_GateReadTwin     ( Mio_Gate_t * pGate )            { return pGate->pTwin;     }Mio_GateReadTwin175,7715
int               Mio_GateReadPinNum   ( Mio_Gate_t * pGate )            { return pGate->nInputs;   }Mio_GateReadPinNum176,7817
double            Mio_GateReadDelayMax ( Mio_Gate_t * pGate )            { return pGate->dDelayMax; }Mio_GateReadDelayMax177,7919
char *            Mio_GateReadSop      ( Mio_Gate_t * pGate )            { return pGate->pSop;      }Mio_GateReadSop178,8021
Vec_Int_t *       Mio_GateReadExpr     ( Mio_Gate_t * pGate )            { return pGate->vExpr;     }Mio_GateReadExpr179,8123
word              Mio_GateReadTruth    ( Mio_Gate_t * pGate )            { return pGate->nInputs <= 6 ? pGate->uTruth : 0;   }Mio_GateReadTruth180,8225
word *            Mio_GateReadTruthP   ( Mio_Gate_t * pGate )            { return pGate->nInputs <= 6 ? &pGate->uTruth: pGate->pTruth; }Mio_GateReadTruthP181,8352
int               Mio_GateReadValue    ( Mio_Gate_t * pGate )            { return pGate->Value;     }Mio_GateReadValue182,8489
int               Mio_GateReadCell     ( Mio_Gate_t * pGate )            { return pGate->Cell;      }Mio_GateReadCell183,8591
int               Mio_GateReadProfile  ( Mio_Gate_t * pGate )            { return pGate->Profile;   }Mio_GateReadProfile184,8693
int               Mio_GateReadProfile2 ( Mio_Gate_t * pGate )            { return pGate->Profile2;  }Mio_GateReadProfile2185,8795
void              Mio_GateSetValue     ( Mio_Gate_t * pGate, int Value ) { pGate->Value = Value;    }Mio_GateSetValue186,8897
void              Mio_GateSetCell      ( Mio_Gate_t * pGate, int Cell )  { pGate->Cell  = Cell;     }Mio_GateSetCell187,8999
void              Mio_GateSetProfile   ( Mio_Gate_t * pGate, int Prof )  { pGate->Profile = Prof;   }Mio_GateSetProfile188,9101
void              Mio_GateSetProfile2  ( Mio_Gate_t * pGate, int Prof )  { pGate->Profile2 = Prof;  }Mio_GateSetProfile2189,9203
void              Mio_GateIncProfile2  ( Mio_Gate_t * pGate )            { pGate->Profile2++;       }Mio_GateIncProfile2190,9305
void              Mio_GateDecProfile2  ( Mio_Gate_t * pGate )            { pGate->Profile2--;       }Mio_GateDecProfile2191,9407
void              Mio_GateAddToProfile ( Mio_Gate_t * pGate, int Prof )  { pGate->Profile  += Prof; }Mio_GateAddToProfile192,9509
void              Mio_GateAddToProfile2( Mio_Gate_t * pGate, int Prof )  { pGate->Profile2 += Prof; }Mio_GateAddToProfile2193,9611
int               Mio_GateIsInv        ( Mio_Gate_t * pGate )            { return pGate->uTruth == ABC_CONST(0x5555555555555555); }Mio_GateIsInv194,9713
char *            Mio_PinReadName           ( Mio_Pin_t * pPin )      { return pPin->pName;           }Mio_PinReadName207,10080
Mio_PinPhase_t    Mio_PinReadPhase          ( Mio_Pin_t * pPin )      { return pPin->Phase;           }Mio_PinReadPhase208,10184
double            Mio_PinReadInputLoad      ( Mio_Pin_t * pPin )      { return pPin->dLoadInput;      }Mio_PinReadInputLoad209,10288
double            Mio_PinReadMaxLoad        ( Mio_Pin_t * pPin )      { return pPin->dLoadMax;        }Mio_PinReadMaxLoad210,10392
double            Mio_PinReadDelayBlockRise ( Mio_Pin_t * pPin )      { return pPin->dDelayBlockRise; }Mio_PinReadDelayBlockRise211,10496
double            Mio_PinReadDelayFanoutRise( Mio_Pin_t * pPin )      { return pPin->dDelayFanoutRise;}Mio_PinReadDelayFanoutRise212,10600
double            Mio_PinReadDelayBlockFall ( Mio_Pin_t * pPin )      { return pPin->dDelayBlockFall; }Mio_PinReadDelayBlockFall213,10704
double            Mio_PinReadDelayFanoutFall( Mio_Pin_t * pPin )      { return pPin->dDelayFanoutFall;}Mio_PinReadDelayFanoutFall214,10808
double            Mio_PinReadDelayBlockMax  ( Mio_Pin_t * pPin )      { return pPin->dDelayBlockMax;  }Mio_PinReadDelayBlockMax215,10912
Mio_Pin_t *       Mio_PinReadNext           ( Mio_Pin_t * pPin )      { return pPin->pNext;           }Mio_PinReadNext216,11016
char * Mio_GateReadPinName( Mio_Gate_t * pGate, int iPin )Mio_GateReadPinName229,11355
float Mio_GateReadPinDelay( Mio_Gate_t * pGate, int iPin )Mio_GateReadPinDelay238,11579

src/map/mio/mioUtils.c,6733
void Mio_LibraryDelete( Mio_Library_t * pLib )Mio_LibraryDelete51,1423
void Mio_GateDelete( Mio_Gate_t * pGate )Mio_GateDelete86,2420
void Mio_PinDelete( Mio_Pin_t * pPin )Mio_PinDelete113,3121
Mio_Pin_t * Mio_PinDup( Mio_Pin_t * pPin )Mio_PinDup130,3450
int Mio_CheckPins( Mio_Pin_t * pPin1, Mio_Pin_t * pPin2 )Mio_CheckPins156,3993
int Mio_CheckGates( Mio_Library_t * pLib )Mio_CheckGates174,4577
void Mio_WritePin( FILE * pFile, Mio_Pin_t * pPin, int NameLen, int fAllPins )Mio_WritePin198,5147
void Mio_WriteGate( FILE * pFile, Mio_Gate_t * pGate, int GateLen, int NameLen, int FormLen, int fPrintSops, int fAllPins )Mio_WriteGate225,6047
void Mio_WriteLibrary( FILE * pFile, Mio_Library_t * pLib, int fPrintSops, int fShort, int fSelected )Mio_WriteLibrary256,7133
void Exp_PrintNodeVerilog( FILE * pFile, int nVars, Vec_Int_t * p, Vec_Ptr_t * vNames, int Node, int fCompl )Exp_PrintNodeVerilog300,8717
void Exp_PrintLitVerilog( FILE * pFile, int nVars, Vec_Int_t * p, Vec_Ptr_t * vNames, int Lit )Exp_PrintLitVerilog315,9481
void Exp_PrintVerilog( FILE * pFile, int nVars, Vec_Int_t * p, Vec_Ptr_t * vNames )Exp_PrintVerilog326,9923
void Mio_WriteGateVerilog( FILE * pFile, Mio_Gate_t * pGate, Vec_Ptr_t * vNames )Mio_WriteGateVerilog330,10084
void Mio_WriteLibraryVerilog( FILE * pFile, Mio_Library_t * pLib, int fPrintSops, int fShort, int fSelected )Mio_WriteLibraryVerilog351,10934
int Mio_DelayCompare( Mio_Gate_t ** ppG1, Mio_Gate_t ** ppG2 )Mio_DelayCompare393,12283
int Mio_AreaCompare( Mio_Cell_t * pG1, Mio_Cell_t * pG2 )Mio_AreaCompare410,12731
int Mio_AreaCompare2( Mio_Cell2_t * pG1, Mio_Cell2_t * pG2 )Mio_AreaCompare2431,13245
static inline float Mio_CellDelayAve( Mio_Cell_t * pCell )Mio_CellDelayAve464,14104
static inline float Mio_GateDelayAve( Mio_Gate_t * pGate )Mio_GateDelayAve473,14371
static inline int Mio_CompareTwoGates( Mio_Gate_t * pCell, Mio_Gate_t * pGate )Mio_CompareTwoGates483,14694
Mio_Gate_t ** Mio_CollectRoots( Mio_Library_t * pLib, int nInputs, float tDelay, int fSkipInv, int * pnGates, int fVerbose )Mio_CollectRoots509,15418
static inline int Mio_CompareTwo( Mio_Cell_t * pCell, Mio_Gate_t * pGate )Mio_CompareTwo580,18096
static inline void Mio_CollectCopy( Mio_Cell_t * pCell, Mio_Gate_t * pGate )Mio_CollectCopy606,18813
Mio_Cell_t * Mio_CollectRootsNew( Mio_Library_t * pLib, int nInputs, int * pnGates, int fVerbose )Mio_CollectRootsNew617,19240
Mio_Cell_t * Mio_CollectRootsNewDefault( int nInputs, int * pnGates, int fVerbose )Mio_CollectRootsNewDefault709,22888
static inline int Mio_CompareTwo2( Mio_Cell2_t * pCell1, Mio_Cell2_t * pCell2 )Mio_CompareTwo2726,23462
static inline void Mio_CollectCopy2( Mio_Cell2_t * pCell, Mio_Gate_t * pGate )Mio_CollectCopy2748,24034
Mio_Cell2_t * Mio_CollectRootsNew2( Mio_Library_t * pLib, int nInputs, int * pnGates, int fVerbose )Mio_CollectRootsNew2768,24752
Mio_Cell2_t * Mio_CollectRootsNewDefault2( int nInputs, int * pnGates, int fVerbose )Mio_CollectRootsNewDefault2871,28822
int Mio_CollectRootsNewDefault3( int nInputs, Vec_Ptr_t ** pvNames, Vec_Wrd_t ** pvTruths )Mio_CollectRootsNewDefault3887,29286
word Mio_DeriveTruthTable6( Mio_Gate_t * pGate )Mio_DeriveTruthTable6936,31097
void Mio_DeriveTruthTable( Mio_Gate_t * pGate, unsigned uTruthsIn[][2], int nSigns, int nInputs, unsigned uTruthRes[] )Mio_DeriveTruthTable1030,33829
int Mio_SopGetVarNum( char * pSop )Mio_SopGetVarNum1053,34555
void Mio_DeriveTruthTable2( Mio_Gate_t * pGate, unsigned uTruthsIn[][2], int nTruths, int nInputs, unsigned uTruthRes[] )Mio_DeriveTruthTable21074,35122
void Mio_DeriveGateDelays( Mio_Gate_t * pGate, Mio_DeriveGateDelays1147,37442
Mio_Gate_t * Mio_GateCreatePseudo( int nInputs )Mio_GateCreatePseudo1193,38868
void Mio_LibraryShiftDelay( Mio_Library_t * pLib, double Shift )Mio_LibraryShiftDelay1224,39697
void Mio_LibraryMultiArea( Mio_Library_t * pLib, double Multi )Mio_LibraryMultiArea1251,40390
void Mio_LibraryMultiDelay( Mio_Library_t * pLib, double Multi )Mio_LibraryMultiDelay1263,40824
void Mio_LibraryTransferDelays( Mio_Library_t * pLibD, Mio_Library_t * pLibS )Mio_LibraryTransferDelays1294,41837
void Nf_ManPrepareGate( int nVars, word uTruth, int * pComp, int * pPerm, Vec_Wrd_t * vResult )Nf_ManPrepareGate1336,43070
void Nf_ManPreparePrint( int nVars, int * pComp, int * pPerm, char Line[2*720*64][8] )Nf_ManPreparePrint1361,43810
void Nf_ManPrepareLibrary( Mio_Library_t * pLib )Nf_ManPrepareLibrary1398,45014
void Nf_ManPrepareLibraryTest2()Nf_ManPrepareLibraryTest21457,47030
void Mio_LibraryTransferCellIds()Mio_LibraryTransferCellIds1478,47520
void Mio_LibraryReadProfile( FILE * pFile, Mio_Library_t * pLib )Mio_LibraryReadProfile1517,48521
void Mio_LibraryWriteProfile( FILE * pFile, Mio_Library_t * pLib )Mio_LibraryWriteProfile1541,49245
int Mio_LibraryHasProfile( Mio_Library_t * pLib )Mio_LibraryHasProfile1549,49532
void Mio_LibraryTransferProfile( Mio_Library_t * pLibDst, Mio_Library_t * pLibSrc )Mio_LibraryTransferProfile1559,49740
void Mio_LibraryTransferProfile2( Mio_Library_t * pLibDst, Mio_Library_t * pLibSrc )Mio_LibraryTransferProfile21584,50786
void Mio_LibraryCleanProfile2( Mio_Library_t * pLib )Mio_LibraryCleanProfile21610,51838
void Mio_LibraryHashGates( Mio_Library_t * pLib )Mio_LibraryHashGates1628,52242
static inline int Abc_SclIsChar( char c )Abc_SclIsChar1655,52986
static inline int Abc_SclIsName( char c )Abc_SclIsName1659,53105
static inline char * Abc_SclFindLimit( char * pName )Abc_SclFindLimit1663,53206
static inline int Abc_SclAreEqual( char * pBase, char * pName, char * pLimit )Abc_SclAreEqual1670,53372
void Mio_LibraryShortFormula( Mio_Gate_t * pCell, char * pForm, char * pBuffer )Mio_LibraryShortFormula1674,53508
void Mio_LibraryShortNames( Mio_Library_t * pLib )Mio_LibraryShortNames1705,54257
void Mio_LibraryMatchesStop( Mio_Library_t * pLib )Mio_LibraryMatchesStop1753,55775
void Mio_LibraryMatchesStart( Mio_Library_t * pLib, int fPinFilter, int fPinPerm, int fPinQuick )Mio_LibraryMatchesStart1762,56008
void Mio_LibraryMatchesFetch( Mio_Library_t * pLib, Vec_Mem_t ** pvTtMem, Vec_Wec_t ** pvTt2Match, Mio_Cell2_t ** ppCells, int * pnCells, int fPinFilter, int fPinPerm, int fPinQuick )Mio_LibraryMatchesFetch1779,57010
void Mio_LibraryMatches2Stop( Mio_Library_t * pLib )Mio_LibraryMatches2Stop1799,57730
void Mio_LibraryMatches2Start( Mio_Library_t * pLib )Mio_LibraryMatches2Start1815,58150
void Mio_LibraryMatches2Fetch( Mio_Library_t * pLib, Vec_Ptr_t ** pvNames, Vec_Wrd_t ** pvTruths, Vec_Int_t ** pvTt2Match4, Vec_Int_t ** pvConfigs, Vec_Mem_t * pvTtMem2[3], Vec_Int_t * pvTt2Match2[3] )Mio_LibraryMatches2Fetch1824,58628

src/map/if/ifCount.h,3178
#define ABC__map__if__if_Count_hABC__map__if__if_Count_h22,558
static inline int If_LogCreateAnd( Vec_Int_t * vAig, int iLit0, int iLit1, int nSuppAll )If_LogCreateAnd57,1955
static inline int If_LogCreateMux( Vec_Int_t * vAig, int iLitC, int iLit1, int iLit0, int nSuppAll )If_LogCreateMux65,2255
static inline int If_LogCreateXor( Vec_Int_t * vAig, int iLit0, int iLit1, int nSuppAll )If_LogCreateXor72,2638
static inline int If_LogCreateAndXor( Vec_Int_t * vAig, int iLit0, int iLit1, int nSuppAll, int fXor )If_LogCreateAndXor76,2811
static inline int If_LogCreateAndXorMulti( Vec_Int_t * vAig, int * pFaninLits, int nFanins, int nSuppAll, int fXor )If_LogCreateAndXorMulti80,3031
static inline int If_LogCounterAddAig( int * pTimes, int * pnTimes, int * pFaninLits, int Num, int iLit, Vec_Int_t * vAig, int nSuppAll, int fXor, int fXorFunc )If_LogCounterAddAig88,3358
static inline int If_LogCounterDelayXor( int * pTimes, int nTimes )If_LogCounterDelayXor123,4543
static inline int  If_CutPinDelayGet( word D, int v )           { assert(v >= 0 && v < 16); return (int)((D >> (v << 2)) & 0xF);                    }If_CutPinDelayGet144,5057
static inline void If_CutPinDelaySet( word * pD, int v, int d ) { assert(v >= 0 && v < 16); assert(d >= 0 && d < 16); *pD |= ((word)d << (v << 2)); }If_CutPinDelaySet145,5207
static inline word If_CutPinDelayInit( int v )                  { assert(v >= 0 && v < 16); return (word)1 << (v << 2);                             }If_CutPinDelayInit146,5357
static inline word If_CutPinDelayMax( word D1, word D2, int nVars, int AddOn )If_CutPinDelayMax147,5507
static inline word If_CutPinDelayDecrement( word D1, int nVars )If_CutPinDelayDecrement156,5825
static inline int If_CutPinDelayEqual( word D1, word D2, int nVars ) // returns 1 if D1 has the same delays than D2If_CutPinDelayEqual165,6079
static inline int If_CutPinDelayDom( word D1, word D2, int nVars ) // returns 1 if D1 has the same or smaller delays than D2If_CutPinDelayDom173,6348
static inline void If_CutPinDelayTranslate( word D, int nVars, char * pPerm ) If_CutPinDelayTranslate181,6625
static inline void If_CutPinDelayPrint( word D, int nVars )If_CutPinDelayPrint191,6872
static inline int If_LogCounterPinDelays( int * pTimes, int * pnTimes, word * pPinDels, int Num, word PinDel, int nSuppAll, int fXor )If_LogCounterPinDelays199,7088
static inline word If_LogPinDelaysMulti( word * pPinDels, int nFanins, int nSuppAll, int fXor )If_LogPinDelaysMulti230,8114
static inline word If_AigVerifyArray( Vec_Int_t * vAig, int nLeaves )If_AigVerifyArray251,8645
static inline void If_AigPrintArray( Vec_Int_t * vAig, int nLeaves )If_AigPrintArray300,10343
static inline int If_LogCounter64Eval( word Count )If_LogCounter64Eval331,11337
static word If_LogCounter64Add( word Count, int Num )If_LogCounter64Add343,11967
static int If_LogCounter32Eval( unsigned Count, int Start )If_LogCounter32Eval361,12441
static unsigned If_LogCounter32Add( unsigned Count, int * pStart, int Num )If_LogCounter32Add372,12947
static inline int If_LogCounterAdd( int * pTimes, int * pnTimes, int Num, int fXor )If_LogCounterAdd454,15357

src/map/if/ifSat.c,962
void * If_ManSatBuildXY( int nLutSize )If_ManSatBuildXY45,1313
void * If_ManSatBuildXYZ( int nLutSize )If_ManSatBuildXYZ64,2006
void If_ManSatUnbuild( void * p )If_ManSatUnbuild86,2917
static word If_ManSat6ComposeLut4( int t, word f[4], int k )If_ManSat6ComposeLut4103,3283
word If_ManSat6Truth( word uBound, word uFree, int * pBSet, int nBSet, int * pSSet, int nSSet, int * pFSet, int nFSet )If_ManSat6Truth119,3656
int If_ManSatCheckXY( void * pSat, int nLutSize, word * pTruth, int nVars, unsigned uSet, word * pTBound, word * pTFree, Vec_Int_t * vLits )If_ManSatCheckXY151,4599
unsigned If_ManSatCheckXYall_int( void * pSat, int nLutSize, word * pTruth, int nVars, Vec_Int_t * vLits )If_ManSatCheckXYall_int263,8619
unsigned If_ManSatCheckXYall( void * pSat, int nLutSize, word * pTruth, int nVars, Vec_Int_t * vLits )If_ManSatCheckXYall477,19143
void If_ManSatTest2()If_ManSatTest2495,19643
void If_ManSatTest3()If_ManSatTest3522,20653

src/map/if/ifTime.c,486
void If_CutSortInputPins( If_Man_t * p, If_Cut_t * pCut, int * pPinPerm, float * pPinDelays )If_CutSortInputPins44,1322
float If_CutDelay( If_Man_t * p, If_Obj_t * pObj, If_Cut_t * pCut )If_CutDelay91,2687
void If_CutPropagateRequired( If_Man_t * p, If_Obj_t * pObj, If_Cut_t * pCut, float ObjRequired )If_CutPropagateRequired178,5302
float If_ManDelayMax( If_Man_t * p, int fSeq )If_ManDelayMax263,8173
void If_ManComputeRequired( If_Man_t * p )If_ManComputeRequired307,9509

src/map/if/ifDec08.c,1868
static int BitCount8[256] = {BitCount833,899
static word PMasks[5][3] = {PMasks44,1509
static word Truth6[6] = {Truth652,2072
static word Truth10[10][16] = {Truth1060,2310
static inline int If_Dec08WordNum( int nVars )If_Dec08WordNum80,7578
static void If_Dec08PrintConfigOne( unsigned z )If_Dec08PrintConfigOne84,7673
void If_Dec08PrintConfig( unsigned * pZ )If_Dec08PrintConfig98,8067
static inline void If_Dec08ComposeLut4( int t, word ** pF, word * pR, int nVars )If_Dec08ComposeLut4103,8172
void If_Dec08Verify( word * pF, int nVars, unsigned * pZ )If_Dec08Verify124,8793
static inline int If_Dec08CofCount2( word * pF, int nVars )If_Dec08CofCount2153,9683
static inline int If_Dec08CofCount( word * pF, int nVars )If_Dec08CofCount175,10281
static inline void If_Dec08Copy( word * pOut, word * pIn, int nVars )If_Dec08Copy198,10891
static inline void If_Dec08SwapAdjacent( word * pOut, word * pIn, int iVar, int nVars )If_Dec08SwapAdjacent204,11072
static inline void If_Dec08MoveTo( word * pF, int nVars, int v, int p, int Pla2Var[], int Var2Pla[] )If_Dec08MoveTo240,12360
static inline int If_DecSuppIsMinBase( int Supp )If_DecSuppIsMinBase304,14288
static inline int If_Dec08HasVar( word * t, int nVars, int iVar )If_Dec08HasVar308,14377
static inline int If_Dec08Support( word * t, int nVars )If_Dec08Support333,15034
void If_Dec08Cofactors( word * pF, int nVars, int iVar, word * pCof0, word * pCof1 )If_Dec08Cofactors343,15253
static inline int If_Dec08Count16( int Num16 )If_Dec08Count16374,16135
static inline void If_DecVerifyPerm( int Pla2Var[10], int Var2Pla[10], int nVars )If_DecVerifyPerm379,16286
int If_Dec08Perform( word * pF, int nVars, int fDerive )If_Dec08Perform385,16463
int If_CutPerformCheck08( If_Man_t * p, unsigned * pTruth, int nVars, int nLeaves, char * pStr )If_CutPerformCheck08481,19262

src/map/if/ifCom.c,479
void If_Init( Abc_Frame_t * pAbc )If_Init51,1599
void If_End( Abc_Frame_t * pAbc )If_End75,2397
int If_CommandReadLut( Abc_Frame_t * pAbc, int argc, char **argv )If_CommandReadLut92,2831
int If_CommandPrintLut( Abc_Frame_t * pAbc, int argc, char **argv )If_CommandPrintLut182,5697
int If_CommandReadBox( Abc_Frame_t * pAbc, int argc, char **argv )If_CommandReadBox237,7070
int If_CommandPrintBox( Abc_Frame_t * pAbc, int argc, char **argv )If_CommandPrintBox321,9487

src/map/if/ifMap.c,889
int If_ManCutAigDelay_rec( If_Man_t * p, If_Obj_t * pObj, Vec_Ptr_t * vVisited )If_ManCutAigDelay_rec50,1765
int If_ManCutAigDelay( If_Man_t * p, If_Obj_t * pObj, If_Cut_t * pCut )If_ManCutAigDelay66,2377
static inline int If_WordCountOnes( unsigned uWord )If_WordCountOnes96,3225
float If_CutDelaySpecial( If_Man_t * p, If_Cut_t * pCut, int fCarry )If_CutDelaySpecial116,3854
int * If_CutArrTimeProfile( If_Man_t * p, If_Cut_t * pCut )If_CutArrTimeProfile143,4704
void If_ObjPerformMappingAnd( If_Man_t * p, If_Obj_t * pObj, int Mode, int fPreprocess, int fFirst )If_ObjPerformMappingAnd162,5265
void If_ObjPerformMappingChoice( If_Man_t * p, If_Obj_t * pObj, int Mode, int fPreprocess )If_ObjPerformMappingChoice505,22008
int If_ManPerformMappingRound( If_Man_t * p, int nCutsUsed, int Mode, int fPreprocess, int fFirst, char * pLabel )If_ManPerformMappingRound589,25286

src/map/if/ifMan.c,1790
static void       If_ManCutSetRecycle( If_Man_t * p, If_Set_t * pSet ) { pSet->pNext = p->pFreeList; p->pFreeList = pSet;                            }If_ManCutSetRecycle32,829
static If_Set_t * If_ManCutSetFetch( If_Man_t * p )                    { If_Set_t * pTemp = p->pFreeList; p->pFreeList = p->pFreeList->pNext; return pTemp; }If_ManCutSetFetch33,980
If_Man_t * If_ManStart( If_Par_t * pPars )If_ManStart50,1616
void If_ManRestart( If_Man_t * p )If_ManRestart185,7046
void If_ManStop( If_Man_t * p )If_ManStop212,7735
If_Obj_t * If_ManCreateCi( If_Man_t * p )If_ManCreateCi332,12768
If_Obj_t * If_ManCreateCo( If_Man_t * p, If_Obj_t * pDriver )If_ManCreateCo354,13287
If_Obj_t * If_ManCreateAnd( If_Man_t * p, If_Obj_t * pFan0, If_Obj_t * pFan1 )If_ManCreateAnd382,14128
If_Obj_t * If_ManCreateXor( If_Man_t * p, If_Obj_t * pFan0, If_Obj_t * pFan1 )If_ManCreateXor420,15562
If_Obj_t * If_ManCreateMux( If_Man_t * p, If_Obj_t * pFan0, If_Obj_t * pFan1, If_Obj_t * pCtrl )If_ManCreateMux439,16143
void If_ManCreateChoice( If_Man_t * p, If_Obj_t * pObj )If_ManCreateChoice458,16773
void If_ManSetupSet( If_Man_t * p, If_Set_t * pSet )If_ManSetupSet487,17620
void If_ManSetupCutTriv( If_Man_t * p, If_Cut_t * pCut, int ObjId )If_ManSetupCutTriv515,18440
If_Obj_t * If_ManSetupObj( If_Man_t * p )If_ManSetupObj538,19161
void If_ManSetupCiCutSets( If_Man_t * p )If_ManSetupCiCutSets564,19845
If_Set_t * If_ManSetupNodeCutSet( If_Man_t * p, If_Obj_t * pObj )If_ManSetupNodeCutSet595,20887
void If_ManDerefNodeCutSet( If_Man_t * p, If_Obj_t * pObj )If_ManDerefNodeCutSet618,21555
void If_ManDerefChoiceCutSet( If_Man_t * p, If_Obj_t * pObj )If_ManDerefChoiceCutSet661,22841
void If_ManSetupSetAll( If_Man_t * p, int nCrossCut )If_ManSetupSetAll691,23681

src/map/if/ifLibLut.c,980
If_LibLut_t * If_LibLutReadString( char * pStr )If_LibLutReadString46,1321
int Abc_FrameSetLutLibrary( Abc_Frame_t * pAbc, char * pLutLibString )Abc_FrameSetLutLibrary170,4999
int Abc_FrameSetLutLibraryTest( Abc_Frame_t * pAbc )Abc_FrameSetLutLibraryTest183,5407
If_LibLut_t * If_LibLutRead( char * FileName )If_LibLutRead202,5997
If_LibLut_t * If_LibLutDup( If_LibLut_t * p )If_LibLutDup312,9250
void If_LibLutFree( If_LibLut_t * pLutLib )If_LibLutFree332,9703
void If_LibLutPrint( If_LibLut_t * pLutLib )If_LibLutPrint352,10110
int If_LibLutDelaysAreDiscrete( If_LibLut_t * pLutLib )If_LibLutDelaysAreDiscrete383,11043
int If_LibLutDelaysAreDifferent( If_LibLut_t * pLutLib )If_LibLutDelaysAreDifferent407,11585
If_LibLut_t * If_LibLutSetSimple( int nLutSize )If_LibLutSetSimple438,12337
float If_LibLutFastestPinDelay( If_LibLut_t * p )If_LibLutFastestPinDelay478,14052
float If_LibLutSlowestPinDelay( If_LibLut_t * p )If_LibLutSlowestPinDelay494,14425

src/map/if/ifCore.c,224
void If_ManSetDefaultPars( If_Par_t * pPars )If_ManSetDefaultPars47,1280
int If_ManPerformMapping( If_Man_t * p )If_ManPerformMapping80,2083
int If_ManPerformMappingComb( If_Man_t * p )If_ManPerformMappingComb104,2685

src/map/if/ifSelect.c,1913
void If_ObjConePrint_rec( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited )If_ObjConePrint_rec46,1314
void If_ObjConePrint( If_Man_t * pIfMan, If_Obj_t * pIfObj )If_ObjConePrint65,2081
int If_ManNodeShapeMap_rec( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited, Vec_Int_t * vShape )If_ManNodeShapeMap_rec94,2862
int If_ManNodeShapeMap( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vShape )If_ManNodeShapeMap128,4052
static inline int  If_WordCountOnes( unsigned uWord )If_WordCountOnes171,5359
int If_ManNodeShapeMap2_rec( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited, Vec_Int_t * vShape )If_ManNodeShapeMap2_rec179,5713
int If_ManNodeShapeMap2( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vShape )If_ManNodeShapeMap2221,7142
int If_ManConeCollect_rec( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Ptr_t * vVisited, Vec_Ptr_t * vCone )If_ManConeCollect_rec262,8372
Vec_Ptr_t * If_ManConeCollect( If_Man_t * pIfMan, If_Obj_t * pIfObj, If_Cut_t * pCut )If_ManConeCollect300,9667
static inline void sat_solver_add_choice( sat_solver * pSat, int iVar, Vec_Int_t * vVars )sat_solver_add_choice335,10760
static inline int  If_ObjSatVar( If_Obj_t * pIfObj )            { return If_CutDataInt(If_ObjCutBest(pIfObj));  }If_ObjSatVar369,11887
static inline void If_ObjSetSatVar( If_Obj_t * pIfObj, int v )  { If_CutSetDataInt( If_ObjCutBest(pIfObj), v ); }If_ObjSetSatVar370,12001
void If_ManNodeShape2_rec( sat_solver * pSat, If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vShape )If_ManNodeShape2_rec384,12397
int If_ManNodeShapeSat( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vShape )If_ManNodeShapeSat412,13337
int If_ManCheckShape( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vShape )If_ManCheckShape532,17051
int If_ManNodeShape( If_Man_t * pIfMan, If_Obj_t * pIfObj, Vec_Int_t * vShape, int fExact )If_ManNodeShape575,18314

src/map/if/if_.c,0

src/map/if/ifCheck.c,619
typedef unsigned __int64 word;word31,798
static word Truths6[6] = {Truths637,903
int If_ManCutReach_rec( If_Obj_t * pPath, If_Obj_t * pLeaf )If_ManCutReach_rec61,1583
int If_ManCutReach( If_Man_t * p, If_Cut_t * pCut, If_Obj_t * pPath, If_Obj_t * pLeaf )If_ManCutReach74,1938
int If_ManCutTruthCheck_rec( If_Obj_t * pObj, word * pTruths )If_ManCutTruthCheck_rec97,2555
int If_ManCutTruthCheck( If_Man_t * p, If_Obj_t * pObj, If_Cut_t * pCut, If_Obj_t * pLeaf, int Cof, word * pTruths )If_ManCutTruthCheck109,2967
void If_ManCutCheck( If_Man_t * p, If_Obj_t * pObj, If_Cut_t * pCut )If_ManCutCheck144,4051

src/map/if/ifDec10.c,1868
static int BitCount8[256] = {BitCount833,899
static word PMasks[5][3] = {PMasks44,1509
static word Truth6[6] = {Truth652,2072
static word Truth10[10][16] = {Truth1060,2310
static inline int If_Dec10WordNum( int nVars )If_Dec10WordNum77,7435
static void If_Dec10PrintConfigOne( unsigned z )If_Dec10PrintConfigOne81,7530
void If_Dec10PrintConfig( unsigned * pZ )If_Dec10PrintConfig95,7924
static inline void If_Dec10ComposeLut4( int t, word ** pF, word * pR, int nVars )If_Dec10ComposeLut4100,8029
void If_Dec10Verify( word * pF, int nVars, unsigned * pZ )If_Dec10Verify121,8650
static inline int If_Dec10CofCount2( word * pF, int nVars )If_Dec10CofCount2150,9540
static inline int If_Dec10CofCount( word * pF, int nVars )If_Dec10CofCount172,10135
static inline void If_Dec10Copy( word * pOut, word * pIn, int nVars )If_Dec10Copy195,10742
static inline void If_Dec10SwapAdjacent( word * pOut, word * pIn, int iVar, int nVars )If_Dec10SwapAdjacent201,10923
static inline void If_Dec10MoveTo( word * pF, int nVars, int v, int p, int Pla2Var[], int Var2Pla[] )If_Dec10MoveTo237,12211
static inline int If_DecSuppIsMinBase( int Supp )If_DecSuppIsMinBase301,14139
static inline int If_Dec10HasVar( word * t, int nVars, int iVar )If_Dec10HasVar305,14228
static inline int If_Dec10Support( word * t, int nVars )If_Dec10Support330,14885
void If_Dec10Cofactors( word * pF, int nVars, int iVar, word * pCof0, word * pCof1 )If_Dec10Cofactors340,15104
static inline int If_Dec10Count16( int Num16 )If_Dec10Count16371,15986
static inline void If_DecVerifyPerm( int Pla2Var[10], int Var2Pla[10], int nVars )If_DecVerifyPerm376,16137
int If_Dec10Perform( word * pF, int nVars, int fDerive )If_Dec10Perform382,16314
int If_CutPerformCheck10( If_Man_t * p, unsigned * pTruth, int nVars, int nLeaves, char * pStr )If_CutPerformCheck10480,19239

src/map/if/ifDec07.c,3893
static int BitCount8[256] = {BitCount833,899
static word PMasks[5][3] = {PMasks44,1509
static word Truth6[6] = {Truth652,2072
static word Truth7[7][2] = {Truth760,2310
void If_DecPrintConfig( word z )If_DecPrintConfig77,3174
static word If_Dec6ComposeLut4( int t, word f[4] )If_Dec6ComposeLut4103,3971
word If_Dec6Truth( word z )If_Dec6Truth118,4289
void If_Dec6Verify( word t, word z )If_Dec6Verify142,4836
static void If_Dec7ComposeLut4( int t, word f[4][2], word r[2] )If_Dec7ComposeLut4155,5255
void If_Dec7Verify( word t[2], word z )If_Dec7Verify174,5714
static inline int If_Dec6CofCount2( word t )If_Dec6CofCount2206,6549
static inline int If_Dec7CofCount3( word t[2] )If_Dec7CofCount3214,6835
static inline word If_Dec6SwapAdjacent( word t, int v )If_Dec6SwapAdjacent232,7243
static inline word If_Dec6MoveTo( word t, int v, int p, int Pla2Var[6], int Var2Pla[6] )If_Dec6MoveTo237,7425
static inline void If_Dec7SwapAdjacent( word t[2], int v )If_Dec7SwapAdjacent257,8012
static inline void If_Dec7MoveTo( word t[2], int v, int p, int Pla2Var[7], int Var2Pla[7] )If_Dec7MoveTo270,8377
static inline int If_Dec6DeriveCount2( word t, int * pCof0, int * pCof1 )If_Dec6DeriveCount2289,8947
static inline int If_Dec7DeriveCount3( word t[2], int * pCof0, int * pCof1 )If_Dec7DeriveCount3302,9279
static inline word If_Dec6Cofactor( word t, int iVar, int fCof1 )If_Dec6Cofactor318,9669
static word If_Dec6DeriveDisjoint( word t, int Pla2Var[6], int Var2Pla[6] )If_Dec6DeriveDisjoint326,9944
static word If_Dec6DeriveNonDisjoint( word t, int s, int Pla2Var0[6], int Var2Pla0[6] )If_Dec6DeriveNonDisjoint340,10424
static word If_Dec7DeriveDisjoint( word t[2], int Pla2Var[7], int Var2Pla[7] )If_Dec7DeriveDisjoint379,11727
static inline int If_Dec6CountOnes( word t )If_Dec6CountOnes392,12142
static inline int If_Dec6HasVar( word t, int v )If_Dec6HasVar401,12710
static inline int If_Dec7HasVar( word t[2], int v )If_Dec7HasVar405,12823
static inline void If_DecVerifyPerm( int Pla2Var[6], int Var2Pla[6] )If_DecVerifyPerm414,13090
word If_Dec6Perform( word t, int fDerive )If_Dec6Perform420,13250
word If_Dec7Perform( word t0[2], int fDerive )If_Dec7Perform460,14525
static inline int If_DecSuppIsMinBase( int Supp )If_DecSuppIsMinBase494,15427
static inline word If_Dec6TruthShrink( word uTruth, int nVars, int nVarsAll, unsigned Phase )If_Dec6TruthShrink498,15516
word If_Dec6MinimumBase( word uTruth, int * pSupp, int nVarsAll, int * pnVars )If_Dec6MinimumBase512,15923
static inline void If_Dec7TruthShrink( word uTruth[2], int nVars, int nVarsAll, unsigned Phase )If_Dec7TruthShrink531,16453
void If_Dec7MinimumBase( word uTruth[2], int * pSupp, int nVarsAll, int * pnVars )If_Dec7MinimumBase544,16835
static inline int If_Dec6SuppSize( word t )If_Dec6SuppSize566,17387
static inline int If_Dec6CheckMux( word t )If_Dec6CheckMux574,17594
static inline void If_Dec7Cofactor( word t[2], int iVar, int fCof1, word r[2] )If_Dec7Cofactor585,17876
static inline int If_Dec7SuppSize( word t[2] )If_Dec7SuppSize609,18547
static inline int If_Dec7CheckMux( word t[2] )If_Dec7CheckMux622,18852
int If_Dec6PickBestMux( word t, word Cofs[2] )If_Dec6PickBestMux637,19198
int If_Dec7PickBestMux( word t[2], word c0r[2], word c1r[2] )If_Dec7PickBestMux654,19741
static inline word If_Dec5CofCount2( word t, int x, int y, int * Pla2Var, word t0, int fDerive )If_Dec5CofCount2689,20646
word If_Dec5Perform( word t, int fDerive )If_Dec5Perform868,27702
word If_Dec5PerformEx()If_Dec5PerformEx986,30965
void If_Dec5PerformTest()If_Dec5PerformTest1003,31418
word If_CutPerformDerive07( If_Man_t * p, unsigned * pTruth, int nVars, int nLeaves, char * pStr )If_CutPerformDerive071029,31974
int If_CutPerformCheck07( If_Man_t * p, unsigned * pTruth, int nVars, int nLeaves, char * pStr )If_CutPerformCheck071071,32971

src/map/if/ifMatch2.c,249
void Bat_ManFuncSetupTable()Bat_ManFuncSetupTable45,1243
void Bat_ManFuncSetdownTable()Bat_ManFuncSetdownTable48,1276
int Bat_ManCellFuncLookup( void * pMan, unsigned * pTruth, int nVars, int nLeaves, char * pStr )Bat_ManCellFuncLookup51,1311

src/map/if/if.h,31871
#define ABC__map__if__if_hABC__map__if__if_h22,542
#define IF_MAX_LUTSIZE IF_MAX_LUTSIZE52,1487
#define IF_MAX_FUNC_LUTSIZE IF_MAX_FUNC_LUTSIZE54,1607
#define IF_INFINITY IF_INFINITY56,1662
#define IF_COST_MAX IF_COST_MAX58,1741
#define IF_BIG_CHAR IF_BIG_CHAR60,1791
    IF_NONE,     // 0: non-existent objectIF_NONE64,1856
    IF_CONST1,   // 1: constant 1 IF_CONST165,1899
    IF_CI,       // 2: combinational inputIF_CI66,1934
    IF_CO,       // 3: combinational outputIF_CO67,1977
    IF_AND,      // 4: AND nodeIF_AND68,2021
    IF_VOID      // 5: unused objectIF_VOID69,2053
} If_Type_t;If_Type_t70,2090
typedef struct If_Man_t_     If_Man_t;If_Man_t76,2324
typedef struct If_Par_t_     If_Par_t;If_Par_t77,2363
typedef struct If_Obj_t_     If_Obj_t;If_Obj_t78,2402
typedef struct If_Cut_t_     If_Cut_t;If_Cut_t79,2441
typedef struct If_Set_t_     If_Set_t;If_Set_t80,2480
typedef struct If_LibLut_t_  If_LibLut_t;If_LibLut_t81,2519
typedef struct If_LibBox_t_  If_LibBox_t;If_LibBox_t82,2561
typedef struct If_DsdMan_t_  If_DsdMan_t;If_DsdMan_t83,2603
typedef struct Ifn_Ntk_t_    Ifn_Ntk_t;Ifn_Ntk_t84,2645
typedef struct Ifif_Par_t_   Ifif_Par_t;Ifif_Par_t86,2686
struct Ifif_Par_t_Ifif_Par_t_87,2727
    int                nLutSize;      // the LUT sizenLutSize89,2748
    If_LibLut_t *      pLutLib;       // the LUT librarypLutLib90,2802
    float              pLutDelays[IF_MAX_LUTSIZE];  // pin-to-pin delays of the max LUTpLutDelays91,2859
    float              DelayWire;     // wire delayDelayWire92,2947
    int                nDegree;       // structure degree nDegree93,2999
    int                fCascade;      // cascadefCascade94,3058
    int                fVerbose;      // verbosefVerbose95,3107
    int                fVeryVerbose;  // verbosefVeryVerbose96,3156
struct If_Par_t_If_Par_t_100,3223
    int                nLutSize;      // the LUT sizenLutSize103,3277
    int                nCutsMax;      // the max number of cutsnCutsMax104,3331
    int                nFlowIters;    // the number of iterations of area recoverynFlowIters105,3395
    int                nAreaIters;    // the number of iterations of area recoverynAreaIters106,3478
    int                nGateSize;     // the max size of the AND/OR gate to map intonGateSize107,3561
    int                nNonDecLimit;  // the max size of non-dec nodesnNonDecLimit108,3646
    float              DelayTarget;   // delay targetDelayTarget109,3717
    float              Epsilon;       // value used in comparison floating point numbersEpsilon110,3771
    int                nRelaxRatio;   // delay relaxation rationRelaxRatio111,3860
    int                nStructType;   // type of the structurenStructType112,3924
    int                nAndDelay;     // delay of AND-gate in LUT library unitsnAndDelay113,3987
    int                nAndArea;      // area of AND-gate in LUT library unitsnAndArea114,4067
    int                fPreprocess;   // preprossingfPreprocess115,4146
    int                fArea;         // area-oriented mappingfArea116,4199
    int                fFancy;        // a fancy featurefFancy117,4262
    int                fExpRed;       // expand/reduce of the best cutsfExpRed118,4319
    int                fLatchPaths;   // reset timing on latch pathsfLatchPaths119,4391
    int                fLut6Filter;   // uses filtering of 6-LUT functionsfLut6Filter120,4460
    int                fEdge;         // uses edge-based cut selection heuristicsfEdge121,4535
    int                fPower;        // uses power-aware cut selection heuristicsfPower122,4617
    int                fCutMin;       // performs cut minimization by removing functionally reducdant variablesfCutMin123,4700
    int                fDelayOpt;     // special delay optimizationfDelayOpt124,4812
    int                fDelayOptLut;  // delay optimization for LUTsfDelayOptLut125,4880
    int                fDsdBalance;   // special delay optimizationfDsdBalance126,4949
    int                fUserRecLib;   // use recorded libraryfUserRecLib127,5017
    int                fUserSesLib;   // use SAT-based synthesisfUserSesLib128,5079
    int                fBidec;        // use bi-decompositionfBidec129,5144
    int                fUse34Spec;    // use specialized matchingfUse34Spec130,5206
    int                fUseBat;       // use one specialized featurefUseBat131,5272
    int                fUseBuffs;     // use buffers to decouple outputsfUseBuffs132,5341
    int                fEnableCheck07;// enable additional checkingfEnableCheck07133,5414
    int                fEnableCheck08;// enable additional checkingfEnableCheck08134,5482
    int                fEnableCheck10;// enable additional checkingfEnableCheck10135,5550
    int                fEnableCheck75;// enable additional checkingfEnableCheck75136,5618
    int                fEnableCheck75u;// enable additional checkingfEnableCheck75u137,5686
    int                fUseDsd;       // compute DSD of the cut functionsfUseDsd138,5755
    int                fUseDsdTune;   // use matching based on precomputed managerfUseDsdTune139,5829
    int                fUseCofVars;   // use cofactoring variablesfUseCofVars140,5912
    int                fUseAndVars;   // use bi-decompositionfUseAndVars141,5979
    int                fUseTtPerm;    // compute truth tables of the cut functionsfUseTtPerm142,6041
    int                fDeriveLuts;   // enables deriving LUT structuresfDeriveLuts143,6124
    int                fDoAverage;    // optimize average rather than maximum levelfDoAverage144,6197
    int                fHashMapping;  // perform AIG hashing after mappingfHashMapping145,6281
    int                fVerbose;      // the verbosity flagfVerbose146,6356
    int                fVerboseTrace; // the verbosity flagfVerboseTrace147,6416
    char *             pLutStruct;    // LUT structurepLutStruct148,6476
    float              WireDelay;     // wire delayWireDelay149,6531
    int                fSkipCutFilter;// skip cut filterfSkipCutFilter151,6610
    int                fAreaOnly;     // area only modefAreaOnly152,6667
    int                fTruth;        // truth table computation enabledfTruth153,6723
    int                fUsePerm;      // use permutation (delay info)fUsePerm154,6796
    int                fUseBdds;      // use local BDDs as a cost functionfUseBdds155,6866
    int                fUseSops;      // use local SOPs as a cost functionfUseSops156,6941
    int                fUseCnfs;      // use local CNFs as a cost functionfUseCnfs157,7016
    int                fUseMv;        // use local MV-SOPs as a cost functionfUseMv158,7091
    int                nLatchesCi;    // the number of latches among the CIsnLatchesCi159,7169
    int                nLatchesCo;    // the number of latches among the COsnLatchesCo160,7246
    int                nLatchesCiBox; // the number of white box outputs among the CIsnLatchesCiBox161,7323
    int                nLatchesCoBox; // the number of white box inputs among the COsnLatchesCoBox162,7410
    int                fLiftLeaves;   // shift the leaves for seq mappingfLiftLeaves163,7496
    int                fUseCoAttrs;   // use CO attributesfUseCoAttrs164,7570
    float              DelayTargetNew;// new delay targetDelayTargetNew165,7629
    float              FinalDelay;    // final delay after mappingFinalDelay166,7687
    float              FinalArea;     // final area after mappingFinalArea167,7754
    If_LibLut_t *      pLutLib;       // the LUT librarypLutLib168,7820
    float *            pTimesArr;     // arrival timespTimesArr169,7877
    float *            pTimesReq;     // required timespTimesReq170,7932
    int (* pFuncCost)  (If_Man_t *, If_Cut_t *);  // procedure to compute the user's cost of a cutpFuncCost171,7988
    int (* pFuncUser)  (If_Man_t *, If_Obj_t *, If_Cut_t *);            //  procedure called for each cut when cut computation is finishedpFuncUser172,8087
    int (* pFuncCell)  (If_Man_t *, unsigned *, int, int, char *);      //  procedure called for cut functionspFuncCell173,8226
    int (* pFuncCell2) (If_Man_t *, word *, int, Vec_Str_t *, char **); //  procedure called for cut functionspFuncCell2174,8337
    int (* pFuncWrite) (If_Man_t *);                                    //  procedure called for cut functionspFuncWrite175,8448
    void *             pReoMan;       // reordering managerpReoMan176,8559
struct If_LibLut_t_If_LibLut_t_180,8642
    char *             pName;         // the name of the LUT librarypName182,8664
    int                LutMax;        // the maximum LUT size LutMax183,8733
    int                fVarPinDelays; // set to 1 if variable pin delays are specifiedfVarPinDelays184,8796
    float              pLutAreas[IF_MAX_LUTSIZE+1]; // the areas of LUTspLutAreas185,8883
    float              pLutDelays[IF_MAX_LUTSIZE+1][IF_MAX_LUTSIZE+1];// the delays of LUTspLutDelays186,8956
struct If_Man_t_If_Man_t_190,9063
    char *             pName;pName192,9082
    If_Par_t *         pPars;pPars194,9138
    If_Obj_t *         pConst1;       // the constant 1 nodepConst1196,9189
    Vec_Ptr_t *        vCis;          // the primary inputsvCis197,9250
    Vec_Ptr_t *        vCos;          // the primary outputsvCos198,9310
    Vec_Ptr_t *        vObjs;         // all objectsvObjs199,9371
    Vec_Ptr_t *        vObjsRev;      // reverse topological order of objectsvObjsRev200,9424
    Vec_Ptr_t *        vTemp;         // temporary arrayvTemp201,9502
    int                nObjs[IF_VOID];// the number of objects by typenObjs202,9559
    int                nLevelMax;     // the max number of AIG levelsnLevelMax204,9650
    float              fEpsilon;      // epsilon used for comparisonfEpsilon205,9720
    float              RequiredGlo;   // global required timesRequiredGlo206,9789
    float              RequiredGlo2;  // global required timesRequiredGlo2207,9852
    float              AreaGlo;       // global areaAreaGlo208,9915
    int                nNets;         // the sum total of fanins of all LUTs in the mappingnNets209,9968
    float              dPower;        // the sum total of switching activities of all LUTs in the mappingdPower210,10060
    int                nCutsUsed;     // the number of cuts currently usednCutsUsed211,10166
    int                nCutsMerged;   // the total number of cuts mergednCutsMerged212,10241
    unsigned *         puTemp[4];     // used for the truth table computationpuTemp213,10314
    word *             puTempW;       // used for the truth table computationpuTempW214,10392
    int                SortMode;      // one of the three sorting modesSortMode215,10470
    int                fNextRound;    // set to 1 after the first roundfNextRound216,10542
    int                nChoices;      // the number of choice nodesnChoices217,10614
    Vec_Int_t *        vSwitching;    // switching activity of each nodevSwitching218,10682
    int                pPerm[3][IF_MAX_LUTSIZE]; // permutationspPerm219,10755
    unsigned           uSharedMask;   // mask of shared variablesuSharedMask220,10820
    int                nShared;       // the number of shared variablesnShared221,10886
    int                fReqTimeWarn;  // warning about exceeding required times was printedfReqTimeWarn222,10958
    Vec_Int_t *        vCover;        // used to compute ISOPvCover224,11071
    Vec_Int_t *        vArray;        // intermediate storagevArray225,11133
    Vec_Wrd_t *        vAnds;         // intermediate storagevAnds226,11195
    Vec_Wrd_t *        vOrGate;       // intermediate storagevOrGate227,11257
    Vec_Wrd_t *        vAndGate;      // intermediate storagevAndGate228,11319
    Vec_Ptr_t *        vLatchOrder;   // topological ordering of latchesvLatchOrder230,11407
    Vec_Int_t *        vLags;         // sequentail lags of all nodesvLags231,11480
    int                nAttempts;     // the number of attempts in binary searchnAttempts232,11550
    int                nMaxIters;     // the maximum number of iterationsnMaxIters233,11631
    int                Period;        // the current value of the clock period (for seq mapping)Period234,11705
    int                nTruth6Words[IF_MAX_FUNC_LUTSIZE+1];  // the size of the truth table if allocatednTruth6Words236,11827
    int                nPermWords;    // the size of the permutation array (in words)nPermWords237,11932
    int                nObjBytes;     // the size of the objectnObjBytes238,12018
    int                nCutBytes;     // the size of the cutnCutBytes239,12082
    int                nSetBytes;     // the size of the cut setnSetBytes240,12143
    Mem_Fixed_t *      pMemObj;       // memory manager for objects (entrysize = nEntrySize)pMemObj241,12208
    Mem_Fixed_t *      pMemSet;       // memory manager for sets of cuts (entrysize = nCutSize*(nCutsMax+1))pMemSet242,12301
    If_Set_t *         pMemCi;        // memory for CI cutsetspMemCi243,12410
    If_Set_t *         pMemAnd;       // memory for AND cutsetspMemAnd244,12473
    If_Set_t *         pFreeList;     // the list of free cutsetspFreeList245,12537
    int                nSmallSupp;    // the small supportnSmallSupp246,12603
    int                nCutsTotal;nCutsTotal247,12662
    int                nCutsUseless[32];nCutsUseless248,12697
    int                nCutsCount[32];nCutsCount249,12738
    int                nCutsCountAll;nCutsCountAll250,12777
    int                nCutsUselessAll;nCutsUselessAll251,12815
    int                nCuts5, nCuts5a;nCuts5252,12855
    int                nCuts5, nCuts5a;nCuts5a252,12855
    If_DsdMan_t *      pIfDsdMan;     // DSD managerpIfDsdMan253,12895
    Vec_Mem_t *        vTtMem[IF_MAX_FUNC_LUTSIZE+1];   // truth table memory and hash tablevTtMem254,12948
    Vec_Wec_t *        vTtIsops[IF_MAX_FUNC_LUTSIZE+1]; // mapping of truth table into DSDvTtIsops255,13041
    Vec_Int_t *        vTtDsds[IF_MAX_FUNC_LUTSIZE+1];  // mapping of truth table into DSDvTtDsds256,13132
    Vec_Str_t *        vTtPerms[IF_MAX_FUNC_LUTSIZE+1]; // mapping of truth table into permutationsvTtPerms257,13223
    Vec_Str_t *        vTtVars[IF_MAX_FUNC_LUTSIZE+1];  // mapping of truth table into selected varsvTtVars258,13323
    Vec_Int_t *        vTtDecs[IF_MAX_FUNC_LUTSIZE+1];  // mapping of truth table into decomposition patternvTtDecs259,13424
    Vec_Int_t *        vTtOccurs[IF_MAX_FUNC_LUTSIZE+1];// truth table occurange countersvTtOccurs260,13533
    Hash_IntMan_t *    vPairHash;     // hashing pairs of truth tablesvPairHash261,13623
    Vec_Int_t *        vPairRes;      // resulting truth tablevPairRes262,13694
    Vec_Str_t *        vPairPerms;    // resulting permutationvPairPerms263,13757
    Vec_Mem_t *        vTtMem6;vTtMem6264,13820
    char               pCanonPerm[IF_MAX_LUTSIZE];pCanonPerm265,13852
    unsigned           uCanonPhase;uCanonPhase266,13903
    int                nCacheHits;nCacheHits267,13939
    int                nCacheMisses;nCacheMisses268,13974
    abctime            timeCache[6];timeCache269,14011
    int                nBestCutSmall[2];nBestCutSmall270,14048
    int                nCountNonDec[2];nCountNonDec271,14089
    Vec_Int_t *        vCutData;      // cut data storagevCutData272,14129
    int                pArrTimeProfile[IF_MAX_FUNC_LUTSIZE];pArrTimeProfile273,14187
    Vec_Ptr_t *        vVisited;vVisited274,14248
    void *             pUserMan;pUserMan275,14281
    Vec_Int_t *        vDump;vDump276,14314
    int                pDumpIns[16];pDumpIns277,14344
    Tim_Man_t *        pManTim;pManTim280,14404
    Vec_Int_t *        vCoAttrs;      // CO attributes   0=optimize; 1=keep; 2=relaxvCoAttrs281,14436
    int                nTableSize[2];    // hash table sizenTableSize283,14553
    int                nTableEntries[2]; // hash table entriesnTableEntries284,14613
    void **            pHashTable[2];    // hash table binspHashTable285,14676
    Mem_Fixed_t *      pMemEntries;      // memory manager for hash table entriespMemEntries286,14736
struct If_Cut_t_If_Cut_t_292,14897
    float              Area;          // area (or area-flow) of the cutArea294,14916
    float              Edge;          // the edge flowEdge295,14988
    float              Power;         // the power flowPower296,15043
    float              Delay;         // delay of the cutDelay297,15099
    int                iCutFunc;      // TT ID of the cutiCutFunc298,15157
    int                uMaskFunc;     // polarity bitmaskuMaskFunc299,15215
    unsigned           uSign;         // cut signatureuSign300,15273
    unsigned           Cost    : 12;  // the user's cost of the cut (related to IF_COST_MAX)Cost301,15328
    unsigned           fCompl  :  1;  // the complemented attribute fCompl302,15421
    unsigned           fUser   :  1;  // using the user's area and delayfUser303,15490
    unsigned           fUseless:  1;  // cannot be used in the mappingfUseless304,15563
    unsigned           fAndCut :  1;  // matched with AND gatefAndCut305,15634
    unsigned           nLimit  :  8;  // the maximum number of leavesnLimit306,15697
    unsigned           nLeaves :  8;  // the number of leavesnLeaves307,15767
    int                pLeaves[0];pLeaves308,15829
struct If_Set_t_If_Set_t_312,15891
    short              nCutsMax;      // the max number of cutsnCutsMax314,15910
    short              nCuts;         // the current number of cutsnCuts315,15974
    If_Set_t *         pNext;         // next cutset in the free listpNext316,16042
    If_Cut_t **        ppCuts;        // the array of pointers to the cutsppCuts317,16112
struct If_Obj_t_If_Obj_t_321,16209
    unsigned           Type    :  4;  // objectType323,16228
    unsigned           fCompl0 :  1;  // complemented attributefCompl0324,16276
    unsigned           fCompl1 :  1;  // complemented attributefCompl1325,16340
    unsigned           fPhase  :  1;  // phase of the nodefPhase326,16404
    unsigned           fRepr   :  1;  // representative of the equivalence classfRepr327,16463
    unsigned           fMark   :  1;  // multipurpose markfMark328,16544
    unsigned           fVisit  :  1;  // multipurpose markfVisit329,16603
    unsigned           fSpec   :  1;  // multipurpose markfSpec330,16662
    unsigned           fDriver :  1;  // multipurpose markfDriver331,16721
    unsigned           fSkipCut:  1;  // multipurpose markfSkipCut332,16780
    unsigned           Level   : 19;  // logic level of the nodeLevel333,16839
    int                Id;            // integer IDId334,16904
    int                IdPio;         // integer ID of PIs/POsIdPio335,16956
    int                nRefs;         // the number of referencesnRefs336,17019
    int                nVisits;       // the number of visits to this nodenVisits337,17085
    int                nVisitsCopy;   // the number of visits to this nodenVisitsCopy338,17160
    If_Obj_t *         pFanin0;       // the first fanin pFanin0339,17235
    If_Obj_t *         pFanin1;       // the second faninpFanin1340,17293
    If_Obj_t *         pEquiv;        // the choice nodepEquiv341,17351
    float              EstRefs;       // estimated reference counterEstRefs342,17408
    float              Required;      // required time of the ondeRequired343,17477
    float              LValue;        // sequential arrival time of the nodeLValue344,17544
    void *             pCopy;         // used for object duplicationpCopy346,17632
    int                iCopy;iCopy347,17701
    If_Set_t *         pCutSet;       // the pointer to the cutsetpCutSet350,17743
    If_Cut_t           CutBest;       // the best cut selected CutBest351,17810
typedef struct If_Box_t_ If_Box_t;If_Box_t354,17878
struct If_Box_t_If_Box_t_355,17913
    char *             pName;pName357,17932
    char               fSeq;fSeq358,17962
    char               fBlack;fBlack359,17991
    char               fOuter;fOuter360,18022
    char               fUnused;fUnused361,18053
    int                Id;Id362,18085
    int                nPis;nPis363,18112
    int                nPos;nPos364,18141
    int *              pDelays;pDelays365,18170
struct If_LibBox_t_If_LibBox_t_368,18206
    int                nBoxes;nBoxes370,18228
    Vec_Ptr_t *        vBoxes;vBoxes371,18259
static inline If_Obj_t * If_Regular( If_Obj_t * p )                          { return (If_Obj_t *)((ABC_PTRUINT_T)(p) & ~01);  }If_Regular374,18294
static inline If_Obj_t * If_Not( If_Obj_t * p )                              { return (If_Obj_t *)((ABC_PTRUINT_T)(p) ^  01);  }If_Not375,18423
static inline If_Obj_t * If_NotCond( If_Obj_t * p, int c )                   { return (If_Obj_t *)((ABC_PTRUINT_T)(p) ^ (c));  }If_NotCond376,18552
static inline int        If_IsComplement( If_Obj_t * p )                     { return (int )(((ABC_PTRUINT_T)p) & 01);         }If_IsComplement377,18681
static inline int        If_ManCiNum( If_Man_t * p )                         { return p->nObjs[IF_CI];               }If_ManCiNum379,18811
static inline int        If_ManCoNum( If_Man_t * p )                         { return p->nObjs[IF_CO];               }If_ManCoNum380,18930
static inline int        If_ManAndNum( If_Man_t * p )                        { return p->nObjs[IF_AND];              }If_ManAndNum381,19049
static inline int        If_ManObjNum( If_Man_t * p )                        { return Vec_PtrSize(p->vObjs);         }If_ManObjNum382,19168
static inline If_Obj_t * If_ManConst1( If_Man_t * p )                        { return p->pConst1;                              }If_ManConst1384,19288
static inline If_Obj_t * If_ManCi( If_Man_t * p, int i )                     { return (If_Obj_t *)Vec_PtrEntry( p->vCis, i );  }If_ManCi385,19417
static inline If_Obj_t * If_ManCo( If_Man_t * p, int i )                     { return (If_Obj_t *)Vec_PtrEntry( p->vCos, i );  }If_ManCo386,19546
static inline If_Obj_t * If_ManLi( If_Man_t * p, int i )                     { return (If_Obj_t *)Vec_PtrEntry( p->vCos, If_ManCoNum(p) - p->pPars->nLatchesCo + i );  }If_ManLi387,19675
static inline If_Obj_t * If_ManLo( If_Man_t * p, int i )                     { return (If_Obj_t *)Vec_PtrEntry( p->vCis, If_ManCiNum(p) - p->pPars->nLatchesCi + i );  }If_ManLo388,19844
static inline If_Obj_t * If_ManObj( If_Man_t * p, int i )                    { return (If_Obj_t *)Vec_PtrEntry( p->vObjs, i ); }If_ManObj389,20013
static inline int        If_ObjIsConst1( If_Obj_t * pObj )                   { return pObj->Type == IF_CONST1;       }If_ObjIsConst1391,20143
static inline int        If_ObjIsCi( If_Obj_t * pObj )                       { return pObj->Type == IF_CI;           }If_ObjIsCi392,20262
static inline int        If_ObjIsCo( If_Obj_t * pObj )                       { return pObj->Type == IF_CO;           }If_ObjIsCo393,20381
static inline int        If_ObjIsTerm( If_Obj_t * pObj )                     { return pObj->Type == IF_CI || pObj->Type == IF_CO; }If_ObjIsTerm394,20500
static inline int        If_ObjIsLatch( If_Obj_t * pObj )                    { return If_ObjIsCi(pObj) && pObj->pFanin0 != NULL;  }If_ObjIsLatch395,20632
static inline int        If_ObjIsAnd( If_Obj_t * pObj )                      { return pObj->Type == IF_AND;          }If_ObjIsAnd396,20764
static inline int        If_ObjId( If_Obj_t * pObj )                         { return pObj->Id;                      }If_ObjId398,20884
static inline If_Obj_t * If_ObjFanin0( If_Obj_t * pObj )                     { return pObj->pFanin0;                 }If_ObjFanin0399,21003
static inline If_Obj_t * If_ObjFanin1( If_Obj_t * pObj )                     { return pObj->pFanin1;                 }If_ObjFanin1400,21122
static inline int        If_ObjFaninC0( If_Obj_t * pObj )                    { return pObj->fCompl0;                 }If_ObjFaninC0401,21241
static inline int        If_ObjFaninC1( If_Obj_t * pObj )                    { return pObj->fCompl1;                 }If_ObjFaninC1402,21360
static inline void *     If_ObjCopy( If_Obj_t * pObj )                       { return pObj->pCopy;                   }If_ObjCopy403,21479
static inline int        If_ObjLevel( If_Obj_t * pObj )                      { return pObj->Level;                   }If_ObjLevel404,21598
static inline void       If_ObjSetLevel( If_Obj_t * pObj, int Level )        { pObj->Level = Level;                  }If_ObjSetLevel405,21717
static inline void       If_ObjSetCopy( If_Obj_t * pObj, void * pCopy )      { pObj->pCopy = pCopy;                  }If_ObjSetCopy406,21836
static inline void       If_ObjSetChoice( If_Obj_t * pObj, If_Obj_t * pEqu ) { pObj->pEquiv = pEqu;                  }If_ObjSetChoice407,21955
static inline int        If_CutLeaveNum( If_Cut_t * pCut )                   { return pCut->nLeaves;                             }If_CutLeaveNum409,22075
static inline int *      If_CutLeaves( If_Cut_t * pCut )                     { return pCut->pLeaves;                             }If_CutLeaves410,22206
static inline If_Obj_t * If_CutLeaf( If_Man_t * p, If_Cut_t * pCut, int i )  { assert(i >= 0 && i < (int)pCut->nLeaves); return If_ManObj(p, pCut->pLeaves[i]);                         }If_CutLeaf411,22337
static inline unsigned   If_CutSuppMask( If_Cut_t * pCut )                   { return (~(unsigned)0) >> (32-pCut->nLeaves);      }If_CutSuppMask412,22523
static inline int        If_CutTruthWords( int nVarsMax )                    { return nVarsMax <= 5 ? 2 : (1 << (nVarsMax - 5)); }If_CutTruthWords413,22654
static inline int        If_CutPermWords( int nVarsMax )                     { return nVarsMax / sizeof(int) + ((nVarsMax % sizeof(int)) > 0); }If_CutPermWords414,22785
static inline int        If_CutLeafBit( If_Cut_t * pCut, int i )             { return (pCut->uMaskFunc >> i) & 1;                }If_CutLeafBit415,22930
static inline char *     If_CutPerm( If_Cut_t * pCut )                       { return (char *)(pCut->pLeaves + pCut->nLeaves);   }If_CutPerm416,23061
static inline void       If_CutCopy( If_Man_t * p, If_Cut_t * pDst, If_Cut_t * pSrc ) { memcpy( pDst, pSrc, (size_t)p->nCutBytes );      }If_CutCopy417,23192
static inline void       If_CutSetup( If_Man_t * p, If_Cut_t * pCut        ) { memset(pCut, 0, (size_t)p->nCutBytes); pCut->nLimit = p->pPars->nLutSize; }If_CutSetup418,23331
static inline If_Cut_t * If_ObjCutBest( If_Obj_t * pObj )                    { return &pObj->CutBest;                }If_ObjCutBest420,23487
static inline unsigned   If_ObjCutSign( unsigned ObjId )                     { return (1 << (ObjId % 31));           }If_ObjCutSign421,23606
static inline unsigned   If_ObjCutSignCompute( If_Cut_t * p )                { unsigned s = 0; int i; for ( i = 0; i < If_CutLeaveNum(p); i++ ) s |= If_ObjCutSign(p->pLeaves[i]); return s; }If_ObjCutSignCompute422,23725
static inline float      If_ObjArrTime( If_Obj_t * pObj )                    { return If_ObjCutBest(pObj)->Delay;    }If_ObjArrTime424,23917
static inline void       If_ObjSetArrTime( If_Obj_t * pObj, float ArrTime )  { If_ObjCutBest(pObj)->Delay = ArrTime; }If_ObjSetArrTime425,24036
static inline float      If_ObjLValue( If_Obj_t * pObj )                     { return pObj->LValue;                  }If_ObjLValue427,24156
static inline void       If_ObjSetLValue( If_Obj_t * pObj, float LValue )    { pObj->LValue = LValue;                }If_ObjSetLValue428,24275
static inline void *     If_CutData( If_Cut_t * pCut )                       { return *(void **)pCut;                }If_CutData430,24395
static inline void       If_CutSetData( If_Cut_t * pCut, void * pData )      { *(void **)pCut = pData;               }If_CutSetData431,24514
static inline int        If_CutDataInt( If_Cut_t * pCut )                    { return *(int *)pCut;                  }If_CutDataInt433,24634
static inline void       If_CutSetDataInt( If_Cut_t * pCut, int Data )       { *(int *)pCut = Data;                  }If_CutSetDataInt434,24753
static inline int        If_CutTruthLit( If_Cut_t * pCut )                   { assert( pCut->iCutFunc >= 0 ); return pCut->iCutFunc;             }If_CutTruthLit436,24873
static inline int        If_CutTruthIsCompl( If_Cut_t * pCut )               { assert( pCut->iCutFunc >= 0 ); return Abc_LitIsCompl(pCut->iCutFunc);                               }If_CutTruthIsCompl437,25020
static inline word *     If_CutTruthWR( If_Man_t * p, If_Cut_t * pCut )      { return p->vTtMem[pCut->nLeaves] ? Vec_MemReadEntry(p->vTtMem[pCut->nLeaves], Abc_Lit2Var(pCut->iCutFunc)) : NULL;  }If_CutTruthWR438,25201
static inline unsigned * If_CutTruthUR( If_Man_t * p, If_Cut_t * pCut)       { return (unsigned *)If_CutTruthWR(p, pCut);                        }If_CutTruthUR439,25397
static inline word *     If_CutTruthW( If_Man_t * p, If_Cut_t * pCut )       { assert( pCut->iCutFunc >= 0 ); Abc_TtCopy( p->puTempW, If_CutTruthWR(p, pCut), p->nTruth6Words[pCut->nLeaves], If_CutTruthIsCompl(pCut) ); return p->puTempW;  }If_CutTruthW440,25544
static inline unsigned * If_CutTruth( If_Man_t * p, If_Cut_t * pCut )        { return (unsigned *)If_CutTruthW(p, pCut);                         }If_CutTruth441,25784
static inline int        If_CutDsdLit( If_Man_t * p, If_Cut_t * pCut )       { return Abc_Lit2LitL( Vec_IntArray(p->vTtDsds[pCut->nLeaves]), If_CutTruthLit(pCut) );               }If_CutDsdLit443,25932
static inline int        If_CutDsdIsCompl( If_Man_t * p, If_Cut_t * pCut )   { return Abc_LitIsCompl( If_CutDsdLit(p, pCut) );                                                     }If_CutDsdIsCompl444,26113
static inline char *     If_CutDsdPerm( If_Man_t * p, If_Cut_t * pCut )      { return Vec_StrEntryP( p->vTtPerms[pCut->nLeaves], Abc_Lit2Var(pCut->iCutFunc) * Abc_MaxInt(6, pCut->nLeaves) );           }If_CutDsdPerm445,26294
static inline float      If_CutLutArea( If_Man_t * p, If_Cut_t * pCut )      { return pCut->fAndCut ? p->pPars->nAndArea : (pCut->fUser? (float)pCut->Cost : (p->pPars->pLutLib? p->pPars->pLutLib->pLutAreas[pCut->nLeaves] : (float)1.0));  }If_CutLutArea447,26498
static inline float      If_CutLutDelay( If_LibLut_t * p, int Size, int iPin )  { return p ? (p->fVarPinDelays ? p->pLutDelays[Size][iPin] : p->pLutDelays[Size][0]) : 1.0;                              }If_CutLutDelay448,26738
#define IF_MIN(IF_MIN455,27163
#define IF_MAX(IF_MAX456,27213
#define IF_FLOAT_LARGE IF_FLOAT_LARGE459,27333
#define IF_FLOAT_SMALL IF_FLOAT_SMALL460,27375
#define IF_INT_LARGE IF_INT_LARGE461,27417
#define If_ManForEachCi(If_ManForEachCi464,27490
#define If_ManForEachCo(If_ManForEachCo467,27664
#define If_ManForEachPi(If_ManForEachPi470,27837
#define If_ManForEachPo(If_ManForEachPo473,28080
#define If_ManForEachLatchInput(If_ManForEachLatchInput476,28320
#define If_ManForEachLatchOutput(If_ManForEachLatchOutput478,28501
#define If_ManForEachObj(If_ManForEachObj481,28804
#define If_ManForEachObjReverse(If_ManForEachObjReverse484,29000
#define If_ManForEachNode(If_ManForEachNode487,29171
#define If_ObjForEachCut(If_ObjForEachCut490,29357
#define If_CutForEachLeaf(If_CutForEachLeaf493,29571
#define If_CutForEachLeafReverse(If_CutForEachLeafReverse495,29751
#define If_CutForEachLeafSeq(If_CutForEachLeafSeq500,30254

src/map/if/ifLibBox.c,1195
#define If_LibBoxForEachBox(If_LibBoxForEachBox31,837
If_Box_t * If_BoxStart( char * pName, int Id, int nPis, int nPos, int fSeq, int fBlack, int fOuter )If_BoxStart49,1426
If_Box_t * If_BoxDup( If_Box_t * p )If_BoxDup63,1848
void If_BoxFree( If_Box_t * p )If_BoxFree68,1934
If_LibBox_t * If_LibBoxStart()If_LibBoxStart86,2278
If_LibBox_t * If_LibBoxDup( If_Box_t * p )If_LibBoxDup93,2423
void If_LibBoxFree( If_LibBox_t * p )If_LibBoxFree98,2518
If_Box_t * If_LibBoxReadBox( If_LibBox_t * p, int Id )If_LibBoxReadBox121,2979
If_Box_t * If_LibBoxFindBox( If_LibBox_t * p, char * pName )If_LibBoxFindBox125,3092
void If_LibBoxAdd( If_LibBox_t * p, If_Box_t * pBox )If_LibBoxAdd136,3354
int If_LibBoxNum( If_LibBox_t * p )If_LibBoxNum144,3650
If_LibBox_t * If_LibBoxRead2( char * pFileName )If_LibBoxRead2160,3947
char * If_LibBoxGetToken( FILE * pFile )If_LibBoxGetToken255,6987
If_LibBox_t * If_LibBoxRead( char * pFileName )If_LibBoxRead278,7548
void If_LibBoxPrint( FILE * pFile, If_LibBox_t * p )If_LibBoxPrint339,9272
void If_LibBoxWrite( char * pFileName, If_LibBox_t * p )If_LibBoxWrite356,9991
int If_LibBoxLoad( char * pFileName )If_LibBoxLoad380,10508

src/map/if/ifTune.c,6811
#define IFN_INS IFN_INS34,919
#define IFN_WRD IFN_WRD35,941
#define IFN_PAR IFN_PAR36,995
    IFN_DSD_NONE = 0,              // 0:  unknownIFN_DSD_NONE40,1051
    IFN_DSD_CONST0,                // 1:  constantIFN_DSD_CONST041,1101
    IFN_DSD_VAR,                   // 2:  variableIFN_DSD_VAR42,1152
    IFN_DSD_AND,                   // 3:  ANDIFN_DSD_AND43,1203
    IFN_DSD_XOR,                   // 4:  XORIFN_DSD_XOR44,1249
    IFN_DSD_MUX,                   // 5:  MUXIFN_DSD_MUX45,1295
    IFN_DSD_PRIME                  // 6:  PRIMEIFN_DSD_PRIME46,1341
} Ifn_DsdType_t;Ifn_DsdType_t47,1389
static char * Ifn_Symbs[16] = { Ifn_Symbs50,1423
typedef struct Ifn_Obj_t_  Ifn_Obj_t;Ifn_Obj_t60,1798
struct Ifn_Obj_t_Ifn_Obj_t_61,1836
    unsigned               Type    :  3;      // node typeType63,1856
    unsigned               nFanins :  5;      // fanin counternFanins64,1915
    unsigned               iFirst  :  8;      // first parameteriFirst65,1978
    unsigned               Var     : 16;      // current variableVar66,2043
    int                    Fanins[IFN_INS];   // fanin IDsFanins67,2109
struct Ifn_Ntk_t_ Ifn_Ntk_t_69,2171
    int                    nInps;             // inputsnInps72,2214
    int                    nObjs;             // objectsnObjs73,2270
    Ifn_Obj_t              Nodes[2*IFN_INS];  // nodesNodes74,2327
    int                    pConstr[IFN_INS*IFN_INS];  // constraint pairspConstr76,2401
    int                    nConstr;           // number of pairsnConstr77,2475
    int                    nVars;             // variablesnVars79,2557
    int                    nWords;            // truth table wordsnWords80,2616
    int                    nParsVNum;         // selection parameters per variablenParsVNum81,2683
    int                    nParsVIni;         // first selection parameternParsVIni82,2766
    int                    nPars;             // total parametersnPars83,2841
    word *                 pTruth;            // user truth tablepTruth84,2907
    int                    Values[IFN_PAR];            // variable valuesValues86,3000
    word                   pTtElems[IFN_INS*IFN_WRD];  // elementary truth tablespTtElems87,3074
    word                   pTtObjs[2*IFN_INS*IFN_WRD]; // object truth tablespTtObjs88,3156
static inline word *       Ifn_ElemTruth( Ifn_Ntk_t * p, int i ) { return p->pTtElems + i * Abc_TtWordNum(p->nInps); }Ifn_ElemTruth91,3238
static inline word *       Ifn_ObjTruth( Ifn_Ntk_t * p, int i )  { return p->pTtObjs + i * p->nWords;                }Ifn_ObjTruth92,3357
int Ifn_Prepare( Ifn_Ntk_t * p, word * pTruth, int nVars )Ifn_Prepare115,4226
void Ifn_NtkPrint( Ifn_Ntk_t * p )Ifn_NtkPrint141,5094
int Ifn_NtkLutSizeMax( Ifn_Ntk_t * p )Ifn_NtkLutSizeMax159,5601
int Ifn_NtkInputNum( Ifn_Ntk_t * p )Ifn_NtkInputNum167,5852
int Ifn_ErrorMessage( const char * format, ...  )Ifn_ErrorMessage183,6149
int Inf_ManOpenSymb( char * pStr )Inf_ManOpenSymb194,6404
int Ifn_ManStrCheck( char * pStr, int * pnInps, int * pnObjs )Ifn_ManStrCheck206,6633
static inline char * Ifn_NtkParseFindClosingParenthesis( char * pStr, char Open, char Close )Ifn_NtkParseFindClosingParenthesis236,7714
int Ifn_NtkParseInt_rec( char * pStr, Ifn_Ntk_t * p, char ** ppFinal, int * piNode )Ifn_NtkParseInt_rec251,8077
int Ifn_NtkParseInt( char * pStr, Ifn_Ntk_t * p )Ifn_NtkParseInt285,9428
int Ifn_ManStrType2( char * pStr )Ifn_ManStrType2316,10574
int Ifn_ManStrCheck2( char * pStr, int * pnInps, int * pnObjs )Ifn_ManStrCheck2324,10722
int Ifn_NtkParseInt2( char * pStr, Ifn_Ntk_t * p )Ifn_NtkParseInt2378,12888
void Ifn_NtkParseConstraints( char * pStr, Ifn_Ntk_t * p )Ifn_NtkParseConstraints423,14940
Ifn_Ntk_t * Ifn_NtkParse( char * pStr )Ifn_NtkParse440,15540
int Ifn_NtkTtBits( char * pStr )Ifn_NtkTtBits464,16084
Gia_Man_t * Ifn_ManStrFindModel( Ifn_Ntk_t * p )Ifn_ManStrFindModel488,16636
Gia_Man_t * Ifn_ManStrFindCofactors( int nIns, Gia_Man_t * p )Ifn_ManStrFindCofactors548,18880
static inline Cnf_Dat_t * Cnf_DeriveGiaRemapped( Gia_Man_t * p )Cnf_DeriveGiaRemapped586,20054
sat_solver * Ifn_ManStrFindSolver( Gia_Man_t * p, Vec_Int_t ** pvPiVars, Vec_Int_t ** pvPoVars )Ifn_ManStrFindSolver595,20307
sat_solver * Ifn_ManSatBuild( Ifn_Ntk_t * p, Vec_Int_t ** pvPiVars, Vec_Int_t ** pvPoVars )Ifn_ManSatBuild619,21187
void * If_ManSatBuildFromCell( char * pStr, Vec_Int_t ** pvPiVars, Vec_Int_t ** pvPoVars, Ifn_Ntk_t ** ppNtk )If_ManSatBuildFromCell633,21687
void Ifn_ManSatPrintPerm( char * pPerms, int nVars )Ifn_ManSatPrintPerm655,22253
int Ifn_ManSatCheckOne( sat_solver * pSat, Vec_Int_t * vPoVars, word * pTruth, int nVars, int * pPerm, int nInps, Vec_Int_t * vLits )Ifn_ManSatCheckOne662,22416
void Ifn_ManSatDeriveOne( sat_solver * pSat, Vec_Int_t * vPiVars, Vec_Int_t * vValues )Ifn_ManSatDeriveOne691,23530
int If_ManSatFindCofigBits( void * pSat, Vec_Int_t * vPiVars, Vec_Int_t * vPoVars, word * pTruth, int nVars, word Perm, int nInps, Vec_Int_t * vValues )If_ManSatFindCofigBits698,23778
int Ifn_ManSatFindCofigBitsTest( Ifn_Ntk_t * p, word * pTruth, int nVars, word Perm )Ifn_ManSatFindCofigBitsTest716,24462
int If_ManSatDeriveGiaFromBits( void * pGia, Ifn_Ntk_t * p, word * pConfigData, Vec_Int_t * vLeaves, Vec_Int_t * vCover )If_ManSatDeriveGiaFromBits742,25266
void * If_ManDeriveGiaFromCells( void * pGia )If_ManDeriveGiaFromCells825,28450
word * Ifn_NtkDeriveTruth( Ifn_Ntk_t * p, int * pValues )Ifn_NtkDeriveTruth906,31295
void Ifn_TtComparisonConstr( word * pTruth, int nVars, int fMore, int fEqual )Ifn_TtComparisonConstr978,33847
int Ifn_AddClause( sat_solver * pSat, int * pBeg, int * pEnd )Ifn_AddClause1021,35995
void Ifn_NtkAddConstrOne( sat_solver * pSat, Vec_Int_t * vCover, int * pVars, int nVars )Ifn_NtkAddConstrOne1033,36344
void Ifn_NtkAddConstraints( Ifn_Ntk_t * p, sat_solver * pSat )Ifn_NtkAddConstraints1053,37066
int Ifn_NtkAddClauses( Ifn_Ntk_t * p, int * pValues, sat_solver * pSat )Ifn_NtkAddClauses1110,39147
void Ifn_NtkMatchPrintStatus( sat_solver * p, int Iter, int status, int iMint, int Value, abctime clk )Ifn_NtkMatchPrintStatus1260,44916
void Ifn_NtkMatchPrintConfig( Ifn_Ntk_t * p, sat_solver * pSat )Ifn_NtkMatchPrintConfig1276,45518
word Ifn_NtkMatchCollectPerm( Ifn_Ntk_t * p, sat_solver * pSat )Ifn_NtkMatchCollectPerm1291,46068
void Ifn_NtkMatchCollectConfig( Ifn_Ntk_t * p, sat_solver * pSat, word * pConfig )Ifn_NtkMatchCollectConfig1305,46484
void Ifn_NtkMatchPrintPerm( word Perm, int nInps )Ifn_NtkMatchPrintPerm1320,47032
int Ifn_NtkMatch( Ifn_Ntk_t * p, word * pTruth, int nVars, int nConfls, int fVerbose, int fVeryVerbose, word * pConfig )Ifn_NtkMatch1328,47233
void Ifn_NtkRead()Ifn_NtkRead1416,50233

src/map/if/ifTest.c,0

src/map/if/ifDec16.c,8159
#define CLU_VAR_MAX CLU_VAR_MAX31,845
#define CLU_WRD_MAX CLU_WRD_MAX32,869
#define CLU_MEM_MAX CLU_MEM_MAX33,915
#define CLU_UNUSED CLU_UNUSED34,950
typedef struct If_Grp_t_ If_Grp_t;If_Grp_t37,994
struct If_Grp_t_If_Grp_t_38,1029
    char       nVars;nVars40,1048
    char       nMyu;nMyu41,1070
    char       pVars[CLU_VAR_MAX];pVars42,1091
typedef struct If_Hte_t_ If_Hte_t;If_Hte_t46,1150
struct If_Hte_t_If_Hte_t_47,1185
    If_Hte_t * pNext;pNext49,1204
    unsigned   Group;Group50,1226
    unsigned   Counter;Counter51,1248
    word       pTruth[1];pTruth52,1272
static word PMasks[5][3] = {PMasks56,1328
static word Truth6[6] = {Truth664,1891
static word TruthAll[CLU_VAR_MAX][CLU_WRD_MAX] = {{0}};TruthAll72,2129
int s_Count2 = 0;s_Count279,2383
int s_Count3 = 0;s_Count380,2401
static inline unsigned If_CluGrp2Uns( If_Grp_t * pG )If_CluGrp2Uns86,2640
static inline void If_CluUns2Grp( unsigned Group, If_Grp_t * pG )If_CluUns2Grp96,2855
unsigned int If_CluPrimeCudd( unsigned int p )If_CluPrimeCudd104,3045
static inline int If_CluWordNum( int nVars )If_CluWordNum130,3444
static inline int If_CluCountOnes( word t )If_CluCountOnes134,3537
void If_CluHashTableCheck( If_Man_t * p )If_CluHashTableCheck144,4105
void If_CluHashPrintStats( If_Man_t * p, int t )If_CluHashPrintStats164,4918
int If_CluHashFindMedian( If_Man_t * p, int t )If_CluHashFindMedian180,5347
int If_CluHashKey( word * pTruth, int nWords, int Size )If_CluHashKey214,6302
unsigned * If_CluHashLookup( If_Man_t * p, word * pTruth, int t )If_CluHashLookup233,6875
static inline void If_CluClear( word * pIn, int nVars )If_CluClear326,10564
static inline void If_CluFill( word * pIn, int nVars )If_CluFill332,10723
static inline void If_CluCopy( word * pOut, word * pIn, int nVars )If_CluCopy338,10888
static inline int If_CluEqual( word * pOut, word * pIn, int nVars )If_CluEqual344,11065
static inline void If_CluAnd( word * pRes, word * pIn1, word * pIn2, int nVars )If_CluAnd352,11285
static inline void If_CluSharp( word * pRes, word * pIn1, word * pIn2, int nVars )If_CluSharp358,11486
static inline void If_CluOr( word * pRes, word * pIn1, word * pIn2, int nVars )If_CluOr364,11691
static inline word If_CluAdjust( word t, int nVars )If_CluAdjust370,11891
static inline void If_CluAdjustBig( word * pF, int nVarsCur, int nVarsMax )If_CluAdjustBig390,12408
static inline void If_CluSwapAdjacent( word * pOut, word * pIn, int iVar, int nVars )If_CluSwapAdjacent402,12742
void If_CluChangePhase( word * pF, int nVars, int iVar )If_CluChangePhase439,14027
void If_CluCountOnesInCofs( word * pTruth, int nVars, int * pStore )If_CluCountOnesInCofs465,14703
unsigned If_CluSemiCanonicize( word * pTruth, int nVars, int * pCanonPerm )If_CluSemiCanonicize485,15490
void If_CluSemiCanonicizeVerify( word * pTruth, word * pTruth0, int nVars, int * pCanonPerm, unsigned uCanonPhase )If_CluSemiCanonicizeVerify539,17123
void If_CluPrintGroup( If_Grp_t * g )If_CluPrintGroup580,18464
void If_CluPrintConfig( int nVars, If_Grp_t * g, If_Grp_t * r, word BStruth, word * pFStruth )If_CluPrintConfig590,18700
void If_CluInitTruthTables()If_CluInitTruthTables606,19243
static void If_CluComposeLut( int nVars, If_Grp_t * g, word * t, word f[6][CLU_WRD_MAX], word * r )If_CluComposeLut623,19732
void If_CluVerify( word * pF, int nVars, If_Grp_t * g, If_Grp_t * r, word BStruth, word * pFStruth )If_CluVerify641,20283
void If_CluVerify3( word * pF, int nVars, If_Grp_t * g, If_Grp_t * g2, If_Grp_t * r, word BStruth, word BStruth2, word FStruth )If_CluVerify3673,21495
void If_CluSwapVars( word * pTruth, int nVars, int * V2P, int * P2V, int iVar, int jVar )If_CluSwapVars723,23733
void If_CluReverseOrder( word * pTruth, int nVars, int * V2P, int * P2V, int iVarStart )If_CluReverseOrder800,27164
void If_CluMoveVar2( word * pF, int nVars, int * Var2Pla, int * Pla2Var, int v, int p )If_CluMoveVar2812,27494
void If_CluMoveVar( word * pF, int nVars, int * Var2Pla, int * Pla2Var, int v, int p )If_CluMoveVar818,27700
void If_CluMoveGroupToMsb( word * pF, int nVars, int * V2P, int * P2V, If_Grp_t * g )If_CluMoveGroupToMsb855,28950
void If_CluReverseOrder_old( word * pF, int nVars, int * V2P, int * P2V, int iVarStart )If_CluReverseOrder_old864,29210
int If_CluCountCofs( word * pF, int nVars, int nBSsize, int iShift, word pCofs[3][CLU_WRD_MAX/4] )If_CluCountCofs903,30200
int If_CluCountCofs4( word * pF, int nVars, int nBSsize, word pCofs[6][CLU_WRD_MAX/4] )If_CluCountCofs4978,32749
void If_CluCofactors( word * pF, int nVars, int iVar, word * pCof0, word * pCof1 )If_CluCofactors1015,33972
int If_CluDetectSpecialCaseCofs( word * pF, int nVars, int iVar )If_CluDetectSpecialCaseCofs1046,34891
If_Grp_t If_CluDecUsingCofs( word * pTruth, int nVars, int nLutLeaf )If_CluDecUsingCofs1112,36709
word If_CluDeriveDisjoint( word * pF, int nVars, int * V2P, int * P2V, If_Grp_t * g, If_Grp_t * r )If_CluDeriveDisjoint1183,39155
void If_CluDeriveDisjoint4( word * pF, int nVars, int * V2P, int * P2V, If_Grp_t * g, If_Grp_t * r, word * pTruth0, word * pTruth1 )If_CluDeriveDisjoint41208,39897
word If_CluDeriveNonDisjoint( word * pF, int nVars, int * V2P, int * P2V, If_Grp_t * g, If_Grp_t * r )If_CluDeriveNonDisjoint1237,40875
int If_CluCheckNonDisjointGroup( word * pF, int nVars, int * V2P, int * P2V, If_Grp_t * g )If_CluCheckNonDisjointGroup1278,42505
If_Grp_t If_CluFindGroup( word * pF, int nVars, int iVarStart, int iVarStop, int * V2P, int * P2V, int nBSsize, int fDisjoint )If_CluFindGroup1306,43516
void If_CluCheckGroup( word * pTruth, int nVars, If_Grp_t * g )If_CluCheckGroup1420,47278
void If_CluCheckPerm( word * pTruth, word * pF, int nVars, int * V2P, int * P2V )If_CluCheckPerm1451,48356
static inline int If_CluSuppIsMinBase( int Supp )If_CluSuppIsMinBase1466,48691
static inline int If_CluHasVar( word * t, int nVars, int iVar )If_CluHasVar1470,48780
static inline int If_CluSupport( word * t, int nVars )If_CluSupport1495,49433
int If_CluSupportSize( word * t, int nVars )If_CluSupportSize1503,49637
static inline void If_CluTruthShrink( word * pF, int nVars, int nVarsAll, unsigned Phase )If_CluTruthShrink1511,49833
int If_CluMinimumBase( word * t, int * pSupp, int nVarsAll, int * pnVars )If_CluMinimumBase1532,50522
If_Grp_t If_CluCheck( If_Man_t * p, word * pTruth0, int nVars, int iVarStart, int iVarStop, int nLutLeaf, int nLutRoot, If_CluCheck1553,51080
int If_CluCheckDecInAny( word t, int nVars )If_CluCheckDecInAny1767,58238
int If_CluCheckDecIn( word t, int nVars )If_CluCheckDecIn1792,59087
int If_CluCheckDecInU( word t, int nVars )If_CluCheckDecInU1818,60009
int If_CluCheckDecOut( word t, int nVars )If_CluCheckDecOut1840,60805
int If_CluCheckDecOutU( word t, int nVars )If_CluCheckDecOutU1853,61167
int If_CutPerformCheck45( If_Man_t * p, unsigned * pTruth, int nVars, int nLeaves, char * pStr )If_CutPerformCheck451865,61429
int If_CutPerformCheck54( If_Man_t * p, unsigned * pTruth, int nVars, int nLeaves, char * pStr )If_CutPerformCheck541886,62272
If_Grp_t If_CluCheck3( If_Man_t * p, word * pTruth0, int nVars, int nLutLeaf, int nLutLeaf2, int nLutRoot, If_CluCheck31909,63146
int If_CluCheckExt( void * pMan, word * pTruth, int nVars, int nLutLeaf, int nLutRoot, If_CluCheckExt2066,68319
int If_CluCheckExt3( void * pMan, word * pTruth, int nVars, int nLutLeaf, int nLutLeaf2, int nLutRoot, If_CluCheckExt32079,68832
float If_CluDelayMax( If_Grp_t * g, float * pDelays )If_CluDelayMax2093,69411
float If_CutDelayLutStruct( If_Man_t * p, If_Cut_t * pCut, char * pStr, float WireDelay )If_CutDelayLutStruct2103,69698
static Vec_Mem_t * s_vTtMem = NULL;s_vTtMem2197,72731
static Vec_Mem_t * s_vTtMem2 = NULL;s_vTtMem22198,72767
int If_TtMemCutNum()  { return Vec_MemEntryNum(s_vTtMem); }If_TtMemCutNum2199,72804
int If_TtMemCutNum2() { return Vec_MemEntryNum(s_vTtMem2); }If_TtMemCutNum22200,72864
int If_CutPerformCheck16( If_Man_t * p, unsigned * pTruth0, int nVars, int nLeaves, char * pStr )If_CutPerformCheck162216,73368
void If_CluTest()If_CluTest2301,76370

src/map/if/ifReduce.c,1982
void If_ManImproveMapping( If_Man_t * p )If_ManImproveMapping51,1959
void If_ManImproveExpand( If_Man_t * p, int nLimit )If_ManImproveExpand80,2754
int If_ManImproveCutCost( If_Man_t * p, Vec_Ptr_t * vFront )If_ManImproveCutCost107,3556
void If_ManImproveNodeExpand( If_Man_t * p, If_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vFrontOld, Vec_Ptr_t * vVisited )If_ManImproveNodeExpand128,4074
void If_ManImproveMark_rec( If_Man_t * p, If_Obj_t * pObj, Vec_Ptr_t * vVisited )If_ManImproveMark_rec182,5891
void If_ManImproveNodePrepare( If_Man_t * p, If_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vFrontOld, Vec_Ptr_t * vVisited )If_ManImproveNodePrepare204,6486
void If_ManImproveNodeUpdate( If_Man_t * p, If_Obj_t * pObj, Vec_Ptr_t * vFront )If_ManImproveNodeUpdate236,7396
int If_ManImproveNodeWillGrow( If_Man_t * p, If_Obj_t * pObj )If_ManImproveNodeWillGrow266,8195
int If_ManImproveNodeFaninCost( If_Man_t * p, If_Obj_t * pObj )If_ManImproveNodeFaninCost286,8747
void If_ManImproveNodeFaninUpdate( If_Man_t * p, If_Obj_t * pObj, Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited )If_ManImproveNodeFaninUpdate313,9537
int If_ManImproveNodeFaninCompact0( If_Man_t * p, If_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited )If_ManImproveNodeFaninCompact0345,10369
int If_ManImproveNodeFaninCompact1( If_Man_t * p, If_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited )If_ManImproveNodeFaninCompact1375,11187
int If_ManImproveNodeFaninCompact2( If_Man_t * p, If_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited )If_ManImproveNodeFaninCompact2403,11930
int If_ManImproveNodeFaninCompact_int( If_Man_t * p, If_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited )If_ManImproveNodeFaninCompact_int431,12674
void If_ManImproveNodeFaninCompact( If_Man_t * p, If_Obj_t * pObj, int nLimit, Vec_Ptr_t * vFront, Vec_Ptr_t * vVisited )If_ManImproveNodeFaninCompact454,13488

src/map/if/ifCut.c,3538
static inline int If_CutVerifyCut( If_Cut_t * pBase, If_Cut_t * pCut ) // check if pCut is contained in pBaseIf_CutVerifyCut45,1258
int If_CutVerifyCuts( If_Set_t * pCutSet, int fOrdered )If_CutVerifyCuts62,1718
static inline int If_CutCheckDominance( If_Cut_t * pDom, If_Cut_t * pCut )If_CutCheckDominance119,3414
int If_CutFilter( If_Set_t * pCutSet, If_Cut_t * pCut, int fSaveCut0 )If_CutFilter146,4176
int If_CutMergeOrdered_( If_Man_t * p, If_Cut_t * pC0, If_Cut_t * pC1, If_Cut_t * pC )If_CutMergeOrdered_201,5953
int If_CutMergeOrdered( If_Man_t * p, If_Cut_t * pC0, If_Cut_t * pC1, If_Cut_t * pC )If_CutMergeOrdered290,8391
int If_CutMerge( If_Man_t * p, If_Cut_t * pCut0, If_Cut_t * pCut1, If_Cut_t * pCut )If_CutMerge364,10396
int If_CutCompareDelay( If_Man_t * p, If_Cut_t ** ppC0, If_Cut_t ** ppC1 )If_CutCompareDelay408,11526
int If_CutCompareDelayOld( If_Man_t * p, If_Cut_t ** ppC0, If_Cut_t ** ppC1 )If_CutCompareDelayOld438,12328
int If_CutCompareArea( If_Man_t * p, If_Cut_t ** ppC0, If_Cut_t ** ppC1 )If_CutCompareArea468,13133
static inline int If_ManSortCompare( If_Man_t * p, If_Cut_t * pC0, If_Cut_t * pC1 )If_ManSortCompare502,14053
static inline int If_ManSortCompare_old( If_Man_t * p, If_Cut_t * pC0, If_Cut_t * pC1 )If_ManSortCompare_old673,20145
void If_CutSort( If_Man_t * p, If_Set_t * pCutSet, If_Cut_t * pCut )If_CutSort738,22129
void If_CutOrder( If_Cut_t * pCut )If_CutOrder797,23976
int If_CutCheck( If_Cut_t * pCut )If_CutCheck826,24739
void If_CutPrint( If_Cut_t * pCut )If_CutPrint856,25441
void If_CutPrintTiming( If_Man_t * p, If_Cut_t * pCut )If_CutPrintTiming876,25926
void If_CutLift( If_Cut_t * pCut )If_CutLift897,26483
float If_CutAreaFlow( If_Man_t * p, If_Cut_t * pCut )If_CutAreaFlow919,26925
float If_CutEdgeFlow( If_Man_t * p, If_Cut_t * pCut )If_CutEdgeFlow957,27884
float If_CutPowerFlow( If_Man_t * p, If_Cut_t * pCut, If_Obj_t * pRoot )If_CutPowerFlow995,28834
float If_CutAverageRefs( If_Man_t * p, If_Cut_t * pCut )If_CutAverageRefs1026,29674
float If_CutAreaDeref( If_Man_t * p, If_Cut_t * pCut )If_CutAreaDeref1048,30222
float If_CutAreaRef( If_Man_t * p, If_Cut_t * pCut )If_CutAreaRef1075,30907
float If_CutAreaDerefed( If_Man_t * p, If_Cut_t * pCut )If_CutAreaDerefed1102,31589
float If_CutAreaRefed( If_Man_t * p, If_Cut_t * pCut )If_CutAreaRefed1125,32225
float If_CutEdgeDeref( If_Man_t * p, If_Cut_t * pCut )If_CutEdgeDeref1149,32857
float If_CutEdgeRef( If_Man_t * p, If_Cut_t * pCut )If_CutEdgeRef1176,33533
float If_CutEdgeDerefed( If_Man_t * p, If_Cut_t * pCut )If_CutEdgeDerefed1203,34206
float If_CutEdgeRefed( If_Man_t * p, If_Cut_t * pCut )If_CutEdgeRefed1226,34854
float If_CutPowerDeref( If_Man_t * p, If_Cut_t * pCut, If_Obj_t * pRoot )If_CutPowerDeref1250,35498
float If_CutPowerRef( If_Man_t * p, If_Cut_t * pCut, If_Obj_t * pRoot )If_CutPowerRef1278,36279
float If_CutPowerDerefed( If_Man_t * p, If_Cut_t * pCut, If_Obj_t * pRoot )If_CutPowerDerefed1306,37058
float If_CutPowerRefed( If_Man_t * p, If_Cut_t * pCut, If_Obj_t * pRoot )If_CutPowerRefed1329,37725
int If_CutGetCutMinLevel( If_Man_t * p, If_Cut_t * pCut )If_CutGetCutMinLevel1352,38379
int If_CutGetCone_rec( If_Man_t * p, If_Obj_t * pObj, If_Cut_t * pCut )If_CutGetCone_rec1372,38908
int If_CutGetCones( If_Man_t * p )If_CutGetCones1409,39987
void If_CutFoundFanins_rec( If_Obj_t * pObj, Vec_Int_t * vLeaves )If_CutFoundFanins_rec1439,40800
int If_CutCountTotalFanins( If_Man_t * p )If_CutCountTotalFanins1461,41390

src/map/if/ifDelay.c,1258
#define IF_MAX_CUBES IF_MAX_CUBES31,846
static inline int If_CutMaxCubeSize( Vec_Int_t * vCover, int nVars )If_CutMaxCubeSize48,1382
int If_CutDelaySop( If_Man_t * p, If_Cut_t * pCut )If_CutDelaySop64,1832
int If_CutSopBalancePinDelaysInt( Vec_Int_t * vCover, int * pTimes, word * pFaninRes, int nSuppAll, word * pRes )If_CutSopBalancePinDelaysInt120,3866
int If_CutSopBalancePinDelaysIntInt( Vec_Int_t * vCover, int * pTimes, int nSuppAll, char * pPerm )If_CutSopBalancePinDelaysIntInt149,5096
int If_CutSopBalancePinDelays( If_Man_t * p, If_Cut_t * pCut, char * pPerm )If_CutSopBalancePinDelays159,5502
int If_CutSopBalanceEvalInt( Vec_Int_t * vCover, int * pTimes, int * pFaninLits, Vec_Int_t * vAig, int * piRes, int nSuppAll, int * pArea )If_CutSopBalanceEvalInt192,6528
int If_CutSopBalanceEvalIntInt( Vec_Int_t * vCover, int nLeaves, int * pTimes, Vec_Int_t * vAig, int fCompl, int * pArea ) If_CutSopBalanceEvalIntInt232,8449
int If_CutSopBalanceEval( If_Man_t * p, If_Cut_t * pCut, Vec_Int_t * vAig )If_CutSopBalanceEval248,9125
int If_CutLutBalancePinDelays( If_Man_t * p, If_Cut_t * pCut, char * pPerm )If_CutLutBalancePinDelays327,12120
int If_CutLutBalanceEval( If_Man_t * p, If_Cut_t * pCut )If_CutLutBalanceEval369,13444

src/map/if/ifData2.c,0

src/map/if/ifTruth.c,855
void If_CutTruthPermute( word * pTruth, int nLeaves, int nVars, int nWords, float * pDelays, int * pVars )If_CutTruthPermute48,1357
void If_CutRotatePins( If_Man_t * p, If_Cut_t * pCut )If_CutRotatePins67,1920
int If_CutComputeTruth( If_Man_t * p, If_Cut_t * pCut, If_Cut_t * pCut0, If_Cut_t * pCut1, int fCompl0, int fCompl1 )If_CutComputeTruth98,3075
int If_CutComputeTruthPerm_int( If_Man_t * p, If_Cut_t * pCut, If_Cut_t * pCut0, If_Cut_t * pCut1, int iCutFunc0, int iCutFunc1 )If_CutComputeTruthPerm_int163,6141
int If_CutComputeTruthPerm( If_Man_t * p, If_Cut_t * pCut, If_Cut_t * pCut0, If_Cut_t * pCut1, int iCutFunc0, int iCutFunc1 )If_CutComputeTruthPerm268,10451
Vec_Mem_t * If_DeriveHashTable6( int nVars, word uTruth )If_DeriveHashTable6344,13737
int If_CutCheckTruth6( If_Man_t * p, If_Cut_t * pCut )If_CutCheckTruth6395,15296

src/map/if/ifDec75.c,648
int Dau_DsdCheckDecExist_rec( char * pStr, char ** p, int * pMatches, int * pnSupp )Dau_DsdCheckDecExist_rec48,1378
int Dau_DsdCheckDecExist( char * pDsd )Dau_DsdCheckDecExist104,3022
int Dau_DsdCheckDecAndExist_rec( char * pStr, char ** p, int * pMatches, int * pnSupp )Dau_DsdCheckDecAndExist_rec123,3506
int Dau_DsdCheckDecAndExist( char * pDsd )Dau_DsdCheckDecAndExist185,5432
int If_CutPerformCheck75__( If_Man_t * p, unsigned * pTruth, int nVars, int nLeaves, char * pStr )If_CutPerformCheck75__204,5893
int If_CutPerformCheck75( If_Man_t * p, unsigned * pTruth0, int nVars, int nLeaves, char * pStr )If_CutPerformCheck75303,9286

src/map/if/ifCache.c,177
void If_ManCacheRecord( If_Man_t * p, int iDsd0, int iDsd1, int nShared, int iDsd )If_ManCacheRecord45,1249
void If_ManCacheAnalize( If_Man_t * p )If_ManCacheAnalize70,1996

src/map/if/ifDsd.c,18222
#define DSD_VERSION DSD_VERSION51,1141
    IF_DSD_NONE = 0,               // 0:  unknownIF_DSD_NONE55,1202
    IF_DSD_CONST0,                 // 1:  constantIF_DSD_CONST056,1252
    IF_DSD_VAR,                    // 2:  variableIF_DSD_VAR57,1303
    IF_DSD_AND,                    // 3:  ANDIF_DSD_AND58,1354
    IF_DSD_XOR,                    // 4:  XORIF_DSD_XOR59,1400
    IF_DSD_MUX,                    // 5:  MUXIF_DSD_MUX60,1446
    IF_DSD_PRIME                   // 6:  PRIMEIF_DSD_PRIME61,1492
} If_DsdType_t;If_DsdType_t62,1540
typedef struct If_DsdObj_t_ If_DsdObj_t;If_DsdObj_t64,1557
struct If_DsdObj_t_If_DsdObj_t_65,1598
    unsigned       Id;             // node IDId67,1620
    unsigned       Type    :  3;   // node typeType68,1666
    unsigned       nSupp   :  5;   // variablenSupp69,1714
    unsigned       fMark   :  1;   // user markfMark70,1761
    unsigned       Count   : 18;   // variableCount71,1809
    unsigned       nFans   :  5;   // fanin countnFans72,1856
    unsigned       pFans[0];       // faninspFans73,1906
struct If_DsdMan_t_If_DsdMan_t_76,1955
    char *         pStore;         // input/output filepStore78,1977
    int            nVars;          // max var numbernVars79,2033
    int            LutSize;        // LUT sizeLutSize80,2086
    int            nWords;         // word numbernWords81,2133
    int            nBins;          // table sizenBins82,2183
    unsigned *     pBins;          // hash tablepBins83,2232
    Mem_Flex_t *   pMem;           // memory for nodespMem84,2281
    Vec_Ptr_t      vObjs;          // objectsvObjs85,2336
    Vec_Int_t      vNexts;         // next pointersvNexts86,2382
    Vec_Int_t      vTruths;        // truth IDs of prime nodesvTruths87,2434
    Vec_Int_t *    vTemp1;         // tempvTemp188,2497
    Vec_Int_t *    vTemp2;         // tempvTemp289,2540
    word **        pTtElems;       // elementary TTspTtElems90,2583
    Vec_Mem_t *    vTtMem[IF_MAX_FUNC_LUTSIZE+1];  // truth table memory and hash tablevTtMem91,2636
    Vec_Ptr_t *    vTtDecs[IF_MAX_FUNC_LUTSIZE+1]; // truth table decompositionsvTtDecs92,2724
    Vec_Wec_t *    vIsops[IF_MAX_FUNC_LUTSIZE+1];  // ISOP for each functionvIsops93,2805
    int *          pSched[IF_MAX_FUNC_LUTSIZE];    // grey code schedulespSched94,2882
    int            nTtBits;        // the number of truth table bitsnTtBits95,2956
    int            nConfigWords;   // the number of words for config data per nodenConfigWords96,3025
    Vec_Wrd_t *    vConfigs;       // permutationsvConfigs97,3108
    Gia_Man_t *    pTtGia;         // GIA to represent truth tablespTtGia98,3159
    Vec_Int_t *    vCover;         // temporary memoryvCover99,3227
    void *         pSat;           // SAT solverpSat100,3282
    char *         pCellStr;       // symbolic cell descriptionpCellStr101,3331
    int            nObjsPrev;      // previous number of objectsnObjsPrev102,3395
    int            fNewAsUseless;  // set new as uselessfNewAsUseless103,3460
    int            nUniqueHits;    // statisticsnUniqueHits104,3517
    int            nUniqueMisses;  // statisticsnUniqueMisses105,3566
    abctime        timeDsd;        // statisticstimeDsd106,3615
    abctime        timeCanon;      // statisticstimeCanon107,3664
    abctime        timeCheck;      // statisticstimeCheck108,3713
    abctime        timeCheck2;     // statisticstimeCheck2109,3762
    abctime        timeVerify;     // statisticstimeVerify110,3811
static inline int           If_DsdObjWordNum( int nFans )                                    { return sizeof(If_DsdObj_t) / 8 + nFans / 2 + ((nFans & 1) > 0);              }If_DsdObjWordNum113,3864
static inline int           If_DsdObjTruthId( If_DsdMan_t * p, If_DsdObj_t * pObj )          { return (pObj->Type == IF_DSD_PRIME && pObj->nFans > 2) ? Vec_IntEntry(&p->vTruths, pObj->Id) : -1;     }If_DsdObjTruthId114,4038
static inline word *        If_DsdObjTruth( If_DsdMan_t * p, If_DsdObj_t * pObj )            { return Vec_MemReadEntry(p->vTtMem[pObj->nFans], If_DsdObjTruthId(p, pObj));  }If_DsdObjTruth115,4238
static inline void          If_DsdObjSetTruth( If_DsdMan_t * p, If_DsdObj_t * pObj, int Id ) { assert( pObj->Type == IF_DSD_PRIME && pObj->nFans > 2 ); Vec_IntWriteEntry(&p->vTruths, pObj->Id, Id); }If_DsdObjSetTruth116,4412
static inline void          If_DsdObjClean( If_DsdObj_t * pObj )                       { memset( pObj, 0, sizeof(If_DsdObj_t) );                                            }If_DsdObjClean118,4613
static inline int           If_DsdObjId( If_DsdObj_t * pObj )                          { return pObj->Id;                                                                   }If_DsdObjId119,4787
static inline int           If_DsdObjType( If_DsdObj_t * pObj )                        { return pObj->Type;                                                                 }If_DsdObjType120,4961
static inline int           If_DsdObjIsVar( If_DsdObj_t * pObj )                       { return (int)(pObj->Type == IF_DSD_VAR);                                            }If_DsdObjIsVar121,5135
static inline int           If_DsdObjSuppSize( If_DsdObj_t * pObj )                    { return pObj->nSupp;                                                                }If_DsdObjSuppSize122,5309
static inline int           If_DsdObjFaninNum( If_DsdObj_t * pObj )                    { return pObj->nFans;                                                                }If_DsdObjFaninNum123,5483
static inline int           If_DsdObjFaninC( If_DsdObj_t * pObj, int i )               { assert(i < (int)pObj->nFans); return Abc_LitIsCompl(pObj->pFans[i]);               }If_DsdObjFaninC124,5657
static inline int           If_DsdObjFaninLit( If_DsdObj_t * pObj, int i )             { assert(i < (int)pObj->nFans); return pObj->pFans[i];                               }If_DsdObjFaninLit125,5831
static inline If_DsdObj_t * If_DsdVecObj( Vec_Ptr_t * p, int Id )                      { return (If_DsdObj_t *)Vec_PtrEntry(p, Id);                                         }If_DsdVecObj127,6006
static inline If_DsdObj_t * If_DsdVecConst0( Vec_Ptr_t * p )                           { return If_DsdVecObj( p, 0 );                                                       }If_DsdVecConst0128,6180
static inline If_DsdObj_t * If_DsdVecVar( Vec_Ptr_t * p, int v )                       { return If_DsdVecObj( p, v+1 );                                                     }If_DsdVecVar129,6354
static inline int           If_DsdVecObjSuppSize( Vec_Ptr_t * p, int iObj )            { return If_DsdVecObj( p, iObj )->nSupp;                                             }If_DsdVecObjSuppSize130,6528
static inline int           If_DsdVecLitSuppSize( Vec_Ptr_t * p, int iLit )            { return If_DsdVecObjSuppSize( p, Abc_Lit2Var(iLit) );                               }If_DsdVecLitSuppSize131,6702
static inline int           If_DsdVecObjRef( Vec_Ptr_t * p, int iObj )                 { return If_DsdVecObj( p, iObj )->Count;                                             }If_DsdVecObjRef132,6876
static inline void          If_DsdVecObjIncRef( Vec_Ptr_t * p, int iObj )              { if ( If_DsdVecObjRef(p, iObj) < 0x3FFFF ) If_DsdVecObj( p, iObj )->Count++;        }If_DsdVecObjIncRef133,7050
static inline If_DsdObj_t * If_DsdObjFanin( Vec_Ptr_t * p, If_DsdObj_t * pObj, int i ) { assert(i < (int)pObj->nFans); return If_DsdVecObj(p, Abc_Lit2Var(pObj->pFans[i])); }If_DsdObjFanin134,7224
static inline int           If_DsdVecObjMark( Vec_Ptr_t * p, int iObj )                { return If_DsdVecObj( p, iObj )->fMark;                                             }If_DsdVecObjMark135,7398
static inline void          If_DsdVecObjSetMark( Vec_Ptr_t * p, int iObj )             { If_DsdVecObj( p, iObj )->fMark = 1;                                                }If_DsdVecObjSetMark136,7572
static inline void          If_DsdVecObjClearMark( Vec_Ptr_t * p, int iObj )           { If_DsdVecObj( p, iObj )->fMark = 0;                                                }If_DsdVecObjClearMark137,7746
#define If_DsdVecForEachObj(If_DsdVecForEachObj139,7921
#define If_DsdVecForEachObjStart(If_DsdVecForEachObjStart141,8039
#define If_DsdVecForEachObjVec(If_DsdVecForEachObjVec143,8169
#define If_DsdVecForEachNode(If_DsdVecForEachNode145,8338
#define If_DsdObjForEachFanin(If_DsdObjForEachFanin147,8464
#define If_DsdObjForEachFaninLit(If_DsdObjForEachFaninLit149,8626
char * If_DsdManFileName( If_DsdMan_t * p )If_DsdManFileName169,9369
int If_DsdManVarNum( If_DsdMan_t * p )If_DsdManVarNum173,9439
int If_DsdManObjNum( If_DsdMan_t * p )If_DsdManObjNum177,9503
int If_DsdManLutSize( If_DsdMan_t * p )If_DsdManLutSize181,9583
int If_DsdManTtBitNum( If_DsdMan_t * p )If_DsdManTtBitNum185,9650
int If_DsdManPermBitNum( If_DsdMan_t * p )If_DsdManPermBitNum189,9718
void If_DsdManSetLutSize( If_DsdMan_t * p, int nLutSize )If_DsdManSetLutSize193,9821
int If_DsdManSuppSize( If_DsdMan_t * p, int iDsd )If_DsdManSuppSize197,9910
int If_DsdManCheckDec( If_DsdMan_t * p, int iDsd )If_DsdManCheckDec201,10017
int If_DsdManReadMark( If_DsdMan_t * p, int iDsd )If_DsdManReadMark205,10133
void If_DsdManSetNewAsUseless( If_DsdMan_t * p )If_DsdManSetNewAsUseless209,10249
word * If_DsdManGetFuncConfig( If_DsdMan_t * p, int iDsd )If_DsdManGetFuncConfig215,10400
char * If_DsdManGetCellStr( If_DsdMan_t * p )If_DsdManGetCellStr219,10560
static inline word ** If_ManDsdTtElems()If_ManDsdTtElems235,10881
If_DsdObj_t * If_DsdObjAlloc( If_DsdMan_t * p, int Type, int nFans )If_DsdObjAlloc247,11227
If_DsdMan_t * If_DsdManAlloc( int nVars, int LutSize )If_DsdManAlloc264,11875
void If_DsdManAllocIsops( If_DsdMan_t * p, int nLutSize )If_DsdManAllocIsops306,13277
void If_DsdManFree( If_DsdMan_t * p, int fVerbose )If_DsdManFree333,14268
void If_DsdManDumpDsd( If_DsdMan_t * p, int Support )If_DsdManDumpDsd373,15422
void If_DsdManDumpAll( If_DsdMan_t * p, int Support )If_DsdManDumpAll407,16582
int If_DsdManHasMarks( If_DsdMan_t * p )If_DsdManHasMarks432,17440
void If_DsdManHashProfile( If_DsdMan_t * p )If_DsdManHashProfile453,17873
int If_DsdManCheckNonDec_rec( If_DsdMan_t * p, int Id )If_DsdManCheckNonDec_rec470,18365
void If_DsdManPrint_rec( FILE * pFile, If_DsdMan_t * p, int iDsdLit, unsigned char * pPermLits, int * pnSupp )If_DsdManPrint_rec486,18865
void If_DsdManPrintOne( FILE * pFile, If_DsdMan_t * p, int iObjId, unsigned char * pPermLits, int fNewLine )If_DsdManPrintOne509,19991
#define DSD_ARRAY_LIMIT DSD_ARRAY_LIMIT521,20569
void If_DsdManPrintDecs( FILE * pFile, If_DsdMan_t * p )If_DsdManPrintDecs522,20596
void If_DsdManPrintOccurs( FILE * pFile, If_DsdMan_t * p )If_DsdManPrintOccurs589,23327
void If_DsdManPrintDistrib( If_DsdMan_t * p )If_DsdManPrintDistrib647,25572
void If_DsdManPrint( If_DsdMan_t * p, char * pFileName, int Number, int Support, int fOccurs, int fTtDump, int fVerbose )If_DsdManPrint701,27802
int If_DsdManCheckNonTriv( If_DsdMan_t * p, int Id, int nVars, int iVarMax )If_DsdManCheckNonTriv819,33640
int If_DsdObjCompare( If_DsdMan_t * pMan, Vec_Ptr_t * p, int iLit0, int iLit1 )If_DsdObjCompare844,34336
void If_DsdObjSort( If_DsdMan_t * pMan, Vec_Ptr_t * p, int * pLits, int nLits, int * pPerm )If_DsdObjSort879,35546
static inline unsigned If_DsdObjHashKey( If_DsdMan_t * p, int Type, int * pLits, int nLits, int truthId )If_DsdObjHashKey907,36285
unsigned * If_DsdObjHashLookup( If_DsdMan_t * p, int Type, int * pLits, int nLits, int truthId )If_DsdObjHashLookup920,36887
static void If_DsdObjHashResize( If_DsdMan_t * p )If_DsdObjHashResize939,37582
int If_DsdObjCreate( If_DsdMan_t * p, int Type, int * pLits, int nLits, int truthId )If_DsdObjCreate958,38269
int If_DsdObjFindOrAdd( If_DsdMan_t * p, int Type, int * pLits, int nLits, word * pTruth )If_DsdObjFindOrAdd993,39737
void If_DsdManSave( If_DsdMan_t * p, char * pFileName )If_DsdManSave1049,41996
If_DsdMan_t * If_DsdManLoad( char * pFileName )If_DsdManLoad1106,43991
void If_DsdManMerge( If_DsdMan_t * p, If_DsdMan_t * pNew )If_DsdManMerge1201,47388
void If_DsdManCleanOccur( If_DsdMan_t * p, int fVerbose )If_DsdManCleanOccur1248,49505
void If_DsdManCleanMarks( If_DsdMan_t * p, int fVerbose )If_DsdManCleanMarks1255,49674
void If_DsdManInvertMarks( If_DsdMan_t * p, int fVerbose )If_DsdManInvertMarks1264,49906
void If_DsdManFilter_rec( If_DsdMan_t * pNew, If_DsdMan_t * p, int i, Vec_Int_t * vMap )If_DsdManFilter_rec1273,50152
If_DsdMan_t * If_DsdManFilter( If_DsdMan_t * p, int Limit )If_DsdManFilter1294,51041
void If_DsdManCollect_rec( If_DsdMan_t * p, int Id, Vec_Int_t * vNodes, Vec_Int_t * vFirsts, int * pnSupp )If_DsdManCollect_rec1321,51801
void If_DsdManCollect( If_DsdMan_t * p, int Id, Vec_Int_t * vNodes, Vec_Int_t * vFirsts )If_DsdManCollect1338,52383
void If_DsdManComputeTruth_rec( If_DsdMan_t * p, int iDsd, word * pRes, unsigned char * pPermLits, int * pnSupp )If_DsdManComputeTruth_rec1357,52848
void If_DsdManComputeTruthPtr( If_DsdMan_t * p, int iDsd, unsigned char * pPermLits, word * pRes )If_DsdManComputeTruthPtr1409,54997
word * If_DsdManComputeTruth( If_DsdMan_t * p, int iDsd, unsigned char * pPermLits )If_DsdManComputeTruth1427,55737
int If_DsdManCheckInv_rec( If_DsdMan_t * p, int iLit )If_DsdManCheckInv_rec1445,56217
int If_DsdManPushInv_rec( If_DsdMan_t * p, int iLit, unsigned char * pPerm )If_DsdManPushInv_rec1466,56934
int If_DsdManPushInv( If_DsdMan_t * p, int iLit, unsigned char * pPerm )If_DsdManPushInv1496,58035
int If_DsdManComputeFirstArray( If_DsdMan_t * p, int * pLits, int nLits, int * pFirsts )If_DsdManComputeFirstArray1514,58505
int If_DsdManComputeFirst( If_DsdMan_t * p, If_DsdObj_t * pObj, int * pFirsts )If_DsdManComputeFirst1524,58776
int If_DsdManOperation( If_DsdMan_t * p, int Type, int * pLits, int nLits, unsigned char * pPerm, word * pTruth )If_DsdManOperation1528,58946
static inline void If_DsdMergeMatches( char * pDsd, int * pMatches )If_DsdMergeMatches1650,64021
int If_DsdManAddDsd_rec( char * pStr, char ** p, int * pMatches, If_DsdMan_t * pMan, word * pTruth, unsigned char * pPerm, int * pnSupp )If_DsdManAddDsd_rec1665,64541
int If_DsdManAddDsd( If_DsdMan_t * p, char * pDsd, word * pTruth, unsigned char * pPerm, int * pnSupp )If_DsdManAddDsd1718,66515
unsigned If_DsdSign_rec( If_DsdMan_t * p, If_DsdObj_t * pObj, int * pnSupp )If_DsdSign_rec1753,67499
unsigned If_DsdSign( If_DsdMan_t * p, If_DsdObj_t * pObj, int iFan, int iFirst, int fShared )If_DsdSign1763,67849
void If_DsdManGetSuppSizes( If_DsdMan_t * p, If_DsdObj_t * pObj, int * pSSizes )If_DsdManGetSuppSizes1770,68157
unsigned If_DsdManCheckAndXor( If_DsdMan_t * p, int iFirst, unsigned uMaskNot, If_DsdObj_t * pObj, int nSuppAll, int LutSize, int fDerive, int fVerbose )If_DsdManCheckAndXor1777,68435
unsigned If_DsdManCheckMux( If_DsdMan_t * p, int iFirst, unsigned uMaskNot, If_DsdObj_t * pObj, int nSuppAll, int LutSize, int fDerive, int fVerbose )If_DsdManCheckMux1848,71269
unsigned If_DsdManCheckPrime( If_DsdMan_t * p, int iFirst, unsigned uMaskNot, If_DsdObj_t * pObj, int nSuppAll, int LutSize, int fDerive, int fVerbose )If_DsdManCheckPrime1884,72704
unsigned If_DsdManCheckXY_int( If_DsdMan_t * p, int iDsd, int LutSize, int fDerive, unsigned uMaskNot, int fVerbose )If_DsdManCheckXY_int1942,74754
unsigned If_DsdManCheckXY( If_DsdMan_t * p, int iDsd, int LutSize, int fDerive, unsigned uMaskNot, int fHighEffort, int fVerbose )If_DsdManCheckXY2017,77924
unsigned If_DsdManCheckXYZ( If_DsdMan_t * p, int iDsd, int LutSize, int fDerive, int fVerbose ) If_DsdManCheckXYZ2047,78933
int If_DsdManCompute( If_DsdMan_t * p, word * pTruth, int nLeaves, unsigned char * pPerm, char * pLutStruct )If_DsdManCompute2063,79320
void If_DsdManTest()If_DsdManTest2113,81012
int If_CutDsdBalancePinDelays_rec( If_DsdMan_t * p, int Id, int * pTimes, word * pRes, int * pnSupp, int nSuppAll, char * pPermLits )If_CutDsdBalancePinDelays_rec2135,81483
int If_CutDsdBalancePinDelays( If_Man_t * p, If_Cut_t * pCut, char * pPerm )If_CutDsdBalancePinDelays2183,83925
int If_CutDsdPermLitMax( char * pPermLits, int nVars, int iVar )If_CutDsdPermLitMax2217,84991
int If_CutDsdBalanceEval_rec( If_DsdMan_t * p, int Id, int * pTimes, int * pnSupp, Vec_Int_t * vAig, int * piLit, int nSuppAll, int * pArea, char * pPermLits )If_CutDsdBalanceEval_rec2239,85524
int If_CutDsdBalanceEvalInt( If_DsdMan_t * p, int iDsd, int * pTimes, Vec_Int_t * vAig, int * pArea, char * pPermLits )If_CutDsdBalanceEvalInt2308,88781
int If_CutDsdBalanceEval( If_Man_t * p, If_Cut_t * pCut, Vec_Int_t * vAig )If_CutDsdBalanceEval2322,89444
void If_DsdManTune( If_DsdMan_t * p, int LutSize, int fFast, int fAdd, int fSpec, int fVerbose )If_DsdManTune2411,92608
void Id_DsdManTuneStr1( If_DsdMan_t * p, char * pStruct, int nConfls, int fVerbose )Id_DsdManTuneStr12469,94272
void Id_DsdManTuneStr( If_DsdMan_t * p, char * pStruct, int nConfls, int nProcs, int fVerbose )Id_DsdManTuneStr2557,97489
#define PAR_THR_MAX PAR_THR_MAX2564,97674
typedef struct Ifn_ThData_t_Ifn_ThData_t_2565,97698
    Ifn_Ntk_t * pNtk;    // networkpNtk2567,97729
    word        pTruth[DAU_MAX_WORD];pTruth2568,97765
    word        pConfig[10]; // configuration datapConfig2569,97803
    int         nConfigWords;// configuration data word countnConfigWords2570,97854
    int         nVars;   // supportnVars2571,97916
    int         Id;      // objectId2572,97952
    int         nConfls; // conflictsnConfls2573,97987
    int         Result;  // resultResult2574,98025
    int         Status;  // stateStatus2575,98060
    abctime     clkUsed; // total runtimeclkUsed2576,98094
} Ifn_ThData_t;Ifn_ThData_t2577,98136
void * Ifn_WorkerThread( void * pArg )Ifn_WorkerThread2578,98152
void Id_DsdManTuneStr( If_DsdMan_t * p, char * pStruct, int nConfls, int nProcs, int fVerbose )Id_DsdManTuneStr2603,98949
void Id_DsdManTuneThresh( If_DsdMan_t * p, int fUnate, int fThresh, int fThreshHeuristic, int fVerbose )Id_DsdManTuneThresh2770,105257

src/map/if/ifUtil.c,1202
void If_ManCleanNodeCopy( If_Man_t * p )If_ManCleanNodeCopy45,1267
void If_ManCleanCutData( If_Man_t * p )If_ManCleanCutData64,1681
void If_ManCleanMarkV( If_Man_t * p )If_ManCleanMarkV83,2107
void If_ManResetOriginalRefs( If_Man_t * p )If_ManResetOriginalRefs287,8370
int If_ManCrossCut( If_Man_t * p )If_ManCrossCut316,9025
Vec_Ptr_t * If_ManReverseOrder( If_Man_t * p )If_ManReverseOrder363,10459
float If_ManMarkMapping_rec( If_Man_t * p, If_Obj_t * pObj )If_ManMarkMapping_rec400,11692
void If_ManMarkMapping( If_Man_t * p )If_ManMarkMapping434,12730
Vec_Ptr_t * If_ManCollectMappingDirect( If_Man_t * p )If_ManCollectMappingDirect462,13421
Vec_Int_t * If_ManCollectMappingInt( If_Man_t * p )If_ManCollectMappingInt486,14091
int If_ManCountSpecialPos( If_Man_t * p )If_ManCountSpecialPos520,15153
static void If_CutTraverse_rec( If_Obj_t * pNode, Vec_Ptr_t * vNodes )If_CutTraverse_rec553,16003
void If_CutTraverse( If_Man_t * p, If_Obj_t * pRoot, If_Cut_t * pCut, Vec_Ptr_t * vNodes )If_CutTraverse565,16427
void If_CutTraverseTest( If_Man_t * p, If_Obj_t * pRoot, If_Cut_t * pCut )If_CutTraverseTest583,16956
void If_ObjPrint( If_Obj_t * pObj )If_ObjPrint604,17476

src/map/if/ifSeq.c,696
void If_ManPrepareMappingSeq( If_Man_t * p )If_ManPrepareMappingSeq47,1321
void If_ManCollectLatches_rec( If_Obj_t * pObj, Vec_Ptr_t * vLatches )If_ManCollectLatches_rec73,2007
Vec_Ptr_t * If_ManCollectLatches( If_Man_t * p )If_ManCollectLatches95,2559
int If_ManPerformMappingRoundSeq( If_Man_t * p, int nIter )If_ManPerformMappingRoundSeq123,3439
int If_ManBinarySearchPeriod( If_Man_t * p )If_ManBinarySearchPeriod198,5704
int If_ManBinarySearch_rec( If_Man_t * p, int FiMin, int FiMax )If_ManBinarySearch_rec269,7827
void If_ManPerformMappingSeqPost( If_Man_t * p )If_ManPerformMappingSeqPost293,8530
int If_ManPerformMappingSeq( If_Man_t * p )If_ManPerformMappingSeq334,9688

src/map/mapper/mapperUtils.c,2902
#define MAP_CO_LIST_SIZE MAP_CO_LIST_SIZE28,755
void Map_MappingDfs_rec( Map_Node_t * pNode, Map_NodeVec_t * vNodes, int fCollectEquiv )Map_MappingDfs_rec56,2095
Map_NodeVec_t * Map_MappingDfs( Map_Man_t * pMan, int fCollectEquiv )Map_MappingDfs77,2874
int Map_MappingCountLevels( Map_Man_t * pMan )Map_MappingCountLevels105,3841
int Map_MappingCountLevels_rec( Map_Node_t * pNode )Map_MappingCountLevels_rec132,4596
void Map_MappingUnmark( Map_Man_t * pMan )Map_MappingUnmark163,5419
void Map_MappingUnmark_rec( Map_Node_t * pNode )Map_MappingUnmark_rec181,5850
void Map_MappingMark_rec( Map_Node_t * pNode )Map_MappingMark_rec207,6509
int Map_MappingCompareOutputDelay( Map_Node_t ** ppNode1, Map_Node_t ** ppNode2 )Map_MappingCompareOutputDelay231,7153
void Map_MappingFindLatest( Map_Man_t * p, int * pNodes, int nNodesMax )Map_MappingFindLatest257,7929
void Map_MappingPrintOutputArrivals( Map_Man_t * p )Map_MappingPrintOutputArrivals289,8819
void Map_MappingSetupTruthTables( unsigned uTruths[][2] )Map_MappingSetupTruthTables335,10267
void Map_MappingSetupTruthTablesLarge( unsigned uTruths[][32] )Map_MappingSetupTruthTablesLarge361,10948
void Map_MappingSetupMask( unsigned uMask[], int nVarsMax )Map_MappingSetupMask402,12049
int Map_ManCheckConsistency( Map_Man_t * p )Map_ManCheckConsistency427,12788
int Map_MappingNodeIsViolator( Map_Node_t * pNode, Map_Cut_t * pCut, int fPosPol )Map_MappingNodeIsViolator471,14151
float Map_MappingGetAreaFlow( Map_Man_t * p )Map_MappingGetAreaFlow487,14598
int Map_CompareNodesByLevel( Map_Node_t ** ppS1, Map_Node_t ** ppS2 )Map_CompareNodesByLevel522,15494
void Map_MappingSortByLevel( Map_Man_t * pMan, Map_NodeVec_t * vNodes )Map_MappingSortByLevel544,16061
int Map_CompareNodesByPointer( Map_Node_t ** ppS1, Map_Node_t ** ppS2 )Map_CompareNodesByPointer563,16672
int Map_MappingCountDoubles( Map_Man_t * pMan, Map_NodeVec_t * vNodes )Map_MappingCountDoubles583,17140
 st__table * Map_CreateTableGate2Super( Map_Man_t * pMan )Map_CreateTableGate2Super613,17868
void Map_ManCleanData( Map_Man_t * p )Map_ManCleanData652,19022
void Map_MappingExpandTruth( unsigned uTruth[2], int nVars )Map_MappingExpandTruth670,19457
unsigned Map_MappingExpandTruth_rec( unsigned uTruth, int nVars )Map_MappingExpandTruth_rec694,20016
float Map_MappingComputeDelayWithFanouts( Map_Man_t * p )Map_MappingComputeDelayWithFanouts713,20508
int Map_MappingGetMaxLevel( Map_Man_t * pMan )Map_MappingGetMaxLevel750,21567
int Map_MappingUpdateLevel_rec( Map_Man_t * pMan, Map_Node_t * pNode, int fMaximum )Map_MappingUpdateLevel_rec771,22132
void Map_MappingSetChoiceLevels( Map_Man_t * pMan )Map_MappingSetChoiceLevels821,23941
void Map_MappingReportChoices( Map_Man_t * pMan )Map_MappingReportChoices842,24617
int Map_MappingCountUsedNodes( Map_Man_t * pMan, int fChoices )Map_MappingCountUsedNodes882,25986

src/map/mapper/mapperSwitch.c,527
float Map_SwitchCutGetDerefed( Map_Node_t * pNode, Map_Cut_t * pCut, int fPhase )Map_SwitchCutGetDerefed45,1367
float Map_SwitchCutRef( Map_Node_t * pNode, Map_Cut_t * pCut, int fPhase )Map_SwitchCutRef66,1987
float Map_SwitchCutDeref( Map_Node_t * pNode, Map_Cut_t * pCut, int fPhase )Map_SwitchCutDeref82,2393
float Map_SwitchCutRefDeref( Map_Node_t * pNode, Map_Cut_t * pCut, int fPhase, int fReference )Map_SwitchCutRefDeref99,2933
float Map_MappingGetSwitching( Map_Man_t * pMan )Map_MappingGetSwitching187,6363

src/map/mapper/mapperSuper.c,985
int Map_LibraryRead( Map_SuperLib_t * pLib, char * pFileName )Map_LibraryRead50,1829
int Map_LibraryReadFile( Map_SuperLib_t * pLib, FILE * pFile )Map_LibraryReadFile80,2549
Map_Super_t * Map_LibraryReadGate( Map_SuperLib_t * pLib, char * pBuffer, int nVars )Map_LibraryReadGate183,6005
char * Map_LibraryReadFormulaStep( char * pFormula, char * pStrings[], int * pnStrings )Map_LibraryReadFormulaStep256,8085
int Map_LibraryTruthVerify( Map_SuperLib_t * pLib, Map_Super_t * pGate )Map_LibraryTruthVerify321,9891
void Map_LibraryComputeTruth( Map_SuperLib_t * pLib, char * pFormula, unsigned uTruthRes[] )Map_LibraryComputeTruth344,10634
void Map_LibraryComputeTruth_rec( Map_SuperLib_t * pLib, char * pFormula, unsigned uTruthsIn[][2], unsigned uTruthRes[] )Map_LibraryComputeTruth_rec364,11322
void Map_LibraryPrintSupergate( Map_Super_t * pGate )Map_LibraryPrintSupergate403,12830
void Map_LibraryPrintClasses( Map_SuperLib_t * p )Map_LibraryPrintClasses425,13447

src/map/mapper/mapperMatch.c,904
void Map_MatchClean( Map_Match_t * pMatch )Map_MatchClean57,1823
int Map_MatchCompare( Map_Man_t * pMan, Map_Match_t * pM1, Map_Match_t * pM2, int fDoingArea )Map_MatchCompare77,2477
int Map_MatchNodeCut( Map_Man_t * p, Map_Node_t * pNode, Map_Cut_t * pCut, int fPhase, float fWorstLimit )Map_MatchNodeCut163,5852
int Map_MatchNodePhase( Map_Man_t * p, Map_Node_t * pNode, int fPhase )Map_MatchNodePhase255,9522
void Map_MappingSetPiArrivalTimes( Map_Man_t * p )Map_MappingSetPiArrivalTimes371,13926
float Map_TimeMatchWithInverter( Map_Man_t * p, Map_Match_t * pMatch )Map_TimeMatchWithInverter409,15329
void Map_NodeTryDroppingOnePhase( Map_Man_t * p, Map_Node_t * pNode )Map_NodeTryDroppingOnePhase429,15935
void Map_NodeTransferArrivalTimes( Map_Man_t * p, Map_Node_t * pNode )Map_NodeTransferArrivalTimes531,19634
int Map_MappingMatches( Map_Man_t * p )Map_MappingMatches581,21794

src/map/mapper/mapperTime.c,640
float Map_TimeComputeArrivalMax( Map_Man_t * p )Map_TimeComputeArrivalMax45,1299
float Map_TimeCutComputeArrival( Map_Node_t * pNode, Map_Cut_t * pCut, int fPhase, float tWorstLimit )Map_TimeCutComputeArrival75,2228
void Map_TimePropagateRequiredPhase( Map_Man_t * p, Map_Node_t * pNode, int fPhase )Map_TimePropagateRequiredPhase152,4798
float Map_MatchComputeReqTimes( Map_Cut_t * pCut, int fPhase, Map_Time_t * ptArrRes )Map_MatchComputeReqTimes219,7703
void Map_TimePropagateRequired( Map_Man_t * p )Map_TimePropagateRequired288,9877
void Map_TimeComputeRequiredGlobal( Map_Man_t * p )Map_TimeComputeRequiredGlobal385,14531

src/map/mapper/mapperTable.c,1264
#define  MAP_TABLE_HASH(MAP_TABLE_HASH29,790
Map_HashTable_t * Map_SuperTableCreate( Map_SuperLib_t * pLib )Map_SuperTableCreate48,1413
void Map_SuperTableFree( Map_HashTable_t * p )Map_SuperTableFree74,2131
int Map_SuperTableInsertC( Map_HashTable_t * p, unsigned uTruthC[], Map_Super_t * pGate )Map_SuperTableInsertC92,2610
int Map_SuperTableInsert( Map_HashTable_t * p, unsigned uTruth[], Map_Super_t * pGate, unsigned uPhase )Map_SuperTableInsert137,4129
Map_Super_t * Map_SuperTableLookupC( Map_SuperLib_t * p, unsigned uTruth[] )Map_SuperTableLookupC183,5794
Map_Super_t * Map_SuperTableLookup( Map_HashTable_t * p, unsigned uTruth[], unsigned * puPhase )Map_SuperTableLookup208,6746
void Map_SuperTableResize( Map_HashTable_t * p )Map_SuperTableResize233,7448
int Map_SuperTableCompareSupergates( Map_Super_t ** ppS1, Map_Super_t ** ppS2 )Map_SuperTableCompareSupergates273,8733
int Map_SuperTableCompareGatesInList( Map_Super_t ** ppS1, Map_Super_t ** ppS2 )Map_SuperTableCompareGatesInList293,9250
void Map_SuperTableSortSupergates( Map_HashTable_t * p, int nSupersMax )Map_SuperTableSortSupergates315,9885
void Map_SuperTableSortSupergatesByDelay( Map_HashTable_t * p, int nSupersMax )Map_SuperTableSortSupergatesByDelay362,11458

src/map/mapper/mapper.c,207
void Map_Init( Abc_Frame_t * pAbc )Map_Init48,1363
void Map_End( Abc_Frame_t * pAbc )Map_End64,1723
int Map_CommandReadLibrary( Abc_Frame_t * pAbc, int argc, char **argv )Map_CommandReadLibrary82,2105

src/map/mapper/mapperCore.c,53
int Map_Mapping( Map_Man_t * p )Map_Mapping50,1757

src/map/mapper/mapperCreate.c,10248
static inline unsigned Map_HashKey2( Map_Node_t * p0, Map_Node_t * p1, int TableSize ) { return (unsigned)(((ABC_PTRUINT_T)(p0) + (ABC_PTRUINT_T)(p1) * 12582917) % TableSize); }Map_HashKey232,913
int             Map_ManReadInputNum( Map_Man_t * p )                    { return p->nInputs;    }Map_ManReadInputNum49,1588
int             Map_ManReadOutputNum( Map_Man_t * p )                   { return p->nOutputs;   }Map_ManReadOutputNum50,1686
int             Map_ManReadBufNum( Map_Man_t * p )                      { return Map_NodeVecReadSize(p->vMapBufs);   }Map_ManReadBufNum51,1784
Map_Node_t **   Map_ManReadInputs ( Map_Man_t * p )                     { return p->pInputs;    }Map_ManReadInputs52,1903
Map_Node_t **   Map_ManReadOutputs( Map_Man_t * p )                     { return p->pOutputs;   }Map_ManReadOutputs53,2001
Map_Node_t **   Map_ManReadBufs( Map_Man_t * p )                        { return Map_NodeVecReadArray(p->vMapBufs);  }Map_ManReadBufs54,2099
Map_Node_t *    Map_ManReadBufDriver( Map_Man_t * p, int i )            { return Map_ManReadBufs(p)[i]->p1;           }Map_ManReadBufDriver55,2218
Map_Node_t *    Map_ManReadConst1 ( Map_Man_t * p )                     { return p->pConst1;    }Map_ManReadConst156,2338
Map_Time_t *    Map_ManReadInputArrivals( Map_Man_t * p )               { return p->pInputArrivals; }Map_ManReadInputArrivals57,2436
Map_Time_t *    Map_ManReadOutputRequireds( Map_Man_t * p )             { return p->pOutputRequireds; }Map_ManReadOutputRequireds58,2538
Mio_Library_t * Map_ManReadGenLib ( Map_Man_t * p )                     { return p->pSuperLib->pGenlib; }Map_ManReadGenLib59,2642
int             Map_ManReadVerbose( Map_Man_t * p )                     { return p->fVerbose;   }Map_ManReadVerbose60,2748
float           Map_ManReadAreaFinal( Map_Man_t * p )                   { return p->AreaFinal;  }Map_ManReadAreaFinal61,2846
float           Map_ManReadRequiredGlo( Map_Man_t * p )                 { return p->fRequiredGlo; }Map_ManReadRequiredGlo62,2944
void            Map_ManSetOutputNames( Map_Man_t * p, char ** ppNames ) { p->ppOutputNames = ppNames;}Map_ManSetOutputNames63,3044
void            Map_ManSetAreaRecovery( Map_Man_t * p, int fAreaRecovery ) { p->fAreaRecovery = fAreaRecovery;}Map_ManSetAreaRecovery64,3147
void            Map_ManSetDelayTarget( Map_Man_t * p, float DelayTarget ) { p->DelayTarget = DelayTarget;}Map_ManSetDelayTarget65,3259
void            Map_ManSetInputArrivals( Map_Man_t * p, Map_Time_t * pArrivals )     { p->pInputArrivals = pArrivals;    }Map_ManSetInputArrivals66,3366
void            Map_ManSetOutputRequireds( Map_Man_t * p, Map_Time_t * pRequireds )  { p->pOutputRequireds = pRequireds; }Map_ManSetOutputRequireds67,3489
void            Map_ManSetObeyFanoutLimits( Map_Man_t * p, int  fObeyFanoutLimits )  { p->fObeyFanoutLimits = fObeyFanoutLimits;     }Map_ManSetObeyFanoutLimits68,3612
void            Map_ManSetNumIterations( Map_Man_t * p, int nIterations )            { p->nIterations = nIterations;     }Map_ManSetNumIterations69,3747
int             Map_ManReadFanoutViolations( Map_Man_t * p )            { return p->nFanoutViolations;   }  Map_ManReadFanoutViolations70,3870
void            Map_ManSetFanoutViolations( Map_Man_t * p, int nVio )   { p->nFanoutViolations = nVio;   }  Map_ManSetFanoutViolations71,3979
void            Map_ManSetChoiceNodeNum( Map_Man_t * p, int nChoiceNodes ) { p->nChoiceNodes = nChoiceNodes; }  Map_ManSetChoiceNodeNum72,4088
void            Map_ManSetChoiceNum( Map_Man_t * p, int nChoices )         { p->nChoices = nChoices;     }   Map_ManSetChoiceNum73,4201
void            Map_ManSetVerbose( Map_Man_t * p, int fVerbose )           { p->fVerbose = fVerbose;     }   Map_ManSetVerbose74,4311
void            Map_ManSetSwitching( Map_Man_t * p, int fSwitching )       { p->fSwitching = fSwitching; }   Map_ManSetSwitching75,4421
void            Map_ManSetSkipFanout( Map_Man_t * p, int fSkipFanout )     { p->fSkipFanout = fSkipFanout; }   Map_ManSetSkipFanout76,4531
void            Map_ManSetUseProfile( Map_Man_t * p )                      { p->fUseProfile = 1;         }   Map_ManSetUseProfile77,4643
Map_Man_t *     Map_NodeReadMan( Map_Node_t * p )                     { return p->p;                  }Map_NodeReadMan90,5027
char *          Map_NodeReadData( Map_Node_t * p, int fPhase )        { return fPhase? p->pData1 : p->pData0;  }Map_NodeReadData91,5131
int             Map_NodeReadNum( Map_Node_t * p )                     { return p->Num;                }Map_NodeReadNum92,5244
int             Map_NodeReadLevel( Map_Node_t * p )                   { return Map_Regular(p)->Level; }Map_NodeReadLevel93,5348
Map_Cut_t *     Map_NodeReadCuts( Map_Node_t * p )                    { return p->pCuts;              }Map_NodeReadCuts94,5452
Map_Cut_t *     Map_NodeReadCutBest( Map_Node_t * p, int fPhase )     { return p->pCutBest[fPhase];   }Map_NodeReadCutBest95,5556
Map_Node_t *    Map_NodeReadOne( Map_Node_t * p )                     { return p->p1;                 }Map_NodeReadOne96,5660
Map_Node_t *    Map_NodeReadTwo( Map_Node_t * p )                     { return p->p2;                 }Map_NodeReadTwo97,5764
void            Map_NodeSetData( Map_Node_t * p, int fPhase, char * pData ) { if (fPhase) p->pData1 = pData; else p->pData0 = pData; }Map_NodeSetData98,5868
void            Map_NodeSetNextE( Map_Node_t * p, Map_Node_t * pNextE )     { p->pNextE = pNextE;       }Map_NodeSetNextE99,6003
void            Map_NodeSetRepr( Map_Node_t * p, Map_Node_t * pRepr )       { p->pRepr = pRepr;         }Map_NodeSetRepr100,6109
void            Map_NodeSetSwitching( Map_Node_t * p, float Switching )     { p->Switching = Switching; }Map_NodeSetSwitching101,6215
int             Map_NodeIsConst( Map_Node_t * p )    {  return (Map_Regular(p))->Num == -1;    }Map_NodeIsConst114,6584
int             Map_NodeIsVar( Map_Node_t * p )      {  return (Map_Regular(p))->p1 == NULL && (Map_Regular(p))->Num >= 0; }Map_NodeIsVar115,6681
int             Map_NodeIsBuf( Map_Node_t * p )      {  return (Map_Regular(p))->p1 != NULL && (Map_Regular(p))->p2 == NULL;  }Map_NodeIsBuf116,6806
int             Map_NodeIsAnd( Map_Node_t * p )      {  return (Map_Regular(p))->p1 != NULL && (Map_Regular(p))->p2 != NULL;  }Map_NodeIsAnd117,6934
int             Map_NodeComparePhase( Map_Node_t * p1, Map_Node_t * p2 ) { assert( !Map_IsComplement(p1) ); assert( !Map_IsComplement(p2) ); return p1->fInv ^ p2->fInv; }Map_NodeComparePhase118,7062
Map_Super_t *   Map_CutReadSuperBest( Map_Cut_t * p, int fPhase ) { return p->M[fPhase].pSuperBest;}Map_CutReadSuperBest131,7498
Map_Super_t *   Map_CutReadSuper0( Map_Cut_t * p )                { return p->M[0].pSuperBest;}Map_CutReadSuper0132,7599
Map_Super_t *   Map_CutReadSuper1( Map_Cut_t * p )                { return p->M[1].pSuperBest;}Map_CutReadSuper1133,7695
int             Map_CutReadLeavesNum( Map_Cut_t * p )             { return p->nLeaves;  }Map_CutReadLeavesNum134,7791
Map_Node_t **   Map_CutReadLeaves( Map_Cut_t * p )                { return p->ppLeaves; }Map_CutReadLeaves135,7881
unsigned        Map_CutReadPhaseBest( Map_Cut_t * p, int fPhase ) { return p->M[fPhase].uPhaseBest;}Map_CutReadPhaseBest136,7971
unsigned        Map_CutReadPhase0( Map_Cut_t * p )                { return p->M[0].uPhaseBest;}Map_CutReadPhase0137,8072
unsigned        Map_CutReadPhase1( Map_Cut_t * p )                { return p->M[1].uPhaseBest;}Map_CutReadPhase1138,8168
Map_Cut_t *     Map_CutReadNext( Map_Cut_t * p )                  { return p->pNext;          }Map_CutReadNext139,8264
char *          Map_SuperReadFormula( Map_Super_t * p )          {  return p->pFormula; }Map_SuperReadFormula152,8631
Mio_Gate_t *    Map_SuperReadRoot( Map_Super_t * p )             {  return p->pRoot;    }Map_SuperReadRoot153,8721
int             Map_SuperReadNum( Map_Super_t * p )              {  return p->Num;      }Map_SuperReadNum154,8811
Map_Super_t **  Map_SuperReadFanins( Map_Super_t * p )           {  return p->pFanins;  }Map_SuperReadFanins155,8901
int             Map_SuperReadFaninNum( Map_Super_t * p )         {  return p->nFanins;  }Map_SuperReadFaninNum156,8991
Map_Super_t *   Map_SuperReadNext( Map_Super_t * p )             {  return p->pNext;    }Map_SuperReadNext157,9081
int             Map_SuperReadNumPhases( Map_Super_t * p )        {  return p->nPhases;  }Map_SuperReadNumPhases158,9171
unsigned char * Map_SuperReadPhases( Map_Super_t * p )           {  return p->uPhases;  }Map_SuperReadPhases159,9261
int             Map_SuperReadFanoutLimit( Map_Super_t * p )      {  return p->nFanLimit;}Map_SuperReadFanoutLimit160,9351
Mio_Library_t * Map_SuperLibReadGenLib( Map_SuperLib_t * p )     {  return p->pGenlib;  }Map_SuperLibReadGenLib162,9442
float           Map_SuperLibReadAreaInv( Map_SuperLib_t * p )    {  return p->AreaInv;  }Map_SuperLibReadAreaInv163,9532
Map_Time_t      Map_SuperLibReadDelayInv( Map_SuperLib_t * p )   {  return p->tDelayInv;}Map_SuperLibReadDelayInv164,9622
int             Map_SuperLibReadVarsMax( Map_SuperLib_t * p )    {  return p->nVarsMax; }Map_SuperLibReadVarsMax165,9712
Map_Man_t * Map_ManCreate( int nInputs, int nOutputs, int fVerbose )Map_ManCreate186,10542
void Map_ManFree( Map_Man_t * p )Map_ManFree250,12631
void Map_ManCreateNodeDelays( Map_Man_t * p, int LogFan )Map_ManCreateNodeDelays286,13664
void Map_ManPrintTimeStats( Map_Man_t * p )Map_ManPrintTimeStats315,14510
void Map_ManPrintStatsToFile( char * pName, float Area, float Delay, abctime Time )Map_ManPrintStatsToFile343,15470
Map_Node_t * Map_NodeCreate( Map_Man_t * p, Map_Node_t * p1, Map_Node_t * p2 )Map_NodeCreate366,16172
void Map_TableCreate( Map_Man_t * pMan )Map_TableCreate426,18091
Map_Node_t * Map_NodeAnd( Map_Man_t * pMan, Map_Node_t * p1, Map_Node_t * p2 )Map_NodeAnd449,18908
void Map_TableResize( Map_Man_t * pMan )Map_TableResize504,20333
Map_Node_t * Map_NodeBuf( Map_Man_t * p, Map_Node_t * p1 )Map_NodeBuf554,21768
void Map_NodeSetChoice( Map_Man_t * pMan, Map_Node_t * pNodeOld, Map_Node_t * pNodeNew )Map_NodeSetChoice573,22348

src/map/mapper/mapperCanon.c,629
int Map_CanonComputeSlow( unsigned uTruths[][2], int nVarsMax, int nVarsReal, unsigned uTruth[], unsigned char * puPhases, unsigned uTruthRes[] )Map_CanonComputeSlow48,1682
unsigned Map_CanonComputePhase( unsigned uTruths[][2], int nVars, unsigned uTruth, unsigned uPhase )Map_CanonComputePhase112,3823
void Map_CanonComputePhase6( unsigned uTruths[][2], int nVars, unsigned uTruth[], unsigned uPhase, unsigned uTruthRes[] )Map_CanonComputePhase6132,4449
int Map_CanonComputeFast( Map_Man_t * p, int nVarsMax, int nVarsReal, unsigned uTruth[], unsigned char * puPhases, unsigned uTruthRes[] )Map_CanonComputeFast173,5815

src/map/mapper/mapperInt.h,15789
#define ABC__map__mapper__mapperInt_hABC__map__mapper__mapperInt_h20,518
#define MAP_MASK(MAP_MASK52,1532
#define MAP_FULL MAP_FULL53,1595
#define MAP_NO_VAR MAP_NO_VAR54,1645
#define MAP_MIN(MAP_MIN57,1718
#define MAP_MAX(MAP_MAX58,1776
#define MAP_FLOAT_LARGE MAP_FLOAT_LARGE61,1904
#define MAP_FLOAT_SMALL MAP_FLOAT_SMALL62,1959
#define MAP_RANDOM_UNSIGNED MAP_RANDOM_UNSIGNED65,2066
#define Map_CutIsComplement(Map_CutIsComplement68,2213
#define Map_CutRegular(Map_CutRegular69,2281
#define Map_CutNot(Map_CutNot70,2356
#define Map_CutNotCond(Map_CutNotCond71,2430
#define Map_NodeReadRef(Map_NodeReadRef74,2549
#define Map_NodeRef(Map_NodeRef75,2607
#define Map_InfoSetVar(Map_InfoSetVar78,2722
#define Map_InfoRemVar(Map_InfoRemVar79,2786
#define Map_InfoFlipVar(Map_InfoFlipVar80,2850
#define Map_InfoReadVar(Map_InfoReadVar81,2914
#define Map_NodeIsSimComplement(Map_NodeIsSimComplement84,3034
struct Map_ManStruct_t_Map_ManStruct_t_91,3372
    Map_Node_t **       pBins;         // the table of nodes hashed by their childrenpBins94,3423
    int                 nBins;         // the size of the tablenBins95,3509
    Map_Node_t **       pInputs;       // the array of inputspInputs96,3573
    int                 nInputs;       // the number of inputsnInputs97,3635
    Map_Node_t **       pOutputs;      // the array of outputspOutputs98,3698
    int                 nOutputs;      // the number of outputsnOutputs99,3761
    int                 nNodes;        // the total number of nodesnNodes100,3825
    Map_Node_t *        pConst1;       // the constant 1 nodepConst1101,3893
    Map_NodeVec_t *     vMapObjs;      // the array of all nodesvMapObjs102,3955
    Map_NodeVec_t *     vMapBufs;      // the array of all nodesvMapBufs103,4020
    float *             pNodeDelays;   // the array of node delayspNodeDelays104,4085
    char **             ppOutputNames; // the primary output namesppOutputNames107,4192
    Map_Time_t *        pInputArrivals;// the PI arrival timespInputArrivals108,4259
    Map_Time_t *        pOutputRequireds;// the PI arrival timespOutputRequireds109,4322
    int                 nVarsMax;      // the max number of variablesnVarsMax112,4414
    int                 fAreaRecovery; // the flag to enable area recoveryfAreaRecovery113,4484
    int                 fVerbose;      // the verbosiness flagfVerbose114,4559
    int                 fMappingMode;  // set to 1 when doing areafMappingMode115,4622
    float               fRequiredGlo;  // the global required timesfRequiredGlo116,4689
    float               fEpsilon;      // the epsilon used to compare floatsfEpsilon117,4757
    float               AreaBase;      // the area after delay-oriented mappingAreaBase118,4834
    float               AreaFinal;     // the area after delay-oriented mappingAreaFinal119,4914
    int                 nIterations;   // How many matching passes to donIterations120,4994
    int                 fObeyFanoutLimits;// Should mapper try to obey fanout limits or notfObeyFanoutLimits121,5067
    float               DelayTarget;   // the required times set by the userDelayTarget122,5159
    int                 nTravIds;      // the traversal counternTravIds123,5236
    int                 fSwitching;    // use switching activityfSwitching124,5300
    int                 fSkipFanout;   // skip large gates when mapping high-fanout nodesfSkipFanout125,5365
    int                 fUseProfile;   // use standard-cell profilefUseProfile126,5455
    Map_SuperLib_t *    pSuperLib;     // the current supergate librarypSuperLib129,5553
    unsigned            uTruths[6][2]; // the elementary truth tablesuTruths130,5625
    unsigned            uTruthsLarge[10][32]; // the elementary truth tablesuTruthsLarge131,5695
    int                 nCounts[32];   // the counter of mintermsnCounts132,5772
    int                 nCountsBest[32];// the counter of mintermsnCountsBest133,5838
    Map_NodeVec_t *     vVisited;      // the visited cuts during cut computationvVisited134,5905
    Extra_MmFixed_t *   mmNodes;       // the memory manager for nodesmmNodes137,6015
    Extra_MmFixed_t *   mmCuts;        // the memory manager for cutsmmCuts138,6086
    unsigned short *    uCanons;       // N-canonical formsuCanons141,6194
    char **             uPhases;       // N-canonical phasesuPhases142,6254
    char *              pCounters;     // counters of phasespCounters143,6315
    int                 nChoiceNodes;  // the number of choice nodesnChoiceNodes146,6414
    int                 nChoices;      // the number of all choicesnChoices147,6483
    int                 nCanons;       // the number of times N-canonical form was computednCanons148,6551
    int                 nMatches;      // the number of times supergate matching was performednMatches149,6643
    int                 nPhases;       // the number of phases considered during matchingnPhases150,6738
    int                 nFanoutViolations;  // the number of nodes in mapped circuit violating fanoutnFanoutViolations151,6828
    abctime             timeToMap;     // time to transfer to the mapping structuretimeToMap154,6957
    abctime             timeCuts;      // time to compute k-feasible cutstimeCuts155,7041
    abctime             timeTruth;     // time to compute the truth table for each cuttimeTruth156,7115
    abctime             timeMatch;     // time to perform matching for each nodetimeMatch157,7202
    abctime             timeArea;      // time to recover area after delay oriented mappingtimeArea158,7283
    abctime             timeSweep;     // time to perform technology dependent sweeptimeSweep159,7375
    abctime             timeToNet;     // time to transfer back to the networktimeToNet160,7460
    abctime             timeTotal;     // the total mapping timetimeTotal161,7539
    abctime             time1;         // time to transfer to the mapping structuretime1162,7604
    abctime             time2;         // time to transfer to the mapping structuretime2163,7688
    abctime             time3;         // time to transfer to the mapping structuretime3164,7772
struct Map_SuperLibStruct_t_Map_SuperLibStruct_t_168,7885
    char *              pName;         // the name of the supergate librarypName171,7936
    Mio_Library_t *     pGenlib;       // the generic librarypGenlib172,8012
    int                 nVarsMax;      // the max number of variablesnVarsMax175,8093
    int                 nSupersAll;    // the total number of supergatesnSupersAll176,8163
    int                 nSupersReal;   // the total number of supergatesnSupersReal177,8236
    int                 nLines;        // the total number of lines in the supergate filenLines178,8309
    int                 fVerbose;      // the verbosity flagfVerbose179,8399
    Map_Super_t **      ppSupers;      // the array of supergatesppSupers182,8480
    Map_HashTable_t *   tTableC;       // the table mapping N-canonical forms into supergatestTableC183,8546
    Map_HashTable_t *   tTable;        // the table mapping truth tables into supergatestTable184,8640
    unsigned            uTruths[6][2]; // the elementary truth tablesuTruths187,8786
    unsigned            uMask[2];      // the mask for the truth tableuMask188,8856
    Mio_Gate_t *        pGateInv;      // the pointer to the intertor gatepGateInv191,8948
    Map_Time_t          tDelayInv;     // the delay of the invertertDelayInv192,9023
    float               AreaInv;       // the area of the inverterAreaInv193,9091
    float               AreaBuf;       // the area of the bufferAreaBuf194,9158
    Map_Super_t *       pSuperInv;     // the supergate representing the inverterpSuperInv195,9223
    Extra_MmFixed_t *   mmSupers;      // the mamory manager for supergatesmmSupers198,9355
    Extra_MmFixed_t *   mmEntries;     // the memory manager for the entriesmmEntries199,9431
    Extra_MmFlex_t *    mmForms;       // the memory manager for formulasmmForms200,9508
struct Map_NodeStruct_t_ Map_NodeStruct_t_204,9606
    Map_Man_t *         p;             // the mapping managerp207,9676
    Map_Node_t *        pNext;         // the next node in the hash tablepNext208,9738
    int                 Num;           // the unique number of this nodeNum209,9812
    int                 TravId;        // the traversal ID (use to avoid cleaning marks)TravId210,9885
    int                 nRefs;         // the number of references (fanouts) of the given nodenRefs211,9974
    unsigned            fMark0 : 1;    // the mark used for traversalsfMark0212,10069
    unsigned            fMark1 : 1;    // the mark used for traversalsfMark1213,10140
    unsigned            fUsed  : 1;    // the mark to mark the node or its faninsfUsed214,10211
    unsigned            fInv   : 1;    // the complemented attribute for the equivalent nodesfInv215,10293
    unsigned            fInvert: 1;    // the flag to denote the use of interterfInvert216,10387
    unsigned            Level  :16;    // the level of the given nodeLevel217,10468
    unsigned            NumTemp:10;    // the level of the given nodeNumTemp218,10538
    int                 nRefAct[3];    // estimated fanout for current covering phase, neg and pos and sumnRefAct219,10608
    float               nRefEst[3];    // actual fanout for previous covering phase, neg and pos and sumnRefEst220,10715
    float               Switching;     // the probability of switchingSwitching221,10820
    Map_Node_t *        p1;            // the first childp1224,10912
    Map_Node_t *        p2;            // the second childp2225,10970
    Map_Node_t *        pNextE;        // the next functionally equivalent nodepNextE226,11029
    Map_Node_t *        pRepr;         // the representative of the functionally equivalent classpRepr227,11109
    Map_Node_t *        pFanPivot;     // the first fanout of this nodepFanPivot231,11275
    Map_Node_t *        pFanFanin1;    // the next fanout of p1pFanFanin1232,11347
    Map_Node_t *        pFanFanin2;    // the next fanout of p2pFanFanin2233,11411
    Map_Time_t          tArrival[2];   // the best arrival time of the neg (0) and pos (1) phasestArrival238,11589
    Map_Time_t          tRequired[2];  // the required time of the neg (0) and pos (1) phasestRequired239,11687
    Map_Cut_t *         pCutBest[2];   // the best mapping for neg and pos phasepCutBest242,11808
    Map_Cut_t *         pCuts;         // mapping choices for the node (elementary comes first)pCuts243,11889
    char *              pData0;        // temporary storage for the corresponding network nodepData0244,11985
    char *              pData1;        // temporary storage for the corresponding network nodepData1245,12080
struct Map_MatchStruct_t_  Map_MatchStruct_t_249,12204
    Map_Super_t *       pSupers;     pSupers252,12271
    unsigned            uPhase;  uPhase253,12309
    unsigned            uPhaseBest;    // the best phase (the EXOR of match's phase and gate's phase)uPhaseBest255,12392
    Map_Super_t *       pSuperBest;    // the best supergate matchedpSuperBest256,12494
    Map_Time_t          tArrive;       // the arrival time of this matchtArrive258,12598
    float               AreaFlow;      // the area flow or area of this matchAreaFlow259,12671
struct Map_CutStruct_t_  Map_CutStruct_t_263,12785
    Map_Cut_t *         pNext;         // the pointer to the next cut in the listpNext265,12813
    Map_Cut_t *         pOne;          // the father of this cutpOne266,12895
    Map_Cut_t *         pTwo;          // the mother of this cutpTwo267,12960
    Map_Node_t *        ppLeaves[6];   // the leaves of this cutppLeaves268,13025
    unsigned            uTruth;        // truth table for five-input cutsuTruth269,13090
    char                nLeaves;       // the number of leavesnLeaves270,13164
    char                nVolume;       // the volume of this cutnVolume271,13227
    char                fMark;         // the mark to denote visited cutfMark272,13292
    char                Phase;         // the mark to denote complemented cutPhase273,13365
    Map_Match_t         M[2];          // the matches for positive/negative phaseM274,13443
struct Map_SuperStruct_t_  Map_SuperStruct_t_278,13569
    int                 Num;           // the ID of the supergateNum280,13599
    unsigned            fSuper  :  1;  // the flag to distinquish a real super from a fake onefSuper281,13665
    unsigned            fExclude:  1;  // the flag if set causes gate to be excluded from being used for mappingfExclude282,13760
    unsigned            nFanins :  3;  // the number of inputsnFanins283,13873
    unsigned            nGates  :  3;  // the number of gates inside this supergatenGates284,13936
    unsigned            nFanLimit: 4;  // the max number of fanout countnFanLimit285,14020
    unsigned            nSupers : 16;  // the number of supergates in the listnSupers286,14093
    unsigned            nPhases :  4;  // the number of phases for matching with canonical formnPhases287,14172
    unsigned char       uPhases[4];    // the maximum of 4 phases for matching with canonical formuPhases288,14268
    int                 nUsed;         // the number of times the supergate is usednUsed289,14367
    Map_Super_t *       pFanins[6];    // the fanins of the gatepFanins290,14451
    Mio_Gate_t *        pRoot;         // the root gatepRoot291,14516
    unsigned            uTruth[2];     // the truth tableuTruth292,14572
    Map_Time_t          tDelaysR[6];   // the pin-to-pin delay constraints for the rise of the outputtDelaysR293,14630
    Map_Time_t          tDelaysF[6];   // the pin-to-pin delay constraints for the rise of the outputtDelaysF294,14732
    Map_Time_t          tDelayMax;     // the maximum delaytDelayMax295,14834
    float               Area;          // the areaArea296,14894
    char *              pFormula;      // the symbolic formulapFormula297,14945
    Map_Super_t *       pNext;         // the pointer to the next super in the listpNext298,15008
struct Map_NodeVecStruct_t_Map_NodeVecStruct_t_302,15119
    Map_Node_t **       pArray;        // the array of nodespArray304,15149
    int                 nSize;         // the number of entries in the arraynSize305,15210
    int                 nCap;          // the number of allocated entriesnCap306,15287
struct Map_HashTableStruct_t_Map_HashTableStruct_t_310,15384
    Map_HashEntry_t **  pBins;         // the table binspBins312,15416
    int                 nBins;         // the size of the tablenBins313,15473
    int                 nEntries;      // the total number of entries in the tablenEntries314,15537
    Extra_MmFixed_t *   mmMan;         // the memory manager for entriesmmMan315,15620
struct Map_HashEntryStruct_t_Map_HashEntryStruct_t_319,15728
    unsigned            uTruth[2];     // the truth table for 6-var functionuTruth321,15760
    unsigned            uPhase;        // the phase to tranform it into the canonical formuPhase322,15837
    Map_Super_t *       pGates;        // the linked list of matching supergatespGates323,15928
    Map_HashEntry_t *   pNext;         // the next entry in the hash tablepNext324,16009
#define Map_NodeReadNextFanout(Map_NodeReadNextFanout328,16135
#define Map_NodeReadNextFanoutPlace(Map_NodeReadNextFanoutPlace334,16464
#define Map_NodeForEachFanout(Map_NodeForEachFanout339,16700
#define Map_NodeForEachFanoutSafe(Map_NodeForEachFanoutSafe344,16943

src/map/mapper/mapperLib.c,506
#define _BSD_SOURCE_BSD_SOURCE18,477
Map_SuperLib_t * Map_SuperLibCreate( Mio_Library_t * pGenlib, Vec_Str_t * vStr, char * pFileName, char * pExcludeFile, int fAlgorithm, int fVerbose )Map_SuperLibCreate58,2008
void Map_SuperLibFree( Map_SuperLib_t * p )Map_SuperLibFree167,5532
int Map_SuperLibDeriveFromGenlib( Mio_Library_t * pLib, int fVerbose )Map_SuperLibDeriveFromGenlib199,6358
int Map_SuperLibDeriveFromGenlib2( Mio_Library_t * pLib, int fVerbose )Map_SuperLibDeriveFromGenlib2234,7350

src/map/mapper/mapperTree.c,1583
static const int s_MapFanoutLimits[10] = { 1/*0*/, 10/*1*/, 5/*2*/, 2/*3*/, 1/*4*/, 1/*5*/, 1/*6*/ };s_MapFanoutLimits37,1082
Map_Super_t * Map_LibraryReadGateTree( Map_SuperLib_t * pLib, char * pBuffer, int Number, int nVarsMax )Map_LibraryReadGateTree54,1654
int Vec_StrGets( char * pBuffer, int nBufferSize, Vec_Str_t * vStr, int * pPos )Vec_StrGets316,9972
int Map_LibraryCompareLibNames( char * pName1, char * pName2 )Map_LibraryCompareLibNames363,11033
int Map_LibraryReadFileTreeStr( Map_SuperLib_t * pLib, Mio_Library_t * pGenlib, Vec_Str_t * vStr, char * pFileName )Map_LibraryReadFileTreeStr391,11805
int Map_LibraryReadTree( Map_SuperLib_t * pLib, Mio_Library_t * pGenlib, char * pFileName, char * pExcludeFile )Map_LibraryReadTree525,16700
int Map_LibraryDeriveGateInfo( Map_SuperLib_t * pLib, st__table * tExcludeGate )Map_LibraryDeriveGateInfo586,18295
int Map_LibraryGetMaxSuperPi_rec( Map_Super_t * pGate )Map_LibraryGetMaxSuperPi_rec726,24029
unsigned Map_LibraryGetGateSupp_rec( Map_Super_t * pGate )Map_LibraryGetGateSupp_rec751,24681
void Map_LibraryAddFaninDelays( Map_SuperLib_t * pLib, Map_Super_t * pGate, Map_Super_t * pFanin, Mio_Pin_t * pPin )Map_LibraryAddFaninDelays774,25306
unsigned Map_CalculatePhase( unsigned uTruths[][2], int nVars, unsigned uTruth, unsigned uPhase )Map_CalculatePhase918,32071
void Map_CalculatePhase6( unsigned uTruths[][2], int nVars, unsigned uTruth[], unsigned uPhase, unsigned uTruthRes[] )Map_CalculatePhase6938,32679
void Map_LibraryPrintTree( Map_SuperLib_t * pLib )Map_LibraryPrintTree979,34027

src/map/mapper/mapperVec.c,1336
Map_NodeVec_t * Map_NodeVecAlloc( int nCap )Map_NodeVecAlloc45,1324
void Map_NodeVecFree( Map_NodeVec_t * p )Map_NodeVecFree68,1845
Map_NodeVec_t * Map_NodeVecDup( Map_NodeVec_t * p )Map_NodeVecDup87,2209
Map_Node_t ** Map_NodeVecReadArray( Map_NodeVec_t * p )Map_NodeVecReadArray106,2665
int Map_NodeVecReadSize( Map_NodeVec_t * p )Map_NodeVecReadSize122,2982
void Map_NodeVecGrow( Map_NodeVec_t * p, int nCapMin )Map_NodeVecGrow138,3328
void Map_NodeVecShrink( Map_NodeVec_t * p, int nSizeNew )Map_NodeVecShrink157,3759
void Map_NodeVecClear( Map_NodeVec_t * p )Map_NodeVecClear174,4117
void Map_NodeVecPush( Map_NodeVec_t * p, Map_Node_t * Entry )Map_NodeVecPush190,4417
int Map_NodeVecPushUnique( Map_NodeVec_t * p, Map_Node_t * Entry )Map_NodeVecPushUnique213,5021
Map_Node_t * Map_NodeVecPop( Map_NodeVec_t * p )Map_NodeVecPop234,5481
void Map_NodeVecRemove( Map_NodeVec_t * p, Map_Node_t * Entry )Map_NodeVecRemove250,5803
void Map_NodeVecWriteEntry( Map_NodeVec_t * p, int i, Map_Node_t * Entry )Map_NodeVecWriteEntry273,6328
Map_Node_t * Map_NodeVecReadEntry( Map_NodeVec_t * p, int i )Map_NodeVecReadEntry290,6706
void Map_NodeVecSortByLevel( Map_NodeVec_t * p )Map_NodeVecSortByLevel307,7113
int Map_NodeVecCompareLevels( Map_Node_t ** pp1, Map_Node_t ** pp2 )Map_NodeVecCompareLevels324,7587

src/map/mapper/mapperCut.c,3398
#define  MAP_CUTS_MAX_COMPUTE MAP_CUTS_MAX_COMPUTE29,791
#define  MAP_CUTS_MAX_USE MAP_CUTS_MAX_USE31,863
typedef struct Map_CutTableStrutct_t Map_CutTable_t;Map_CutTable_t34,942
struct Map_CutTableStrutct_tMap_CutTableStrutct_t35,995
    Map_Cut_t ** pBins;        // the table used for linear probingpBins37,1026
    int          nBins;        // the size of the tablenBins38,1094
    int *        pCuts;        // the array of cuts currently stored pCuts39,1150
    int          nCuts;        // the number of cuts currently stored nCuts40,1220
    Map_Cut_t ** pArray;       // the temporary array of cutspArray41,1291
    Map_Cut_t ** pCuts1;       // the temporary array of cutspCuts142,1353
    Map_Cut_t ** pCuts2;       // the temporary array of cutspCuts243,1415
static int s_HashPrimes[10] = { 109, 499, 557, 619, 631, 709, 797, 881, 907, 991 };s_HashPrimes47,1520
#define Map_ListForEachCut(Map_ListForEachCut74,3456
#define Map_ListForEachCutSafe(Map_ListForEachCutSafe78,3667
int Map_MappingCountAllCuts( Map_Man_t * pMan )Map_MappingCountAllCuts100,4486
void Map_MappingCutsInput( Map_Man_t * p, Map_Node_t * pNode )Map_MappingCutsInput158,7229
void Map_MappingCuts( Map_Man_t * p )Map_MappingCuts172,7746
Map_Cut_t * Map_CutCompute( Map_Man_t * p, Map_CutTable_t * pTable, Map_Node_t * pNode )Map_CutCompute225,9392
void Map_CutFilter( Map_Man_t * p, Map_Node_t * pNode )Map_CutFilter295,11571
Map_Cut_t * Map_CutMergeLists( Map_Man_t * p, Map_CutTable_t * pTable, Map_CutMergeLists345,13085
Map_Cut_t * Map_CutMergeLists2( Map_Man_t * p, Map_CutTable_t * pTable, Map_CutMergeLists2522,19584
int Map_CutMergeTwo( Map_Cut_t * pCut1, Map_Cut_t * pCut2, Map_Node_t * ppNodes[], int nNodesMax )Map_CutMergeTwo589,22036
Map_Cut_t * Map_CutUnionLists( Map_Cut_t * pList1, Map_Cut_t * pList2 )Map_CutUnionLists690,25330
int Map_CutBelongsToList( Map_Cut_t * pList, Map_Node_t * ppNodes[], int nNodes )Map_CutBelongsToList717,26110
void Map_CutListPrint( Map_Man_t * pMan, Map_Node_t * pRoot )Map_CutListPrint744,26738
void Map_CutListPrint2( Map_Man_t * pMan, Map_Node_t * pRoot )Map_CutListPrint2766,27291
void Map_CutPrint_( Map_Man_t * pMan, Map_Cut_t * pCut, Map_Node_t * pRoot )Map_CutPrint_788,27832
Map_CutTable_t * Map_CutTableStart( Map_Man_t * pMan )Map_CutTableStart816,28397
void Map_CutTableStop( Map_CutTable_t * p )Map_CutTableStop843,29292
unsigned Map_CutTableHash( Map_Node_t * ppNodes[], int nNodes )Map_CutTableHash864,29762
int Map_CutTableLookup( Map_CutTable_t * p, Map_Node_t * ppNodes[], int nNodes )Map_CutTableLookup886,30374
Map_Cut_t * Map_CutTableConsider( Map_Man_t * pMan, Map_CutTable_t * p, Map_Node_t * ppNodes[], int nNodes )Map_CutTableConsider919,31229
void Map_CutTableRestart( Map_CutTable_t * p )Map_CutTableRestart956,32331
int Map_CutSortCutsCompare( Map_Cut_t ** pC1, Map_Cut_t ** pC2 )Map_CutSortCutsCompare980,32840
Map_Cut_t * Map_CutSortCuts( Map_Man_t * pMan, Map_CutTable_t * p, Map_Cut_t * pList )Map_CutSortCuts1000,33324
int Map_CutList2Array( Map_Cut_t ** pArray, Map_Cut_t * pList )Map_CutList2Array1037,34532
Map_Cut_t * Map_CutArray2List( Map_Cut_t ** pArray, int nCuts )Map_CutArray2List1056,34984
unsigned Map_CutComputeTruth( Map_Man_t * p, Map_Cut_t * pCut, Map_Cut_t * pTemp0, Map_Cut_t * pTemp1, int fComp0, int fComp1 )Map_CutComputeTruth1086,35644

src/map/mapper/mapperCutUtils.c,799
Map_Cut_t * Map_CutAlloc( Map_Man_t * p )Map_CutAlloc43,1231
void Map_CutFree( Map_Man_t * p, Map_Cut_t * pCut )Map_CutFree75,2231
void Map_CutPrint( Map_Man_t * p, Map_Node_t * pRoot, Map_Cut_t * pCut, int fPhase )Map_CutPrint92,2596
float Map_CutGetRootArea( Map_Cut_t * pCut, int fPhase )Map_CutGetRootArea114,3278
int Map_CutGetLeafPhase( Map_Cut_t * pCut, int fPhase, int iLeaf )Map_CutGetLeafPhase131,3709
int Map_NodeGetLeafPhase( Map_Node_t * pNode, int fPhase, int iLeaf )Map_NodeGetLeafPhase148,4168
Map_Cut_t * Map_CutListAppend( Map_Cut_t * pSetAll, Map_Cut_t * pSets )Map_CutListAppend165,4620
void Map_CutListRecycle( Map_Man_t * p, Map_Cut_t * pSetList, Map_Cut_t * pSave )Map_CutListRecycle193,5354
int Map_CutListCount( Map_Cut_t * pSets )Map_CutListCount214,5949

src/map/mapper/mapperFanout.c,300
void Map_NodeAddFaninFanout( Map_Node_t * pFanin, Map_Node_t * pFanout )Map_NodeAddFaninFanout45,1309
void Map_NodeRemoveFaninFanout( Map_Node_t * pFanin, Map_Node_t * pFanoutToRemove )Map_NodeRemoveFaninFanout101,2866
int Map_NodeGetFanoutNum( Map_Node_t * pNode )Map_NodeGetFanoutNum130,3723

src/map/mapper/mapperRefs.c,1338
int Map_NodeReadRefPhaseAct( Map_Node_t * pNode, int fPhase )Map_NodeReadRefPhaseAct43,1251
float Map_NodeReadRefPhaseEst( Map_Node_t * pNode, int fPhase )Map_NodeReadRefPhaseEst63,1860
int Map_NodeIncRefPhaseAct( Map_Node_t * pNode, int fPhase )Map_NodeIncRefPhaseAct85,2560
int Map_NodeDecRefPhaseAct( Map_Node_t * pNode, int fPhase )Map_NodeDecRefPhaseAct105,3208
void Map_MappingEstimateRefsInit( Map_Man_t * p )Map_MappingEstimateRefsInit126,3821
void Map_MappingEstimateRefs( Map_Man_t * p )Map_MappingEstimateRefs151,4646
float Map_CutGetAreaFlow( Map_Cut_t * pCut, int fPhase )Map_CutGetAreaFlow179,5784
float Map_CutRefDeref( Map_Cut_t * pCut, int fPhase, int fReference, int fUpdateProf )Map_CutRefDeref229,7558
float Map_CutGetAreaRefed( Map_Cut_t * pCut, int fPhase )Map_CutGetAreaRefed335,11542
float Map_CutGetAreaDerefed( Map_Cut_t * pCut, int fPhase )Map_CutGetAreaDerefed355,12109
float Map_CutRef( Map_Cut_t * pCut, int fPhase, int fProfile )Map_CutRef375,12649
float Map_CutDeref( Map_Cut_t * pCut, int fPhase, int fProfile )Map_CutDeref391,13042
void Map_MappingSetRefs_rec( Map_Man_t * pMan, Map_Node_t * pNode )Map_MappingSetRefs_rec410,13620
void Map_MappingSetRefs( Map_Man_t * pMan )Map_MappingSetRefs450,14890
float Map_MappingGetArea( Map_Man_t * pMan )Map_MappingGetArea485,15813

src/map/mapper/mapperTruth.c,347
void Map_MappingTruths( Map_Man_t * pMan )Map_MappingTruths47,1470
void Map_TruthsCut( Map_Man_t * p, Map_Cut_t * pCut )Map_TruthsCut94,2972
void Map_TruthsCutOne( Map_Man_t * p, Map_Cut_t * pCut, unsigned uTruth[] )Map_TruthsCutOne197,6412
void Map_CutsCollect_rec( Map_Cut_t * pCut, Map_NodeVec_t * vVisited )Map_CutsCollect_rec278,9003

src/map/mapper/mapper.h,1158
#define ABC__map__mapper__mapper_hABC__map__mapper__mapper_h20,509
typedef struct Map_ManStruct_t_         Map_Man_t;Map_Man_t40,1237
typedef struct Map_NodeStruct_t_        Map_Node_t;Map_Node_t41,1288
typedef struct Map_NodeVecStruct_t_     Map_NodeVec_t;Map_NodeVec_t42,1340
typedef struct Map_CutStruct_t_         Map_Cut_t;Map_Cut_t43,1395
typedef struct Map_MatchStruct_t_       Map_Match_t;Map_Match_t44,1446
typedef struct Map_SuperStruct_t_       Map_Super_t;Map_Super_t45,1499
typedef struct Map_SuperLibStruct_t_    Map_SuperLib_t;Map_SuperLib_t46,1552
typedef struct Map_HashTableStruct_t_   Map_HashTable_t;Map_HashTable_t47,1608
typedef struct Map_HashEntryStruct_t_   Map_HashEntry_t;Map_HashEntry_t48,1665
typedef struct Map_TimeStruct_t_        Map_Time_t;Map_Time_t49,1722
struct Map_TimeStruct_t_Map_TimeStruct_t_52,1816
    float              Rise;Rise54,1843
    float              Fall;Fall55,1872
    float              Worst;Worst56,1901
#define Map_IsComplement(Map_IsComplement67,2376
#define Map_Regular(Map_Regular68,2443
#define Map_Not(Map_Not69,2518
#define Map_NotCond(Map_NotCond70,2592

src/map/scl/sclSize.h,9221
#define ABC__map__scl__sclSize_hABC__map__scl__sclSize_h22,572
typedef struct SC_Man_          SC_Man;SC_Man44,1400
struct SC_Man_ SC_Man_45,1440
    SC_Lib *       pLib;          // librarypLib47,1458
    Abc_Ntk_t *    pNtk;          // networkpNtk48,1503
    int            nObjs;         // allocated sizenObjs49,1548
    Vec_Int_t *    vGatesBest;    // best gate sizes found so farvGatesBest51,1622
    Vec_Int_t *    vUpdates;      // sizing updates in this roundvUpdates52,1688
    Vec_Int_t *    vUpdates2;     // sizing updates in this roundvUpdates253,1754
    SC_WireLoad *  pWLoadUsed;    // name of the used WireLoad modelpWLoadUsed55,1846
    Vec_Flt_t *    vWireCaps;     // wire capacitancesvWireCaps56,1915
    SC_Pair *      pLoads;        // loads for each gatepLoads57,1970
    SC_Pair *      pDepts;        // departures for each gatepDepts58,2027
    SC_Pair *      pTimes;        // arrivals for each gatepTimes59,2089
    SC_Pair *      pSlews;        // slews for each gatepSlews60,2149
    Vec_Flt_t *    vInDrive;      // maximum input drive strengthvInDrive61,2206
    Vec_Flt_t *    vTimesOut;     // output arrival timesvTimesOut62,2272
    Vec_Que_t *    vQue;          // outputs by their timevQue63,2330
    SC_Cell *      pPiDrive;      // cell driving primary inputspPiDrive64,2389
    Vec_Flt_t *    vLoads2;       // backup storage for loadsvLoads266,2480
    Vec_Flt_t *    vLoads3;       // backup storage for loadsvLoads367,2542
    Vec_Flt_t *    vTimes2;       // backup storage for timesvTimes268,2604
    Vec_Flt_t *    vTimes3;       // backup storage for slewsvTimes369,2666
    float          EstLoadMax;    // max ratio of Cout/Cin when this kicks inEstLoadMax71,2748
    float          EstLoadAve;    // average load of the gateEstLoadAve72,2826
    float          EstLinear;     // linear coefficientEstLinear73,2888
    int            nEstNodes;     // the number of estimationsnEstNodes74,2944
    Vec_Que_t *    vNodeByGain;   // nodes by gainvNodeByGain76,3032
    Vec_Flt_t *    vNode2Gain;    // mapping node into its gainvNode2Gain77,3083
    Vec_Int_t *    vNode2Gate;    // mapping node into its best gatevNode2Gate78,3147
    Vec_Int_t *    vNodeIter;     // the last iteration the node was upsizedvNodeIter79,3216
    Vec_Int_t *    vBestFans;     // best fanoutsvBestFans80,3293
    Vec_Wec_t *    vLevels;vLevels82,3376
    Vec_Int_t *    vChanged; vChanged83,3404
    int            nIncUpdates;nIncUpdates84,3434
    float          SumArea;       // total areaSumArea86,3497
    float          MaxDelay;      // max delayMaxDelay87,3545
    float          SumArea0;      // total area at the begining SumArea088,3592
    float          MaxDelay0;     // max delay at the beginingMaxDelay089,3657
    float          BestDelay;     // best delay in the middleBestDelay90,3720
    float          ReportDelay;   // delay to reportReportDelay91,3782
    abctime        timeTotal;     // starting/total timetimeTotal93,3861
    abctime        timeCone;      // critical path selection timeCone94,3918
    abctime        timeSize;      // incremental sizingtimeSize95,3980
    abctime        timeTime;      // timing updatetimeTime96,4036
    abctime        timeOther;     // everything elsetimeOther97,4087
static inline SC_Lib  * Abc_SclObjLib( Abc_Obj_t * p )                              { return (SC_Lib *)p->pNtk->pSCLib;    }Abc_SclObjLib108,4584
static inline int       Abc_SclObjCellId( Abc_Obj_t * p )                           { return Vec_IntEntry( p->pNtk->vGates, Abc_ObjId(p) );                               }Abc_SclObjCellId109,4709
static inline SC_Cell * Abc_SclObjCell( Abc_Obj_t * p )                             { int c = Abc_SclObjCellId(p); return c == -1 ? NULL:SC_LibCell(Abc_SclObjLib(p), c); }Abc_SclObjCell110,4881
static inline void      Abc_SclObjSetCell( Abc_Obj_t * p, SC_Cell * pCell )         { Vec_IntWriteEntry( p->pNtk->vGates, Abc_ObjId(p), pCell->Id );                      }Abc_SclObjSetCell111,5053
static inline SC_Pair * Abc_SclObjLoad( SC_Man * p, Abc_Obj_t * pObj )              { return p->pLoads + Abc_ObjId(pObj);  }Abc_SclObjLoad113,5226
static inline SC_Pair * Abc_SclObjDept( SC_Man * p, Abc_Obj_t * pObj )              { return p->pDepts + Abc_ObjId(pObj);  }Abc_SclObjDept114,5351
static inline SC_Pair * Abc_SclObjTime( SC_Man * p, Abc_Obj_t * pObj )              { return p->pTimes + Abc_ObjId(pObj);  }Abc_SclObjTime115,5476
static inline SC_Pair * Abc_SclObjSlew( SC_Man * p, Abc_Obj_t * pObj )              { return p->pSlews + Abc_ObjId(pObj);  }Abc_SclObjSlew116,5601
static inline double    Abc_SclObjLoadMax( SC_Man * p, Abc_Obj_t * pObj )           { return Abc_MaxFloat(Abc_SclObjLoad(p, pObj)->rise, Abc_SclObjLoad(p, pObj)->fall);  }Abc_SclObjLoadMax118,5727
static inline float     Abc_SclObjLoadAve( SC_Man * p, Abc_Obj_t * pObj )           { return 0.5 * Abc_SclObjLoad(p, pObj)->rise + 0.5 * Abc_SclObjLoad(p, pObj)->fall;   }Abc_SclObjLoadAve119,5899
static inline double    Abc_SclObjTimeOne( SC_Man * p, Abc_Obj_t * pObj, int fRise ){ return fRise ? Abc_SclObjTime(p, pObj)->rise : Abc_SclObjTime(p, pObj)->fall;       }Abc_SclObjTimeOne120,6071
static inline float     Abc_SclObjTimeMax( SC_Man * p, Abc_Obj_t * pObj )           { return Abc_MaxFloat(Abc_SclObjTime(p, pObj)->rise, Abc_SclObjTime(p, pObj)->fall);  }Abc_SclObjTimeMax121,6243
static inline double    Abc_SclObjSlewMax( SC_Man * p, Abc_Obj_t * pObj )           { return Abc_MaxFloat(Abc_SclObjSlew(p, pObj)->rise, Abc_SclObjSlew(p, pObj)->fall);  }Abc_SclObjSlewMax122,6415
static inline float     Abc_SclObjGetSlackR( SC_Man * p, Abc_Obj_t * pObj, float D ){ return D - (Abc_SclObjTime(p, pObj)->rise + Abc_SclObjDept(p, pObj)->rise);         }Abc_SclObjGetSlackR123,6587
static inline float     Abc_SclObjGetSlackF( SC_Man * p, Abc_Obj_t * pObj, float D ){ return D - (Abc_SclObjTime(p, pObj)->fall + Abc_SclObjDept(p, pObj)->fall);         }Abc_SclObjGetSlackF124,6759
static inline float     Abc_SclObjGetSlack( SC_Man * p, Abc_Obj_t * pObj, float D ) { return D - Abc_MaxFloat(Abc_SclObjTime(p, pObj)->rise + Abc_SclObjDept(p, pObj)->rise, Abc_SclObjTime(p, pObj)->fall + Abc_SclObjDept(p, pObj)->fall);  }Abc_SclObjGetSlack125,6931
static inline double    Abc_SclObjSlackMax( SC_Man * p, Abc_Obj_t * pObj, float D ) { return Abc_SclObjGetSlack(p, pObj, D);                                              }Abc_SclObjSlackMax126,7171
static inline void      Abc_SclObjDupFanin( SC_Man * p, Abc_Obj_t * pObj )          { assert( Abc_ObjIsCo(pObj) ); *Abc_SclObjTime(p, pObj) = *Abc_SclObjTime(p, Abc_ObjFanin0(pObj));  }Abc_SclObjDupFanin127,7343
static inline float     Abc_SclObjInDrive( SC_Man * p, Abc_Obj_t * pObj )           { return Vec_FltEntry( p->vInDrive, pObj->iData );                                    }Abc_SclObjInDrive128,7529
static inline void      Abc_SclObjSetInDrive( SC_Man * p, Abc_Obj_t * pObj, float c){ Vec_FltWriteEntry( p->vInDrive, pObj->iData, c );                                   }Abc_SclObjSetInDrive129,7701
static inline SC_Man * Abc_SclManAlloc( SC_Lib * pLib, Abc_Ntk_t * pNtk )Abc_SclManAlloc147,8367
static inline void Abc_SclManFree( SC_Man * p )Abc_SclManFree192,10140
static inline void Abc_SclManCleanTime( SC_Man * p )Abc_SclManCleanTime256,12071
static inline void Abc_SclLoadStore( SC_Man * p, Abc_Obj_t * pObj )Abc_SclLoadStore290,12993
static inline void Abc_SclLoadRestore( SC_Man * p, Abc_Obj_t * pObj )Abc_SclLoadRestore301,13323
static inline void Abc_SclLoadStore3( SC_Man * p, Abc_Obj_t * pObj )Abc_SclLoadStore3313,13685
static inline void Abc_SclLoadRestore3( SC_Man * p, Abc_Obj_t * pObj )Abc_SclLoadRestore3326,14140
static inline void Abc_SclConeStore( SC_Man * p, Vec_Int_t * vCone )Abc_SclConeStore339,14636
static inline void Abc_SclConeRestore( SC_Man * p, Vec_Int_t * vCone )Abc_SclConeRestore352,15102
static inline void Abc_SclEvalStore( SC_Man * p, Vec_Int_t * vCone )Abc_SclEvalStore365,15609
static inline float Abc_SclEvalPerform( SC_Man * p, Vec_Int_t * vCone )Abc_SclEvalPerform376,15943
static inline float Abc_SclEvalPerformLegal( SC_Man * p, Vec_Int_t * vCone, float D )Abc_SclEvalPerformLegal390,16462
static inline void Abc_SclConeClean( SC_Man * p, Vec_Int_t * vCone )Abc_SclConeClean406,17124
static inline int Abc_SclGetBufInvCount( Abc_Ntk_t * pNtk )Abc_SclGetBufInvCount429,17644
static inline float Abc_SclGetAverageSize( Abc_Ntk_t * pNtk )Abc_SclGetAverageSize437,17867
static inline float Abc_SclGetTotalArea( Abc_Ntk_t * pNtk )Abc_SclGetTotalArea446,18174
static inline float Abc_SclGetMaxDelay( SC_Man * p )Abc_SclGetMaxDelay455,18403
static inline float Abc_SclGetMaxDelayNodeFanins( SC_Man * p, Abc_Obj_t * pNode )Abc_SclGetMaxDelayNodeFanins464,18648
static inline float Abc_SclReadMaxDelay( SC_Man * p )Abc_SclReadMaxDelay474,18959
static inline SC_Cell * Abc_SclObjResiable( SC_Man * p, Abc_Obj_t * pObj, int fUpsize )Abc_SclObjResiable490,19328
static inline void Abc_SclDumpStats( SC_Man * p, char * pFileName, abctime Time )Abc_SclDumpStats510,19899

src/map/scl/sclSize.c,4691
Abc_Obj_t * Abc_SclFindCriticalCo( SC_Man * p, int * pfRise )Abc_SclFindCriticalCo52,1430
Abc_Obj_t * Abc_SclFindMostCriticalFanin2( SC_Man * p, int * pfRise, Abc_Obj_t * pNode )Abc_SclFindMostCriticalFanin270,2064
Abc_Obj_t * Abc_SclFindMostCriticalFanin( SC_Man * p, int * pfRise, Abc_Obj_t * pNode )Abc_SclFindMostCriticalFanin84,2575
static inline void Abc_SclTimeNodePrint( SC_Man * p, Abc_Obj_t * pObj, int fRise, int Length, float maxDelay )Abc_SclTimeNodePrint117,3518
void Abc_SclTimeNtkPrint( SC_Man * p, int fShowAll, int fPrintPath )Abc_SclTimeNtkPrint136,4739
static inline void Abc_SclTimeFanin( SC_Man * p, SC_Timing * pTime, Abc_Obj_t * pObj, Abc_Obj_t * pFanin )Abc_SclTimeFanin262,10349
static inline void Abc_SclDeptFanin( SC_Man * p, SC_Timing * pTime, Abc_Obj_t * pObj, Abc_Obj_t * pFanin )Abc_SclDeptFanin271,10827
static inline void Abc_SclDeptObj( SC_Man * p, Abc_Obj_t * pObj )Abc_SclDeptObj279,11231
static inline float Abc_SclObjLoadValue( SC_Man * p, Abc_Obj_t * pObj )Abc_SclObjLoadValue293,11694
static inline void Abc_SclTimeCi( SC_Man * p, Abc_Obj_t * pObj )Abc_SclTimeCi298,11986
void Abc_SclTimeNode( SC_Man * p, Abc_Obj_t * pObj, int fDept )Abc_SclTimeNode308,12327
void Abc_SclTimeCone( SC_Man * p, Vec_Int_t * vCone )Abc_SclTimeCone383,14604
void Abc_SclTimeNtkRecompute( SC_Man * p, float * pArea, float * pDelay, int fReverse, float DUser )Abc_SclTimeNtkRecompute400,15326
static inline void Abc_SclTimeIncUpdateClean( SC_Man * p )Abc_SclTimeIncUpdateClean440,16420
static inline void Abc_SclTimeIncAddNode( SC_Man * p, Abc_Obj_t * pObj )Abc_SclTimeIncAddNode455,16784
static inline void Abc_SclTimeIncAddFanins( SC_Man * p, Abc_Obj_t * pObj )Abc_SclTimeIncAddFanins463,17057
static inline void Abc_SclTimeIncAddFanouts( SC_Man * p, Abc_Obj_t * pObj )Abc_SclTimeIncAddFanouts472,17378
static inline void Abc_SclTimeIncUpdateArrival( SC_Man * p )Abc_SclTimeIncUpdateArrival480,17648
static inline void Abc_SclTimeIncUpdateDeparture( SC_Man * p )Abc_SclTimeIncUpdateDeparture511,18805
void Abc_SclTimeIncCheckLevel( Abc_Ntk_t * pNtk )Abc_SclTimeIncCheckLevel532,19472
int Abc_SclTimeIncUpdate( SC_Man * p )Abc_SclTimeIncUpdate540,19718
void Abc_SclTimeIncInsert( SC_Man * p, Abc_Obj_t * pObj )Abc_SclTimeIncInsert562,20335
void Abc_SclTimeIncUpdateLevel_rec( Abc_Obj_t * pObj )Abc_SclTimeIncUpdateLevel_rec566,20446
void Abc_SclTimeIncUpdateLevel( Abc_Obj_t * pObj )Abc_SclTimeIncUpdateLevel576,20806
void Abc_SclManReadSlewAndLoad( SC_Man * p, Abc_Ntk_t * pNtk )Abc_SclManReadSlewAndLoad594,21173
SC_Man * Abc_SclManStart( SC_Lib * pLib, Abc_Ntk_t * pNtk, int fUseWireLoads, int fDept, float DUser, int nTreeCRatio )Abc_SclManStart633,22424
void Abc_SclTimePerformInt( SC_Lib * pLib, Abc_Ntk_t * pNtk, int nTreeCRatio, int fUseWireLoads, int fShowAll, int fPrintPath, int fDumpStats )Abc_SclTimePerformInt671,23720
void Abc_SclTimePerform( SC_Lib * pLib, Abc_Ntk_t * pNtk, int nTreeCRatio, int fUseWireLoads, int fShowAll, int fPrintPath, int fDumpStats )Abc_SclTimePerform692,24338
int Abc_SclCheckCommonInputs( Abc_Obj_t * pObj, Abc_Obj_t * pFanin )Abc_SclCheckCommonInputs715,25035
void Abc_SclPrintFaninPairs( SC_Man * p, Abc_Ntk_t * pNtk )Abc_SclPrintFaninPairs737,25830
static inline int Abc_ObjIsBuffer( Abc_Obj_t * pObj ) { return Abc_ObjIsNode(pObj) && Abc_ObjFaninNum(pObj) == 1; }Abc_ObjIsBuffer758,26426
int Abc_SclHasBufferFanout( Abc_Obj_t * pObj )Abc_SclHasBufferFanout759,26542
int Abc_SclCountBufferFanoutsInt( Abc_Obj_t * pObj )Abc_SclCountBufferFanoutsInt768,26750
int Abc_SclCountBufferFanouts( Abc_Obj_t * pObj )Abc_SclCountBufferFanouts777,27049
int Abc_SclCountNonBufferFanoutsInt( Abc_Obj_t * pObj )Abc_SclCountNonBufferFanoutsInt781,27174
int Abc_SclCountNonBufferFanouts( Abc_Obj_t * pObj )Abc_SclCountNonBufferFanouts791,27463
float Abc_SclCountNonBufferDelayInt( SC_Man * p, Abc_Obj_t * pObj )Abc_SclCountNonBufferDelayInt799,27697
float Abc_SclCountNonBufferDelay( SC_Man * p, Abc_Obj_t * pObj )Abc_SclCountNonBufferDelay810,28029
float Abc_SclCountNonBufferLoadInt( SC_Man * p, Abc_Obj_t * pObj )Abc_SclCountNonBufferLoadInt819,28281
float Abc_SclCountNonBufferLoad( SC_Man * p, Abc_Obj_t * pObj )Abc_SclCountNonBufferLoad832,28789
void Abc_SclPrintBuffersOne( SC_Man * p, Abc_Obj_t * pObj, int nOffset )Abc_SclPrintBuffersOne842,29123
void Abc_SclPrintBuffersInt( SC_Man * p, Abc_Obj_t * pObj, int nOffset )Abc_SclPrintBuffersInt871,30573
void Abc_SclPrintBufferTrees( SC_Man * p, Abc_Ntk_t * pNtk )Abc_SclPrintBufferTrees881,30919
void Abc_SclPrintBuffers( SC_Lib * pLib, Abc_Ntk_t * pNtk, int fVerbose )Abc_SclPrintBuffers897,31430

src/map/scl/sclLibScl.c,1186
static void Abc_SclReadSurfaceGenlib( SC_Surface * p )Abc_SclReadSurfaceGenlib52,1476
static int Abc_SclReadLibraryGenlib( SC_Lib * p, Mio_Library_t * pLib )Abc_SclReadLibraryGenlib77,2190
SC_Lib * Abc_SclReadFromGenlib( void * pLib0 )Abc_SclReadFromGenlib169,5683
static void Abc_SclReadSurface( Vec_Str_t * vOut, int * pPos, SC_Surface * p )Abc_SclReadSurface193,6246
static int Abc_SclReadLibrary( Vec_Str_t * vOut, int * pPos, SC_Lib * p )Abc_SclReadLibrary234,7534
SC_Lib * Abc_SclReadFromStr( Vec_Str_t * vOut )Abc_SclReadFromStr403,14088
SC_Lib * Abc_SclReadFromFile( char * pFileName )Abc_SclReadFromFile417,14427
static void Abc_SclWriteSurface( Vec_Str_t * vOut, SC_Surface * p )Abc_SclWriteSurface461,15616
static void Abc_SclWriteLibrary( Vec_Str_t * vOut, SC_Lib * p )Abc_SclWriteLibrary486,16393
void Abc_SclWriteScl( char * pFileName, SC_Lib * p )Abc_SclWriteScl613,21267
static void Abc_SclWriteSurfaceText( FILE * s, SC_Surface * p )Abc_SclWriteSurfaceText644,22043
static void Abc_SclWriteLibraryText( FILE * s, SC_Lib * p )Abc_SclWriteLibraryText690,23513
void Abc_SclWriteLiberty( char * pFileName, SC_Lib * p )Abc_SclWriteLiberty829,29793

src/map/scl/sclBuffer.c,6967
#define BUF_SCALE BUF_SCALE31,831
typedef struct Buf_Man_t_ Buf_Man_t;Buf_Man_t33,855
struct Buf_Man_t_Buf_Man_t_34,892
    int            nFanMin;   // the smallest fanout count to considernFanMin37,930
    int            nFanMax;   // the largest fanout count allowed off CPnFanMax38,1001
    int            fBufPis;   // enables buffing of the combinational inputsfBufPis39,1074
    Abc_Ntk_t *    pNtk;      // logic networkpNtk41,1172
    Vec_Int_t *    vOffsets;  // offsets into edge delaysvOffsets42,1219
    Vec_Int_t *    vEdges;    // edge delaysvEdges43,1277
    Vec_Int_t *    vArr;      // arrival timesvArr44,1322
    Vec_Int_t *    vDep;      // departure timesvDep45,1369
    Vec_Flt_t *    vCounts;   // fanout countsvCounts46,1418
    Vec_Que_t *    vQue;      // queue by fanout countvQue47,1465
    int            nObjStart; // the number of starting objectsnObjStart48,1520
    int            nObjAlloc; // the number of allocated objectsnObjAlloc49,1584
    int            DelayMax;  // maximum delay (percentage of inverter delay)DelayMax50,1649
    float          DelayInv;  // inverter delayDelayInv51,1727
    Vec_Int_t *    vOrder;    // ordering of fanoutsvOrder53,1798
    Vec_Int_t *    vDelays;   // fanout delaysvDelays54,1851
    Vec_Int_t *    vNonCrit;  // non-critical fanoutsvNonCrit55,1898
    Vec_Int_t *    vTfCone;   // TFI/TFO cone of the node including the nodevTfCone56,1952
    Vec_Ptr_t *    vFanouts;  // temp storage for fanoutsvFanouts57,2029
    int            nSeparate;nSeparate59,2105
    int            nDuplicate;nDuplicate60,2135
    int            nBranch0;nBranch061,2166
    int            nBranch1;nBranch162,2195
    int            nBranchCrit;nBranchCrit63,2224
static inline int  Abc_BufNodeArr( Buf_Man_t * p, Abc_Obj_t * pObj )                     { return Vec_IntEntry( p->vArr, Abc_ObjId(pObj) );                                   }Abc_BufNodeArr66,2260
static inline int  Abc_BufNodeDep( Buf_Man_t * p, Abc_Obj_t * pObj )                     { return Vec_IntEntry( p->vDep, Abc_ObjId(pObj) );                                   }Abc_BufNodeDep67,2436
static inline void Abc_BufSetNodeArr( Buf_Man_t * p, Abc_Obj_t * pObj, int f )           { Vec_IntWriteEntry( p->vArr, Abc_ObjId(pObj), f );                                  }Abc_BufSetNodeArr68,2612
static inline void Abc_BufSetNodeDep( Buf_Man_t * p, Abc_Obj_t * pObj, int f )           { Vec_IntWriteEntry( p->vDep, Abc_ObjId(pObj), f );                                  }Abc_BufSetNodeDep69,2788
static inline int  Abc_BufEdgeDelay( Buf_Man_t * p, Abc_Obj_t * pObj, int i )            { return Vec_IntEntry( p->vEdges, Vec_IntEntry(p->vOffsets, Abc_ObjId(pObj)) + i );  }Abc_BufEdgeDelay70,2964
static inline void Abc_BufSetEdgeDelay( Buf_Man_t * p, Abc_Obj_t * pObj, int i, int f )  { Vec_IntWriteEntry( p->vEdges, Vec_IntEntry(p->vOffsets, Abc_ObjId(pObj)) + i, f ); }Abc_BufSetEdgeDelay71,3140
static inline int  Abc_BufNodeSlack( Buf_Man_t * p, Abc_Obj_t * pObj )                   { return p->DelayMax - Abc_BufNodeArr(p, pObj) - Abc_BufNodeDep(p, pObj);            }Abc_BufNodeSlack72,3316
static inline int  Abc_BufEdgeSlack( Buf_Man_t * p, Abc_Obj_t * pObj, Abc_Obj_t * pFan ) { return p->DelayMax - Abc_BufNodeArr(p, pObj) - Abc_BufNodeDep(p, pFan) - Abc_BufEdgeDelay(p, pFan, Abc_NodeFindFanin(pFan, pObj)); }Abc_BufEdgeSlack73,3492
void Abc_SclReportDupFanins( Abc_Ntk_t * pNtk )Abc_SclReportDupFanins90,4216
static inline int Abc_SclObjIsBufInv( Abc_Obj_t * pObj )Abc_SclObjIsBufInv112,4873
int Abc_SclIsInv( Abc_Obj_t * pObj )Abc_SclIsInv116,4996
int Abc_SclGetRealFaninLit( Abc_Obj_t * pObj )Abc_SclGetRealFaninLit121,5162
Abc_Ntk_t * Abc_SclUnBufferPerform( Abc_Ntk_t * pNtk, int fVerbose )Abc_SclUnBufferPerform129,5427
int Abc_SclCountMaxPhases( Abc_Ntk_t * pNtk )Abc_SclCountMaxPhases181,7259
Abc_Ntk_t * Abc_SclBufferPhase( Abc_Ntk_t * pNtk, int fVerbose )Abc_SclBufferPhase198,7823
Abc_Ntk_t * Abc_SclUnBufferPhase( Abc_Ntk_t * pNtk, int fVerbose )Abc_SclUnBufferPhase239,9389
int Abc_SclCheckNtk( Abc_Ntk_t * p, int fVerbose )Abc_SclCheckNtk286,11037
void Abc_NodeInvUpdateFanPolarity( Abc_Obj_t * pObj )Abc_NodeInvUpdateFanPolarity322,12216
void Abc_NodeInvUpdateObjFanoutPolarity( Abc_Obj_t * pObj, Abc_Obj_t * pFanout )Abc_NodeInvUpdateObjFanoutPolarity336,12674
int Abc_NodeCompareLevels( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Abc_NodeCompareLevels343,12932
int Abc_SclComputeReverseLevel( Abc_Obj_t * pObj )Abc_SclComputeReverseLevel357,13310
Abc_Obj_t * Abc_SclPerformBufferingOne( Abc_Obj_t * pObj, int Degree, int fUseInvs, int fVerbose )Abc_SclPerformBufferingOne365,13532
void Abc_SclPerformBuffering_rec( Abc_Obj_t * pObj, int DegreeR, int Degree, int fUseInvs, int fVerbose )Abc_SclPerformBuffering_rec419,15871
Abc_Ntk_t * Abc_SclPerformBuffering( Abc_Ntk_t * p, int DegreeR, int Degree, int fUseInvs, int fVerbose )Abc_SclPerformBuffering459,17482
float Abc_BufComputeArr( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufComputeArr509,18982
float Abc_BufComputeDep( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufComputeDep525,19465
void Abc_BufUpdateGlobal( Buf_Man_t * p )Abc_BufUpdateGlobal541,19989
void Abc_BufCreateEdges( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufCreateEdges549,20219
void Abc_BufAddToQue( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufAddToQue557,20618
void Abc_BufCollectTfoCone_rec( Abc_Obj_t * pNode, Vec_Int_t * vNodes )Abc_BufCollectTfoCone_rec580,21255
void Abc_BufCollectTfoCone( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufCollectTfoCone595,21745
void Abc_BufUpdateArr( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufUpdateArr601,21933
void Abc_BufCollectTfiCone_rec( Abc_Obj_t * pNode, Vec_Int_t * vNodes )Abc_BufCollectTfiCone_rec626,22557
void Abc_BufCollectTfiCone( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufCollectTfiCone640,22988
void Abc_BufUpdateDep( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufUpdateDep646,23176
Buf_Man_t * Buf_ManStart( Abc_Ntk_t * pNtk, int FanMin, int FanMax, int fBufPis )Buf_ManStart671,23800
void Buf_ManStop( Buf_Man_t * p )Buf_ManStop725,25983
Vec_Int_t * Abc_BufSortByDelay( Buf_Man_t * p, int iPivot )Abc_BufSortByDelay758,26954
void Abc_BufPrintOne( Buf_Man_t * p, int iPivot )Abc_BufPrintOne779,27845
void Abc_BufReplaceBufsByInvs( Abc_Ntk_t * pNtk )Abc_BufReplaceBufsByInvs806,28632
int Abc_BufComputeAverage( Buf_Man_t * p, int iPivot, Vec_Int_t * vOrder )Abc_BufComputeAverage834,29460
Abc_Obj_t * Abc_BufFindNonBuffDriver( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufFindNonBuffDriver843,29793
int Abc_BufCountNonCritical( Buf_Man_t * p, Abc_Obj_t * pObj )Abc_BufCountNonCritical859,30219
void Abc_BufPerformOne( Buf_Man_t * p, int iPivot, int fSkipDup, int fVerbose )Abc_BufPerformOne869,30565
Abc_Ntk_t * Abc_SclBufPerform( Abc_Ntk_t * pNtk, int FanMin, int FanMax, int fBufPis, int fSkipDup, int fVerbose )Abc_SclBufPerform986,35629

src/map/scl/sclDnsize.c,831
void Abc_SclFindWindow( Abc_Obj_t * pPivot, Vec_Int_t ** pvNodes, Vec_Int_t ** pvEvals )Abc_SclFindWindow45,1310
int Abc_SclCheckImprovement( SC_Man * p, Abc_Obj_t * pObj, Vec_Int_t * vNodes, Vec_Int_t * vEvals, int Notches, int DelayGap )Abc_SclCheckImprovement102,3230
void Abc_NtkCollectNodesByArea( SC_Man * p, Abc_Ntk_t * pNtk )Abc_NtkCollectNodesByArea177,5812
int Abc_SclCheckOverlap( Abc_Ntk_t * pNtk, Vec_Int_t * vNodes )Abc_SclCheckOverlap190,6230
void Abc_SclDnsizePrint( SC_Man * p, int Iter, int nAttempts, int nOverlaps, int nChanges, int fVerbose )Abc_SclDnsizePrint211,6725
void Abc_SclDnsizePerformInt( SC_Lib * pLib, Abc_Ntk_t * pNtk, SC_SizePars * pPars )Abc_SclDnsizePerformInt242,7772
void Abc_SclDnsizePerform( SC_Lib * pLib, Abc_Ntk_t * pNtk, SC_SizePars * pPars )Abc_SclDnsizePerform360,12665

src/map/scl/scl.h,57
#define ABC__map__scl__scl_hABC__map__scl__scl_h22,555

src/map/scl/sclUtil.c,1228
void Abc_SclMioGates2SclGates( SC_Lib * pLib, Abc_Ntk_t * p )Abc_SclMioGates2SclGates47,1373
void Abc_SclSclGates2MioGates( SC_Lib * pLib, Abc_Ntk_t * p )Abc_SclSclGates2MioGates70,2177
void Abc_SclTransferGates( Abc_Ntk_t * pOld, Abc_Ntk_t * pNew )Abc_SclTransferGates102,3196
#define ABC_SCL_MAX_SIZE ABC_SCL_MAX_SIZE127,3851
void Abc_SclManPrintGateSizes( SC_Lib * pLib, Abc_Ntk_t * p, Vec_Int_t * vGates )Abc_SclManPrintGateSizes128,3879
void Abc_SclPrintGateSizes( SC_Lib * pLib, Abc_Ntk_t * p )Abc_SclPrintGateSizes156,4920
SC_Cell * Abc_SclFindMaxAreaCell( SC_Cell * pRepr )Abc_SclFindMaxAreaCell176,5447
Vec_Int_t * Abc_SclFindMinAreas( SC_Lib * pLib, int fUseMax )Abc_SclFindMinAreas189,5767
void Abc_SclMinsizePerform( SC_Lib * pLib, Abc_Ntk_t * p, int fUseMax, int fVerbose )Abc_SclMinsizePerform204,6315
int Abc_SclCountMinSize( SC_Lib * pLib, Abc_Ntk_t * p, int fUseMax )Abc_SclCountMinSize222,6988
void Abc_SclReadTimingConstr( Abc_Frame_t * pAbc, char * pFileName, int fVerbose )Abc_SclReadTimingConstr248,7678
Vec_Int_t * Abc_SclExtractBarBufs( Abc_Ntk_t * pNtk )Abc_SclExtractBarBufs287,8953
void Abc_SclInsertBarBufs( Abc_Ntk_t * pNtk, Vec_Int_t * vBufs )Abc_SclInsertBarBufs307,9502

src/map/scl/sclUpsize.c,2461
void Abc_SclFindTFO_rec( Abc_Obj_t * pObj, Vec_Int_t * vNodes, Vec_Int_t * vCos )Abc_SclFindTFO_rec45,1293
Vec_Int_t * Abc_SclFindTFO( Abc_Ntk_t * p, Vec_Int_t * vPath )Abc_SclFindTFO63,1827
Vec_Int_t * Abc_SclFindCriticalCoWindow( SC_Man * p, int Window )Abc_SclFindCriticalCoWindow98,2814
void Abc_SclFindCriticalNodeWindow_rec( SC_Man * p, Abc_Obj_t * pObj, Vec_Int_t * vPath, float fSlack, int fDept )Abc_SclFindCriticalNodeWindow_rec123,3529
Vec_Int_t * Abc_SclFindCriticalNodeWindow( SC_Man * p, Vec_Int_t * vPathCos, int Window, int fDept )Abc_SclFindCriticalNodeWindow159,4923
void Abc_SclUnmarkCriticalNodeWindow( SC_Man * p, Vec_Int_t * vPath )Abc_SclUnmarkCriticalNodeWindow180,5723
int Abc_SclCountNearCriticalNodes( SC_Man * p )Abc_SclCountNearCriticalNodes187,5908
void Abc_SclFindNodesToUpdate( Abc_Obj_t * pPivot, Vec_Int_t ** pvNodes, Vec_Int_t ** pvEvals, Abc_Obj_t * pExtra )Abc_SclFindNodesToUpdate213,6644
int Abc_SclFindBestCell( SC_Man * p, Abc_Obj_t * pObj, Vec_Int_t * vRecalcs, Vec_Int_t * vEvals, int Notches, int DelayGap, float * pGainBest )Abc_SclFindBestCell275,8704
int Abc_SclFindBypasses( SC_Man * p, Vec_Int_t * vPathNodes, int Ratio, int Notches, int iIter, int DelayGap, int fVeryVerbose )Abc_SclFindBypasses336,10557
int Abc_SclObjCheckMarkedFanFans( Abc_Obj_t * pObj )Abc_SclObjCheckMarkedFanFans546,18366
void Abc_SclObjMarkFanFans( Abc_Obj_t * pObj, Vec_Ptr_t * vNodes )Abc_SclObjMarkFanFans560,18700
int Abc_SclFindUpsizes( SC_Man * p, Vec_Int_t * vPathNodes, int Ratio, int Notches, int iIter, int DelayGap, int fMoreConserf )Abc_SclFindUpsizes596,19529
void Abc_SclApplyUpdateToBest( Vec_Int_t * vGatesBest, Vec_Int_t * vGates, Vec_Int_t * vUpdate )Abc_SclApplyUpdateToBest709,24344
void Abc_SclUndoRecentChanges( Abc_Ntk_t * pNtk, Vec_Int_t * vTrans )Abc_SclUndoRecentChanges720,24808
void Abc_SclUpsizePrintDiffs( SC_Man * p, SC_Lib * pLib, Abc_Ntk_t * pNtk )Abc_SclUpsizePrintDiffs751,25928
void Abc_SclUpsizePrint( SC_Man * p, int Iter, int win, int nPathPos, int nPathNodes, int nUpsizes, int nTFOs, int fVerbose )Abc_SclUpsizePrint810,28422
void Abc_SclUpsizeRemoveDangling( SC_Man * p, Abc_Ntk_t * pNtk )Abc_SclUpsizeRemoveDangling842,29591
void Abc_SclUpsizePerformInt( SC_Lib * pLib, Abc_Ntk_t * pNtk, SC_SizePars * pPars )Abc_SclUpsizePerformInt868,30238
void Abc_SclUpsizePerform( SC_Lib * pLib, Abc_Ntk_t * pNtk, SC_SizePars * pPars )Abc_SclUpsizePerform1027,37009

src/map/scl/sclLib.h,16207
#define ABC__map__scl__sclLib_hABC__map__scl__sclLib_h22,584
#define ABC_SCL_CUR_VERSION ABC_SCL_CUR_VERSION43,1211
    sc_dir_NULL,sc_dir_NULL47,1259
    sc_dir_Input,sc_dir_Input48,1276
    sc_dir_Output,sc_dir_Output49,1294
    sc_dir_InOut,sc_dir_InOut50,1313
    sc_dir_Internal,sc_dir_Internal51,1331
} SC_Dir;SC_Dir52,1352
    sc_ts_NULL,sc_ts_NULL56,1437
    sc_ts_Pos,sc_ts_Pos57,1453
    sc_ts_Neg,sc_ts_Neg58,1468
    sc_ts_Non,sc_ts_Non59,1483
} SC_TSense;SC_TSense60,1498
typedef struct SC_Pair_         SC_Pair;SC_Pair62,1512
struct SC_Pair_ SC_Pair_63,1553
    float      rise;rise65,1572
    float      fall;fall66,1593
typedef struct SC_PairI_        SC_PairI;SC_PairI68,1617
struct SC_PairI_ SC_PairI_69,1659
    int        rise;rise71,1679
    int        fall;fall72,1700
typedef struct SC_SizePars_    SC_SizePars;SC_SizePars75,1725
struct SC_SizePars_SC_SizePars_76,1769
    int        nIters;nIters78,1791
    int        nIterNoChange;nIterNoChange79,1814
    int        Window;           // used for upsizingWindow80,1844
    int        Ratio;            // used for upsizingRatio81,1898
    int        Notches;Notches82,1952
    int        DelayUser;DelayUser83,1976
    int        DelayGap;DelayGap84,2002
    int        TimeOut;TimeOut85,2027
    int        BuffTreeEst;      // ratio for buffer tree estimationBuffTreeEst86,2051
    int        BypassFreq;       // frequency to try bypassingBypassFreq87,2120
    int        fUseDept;fUseDept88,2183
    int        fDumpStats;fDumpStats89,2208
    int        fUseWireLoads;fUseWireLoads90,2235
    int        fVerbose;fVerbose91,2265
    int        fVeryVerbose;fVeryVerbose92,2290
typedef struct SC_BusPars_     SC_BusPars;SC_BusPars95,2323
struct SC_BusPars_SC_BusPars_96,2366
    int        GainRatio;       // target gainGainRatio98,2387
    int        Slew;            // target slewSlew99,2434
    int        nDegree;         // max branching factornDegree100,2481
    int        fSizeOnly;       // perform only sizingfSizeOnly101,2537
    int        fAddBufs;        // add buffersfAddBufs102,2592
    int        fBufPis;         // use CI bufferingfBufPis103,2639
    int        fUseWireLoads;   // wire loadsfUseWireLoads104,2691
    int        fVerbose;        // verbosefVerbose105,2737
    int        fVeryVerbose;    // verbosefVeryVerbose106,2780
typedef struct SC_WireLoad_    SC_WireLoad;SC_WireLoad113,3047
typedef struct SC_WireLoadSel_ SC_WireLoadSel;SC_WireLoadSel114,3091
typedef struct SC_TableTempl_  SC_TableTempl;SC_TableTempl115,3138
typedef struct SC_Surface_     SC_Surface;SC_Surface116,3184
typedef struct SC_Timing_      SC_Timing;SC_Timing117,3227
typedef struct SC_Timings_     SC_Timings;SC_Timings118,3269
typedef struct SC_Pin_         SC_Pin;SC_Pin119,3312
typedef struct SC_Cell_        SC_Cell;SC_Cell120,3351
typedef struct SC_Lib_         SC_Lib;SC_Lib121,3391
struct SC_WireLoad_ SC_WireLoad_123,3431
    char *         pName;pName125,3454
    float          cap;            // }- multiply estimation in 'fanout_len[].snd' with this valuecap126,3480
    float          slope;          // used to extrapolate wireload for large fanout countslope127,3579
    Vec_Int_t      vFanout;        // Vec<Pair<uint,float> > -- pairs '(#fanouts, est-wire-len)'vFanout128,3669
    Vec_Flt_t      vLen;vLen129,3766
struct SC_WireLoadSel_SC_WireLoadSel_132,3795
    char *         pName;pName134,3820
    Vec_Flt_t      vAreaFrom;      // Vec<Trip<float,float,Str> > -- triplets '(from-area, upto-area, wire-load-model)'; range is [from, upto[vAreaFrom135,3846
    Vec_Flt_t      vAreaTo;vAreaTo136,3989
    Vec_Ptr_t      vWireLoadModel;vWireLoadModel137,4017
struct SC_TableTempl_ SC_TableTempl_140,4056
    char *         pName;pName142,4081
    Vec_Ptr_t      vVars;          // Vec<Str>         -- name of variable (numbered from 0, not 1 as in the Liberty file) vVars143,4107
    Vec_Ptr_t      vIndex;         // Vec<Vec<float> > -- this is the point of measurement in table for the given variable vIndex144,4231
struct SC_Surface_ SC_Surface_147,4359
    char *         pName;pName149,4381
    Vec_Flt_t      vIndex0;        // Vec<float>       -- correspondes to "index_1" in the liberty file (for timing: slew)vIndex0150,4407
    Vec_Flt_t      vIndex1;        // Vec<float>       -- correspondes to "index_2" in the liberty file (for timing: load)vIndex1151,4530
    Vec_Ptr_t      vData;          // Vec<Vec<float> > -- 'data[i0][i1]' gives value at '(index0[i0], index1[i1])' vData152,4653
    Vec_Int_t      vIndex0I;       // Vec<float>       -- correspondes to "index_1" in the liberty file (for timing: slew)vIndex0I153,4769
    Vec_Int_t      vIndex1I;       // Vec<float>       -- correspondes to "index_2" in the liberty file (for timing: load)vIndex1I154,4892
    Vec_Ptr_t      vDataI;         // Vec<Vec<float> > -- 'data[i0][i1]' gives value at '(index0[i0], index1[i1])' vDataI155,5015
    float          approx[3][6];approx156,5131
struct SC_Timing_ SC_Timing_159,5168
    char *         related_pin;    // -- related pinrelated_pin161,5189
    SC_TSense      tsense;         // -- timing sense (positive_unate, negative_unate, non_unate)tsense162,5242
    char *         when_text;      // -- logic condition on inputs triggering this delay model for the output (currently not used)when_text163,5340
    SC_Surface     pCellRise;      // -- Used to compute pin-to-pin delaypCellRise164,5471
    SC_Surface     pCellFall;pCellFall165,5545
    SC_Surface     pRiseTrans;     // -- Used to compute output slewpRiseTrans166,5575
    SC_Surface     pFallTrans;pFallTrans167,5644
struct SC_Timings_ SC_Timings_170,5679
    char *         pName;          // -- the 'related_pin' fieldpName172,5701
    Vec_Ptr_t      vTimings;       // structures of type SC_TimingvTimings173,5766
struct SC_Pin_ SC_Pin_176,5837
    char *         pName;pName178,5855
    SC_Dir         dir;dir179,5881
    float          cap;            // -- this value is used if 'rise_cap' and 'fall_cap' is missing (copied by 'postProcess()'). (not used)cap180,5905
    float          rise_cap;       // }- used for input pins ('cap' too).rise_cap181,6045
    float          fall_cap;       // }fall_cap182,6119
    int            rise_capI;      // }- used for input pins ('cap' too).rise_capI183,6159
    int            fall_capI;      // }fall_capI184,6233
    float          max_out_cap;    // } (not used)max_out_cap185,6273
    float          max_out_slew;   // }- used only for output pins (max values must not be exceeded or else mapping is illegal) (not used)max_out_slew186,6324
    char *         func_text;      // }func_text187,6463
    Vec_Wrd_t      vFunc;          // }vFunc188,6503
    Vec_Ptr_t      vRTimings;      // -- for output pinsvRTimings189,6543
struct SC_Cell_ SC_Cell_193,6665
    char *         pName;pName195,6684
    int            Id;Id196,6710
    int            fSkip;          // skip this cell during genlib computationfSkip197,6733
    int            seq;            // -- set to TRUE by parser if a sequential elementseq198,6812
    int            unsupp;         // -- set to TRUE by parser if cell contains information we cannot handleunsupp199,6899
    float          area;area200,7008
    float          leakage;leakage201,7033
    int            areaI;areaI202,7061
    int            leakageI;leakageI203,7087
    int            drive_strength; // -- some library files provide this field (currently unused, but may be a good hint for sizing) (not used)drive_strength204,7116
    Vec_Ptr_t      vPins;          // NamedSet<SC_Pin> vPins205,7260
    int            n_inputs;       // -- 'pins[0 .. n_inputs-1]' are input pinsn_inputs206,7316
    int            n_outputs;      // -- 'pins[n_inputs .. n_inputs+n_outputs-1]' are output pinsn_outputs207,7396
    SC_Cell *      pNext;          // same-functionality cells linked into a ring by areapNext208,7494
    SC_Cell *      pPrev;          // same-functionality cells linked into a ring by areapPrev209,7584
    SC_Cell *      pRepr;          // representative of the classpRepr210,7674
    SC_Cell *      pAve;           // average size cell of this classpAve211,7740
    int            Order;          // order of the gate in the listOrder212,7810
    int            nGates;         // the number of gates in the list      nGates213,7878
struct SC_Lib_ SC_Lib_216,7958
    char *         pName;pName218,7976
    char *         pFileName;pFileName219,8002
    char *         default_wire_load;default_wire_load220,8032
    char *         default_wire_load_sel;default_wire_load_sel221,8070
    float          default_max_out_slew;   // -- 'default_max_transition'; this is copied to each output pin where 'max_transition' is not defined  (not used)default_max_out_slew222,8112
    int            unit_time;      // -- Valid 9..12. Unit is '10^(-val)' seconds (e.g. 9=1ns, 10=100ps, 11=10ps, 12=1ps)unit_time223,8271
    float          unit_cap_fst;   // -- First part is a multiplier, second either 12 or 15 for 'pf' or 'ff'.unit_cap_fst224,8393
    int            unit_cap_snd;unit_cap_snd225,8503
    Vec_Ptr_t      vWireLoads;     // NamedSet<SC_WireLoad>vWireLoads226,8536
    Vec_Ptr_t      vWireLoadSels;  // NamedSet<SC_WireLoadSel>vWireLoadSels227,8596
    Vec_Ptr_t      vTempls;        // NamedSet<SC_TableTempl>  vTempls228,8659
    Vec_Ptr_t      vCells;         // NamedSet<SC_Cell>vCells229,8723
    Vec_Ptr_t      vCellClasses;   // NamedSet<SC_Cell>vCellClasses230,8779
    int *          pBins;          // hashing gateName -> gateIdpBins231,8835
    int            nBins;nBins232,8900
static inline void        SC_PairClean( SC_Pair * d )               { d->rise = d->fall = 0;                 }SC_PairClean243,9370
static inline float       SC_PairMax( SC_Pair * d )                 { return Abc_MaxFloat(d->rise, d->fall); }SC_PairMax244,9481
static inline float       SC_PairMin( SC_Pair * d )                 { return Abc_MinFloat(d->rise, d->fall); }SC_PairMin245,9592
static inline float       SC_PairAve( SC_Pair * d )                 { return 0.5 * d->rise + 0.5 * d->fall;  }SC_PairAve246,9703
static inline void        SC_PairDup( SC_Pair * d, SC_Pair * s )    { *d = *s;                               }SC_PairDup247,9814
static inline void        SC_PairMove( SC_Pair * d, SC_Pair * s )   { *d = *s; s->rise = s->fall = 0;        }SC_PairMove248,9925
static inline void        SC_PairAdd( SC_Pair * d, SC_Pair * s )    { d->rise += s->rise; d->fall += s->fall;}SC_PairAdd249,10036
static inline int         SC_PairEqual( SC_Pair * d, SC_Pair * s )  { return d->rise == s->rise && d->fall == s->fall;                }SC_PairEqual250,10147
static inline int         SC_PairEqualE( SC_Pair * d, SC_Pair * s, float E )  { return d->rise - s->rise < E && s->rise - d->rise < E &&  d->fall - s->fall < E && s->fall - d->fall < E;    }SC_PairEqualE251,10283
static inline int         SC_LibCellNum( SC_Lib * p )               { return Vec_PtrSize(&p->vCells);                                  }SC_LibCellNum253,10475
static inline SC_Cell *   SC_LibCell( SC_Lib * p, int i )           { return (SC_Cell *)Vec_PtrEntry(&p->vCells, i);                   }SC_LibCell254,10612
static inline SC_Pin  *   SC_CellPin( SC_Cell * p, int i )          { return (SC_Pin *)Vec_PtrEntry(&p->vPins, i);                     }SC_CellPin255,10749
static inline Vec_Wrd_t * SC_CellFunc( SC_Cell * p )                { return &SC_CellPin(p, p->n_inputs)->vFunc;                       }SC_CellFunc256,10886
static inline float       SC_CellPinCap( SC_Cell * p, int i )       { return 0.5 * SC_CellPin(p, i)->rise_cap + 0.5 * SC_CellPin(p, i)->fall_cap; }SC_CellPinCap257,11023
static inline float       SC_CellPinCapAve( SC_Cell * p )           { int i; float c = 0; for (i = 0; i < p->n_inputs; i++) c += SC_CellPinCap(p, i); return c / Abc_MaxInt(1, p->n_inputs); }SC_CellPinCapAve258,11171
static inline char *      SC_CellPinOutFunc( SC_Cell * p, int i )   { return SC_CellPin(p, p->n_inputs + i)->func_text;               }SC_CellPinOutFunc259,11362
static inline char *      SC_CellPinName( SC_Cell * p, int i )      { return SC_CellPin(p, i)->pName;                                 }SC_CellPinName260,11498
#define SC_LibForEachCell(SC_LibForEachCell262,11635
#define SC_LibForEachCellClass(SC_LibForEachCellClass263,11739
#define SC_LibForEachWireLoad(SC_LibForEachWireLoad264,11849
#define SC_LibForEachWireLoadSel(SC_LibForEachWireLoadSel265,11959
#define SC_LibForEachTempl(SC_LibForEachTempl266,12076
#define SC_CellForEachPin(SC_CellForEachPin267,12188
#define SC_CellForEachPinIn(SC_CellForEachPinIn268,12289
#define SC_CellForEachPinOut(SC_CellForEachPinOut269,12407
#define SC_RingForEachCell(SC_RingForEachCell270,12526
#define SC_RingForEachCellRev(SC_RingForEachCellRev271,12657
#define SC_PinForEachRTiming(SC_PinForEachRTiming272,12788
static inline SC_WireLoad * Abc_SclWireLoadAlloc()Abc_SclWireLoadAlloc290,13399
static inline SC_WireLoadSel * Abc_SclWireLoadSelAlloc()Abc_SclWireLoadSelAlloc296,13527
static inline SC_TableTempl * Abc_SclTableTemplAlloc()Abc_SclTableTemplAlloc302,13667
static inline SC_Surface * Abc_SclSurfaceAlloc()Abc_SclSurfaceAlloc308,13803
static inline SC_Timing * Abc_SclTimingAlloc()Abc_SclTimingAlloc314,13927
static inline SC_Timings * Abc_SclTimingsAlloc()Abc_SclTimingsAlloc320,14047
static inline SC_Pin * Abc_SclPinAlloc()Abc_SclPinAlloc326,14171
static inline SC_Cell * Abc_SclCellAlloc()Abc_SclCellAlloc333,14305
static inline SC_Lib * Abc_SclLibAlloc()Abc_SclLibAlloc339,14417
static inline void Abc_SclWireLoadFree( SC_WireLoad * p )Abc_SclWireLoadFree362,14920
static inline void Abc_SclWireLoadSelFree( SC_WireLoadSel * p )Abc_SclWireLoadSelFree369,15090
static inline void Abc_SclTableTemplFree( SC_TableTempl * p )Abc_SclTableTemplFree378,15354
static inline void Abc_SclSurfaceFree( SC_Surface * p )Abc_SclSurfaceFree386,15575
static inline void Abc_SclTimingFree( SC_Timing * p )Abc_SclTimingFree397,15905
static inline void Abc_SclTimingsFree( SC_Timings * p )Abc_SclTimingsFree407,16210
static inline void Abc_SclPinFree( SC_Pin * p )Abc_SclPinFree417,16482
static inline void Abc_SclCellFree( SC_Cell * p )Abc_SclCellFree429,16787
static inline void Abc_SclLibFree( SC_Lib * p )Abc_SclLibFree439,17018
static inline float Scl_LibLookup( SC_Surface * p, float slew, float load )Scl_LibLookup479,18115
static inline void Scl_LibPinArrival( SC_Timing * pTime, SC_Pair * pArrIn, SC_Pair * pSlewIn, SC_Pair * pLoad, SC_Pair * pArrOut, SC_Pair * pSlewOut )Scl_LibPinArrival519,19517
static inline void Scl_LibPinDeparture( SC_Timing * pTime, SC_Pair * pDepIn, SC_Pair * pSlewIn, SC_Pair * pLoad, SC_Pair * pDepOut )Scl_LibPinDeparture536,20908
static inline int Scl_LibLookupI( SC_Surface * p, int slew, int load )Scl_LibLookupI561,22003
static inline void Scl_LibPinArrivalI( SC_Timing * pTime, SC_PairI * pArrIn, SC_PairI * pSlewIn, SC_PairI * pLoad, SC_PairI * pArrOut, SC_PairI * pSlewOut, int * pArray )Scl_LibPinArrivalI610,23809
static inline void Scl_LibPinRequiredI( SC_Timing * pTime, SC_PairI * pReqIn, SC_PairI * pReqOut, int * pArray )Scl_LibPinRequiredI627,25320
static inline SC_Timing * Scl_CellPinTime( SC_Cell * pCell, int iPin )Scl_CellPinTime652,26172
static inline float Scl_LibPinArrivalEstimate( SC_Cell * pCell, int iPin, float Slew, float Load )Scl_LibPinArrivalEstimate665,26703
static inline void Scl_LibHandleInputDriver( SC_Cell * pCell, SC_Pair * pLoadIn, SC_Pair * pArrOut, SC_Pair * pSlewOut )Scl_LibHandleInputDriver678,27321
static inline int Scl_LibPinArrivalEstimateI( SC_Cell * pCell, int iPin, int Slew, int Load )Scl_LibPinArrivalEstimateI705,28450
static inline void Scl_LibHandleInputDriver2( SC_Cell * pCell, SC_PairI * pLoadIn, SC_PairI * pArrOut, SC_PairI * pSlewOut )Scl_LibHandleInputDriver2719,29073

src/map/scl/sclLibUtil.c,4305
static unsigned Abc_SclHashString( char * pName, int TableSize ) Abc_SclHashString48,1367
int * Abc_SclHashLookup( SC_Lib * p, char * pName )Abc_SclHashLookup56,1674
void Abc_SclHashCells( SC_Lib * p )Abc_SclHashCells65,1983
int Abc_SclCellFind( SC_Lib * p, char * pName )Abc_SclCellFind79,2350
int Abc_SclClassCellNum( SC_Cell * pClass )Abc_SclClassCellNum84,2485
int Abc_SclLibClassNum( SC_Lib * pLib )Abc_SclLibClassNum93,2687
static inline int Abc_SclIsChar( char c )Abc_SclIsChar113,3121
static inline int Abc_SclIsName( char c )Abc_SclIsName117,3240
static inline char * Abc_SclFindLimit( char * pName )Abc_SclFindLimit121,3341
static inline int Abc_SclAreEqual( char * pBase, char * pName, char * pLimit )Abc_SclAreEqual128,3507
void Abc_SclShortFormula( SC_Cell * pCell, char * pForm, char * pBuffer )Abc_SclShortFormula132,3643
static inline void Abc_SclTimingUpdate( SC_Cell * pCell, SC_Timing * p, char * Buffer )Abc_SclTimingUpdate155,4264
static inline void Abc_SclTimingsUpdate( SC_Cell * pCell, SC_Timings * p, char * Buffer )Abc_SclTimingsUpdate166,4653
static inline void Abc_SclPinUpdate( SC_Cell * pCell, SC_Pin * p, char * Buffer )Abc_SclPinUpdate172,4893
void Abc_SclShortNames( SC_Lib * p )Abc_SclShortNames193,5628
static int Abc_SclCompareCells( SC_Cell ** pp1, SC_Cell ** pp2 )Abc_SclCompareCells246,7436
void Abc_SclLinkCells( SC_Lib * p )Abc_SclLinkCells262,7965
SC_Cell * Abc_SclFindInvertor( SC_Lib * p, int fFindBuff )Abc_SclFindInvertor330,10519
SC_Cell * Abc_SclFindSmallestGate( SC_Cell * p, float CinMin )Abc_SclFindSmallestGate341,10935
SC_WireLoad * Abc_SclFetchWireLoadModel( SC_Lib * p, char * pWLoadUsed )Abc_SclFetchWireLoadModel363,11494
SC_WireLoad * Abc_SclFindWireLoadModel( SC_Lib * p, float Area )Abc_SclFindWireLoadModel380,12047
int Abc_SclHasDelayInfo( void * pScl )Abc_SclHasDelayInfo425,13566
float Abc_SclComputeAverageSlew( SC_Lib * p )Abc_SclComputeAverageSlew450,14124
int Abc_SclComputeParametersPin( SC_Lib * p, SC_Cell * pCell, int iPin, float Slew, float * pLD, float * pPD )Abc_SclComputeParametersPin476,14792
int Abc_SclComputeParametersCell( SC_Lib * p, SC_Cell * pCell, float Slew, float * pLD, float * pPD )Abc_SclComputeParametersCell513,16345
void Abc_SclComputeParametersClass( SC_Lib * p, SC_Cell * pRepr, float Slew, float * pLD, float * pPD )Abc_SclComputeParametersClass529,16823
void Abc_SclComputeParametersClassPin( SC_Lib * p, SC_Cell * pRepr, int iPin, float Slew, float * pLD, float * pPD )Abc_SclComputeParametersClassPin544,17268
float Abc_SclComputeDelayCellPin( SC_Lib * p, SC_Cell * pCell, int iPin, float Slew, float Gain )Abc_SclComputeDelayCellPin559,17731
float Abc_SclComputeDelayClassPin( SC_Lib * p, SC_Cell * pRepr, int iPin, float Slew, float Gain )Abc_SclComputeDelayClassPin565,17960
float Abc_SclComputeAreaClass( SC_Cell * pRepr )Abc_SclComputeAreaClass581,18444
void Abc_SclMarkSkippedCells( SC_Lib * p )Abc_SclMarkSkippedCells607,18997
void Abc_SclPrintCells( SC_Lib * p, float SlewInit, float Gain, int fInvOnly, int fShort )Abc_SclPrintCells636,19858
void Abc_SclConvertLeakageIntoArea( SC_Lib * p, float A, float B )Abc_SclConvertLeakageIntoArea717,23050
void Abc_SclLibNormalizeSurface( SC_Surface * p, float Time, float Load )Abc_SclLibNormalizeSurface736,23493
void Abc_SclLibNormalize( SC_Lib * p )Abc_SclLibNormalize748,24035
Vec_Str_t * Abc_SclProduceGenlibStrSimple( SC_Lib * p )Abc_SclProduceGenlibStrSimple796,25524
Mio_Library_t * Abc_SclDeriveGenlibSimple( void * pScl )Abc_SclDeriveGenlibSimple843,27316
Vec_Str_t * Abc_SclProduceGenlibStr( SC_Lib * p, float Slew, float Gain, int nGatesMin, int * pnCellCount )Abc_SclProduceGenlibStr868,28031
Vec_Str_t * Abc_SclProduceGenlibStrProfile( SC_Lib * p, Mio_Library_t * pLib, float Slew, float Gain, int nGatesMin, int * pnCellCount )Abc_SclProduceGenlibStrProfile928,30497
void Abc_SclDumpGenlib( char * pFileName, SC_Lib * p, float SlewInit, float Gain, int nGatesMin )Abc_SclDumpGenlib996,33295
Mio_Library_t * Abc_SclDeriveGenlib( void * pScl, void * pMio, float SlewInit, float Gain, int nGatesMin, int fVerbose )Abc_SclDeriveGenlib1019,34174
void Abc_SclInstallGenlib( void * pScl, float SlewInit, float Gain, int nGatesMin )Abc_SclInstallGenlib1050,35300

src/map/scl/scl.c,3022
static inline Scl_Con_t * Scl_ConGetMan( Abc_Frame_t * pAbc )                    { return (Scl_Con_t *)pAbc->pAbcCon;                       }Scl_ConGetMan59,2691
static inline void        Scl_ConFreeMan( Abc_Frame_t * pAbc )                   { if ( pAbc->pAbcCon ) Scl_ConFree(Scl_ConGetMan(pAbc));   }Scl_ConFreeMan60,2833
static inline void        Scl_ConUpdateMan( Abc_Frame_t * pAbc, Scl_Con_t * p )  { Scl_ConFreeMan(pAbc); pAbc->pAbcCon = p;                 }Scl_ConUpdateMan61,2975
              Scl_Con_t * Scl_ConReadMan()                                       { return Scl_ConGetMan( Abc_FrameGetGlobalFrame() );       }Scl_ConReadMan62,3117
void Abc_SclLoad( SC_Lib * pLib, SC_Lib ** ppScl )Abc_SclLoad79,3749
void Scl_Init( Abc_Frame_t * pAbc )Scl_Init102,4206
void Scl_End( Abc_Frame_t * pAbc )Scl_End127,6206
int Scl_CommandReadLib( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandReadLib146,6570
int Scl_CommandWriteLib( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandWriteLib279,11250
int Scl_CommandPrintLib( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandPrintLib335,12699
int Scl_CommandLeak2Area( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandLeak2Area413,15221
int Scl_CommandReadScl( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandReadScl485,17514
int Scl_CommandWriteScl( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandWriteScl556,19524
int Scl_CommandDumpGen( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandDumpGen612,20971
int Scl_CommandPrintGS( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandPrintGS699,24005
int Scl_CommandStime( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandStime752,25340
int Scl_CommandTopo( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandTopo843,28383
int Scl_CommandUnBuffer( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandUnBuffer904,29958
int Scl_CommandBuffer( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandBuffer968,31750
int Scl_CommandBufferOld( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandBufferOld1104,36670
int Scl_CommandMinsize( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandMinsize1246,41472
int Scl_CommandMaxsize( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandMaxsize1308,43186
int Scl_CommandUpsize( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandUpsize1370,44898
int Scl_CommandDnsize( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandDnsize1583,53232
int Scl_CommandPrintBuf( Abc_Frame_t * pAbc, int argc, char **argv )Scl_CommandPrintBuf1757,59908
int Scl_CommandReadConstr( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandReadConstr1819,61646
int Scl_CommandWriteConstr( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandWriteConstr1897,64002
int Scl_CommandPrintConstr( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandPrintConstr1960,65882
int Scl_CommandResetConstr( Abc_Frame_t * pAbc, int argc, char ** argv )Scl_CommandResetConstr2004,67194

src/map/scl/sclLoad.c,579
Vec_Flt_t * Abc_SclFindWireCaps( SC_WireLoad * pWL, int nFanoutMax )Abc_SclFindWireCaps45,1322
float Abc_SclFindWireLoad( Vec_Flt_t * vWireCaps, int nFans )Abc_SclFindWireLoad96,3034
void Abc_SclAddWireLoad( SC_Man * p, Abc_Obj_t * pObj, int fSubtr )Abc_SclAddWireLoad102,3230
void Abc_SclComputeLoad( SC_Man * p )Abc_SclComputeLoad108,3500
void Abc_SclUpdateLoad( SC_Man * p, Abc_Obj_t * pObj, SC_Cell * pOld, SC_Cell * pNew )Abc_SclUpdateLoad201,6449
void Abc_SclUpdateLoadSplit( SC_Man * p, Abc_Obj_t * pBuffer, Abc_Obj_t * pFanout )Abc_SclUpdateLoadSplit214,6909

src/map/scl/sclTime.h,5773
#define ABC__map__scl__sclTime_hABC__map__scl__sclTime_h22,572
typedef struct SC_Time_           SC_Time;SC_Time42,1342
struct SC_Time_ SC_Time_43,1385
    SC_Lib *       pLib;          // librarypLib45,1404
    Vec_Int_t *    vCis;          // comb inputsvCis46,1449
    Vec_Int_t *    vCos;          // comb outputs vCos47,1498
    int            nObjs;         // allocated sizenObjs48,1549
    Vec_Int_t *    vGates;        // mapping of objId into gateIdvGates50,1623
    SC_Pair *      pLoads;        // loads for each gatepLoads52,1715
    SC_Pair *      pLoads2;       // loads for each gatepLoads253,1772
    SC_Pair *      pDepts;        // departures for each gatepDepts54,1829
    SC_Pair *      pTimes;        // arrivals for each gatepTimes55,1891
    SC_Pair *      pSlews;        // slews for each gatepSlews56,1951
    SC_Pair *      pTimes2;       // arrivals for each gatepTimes257,2008
    SC_Pair *      pSlews2;       // slews for each gatepSlews258,2068
    float *        pSlack;        // slacks for each gatepSlack59,2125
    SC_WireLoad *  pWLoadUsed;    // name of the used WireLoad modelpWLoadUsed60,2183
    float          SumArea;       // total areaSumArea62,2283
    float          MaxDelay;      // max delayMaxDelay63,2331
    float          SumArea0;      // total area at the begining SumArea064,2378
    float          MaxDelay0;     // max delay at the beginingMaxDelay065,2443
    float          BestDelay;     // best delay in the middleBestDelay66,2506
static inline SC_Cell * Scl_ObjCell( SC_Time * p, int i )                     { return SC_LibCell( p->pLib, Vec_IntEntry(p->vGates, i) );   }Scl_ObjCell77,3012
static inline void      Scl_ObjSetCell( SC_Time * p, int i, SC_Cell * pCell ) { Vec_IntWriteEntry( p->vGates, i, pCell->Id );               }Scl_ObjSetCell78,3154
static inline SC_Pair * Scl_ObjLoad( SC_Time * p, int i )                     { return p->pLoads + i;  }Scl_ObjLoad80,3297
static inline SC_Pair * Scl_ObjLoad2( SC_Time * p, int i )                    { return p->pLoads2 + i; }Scl_ObjLoad281,3402
static inline SC_Pair * Scl_ObjDept( SC_Time * p, int i )                     { return p->pDepts + i;  }Scl_ObjDept82,3507
static inline SC_Pair * Scl_ObjTime( SC_Time * p, int i )                     { return p->pTimes + i;  }Scl_ObjTime83,3612
static inline SC_Pair * Scl_ObjSlew( SC_Time * p, int i )                     { return p->pSlews + i;  }Scl_ObjSlew84,3717
static inline SC_Pair * Scl_ObjTime2( SC_Time * p, int i )                    { return p->pTimes2 + i; }Scl_ObjTime285,3822
static inline SC_Pair * Scl_ObjSlew2( SC_Time * p, int i )                    { return p->pSlews2 + i; }Scl_ObjSlew286,3927
static inline float     Scl_ObjTimeMax( SC_Time * p, int i )                  { return Abc_MaxFloat(Scl_ObjTime(p, i)->rise, Scl_ObjTime(p, i)->fall);  }Scl_ObjTimeMax88,4033
static inline float     Scl_ObjDepthMax( SC_Time * p, int i )                 { return Abc_MaxFloat(Scl_ObjDept(p, i)->rise, Scl_ObjDept(p, i)->fall);  }Scl_ObjDepthMax89,4187
static inline float     Scl_ObjGetSlack( SC_Time * p, int i, float D )        { return D - Abc_MaxFloat(Scl_ObjTime(p, i)->rise + Scl_ObjDept(p, i)->rise, Scl_ObjTime(p, i)->fall + Scl_ObjDept(p, i)->fall);  }Scl_ObjGetSlack90,4341
static inline float     Scl_ObjGetSlackR( SC_Time * p, int i, float D )       { return D - (Scl_ObjTime(p, i)->rise + Scl_ObjDept(p, i)->rise);  }Scl_ObjGetSlackR91,4551
static inline float     Scl_ObjGetSlackF( SC_Time * p, int i, float D )       { return D - (Scl_ObjTime(p, i)->fall + Scl_ObjDept(p, i)->fall);  }Scl_ObjGetSlackF92,4698
static inline float     Scl_ObjSlack( SC_Time * p, int i )                    { return p->pSlack[i];   }Scl_ObjSlack93,4845
static inline void      Scl_ObjDupFanin( SC_Time * p, int i, int iFanin )     { *Scl_ObjTime(p, i) = *Scl_ObjTime(p, iFanin);                    }Scl_ObjDupFanin95,4951
static inline float     Scl_ObjGain( SC_Time * p, int i )                     { return 0.5*((Scl_ObjTime2(p, i)->rise - Scl_ObjTime(p, i)->rise) + (Scl_ObjTime2(p, i)->fall - Scl_ObjTime(p, i)->fall)); }Scl_ObjGain96,5098
static inline int       Scl_ObjLegal( SC_Time * p, int i, float D )           { return Scl_ObjTime(p, i)->rise <= Scl_ObjTime2(p, i)->rise + Scl_ObjGetSlackR(p, i, D) && Scl_ObjTime(p, i)->fall <= Scl_ObjTime2(p, i)->fall + Scl_ObjGetSlackF(p, i, D); }Scl_ObjLegal97,5302
static inline double    Scl_ObjLoadFf( SC_Time * p, int i, int fRise )        { return fRise ? Scl_ObjLoad(p, i)->rise : Scl_ObjLoad(p, i)->fall; }Scl_ObjLoadFf99,5556
static inline double    Scl_ObjTimePs( SC_Time * p, int i, int fRise )        { return fRise ? Scl_ObjTime(p, i)->rise : Scl_ObjTime(p, i)->fall; }Scl_ObjTimePs100,5704
static inline double    Scl_ObjSlewPs( SC_Time * p, int i, int fRise )        { return fRise ? Scl_ObjSlew(p, i)->rise : Scl_ObjSlew(p, i)->fall; }Scl_ObjSlewPs101,5852
static inline SC_Time * Scl_ManAlloc( SC_Lib * pLib, Vec_Int_t * vCis, Vec_Int_t * vCos, int nObjs )Scl_ManAlloc118,6493
static inline void Scl_ManFree( SC_Time * p )Scl_ManFree136,7178
static inline void Scl_ManCleanTime( SC_Time * p )Scl_ManCleanTime149,7498
static inline void Scl_ConeStore( SC_Time * p, Vec_Int_t * vCone )Scl_ConeStore168,8012
static inline void Scl_ConeRestore( SC_Time * p, Vec_Int_t * vCone )Scl_ConeRestore177,8266
static inline void Scl_ConeClear( SC_Time * p, Vec_Int_t * vCone )Scl_ConeClear186,8522
static inline void Scl_PinTimeArrival( SC_Time * p, SC_Timing * pTime, int iObj, int iFanin )Scl_PinTimeArrival208,9053
static inline void Scl_PinTimeDeparture( SC_Time * p, SC_Timing * pTime, int iObj, int iFanin )Scl_PinTimeDeparture217,9503

src/map/scl/sclLiberty.c,10073
    SCL_LIBERTY_NONE = 0,        // 0:  unknownSCL_LIBERTY_NONE36,918
    SCL_LIBERTY_PROC,            // 1:  procedure :  key(head){body}SCL_LIBERTY_PROC37,966
    SCL_LIBERTY_EQUA,            // 2:  equation  :  key:head;SCL_LIBERTY_EQUA38,1035
    SCL_LIBERTY_LIST             // 3:  list      :  key(head) SCL_LIBERTY_LIST39,1098
} Scl_LibertyType_t;Scl_LibertyType_t40,1162
typedef struct Scl_Pair_t_ Scl_Pair_t;Scl_Pair_t42,1184
struct Scl_Pair_t_Scl_Pair_t_43,1223
    int             Beg;          // item beginningBeg45,1244
    int             End;          // item endEnd46,1296
typedef struct Scl_Item_t_ Scl_Item_t;Scl_Item_t49,1346
struct Scl_Item_t_Scl_Item_t_50,1385
    int             Type;         // Scl_LibertyType_tType52,1406
    int             iLine;        // file line where the item's spec beginsiLine53,1461
    Scl_Pair_t      Key;          // key partKey54,1537
    Scl_Pair_t      Head;         // head part Head55,1583
    Scl_Pair_t      Body;         // body partBody56,1631
    int             Next;         // next item in the list Next57,1678
    int             Child;        // first child item Child58,1738
typedef struct Scl_Tree_t_ Scl_Tree_t;Scl_Tree_t61,1797
struct Scl_Tree_t_Scl_Tree_t_62,1836
    char *          pFileName;    // input Liberty file namepFileName64,1857
    char *          pContents;    // file contentspContents65,1918
    int             nContents;    // file sizenContents66,1969
    int             nLines;       // line counternLines67,2016
    int             nItems;       // number of itemsnItems68,2066
    int             nItermAlloc;  // number of items allocatednItermAlloc69,2119
    Scl_Item_t *    pItems;       // the itemspItems70,2182
    char *          pError;       // the error stringpError71,2229
    abctime         clkStart;     // beginning timeclkStart72,2283
    Vec_Str_t *     vBuffer;      // temp string buffervBuffer73,2335
static inline Scl_Item_t *  Scl_LibertyRoot( Scl_Tree_t * p )                                      { return p->pItems;                                                 }Scl_LibertyRoot76,2395
static inline Scl_Item_t *  Scl_LibertyItem( Scl_Tree_t * p, int v )                               { assert( v < p->nItems ); return v < 0 ? NULL : p->pItems + v;     }Scl_LibertyItem77,2564
static inline int           Scl_LibertyCompare( Scl_Tree_t * p, Scl_Pair_t Pair, char * pStr )     { return strncmp( p->pContents+Pair.Beg, pStr, Pair.End-Pair.Beg ) || ((int)strlen(pStr) != Pair.End-Pair.Beg); }Scl_LibertyCompare78,2733
static inline void          Scl_PrintWord( FILE * pFile, Scl_Tree_t * p, Scl_Pair_t Pair )         { char * pBeg = p->pContents+Pair.Beg, * pEnd = p->pContents+Pair.End; while ( pBeg < pEnd ) fputc( *pBeg++, pFile ); }Scl_PrintWord79,2946
static inline void          Scl_PrintSpace( FILE * pFile, int nOffset )                            { int i; for ( i = 0; i < nOffset; i++ ) fputc(' ', pFile);         }Scl_PrintSpace80,3165
static inline int           Scl_LibertyItemId( Scl_Tree_t * p, Scl_Item_t * pItem )                { return pItem - p->pItems;                                         }Scl_LibertyItemId81,3334
#define Scl_ItemForEachChild(Scl_ItemForEachChild83,3504
#define Scl_ItemForEachChildName(Scl_ItemForEachChildName85,3660
void Scl_LibertyParseDumpItem( FILE * pFile, Scl_Tree_t * p, Scl_Item_t * pItem, int nOffset )Scl_LibertyParseDumpItem103,4360
int Scl_LibertyParseDump( Scl_Tree_t * p, char * pFileName )Scl_LibertyParseDump137,5615
int Scl_LibertyCountItems( char * pBeg, char * pEnd )Scl_LibertyCountItems169,6359
void Scl_LibertyWipeOutComments( char * pBeg, char * pEnd )Scl_LibertyWipeOutComments192,6995
static inline int Scl_LibertyCharIsSpace( char c )Scl_LibertyCharIsSpace216,7810
static inline int Scl_LibertySkipSpaces( Scl_Tree_t * p, char ** ppPos, char * pEnd, int fStopAtNewLine )Scl_LibertySkipSpaces220,7938
static inline int Scl_LibertySkipEntry( char ** ppPos, char * pEnd )Scl_LibertySkipEntry238,8439
static inline char * Scl_LibertyFindMatch( char * pPos, char * pEnd )Scl_LibertyFindMatch263,9124
static inline Scl_Pair_t Scl_LibertyUpdateHead( Scl_Tree_t * p, Scl_Pair_t Head )Scl_LibertyUpdateHead295,9875
static inline Scl_Item_t * Scl_LibertyNewItem( Scl_Tree_t * p, int Type )Scl_LibertyNewItem321,10697
char * Scl_LibertyReadString( Scl_Tree_t * p, Scl_Pair_t Pair )   Scl_LibertyReadString342,11212
int Scl_LibertyItemNum( Scl_Tree_t * p, Scl_Item_t * pRoot, char * pName )Scl_LibertyItemNum359,11829
int Scl_LibertyBuildItem( Scl_Tree_t * p, char ** ppPos, char * pEnd )Scl_LibertyBuildItem379,12300
void Scl_LibertyFixFileName( char * pFileName )Scl_LibertyFixFileName502,16433
int Scl_LibertyFileSize( char * pFileName )Scl_LibertyFileSize509,16606
char * Scl_LibertyFileContents( char * pFileName, int nContents )Scl_LibertyFileContents524,16989
void Scl_LibertyStringDump( char * pFileName, Vec_Str_t * vStr )Scl_LibertyStringDump534,17310
Scl_Tree_t * Scl_LibertyStart( char * pFileName )Scl_LibertyStart558,17936
void Scl_LibertyStop( Scl_Tree_t * p, int fVerbose )Scl_LibertyStop582,18735
Scl_Tree_t * Scl_LibertyParse( char * pFileName, int fVerbose )Scl_LibertyParse596,19151
int Scl_LibertyReadCellIsFlop( Scl_Tree_t * p, Scl_Item_t * pCell )Scl_LibertyReadCellIsFlop629,20101
int Scl_LibertyReadCellIsDontUse( Scl_Tree_t * p, Scl_Item_t * pCell )Scl_LibertyReadCellIsDontUse638,20393
char * Scl_LibertyReadCellArea( Scl_Tree_t * p, Scl_Item_t * pCell )Scl_LibertyReadCellArea646,20634
char * Scl_LibertyReadCellLeakage( Scl_Tree_t * p, Scl_Item_t * pCell )Scl_LibertyReadCellLeakage653,20855
char * Scl_LibertyReadPinFormula( Scl_Tree_t * p, Scl_Item_t * pPin )Scl_LibertyReadPinFormula670,21501
int Scl_LibertyReadCellIsThreeState( Scl_Tree_t * p, Scl_Item_t * pCell )Scl_LibertyReadCellIsThreeState677,21729
int Scl_LibertyReadCellOutputNum( Scl_Tree_t * p, Scl_Item_t * pCell )Scl_LibertyReadCellOutputNum685,21995
Vec_Str_t * Scl_LibertyReadGenlibStr( Scl_Tree_t * p, int fVerbose )Scl_LibertyReadGenlibStr706,22590
Vec_Str_t * Scl_LibertyParseGenlibStr( char * pFileName, int fVerbose )Scl_LibertyParseGenlibStr771,25572
static inline void Vec_StrPutI_( Vec_Str_t * vOut, int Val )     {  printf( "%d ",  Val );        Vec_StrPutI( vOut, Val );  }Vec_StrPutI_799,26278
static inline void Vec_StrPutW_( Vec_Str_t * vOut, word Val )    {  printf( "%lu ", (long)Val );  Vec_StrPutW( vOut, Val );  }Vec_StrPutW_800,26405
static inline void Vec_StrPutF_( Vec_Str_t * vOut, float Val )   {  printf( "%f ",  Val );        Vec_StrPutF( vOut, Val );  }Vec_StrPutF_801,26532
static inline void Vec_StrPutS_( Vec_Str_t * vOut, char * Val )  {  printf( "%s ",  Val );        Vec_StrPutS( vOut, Val );  }Vec_StrPutS_802,26659
static inline void Vec_StrPut_( Vec_Str_t * vOut )               {  printf( "\n" ); }Vec_StrPut_803,26786
static inline void Vec_StrPutI_( Vec_Str_t * vOut, int Val )     { Vec_StrPutI( vOut, Val );  }Vec_StrPutI_805,26878
static inline void Vec_StrPutW_( Vec_Str_t * vOut, word Val )    { Vec_StrPutW( vOut, Val );  }Vec_StrPutW_806,26974
static inline void Vec_StrPutF_( Vec_Str_t * vOut, float Val )   { Vec_StrPutF( vOut, Val );  }Vec_StrPutF_807,27070
static inline void Vec_StrPutS_( Vec_Str_t * vOut, char * Val )  { Vec_StrPutS( vOut, Val );  }Vec_StrPutS_808,27166
static inline void Vec_StrPut_( Vec_Str_t * vOut )               { }Vec_StrPut_809,27262
char * Scl_LibertyReadDefaultWireLoad( Scl_Tree_t * p )Scl_LibertyReadDefaultWireLoad823,27623
char * Scl_LibertyReadDefaultWireLoadSel( Scl_Tree_t * p )Scl_LibertyReadDefaultWireLoadSel830,27858
float Scl_LibertyReadDefaultMaxTrans( Scl_Tree_t * p )Scl_LibertyReadDefaultMaxTrans837,28106
int Scl_LibertyReadTimeUnit( Scl_Tree_t * p )Scl_LibertyReadTimeUnit844,28350
void Scl_LibertyReadLoadUnit( Scl_Tree_t * p, Vec_Str_t * vOut )Scl_LibertyReadLoadUnit864,28980
void Scl_LibertyReadWireLoad( Scl_Tree_t * p, Vec_Str_t * vOut )Scl_LibertyReadWireLoad885,29847
void Scl_LibertyReadWireLoadSelect( Scl_Tree_t * p, Vec_Str_t * vOut )Scl_LibertyReadWireLoadSelect913,31077
int Scl_LibertyReadDeriveStrength( Scl_Tree_t * p, Scl_Item_t * pCell )Scl_LibertyReadDeriveStrength941,32280
int Scl_LibertyReadPinDirection( Scl_Tree_t * p, Scl_Item_t * pPin )Scl_LibertyReadPinDirection948,32520
float Scl_LibertyReadPinCap( Scl_Tree_t * p, Scl_Item_t * pPin, char * pName )Scl_LibertyReadPinCap962,32907
Scl_Item_t * Scl_LibertyReadPinTiming( Scl_Tree_t * p, Scl_Item_t * pPinOut, char * pNameIn )Scl_LibertyReadPinTiming969,33142
Vec_Ptr_t * Scl_LibertyReadPinTimingAll( Scl_Tree_t * p, Scl_Item_t * pPinOut, char * pNameIn )Scl_LibertyReadPinTimingAll978,33533
int Scl_LibertyReadTimingSense( Scl_Tree_t * p, Scl_Item_t * pPin )Scl_LibertyReadTimingSense989,34009
Vec_Flt_t * Scl_LibertyReadFloatVec( char * pName )Scl_LibertyReadFloatVec1005,34512
void Scl_LibertyDumpTables( Vec_Str_t * vOut, Vec_Flt_t * vInd1, Vec_Flt_t * vInd2, Vec_Flt_t * vValues )Scl_LibertyDumpTables1014,34799
int Scl_LibertyScanTable( Scl_Tree_t * p, Vec_Ptr_t * vOut, Scl_Item_t * pTiming, char * pName, Vec_Ptr_t * vTemples )Scl_LibertyScanTable1047,35885
int Scl_LibertyComputeWorstCase( Vec_Ptr_t * vTables, Vec_Flt_t ** pvInd0, Vec_Flt_t ** pvInd1, Vec_Flt_t ** pvValues )Scl_LibertyComputeWorstCase1167,41196
int Scl_LibertyReadTable( Scl_Tree_t * p, Vec_Str_t * vOut, Scl_Item_t * pTiming, char * pName, Vec_Ptr_t * vTemples )Scl_LibertyReadTable1210,42913
void Scl_LibertyPrintTemplates( Vec_Ptr_t * vRes )Scl_LibertyPrintTemplates1359,49267
Vec_Ptr_t * Scl_LibertyReadTemplates( Scl_Tree_t * p )Scl_LibertyReadTemplates1376,49829
Vec_Str_t * Scl_LibertyReadSclStr( Scl_Tree_t * p, int fVerbose, int fVeryVerbose )Scl_LibertyReadSclStr1430,52228
SC_Lib * Abc_SclReadLiberty( char * pFileName, int fVerbose, int fVeryVerbose )Abc_SclReadLiberty1676,64031
void Scl_LibertyTest()Scl_LibertyTest1712,65085

src/map/scl/sclBufSize.c,4169
typedef struct Bus_Man_t_ Bus_Man_t;Bus_Man_t32,870
struct Bus_Man_t_Bus_Man_t_33,907
    SC_BusPars *   pPars;      // parameters    pPars36,944
    Abc_Ntk_t *    pNtk;       // user's networkpNtk37,993
    SC_Cell *      pPiDrive;   // PI driverpPiDrive38,1042
    SC_Lib *       pLib;       // cell librarypLib40,1101
    SC_Cell *      pInv;       // base interter (largest/average/???)pInv41,1148
    SC_WireLoad *  pWLoadUsed; // name of the used WireLoad modelpWLoadUsed42,1218
    Vec_Flt_t *    vWireCaps;  // estimated wire loadsvWireCaps43,1284
    Vec_Flt_t *    vCins;      // input cap for fanoutsvCins45,1355
    Vec_Flt_t *    vETimes;    // fanout edge departuresvETimes46,1411
    Vec_Flt_t *    vLoads;     // loads for all nodesvLoads47,1468
    Vec_Flt_t *    vDepts;     // departure timesvDepts48,1522
    Vec_Ptr_t *    vFanouts;   // fanout arrayvFanouts49,1572
static inline Bus_Man_t * Bus_SclObjMan( Abc_Obj_t * p )                     { return (Bus_Man_t *)p->pNtk->pBSMan;                                  }Bus_SclObjMan53,1624
static inline float       Bus_SclObjCin( Abc_Obj_t * p )                     { return Vec_FltEntry( Bus_SclObjMan(p)->vCins, Abc_ObjId(p) );         }Bus_SclObjCin54,1775
static inline void        Bus_SclObjSetCin( Abc_Obj_t * p, float cap )       { Vec_FltWriteEntry( Bus_SclObjMan(p)->vCins, Abc_ObjId(p), cap );      }Bus_SclObjSetCin55,1926
static inline float       Bus_SclObjETime( Abc_Obj_t * p )                   { return Vec_FltEntry( Bus_SclObjMan(p)->vETimes, Abc_ObjId(p) );       }Bus_SclObjETime56,2077
static inline void        Bus_SclObjSetETime( Abc_Obj_t * p, float time )    { Vec_FltWriteEntry( Bus_SclObjMan(p)->vETimes, Abc_ObjId(p), time );   }Bus_SclObjSetETime57,2228
static inline float       Bus_SclObjLoad( Abc_Obj_t * p )                    { return Vec_FltEntry( Bus_SclObjMan(p)->vLoads, Abc_ObjId(p) );        }Bus_SclObjLoad58,2379
static inline void        Bus_SclObjSetLoad( Abc_Obj_t * p, float cap )      { Vec_FltWriteEntry( Bus_SclObjMan(p)->vLoads, Abc_ObjId(p), cap );     }Bus_SclObjSetLoad59,2530
static inline float       Bus_SclObjDept( Abc_Obj_t * p )                    { return Vec_FltEntry( Bus_SclObjMan(p)->vDepts, Abc_ObjId(p) );        }Bus_SclObjDept60,2681
static inline void        Bus_SclObjUpdateDept( Abc_Obj_t * p, float time )  { float *q = Vec_FltEntryP( Bus_SclObjMan(p)->vDepts, Abc_ObjId(p) ); if (*q < time) *q = time;  }Bus_SclObjUpdateDept61,2832
Bus_Man_t * Bus_ManStart( Abc_Ntk_t * pNtk, SC_Lib * pLib, SC_BusPars * pPars )Bus_ManStart78,3463
void Bus_ManStop( Bus_Man_t * p )Bus_ManStop111,4857
void Bus_ManReadInOutLoads( Bus_Man_t * p )Bus_ManReadInOutLoads133,5346
static inline float Abc_NtkComputeEdgeDept( Abc_Obj_t * pFanout, int iFanin, float Slew )Abc_NtkComputeEdgeDept170,6615
float Abc_NtkComputeNodeDeparture( Abc_Obj_t * pObj, float Slew )Abc_NtkComputeNodeDeparture178,6936
void Abc_NtkComputeFanoutInfo( Abc_Obj_t * pObj, float Slew )Abc_NtkComputeFanoutInfo192,7466
float Abc_NtkComputeNodeLoad( Bus_Man_t * p, Abc_Obj_t * pObj )Abc_NtkComputeNodeLoad211,8121
float Abc_NtkComputeFanoutLoad( Bus_Man_t * p, Vec_Ptr_t * vFanouts )Abc_NtkComputeFanoutLoad223,8495
void Abc_NtkPrintFanoutProfile( Abc_Obj_t * pObj )Abc_NtkPrintFanoutProfile233,8812
void Abc_NtkPrintFanoutProfileVec( Abc_Obj_t * pObj, Vec_Ptr_t * vFanouts )Abc_NtkPrintFanoutProfileVec245,9280
int Bus_SclCompareFanouts( Abc_Obj_t ** pp1, Abc_Obj_t ** pp2 )Bus_SclCompareFanouts271,10172
void Bus_SclInsertFanout( Vec_Ptr_t * vFanouts, Abc_Obj_t * pObj )Bus_SclInsertFanout284,10606
void Bus_SclCheckSortedFanout( Vec_Ptr_t * vFanouts )Bus_SclCheckSortedFanout304,11345
void Abc_SclOneNodePrint( Bus_Man_t * p, Abc_Obj_t * pObj )Abc_SclOneNodePrint332,12091
Abc_Obj_t * Abc_SclAddOneInv( Bus_Man_t * p, Abc_Obj_t * pObj, Vec_Ptr_t * vFanouts, float Gain )Abc_SclAddOneInv343,12691
void Abc_SclBufSize( Bus_Man_t * p, float Gain )Abc_SclBufSize397,14865
Abc_Ntk_t * Abc_SclBufferingPerform( Abc_Ntk_t * pNtk, SC_Lib * pLib, SC_BusPars * pPars )Abc_SclBufferingPerform493,19212

src/map/scl/sclCon.h,6806
#define ABC__scl_Con__hABC__scl_Con__h22,542
typedef struct Scl_Con_t_ Scl_Con_t;Scl_Con_t30,815
struct Scl_Con_t_Scl_Con_t_31,852
    char *         pFileName;   // constraint file namepFileName33,872
    char *         pModelName;  // current design namepModelName34,928
    char *         pInCellDef;  // default input driving gatepInCellDef35,983
    int            tInArrDef;   // default input arrival timetInArrDef36,1045
    int            tInSlewDef;  // default input slewtInSlewDef37,1107
    int            tInLoadDef;  // default input loadtInLoadDef38,1161
    int            tOutReqDef;  // default output required timetOutReqDef39,1215
    int            tOutLoadDef; // default output loadtOutLoadDef40,1279
    Vec_Ptr_t      vInCells;    // input driving gate namesvInCells41,1334
    Vec_Ptr_t      vInCellsPtr; // input driving gatesvInCellsPtr42,1394
    Vec_Int_t      vInArrs;     // input arrival timesvInArrs43,1449
    Vec_Int_t      vInSlews;    // input slewsvInSlews44,1504
    Vec_Int_t      vInLoads;    // input loadsvInLoads45,1551
    Vec_Int_t      vOutReqs;    // output required timesvOutReqs46,1598
    Vec_Int_t      vOutLoads;   // output loadsvOutLoads47,1655
    Abc_Nam_t *    pNamI;       // input namespNamI48,1703
    Abc_Nam_t *    pNamO;       // output namespNamO49,1750
#define SCL_INPUT_CELL SCL_INPUT_CELL52,1802
#define SCL_INPUT_ARR SCL_INPUT_ARR53,1840
#define SCL_INPUT_SLEW SCL_INPUT_SLEW54,1881
#define SCL_INPUT_LOAD SCL_INPUT_LOAD55,1919
#define SCL_OUTPUT_REQ SCL_OUTPUT_REQ56,1957
#define SCL_OUTPUT_LOAD SCL_OUTPUT_LOAD57,2000
#define SCL_DIRECTIVE(SCL_DIRECTIVE59,2040
#define SCL_DEF_DIRECTIVE(SCL_DEF_DIRECTIVE60,2081
#define SCL_NUM SCL_NUM62,2131
#define SCL_INFINITY SCL_INFINITY63,2161
static inline int       Scl_Flt2Int( float w )   { return SCL_NUM*w;        }Scl_Flt2Int65,2199
static inline float     Scl_Int2Flt( int i )     { return (float)i/SCL_NUM; }Scl_Int2Flt66,2277
static inline Scl_Con_t * Scl_ConAlloc( char * pFileName, Abc_Nam_t * pNamI, Abc_Nam_t * pNamO )Scl_ConAlloc83,2831
static inline void Scl_ConFree( Scl_Con_t * p )Scl_ConFree104,3772
static inline int Scl_ConParse( Scl_Con_t * p, Abc_Nam_t * pNamI, Abc_Nam_t * pNamO )Scl_ConParse134,4531
static inline Scl_Con_t * Scl_ConRead( char * pFileName, Abc_Nam_t * pNamI, Abc_Nam_t * pNamO )Scl_ConRead188,9251
static inline void Scl_ConWrite( Scl_Con_t * p, char * pFileName )Scl_ConWrite196,9510
static inline int    Scl_ConHasInCells_( Scl_Con_t * p )        { return Vec_PtrCountZero(&p->vInCells)  != Vec_PtrSize(&p->vInCells);  }Scl_ConHasInCells_236,11985
static inline int    Scl_ConHasInArrs_( Scl_Con_t * p )         { return Vec_IntCountZero(&p->vInArrs)   != Vec_IntSize(&p->vInArrs);   }Scl_ConHasInArrs_237,12123
static inline int    Scl_ConHasInSlews_( Scl_Con_t * p )        { return Vec_IntCountZero(&p->vInSlews)  != Vec_IntSize(&p->vInSlews);  }Scl_ConHasInSlews_238,12261
static inline int    Scl_ConHasInLoads_( Scl_Con_t * p )        { return Vec_IntCountZero(&p->vInLoads)  != Vec_IntSize(&p->vInLoads);  }Scl_ConHasInLoads_239,12399
static inline int    Scl_ConHasOutReqs_( Scl_Con_t * p )        { return Vec_IntCountZero(&p->vOutReqs)  != Vec_IntSize(&p->vOutReqs);  }Scl_ConHasOutReqs_240,12537
static inline int    Scl_ConHasOutLoads_( Scl_Con_t * p )       { return Vec_IntCountZero(&p->vOutLoads) != Vec_IntSize(&p->vOutLoads); }Scl_ConHasOutLoads_241,12675
static inline char * Scl_ConGetInCell_( Scl_Con_t * p, int i )  { return (char*)Vec_PtrEntry( &p->vInCells,  i ); }Scl_ConGetInCell_243,12814
static inline int    Scl_ConGetInArr_( Scl_Con_t * p, int i )   { return Vec_IntEntry( &p->vInArrs,   i ); }Scl_ConGetInArr_244,12930
static inline int    Scl_ConGetInSlew_( Scl_Con_t * p, int i )  { return Vec_IntEntry( &p->vInSlews,  i ); }Scl_ConGetInSlew_245,13039
static inline int    Scl_ConGetInLoad_( Scl_Con_t * p, int i )  { return Vec_IntEntry( &p->vInLoads,  i ); }Scl_ConGetInLoad_246,13148
static inline int    Scl_ConGetOutReq_( Scl_Con_t * p, int i )  { return Vec_IntEntry( &p->vOutReqs,  i ); }Scl_ConGetOutReq_247,13257
static inline int    Scl_ConGetOutLoad_( Scl_Con_t * p, int i ) { return Vec_IntEntry( &p->vOutLoads, i ); }Scl_ConGetOutLoad_248,13366
static inline int    Scl_ConIsRunning()               { return Scl_ConReadMan() != NULL;                  }Scl_ConIsRunning263,13764
static inline int    Scl_ConHasInCells()              { return Scl_ConHasInCells_ ( Scl_ConReadMan() );   }Scl_ConHasInCells265,13873
static inline int    Scl_ConHasInArrs()               { return Scl_ConHasInArrs_  ( Scl_ConReadMan() );   }Scl_ConHasInArrs266,13981
static inline int    Scl_ConHasInSlews()              { return Scl_ConHasInSlews_ ( Scl_ConReadMan() );   }Scl_ConHasInSlews267,14089
static inline int    Scl_ConHasInLoads()              { return Scl_ConHasInLoads_ ( Scl_ConReadMan() );   }Scl_ConHasInLoads268,14197
static inline int    Scl_ConHasOutReqs()              { return Scl_ConHasOutReqs_ ( Scl_ConReadMan() );   }Scl_ConHasOutReqs269,14305
static inline int    Scl_ConHasOutLoads()             { return Scl_ConHasOutLoads_( Scl_ConReadMan() );   }Scl_ConHasOutLoads270,14413
static inline char * Scl_ConGetInCell( int i )        { return Scl_ConGetInCell_ ( Scl_ConReadMan(), i ); }Scl_ConGetInCell272,14522
static inline int    Scl_ConGetInArr( int i )         { return Scl_ConGetInArr_  ( Scl_ConReadMan(), i ); }Scl_ConGetInArr273,14630
static inline int    Scl_ConGetInSlew( int i )        { return Scl_ConGetInSlew_ ( Scl_ConReadMan(), i ); }Scl_ConGetInSlew274,14738
static inline int    Scl_ConGetInLoad( int i )        { return Scl_ConGetInLoad_ ( Scl_ConReadMan(), i ); }Scl_ConGetInLoad275,14846
static inline int    Scl_ConGetOutReq( int i )        { return Scl_ConGetOutReq_ ( Scl_ConReadMan(), i ); }Scl_ConGetOutReq276,14954
static inline int    Scl_ConGetOutLoad( int i )       { return Scl_ConGetOutLoad_( Scl_ConReadMan(), i ); }Scl_ConGetOutLoad277,15062
static inline float  Scl_ConGetInArrFloat( int i )    { return Scl_Int2Flt( Scl_ConGetInArr(i) );         }Scl_ConGetInArrFloat279,15171
static inline float  Scl_ConGetInSlewFloat( int i )   { return Scl_Int2Flt( Scl_ConGetInSlew(i) );        }Scl_ConGetInSlewFloat280,15279
static inline float  Scl_ConGetInLoadFloat( int i )   { return Scl_Int2Flt( Scl_ConGetInLoad(i) );        }Scl_ConGetInLoadFloat281,15387
static inline float  Scl_ConGetOutReqFloat( int i )   { return Scl_Int2Flt( Scl_ConGetOutReq(i) );        }Scl_ConGetOutReqFloat282,15495
static inline float  Scl_ConGetOutLoadFloat( int i )  { return Scl_Int2Flt( Scl_ConGetOutLoad(i) );       }Scl_ConGetOutLoadFloat283,15603

src/map/fpga/fpgaVec.c,1743
Fpga_NodeVec_t * Fpga_NodeVecAlloc( int nCap )Fpga_NodeVecAlloc45,1337
void Fpga_NodeVecFree( Fpga_NodeVec_t * p )Fpga_NodeVecFree68,1863
Fpga_Node_t ** Fpga_NodeVecReadArray( Fpga_NodeVec_t * p )Fpga_NodeVecReadArray85,2192
int Fpga_NodeVecReadSize( Fpga_NodeVec_t * p )Fpga_NodeVecReadSize101,2512
void Fpga_NodeVecGrow( Fpga_NodeVec_t * p, int nCapMin )Fpga_NodeVecGrow117,2860
void Fpga_NodeVecShrink( Fpga_NodeVec_t * p, int nSizeNew )Fpga_NodeVecShrink136,3294
void Fpga_NodeVecClear( Fpga_NodeVec_t * p )Fpga_NodeVecClear153,3654
void Fpga_NodeVecPush( Fpga_NodeVec_t * p, Fpga_Node_t * Entry )Fpga_NodeVecPush169,3956
int Fpga_NodeVecPushUnique( Fpga_NodeVec_t * p, Fpga_Node_t * Entry )Fpga_NodeVecPushUnique192,4565
Fpga_Node_t * Fpga_NodeVecPop( Fpga_NodeVec_t * p )Fpga_NodeVecPop213,5029
void Fpga_NodeVecWriteEntry( Fpga_NodeVec_t * p, int i, Fpga_Node_t * Entry )Fpga_NodeVecWriteEntry229,5354
Fpga_Node_t * Fpga_NodeVecReadEntry( Fpga_NodeVec_t * p, int i )Fpga_NodeVecReadEntry246,5735
int Fpga_NodeVecCompareLevels( Fpga_Node_t ** pp1, Fpga_Node_t ** pp2 )Fpga_NodeVecCompareLevels263,6137
void Fpga_NodeVecSortByLevel( Fpga_NodeVec_t * p )Fpga_NodeVecSortByLevel289,6844
int Fpga_NodeVecCompareArrivals( Fpga_Node_t ** ppS1, Fpga_Node_t ** ppS2 )Fpga_NodeVecCompareArrivals306,7312
void Fpga_SortNodesByArrivalTimes( Fpga_NodeVec_t * p )Fpga_SortNodesByArrivalTimes326,7878
void Fpga_NodeVecUnion( Fpga_NodeVec_t * p, Fpga_NodeVec_t * p1, Fpga_NodeVec_t * p2 )Fpga_NodeVecUnion345,8455
void Fpga_NodeVecPushOrder( Fpga_NodeVec_t * vNodes, Fpga_Node_t * pNode, int fIncreasing )Fpga_NodeVecPushOrder366,9037
void Fpga_NodeVecReverse( Fpga_NodeVec_t * vNodes )Fpga_NodeVecReverse395,9943

src/map/fpga/fpgaFanout.c,311
void Fpga_NodeAddFaninFanout( Fpga_Node_t * pFanin, Fpga_Node_t * pFanout )Fpga_NodeAddFaninFanout45,1306
void Fpga_NodeRemoveFaninFanout( Fpga_Node_t * pFanin, Fpga_Node_t * pFanoutToRemove )Fpga_NodeRemoveFaninFanout101,2878
int Fpga_NodeGetFanoutNum( Fpga_Node_t * pNode )Fpga_NodeGetFanoutNum130,3741

src/map/fpga/fpgaCore.c,135
int Fpga_Mapping( Fpga_Man_t * p )Fpga_Mapping53,1713
int Fpga_MappingPostProcess( Fpga_Man_t * p )Fpga_MappingPostProcess109,3514

src/map/fpga/fpgaCreate.c,7341
static inline unsigned Fpga_HashKey2( Fpga_Node_t * p0, Fpga_Node_t * p1, int TableSize ) { return (unsigned)(((ABC_PTRUINT_T)(p0) + (ABC_PTRUINT_T)(p1) * 12582917) % TableSize); }Fpga_HashKey234,1051
int             Fpga_ManReadInputNum( Fpga_Man_t * p )                    { return p->nInputs;    }Fpga_ManReadInputNum51,1727
int             Fpga_ManReadOutputNum( Fpga_Man_t * p )                   { return p->nOutputs;   }Fpga_ManReadOutputNum52,1827
Fpga_Node_t **  Fpga_ManReadInputs ( Fpga_Man_t * p )                     { return p->pInputs;    }Fpga_ManReadInputs53,1927
Fpga_Node_t **  Fpga_ManReadOutputs( Fpga_Man_t * p )                     { return p->pOutputs;   }Fpga_ManReadOutputs54,2027
Fpga_Node_t *   Fpga_ManReadConst1 ( Fpga_Man_t * p )                     { return p->pConst1;    }Fpga_ManReadConst155,2127
float *         Fpga_ManReadInputArrivals( Fpga_Man_t * p )               { return p->pInputArrivals;}Fpga_ManReadInputArrivals56,2227
int             Fpga_ManReadVerbose( Fpga_Man_t * p )                     { return p->fVerbose;   }Fpga_ManReadVerbose57,2330
int             Fpga_ManReadVarMax( Fpga_Man_t * p )                      { return p->pLutLib->LutMax;     }Fpga_ManReadVarMax58,2430
float *         Fpga_ManReadLutAreas( Fpga_Man_t * p )                    { return p->pLutLib->pLutAreas;  }Fpga_ManReadLutAreas59,2539
Fpga_NodeVec_t* Fpga_ManReadMapping( Fpga_Man_t * p )                     { return p->vMapping;   }Fpga_ManReadMapping60,2648
void            Fpga_ManSetOutputNames( Fpga_Man_t * p, char ** ppNames ) { p->ppOutputNames = ppNames; }Fpga_ManSetOutputNames61,2748
void            Fpga_ManSetInputArrivals( Fpga_Man_t * p, float * pArrivals ) { p->pInputArrivals = pArrivals; }Fpga_ManSetInputArrivals62,2854
void            Fpga_ManSetAreaRecovery( Fpga_Man_t * p, int fAreaRecovery ) { p->fAreaRecovery = fAreaRecovery;}Fpga_ManSetAreaRecovery63,2967
void            Fpga_ManSetDelayLimit( Fpga_Man_t * p, float DelayLimit )    { p->DelayLimit   = DelayLimit;    }Fpga_ManSetDelayLimit64,3081
void            Fpga_ManSetAreaLimit( Fpga_Man_t * p, float AreaLimit )      { p->AreaLimit    = AreaLimit;     }Fpga_ManSetAreaLimit65,3195
void            Fpga_ManSetChoiceNodeNum( Fpga_Man_t * p, int nChoiceNodes ) { p->nChoiceNodes = nChoiceNodes;  }  Fpga_ManSetChoiceNodeNum66,3309
void            Fpga_ManSetChoiceNum( Fpga_Man_t * p, int nChoices )         { p->nChoices = nChoices;          }   Fpga_ManSetChoiceNum67,3425
void            Fpga_ManSetVerbose( Fpga_Man_t * p, int fVerbose )           { p->fVerbose = fVerbose;          }   Fpga_ManSetVerbose68,3542
void            Fpga_ManSetSwitching( Fpga_Man_t * p, int fSwitching )       { p->fSwitching = fSwitching;      }   Fpga_ManSetSwitching69,3659
void            Fpga_ManSetLatchPaths( Fpga_Man_t * p, int fLatchPaths )     { p->fLatchPaths = fLatchPaths;    }   Fpga_ManSetLatchPaths70,3776
void            Fpga_ManSetLatchNum( Fpga_Man_t * p, int nLatches )          { p->nLatches = nLatches;          }   Fpga_ManSetLatchNum71,3893
void            Fpga_ManSetDelayTarget( Fpga_Man_t * p, float DelayTarget )  { p->DelayTarget = DelayTarget;    }   Fpga_ManSetDelayTarget72,4010
void            Fpga_ManSetName( Fpga_Man_t * p, char * pFileName )          { p->pFileName = pFileName;        }   Fpga_ManSetName73,4127
int             Fpga_LibReadLutMax( Fpga_LutLib_t * pLib )  { return pLib->LutMax; }Fpga_LibReadLutMax86,4519
char *          Fpga_NodeReadData0( Fpga_Node_t * p )                   { return p->pData0;    }Fpga_NodeReadData099,4876
Fpga_Node_t *   Fpga_NodeReadData1( Fpga_Node_t * p )                   { return p->pLevel;    }Fpga_NodeReadData1100,4973
int             Fpga_NodeReadRefs( Fpga_Node_t * p )                    { return p->nRefs;     }Fpga_NodeReadRefs101,5070
int             Fpga_NodeReadNum( Fpga_Node_t * p )                     { return p->Num;       }Fpga_NodeReadNum102,5167
int             Fpga_NodeReadLevel( Fpga_Node_t * p )                   { return Fpga_Regular(p)->Level;  }Fpga_NodeReadLevel103,5264
Fpga_Cut_t *    Fpga_NodeReadCuts( Fpga_Node_t * p )                    { return p->pCuts;     }Fpga_NodeReadCuts104,5372
Fpga_Cut_t *    Fpga_NodeReadCutBest( Fpga_Node_t * p )                 { return p->pCutBest;  }Fpga_NodeReadCutBest105,5469
Fpga_Node_t *   Fpga_NodeReadOne( Fpga_Node_t * p )                     { return p->p1;        }Fpga_NodeReadOne106,5566
Fpga_Node_t *   Fpga_NodeReadTwo( Fpga_Node_t * p )                     { return p->p2;        }Fpga_NodeReadTwo107,5663
void            Fpga_NodeSetData0( Fpga_Node_t * p, char * pData )         { p->pData0 = pData;  }Fpga_NodeSetData0108,5760
void            Fpga_NodeSetData1( Fpga_Node_t * p, Fpga_Node_t * pNode )  { p->pLevel = pNode;  }Fpga_NodeSetData1109,5859
void            Fpga_NodeSetNextE( Fpga_Node_t * p, Fpga_Node_t * pNextE ) { p->pNextE = pNextE; }Fpga_NodeSetNextE110,5958
void            Fpga_NodeSetRepr( Fpga_Node_t * p, Fpga_Node_t * pRepr )   { p->pRepr = pRepr;   }Fpga_NodeSetRepr111,6057
void            Fpga_NodeSetSwitching( Fpga_Node_t * p, float Switching )  { p->Switching = Switching;   }Fpga_NodeSetSwitching112,6156
int             Fpga_NodeIsConst( Fpga_Node_t * p )    {  return (Fpga_Regular(p))->Num == -1;    }Fpga_NodeIsConst125,6526
int             Fpga_NodeIsVar( Fpga_Node_t * p )      {  return (Fpga_Regular(p))->p1 == NULL && (Fpga_Regular(p))->Num >= 0; }Fpga_NodeIsVar126,6626
int             Fpga_NodeIsAnd( Fpga_Node_t * p )      {  return (Fpga_Regular(p))->p1 != NULL;  }Fpga_NodeIsAnd127,6755
int             Fpga_NodeComparePhase( Fpga_Node_t * p1, Fpga_Node_t * p2 ) { assert( !Fpga_IsComplement(p1) ); assert( !Fpga_IsComplement(p2) ); return p1->fInv ^ p2->fInv; }Fpga_NodeComparePhase128,6854
int             Fpga_CutReadLeavesNum( Fpga_Cut_t * p )            {  return p->nLeaves;  }Fpga_CutReadLeavesNum141,7295
Fpga_Node_t **  Fpga_CutReadLeaves( Fpga_Cut_t * p )               {  return p->ppLeaves; }Fpga_CutReadLeaves142,7387
Fpga_Man_t * Fpga_ManCreate( int nInputs, int nOutputs, int fVerbose )Fpga_ManCreate163,8219
void Fpga_ManFree( Fpga_Man_t * p )Fpga_ManFree217,9944
void Fpga_ManPrintTimeStats( Fpga_Man_t * p )Fpga_ManPrintTimeStats252,10911
Fpga_Node_t * Fpga_NodeCreate( Fpga_Man_t * p, Fpga_Node_t * p1, Fpga_Node_t * p2 )Fpga_NodeCreate293,12261
void Fpga_TableCreate( Fpga_Man_t * pMan )Fpga_TableCreate342,13792
Fpga_Node_t * Fpga_TableLookup( Fpga_Man_t * pMan, Fpga_Node_t * p1, Fpga_Node_t * p2 )Fpga_TableLookup365,14614
void Fpga_TableResize( Fpga_Man_t * pMan )Fpga_TableResize420,16061
Fpga_Node_t * Fpga_NodeAnd( Fpga_Man_t * p, Fpga_Node_t * p1, Fpga_Node_t * p2 )Fpga_NodeAnd470,17531
Fpga_Node_t * Fpga_NodeOr( Fpga_Man_t * p, Fpga_Node_t * p1, Fpga_Node_t * p2 )Fpga_NodeOr488,17977
Fpga_Node_t * Fpga_NodeExor( Fpga_Man_t * p, Fpga_Node_t * p1, Fpga_Node_t * p2 )Fpga_NodeExor506,18453
Fpga_Node_t * Fpga_NodeMux( Fpga_Man_t * p, Fpga_Node_t * pC, Fpga_Node_t * pT, Fpga_Node_t * pE )Fpga_NodeMux522,18862
void Fpga_NodeSetChoice( Fpga_Man_t * pMan, Fpga_Node_t * pNodeOld, Fpga_Node_t * pNodeNew )Fpga_NodeSetChoice544,19588
void Fpga_ManStats( Fpga_Man_t * p )Fpga_ManStats564,20063

src/map/fpga/fpgaUtils.c,3124
#define FPGA_CO_LIST_SIZE FPGA_CO_LIST_SIZE28,763
Fpga_NodeVec_t * Fpga_MappingDfs( Fpga_Man_t * pMan, int fCollectEquiv )Fpga_MappingDfs54,1950
void Fpga_MappingDfs_rec( Fpga_Node_t * pNode, Fpga_NodeVec_t * vNodes, int fCollectEquiv )Fpga_MappingDfs_rec96,3374
Fpga_NodeVec_t * Fpga_MappingDfsNodes( Fpga_Man_t * pMan, Fpga_Node_t ** ppNodes, int nNodes, int fEquiv )Fpga_MappingDfsNodes129,4438
float Fpga_MappingGetAreaFlow( Fpga_Man_t * p )Fpga_MappingGetAreaFlow153,5086
float Fpga_MappingArea( Fpga_Man_t * pMan )Fpga_MappingArea177,5677
float Fpga_MappingArea_rec( Fpga_Man_t * pMan, Fpga_Node_t * pNode, Fpga_NodeVec_t * vNodes )Fpga_MappingArea_rec203,6309
float Fpga_MappingAreaTrav( Fpga_Man_t * pMan )Fpga_MappingAreaTrav239,7438
float Fpga_MappingSetRefsAndArea_rec( Fpga_Man_t * pMan, Fpga_Node_t * pNode, Fpga_Node_t ** ppStore )Fpga_MappingSetRefsAndArea_rec267,8183
float Fpga_MappingSetRefsAndArea( Fpga_Man_t * pMan )Fpga_MappingSetRefsAndArea299,9297
int Fpga_MappingCompareOutputDelay( Fpga_Node_t ** ppNode1, Fpga_Node_t ** ppNode2 )Fpga_MappingCompareOutputDelay346,10706
void Fpga_MappingFindLatest( Fpga_Man_t * p, int * pNodes, int nNodesMax )Fpga_MappingFindLatest370,11429
void Fpga_MappingPrintOutputArrivals( Fpga_Man_t * p )Fpga_MappingPrintOutputArrivals402,12322
void Fpga_MappingSetupTruthTables( unsigned uTruths[][2] )Fpga_MappingSetupTruthTables449,13736
void Fpga_MappingSetupMask( unsigned uMask[], int nVarsMax )Fpga_MappingSetupMask475,14411
int Fpga_ManCheckConsistency( Fpga_Man_t * p )Fpga_ManCheckConsistency500,15153
int Fpga_CompareNodesByLevelDecreasing( Fpga_Node_t ** ppS1, Fpga_Node_t ** ppS2 )Fpga_CompareNodesByLevelDecreasing544,16501
int Fpga_CompareNodesByLevelIncreasing( Fpga_Node_t ** ppS1, Fpga_Node_t ** ppS2 )Fpga_CompareNodesByLevelIncreasing564,17047
void Fpga_MappingSortByLevel( Fpga_Man_t * pMan, Fpga_NodeVec_t * vNodes, int fIncreasing )Fpga_MappingSortByLevel584,17605
Fpga_NodeVec_t * Fpga_DfsLim( Fpga_Man_t * pMan, Fpga_Node_t * pNode, int nLevels )Fpga_DfsLim606,18472
void Fpga_DfsLim_rec( Fpga_Node_t * pNode, int Level, Fpga_NodeVec_t * vNodes )Fpga_DfsLim_rec629,19101
void Fpga_ManCleanData0( Fpga_Man_t * pMan )Fpga_ManCleanData0657,19882
Fpga_NodeVec_t * Fpga_CollectNodeTfo( Fpga_Man_t * pMan, Fpga_Node_t * pNode )Fpga_CollectNodeTfo675,20305
int Fpga_CollectNodeTfo_rec( Fpga_Node_t * pNode, Fpga_Node_t * pPivot, Fpga_NodeVec_t * vVisited, Fpga_NodeVec_t * vTfo )Fpga_CollectNodeTfo_rec701,21155
Fpga_NodeVec_t * Fpga_MappingLevelize( Fpga_Man_t * pMan, Fpga_NodeVec_t * vNodes )Fpga_MappingLevelize747,22389
int Fpga_MappingMaxLevel( Fpga_Man_t * pMan )Fpga_MappingMaxLevel804,24050
int Fpga_MappingUpdateLevel_rec( Fpga_Man_t * pMan, Fpga_Node_t * pNode, int fMaximum )Fpga_MappingUpdateLevel_rec826,24615
void Fpga_MappingSetChoiceLevels( Fpga_Man_t * pMan )Fpga_MappingSetChoiceLevels876,26436
void Fpga_ManReportChoices( Fpga_Man_t * pMan )Fpga_ManReportChoices897,27116
Fpga_NodeVec_t * Fpga_MappingOrderCosByLevel( Fpga_Man_t * pMan )Fpga_MappingOrderCosByLevel954,28975

src/map/fpga/fpgaInt.h,11543
#define ABC__map__fpga__fpgaInt_hABC__map__fpga__fpgaInt_h20,527
#define inline inline48,1472
#define FPGA_MAX_LEAVES FPGA_MAX_LEAVES52,1601
#define FPGA_MASK(FPGA_MASK55,1658
#define FPGA_FULL FPGA_FULL56,1722
#define FPGA_NO_VAR FPGA_NO_VAR57,1773
#define FPGA_NUM_BYTES(FPGA_NUM_BYTES58,1817
#define FPGA_MIN(FPGA_MIN61,1912
#define FPGA_MAX(FPGA_MAX62,1971
#define FPGA_FLOAT_LARGE FPGA_FLOAT_LARGE65,2100
#define FPGA_FLOAT_SMALL FPGA_FLOAT_SMALL66,2151
#define FPGA_INT_LARGE FPGA_INT_LARGE67,2202
#define FPGA_SEQ_SIGN(FPGA_SEQ_SIGN70,2286
#define Fpga_CutIsComplement(Fpga_CutIsComplement73,2388
#define Fpga_CutRegular(Fpga_CutRegular74,2456
#define Fpga_CutNot(Fpga_CutNot75,2533
#define Fpga_CutNotCond(Fpga_CutNotCond76,2609
#define Fpga_SeqIsComplement(Fpga_SeqIsComplement79,2703
#define Fpga_SeqRegular(Fpga_SeqRegular80,2778
#define Fpga_SeqIndex(Fpga_SeqIndex81,2862
#define Fpga_SeqIndexCreate(Fpga_SeqIndexCreate82,2936
#define Fpga_NodeReadRef(Fpga_NodeReadRef85,3082
#define Fpga_NodeRef(Fpga_NodeRef86,3142
#define Fpga_NodeIsSimComplement(Fpga_NodeIsSimComplement89,3255
#define FPGA_RANDOM_UNSIGNED FPGA_RANDOM_UNSIGNED92,3409
struct Fpga_ManStruct_t_Fpga_ManStruct_t_99,3763
    Fpga_Node_t **      pBins;         // the table of nodes hashed by their childrenpBins102,3815
    int                 nBins;         // the size of the tablenBins103,3901
    Fpga_Node_t **      pInputs;       // the array of inputspInputs104,3965
    int                 nInputs;       // the number of inputsnInputs105,4027
    Fpga_Node_t **      pOutputs;      // the array of outputspOutputs106,4090
    int                 nOutputs;      // the number of outputsnOutputs107,4153
    int                 nNodes;        // the total number of nodesnNodes108,4217
    int                 nLatches;      // the number of latches in the circuitnLatches109,4285
    Fpga_Node_t *       pConst1;       // the constant 1 nodepConst1110,4364
    Fpga_NodeVec_t *    vNodesAll;     // the nodes by numbervNodesAll111,4426
    Fpga_NodeVec_t *    vAnds;         // the nodes reachable from COsvAnds112,4488
    Fpga_NodeVec_t *    vMapping;      // the nodes used in the current mappingvMapping113,4559
    char *              pFileName;     // the file namepFileName116,4679
    char **             ppOutputNames; // the primary output namesppOutputNames117,4735
    float *             pInputArrivals;// the PI arrival timespInputArrivals118,4802
    int                 nVarsMax;      // the max number of variablesnVarsMax121,4892
    int                 fAreaRecovery; // the flag to use area flow as the first parameterfAreaRecovery122,4962
    int                 fVerbose;      // the verbosiness flagfVerbose123,5053
    int                 fSwitching;    // minimize the switching activity (instead of area)fSwitching124,5116
    int                 fLatchPaths;   // optimize latch paths for delay, other paths for areafLatchPaths125,5208
    int                 nTravIds;      // the counter of traversal IDsnTravIds126,5303
    float               DelayTarget;   // the target required timesDelayTarget127,5374
    int                 nChoiceNodes;  // the number of choice nodesnChoiceNodes130,5474
    int                 nChoices;      // the number of all choicesnChoices131,5543
    int                 nCanons;nCanons133,5612
    int                 nMatches;nMatches134,5645
    Fpga_LutLib_t *     pLutLib;       // the current LUT librarypLutLib137,5710
    Extra_MmFixed_t *   mmNodes;       // the memory manager for nodesmmNodes140,5804
    Extra_MmFixed_t *   mmCuts;        // the memory manager for cutsmmCuts141,5875
    int                 fResynthesis;  // the resynthesis flagfResynthesis144,5976
    float               fRequiredGlo;  // the global required timesfRequiredGlo145,6039
    float               fRequiredShift;// the shift of the required timesfRequiredShift146,6107
    float               fRequiredStart;// the starting global required timesfRequiredStart147,6181
    float               fRequiredGain; // the reduction in delayfRequiredGain148,6258
    float               fAreaGlo;      // the total areafAreaGlo149,6323
    float               fAreaGain;     // the reduction in areafAreaGain150,6380
    float               fEpsilon;      // the epsilon used to compare floatsfEpsilon151,6444
    float               fDelayWindow;  // the delay window for delay-oriented resynthesisfDelayWindow152,6521
    float               DelayLimit;    // for resynthesisDelayLimit153,6611
    float               AreaLimit;     // for resynthesisAreaLimit154,6669
    float               TimeLimit;     // for resynthesisTimeLimit155,6727
    clock_t             timeToMap;     // time to transfer to the mapping structuretimeToMap158,6812
    clock_t             timeCuts;      // time to compute k-feasible cutstimeCuts159,6896
    clock_t             timeTruth;     // time to compute the truth table for each cuttimeTruth160,6970
    clock_t             timeMatch;     // time to perform matching for each nodetimeMatch161,7057
    clock_t             timeRecover;   // time to perform area recoverytimeRecover162,7138
    clock_t             timeToNet;     // time to transfer back to the networktimeToNet163,7210
    clock_t             timeTotal;     // the total mapping timetimeTotal164,7289
    clock_t             time1;         // time to transfer to the mapping structuretime1165,7354
    clock_t             time2;         // time to transfer to the mapping structuretime2166,7438
struct Fpga_LutLibStruct_t_Fpga_LutLibStruct_t_170,7545
    char *              pName;         // the name of the LUT librarypName172,7575
    int                 LutMax;        // the maximum LUT size LutMax173,7645
    int                 fVarPinDelays; // set to 1 if variable pin delays are specifiedfVarPinDelays174,7709
    float               pLutAreas[FPGA_MAX_LUTSIZE+1]; // the areas of LUTspLutAreas175,7797
    float               pLutDelays[FPGA_MAX_LUTSIZE+1][FPGA_MAX_LUTSIZE+1];// the delays of LUTspLutDelays176,7873
struct Fpga_NodeStruct_t_ Fpga_NodeStruct_t_180,7994
    Fpga_Node_t *       pNext;         // the next node in the hash tablepNext183,8065
    Fpga_Node_t *       pLevel;        // the next node in the linked list by levelpLevel184,8139
    int                 Num;           // the unique number of this nodeNum185,8223
    int                 NumA;          // the unique number of this nodeNumA186,8296
    int                 Num2;          // the temporary number of this nodeNum2187,8369
    int                 nRefs;         // the number of references (fanouts) of the given nodenRefs188,8445
    unsigned            fMark0 : 1;    // the mark used for traversalsfMark0189,8540
    unsigned            fMark1 : 1;    // the mark used for traversalsfMark1190,8611
    unsigned            fInv   : 1;    // the complemented attribute for the equivalent nodesfInv191,8682
    unsigned            Value  : 2;    // the value of the nodesValue192,8776
    unsigned            fUsed  : 1;    // the flag indicating that the node is used in the mappingfUsed193,8841
    unsigned            fTemp  : 1;    // unusedfTemp194,8940
    unsigned            Level  :11;    // the level of the given nodeLevel195,8989
    unsigned            uData  :14;    // used to mark the fanins, for which resynthesis was trieduData196,9059
    int                 TravId;TravId197,9158
    Fpga_Node_t *       p1;            // the first childp1200,9231
    Fpga_Node_t *       p2;            // the second childp2201,9289
    Fpga_Node_t *       pNextE;        // the next functionally equivalent nodepNextE202,9348
    Fpga_Node_t *       pRepr;         // the representative of the functionally equivalent classpRepr203,9428
    Fpga_Node_t *       pFanPivot;     // the first fanout of this nodepFanPivot207,9595
    Fpga_Node_t *       pFanFanin1;    // the next fanout of p1pFanFanin1208,9667
    Fpga_Node_t *       pFanFanin2;    // the next fanout of p2pFanFanin2209,9731
    float               tRequired;     // the best area flow tRequired214,9909
    float               aEstFanouts;   // the fanout estimationaEstFanouts215,9971
    float               Switching;     // the probability of switchingSwitching216,10035
    int                 LValue;        // the l-value of the nodeLValue217,10106
    short               nLatches1;     // the number of latches on the first edgenLatches1218,10172
    short               nLatches2;     // the number of latches on the second edgenLatches2219,10254
    Fpga_Cut_t *        pCutBest;      // the best mappingpCutBest222,10361
    Fpga_Cut_t *        pCutOld;       // the old mappingpCutOld223,10420
    Fpga_Cut_t *        pCuts;         // mapping choices for the node (elementary comes first)pCuts224,10478
    Fpga_Cut_t *        pCutsN;        // mapping choices for the node (elementary comes first)pCutsN225,10574
    char *              pData0;        // temporary storage for the corresponding network nodepData0228,10697
struct Fpga_CutStruct_t_  Fpga_CutStruct_t_232,10829
    Fpga_Cut_t *        pOne;          // the father of this cutpOne234,10858
    Fpga_Cut_t *        pTwo;          // the mother of this cutpTwo235,10923
    Fpga_Node_t *       pRoot;         // the root of the cutpRoot236,10988
    Fpga_Node_t *       ppLeaves[FPGA_MAX_LEAVES+1];   // the leaves of this cutppLeaves237,11050
    float               fLevel;        // the average level of the faninsfLevel238,11131
    unsigned            uSign;         // signature for quick comparisonuSign239,11205
    char                fMark;         // the mark to denote visited cutfMark240,11278
    char                Phase;         // the mark to denote complemented cutPhase241,11351
    char                nLeaves;       // the number of leaves of this cutnLeaves242,11429
    char                nVolume;       // the volume of this cutnVolume243,11504
    float               tArrival;      // the arrival time tArrival244,11569
    float               aFlow;         // the area flow of the cutaFlow245,11629
    Fpga_Cut_t *        pNext;         // the pointer to the next cut in the listpNext246,11696
struct Fpga_NodeVecStruct_t_Fpga_NodeVecStruct_t_250,11805
    Fpga_Node_t **      pArray;        // the array of nodespArray252,11836
    int                 nSize;         // the number of entries in the arraynSize253,11897
    int                 nCap;          // the number of allocated entriesnCap254,11974
#define Fpga_NodeReadNextFanout(Fpga_NodeReadNextFanout258,12099
#define Fpga_NodeReadNextFanoutPlace(Fpga_NodeReadNextFanoutPlace264,12431
#define Fpga_NodeForEachFanout(Fpga_NodeForEachFanout269,12669
#define Fpga_NodeForEachFanoutSafe(Fpga_NodeForEachFanoutSafe274,12915
static inline int Fpga_FloatMoreThan( Fpga_Man_t * p, float Arg1, float Arg2 ) { return Arg1 > Arg2 + p->fEpsilon; }Fpga_FloatMoreThan281,13314
static inline int Fpga_FloatLessThan( Fpga_Man_t * p, float Arg1, float Arg2 ) { return Arg1 < Arg2 - p->fEpsilon; }Fpga_FloatLessThan282,13431
static inline int Fpga_FloatEqual( Fpga_Man_t * p, float Arg1, float Arg2 )    { return Arg1 > Arg2 - p->fEpsilon && Arg1 < Arg2 + p->fEpsilon; }Fpga_FloatEqual283,13548

src/map/fpga/fpgaCut.c,3574
typedef struct Fpga_CutTableStrutct_t Fpga_CutTable_t;Fpga_CutTable_t28,747
struct Fpga_CutTableStrutct_tFpga_CutTableStrutct_t29,802
    Fpga_Cut_t ** pBins;        // the table used for linear probingpBins31,834
    int           nBins;        // the size of the tablenBins32,903
    int *         pCuts;        // the array of cuts currently stored pCuts33,960
    int           nCuts;        // the number of cuts currently stored nCuts34,1031
    Fpga_Cut_t ** pArray;       // the temporary array of cutspArray35,1103
    Fpga_Cut_t ** pCuts1;       // the temporary array of cutspCuts136,1166
    Fpga_Cut_t ** pCuts2;       // the temporary array of cutspCuts237,1229
#define  FPGA_CUTS_MAX_COMPUTE FPGA_CUTS_MAX_COMPUTE42,1376
#define  FPGA_CUTS_MAX_USE FPGA_CUTS_MAX_USE45,1488
static int s_HashPrimes[10] = { 109, 499, 557, 619, 631, 709, 797, 881, 907, 991 };s_HashPrimes48,1566
static int bit_count[256] = {bit_count50,1651
#define FPGA_COUNT_ONES(FPGA_COUNT_ONES61,2220
#define Fpga_ListForEachCut(Fpga_ListForEachCut90,4356
#define Fpga_ListForEachCutSafe(Fpga_ListForEachCutSafe94,4567
void Fpga_MappingCuts( Fpga_Man_t * p )Fpga_MappingCuts130,6262
void Fpga_MappingCreatePiCuts( Fpga_Man_t * p )Fpga_MappingCreatePiCuts181,7768
Fpga_Cut_t * Fpga_CutCompute( Fpga_Man_t * p, Fpga_CutTable_t * pTable, Fpga_Node_t * pNode )Fpga_CutCompute211,8551
void Fpga_CutFilter( Fpga_Man_t * p, Fpga_Node_t * pNode )Fpga_CutFilter303,11430
Fpga_Cut_t * Fpga_CutMergeLists( Fpga_Man_t * p, Fpga_CutTable_t * pTable, Fpga_CutMergeLists354,12951
Fpga_Cut_t * Fpga_CutMergeLists2( Fpga_Man_t * p, Fpga_CutTable_t * pTable, Fpga_CutMergeLists2539,19598
int Fpga_CutMergeTwo( Fpga_Cut_t * pCut1, Fpga_Cut_t * pCut2, Fpga_Node_t * ppNodes[], int nNodesMax )Fpga_CutMergeTwo606,22153
Fpga_Cut_t * Fpga_CutUnionLists( Fpga_Cut_t * pList1, Fpga_Cut_t * pList2 )Fpga_CutUnionLists714,25633
int Fpga_CutBelongsToList( Fpga_Cut_t * pList, Fpga_Node_t * ppNodes[], int nNodes )Fpga_CutBelongsToList741,26419
int Fpga_CutCountAll( Fpga_Man_t * pMan )Fpga_CutCountAll767,27042
void Fpga_CutsCleanSign( Fpga_Man_t * pMan )Fpga_CutsCleanSign797,27865
void Fpga_CutsCleanRoot( Fpga_Man_t * pMan )Fpga_CutsCleanRoot819,28436
void Fpga_CutListPrint( Fpga_Man_t * pMan, Fpga_Node_t * pRoot )Fpga_CutListPrint843,29019
void Fpga_CutListPrint2( Fpga_Man_t * pMan, Fpga_Node_t * pRoot )Fpga_CutListPrint2865,29577
void Fpga_CutPrint_( Fpga_Man_t * pMan, Fpga_Cut_t * pCut, Fpga_Node_t * pRoot )Fpga_CutPrint_887,30123
Fpga_CutTable_t * Fpga_CutTableStart( Fpga_Man_t * pMan )Fpga_CutTableStart915,30692
void Fpga_CutTableStop( Fpga_CutTable_t * p )Fpga_CutTableStop942,31603
unsigned Fpga_CutTableHash( Fpga_Node_t * ppNodes[], int nNodes )Fpga_CutTableHash963,32075
int Fpga_CutTableLookup( Fpga_CutTable_t * p, Fpga_Node_t * ppNodes[], int nNodes )Fpga_CutTableLookup985,32689
Fpga_Cut_t * Fpga_CutTableConsider( Fpga_Man_t * pMan, Fpga_CutTable_t * p, Fpga_Node_t * ppNodes[], int nNodes )Fpga_CutTableConsider1018,33549
void Fpga_CutTableRestart( Fpga_CutTable_t * p )Fpga_CutTableRestart1057,34690
int Fpga_CutSortCutsCompare( Fpga_Cut_t ** pC1, Fpga_Cut_t ** pC2 )Fpga_CutSortCutsCompare1081,35201
Fpga_Cut_t * Fpga_CutSortCuts( Fpga_Man_t * pMan, Fpga_CutTable_t * p, Fpga_Cut_t * pList )Fpga_CutSortCuts1107,35817
int Fpga_CutList2Array( Fpga_Cut_t ** pArray, Fpga_Cut_t * pList )Fpga_CutList2Array1142,36982
Fpga_Cut_t * Fpga_CutArray2List( Fpga_Cut_t ** pArray, int nCuts )Fpga_CutArray2List1161,37437

src/map/fpga/fpga.c,394
void Fpga_Init( Abc_Frame_t * pAbc )Fpga_Init59,1626
void Fpga_End( Abc_Frame_t * pAbc )Fpga_End84,2551
int Fpga_CommandReadLibrary( Abc_Frame_t * pAbc, int argc, char **argv )Fpga_CommandReadLibrary101,2930
int Fpga_CommandPrintLibrary( Abc_Frame_t * pAbc, int argc, char **argv )Fpga_CommandPrintLibrary194,5831
void Fpga_SetSimpleLutLib( int nLutSize )Fpga_SetSimpleLutLib252,7249

src/map/fpga/fpgaGENERIC.c,0

src/map/fpga/fpgaMatch.c,797
int Fpga_MappingMatches( Fpga_Man_t * p, int fDelayOriented )Fpga_MappingMatches67,2752
int Fpga_MatchNode( Fpga_Man_t * p, Fpga_Node_t * pNode, int fDelayOriented )Fpga_MatchNode119,4213
int Fpga_MappingMatchesArea( Fpga_Man_t * p )Fpga_MappingMatchesArea196,6882
int Fpga_MappingMatchesAreaArray( Fpga_Man_t * p, Fpga_NodeVec_t * vNodes )Fpga_MappingMatchesAreaArray236,7988
int Fpga_MatchNodeArea( Fpga_Man_t * p, Fpga_Node_t * pNode )Fpga_MatchNodeArea268,8777
int Fpga_MappingMatchesSwitch( Fpga_Man_t * p )Fpga_MappingMatchesSwitch349,11408
int Fpga_MatchNodeSwitch( Fpga_Man_t * p, Fpga_Node_t * pNode )Fpga_MatchNodeSwitch389,12519
float Fpga_FindBestNode( Fpga_Man_t * p, Fpga_NodeVec_t * vNodes, Fpga_Node_t ** ppNode, Fpga_Cut_t ** ppCutBest )Fpga_FindBestNode756,23758

src/map/fpga/fpga.h,793
#define ABC__map__fpga__fpga_hABC__map__fpga__fpga_h20,517
#define FPGA_MAX_LUTSIZE FPGA_MAX_LUTSIZE37,1066
typedef struct Fpga_ManStruct_t_         Fpga_Man_t;Fpga_Man_t43,1317
typedef struct Fpga_NodeStruct_t_        Fpga_Node_t;Fpga_Node_t44,1370
typedef struct Fpga_NodeVecStruct_t_     Fpga_NodeVec_t;Fpga_NodeVec_t45,1424
typedef struct Fpga_CutStruct_t_         Fpga_Cut_t;Fpga_Cut_t46,1481
typedef struct Fpga_LutLibStruct_t_      Fpga_LutLib_t;Fpga_LutLib_t47,1534
#define Fpga_IsComplement(Fpga_IsComplement57,2032
#define Fpga_Regular(Fpga_Regular58,2100
#define Fpga_Not(Fpga_Not59,2177
#define Fpga_NotCond(Fpga_NotCond60,2253
#define Fpga_Ref(Fpga_Ref62,2330
#define Fpga_Deref(Fpga_Deref63,2353
#define Fpga_RecursiveDeref(Fpga_RecursiveDeref64,2375

src/map/fpga/fpgaSwitch.c,492
float Fpga_CutGetSwitchDerefed( Fpga_Man_t * pMan, Fpga_Node_t * pNode, Fpga_Cut_t * pCut )Fpga_CutGetSwitchDerefed43,1256
float Fpga_CutRefSwitch( Fpga_Man_t * pMan, Fpga_Node_t * pNode, Fpga_Cut_t * pCut, int fFanouts )Fpga_CutRefSwitch63,1865
float Fpga_CutDerefSwitch( Fpga_Man_t * pMan, Fpga_Node_t * pNode, Fpga_Cut_t * pCut, int fFanouts )Fpga_CutDerefSwitch95,2795
float Fpga_MappingGetSwitching( Fpga_Man_t * pMan, Fpga_NodeVec_t * vMapping )Fpga_MappingGetSwitching127,3676

src/map/fpga/fpgaCutUtils.c,1522
Fpga_Cut_t * Fpga_CutAlloc( Fpga_Man_t * p )Fpga_CutAlloc43,1228
Fpga_Cut_t * Fpga_CutDup( Fpga_Man_t * p, Fpga_Cut_t * pCutOld )Fpga_CutDup62,1677
void Fpga_CutFree( Fpga_Man_t * p, Fpga_Cut_t * pCut )Fpga_CutFree85,2270
void Fpga_CutPrint( Fpga_Man_t * p, Fpga_Node_t * pRoot, Fpga_Cut_t * pCut )Fpga_CutPrint102,2638
Fpga_Cut_t * Fpga_CutCreateSimple( Fpga_Man_t * p, Fpga_Node_t * pNode )Fpga_CutCreateSimple123,3197
float Fpga_CutGetRootArea( Fpga_Man_t * p, Fpga_Cut_t * pCut )Fpga_CutGetRootArea146,3770
Fpga_Cut_t * Fpga_CutListAppend( Fpga_Cut_t * pSetAll, Fpga_Cut_t * pSets )Fpga_CutListAppend162,4126
void Fpga_CutListRecycle( Fpga_Man_t * p, Fpga_Cut_t * pSetList, Fpga_Cut_t * pSave )Fpga_CutListRecycle190,4866
int Fpga_CutListCount( Fpga_Cut_t * pSets )Fpga_CutListCount211,5466
void Fpga_CutGetParameters( Fpga_Man_t * pMan, Fpga_Cut_t * pCut )Fpga_CutGetParameters279,7198
float Fpga_CutGetAreaFlow( Fpga_Man_t * pMan, Fpga_Cut_t * pCut )Fpga_CutGetAreaFlow314,8404
float Fpga_CutGetAreaRefed( Fpga_Man_t * pMan, Fpga_Cut_t * pCut )Fpga_CutGetAreaRefed340,9149
float Fpga_CutGetAreaDerefed( Fpga_Man_t * pMan, Fpga_Cut_t * pCut )Fpga_CutGetAreaDerefed362,9762
float Fpga_CutRef( Fpga_Man_t * pMan, Fpga_Node_t * pNode, Fpga_Cut_t * pCut, int fFanouts )Fpga_CutRef384,10403
float Fpga_CutDeref( Fpga_Man_t * pMan, Fpga_Node_t * pNode, Fpga_Cut_t * pCut, int fFanouts )Fpga_CutDeref421,11467
void Fpga_MappingSetUsedCuts( Fpga_Man_t * pMan )Fpga_MappingSetUsedCuts459,12506

src/map/fpga/fpgaTime.c,714
float Fpga_TimeCutComputeArrival( Fpga_Man_t * pMan, Fpga_Cut_t * pCut )Fpga_TimeCutComputeArrival44,1337
float Fpga_TimeCutComputeArrival_rec( Fpga_Man_t * pMan, Fpga_Cut_t * pCut )Fpga_TimeCutComputeArrival_rec69,2220
float Fpga_TimeComputeArrivalMax( Fpga_Man_t * p )Fpga_TimeComputeArrivalMax89,2803
void Fpga_TimeComputeRequiredGlobal( Fpga_Man_t * p, int fFirstTime )Fpga_TimeComputeRequiredGlobal136,4302
void Fpga_TimeComputeRequired( Fpga_Man_t * p, float fRequired )Fpga_TimeComputeRequired168,5383
void Fpga_TimePropagateRequired( Fpga_Man_t * p, Fpga_NodeVec_t * vNodes )Fpga_TimePropagateRequired205,6641
void Fpga_TimePropagateArrival( Fpga_Man_t * p )Fpga_TimePropagateArrival245,7850

src/map/fpga/fpgaLib.c,824
int         Fpga_LutLibReadVarMax( Fpga_LutLib_t * p )               { return p->LutMax;     }Fpga_LutLibReadVarMax43,1240
float *     Fpga_LutLibReadLutAreas( Fpga_LutLib_t * p )             { return p->pLutAreas;  }Fpga_LutLibReadLutAreas44,1335
float       Fpga_LutLibReadLutArea( Fpga_LutLib_t * p, int Size )    { assert( Size <= p->LutMax ); return p->pLutAreas[Size];  }Fpga_LutLibReadLutArea45,1430
Fpga_LutLib_t * Fpga_LutLibRead( char * FileName, int fVerbose )Fpga_LutLibRead58,1851
Fpga_LutLib_t * Fpga_LutLibDup( Fpga_LutLib_t * p )Fpga_LutLibDup165,5042
void Fpga_LutLibFree( Fpga_LutLib_t * pLutLib )Fpga_LutLibFree185,5507
void Fpga_LutLibPrint( Fpga_LutLib_t * pLutLib )Fpga_LutLibPrint205,5918
int Fpga_LutLibDelaysAreDiscrete( Fpga_LutLib_t * pLutLib )Fpga_LutLibDelaysAreDiscrete236,6819

src/map/fpga/fpgaTruth.c,372
DdNode * Fpga_TruthsCutBdd_rec( DdManager * dd, Fpga_Cut_t * pCut, Fpga_NodeVec_t * vVisited )Fpga_TruthsCutBdd_rec44,1292
void * Fpga_TruthsCutBdd( void * dd, Fpga_Cut_t * pCut )Fpga_TruthsCutBdd79,2685
void Fpga_CutVolume_rec( Fpga_Cut_t * pCut, Fpga_NodeVec_t * vVisited )Fpga_CutVolume_rec118,3928
int Fpga_CutVolume( Fpga_Cut_t * pCut )Fpga_CutVolume140,4560

src/map/super/super.c,329
void Super_Init( Abc_Frame_t * pAbc )Super_Init48,1420
void Super_End( Abc_Frame_t * pAbc )Super_End65,1869
int Super_CommandSupergatesAnd( Abc_Frame_t * pAbc, int argc, char **argv )Super_CommandSupergatesAnd82,2147
int Super_CommandSupergates( Abc_Frame_t * pAbc, int argc, char **argv )Super_CommandSupergates150,4035

src/map/super/super.h,65
#define ABC__map__super__super_hABC__map__super__super_h20,538

src/map/super/superAnd.c,3461
#define SUPER_MASK(SUPER_MASK29,764
#define SUPER_FULL SUPER_FULL30,819
typedef struct Super2_ManStruct_t_     Super2_Man_t;   // managerSuper2_Man_t33,915
typedef struct Super2_LibStruct_t_     Super2_Lib_t;   // librarySuper2_Lib_t34,981
typedef struct Super2_GateStruct_t_    Super2_Gate_t;  // supergateSuper2_Gate_t35,1047
struct Super2_ManStruct_t_Super2_ManStruct_t_37,1116
    Extra_MmFixed_t *   pMem;         // memory manager for all supergatespMem39,1145
    stmm_table *        tTable;       // mapping of truth tables into gatestTable40,1220
    int                 nTried;       // the total number of triednTried41,1296
struct Super2_LibStruct_t_Super2_LibStruct_t_44,1367
    int                 i;            // used to iterate through the tablei46,1396
    int                 k;            // used to iterate through the tablek47,1471
    int                 nInputs;      // the number of inputsnInputs48,1546
    int                 nMints;       // the number of mintermsnMints49,1608
    int                 nLevels;      // the number of logic levelsnLevels50,1672
    int                 nGates;       // the number of gates in the librarynGates51,1740
    int                 nGatesAlloc;  // the number of allocated placesnGatesAlloc52,1816
    Super2_Gate_t **    pGates;       // the gates themselvespGates53,1888
    unsigned            uMaskBit;     // the mask used to determine the compl bituMaskBit54,1950
struct Super2_GateStruct_t_Super2_GateStruct_t_57,2036
    unsigned            uTruth;       // the truth table of this supergateuTruth59,2066
    Super2_Gate_t *     pOne;         // the left wingpOne60,2141
    Super2_Gate_t *     pTwo;         // the right wingpTwo61,2196
    Super2_Gate_t *     pNext;        // the next gate in the tablepNext62,2252
#define Super2_IsComplement(Super2_IsComplement67,2368
#define Super2_Regular(Super2_Regular68,2438
#define Super2_Not(Super2_Not69,2519
#define Super2_NotCond(Super2_NotCond70,2599
#define Super2_LibForEachGate(Super2_LibForEachGate73,2726
#define Super2_LibForEachGate2(Super2_LibForEachGate277,2951
void Super2_Precompute( int nInputs, int nLevels, int fVerbose )Super2_Precompute113,4630
Super2_Man_t * Super2_ManStart()Super2_ManStart166,5943
void Super2_ManStop( Super2_Man_t * pMan )Super2_ManStop187,6488
Super2_Lib_t * Super2_LibStart()Super2_LibStart205,6885
Super2_Lib_t * Super2_LibDup( Super2_Lib_t * pLib )Super2_LibDup224,7308
void Super2_LibAddGate( Super2_Lib_t * pLib, Super2_Gate_t * pGate )Super2_LibAddGate250,8133
void Super2_LibStop( Super2_Lib_t * pLib )Super2_LibStop271,8686
Super2_Lib_t * Super2_LibFirst( Super2_Man_t * pMan, int nInputs )Super2_LibFirst288,9052
Super2_Lib_t * Super2_LibCompute( Super2_Man_t * pMan, Super2_Lib_t * pLib )Super2_LibCompute334,10498
static unsigned s_uMaskBit;s_uMaskBit447,14720
static unsigned s_uMaskAll;s_uMaskAll448,14748
void Super2_LibWrite( Super2_Lib_t * pLib )Super2_LibWrite461,15044
int Super2_LibCompareGates( Super2_Gate_t ** ppG1, Super2_Gate_t ** ppG2 )Super2_LibCompareGates516,16979
void Super2_LibWriteGate( FILE * pFile, Super2_Lib_t * pLib, Super2_Gate_t * pGate )Super2_LibWriteGate541,17652
char * Super2_LibWriteGate_rec( Super2_Gate_t * pGate, int fInv, int Level )Super2_LibWriteGate_rec577,18672
int Super2_LibWriteCompare( char * pStr1, char * pStr2 )Super2_LibWriteCompare661,21613

src/map/super/superWrite.c,0

src/map/super/superGENERIC.c,0

src/map/super/superGate.c,6841
#define SUPER_MASK(SUPER_MASK30,786
#define SUPER_FULL SUPER_FULL31,843
#define SUPER_NO_VAR SUPER_NO_VAR32,887
#define SUPER_EPSILON SUPER_EPSILON33,926
typedef struct Super_ManStruct_t_     Super_Man_t;   // managerSuper_Man_t36,1011
typedef struct Super_GateStruct_t_    Super_Gate_t;  // supergateSuper_Gate_t37,1075
struct Super_ManStruct_t_Super_ManStruct_t_39,1142
    char *              pName;        // the original genlib file namepName42,1188
    int                 nVarsMax;     // the number of inputsnVarsMax43,1259
    int                 nMints;       // the number of mintermsnMints44,1321
    int                 nLevels;      // the number of logic levelsnLevels45,1385
    int                 nGatesMax;    // the number of gates computednGatesMax46,1453
    float               tDelayMax;    // the max delay of the supergates in the librarytDelayMax47,1523
    float               tAreaMax;     // the max area of the supergates in the librarytAreaMax48,1611
    int                 fSkipInv;     // the flag says about skipping invertersfSkipInv49,1698
    int                 fWriteOldFormat; // in addition, writes the file in the old formatfWriteOldFormat50,1778
    int                 fVerbose;fVerbose51,1869
    Super_Gate_t *      pInputs[10];  // the input supergatespInputs54,1922
    int                 nGates;       // the number of gates in the librarynGates55,1984
    Super_Gate_t **     pGates;       // the gates themselvespGates56,2060
    stmm_table *        tTable;       // mapping of truth tables into gatestTable57,2122
    Extra_MmFixed_t *   pMem;         // memory manager for the supergatespMem60,2222
    Extra_MmFlex_t *    pMemFlex;     // memory manager for the fanin arrayspMemFlex61,2297
    int                 nTried;       // the total number of triednTried64,2393
    int                 nAdded;       // the number of entries addednAdded65,2460
    int                 nRemoved;     // the number of entries removednRemoved66,2529
    int                 nClasses;     // the number of gate classesnClasses67,2600
    int                 nUnique;      // the number of unique gatesnUnique68,2668
    int                 nLookups;     // the number of hash table lookupsnLookups69,2736
    int                 nAliases;     // the number of hash table lookups thrown away due to aliasingnAliases70,2810
    abctime             Time;         // the runtime of the generation procedureTime73,2928
    int                 TimeLimit;    // the runtime limit (in seconds)TimeLimit74,3009
    int                 TimeSec;      // the time passed (in seconds)TimeSec75,3081
    abctime             TimeStop;     // the time to stop computation (in miliseconds)TimeStop76,3151
    abctime             TimePrint;    // the time to print messageTimePrint77,3238
struct Super_GateStruct_t_Super_GateStruct_t_80,3309
    Mio_Gate_t *        pRoot;        // the root gate for this supergatepRoot82,3338
    unsigned            fVar :     1; // the flag signaling the elementary variablefVar83,3412
    unsigned            fSuper :   1; // the flag signaling the elementary variablefSuper84,3496
    unsigned            nFanins :  6; // the number of fanin gatesnFanins85,3580
    unsigned            Number :  24; // the number assigned in the processNumber86,3647
    unsigned            uTruth[2];    // the truth table of this supergateuTruth87,3723
    Super_Gate_t *      pFanins[6];   // the fanins of the gatepFanins88,3798
    float               Area;         // the area of this gateArea89,3862
    float               ptDelays[6];  // the pin-to-pin delays for all inputsptDelays90,3925
    float               tDelayMax;    // the maximum delaytDelayMax91,4003
    Super_Gate_t *      pNext;        // the next gate in the tablepNext92,4062
#define Super_ManForEachGate(Super_ManForEachGate97,4181
void Super_Precompute( Mio_Library_t * pLibGen, int nVarsMax, int nLevels, int nGatesMax, float tDelayMax, float tAreaMax, int TimeLimit, int fSkipInv, int fVerbose, char * pFileName )Super_Precompute140,6399
Vec_Str_t * Super_PrecomputeStr( Mio_Library_t * pLibGen, int nVarsMax, int nLevels, int nGatesMax, float tDelayMax, float tAreaMax, int TimeLimit, int fSkipInv, int fVerbose )Super_PrecomputeStr172,7518
void Super_First( Super_Man_t * pMan, int nVarsMax )Super_First276,10862
Super_Man_t * Super_Compute( Super_Man_t * pMan, Mio_Gate_t ** ppGates, int nGates, int nGatesMax, int fSkipInv )Super_Compute343,13292
int Super_CheckTimeout( ProgressBar * pPro, Super_Man_t * pMan )Super_CheckTimeout737,33272
void Super_TranferGatesToArray( Super_Man_t * pMan )Super_TranferGatesToArray766,33972
void Super_AddGateToTable( Super_Man_t * pMan, Super_Gate_t * pGate )Super_AddGateToTable795,34816
int Super_CompareGates( Super_Man_t * pMan, unsigned uTruth[], float Area, float tPinDelaysRes[], int nPins )Super_CompareGates824,35747
Super_Gate_t * Super_CreateGateNew( Super_Man_t * pMan, Mio_Gate_t * pRoot, Super_Gate_t ** pSupers, int nSupers, Super_CreateGateNew907,38510
Super_Man_t * Super_ManStart()Super_ManStart936,39504
void Super_ManStop( Super_Man_t * pMan )Super_ManStop956,40004
Vec_Str_t * Super_Write( Super_Man_t * pMan )Super_Write979,40477
void Super_WriteFileHeader( Super_Man_t * pMan, FILE * pFile )Super_WriteFileHeader1064,42973
void Super_WriteFileHeaderStr( Super_Man_t * pMan, Vec_Str_t * vStr )Super_WriteFileHeaderStr1089,44563
int Super_WriteCompare( Super_Gate_t ** ppG1, Super_Gate_t ** ppG2 )Super_WriteCompare1148,47278
int Super_DelayCompare( Super_Gate_t ** ppG1, Super_Gate_t ** ppG2 )Super_DelayCompare1162,47663
int Super_AreaCompare( Super_Gate_t ** ppG1, Super_Gate_t ** ppG2 )Super_AreaCompare1170,47889
void Super_WriteLibraryGateName_rec( Super_Gate_t * pGate, char * pBuffer )Super_WriteLibraryGateName_rec1195,48365
char * Super_WriteLibraryGateName( Super_Gate_t * pGate )Super_WriteLibraryGateName1216,48921
void Super_WriteLibraryGate( FILE * pFile, Super_Man_t * pMan, Super_Gate_t * pGate, int Num )Super_WriteLibraryGate1223,49104
void Super_WriteLibrary( Super_Man_t * pMan )Super_WriteLibrary1237,49918
void Super_WriteLibraryTreeFile_rec( FILE * pFile, Super_Man_t * pMan, Super_Gate_t * pSuper, int * pCounter )Super_WriteLibraryTreeFile_rec1306,51896
void Super_WriteLibraryTreeFile( Super_Man_t * pMan )Super_WriteLibraryTreeFile1329,52996
void Super_WriteLibraryTreeStr_rec( Vec_Str_t * vStr, Super_Man_t * pMan, Super_Gate_t * pSuper, int * pCounter )Super_WriteLibraryTreeStr_rec1386,54616
Vec_Str_t * Super_WriteLibraryTreeStr( Super_Man_t * pMan )Super_WriteLibraryTreeStr1417,56031
void Super_WriteLibraryTree( Super_Man_t * pMan )Super_WriteLibraryTree1446,57053

src/map/super/superInt.h,71
#define ABC__map__super__superInt_hABC__map__super__superInt_h20,513

src/map/cov/covTest.c,784
Min_Cube_t * Abc_NodeDeriveCoverPro( Min_Man_t * p, Min_Cube_t * pCover0, Min_Cube_t * pCover1 )Abc_NodeDeriveCoverPro45,1236
Min_Cube_t * Abc_NodeDeriveCoverSum( Min_Man_t * p, Min_Cube_t * pCover0, Min_Cube_t * pCover1 )Abc_NodeDeriveCoverSum80,2241
int Abc_NodeDeriveSops( Min_Man_t * p, Abc_Obj_t * pRoot, Vec_Ptr_t * vSupp, Vec_Ptr_t * vNodes )Abc_NodeDeriveSops116,3199
void Abc_NtkTestSop( Abc_Ntk_t * pNtk )Abc_NtkTestSop198,5681
Min_Cube_t * Abc_NodeDeriveCover( Min_Man_t * p, Min_Cube_t * pCov0, Min_Cube_t * pCov1, int fComp0, int fComp1 )Abc_NodeDeriveCover249,6917
int Abc_NodeDeriveEsops( Min_Man_t * p, Abc_Obj_t * pRoot, Vec_Ptr_t * vSupp, Vec_Ptr_t * vNodes )Abc_NodeDeriveEsops312,8672
void Abc_NtkTestEsop( Abc_Ntk_t * pNtk )Abc_NtkTestEsop378,10523

src/map/cov/covCore.c,965
Abc_Ntk_t * Abc_NtkSopEsopCover( Abc_Ntk_t * pNtk, int nFaninMax, int nCubesMax, int fUseEsop, int fUseSop, int fUseInvs, int fVerbose )Abc_NtkSopEsopCover60,2553
void Abc_NtkCovCovers( Cov_Man_t * p, Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCovCovers108,3788
int Abc_NtkCovCoversOne( Cov_Man_t * p, Abc_Ntk_t * pNtk, int fVerbose )Abc_NtkCovCoversOne153,4800
void Abc_NtkCovCovers_rec( Cov_Man_t * p, Abc_Obj_t * pObj, Vec_Ptr_t * vBoundary )Abc_NtkCovCovers_rec240,7124
Vec_Int_t * Abc_NodeCovSupport( Cov_Man_t * p, Vec_Int_t * vSupp0, Vec_Int_t * vSupp1 )Abc_NodeCovSupport282,8600
int Abc_NodeCovPropagate( Cov_Man_t * p, Abc_Obj_t * pObj )Abc_NodeCovPropagate359,10884
Min_Cube_t * Abc_NodeCovProduct( Cov_Man_t * p, Min_Cube_t * pCover0, Min_Cube_t * pCover1, int fEsop, int nSupp )Abc_NodeCovProduct469,14637
Min_Cube_t * Abc_NodeCovSum( Cov_Man_t * p, Min_Cube_t * pCover0, Min_Cube_t * pCover1, int fEsop, int nSupp )Abc_NodeCovSum573,17713

src/map/cov/covMinSop.c,575
void Min_SopMinimize( Min_Man_t * p )Min_SopMinimize47,1286
void Min_SopRewrite( Min_Man_t * p )Min_SopRewrite76,1921
int Min_SopAddCubeInt( Min_Man_t * p, Min_Cube_t * pCube )Min_SopAddCubeInt361,11875
void Min_SopAddCube( Min_Man_t * p, Min_Cube_t * pCube )Min_SopAddCube433,13854
void Min_SopContain( Min_Man_t * p )Min_SopContain456,14333
void Min_SopDist1Merge( Min_Man_t * p )Min_SopDist1Merge494,15360
Min_Cube_t * Min_SopComplement( Min_Man_t * p, Min_Cube_t * pSharp )Min_SopComplement526,16263
int Min_SopCheck( Min_Man_t * p )Min_SopCheck585,18109

src/map/cov/covMinEsop.c,297
void Min_EsopMinimize( Min_Man_t * p )Min_EsopMinimize47,1290
void Min_EsopRewrite( Min_Man_t * p )Min_EsopRewrite79,2309
int Min_EsopAddCubeInt( Min_Man_t * p, Min_Cube_t * pCube )Min_EsopAddCubeInt220,7074
void Min_EsopAddCube( Min_Man_t * p, Min_Cube_t * pCube )Min_EsopAddCube291,9125

src/map/cov/covMinMan.c,181
Min_Man_t * Min_ManAlloc( int nVars )Min_ManAlloc45,1272
void Min_ManClean( Min_Man_t * p, int nSupp )Min_ManClean83,2589
void Min_ManFree( Min_Man_t * p )Min_ManFree104,3118

src/map/cov/covInt.h,4687
#define ABC__map__cov__covInt_hABC__map__cov__covInt_h22,549
typedef struct Min_Man_t_  Min_Man_t;Min_Man_t34,859
typedef struct Min_Cube_t_ Min_Cube_t;Min_Cube_t35,897
struct Min_Man_t_Min_Man_t_37,937
    int               nVars;          // the number of varsnVars39,957
    int               nWords;         // the number of wordsnWords40,1017
    Extra_MmFixed_t * pMemMan;        // memory manager for cubespMemMan41,1078
    Min_Cube_t *      pOne0;          // tautology cubepOne043,1167
    Min_Cube_t *      pOne1;          // tautology cubepOne144,1223
    Min_Cube_t *      pTriv0[2];      // trivial cubepTriv045,1279
    Min_Cube_t *      pTriv1[2];      // trivial cubepTriv146,1333
    Min_Cube_t *      pTemp;          // cube for computing the distancepTemp47,1387
    Min_Cube_t *      pBubble;        // cube used as a separatorpBubble48,1460
    int               nCubes;         // the number of cubesnCubes50,1569
    Min_Cube_t **     ppStore;        // storage for cubes by number of literalsppStore51,1630
struct Min_Cube_t_Min_Cube_t_54,1715
    Min_Cube_t *      pNext;          // the pointer to the next cube in the coverpNext56,1736
    unsigned          nVars    : 10;  // the number of variablesnVars57,1819
    unsigned          nWords   : 12;  // the number of machine wordsnWords58,1884
    unsigned          nLits    : 10;  // the number of literals in the cubenLits59,1953
    unsigned          uData[1];       // the bit-data for the cubeuData60,2029
#define Min_CoverForEachCube(Min_CoverForEachCube65,2163
#define Min_CoverForEachCubeSafe(Min_CoverForEachCubeSafe69,2394
#define Min_CoverForEachCubePrev(Min_CoverForEachCubePrev75,2771
static inline int  Min_CubeHasBit( Min_Cube_t * p, int i )              { return (p->uData[(i)>>5] & (1<<((i) & 31))) > 0;     }Min_CubeHasBit83,3189
static inline void Min_CubeSetBit( Min_Cube_t * p, int i )              { p->uData[(i)>>5] |= (1<<((i) & 31));                 }Min_CubeSetBit84,3318
static inline void Min_CubeXorBit( Min_Cube_t * p, int i )              { p->uData[(i)>>5] ^= (1<<((i) & 31));                 }Min_CubeXorBit85,3447
static inline int  Min_CubeGetVar( Min_Cube_t * p, int Var )            { return 3 & (p->uData[(2*Var)>>5] >> ((2*Var) & 31)); }Min_CubeGetVar86,3576
static inline void Min_CubeXorVar( Min_Cube_t * p, int Var, int Value ) { p->uData[(2*Var)>>5] ^= (Value<<((2*Var) & 31));     }Min_CubeXorVar87,3705
static inline Min_Cube_t * Min_CubeAlloc( Min_Man_t * p )Min_CubeAlloc126,5769
static inline Min_Cube_t * Min_CubeAllocVar( Min_Man_t * p, int iVar, int fCompl )Min_CubeAllocVar149,6392
static inline Min_Cube_t * Min_CubeDup( Min_Man_t * p, Min_Cube_t * pCopy )Min_CubeDup169,6871
static inline void Min_CubeRecycle( Min_Man_t * p, Min_Cube_t * pCube )Min_CubeRecycle189,7383
static inline void Min_CoverRecycle( Min_Man_t * p, Min_Cube_t * pCover )Min_CoverRecycle205,7778
static inline int Min_CubeCountLits( Min_Cube_t * pCube )Min_CubeCountLits224,8284
static inline void Min_CubeGetLits( Min_Cube_t * pCube, Vec_Int_t * vLits )Min_CubeGetLits249,8900
static inline int Min_CoverCountCubes( Min_Cube_t * pCover )Min_CoverCountCubes274,9557
static inline int Min_CubesDisjoint( Min_Cube_t * pCube0, Min_Cube_t * pCube1 )Min_CubesDisjoint295,10011
static inline void Min_CoverGetDisjVars( Min_Cube_t * pThis, Min_Cube_t * pCube, Vec_Int_t * vVars )Min_CoverGetDisjVars321,10693
static inline int Min_CubesDistOne( Min_Cube_t * pCube0, Min_Cube_t * pCube1, Min_Cube_t * pTemp )Min_CubesDistOne349,11491
static inline int Min_CubesDistTwo( Min_Cube_t * pCube0, Min_Cube_t * pCube1, int * pVar0, int * pVar1 )Min_CubesDistTwo390,12620
static inline Min_Cube_t * Min_CubesProduct( Min_Man_t * p, Min_Cube_t * pCube0, Min_Cube_t * pCube1 )Min_CubesProduct456,14420
static inline Min_Cube_t * Min_CubesXor( Min_Man_t * p, Min_Cube_t * pCube0, Min_Cube_t * pCube1 )Min_CubesXor479,15072
static inline int Min_CubesAreEqual( Min_Cube_t * pCube0, Min_Cube_t * pCube1 )Min_CubesAreEqual502,15720
static inline int Min_CubeIsContained( Min_Cube_t * pCube0, Min_Cube_t * pCube1 )Min_CubeIsContained522,16238
static inline void Min_CubesTransform( Min_Cube_t * pCube, Min_Cube_t * pDist, Min_Cube_t * pMask )Min_CubesTransform542,16774
static inline void Min_CubesTransformOr( Min_Cube_t * pCube, Min_Cube_t * pDist )Min_CubesTransformOr563,17369
static inline void Min_CoverExpandRemoveEqual( Min_Man_t * p, Min_Cube_t * pCover )Min_CoverExpandRemoveEqual583,17847
static inline int Min_CoverContainsCube( Min_Man_t * p, Min_Cube_t * pCube )Min_CoverContainsCube620,18896

src/map/cov/cov.h,3120
#define ABC__map__cov__cov_hABC__map__cov__cov_h22,541
typedef struct Cov_Man_t_  Cov_Man_t;Cov_Man_t34,867
typedef struct Cov_Obj_t_  Cov_Obj_t;Cov_Obj_t35,905
struct Cov_Obj_t_Cov_Obj_t_38,976
    Min_Cube_t *      pCover[3];    // pos/neg/esoppCover40,996
    Vec_Int_t *       vSupp;        // computed support (all nodes except CIs)vSupp41,1048
struct Cov_Man_t_Cov_Man_t_45,1169
    int               nFaninMax;    // the number of varsnFaninMax48,1220
    int               nCubesMax;    // the limit on the number of cubes in the intermediate coversnCubesMax49,1278
    int               nWords;       // the number of wordsnWords50,1377
    Vec_Int_t *       vFanCounts;   // fanout countsvFanCounts51,1436
    Vec_Ptr_t *       vObjStrs;     // object structuresvObjStrs52,1489
    void *            pMemory;      // memory for the internal data strcturespMemory53,1546
    Min_Man_t *       pManMin;      // the cube managerpManMin54,1624
    int               fUseEsop;     // enables ESOPsfUseEsop55,1680
    int               fUseSop;      // enables SOPsfUseSop56,1733
    Vec_Int_t *       vComTo0;      // mapping of common variables into first faninvComTo058,1822
    Vec_Int_t *       vComTo1;      // mapping of common variables into second faninvComTo159,1906
    Vec_Int_t *       vPairs0;      // the first var in each pair of common varsvPairs060,1991
    Vec_Int_t *       vPairs1;      // the second var in each pair of common varsvPairs161,2072
    Vec_Int_t *       vTriv0;       // trival support of the first nodevTriv062,2154
    Vec_Int_t *       vTriv1;       // trival support of the second nodevTriv163,2226
    int               nSupps;       // supports creatednSupps65,2317
    int               nSuppsMax;    // the maximum number of supportsnSuppsMax66,2373
    int               nBoundary;    // the boundary sizenBoundary67,2443
    int               nNodes;       // the number of nodes processednNodes68,2500
static inline Cov_Obj_t *  Abc_ObjGetStr( Abc_Obj_t * pObj )                       { return (Cov_Obj_t *)Vec_PtrEntry(((Cov_Man_t *)pObj->pNtk->pManCut)->vObjStrs, pObj->Id); }Abc_ObjGetStr71,2573
static inline void         Abc_ObjSetSupp( Abc_Obj_t * pObj, Vec_Int_t * vVec )    { Abc_ObjGetStr(pObj)->vSupp = vVec;   }Abc_ObjSetSupp73,2751
static inline Vec_Int_t *  Abc_ObjGetSupp( Abc_Obj_t * pObj )                      { return Abc_ObjGetStr(pObj)->vSupp;   }Abc_ObjGetSupp74,2875
static inline void         Abc_ObjSetCover2( Abc_Obj_t * pObj, Min_Cube_t * pCov ) { Abc_ObjGetStr(pObj)->pCover[2] = pCov; }Abc_ObjSetCover276,3000
static inline Min_Cube_t * Abc_ObjGetCover2( Abc_Obj_t * pObj )                    { return Abc_ObjGetStr(pObj)->pCover[2]; }Abc_ObjGetCover277,3126
static inline void         Abc_ObjSetCover( Abc_Obj_t * pObj, Min_Cube_t * pCov, int Pol ) { Abc_ObjGetStr(pObj)->pCover[Pol] = pCov; }Abc_ObjSetCover79,3253
static inline Min_Cube_t * Abc_ObjGetCover( Abc_Obj_t * pObj, int Pol )                    { return Abc_ObjGetStr(pObj)->pCover[Pol]; }Abc_ObjGetCover80,3389

src/map/cov/covBuild.c,1116
Abc_Obj_t * Abc_NtkCovDeriveCube( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj, Min_Cube_t * pCube, Vec_Int_t * vSupp, int fCompl )Abc_NtkCovDeriveCube45,1281
Abc_Obj_t * Abc_NtkCovDeriveNode_rec( Cov_Man_t * p, Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj, int Level )Abc_NtkCovDeriveNode_rec103,3254
Abc_Ntk_t * Abc_NtkCovDerive( Cov_Man_t * p, Abc_Ntk_t * pNtk )Abc_NtkCovDerive183,5688
Abc_Obj_t * Abc_NtkCovDeriveInv( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj, int fCompl )Abc_NtkCovDeriveInv224,6814
Abc_Obj_t * Abc_NtkCovDeriveCubeInv( Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj, Min_Cube_t * pCube, Vec_Int_t * vSupp )Abc_NtkCovDeriveCubeInv245,7388
Abc_Obj_t * Abc_NtkCovDeriveNodeInv_rec( Cov_Man_t * p, Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj, int fCompl )Abc_NtkCovDeriveNodeInv_rec300,9435
Abc_Ntk_t * Abc_NtkCovDeriveClean( Cov_Man_t * p, Abc_Ntk_t * pNtk )Abc_NtkCovDeriveClean357,11261
Abc_Obj_t * Abc_NtkCovDerive_rec( Cov_Man_t * p, Abc_Ntk_t * pNtkNew, Abc_Obj_t * pObj )Abc_NtkCovDerive_rec396,12336
Abc_Ntk_t * Abc_NtkCovDeriveRegular( Cov_Man_t * p, Abc_Ntk_t * pNtk )Abc_NtkCovDeriveRegular503,15789

src/map/cov/covMinUtil.c,926
void Min_CubeCreate( Vec_Str_t * vCover, Min_Cube_t * pCube, char Type )Min_CubeCreate45,1235
void Min_CoverCreate( Vec_Str_t * vCover, Min_Cube_t * pCover, char Type )Min_CoverCreate85,2360
void Min_CubeWrite( FILE * pFile, Min_Cube_t * pCube )Min_CubeWrite106,2875
void Min_CoverWrite( FILE * pFile, Min_Cube_t * pCover )Min_CoverWrite140,3745
void Min_CoverWriteStore( FILE * pFile, Min_Man_t * p )Min_CoverWriteStore159,4166
void Min_CoverWriteFile( Min_Cube_t * pCover, char * pName, int fEsop )Min_CoverWriteFile190,4848
void Min_CoverCheck( Min_Man_t * p )Min_CoverCheck223,5923
int Min_CubeCheck( Min_Cube_t * pCube )Min_CubeCheck244,6372
Min_Cube_t * Min_CoverCollect( Min_Man_t * p, int nSuppSize )Min_CoverCollect264,6836
void Min_CoverExpand( Min_Man_t * p, Min_Cube_t * pCover )Min_CoverExpand294,7624
int Min_CoverSuppVarNum( Min_Man_t * p, Min_Cube_t * pCover )Min_CoverSuppVarNum317,8220

src/map/cov/covMan.c,239
Cov_Man_t * Cov_ManAlloc( Abc_Ntk_t * pNtk, int nFaninMax, int nCubesMax )Cov_ManAlloc45,1236
void Cov_ManFree( Cov_Man_t * p )Cov_ManFree92,2834
void Abc_NodeCovDropData( Cov_Man_t * p, Abc_Obj_t * pObj )Abc_NodeCovDropData126,3662

src/map/mpm/mpmPre.c,5245
typedef struct Ifd_Obj_t_ Ifd_Obj_t;Ifd_Obj_t39,991
struct Ifd_Obj_t_Ifd_Obj_t_40,1028
    unsigned          nFreq : 18;   // frequencynFreq42,1048
    unsigned          nAnds :  6;   // number of AND gatesnAnds43,1097
    unsigned          nSupp :  5;   // support sizenSupp44,1156
    unsigned          Type  :  2;   // typeType45,1208
    unsigned          fWay  :  1;   // transparent edgefWay46,1252
    unsigned          pFans[3];     // faninspFans47,1308
typedef struct Ifd_Man_t_ Ifd_Man_t;Ifd_Man_t50,1358
struct Ifd_Man_t_Ifd_Man_t_51,1395
    Ifd_Obj_t *       pObjs;pObjs53,1415
    int               nObjs;nObjs54,1444
    int               nObjsAlloc;nObjsAlloc55,1473
    Vec_Int_t *       vArgs;     // iDsd1 op iDsdCvArgs57,1533
    Vec_Int_t *       vRes;      // result of operationvRes58,1584
    Hsh_IntMan_t *    vHash;     // hash table vHash59,1640
    Vec_Int_t *       vMarks;    // marks where given N beginsvMarks60,1688
    Vec_Wrd_t *       vTruths;   // truth tablesvTruths61,1751
    Vec_Int_t *       vClauses;  // truth tablesvClauses62,1800
    Vec_Int_t *       vSuper;vSuper64,1867
static inline int         Ifd_ObjIsVar( Ifd_Obj_t * p ) { return p->Type == 0; }Ifd_ObjIsVar68,1902
static inline int         Ifd_ObjIsAnd( Ifd_Obj_t * p ) { return p->Type == 1; }Ifd_ObjIsAnd69,1983
static inline int         Ifd_ObjIsXor( Ifd_Obj_t * p ) { return p->Type == 2; }Ifd_ObjIsXor70,2064
static inline int         Ifd_ObjIsMux( Ifd_Obj_t * p ) { return p->Type == 3; }Ifd_ObjIsMux71,2145
static inline Ifd_Obj_t * Ifd_ManObj( Ifd_Man_t * p, int i )           { assert( i >= 0 && i < p->nObjs );                              return p->pObjs + i;    }Ifd_ManObj73,2227
static inline Ifd_Obj_t * Ifd_ManObjFromLit( Ifd_Man_t * p, int iLit ) { return Ifd_ManObj( p, Abc_Lit2Var(iLit) );                                             }Ifd_ManObjFromLit74,2389
static inline int         Ifd_ObjId( Ifd_Man_t * p, Ifd_Obj_t * pObj ) { assert( pObj - p->pObjs >= 0 && pObj - p->pObjs < p->nObjs );  return pObj - p->pObjs; }Ifd_ObjId75,2551
static inline int         Ifd_LitSuppSize( Ifd_Man_t * p, int iLit )   { return iLit > 0 ? Ifd_ManObjFromLit(p, iLit)->nSupp : 0;                               }Ifd_LitSuppSize76,2713
static inline int         Ifd_LitNumAnds( Ifd_Man_t * p, int iLit )    { return iLit > 0 ? Ifd_ManObjFromLit(p, iLit)->nAnds : 0;                               }Ifd_LitNumAnds77,2875
#define Ifd_ManForEachNodeWithSupp(Ifd_ManForEachNodeWithSupp79,3038
Ifd_Man_t * Ifd_ManStart()Ifd_ManStart98,3697
void Ifd_ManStop( Ifd_Man_t * p )Ifd_ManStop122,4537
void Ifd_ObjPrint_rec( Ifd_Man_t * p, int iLit, int * pCounter, int DiffType )Ifd_ObjPrint_rec154,5290
void Ifd_ObjPrint( Ifd_Man_t * p, int iLit )Ifd_ObjPrint172,6312
void Ifd_ManPrint2( Ifd_Man_t * p )Ifd_ManPrint2181,6540
void Ifd_ManPrint( Ifd_Man_t * p )Ifd_ManPrint191,6743
word Ifd_ObjTruth_rec( Ifd_Man_t * p, int iLit, int * pCounter )Ifd_ObjTruth_rec221,7577
word Ifd_ObjTruth( Ifd_Man_t * p, int iLit )Ifd_ObjTruth257,8797
void Ifd_ManTruthAll( Ifd_Man_t * p )Ifd_ManTruthAll268,9077
int Mpm_ComputeCnfSizeOne( word Truth, int nVars, Vec_Int_t * vCover, Vec_Str_t * vCnf )Mpm_ComputeCnfSizeOne293,9710
void Mpm_ComputeCnfSizeAll( Ifd_Man_t * p )Mpm_ComputeCnfSizeAll332,11081
int Ifd_ManHashLookup( Ifd_Man_t * p, int iDsd0, int iDsd1, int iDsdC, int Type )Ifd_ManHashLookup356,11742
void Ifd_ManHashInsert( Ifd_Man_t * p, int iDsd0, int iDsd1, int iDsdC, int Type, int Res )Ifd_ManHashInsert367,12092
int Ifd_ManHashFindOrAdd( Ifd_Man_t * p, int iDsd0, int iDsd1, int iDsdC, int Type )Ifd_ManHashFindOrAdd381,12645
void Ifd_ManOperSuper_rec( Ifd_Man_t * p, int iLit, int Type, Vec_Int_t * vObjs )Ifd_ManOperSuper_rec428,14805
int Ifd_ManOper( Ifd_Man_t * p, int iDsd0, int iDsd1, int iDsdC, int Type )Ifd_ManOper439,15188
int Ifd_ManFindDsd_rec( Ifd_Man_t * pMan, char * pStr, char ** p, int * pMatches )Ifd_ManFindDsd_rec510,17395
#define IFM_MAX_STR IFM_MAX_STR563,19107
#define IFM_MAX_VAR IFM_MAX_VAR564,19132
int * Ifd_ManComputeMatches( char * p )Ifd_ManComputeMatches565,19157
int Ifd_ManFindDsd( Ifd_Man_t * pMan, char * p )Ifd_ManFindDsd583,19715
void Ifd_ManDsdTest2()Ifd_ManDsdTest2608,20253
Vec_Wrd_t * Ifd_ManDsdTruths( int nVars )Ifd_ManDsdTruths631,20758
void Ifd_ManDsdPermPrint( int * perm, int size ) Ifd_ManDsdPermPrint706,23587
Vec_Int_t * Ifd_ManDsdPermJT( int n ) Ifd_ManDsdPermJT713,23738
int Ifd_ManDsdTest4() Ifd_ManDsdTest4749,24804
static inline word Extra_Truth6SwapAdjacent( word t, int iVar )Extra_Truth6SwapAdjacent775,25367
static inline word Extra_Truth6ChangePhase( word t, int iVar)Extra_Truth6ChangePhase788,26169
Vec_Wrd_t * Extra_Truth6AllConfigs2( word t, int * pComp, int * pPerm, int nVars )Extra_Truth6AllConfigs2802,26647
Vec_Wrd_t * Extra_Truth6AllConfigs( word t, int * pComp, int * pPerm, int nVars )Extra_Truth6AllConfigs835,27618
void Ifd_ComputeSignature( word uTruth, int pCounts[6] )Ifd_ComputeSignature882,28782
int Ifd_ManDsdTest33() Ifd_ManDsdTest33897,29331
int Ifd_ManDsdTest() Ifd_ManDsdTest929,30171
int Ifd_ManDsdTest55() Ifd_ManDsdTest55995,32682

src/map/mpm/mpmInt.h,12018
#define ABC__map__mpm_Int_hABC__map__mpm_Int_h22,540
#define MPM_CUT_MAX MPM_CUT_MAX50,1359
#define MPM_UNIT_TIME MPM_UNIT_TIME52,1388
#define MPM_UNIT_AREA MPM_UNIT_AREA53,1416
#define MPM_UNIT_EDGE MPM_UNIT_EDGE54,1444
#define MPM_UNIT_REFS MPM_UNIT_REFS55,1472
typedef struct Mpm_Cut_t_ Mpm_Cut_t;  // 8 bytes + NLeaves * 4 bytesMpm_Cut_t61,1721
struct Mpm_Cut_t_Mpm_Cut_t_62,1790
    int              hNext;                    // next cuthNext64,1810
    unsigned         iFunc     : 25;           // functioniFunc65,1869
    unsigned         fCompl    :  1;fCompl66,1928
    unsigned         fUseless  :  1;           // internal flagfUseless67,1965
    unsigned         nLeaves   :  5;           // leavesnLeaves68,2029
    int              pLeaves[1];               // leavespLeaves69,2086
typedef struct Mpm_Uni_t_ Mpm_Uni_t;  // 48 bytesMpm_Uni_t71,2146
struct Mpm_Uni_t_Mpm_Uni_t_72,2196
    int              mTime;                    // arrival timemTime74,2217
    int              mArea;                    // area (flow)mArea75,2280
    int              mEdge;                    // edge (flow)mEdge76,2342
    int              mAveRefs;                 // area referencesmAveRefs77,2404
    word             uSign;                    // cut signatureuSign78,2470
    int              Cost;                     // user costCost79,2534
    Mpm_Cut_t        pCut;                     // new cutpCut80,2594
    int              Data[MPM_VAR_MAX-1];      // paddingData81,2652
typedef struct Mpm_Dsd_t_ Mpm_Dsd_t;Mpm_Dsd_t84,2714
struct Mpm_Dsd_t_Mpm_Dsd_t_85,2751
    int              nVars;                    // support sizenVars87,2771
    int              nAnds;                    // the number of AND gatesnAnds88,2834
    int              nClauses;                 // the number of CNF clausesnClauses89,2908
    word             uTruth;                   // truth tableuTruth90,2984
    char *           pStr;                     // description pStr91,3046
typedef struct Mpm_Man_t_ Mpm_Man_t;Mpm_Man_t94,3113
struct Mpm_Man_t_Mpm_Man_t_95,3150
    Mig_Man_t *      pMig;                     // AIG managerpMig97,3170
    Mpm_Par_t *      pPars;                    // mapping parameterspPars98,3232
    int              nLutSize;                 // LUT sizenLutSize100,3327
    int              nNumCuts;                 // cut countnNumCuts101,3386
    int              nTruWords;                // words in the truth tablenTruWords102,3446
    Mpm_LibLut_t *   pLibLut;                  // LUT librarypLibLut103,3521
    int              fMainRun;                 // after preprocessing is finishedfMainRun105,3611
    int              GloRequired;              // global arrival timeGloRequired106,3693
    word             GloArea;                  // total areaGloArea107,3763
    word             GloEdge;                  // total edgeGloEdge108,3824
    Mmr_Step_t *     pManCuts;                 // cut memorypManCuts110,3907
    int              nCutStore;                // number of cuts in storagenCutStore112,3997
    Mpm_Uni_t *      pCutStore[MPM_CUT_MAX+1]; // storage for cutspCutStore113,4073
    Mpm_Uni_t        pCutUnits[MPM_CUT_MAX+1]; // cut info unitspCutUnits114,4140
    Vec_Ptr_t        vFreeUnits;               // free cut info unitsvFreeUnits115,4205
    Vec_Ptr_t *      vTemp;                    // storage for cutsvTemp116,4275
    int (* pCutCmp) (Mpm_Uni_t *, Mpm_Uni_t *);// procedure to compare cutspCutCmp118,4364
    int              nCuts[3];                 // fanin cut countsnCuts120,4469
    Mpm_Cut_t *      pCuts[3][MPM_CUT_MAX+1];  // fanin cutspCuts121,4536
    word             pSigns[3][MPM_CUT_MAX+1]; // fanin cut signaturespSigns122,4597
    Vec_Mem_t *      vTtMem;                   // truth table memory and hash tablevTtMem124,4688
    int              funcCst0;                 // constant 0funcCst0125,4772
    int              funcVar0;                 // variable 0funcVar0126,4833
    word             Truth0[(1 << ((MPM_VAR_MAX)-6))];Truth0127,4894
    word             Truth1[(1 << ((MPM_VAR_MAX)-6))];Truth1128,4949
    word             TruthC[(1 << ((MPM_VAR_MAX)-6))];TruthC129,5004
    word             Truth[(1 << ((MPM_VAR_MAX)-6))];Truth130,5059
    Mpm_Dsd_t *      pDsd6;                    // NPN class informationpDsd6132,5124
    Hsh_IntMan_t *   pHash;                    // maps DSD functions into NPN classespHash133,5196
    Vec_Int_t *      vConfgRes;                // configurationsvConfgRes134,5282
    Vec_Wrd_t *      vPerm6;                   // permutations of DSD classesvPerm6135,5347
    char             Perm6[720][6];            // permutationsPerm6136,5425
    Vec_Int_t *      vMap2Perm;                // maps number into its permutationvMap2Perm137,5488
    unsigned         uPermMask[3];uPermMask138,5571
    unsigned         uComplMask[3];uComplMask139,5606
    Vec_Wec_t *      vNpnConfigs;vNpnConfigs140,5642
    Vec_Int_t        vCutBests;                // cut bestvCutBests142,5702
    Vec_Int_t        vCutLists;                // cut listvCutLists143,5761
    Vec_Int_t        vMigRefs;                 // original referencesvMigRefs144,5820
    Vec_Int_t        vMapRefs;                 // exact mapping referencesvMapRefs145,5890
    Vec_Int_t        vEstRefs;                 // estimated mapping referencesvEstRefs146,5965
    Vec_Int_t        vRequireds;               // required timevRequireds147,6044
    Vec_Int_t        vTimes;                   // arrival timevTimes148,6108
    Vec_Int_t        vAreas;                   // areavAreas149,6171
    Vec_Int_t        vEdges;                   // edgevEdges150,6226
    int              nCountDsd[600];nCountDsd151,6281
    int              nNonDsd;nNonDsd152,6318
    int              nNoMatch;nNoMatch153,6348
    int              nCutsMerged;nCutsMerged155,6397
    int              nCutsMergedAll;nCutsMergedAll156,6431
    int              nSmallSupp;nSmallSupp157,6468
    abctime          timeDerive;timeDerive158,6501
    abctime          timeMerge;timeMerge159,6534
    abctime          timeEval;timeEval160,6566
    abctime          timeCompare;timeCompare161,6597
    abctime          timeStore;timeStore162,6631
    abctime          timeOther;timeOther163,6663
    abctime          timeTotal;timeTotal164,6695
static inline int         Mpm_ObjCutBest( Mpm_Man_t * p, Mig_Obj_t * pObj )              { return Vec_IntEntry(&p->vCutBests, Mig_ObjId(pObj));            }Mpm_ObjCutBest171,6951
static inline void        Mpm_ObjSetCutBest( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )    { Vec_IntWriteEntry(&p->vCutBests, Mig_ObjId(pObj), i);           }Mpm_ObjSetCutBest172,7108
static inline int         Mpm_CutWordNum( int nLeaves )                                  { return ((sizeof(Mpm_Cut_t) + (nLeaves << 2)) >> 3);             }Mpm_CutWordNum174,7266
static inline Mpm_Cut_t * Mpm_CutFetch( Mpm_Man_t * p, int h )                           { Mpm_Cut_t * pCut = (Mpm_Cut_t *)Mmr_StepEntry( p->pManCuts, h );  assert( Mpm_CutWordNum(pCut->nLeaves) == (h & p->pManCuts->uMask) ); return pCut; }Mpm_CutFetch175,7423
static inline Mpm_Cut_t * Mpm_ObjCutBestP( Mpm_Man_t * p, Mig_Obj_t * pObj )             { return Mpm_CutFetch( p, Mpm_ObjCutBest(p, pObj) );              }Mpm_ObjCutBestP176,7664
static inline int         Mpm_ObjCutList( Mpm_Man_t * p, Mig_Obj_t * pObj )              { return Vec_IntEntry(&p->vCutLists, Mig_ObjId(pObj));            }Mpm_ObjCutList178,7822
static inline int *       Mpm_ObjCutListP( Mpm_Man_t * p, Mig_Obj_t * pObj )             { return Vec_IntEntryP(&p->vCutLists, Mig_ObjId(pObj));           }Mpm_ObjCutListP179,7979
static inline void        Mpm_ObjSetCutList( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )    { Vec_IntWriteEntry(&p->vCutLists, Mig_ObjId(pObj), i);           }Mpm_ObjSetCutList180,8136
static inline int         Mpm_CutLeafNum( Mpm_Cut_t * pCut )                             { return pCut->nLeaves;                                           }Mpm_CutLeafNum182,8294
static inline word *      Mpm_CutTruth( Mpm_Man_t * p, int iFunc )                       { return Vec_MemReadEntry(p->vTtMem, iFunc);                      }Mpm_CutTruth183,8451
static inline int         Mig_ObjMigRefNum( Mpm_Man_t * p, Mig_Obj_t * pObj )            { return Vec_IntEntry(&p->vMigRefs, Mig_ObjId(pObj));             }Mig_ObjMigRefNum185,8609
static inline int         Mig_ObjMigRefDec( Mpm_Man_t * p, Mig_Obj_t * pObj )            { return Vec_IntAddToEntry(&p->vMigRefs, Mig_ObjId(pObj), -1);    }Mig_ObjMigRefDec186,8766
static inline void        Mpm_ManCleanMapRefs( Mpm_Man_t * p )                           { Vec_IntFill( &p->vMapRefs, Mig_ManObjNum(p->pMig), 0 );         }Mpm_ManCleanMapRefs188,8924
static inline int         Mpm_ObjMapRef( Mpm_Man_t * p, Mig_Obj_t * pObj )               { return Vec_IntEntry(&p->vMapRefs, Mig_ObjId(pObj));             }Mpm_ObjMapRef189,9081
static inline void        Mpm_ObjSetMapRef( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )     { Vec_IntWriteEntry(&p->vMapRefs, Mig_ObjId(pObj), i);            }Mpm_ObjSetMapRef190,9238
static inline int         Mpm_ObjEstRef( Mpm_Man_t * p, Mig_Obj_t * pObj )               { return Vec_IntEntry(&p->vEstRefs, Mig_ObjId(pObj));             }Mpm_ObjEstRef192,9397
static inline void        Mpm_ObjSetEstRef( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )     { Vec_IntWriteEntry(&p->vEstRefs, Mig_ObjId(pObj), i);            }Mpm_ObjSetEstRef193,9554
static inline void        Mpm_ManCleanRequired( Mpm_Man_t * p )                          { Vec_IntFill(&p->vRequireds,Mig_ManObjNum(p->pMig),ABC_INFINITY);}Mpm_ManCleanRequired195,9712
static inline int         Mpm_ObjRequired( Mpm_Man_t * p, Mig_Obj_t * pObj )             { return Vec_IntEntry(&p->vRequireds, Mig_ObjId(pObj));           }Mpm_ObjRequired196,9869
static inline void        Mpm_ObjSetRequired( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )   { Vec_IntWriteEntry(&p->vRequireds, Mig_ObjId(pObj), i);          }Mpm_ObjSetRequired197,10026
static inline int         Mpm_ObjTime( Mpm_Man_t * p, Mig_Obj_t * pObj )                 { return Vec_IntEntry(&p->vTimes, Mig_ObjId(pObj));               }Mpm_ObjTime199,10184
static inline void        Mpm_ObjSetTime( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )       { Vec_IntWriteEntry(&p->vTimes, Mig_ObjId(pObj), i);              }Mpm_ObjSetTime200,10341
static inline int         Mpm_ObjArea( Mpm_Man_t * p, Mig_Obj_t * pObj )                 { return Vec_IntEntry(&p->vAreas, Mig_ObjId(pObj));               }Mpm_ObjArea202,10499
static inline void        Mpm_ObjSetArea( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )       { Vec_IntWriteEntry(&p->vAreas, Mig_ObjId(pObj), i);              }Mpm_ObjSetArea203,10656
static inline int         Mpm_ObjEdge( Mpm_Man_t * p, Mig_Obj_t * pObj )                 { return Vec_IntEntry(&p->vEdges, Mig_ObjId(pObj));               }Mpm_ObjEdge205,10814
static inline void        Mpm_ObjSetEdge( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )       { Vec_IntWriteEntry(&p->vEdges, Mig_ObjId(pObj), i);              }Mpm_ObjSetEdge206,10971
static inline void        Mpm_VarsClear( int * V2P, int * P2V, int nVars )               { int i; for ( i = 0; i < nVars; i++ ) V2P[i] = P2V[i] = i;       }Mpm_VarsClear208,11129
static inline void        Mpm_VarsSwap( int * V2P, int * P2V, int iVar, int jVar )       { V2P[P2V[iVar]] = jVar; V2P[P2V[jVar]] = iVar; P2V[iVar] ^= P2V[jVar]; P2V[jVar] ^= P2V[iVar]; P2V[iVar] ^= P2V[jVar];  }Mpm_VarsSwap209,11286
#define Mpm_ObjForEachCut(Mpm_ObjForEachCut212,11529
#define Mpm_ObjForEachCutSafe(Mpm_ObjForEachCutSafe214,11707
#define Mpm_CutForEachLeafId(Mpm_CutForEachLeafId218,11939
#define Mpm_CutForEachLeafLit(Mpm_CutForEachLeafLit220,12111
#define Mpm_CutForEachLeaf(Mpm_CutForEachLeaf222,12273

src/map/mpm/mpmMap.c,3397
static inline int Mpm_CutAlloc( Mpm_Man_t * p, int nLeaves, Mpm_Cut_t ** ppCut )  Mpm_CutAlloc46,1269
static inline int Mpm_CutCreateZero( Mpm_Man_t * p )  Mpm_CutCreateZero56,1638
static inline int Mpm_CutCreateUnit( Mpm_Man_t * p, int Id )  Mpm_CutCreateUnit63,1817
static inline int Mpm_CutCreate( Mpm_Man_t * p, Mpm_Cut_t * pUni, Mpm_Cut_t ** ppCut )  Mpm_CutCreate71,2074
static inline int Mpm_CutDup( Mpm_Man_t * p, Mpm_Cut_t * pCut, int fCompl )  Mpm_CutDup81,2482
static inline int Mpm_CutCopySet( Mpm_Man_t * p, Mig_Obj_t * pObj, int fCompl )  Mpm_CutCopySet91,2890
void Mpm_CutPrint( Mpm_Cut_t * pCut )  Mpm_CutPrint103,3231
static inline void Mpm_CutPrintAll( Mpm_Man_t * p )  Mpm_CutPrintAll111,3438
static inline int Mpm_CutFindLeaf( Mpm_Cut_t * pNew, int iObj )Mpm_CutFindLeaf120,3640
static inline int Mpm_CutIsContained( Mpm_Man_t * p, Mpm_Cut_t * pBase, Mpm_Cut_t * pCut ) // check if pCut is contained pBaseMpm_CutIsContained128,3855
static inline int Mpm_CutGetArea( Mpm_Man_t * p, Mpm_Cut_t * pCut )  Mpm_CutGetArea148,4423
static inline word Mpm_CutGetSign( Mpm_Cut_t * pCut )  Mpm_CutGetSign158,4821
static inline int Mpm_CutGetArrTime( Mpm_Man_t * p, Mpm_Cut_t * pCut )  Mpm_CutGetArrTime166,5026
static inline Mpm_Uni_t * Mpm_CutSetupInfo( Mpm_Man_t * p, Mpm_Cut_t * pCut, int ArrTime )  Mpm_CutSetupInfo175,5374
int Mpm_ObjAddCutToStore( Mpm_Man_t * p, Mpm_Cut_t * pCut, int ArrTime )Mpm_ObjAddCutToStore225,7170
static inline Mpm_Cut_t * Mpm_ManMergeCuts( Mpm_Man_t * p, Mpm_Cut_t * pCut0, Mpm_Cut_t * pCut1, Mpm_Cut_t * pCut2 )Mpm_ManMergeCuts330,10371
static inline int Mpm_ManExploreNewCut( Mpm_Man_t * p, Mig_Obj_t * pObj, Mpm_Cut_t * pCut0, Mpm_Cut_t * pCut1, Mpm_Cut_t * pCut2, int Required )Mpm_ManExploreNewCut401,12751
static inline void Mpm_ObjRecycleCuts( Mpm_Man_t * p, Mig_Obj_t * pObj )Mpm_ObjRecycleCuts489,15309
static inline void Mpm_ObjDerefFaninCuts( Mpm_Man_t * p, Mig_Obj_t * pObj )Mpm_ObjDerefFaninCuts497,15568
static inline void Mpm_ObjCollectFaninsAndSigns( Mpm_Man_t * p, Mig_Obj_t * pObj, int i )Mpm_ObjCollectFaninsAndSigns510,16052
static inline void Mpm_ObjPrepareFanins( Mpm_Man_t * p, Mig_Obj_t * pObj )Mpm_ObjPrepareFanins521,16366
void Mpm_ObjAddChoiceCutsToStore( Mpm_Man_t * p, Mig_Obj_t * pRoot, Mig_Obj_t * pObj, int ReqTime )Mpm_ObjAddChoiceCutsToStore529,16617
void Mpm_ObjTranslateCutsFromStore( Mpm_Man_t * p, Mig_Obj_t * pObj )Mpm_ObjTranslateCutsFromStore547,17267
int Mpm_ManDeriveCuts( Mpm_Man_t * p, Mig_Obj_t * pObj )Mpm_ManDeriveCuts580,18209
static inline int Mpm_ManFindArrivalMax( Mpm_Man_t * p )Mpm_ManFindArrivalMax672,21462
static inline void Mpm_ManFinalizeRound( Mpm_Man_t * p )Mpm_ManFinalizeRound681,21749
static inline void Mpm_ManComputeEstRefs( Mpm_Man_t * p )Mpm_ManComputeEstRefs726,23247
int Mpm_CutCompareDelay( Mpm_Uni_t * pOld, Mpm_Uni_t * pNew )Mpm_CutCompareDelay748,23957
int Mpm_CutCompareDelay2( Mpm_Uni_t * pOld, Mpm_Uni_t * pNew )Mpm_CutCompareDelay2756,24420
int Mpm_CutCompareArea( Mpm_Uni_t * pOld, Mpm_Uni_t * pNew )Mpm_CutCompareArea764,24884
int Mpm_CutCompareArea2( Mpm_Uni_t * pOld, Mpm_Uni_t * pNew )Mpm_CutCompareArea2773,25443
void Mpm_ManPrepare( Mpm_Man_t * p )Mpm_ManPrepare794,26268
void Mpm_ManPerformRound( Mpm_Man_t * p )Mpm_ManPerformRound807,26659
void Mpm_ManPerform( Mpm_Man_t * p )Mpm_ManPerform833,27666

src/map/mpm/mpmLib.c,145
Mpm_LibLut_t * Mpm_LibLutSetSimple( int nLutSize )Mpm_LibLutSetSimple45,1251
void Mpm_LibLutFree( Mpm_LibLut_t * pLib )Mpm_LibLutFree60,1656

src/map/mpm/mpm.h,1575
#define ABC__map__mpm__hABC__map__mpm__h22,532
#define MPM_VAR_MAX MPM_VAR_MAX40,1108
typedef struct Mpm_LibLut_t_ Mpm_LibLut_t;Mpm_LibLut_t46,1355
struct Mpm_LibLut_t_Mpm_LibLut_t_47,1398
    char *           pName;                                     // the name of the LUT librarypName49,1421
    int              LutMax;                                    // the maximum LUT size LutMax50,1516
    int              fVarPinDelays;                             // set to 1 if variable pin delays are specifiedfVarPinDelays51,1605
    int              pLutAreas[MPM_VAR_MAX+1];                  // the areas of LUTspLutAreas52,1718
    int              pLutDelays[MPM_VAR_MAX+1][MPM_VAR_MAX+1];  // the delays of LUTspLutDelays53,1803
typedef struct Mpm_Par_t_ Mpm_Par_t;Mpm_Par_t56,1893
struct Mpm_Par_t_Mpm_Par_t_57,1930
    Mpm_LibLut_t *   pLib;pLib59,1950
    void *           pScl;pScl60,1977
    int              nNumCuts;nNumCuts61,2004
    int              DelayTarget;DelayTarget62,2035
    int              fUseGates;fUseGates63,2069
    int              fUseTruth;fUseTruth64,2101
    int              fUseDsd;fUseDsd65,2133
    int              fCutMin;fCutMin66,2163
    int              fOneRound;fOneRound67,2193
    int              fDeriveLuts;fDeriveLuts68,2225
    int              fMap4Cnf;fMap4Cnf69,2259
    int              fMap4Aig;fMap4Aig70,2290
    int              fMap4Gates;fMap4Gates71,2321
    int              fVerbose;fVerbose72,2354
    int              fVeryVerbose;fVeryVerbose73,2385

src/map/mpm/mpmDsd.c,822
static Mpm_Dsd_t s_DsdClass6[595] = { s_DsdClass630,804
Vec_Wrd_t * Mpm_ManGetTruthWithCnf( int Limit )Mpm_ManGetTruthWithCnf644,47454
void Mpm_ManPrintDsdStats( Mpm_Man_t * p )Mpm_ManPrintDsdStats665,47950
Hsh_IntMan_t * Mpm_ManBuildHashTable( Vec_Int_t ** pvConfgRes ) Mpm_ManBuildHashTable699,48912
void Mpm_ManPrintPerm( unsigned s )Mpm_ManPrintPerm736,49990
void Mpm_ManPrecomputePerms( Mpm_Man_t * p )Mpm_ManPrecomputePerms755,50369
word Mpm_CutTruthFromDsd( Mpm_Man_t * pMan, Mpm_Cut_t * pCut, int iClass )Mpm_CutTruthFromDsd883,54263
int Mpm_CutCheckDsd6( Mpm_Man_t * p, word t )Mpm_CutCheckDsd6905,54891
int Mpm_CutComputeDsd6( Mpm_Man_t * p, Mpm_Cut_t * pCut, Mpm_Cut_t * pCut0, Mpm_Cut_t * pCut1, Mpm_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, int Type )Mpm_CutComputeDsd6930,55470

src/map/mpm/mpmCore.c,278
void Mpm_ManSetParsDefault( Mpm_Par_t * p )Mpm_ManSetParsDefault46,1255
Gia_Man_t * Mpm_ManPerformLutMapping( Mig_Man_t * pMig, Mpm_Par_t * pPars )Mpm_ManPerformLutMapping75,2273
Gia_Man_t * Mpm_ManLutMapping( Gia_Man_t * pGia, Mpm_Par_t * pPars )Mpm_ManLutMapping90,2699

src/map/mpm/mpmMig.h,19059
#define ABC__map__mpm__mig__hABC__map__mpm__mig__h22,543
#define MIG_NONE MIG_NONE37,1070
#define MIG_MASK MIG_MASK40,1150
#define MIG_BASE MIG_BASE41,1177
typedef struct Mig_Fan_t_ Mig_Fan_t;Mig_Fan_t47,1418
struct Mig_Fan_t_Mig_Fan_t_48,1455
    unsigned       fCompl :  1;  // the complemented attributefCompl50,1475
    unsigned       Id     : 31;  // fanin IDId51,1538
typedef struct Mig_Obj_t_ Mig_Obj_t;Mig_Obj_t54,1587
struct Mig_Obj_t_Mig_Obj_t_55,1624
    Mig_Fan_t      pFans[4];     // faninspFans57,1644
typedef struct Mig_Man_t_ Mig_Man_t;Mig_Man_t60,1691
struct Mig_Man_t_Mig_Man_t_61,1728
    char *         pName;        // namepName63,1748
    int            nObjs;        // number of objectsnObjs64,1789
    int            nRegs;        // number of flopsnRegs65,1843
    int            nChoices;     // number of choicesnChoices66,1895
    Vec_Ptr_t      vPages;       // memory pagesvPages67,1949
    Vec_Int_t      vCis;         // CI IDsvCis68,1998
    Vec_Int_t      vCos;         // CO IDsvCos69,2041
    Mig_Obj_t *    pPage;        // current pagepPage71,2107
    int            iPage;        // current page indexiPage72,2156
    int            nTravIds;     // traversal ID counternTravIds74,2229
    Vec_Int_t      vTravIds;     // traversal IDsvTravIds75,2286
    Vec_Int_t      vLevels;      // levelsvLevels76,2336
    Vec_Int_t      vSibls;       // choice nodesvSibls77,2379
    Vec_Int_t      vRefs;        // ref countersvRefs78,2428
    Vec_Int_t      vCopies;      // copiesvCopies79,2477
    void *         pMan;         // mapping managerpMan80,2520
static inline int          Mig_IdPage( int v )                 { return v >> MIG_BASE;                                                      }Mig_IdPage100,3764
static inline int          Mig_IdCell( int v )                 { return v & MIG_MASK;                                                       }Mig_IdCell101,3906
static inline char *       Mig_ManName( Mig_Man_t * p )        { return p->pName;                                                           }Mig_ManName103,4049
static inline int          Mig_ManCiNum( Mig_Man_t * p )       { return Vec_IntSize(&p->vCis);                                              }Mig_ManCiNum104,4191
static inline int          Mig_ManCoNum( Mig_Man_t * p )       { return Vec_IntSize(&p->vCos);                                              }Mig_ManCoNum105,4333
static inline int          Mig_ManPiNum( Mig_Man_t * p )       { return Vec_IntSize(&p->vCis) - p->nRegs;                                   }Mig_ManPiNum106,4475
static inline int          Mig_ManPoNum( Mig_Man_t * p )       { return Vec_IntSize(&p->vCos) - p->nRegs;                                   }Mig_ManPoNum107,4617
static inline int          Mig_ManRegNum( Mig_Man_t * p )      { return p->nRegs;                                                           }Mig_ManRegNum108,4759
static inline int          Mig_ManObjNum( Mig_Man_t * p )      { return p->nObjs;                                                           }Mig_ManObjNum109,4901
static inline int          Mig_ManNodeNum( Mig_Man_t * p )     { return p->nObjs - Vec_IntSize(&p->vCis) - Vec_IntSize(&p->vCos) - 1;       }Mig_ManNodeNum110,5043
static inline int          Mig_ManCandNum( Mig_Man_t * p )     { return Mig_ManCiNum(p) + Mig_ManNodeNum(p);                                }Mig_ManCandNum111,5185
static inline int          Mig_ManChoiceNum( Mig_Man_t * p )   { return p->nChoices;                                                        }Mig_ManChoiceNum112,5327
static inline void         Mig_ManSetRegNum( Mig_Man_t * p, int v )   { p->nRegs = v;                                                       }Mig_ManSetRegNum113,5469
static inline Mig_Obj_t *  Mig_ManPage( Mig_Man_t * p, int v ) { return (Mig_Obj_t *)Vec_PtrEntry(&p->vPages, Mig_IdPage(v));               }Mig_ManPage115,5612
static inline Mig_Obj_t *  Mig_ManObj( Mig_Man_t * p, int v )  { assert(v >= 0 && v < p->nObjs);  return Mig_ManPage(p, v) + Mig_IdCell(v); }Mig_ManObj116,5754
static inline Mig_Obj_t *  Mig_ManCi( Mig_Man_t * p, int v )   { return Mig_ManObj( p, Vec_IntEntry(&p->vCis,v) );                          }Mig_ManCi117,5896
static inline Mig_Obj_t *  Mig_ManCo( Mig_Man_t * p, int v )   { return Mig_ManObj( p, Vec_IntEntry(&p->vCos,v) );                          }Mig_ManCo118,6038
static inline Mig_Obj_t *  Mig_ManPi( Mig_Man_t * p, int v )   { assert( v < Mig_ManPiNum(p) );  return Mig_ManCi( p, v );                  }Mig_ManPi119,6180
static inline Mig_Obj_t *  Mig_ManPo( Mig_Man_t * p, int v )   { assert( v < Mig_ManPoNum(p) );  return Mig_ManCo( p, v );                  }Mig_ManPo120,6322
static inline Mig_Obj_t *  Mig_ManRo( Mig_Man_t * p, int v )   { assert( v < Mig_ManRegNum(p) ); return Mig_ManCi( p, Mig_ManPiNum(p)+v );  }Mig_ManRo121,6464
static inline Mig_Obj_t *  Mig_ManRi( Mig_Man_t * p, int v )   { assert( v < Mig_ManRegNum(p) ); return Mig_ManCo( p, Mig_ManPoNum(p)+v );  }Mig_ManRi122,6606
static inline Mig_Obj_t *  Mig_ManConst0( Mig_Man_t * p )      { return Mig_ManObj(p, 0);                                                   }Mig_ManConst0123,6748
static inline int          Mig_FanCompl( Mig_Obj_t * p, int i )                { return p->pFans[i].fCompl;                                 }Mig_FanCompl125,6891
static inline int          Mig_FanId( Mig_Obj_t * p, int i )                   { return p->pFans[i].Id;                                     }Mig_FanId126,7033
static inline int          Mig_FanIsNone( Mig_Obj_t * p, int i )               { return p->pFans[i].Id == MIG_NONE;                         }Mig_FanIsNone127,7175
static inline int          Mig_FanSetCompl( Mig_Obj_t * p, int i, int v )      { assert( !(v >> 1) ); return p->pFans[i].fCompl = v;        }Mig_FanSetCompl128,7317
static inline int          Mig_FanSetId( Mig_Obj_t * p, int i, int v )         { assert(v >= 0 && v < MIG_NONE); return p->pFans[i].Id = v; }Mig_FanSetId129,7459
static inline int          Mig_ObjIsNone( Mig_Obj_t * p )                      { return Mig_FanIsNone( p, 3 );                              }Mig_ObjIsNone131,7602
static inline int          Mig_ObjIsConst0( Mig_Obj_t * p )                    { return Mig_FanId( p, 3 ) == 0;                             } Mig_ObjIsConst0132,7744
static inline int          Mig_ObjIsTerm( Mig_Obj_t * p )                      { return Mig_FanIsNone( p, 1 ) && !Mig_FanIsNone( p, 2 );    }Mig_ObjIsTerm133,7887
static inline int          Mig_ObjIsCi( Mig_Obj_t * p )                        { return Mig_ObjIsTerm(p) &&  Mig_FanIsNone( p, 0 );         } Mig_ObjIsCi134,8029
static inline int          Mig_ObjIsCo( Mig_Obj_t * p )                        { return Mig_ObjIsTerm(p) && !Mig_FanIsNone( p, 0 );         } Mig_ObjIsCo135,8172
static inline int          Mig_ObjIsBuf( Mig_Obj_t * p )                       { return Mig_FanIsNone( p, 1 ) && Mig_FanIsNone( p, 2 ) && !Mig_FanIsNone( p, 0 );     } Mig_ObjIsBuf136,8315
static inline int          Mig_ObjIsNode( Mig_Obj_t * p )                      { return!Mig_FanIsNone( p, 1 );                              } Mig_ObjIsNode137,8484
static inline int          Mig_ObjIsNode2( Mig_Obj_t * p )                     { return Mig_ObjIsNode( p ) &&  Mig_FanIsNone( p, 2 );       } Mig_ObjIsNode2138,8627
static inline int          Mig_ObjIsNode3( Mig_Obj_t * p )                     { return Mig_ObjIsNode( p ) && !Mig_FanIsNone( p, 2 );       } Mig_ObjIsNode3139,8770
static inline int          Mig_ObjIsAnd( Mig_Obj_t * p )                       { return Mig_ObjIsNode2( p ) && Mig_FanId(p, 0) < Mig_FanId(p, 1); } Mig_ObjIsAnd140,8913
static inline int          Mig_ObjIsXor( Mig_Obj_t * p )                       { return Mig_ObjIsNode2( p ) && Mig_FanId(p, 0) > Mig_FanId(p, 1); } Mig_ObjIsXor141,9062
static inline int          Mig_ObjIsMux( Mig_Obj_t * p )                       { return Mig_ObjIsNode3( p );                                } Mig_ObjIsMux142,9211
static inline int          Mig_ObjIsCand( Mig_Obj_t * p )                      { return Mig_ObjIsNode(p) || Mig_ObjIsCi(p);                 } Mig_ObjIsCand143,9354
static inline int          Mig_ObjNodeType( Mig_Obj_t * p )                    { return Mig_ObjIsAnd(p) ? 1 : (Mig_ObjIsXor(p) ? 2 : 3);    } Mig_ObjNodeType144,9497
static inline int          Mig_ObjId( Mig_Obj_t * p )                          { return Mig_FanId( p, 3 );                                  }Mig_ObjId146,9641
static inline void         Mig_ObjSetId( Mig_Obj_t * p, int v )                { Mig_FanSetId( p, 3, v );                                   }Mig_ObjSetId147,9783
static inline int          Mig_ObjCioId( Mig_Obj_t * p )                       { assert( Mig_ObjIsTerm(p) ); return Mig_FanId( p, 2 );      }Mig_ObjCioId148,9925
static inline void         Mig_ObjSetCioId( Mig_Obj_t * p, int v )             { assert( Mig_FanIsNone(p, 1) ); Mig_FanSetId( p, 2, v );    }Mig_ObjSetCioId149,10067
static inline int          Mig_ObjPhase( Mig_Obj_t * p )                       { return Mig_FanCompl( p, 3 );                               }Mig_ObjPhase150,10209
static inline void         Mig_ObjSetPhase( Mig_Obj_t * p, int v )             { Mig_FanSetCompl( p, 3, v );                                }Mig_ObjSetPhase151,10351
static inline Mig_Man_t *  Mig_ObjMan( Mig_Obj_t * p )                         { return *((Mig_Man_t**)(p - Mig_IdCell(Mig_ObjId(p)) - 1)); }Mig_ObjMan153,10494
static inline Mig_Obj_t *  Mig_ObjObj( Mig_Obj_t * p, int i )                  { return Mig_ManObj( Mig_ObjMan(p), i );                     } Mig_ObjObj155,10781
static inline int          Mig_ManIdToCioId( Mig_Man_t * p, int Id )           { return Mig_ObjCioId( Mig_ManObj(p, Id) );                  }Mig_ManIdToCioId157,10925
static inline int          Mig_ManCiIdToId( Mig_Man_t * p, int CiId )          { return Mig_ObjId( Mig_ManCi(p, CiId) );                    }Mig_ManCiIdToId158,11067
static inline int          Mig_ManCoIdToId( Mig_Man_t * p, int CoId )          { return Mig_ObjId( Mig_ManCo(p, CoId) );                    }Mig_ManCoIdToId159,11209
static inline int          Mig_ObjIsPi( Mig_Obj_t * p )                        { return Mig_ObjIsCi(p) && Mig_ObjCioId(p) < Mig_ManPiNum(Mig_ObjMan(p));   } Mig_ObjIsPi161,11352
static inline int          Mig_ObjIsPo( Mig_Obj_t * p )                        { return Mig_ObjIsCo(p) && Mig_ObjCioId(p) < Mig_ManPoNum(Mig_ObjMan(p));   } Mig_ObjIsPo162,11510
static inline int          Mig_ObjIsRo( Mig_Obj_t * p )                        { return Mig_ObjIsCi(p) && Mig_ObjCioId(p) >= Mig_ManPiNum(Mig_ObjMan(p));  } Mig_ObjIsRo163,11668
static inline int          Mig_ObjIsRi( Mig_Obj_t * p )                        { return Mig_ObjIsCo(p) && Mig_ObjCioId(p) >= Mig_ManPoNum(Mig_ObjMan(p));  } Mig_ObjIsRi164,11826
static inline Mig_Obj_t *  Mig_ObjRoToRi( Mig_Obj_t * p )                      { Mig_Man_t * pMan = Mig_ObjMan(p); assert( Mig_ObjIsRo(p) ); return Mig_ManCo(pMan, Mig_ManCoNum(pMan) - Mig_ManCiNum(pMan) + Mig_ObjCioId(p)); } Mig_ObjRoToRi166,11985
static inline Mig_Obj_t *  Mig_ObjRiToRo( Mig_Obj_t * p )                      { Mig_Man_t * pMan = Mig_ObjMan(p); assert( Mig_ObjIsRi(p) ); return Mig_ManCi(pMan, Mig_ManCiNum(pMan) - Mig_ManCoNum(pMan) + Mig_ObjCioId(p)); } Mig_ObjRiToRo167,12212
static inline int          Mig_ObjHasFanin( Mig_Obj_t * p, int i )             { return i < 3 && Mig_FanId(p, i) != MIG_NONE;               }Mig_ObjHasFanin169,12440
static inline int          Mig_ObjFaninId( Mig_Obj_t * p, int i )              { assert( i < 3 && Mig_FanId(p, i) < Mig_ObjId(p) ); return Mig_FanId( p, i );  }Mig_ObjFaninId170,12582
static inline int          Mig_ObjFaninId0( Mig_Obj_t * p )                    { return Mig_FanId( p, 0 );                                  }Mig_ObjFaninId0171,12743
static inline int          Mig_ObjFaninId1( Mig_Obj_t * p )                    { return Mig_FanId( p, 1 );                                  }Mig_ObjFaninId1172,12885
static inline int          Mig_ObjFaninId2( Mig_Obj_t * p )                    { return Mig_FanId( p, 2 );                                  }Mig_ObjFaninId2173,13027
static inline Mig_Obj_t *  Mig_ObjFanin( Mig_Obj_t * p, int i )                { return Mig_ManObj( Mig_ObjMan(p), Mig_ObjFaninId(p, i) );    }Mig_ObjFanin174,13169
static inline Mig_Obj_t *  Mig_ObjFanin0( Mig_Obj_t * p )                      { return Mig_FanIsNone(p, 0) ? NULL: Mig_ObjFanin(p, 0);     }Mig_ObjFanin0176,13494
static inline Mig_Obj_t *  Mig_ObjFanin1( Mig_Obj_t * p )                      { return Mig_FanIsNone(p, 1) ? NULL: Mig_ObjFanin(p, 1);     }Mig_ObjFanin1177,13636
static inline Mig_Obj_t *  Mig_ObjFanin2( Mig_Obj_t * p )                      { return Mig_FanIsNone(p, 2) ? NULL: Mig_ObjFanin(p, 2);     }Mig_ObjFanin2178,13778
static inline int          Mig_ObjFaninC( Mig_Obj_t * p, int i )               { assert( i < 3 ); return Mig_FanCompl(p, i);                }Mig_ObjFaninC179,13920
static inline int          Mig_ObjFaninC0( Mig_Obj_t * p )                     { return Mig_FanCompl(p, 0);                                 }Mig_ObjFaninC0180,14062
static inline int          Mig_ObjFaninC1( Mig_Obj_t * p )                     { return Mig_FanCompl(p, 1);                                 }Mig_ObjFaninC1181,14204
static inline int          Mig_ObjFaninC2( Mig_Obj_t * p )                     { return Mig_FanCompl(p, 2);                                 }Mig_ObjFaninC2182,14346
static inline int          Mig_ObjFaninLit( Mig_Obj_t * p, int i )             { return Abc_Var2Lit( Mig_FanId(p, i), Mig_FanCompl(p, i) ); }Mig_ObjFaninLit183,14488
static inline void         Mig_ObjFlipFaninC( Mig_Obj_t * p, int i )           { Mig_FanSetCompl( p, i, !Mig_FanCompl(p, i) );              }Mig_ObjFlipFaninC184,14630
static inline int          Mig_ObjWhatFanin( Mig_Obj_t * p, int i )            { if (Mig_FanId(p, 0) == i) return 0; if (Mig_FanId(p, 1) == i) return 1; if (Mig_FanId(p, 2) == i) return 2; return -1;           }Mig_ObjWhatFanin185,14772
static inline void         Mig_ObjSetFaninLit( Mig_Obj_t * p, int i, int l )   { assert( l >= 0 && (l >> 1) < Mig_ObjId(p) ); Mig_FanSetId(p, i, Abc_Lit2Var(l)); Mig_FanSetCompl(p, i, Abc_LitIsCompl(l));       }Mig_ObjSetFaninLit186,14984
static inline int          Mig_ObjSiblId( Mig_Obj_t * p )                      { return Vec_IntSize(&Mig_ObjMan(p)->vSibls) == 0 ? 0: Vec_IntEntry(&Mig_ObjMan(p)->vSibls, Mig_ObjId(p));    }Mig_ObjSiblId188,15197
static inline void         Mig_ObjSetSiblId( Mig_Obj_t * p, int s )            { assert( s > 0 && Mig_ObjId(p) > s ); Vec_IntWriteEntry( &Mig_ObjMan(p)->vSibls, Mig_ObjId(p), s );          }Mig_ObjSetSiblId189,15388
static inline Mig_Obj_t *  Mig_ObjSibl( Mig_Obj_t * p )                        { return Mig_ObjSiblId(p) == 0 ? NULL: Mig_ObjObj(p, Mig_ObjSiblId(p));  }Mig_ObjSibl190,15579
static inline int          Mig_ObjRefNum( Mig_Obj_t * p )                      { return Vec_IntEntry(&Mig_ObjMan(p)->vRefs, Mig_ObjId(p));              }Mig_ObjRefNum191,15733
static inline void         Mig_ManCleanCopy( Mig_Man_t * p )                   { if ( p->vCopies.pArray == NULL ) Vec_IntFill( &p->vCopies, Mig_ManObjNum(p), -1 );              }Mig_ManCleanCopy193,15888
static inline int          Mig_ObjCopy( Mig_Obj_t * p )                        { return Vec_IntSize(&Mig_ObjMan(p)->vCopies) == 0 ? -1: Vec_IntEntry(&Mig_ObjMan(p)->vCopies, Mig_ObjId(p));      }Mig_ObjCopy194,16067
static inline void         Mig_ObjSetCopy( Mig_Obj_t * p, int i )              { assert( Vec_IntSize(&Mig_ObjMan(p)->vCopies) != 0 ); Vec_IntWriteEntry(&Mig_ObjMan(p)->vCopies, Mig_ObjId(p), i); }Mig_ObjSetCopy195,16263
static inline void         Mig_ManIncrementTravId( Mig_Man_t * p )             { if ( p->vTravIds.pArray == NULL ) Vec_IntFill( &p->vTravIds, Mig_ManObjNum(p)+500, 0 ); p->nTravIds++;      }Mig_ManIncrementTravId197,16461
static inline void         Mig_ObjIncrementTravId( Mig_Obj_t * p )             { if ( Mig_ObjMan(p)->vTravIds.pArray == NULL ) Vec_IntFill( &Mig_ObjMan(p)->vTravIds, Mig_ManObjNum(Mig_ObjMan(p))+500, 0 ); Mig_ObjMan(p)->nTravIds++;           }Mig_ObjIncrementTravId198,16652
static inline void         Mig_ObjSetTravIdCurrent( Mig_Obj_t * p )            { Vec_IntSetEntry(&Mig_ObjMan(p)->vTravIds, Mig_ObjId(p), Mig_ObjMan(p)->nTravIds );              }Mig_ObjSetTravIdCurrent199,16896
static inline void         Mig_ObjSetTravIdPrevious( Mig_Obj_t * p )           { Vec_IntSetEntry(&Mig_ObjMan(p)->vTravIds, Mig_ObjId(p), Mig_ObjMan(p)->nTravIds-1 );            }Mig_ObjSetTravIdPrevious200,17075
static inline int          Mig_ObjIsTravIdCurrent( Mig_Obj_t * p )             { return (Vec_IntGetEntry(&Mig_ObjMan(p)->vTravIds, Mig_ObjId(p)) == Mig_ObjMan(p)->nTravIds);    }Mig_ObjIsTravIdCurrent201,17254
static inline int          Mig_ObjIsTravIdPrevious( Mig_Obj_t * p )            { return (Vec_IntGetEntry(&Mig_ObjMan(p)->vTravIds, Mig_ObjId(p)) == Mig_ObjMan(p)->nTravIds-1);  }Mig_ObjIsTravIdPrevious202,17433
static inline void         Mig_ObjSetTravIdCurrentId( Mig_Man_t * p, int Id )  { Vec_IntSetEntry(&p->vTravIds, Id, p->nTravIds );                                                }Mig_ObjSetTravIdCurrentId203,17612
static inline int          Mig_ObjIsTravIdCurrentId( Mig_Man_t * p, int Id )   { return (Vec_IntGetEntry(&p->vTravIds, Id) == p->nTravIds);                                      }Mig_ObjIsTravIdCurrentId204,17791
static inline Mig_Obj_t * Mig_ManAppendObj( Mig_Man_t * p )Mig_ManAppendObj217,18205
static inline int Mig_ManAppendCi( Mig_Man_t * p )  Mig_ManAppendCi238,19091
static inline int Mig_ManAppendCo( Mig_Man_t * p, int iLit0 )  Mig_ManAppendCo245,19326
static inline int Mig_ManAppendBuf( Mig_Man_t * p, int iLit0 )  Mig_ManAppendBuf255,19693
static inline int Mig_ManAppendAnd( Mig_Man_t * p, int iLit0, int iLit1 )  Mig_ManAppendAnd262,19900
static inline int Mig_ManAppendXor( Mig_Man_t * p, int iLit0, int iLit1 )  Mig_ManAppendXor270,20224
static inline int Mig_ManAppendMux( Mig_Man_t * p, int iLit0, int iLit1, int iCtrl )  Mig_ManAppendMux279,20612
static inline int Mig_ManAppendMaj( Mig_Man_t * p, int iLit0, int iLit1, int iLit2 )  Mig_ManAppendMaj289,21125
#define Mig_ManForEachObj(Mig_ManForEachObj304,21785
#define Mig_ManForEachObj1(Mig_ManForEachObj1308,22082
#define Mig_ManForEachObjReverse(Mig_ManForEachObjReverse312,22397
#define Mig_ManForEachObjVec(Mig_ManForEachObjVec319,22828
#define Mig_ManForEachNode(Mig_ManForEachNode322,23001
#define Mig_ManForEachCand(Mig_ManForEachCand324,23144
#define Mig_ManForEachCi(Mig_ManForEachCi327,23288
#define Mig_ManForEachCo(Mig_ManForEachCo329,23444
#define Mig_ObjForEachFaninId(Mig_ObjForEachFaninId333,23626
#define Mig_ObjForEachFanin(Mig_ObjForEachFanin335,23783

src/map/mpm/mpm.c,39
void Mpm_ManTest()Mpm_ManTest45,1206

src/map/mpm/mpmUtil.c,0

src/map/mpm/mpmTruth.c,952
static inline void Mpm_TruthStretch( word * pTruth, Mpm_Cut_t * pCut, Mpm_Cut_t * pCut0, int nLimit )Mpm_TruthStretch47,1287
static inline int Mpm_CutTruthMinimize6( Mpm_Man_t * p, Mpm_Cut_t * pCut )Mpm_CutTruthMinimize672,2004
static inline int Mpm_CutTruthMinimize7( Mpm_Man_t * p, Mpm_Cut_t * pCut )Mpm_CutTruthMinimize7102,3006
static inline int Mpm_CutComputeTruth6( Mpm_Man_t * p, Mpm_Cut_t * pCut, Mpm_Cut_t * pCut0, Mpm_Cut_t * pCut1, Mpm_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, int Type )Mpm_CutComputeTruth6145,4376
static inline int Mpm_CutComputeTruth7( Mpm_Man_t * p, Mpm_Cut_t * pCut, Mpm_Cut_t * pCut0, Mpm_Cut_t * pCut1, Mpm_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, int Type )Mpm_CutComputeTruth7181,5817
int Mpm_CutComputeTruth( Mpm_Man_t * p, Mpm_Cut_t * pCut, Mpm_Cut_t * pCut0, Mpm_Cut_t * pCut1, Mpm_Cut_t * pCutC, int fCompl0, int fCompl1, int fComplC, int Type )Mpm_CutComputeTruth215,7455

src/map/mpm/mpmGates.c,763
Vec_Wec_t * Mpm_ManFindDsdMatches( Mpm_Man_t * p, void * pScl )Mpm_ManFindDsdMatches49,1379
Vec_Ptr_t * Mpm_ManFindCells( Mio_Library_t * pMio, SC_Lib * pScl, Vec_Wec_t * vNpnConfigs )Mpm_ManFindCells104,3206
Vec_Int_t * Mpm_ManFindMappedNodes( Mpm_Man_t * p )Mpm_ManFindMappedNodes141,4302
Abc_Obj_t * Mpm_ManGetAbcNode( Abc_Ntk_t * pNtk, Vec_Int_t * vCopy, int iMigLit )Mpm_ManGetAbcNode151,4610
Abc_Ntk_t * Mpm_ManDeriveMappedAbcNtk( Mpm_Man_t * p, Mio_Library_t * pMio )Mpm_ManDeriveMappedAbcNtk163,5059
Abc_Ntk_t * Mpm_ManPerformCellMapping( Mig_Man_t * pMig, Mpm_Par_t * pPars, Mio_Library_t * pMio )Mpm_ManPerformCellMapping264,8373
Abc_Ntk_t * Mpm_ManCellMapping( Gia_Man_t * pGia, Mpm_Par_t * pPars, void * pMio )Mpm_ManCellMapping281,8920

src/map/mpm/mpmAbc.c,1099
void Mig_ManCreateChoices( Mig_Man_t * pMig, Gia_Man_t * p )Mig_ManCreateChoices46,1272
static inline int Mig_ObjFanin0Copy( Gia_Obj_t * pObj ) { return Abc_LitNotCond( Gia_ObjFanin0(pObj)->Value, Gia_ObjFaninC0(pObj) );     }Mig_ObjFanin0Copy81,2400
static inline int Mig_ObjFanin1Copy( Gia_Obj_t * pObj ) { return Abc_LitNotCond( Gia_ObjFanin1(pObj)->Value, Gia_ObjFaninC1(pObj) );     }Mig_ObjFanin1Copy82,2539
Mig_Man_t * Mig_ManCreate( void * pGia )Mig_ManCreate83,2678
static inline unsigned Mpm_CutDataInt( Mpm_Cut_t * pCut )                    { return pCut->hNext;  }Mpm_CutDataInt123,4068
static inline void     Mpm_CutSetDataInt( Mpm_Cut_t * pCut, int Data )       { pCut->hNext = Data;  }Mpm_CutSetDataInt124,4170
int Mpm_ManNodeIfToGia_rec( Gia_Man_t * pNew, Mpm_Man_t * pMan, Mig_Obj_t * pObj, Vec_Ptr_t * vVisited, int fHash )Mpm_ManNodeIfToGia_rec125,4272
int Mpm_ManNodeIfToGia( Gia_Man_t * pNew, Mpm_Man_t * pMan, Mig_Obj_t * pObj, Vec_Int_t * vLeaves, int fHash )Mpm_ManNodeIfToGia187,6643
void * Mpm_ManFromIfLogic( Mpm_Man_t * pMan )Mpm_ManFromIfLogic213,7661

src/map/mpm/mpmMig.c,701
Mig_Man_t * Mig_ManStart()Mig_ManStart45,1241
void Mig_ManStop( Mig_Man_t * p )Mig_ManStop56,1534
int Mig_ManTypeNum( Mig_Man_t * p, int Type )Mig_ManTypeNum90,2528
int Mig_ManAndNum( Mig_Man_t * p )Mig_ManAndNum98,2727
int Mig_ManXorNum( Mig_Man_t * p )Mig_ManXorNum102,2799
int Mig_ManMuxNum( Mig_Man_t * p )Mig_ManMuxNum106,2871
void Mig_ManSetRefs( Mig_Man_t * p )Mig_ManSetRefs123,3179
int Mig_ManSuppSize_rec( Mig_Obj_t * pObj )Mig_ManSuppSize_rec149,3827
int Mig_ManSuppSize2_rec( Mig_Man_t * p, int iObj )Mig_ManSuppSize2_rec163,4259
int Mig_ManSuppSizeOne( Mig_Obj_t * pObj )Mig_ManSuppSizeOne179,4787
int Mig_ManSuppSizeTest( Mig_Man_t * p )Mig_ManSuppSizeTest185,4982

src/map/mpm/mpmMan.c,282
Mpm_Man_t * Mpm_ManStart( Mig_Man_t * pMig, Mpm_Par_t * pPars )Mpm_ManStart45,1206
void Mpm_ManStop( Mpm_Man_t * p )Mpm_ManStop111,3641
void Mpm_ManPrintStatsInit( Mpm_Man_t * p )Mpm_ManPrintStatsInit166,5279
void Mpm_ManPrintStats( Mpm_Man_t * p )Mpm_ManPrintStats173,5648

src/phys/place/libhmetis.h,209
#define ABC__phys__place__libhmetis_hABC__phys__place__libhmetis_h4,76
static void HMETIS_PartRecursive(int nvtxs, HMETIS_PartRecursive10,145
static void HMETIS_PartKway(int nvtxs, HMETIS_PartKway23,472

src/phys/place/place_io.c,214
void writeBookshelfNodes(const char *filename) {writeBookshelfNodes26,576
void writeBookshelfPl(const char *filename) {writeBookshelfPl66,1693
void writeBookshelf(const char *filename) {writeBookshelf94,2423

src/phys/place/place_inc.c,116
inline int sqHashId(int id, int max) {sqHashId21,412
float fastEstimate(ConcreteCell *cell, fastEstimate92,2358

src/phys/place/place_qpsolver.h,3749
#define ABC__phys__place__place_qpsolver_hABC__phys__place__place_qpsolver_h11,259
  typedef float qps_float_t;qps_float_t19,353
  typedef struct qps_problem {qps_problem21,383
    int num_cells;        /* Total number of cells (both fixed andnum_cells24,437
    int *connect;        /* Connectivity array.  Must contain at least connect26,550
    qps_float_t *edge_weight;    /* Same structure as connectivity array, butedge_weight38,1236
    qps_float_t *x;        /* num_cells element array which contains thex41,1405
    qps_float_t *y;        /* num_cells element array ofy46,1709
    int *fixed;            /* num_cells element array with value 1 iffixed48,1803
    qps_float_t f;        /* return value for sum-of-squaref51,1958
    int cog_num;        /* Number of COG constraints. */cog_num55,2074
    int *cog_list;        /* Array indicating for each COG constraintcog_list56,2131
    qps_float_t *cog_x;        /* cog_num element array whose values are thecog_x67,2774
    qps_float_t *cog_y;        /* cog_num element array whose values are thecog_y70,2945
    qps_float_t *area;         /* num_cells element array whose values arearea73,3116
    int loop_num;        /* Number of loop constraints. */loop_num78,3338
    int *loop_list;        /* Array with list of cells for each looploop_list79,3397
    qps_float_t *loop_max;    /* loop_num element array indicating maximumloop_max82,3549
    qps_float_t *loop_penalty;    /* loop_num element array indicating penaltyloop_penalty84,3670
    int loop_k;            /* Current iteration for loop optimization. */loop_k86,3786
    int loop_done;        /* Done flag for loop optimization. */loop_done87,3860
    int loop_fail;loop_fail88,3925
    qps_float_t max_x;        /* max x location;  only used inmax_x91,3973
    qps_float_t max_y;        /* max y location;  only used inmax_y93,4084
    int max_enable;        /* Set to 1 after qps_init() to enablemax_enable95,4195
    int max_done;        /* Done flag for max optimization. */max_done97,4296
    int *priv_ii;priv_ii100,4384
    int *priv_cc, *priv_cr;priv_cc101,4402
    int *priv_cc, *priv_cr;priv_cr101,4402
    qps_float_t *priv_cw, *priv_ct;priv_cw102,4430
    qps_float_t *priv_cw, *priv_ct;priv_ct102,4430
    int priv_cm;priv_cm103,4466
    int *priv_gt;priv_gt104,4483
    int *priv_la;priv_la105,4501
    int priv_lm;priv_lm106,4519
    qps_float_t *priv_gm, *priv_gw;priv_gm107,4536
    qps_float_t *priv_gm, *priv_gw;priv_gw107,4536
    qps_float_t *priv_g, *priv_h, *priv_xi;priv_g108,4572
    qps_float_t *priv_g, *priv_h, *priv_xi;priv_h108,4572
    qps_float_t *priv_g, *priv_h, *priv_xi;priv_xi108,4572
    qps_float_t *priv_tp, *priv_tp2;priv_tp109,4616
    qps_float_t *priv_tp, *priv_tp2;priv_tp2109,4616
    int priv_n;priv_n110,4653
    qps_float_t *priv_cp;priv_cp111,4669
    qps_float_t priv_f;priv_f112,4695
    qps_float_t *priv_lt;priv_lt113,4719
    qps_float_t *priv_pcg, *priv_pcgt;priv_pcg114,4745
    qps_float_t *priv_pcg, *priv_pcgt;priv_pcgt114,4745
    qps_float_t priv_fmax;priv_fmax115,4784
    qps_float_t priv_fprev;priv_fprev116,4811
    qps_float_t priv_fopt;priv_fopt117,4839
    qps_float_t priv_eps;priv_eps118,4866
    int priv_pn;priv_pn119,4892
    qps_float_t *priv_mxl, *priv_mxh, *priv_myl, *priv_myh;priv_mxl120,4909
    qps_float_t *priv_mxl, *priv_mxh, *priv_myl, *priv_myh;priv_mxh120,4909
    qps_float_t *priv_mxl, *priv_mxh, *priv_myl, *priv_myh;priv_myl120,4909
    qps_float_t *priv_mxl, *priv_mxh, *priv_myl, *priv_myh;priv_myh120,4909
    int priv_ik;priv_ik121,4969
    FILE *priv_fp;priv_fp122,4986
  } qps_problem_t;qps_problem_t124,5006

src/phys/place/place_partition.c,1395
Partition *g_place_rootPartition = NULL;g_place_rootPartition34,724
ConcreteNet **allNetsR2 = NULL, allNetsR235,765
  **allNetsL2 = NULL, allNetsL236,798
  **allNetsB2 = NULL, allNetsB237,821
  **allNetsT2 = NULL;allNetsT238,844
typedef struct FM_cell {FM_cell46,1065
    int loc;loc47,1090
    int gain;gain48,1103
    ConcreteCell *cell;cell49,1117
    struct FM_cell *next, *prev;next50,1141
    struct FM_cell *next, *prev;prev50,1141
    bool locked;locked51,1174
} FM_cell;FM_cell52,1191
void initPartitioning() {initPartitioning67,1664
void presortNets() {presortNets105,2926
bool refinePartitions() {refinePartitions126,4183
void reallocPartitions() {reallocPartitions138,4506
bool refinePartition(Partition *p) {refinePartition150,4807
void repartitionHMetis(Partition *parent) {repartitionHMetis258,7558
void repartitionFM(Partition *parent) {repartitionFM435,13675
void partitionEqualArea(Partition *parent) {partitionEqualArea834,28216
void partitionScanlineMincut(Partition *parent) {partitionScanlineMincut879,29898
void reallocPartition(Partition *p) {reallocPartition988,33189
void resizePartition(Partition *p) {resizePartition1022,33910
void incrementalSubpartition(Partition *p, ConcreteCell *newCells [], const int numNewCells) {incrementalSubpartition1052,35140
void incrementalPartition() {incrementalPartition1103,36925

src/phys/place/place_test.c,1121
struct hash_element {hash_element25,556
  ConcreteCell        *obj;obj26,578
  struct hash_element *next;next27,606
} hash_element;hash_element28,635
int hash_string(int hash_max, const char *str) {hash_string30,652
void hash_add(struct hash_element **hash, int hash_max,hash_add38,819
ConcreteCell *hash_find(struct hash_element **hash, int hash_max, const char *str) {hash_find49,1185
struct hash_element **hash_cellname;hash_cellname66,1695
int numCells = 0, numNets = 0;numCells68,1733
int numCells = 0, numNets = 0;numNets68,1733
AbstractCell *abstractCells;abstractCells70,1765
ConcreteCell *concreteCells;concreteCells71,1794
ConcreteNet  *concreteNets;concreteNets72,1823
void readBookshelfNets(char *filename) {readBookshelfNets79,2028
void readBookshelfNodes(char *filename) {readBookshelfNodes157,4074
void readBookshelfPlacement(char *filename) {readBookshelfPlacement224,6028
void writeBookshelfPlacement(char *filename) {writeBookshelfPlacement272,7155
void delNetConnections(ConcreteCell *cell) {delNetConnections294,7673
int main(int argc, char **argv) {main316,8405

src/phys/place/place_legalize.c,34
void legalize() {legalize23,507

src/phys/place/place_pads.c,63
void globalPreplace(float utilization) {globalPreplace31,785

src/phys/place/place_gordian.h,1399
#define ABC__phys__place__place_gordian_hABC__phys__place__place_gordian_h11,287
#define CLIQUE_PENALTY CLIQUE_PENALTY21,450
#define IGNORE_NETSIZE IGNORE_NETSIZE22,477
#define LARGEST_FINAL_SIZE LARGEST_FINAL_SIZE25,535
#define PARTITION_AREA_ONLY PARTITION_AREA_ONLY26,565
#define REALLOCATE_PARTITIONS REALLOCATE_PARTITIONS27,598
#define FINAL_REALLOCATE_PARTITIONS FINAL_REALLOCATE_PARTITIONS28,634
#define IGNORE_COG IGNORE_COG29,676
#define MAX_PARTITION_NONSYMMETRY MAX_PARTITION_NONSYMMETRY30,701
#define REPARTITION_LEVEL_DEPTH REPARTITION_LEVEL_DEPTH33,775
#define REPARTITION_TARGET_FRACTION REPARTITION_TARGET_FRACTION34,809
#define REPARTITION_FM REPARTITION_FM35,850
#define REPARTITION_HMETIS REPARTITION_HMETIS36,879
#define FM_MAX_BIN FM_MAX_BIN39,950
#define FM_MAX_PASSES FM_MAX_PASSES40,972
typedef struct Partition {Partition46,1072
  int               m_numMembers;m_numMembers48,1100
  ConcreteCell    **m_members;m_members49,1134
  Rect              m_bounds;m_bounds50,1165
  bool              m_done, m_done51,1195
                    m_leaf, m_leaf52,1224
                    m_vertical;m_vertical53,1253
  float             m_area;m_area54,1285
  int               m_level;m_level55,1313
  struct Partition *m_sub1, *m_sub2;m_sub156,1342
  struct Partition *m_sub1, *m_sub2;m_sub256,1342
} Partition;Partition57,1379

src/phys/place/place_base.h,1538
#define ABC__phys__place__place_base_hABC__phys__place__place_base_h11,281
#define bool bool25,606
#define true true28,631
#define false false29,646
typedef struct Rect {Rect34,689
  float x, y;x35,711
  float x, y;y35,711
  float w, h;w36,725
  float w, h;h36,725
} Rect;Rect37,739
typedef struct AbstractCell {AbstractCell42,800
  char *m_label;            // string descriptionm_label43,830
  float m_width, m_height;  // dimensionsm_width45,881
  float m_width, m_height;  // dimensionsm_height45,881
  bool  m_pad;              // a pad (external I/O) cell?m_pad47,924
} AbstractCell;AbstractCell48,982
typedef struct ConcreteCell {ConcreteCell53,1039
  int           m_id;       // a unique ID (see below)m_id54,1069
  char         *m_label;    // string descriptionm_label55,1124
  AbstractCell *m_parent;   // cell typem_parent57,1175
  bool          m_fixed;    // position is fixed?m_fixed59,1217
  float         m_x, m_y;   // center of cellm_x60,1267
  float         m_x, m_y;   // center of cellm_y60,1267
  int           m_data;m_data62,1314
} ConcreteCell;ConcreteCell63,1338
typedef struct ConcreteNet {ConcreteNet68,1391
  int            m_id;       // a unique ID (see below)m_id69,1420
  int            m_numTerms; // num. of connected cellsm_numTerms71,1477
  ConcreteCell **m_terms;    // connected cellsm_terms72,1533
  float          m_weight;   // relative weightm_weight74,1582
  int            m_data;m_data76,1631
} ConcreteNet;ConcreteNet77,1656

src/phys/place/place_genqp.c,544
qps_problem_t *g_place_qpProb = NULL;g_place_qpProb28,627
float splitPenalty(int pins) {splitPenalty37,918
void constructQuadraticProblem() {constructQuadraticProblem53,1350
typedef struct reverseCOG {reverseCOG173,5573
  float      x,y;x174,5601
  float      x,y;y174,5601
  Partition *part;part175,5619
  float      delta;delta176,5638
} reverseCOG;reverseCOG177,5658
int generateCoGConstraints(reverseCOG COG_rev[]) {generateCoGConstraints186,5904
void solveQuadraticProblem(bool useCOG) {solveQuadraticProblem275,8230

src/phys/place/place_bin.c,236
void globalFixDensity(int numBins, float maxMovement) {globalFixDensity43,1116
void spreadDensityX(int numBins, float maxMovement) {spreadDensityX56,1490
void spreadDensityY(int numBins, float maxMovement) {spreadDensityY177,5402

src/phys/place/place_base.c,1731
int   g_place_numCells = 0;g_place_numCells26,581
int   g_place_numNets = 0;g_place_numNets27,609
float g_place_rowHeight = 1.0;g_place_rowHeight28,636
Rect  g_place_coreBounds;g_place_coreBounds30,668
Rect  g_place_padBounds;g_place_padBounds31,694
ConcreteCell **g_place_concreteCells = NULL;g_place_concreteCells33,720
int            g_place_concreteCellsSize = 0;g_place_concreteCellsSize34,765
ConcreteNet  **g_place_concreteNets = NULL;g_place_concreteNets35,811
int            g_place_concreteNetsSize = 0;g_place_concreteNetsSize36,855
Rect   getNetBBox(const ConcreteNet *net) {getNetBBox45,1114
float getNetWirelength(const ConcreteNet *net) {getNetWirelength70,1823
float getTotalWirelength() {getTotalWirelength86,2165
float getCellArea(const ConcreteCell *cell) {getCellArea99,2514
void   addConcreteNet(ConcreteNet *net) {addConcreteNet114,2949
void   delConcreteNet(ConcreteNet *net) {delConcreteNet141,3965
void   addConcreteCell(ConcreteCell *cell) {addConcreteCell155,4393
void delCellFromPartition(ConcreteCell *cell, Partition *p) {delCellFromPartition180,5355
void   delConcreteCell(ConcreteCell *cell) {delConcreteCell216,6234
int netSortByL(const void *a, const void *b) {netSortByL235,6804
int netSortByR(const void *a, const void *b) {netSortByR249,7170
int netSortByB(const void *a, const void *b) {netSortByB263,7564
int netSortByT(const void *a, const void *b) {netSortByT277,7958
int netSortByID(const void *a, const void *b) {netSortByID291,8324
int cellSortByX(const void *a, const void *b) {cellSortByX314,8957
int cellSortByY(const void *a, const void *b) {cellSortByY326,9281
int cellSortByID(const void *a, const void *b) {cellSortByID338,9605

src/phys/place/place_gordian.c,206
int g_place_numPartitions;g_place_numPartitions28,602
void globalPlace() {globalPlace39,931
void   globalIncremental() {globalIncremental94,2655
void sanitizePlacement() { sanitizePlacement125,3595

src/phys/place/place_qpsolver.c,1125
#undef  QPS_DEBUGQPS_DEBUG20,372
#define QPS_TOL QPS_TOL22,391
#define QPS_EPS QPS_EPS23,414
#define QPS_MAX_TOL QPS_MAX_TOL25,451
#define QPS_LOOP_TOL QPS_LOOP_TOL26,475
#define QPS_RELAX_ITER QPS_RELAX_ITER28,504
#define QPS_MAX_ITER QPS_MAX_ITER29,531
#define QPS_STEPSIZE_RETRIES QPS_STEPSIZE_RETRIES30,556
#define QPS_MINSTEP QPS_MINSTEP31,587
#define QPS_DEC_CHANGE QPS_DEC_CHANGE32,614
#define QPS_PRECONQPS_PRECON34,643
#define QPS_PRECON_EPS QPS_PRECON_EPS35,662
#undef QPS_HOISTQPS_HOIST37,693
#define QPS_DEBUG_FILE QPS_DEBUG_FILE40,734
qps_settp(qps_problem_t * p)qps_settp69,1773
qps_func(qps_problem_t * p)qps_func129,3212
qps_dfunc(qps_problem_t * p, qps_float_t * d)qps_dfunc216,5026
qps_linmin(qps_problem_t * p, qps_float_t dgg, qps_float_t * h)qps_linmin344,8055
qps_cgmin(qps_problem_t * p)qps_cgmin459,10829
qps_init(qps_problem_t * p)qps_init542,12633
qps_estopt(qps_problem_t * p)qps_estopt651,15354
qps_solve_inner(qps_problem_t * p)qps_solve_inner702,16334
qps_solve(qps_problem_t * p)qps_solve981,23345
qps_clean(qps_problem_t * p)qps_clean1259,29544

src/misc/tim/timTrav.c,688
void Tim_ManIncrementTravId( Tim_Man_t * p )Tim_ManIncrementTravId44,1277
void Tim_ManSetCurrentTravIdBoxInputs( Tim_Man_t * p, int iBox )Tim_ManSetCurrentTravIdBoxInputs70,1870
void Tim_ManSetCurrentTravIdBoxOutputs( Tim_Man_t * p, int iBox )Tim_ManSetCurrentTravIdBoxOutputs91,2364
void Tim_ManSetPreviousTravIdBoxInputs( Tim_Man_t * p, int iBox )Tim_ManSetPreviousTravIdBoxInputs112,2859
void Tim_ManSetPreviousTravIdBoxOutputs( Tim_Man_t * p, int iBox )Tim_ManSetPreviousTravIdBoxOutputs133,3358
int Tim_ManIsCiTravIdCurrent( Tim_Man_t * p, int iCi )Tim_ManIsCiTravIdCurrent154,3873
int Tim_ManIsCoTravIdCurrent( Tim_Man_t * p, int iCo )Tim_ManIsCoTravIdCurrent172,4304

src/misc/tim/timMan.c,1800
Tim_Man_t * Tim_ManStart( int nCis, int nCos )Tim_ManStart45,1295
Tim_Man_t * Tim_ManDup( Tim_Man_t * p, int fUnitDelay )Tim_ManDup86,2346
Tim_Man_t * Tim_ManTrim( Tim_Man_t * p, Vec_Int_t * vBoxPres )Tim_ManTrim166,5310
Tim_Man_t * Tim_ManReduce( Tim_Man_t * p, Vec_Int_t * vBoxesLeft, int nTermsDiff )Tim_ManReduce254,8667
Vec_Int_t * Tim_ManAlignTwo( Tim_Man_t * pSpec, Tim_Man_t * pImpl )Tim_ManAlignTwo347,12242
void Tim_ManStop( Tim_Man_t * p )Tim_ManStop378,13158
void Tim_ManStopP( Tim_Man_t ** p )Tim_ManStopP387,13372
void Tim_ManCreate( Tim_Man_t * p, void * pLib, Vec_Flt_t * vInArrs, Vec_Flt_t * vOutReqs )Tim_ManCreate406,13782
float * Tim_ManGetArrTimes( Tim_Man_t * p )Tim_ManGetArrTimes482,16462
float * Tim_ManGetReqTimes( Tim_Man_t * p )Tim_ManGetReqTimes497,16847
void Tim_ManPrint( Tim_Man_t * p )Tim_ManPrint526,17548
void Tim_ManPrintBoxCopy( Tim_Man_t * p )Tim_ManPrintBoxCopy617,21054
void Tim_ManPrintStats( Tim_Man_t * p, int nAnd2Delay )Tim_ManPrintStats644,21767
int Tim_ManCiNum( Tim_Man_t * p )Tim_ManCiNum698,23368
int Tim_ManCoNum( Tim_Man_t * p )Tim_ManCoNum702,23426
int Tim_ManPiNum( Tim_Man_t * p )Tim_ManPiNum706,23484
int Tim_ManPoNum( Tim_Man_t * p )Tim_ManPoNum712,23627
int Tim_ManBoxNum( Tim_Man_t * p )Tim_ManBoxNum720,23893
int Tim_ManBlackBoxNum( Tim_Man_t * p )Tim_ManBlackBoxNum724,23983
void Tim_ManBlackBoxIoNum( Tim_Man_t * p, int * pnBbIns, int * pnBbOuts )Tim_ManBlackBoxIoNum733,24198
int Tim_ManDelayTableNum( Tim_Man_t * p )Tim_ManDelayTableNum747,24618
void Tim_ManSetDelayTables( Tim_Man_t * p, Vec_Ptr_t * vDelayTables )Tim_ManSetDelayTables763,25023
void Tim_ManTravIdDisable( Tim_Man_t * p )Tim_ManTravIdDisable780,25444
void Tim_ManTravIdEnable( Tim_Man_t * p )Tim_ManTravIdEnable796,25785

src/misc/tim/timTime.c,821
void Tim_ManInitPiArrival( Tim_Man_t * p, int iPi, float Delay )Tim_ManInitPiArrival44,1298
void Tim_ManInitPoRequired( Tim_Man_t * p, int iPo, float Delay )Tim_ManInitPoRequired61,1701
void Tim_ManInitPiArrivalAll( Tim_Man_t * p, float Delay )Tim_ManInitPiArrivalAll78,2099
void Tim_ManInitPoRequiredAll( Tim_Man_t * p, float Delay )Tim_ManInitPoRequiredAll97,2541
void Tim_ManSetCoArrival( Tim_Man_t * p, int iCo, float Delay )Tim_ManSetCoArrival116,2984
void Tim_ManSetCiRequired( Tim_Man_t * p, int iCi, float Delay )Tim_ManSetCiRequired135,3489
void Tim_ManSetCoRequired( Tim_Man_t * p, int iCo, float Delay )Tim_ManSetCoRequired154,3995
float Tim_ManGetCiArrival( Tim_Man_t * p, int iCi )Tim_ManGetCiArrival174,4510
float Tim_ManGetCoRequired( Tim_Man_t * p, int iCo )Tim_ManGetCoRequired222,6162

src/misc/tim/timDump.c,201
#define TIM_DUMP_VER_NUM TIM_DUMP_VER_NUM29,803
Vec_Str_t * Tim_ManSave( Tim_Man_t * p, int fHieOnly )Tim_ManSave46,1335
Tim_Man_t * Tim_ManLoad( Vec_Str_t * p, int fHieOnly )Tim_ManLoad113,3802

src/misc/tim/tim.c,0

src/misc/tim/timBox.c,1264
void Tim_ManCreateBox( Tim_Man_t * p, int firstIn, int nIns, int firstOut, int nOuts, int iDelayTable, int fBlack )Tim_ManCreateBox44,1263
int Tim_ManBoxForCi( Tim_Man_t * p, int iCi )Tim_ManBoxForCi87,2651
int Tim_ManBoxForCo( Tim_Man_t * p, int iCo )Tim_ManBoxForCo105,3059
int Tim_ManBoxInputFirst( Tim_Man_t * p, int iBox )Tim_ManBoxInputFirst123,3458
int Tim_ManBoxInputLast( Tim_Man_t * p, int iBox )Tim_ManBoxInputLast139,3826
int Tim_ManBoxOutputFirst( Tim_Man_t * p, int iBox )Tim_ManBoxOutputFirst155,4229
int Tim_ManBoxOutputLast( Tim_Man_t * p, int iBox )Tim_ManBoxOutputLast171,4626
int Tim_ManBoxInputNum( Tim_Man_t * p, int iBox )Tim_ManBoxInputNum187,5055
int Tim_ManBoxOutputNum( Tim_Man_t * p, int iBox )Tim_ManBoxOutputNum203,5419
int Tim_ManBoxDelayTableId( Tim_Man_t * p, int iBox )Tim_ManBoxDelayTableId219,5777
float * Tim_ManBoxDelayTable( Tim_Man_t * p, int iBox )Tim_ManBoxDelayTable235,6138
int Tim_ManBoxIsBlack( Tim_Man_t * p, int iBox )Tim_ManBoxIsBlack258,6768
int Tim_ManBoxCopy( Tim_Man_t * p, int iBox )Tim_ManBoxCopy275,7125
void Tim_ManBoxSetCopy( Tim_Man_t * p, int iBox, int iCopy )Tim_ManBoxSetCopy291,7474
int Tim_ManBoxFindFromCiNum( Tim_Man_t * p, int iCiNum )Tim_ManBoxFindFromCiNum307,7814

src/misc/tim/tim.h,156
#define ABC__aig__tim__tim_hABC__aig__tim__tim_h22,531
typedef struct Tim_Man_t_  Tim_Man_t;Tim_Man_t92,4328
#define TIM_ETERNITY TIM_ETERNITY98,4587

src/misc/tim/timInt.h,3940
#define ABC__aig__tim__timInt_hABC__aig__tim__timInt_h22,540
typedef struct Tim_Box_t_           Tim_Box_t;Tim_Box_t48,1412
typedef struct Tim_Obj_t_           Tim_Obj_t;Tim_Obj_t49,1459
struct Tim_Man_t_Tim_Man_t_52,1525
    Vec_Ptr_t *      vBoxes;         // the timing boxesvBoxes54,1545
    Vec_Ptr_t *      vDelayTables;   // pointers to the delay tablesvDelayTables55,1602
    Mem_Flex_t *     pMemObj;        // memory manager for boxespMemObj56,1671
    int              nTravIds;       // traversal ID of the managernTravIds57,1736
    int              fUseTravId;     // enables the use of traversal IDfUseTravId58,1804
    int              nCis;           // the number of PIsnCis59,1876
    int              nCos;           // the number of POsnCos60,1934
    Tim_Obj_t *      pCis;           // timing info for the PIspCis61,1992
    Tim_Obj_t *      pCos;           // timing info for the POspCos62,2056
struct Tim_Box_t_Tim_Box_t_66,2138
    int              iBox;           // the unique ID of this boxiBox68,2158
    int              TravId;         // traversal ID of this boxTravId69,2224
    int              nInputs;        // the number of box inputs (POs)nInputs70,2289
    int              nOutputs;       // the number of box outputs (PIs)nOutputs71,2360
    int              iDelayTable;    // index of the delay tableiDelayTable72,2432
    int              iCopy;          // copy of this boxiCopy73,2497
    int              fBlack;         // this is black boxfBlack74,2554
    int              Inouts[0];      // the int numbers of PIs and POsInouts75,2612
struct Tim_Obj_t_Tim_Obj_t_79,2704
    int              Id;             // the ID of this objectId81,2724
    int              TravId;         // traversal ID of this objectTravId82,2786
    int              iObj2Box;       // mapping of the object into its boxiObj2Box83,2854
    int              iObj2Num;       // mapping of the object into its number in the boxiObj2Num84,2929
    float            timeArr;        // arrival time of the objecttimeArr85,3018
    float            timeReq;        // required time of the objecttimeReq86,3085
static inline Tim_Obj_t * Tim_ManCi( Tim_Man_t * p, int i )                           { assert( i < p->nCis ); return p->pCis + i;      }Tim_ManCi93,3377
static inline Tim_Obj_t * Tim_ManCo( Tim_Man_t * p, int i )                           { assert( i < p->nCos ); return p->pCos + i;      }Tim_ManCo94,3515
static inline Tim_Box_t * Tim_ManBox( Tim_Man_t * p, int i )                          { return (Tim_Box_t *)Vec_PtrEntry(p->vBoxes, i); }Tim_ManBox95,3653
static inline Tim_Box_t * Tim_ManCiBox( Tim_Man_t * p, int i )                        { return Tim_ManCi(p,i)->iObj2Box < 0 ? NULL : (Tim_Box_t *)Vec_PtrEntry( p->vBoxes, Tim_ManCi(p,i)->iObj2Box ); }Tim_ManCiBox97,3792
static inline Tim_Box_t * Tim_ManCoBox( Tim_Man_t * p, int i )                        { return Tim_ManCo(p,i)->iObj2Box < 0 ? NULL : (Tim_Box_t *)Vec_PtrEntry( p->vBoxes, Tim_ManCo(p,i)->iObj2Box ); }Tim_ManCoBox98,3993
static inline Tim_Obj_t * Tim_ManBoxInput( Tim_Man_t * p, Tim_Box_t * pBox, int i )   { assert( i < pBox->nInputs  ); return p->pCos + pBox->Inouts[i];               }Tim_ManBoxInput100,4195
static inline Tim_Obj_t * Tim_ManBoxOutput( Tim_Man_t * p, Tim_Box_t * pBox, int i )  { assert( i < pBox->nOutputs ); return p->pCis + pBox->Inouts[pBox->nInputs+i]; }Tim_ManBoxOutput101,4363
#define Tim_ManForEachCi(Tim_ManForEachCi107,4752
#define Tim_ManForEachCo(Tim_ManForEachCo109,4894
#define Tim_ManForEachPi(Tim_ManForEachPi112,5037
#define Tim_ManForEachPo(Tim_ManForEachPo114,5182
#define Tim_ManForEachBox(Tim_ManForEachBox117,5328
#define Tim_ManBoxForEachInput(Tim_ManBoxForEachInput120,5462
#define Tim_ManBoxForEachOutput(Tim_ManBoxForEachOutput122,5624
#define Tim_ManForEachTable(Tim_ManForEachTable125,5789

src/misc/bzlib/blocksort.c,2583
void fallbackSimpleSort ( UInt32* fmap, fallbackSimpleSort34,1138
#define fswap(fswap65,1887
#define fvswap(fvswap68,1964
#define fmin(fmin80,2328
#define fpush(fpush82,2371
#define fpop(fpop86,2489
#define FALLBACK_QSORT_SMALL_THRESH FALLBACK_QSORT_SMALL_THRESH90,2618
#define FALLBACK_QSORT_STACK_SIZE FALLBACK_QSORT_STACK_SIZE91,2657
void fallbackQSort3 ( UInt32* fmap, fallbackQSort395,2706
#undef fminfmin184,5101
#undef fpushfpush185,5113
#undef fpopfpop186,5126
#undef fswapfswap187,5138
#undef fvswapfvswap188,5151
#undef FALLBACK_QSORT_SMALL_THRESHFALLBACK_QSORT_SMALL_THRESH189,5165
#undef FALLBACK_QSORT_STACK_SIZEFALLBACK_QSORT_STACK_SIZE190,5200
#define       SET_BH(SET_BH207,5636
#define     CLEAR_BH(CLEAR_BH208,5701
#define     ISSET_BH(ISSET_BH209,5767
#define      WORD_BH(WORD_BH210,5833
#define UNALIGNED_BH(UNALIGNED_BH211,5876
void fallbackSort ( UInt32* fmap, fallbackSort214,5925
#undef       SET_BHSET_BH333,9046
#undef     CLEAR_BHCLEAR_BH334,9066
#undef     ISSET_BHISSET_BH335,9086
#undef      WORD_BHWORD_BH336,9106
#undef UNALIGNED_BHUNALIGNED_BH337,9126
Bool mainGtU ( UInt32  i1, mainGtU349,9467
Int32 incs[14] = { 1, 4, 13, 40, 121, 364, 1093, 3280,incs482,12829
void mainSimpleSort ( UInt32* ptr,mainSimpleSort487,12977
#define mswap(mswap569,14888
#define mvswap(mvswap572,14965
UChar mmed3 ( UChar a, UChar b, UChar c )mmed3585,15347
#define mmin(mmin596,15518
#define mpush(mpush598,15561
#define mpop(mpop603,15734
#define mnextsize(mnextsize609,15916
#define mnextswap(mnextswap611,15963
#define MAIN_QSORT_SMALL_THRESH MAIN_QSORT_SMALL_THRESH618,16295
#define MAIN_QSORT_DEPTH_THRESH MAIN_QSORT_DEPTH_THRESH619,16330
#define MAIN_QSORT_STACK_SIZE MAIN_QSORT_STACK_SIZE620,16388
void mainQSort3 ( UInt32* ptr,mainQSort3623,16430
#undef mswapmswap721,19193
#undef mvswapmvswap722,19206
#undef mpushmpush723,19220
#undef mpopmpop724,19233
#undef mminmmin725,19245
#undef mnextsizemnextsize726,19257
#undef mnextswapmnextswap727,19274
#undef MAIN_QSORT_SMALL_THRESHMAIN_QSORT_SMALL_THRESH728,19291
#undef MAIN_QSORT_DEPTH_THRESHMAIN_QSORT_DEPTH_THRESH729,19322
#undef MAIN_QSORT_STACK_SIZEMAIN_QSORT_STACK_SIZE730,19353
#define BIGFREQ(BIGFREQ748,19847
#define SETMASK SETMASK749,19904
#define CLEARMASK CLEARMASK750,19930
void mainSort ( UInt32* ptr, mainSort753,19969
#undef BIGFREQBIGFREQ1015,28123
#undef SETMASKSETMASK1016,28138
#undef CLEARMASKCLEARMASK1017,28153
void BZ2_blockSort ( EState* s )BZ2_blockSort1033,28571

src/misc/bzlib/decompress.c,284
void makeMaps_d ( DState* s )makeMaps_d30,933
#define RETURN(RETURN43,1178
#define GET_BITS(GET_BITS46,1281
#define GET_UCHAR(GET_UCHAR70,2431
#define GET_BIT(GET_BIT73,2507
#define GET_MTF_VAL(GET_MTF_VAL77,2639
Int32 BZ2_decompress ( DState* s )BZ2_decompress109,4155

src/misc/bzlib/huffman.c,417
#define WEIGHTOF(WEIGHTOF28,925
#define DEPTHOF(DEPTHOF29,969
#define MYMAX(MYMAX30,1013
#define ADDWEIGHTS(ADDWEIGHTS32,1069
#define UPHEAP(UPHEAP36,1224
#define DOWNHEAP(DOWNHEAP47,1731
void BZ2_hbMakeCodeLengths ( UChar *len, BZ2_hbMakeCodeLengths66,2631
void BZ2_hbAssignCodes ( Int32 *code,BZ2_hbAssignCodes155,5414
void BZ2_hbCreateDecodeTables ( Int32 *limit,BZ2_hbCreateDecodeTables173,5864

src/misc/bzlib/compress.c,946
void BZ2_bsInitWrite ( EState* s )BZ2_bsInitWrite40,1304
void bsFinishWrite ( EState* s )bsFinishWrite49,1444
#define bsNEEDW(bsNEEDW61,1685
void bsW ( EState* s, Int32 n, UInt32 v )bsW76,2195
void bsPutUInt32 ( EState* s, UInt32 u )bsPutUInt3286,2388
void bsPutUChar ( EState* s, UChar c )bsPutUChar97,2642
void makeMaps_e ( EState* s )makeMaps_e109,2946
void generateMTFValues ( EState* s )generateMTFValues123,3198
#define BZ_LESSER_ICOST BZ_LESSER_ICOST238,6183
#define BZ_GREATER_ICOST BZ_GREATER_ICOST239,6210
void sendMTFValues ( EState* s )sendMTFValues242,6246
#           define BZ_ITER(BZ_ITER367,9852
#           undef BZ_ITERBZ_ITER384,10862
#           define BZ_ITUR(BZ_ITUR416,11931
#           undef BZ_ITURBZ_ITUR429,12764
#           define BZ_ITAH(BZ_ITAH565,16718
#           undef BZ_ITAHBZ_ITAH582,17753
void BZ2_compressBlock ( EState* s, Bool is_last_block )BZ2_compressBlock605,18280

src/misc/bzlib/bzlib.c,3416
#define fileno fileno40,1311
#define fdopen fdopen41,1336
#define setmode setmode42,1361
void BZ2_bz__AssertH__fail ( int errcode )BZ2_bz__AssertH__fail52,1642
int bz_config_ok ( void )bz_config_ok102,3710
void* default_bzalloc ( void* opaque, Int32 items, Int32 size )default_bzalloc113,3929
void default_bzfree ( void* opaque, void* addr )default_bzfree120,4056
void prepare_new_block ( EState* s )prepare_new_block128,4210
void init_RL ( EState* s )init_RL142,4492
Bool isempty_RL ( EState* s )isempty_RL150,4582
int BZ_API(BZ2_bzCompressInit) BZ2_bzCompressInit159,4770
void add_pair_to_block ( EState* s )add_pair_to_block227,6799
void flush_RL ( EState* s )flush_RL263,7914
#define ADD_CHAR_TO_BLOCK(ADD_CHAR_TO_BLOCK271,8076
Bool copy_input_until_stop ( EState* s )copy_input_until_stop300,9391
Bool copy_output_until_stop ( EState* s )copy_output_until_stop345,10697
Bool handle_compress ( bz_stream* strm )handle_compress372,11304
int BZ_API(BZ2_bzCompress) ( bz_stream *strm, int action )BZ2_bzCompress418,12565
int BZ_API(BZ2_bzCompressEnd)  ( bz_stream *strm )BZ2_bzCompressEnd479,14451
int BZ_API(BZ2_bzDecompressInit) BZ2_bzDecompressInit503,15102
Bool unRLE_obuf_to_output_FAST ( DState* s )unRLE_obuf_to_output_FAST547,16449
Int32 BZ2_indexIntoF ( Int32 indx, Int32 *cftab )BZ2_indexIntoF698,21771
Bool unRLE_obuf_to_output_SMALL ( DState* s )unRLE_obuf_to_output_SMALL717,22166
int BZ_API(BZ2_bzDecompress) ( bz_stream *strm )BZ2_bzDecompress819,25655
int BZ_API(BZ2_bzDecompressEnd)  ( bz_stream *strm )BZ2_bzDecompressEnd873,27577
#define BZ_SETERR(BZ_SETERR897,28188
      FILE*     handle;handle905,28388
      Char      buf[BZ_MAX_UNUSED];buf906,28412
      Int32     bufN;bufN907,28448
      Bool      writing;writing908,28470
      bz_stream strm;strm909,28495
      Int32     lastErr;lastErr910,28517
      Bool      initialisedOk;initialisedOk911,28542
   bzFile;bzFile913,28578
static Bool myfeof ( FILE* f )myfeof917,28641
BZFILE* BZ_API(BZ2_bzWriteOpen) BZ2_bzWriteOpen927,28827
void BZ_API(BZ2_bzWrite)BZ2_bzWrite975,30109
void BZ_API(BZ2_bzWriteClose)BZ2_bzWriteClose1020,31344
void BZ_API(BZ2_bzWriteClose64)BZ2_bzWriteClose641032,31704
BZFILE* BZ_API(BZ2_bzReadOpen) BZ2_bzReadOpen1098,33849
void BZ_API(BZ2_bzReadClose) ( int *bzerror, BZFILE *b )BZ2_bzReadClose1154,35318
int BZ_API(BZ2_bzRead) BZ2_bzRead1172,35711
void BZ_API(BZ2_bzReadGetUnused) BZ2_bzReadGetUnused1232,37271
int BZ_API(BZ2_bzBuffToBuffCompress) BZ2_bzBuffToBuffCompress1258,38058
int BZ_API(BZ2_bzBuffToBuffDecompress) BZ2_bzBuffToBuffDecompress1310,39548
const char * BZ_API(BZ2_bzlibVersion)(void)BZ2_bzlibVersion1377,41463
#   define SET_BINARY_MODE(SET_BINARY_MODE1389,41707
#   define SET_BINARY_MODE(SET_BINARY_MODE1391,41777
BZFILE * bzopen_or_bzdopenbzopen_or_bzdopen1394,41824
BZFILE * BZ_API(BZ2_bzopen)BZ2_bzopen1471,43859
BZFILE * BZ_API(BZ2_bzdopen)BZ2_bzdopen1480,44075
int BZ_API(BZ2_bzread) (BZFILE* b, void* buf, int len )BZ2_bzread1489,44283
int BZ_API(BZ2_bzwrite) (BZFILE* b, void* buf, int len )BZ2_bzwrite1503,44625
int BZ_API(BZ2_bzflush) (BZFILE *b)BZ2_bzflush1517,44866
void BZ_API(BZ2_bzclose) (BZFILE* b)BZ2_bzclose1525,45004
static const char *bzerrorstrings[] = {bzerrorstrings1550,45488
const char * BZ_API(BZ2_bzerror) (BZFILE *b, int *errnum)BZ2_bzerror1570,45933

src/misc/bzlib/crctable.c,54
UInt32 BZ2_crc32Table[256] = {BZ2_crc32Table34,1064

src/misc/bzlib/bzlib.h,1811
#undef __STDC____STDC__23,843
#define ABC__misc__bzlib__bzlib_hABC__misc__bzlib__bzlib_h28,908
#define BZ_RUN BZ_RUN30,943
#define BZ_FLUSH BZ_FLUSH31,974
#define BZ_FINISH BZ_FINISH32,1005
#define BZ_OK BZ_OK34,1037
#define BZ_RUN_OK BZ_RUN_OK35,1068
#define BZ_FLUSH_OK BZ_FLUSH_OK36,1099
#define BZ_FINISH_OK BZ_FINISH_OK37,1130
#define BZ_STREAM_END BZ_STREAM_END38,1161
#define BZ_SEQUENCE_ERROR BZ_SEQUENCE_ERROR39,1192
#define BZ_PARAM_ERROR BZ_PARAM_ERROR40,1226
#define BZ_MEM_ERROR BZ_MEM_ERROR41,1260
#define BZ_DATA_ERROR BZ_DATA_ERROR42,1294
#define BZ_DATA_ERROR_MAGIC BZ_DATA_ERROR_MAGIC43,1328
#define BZ_IO_ERROR BZ_IO_ERROR44,1362
#define BZ_UNEXPECTED_EOF BZ_UNEXPECTED_EOF45,1396
#define BZ_OUTBUFF_FULL BZ_OUTBUFF_FULL46,1430
#define BZ_CONFIG_ERROR BZ_CONFIG_ERROR47,1464
      char *next_in;next_in51,1520
      unsigned int avail_in;avail_in52,1541
      unsigned int total_in_lo32;total_in_lo3253,1570
      unsigned int total_in_hi32;total_in_hi3254,1604
      char *next_out;next_out56,1639
      unsigned int avail_out;avail_out57,1661
      unsigned int total_out_lo32;total_out_lo3258,1691
      unsigned int total_out_hi32;total_out_hi3259,1726
      void *state;state61,1762
      void *(*bzalloc)(void *,int,int);bzalloc63,1782
      void (*bzfree)(void *,void *);bzfree64,1822
      void *opaque;opaque65,1859
   bz_stream;bz_stream67,1885
#define BZ_EXPORTBZ_EXPORT71,1919
#      undef smallsmall83,2124
#   define BZ_API(BZ_API86,2173
#   define BZ_EXTERN BZ_EXTERN87,2209
#   define BZ_API(BZ_API90,2286
#   define BZ_EXTERNBZ_EXTERN91,2326
#   define BZ_API(BZ_API94,2363
#   define BZ_EXTERN BZ_EXTERN95,2392
#define BZ_MAX_UNUSED BZ_MAX_UNUSED140,3224
typedef void BZFILE;BZFILE142,3252

src/misc/bzlib/bzlib_private.h,9652
#define ABC__misc__bzlib__bzlib_private_hABC__misc__bzlib__bzlib_private_h23,856
#define BZ_VERSION BZ_VERSION41,1082
typedef char            Char;Char43,1124
typedef unsigned char   Bool;Bool44,1154
typedef unsigned char   UChar;UChar45,1184
typedef int             Int32;Int3246,1215
typedef unsigned int    UInt32;UInt3247,1246
typedef short           Int16;Int1648,1278
typedef unsigned short  UInt16;UInt1649,1309
#define True True51,1342
#define False False52,1366
#define __inline__ __inline__55,1408
#define AssertH(AssertH61,1515
#define AssertD(AssertD65,1616
#define AssertD(AssertD72,1798
#define VPrintf0(VPrintf075,1838
#define VPrintf1(VPrintf177,1883
#define VPrintf2(VPrintf279,1936
#define VPrintf3(VPrintf381,1997
#define VPrintf4(VPrintf483,2066
#define VPrintf5(VPrintf585,2143
#define AssertH(AssertH91,2283
#define AssertD(AssertD93,2366
#define VPrintf0(VPrintf094,2424
#define VPrintf1(VPrintf195,2482
#define VPrintf2(VPrintf296,2540
#define VPrintf3(VPrintf397,2598
#define VPrintf4(VPrintf498,2656
#define VPrintf5(VPrintf599,2714
#define BZALLOC(BZALLOC104,2782
#define BZFREE(BZFREE105,2841
#define BZ_HDR_B BZ_HDR_B110,2924
#define BZ_HDR_Z BZ_HDR_Z111,2958
#define BZ_HDR_h BZ_HDR_h112,2992
#define BZ_HDR_0 BZ_HDR_0113,3026
#define BZ_MAX_ALPHA_SIZE BZ_MAX_ALPHA_SIZE117,3102
#define BZ_MAX_CODE_LEN BZ_MAX_CODE_LEN118,3132
#define BZ_RUNA BZ_RUNA120,3163
#define BZ_RUNB BZ_RUNB121,3181
#define BZ_N_GROUPS BZ_N_GROUPS123,3200
#define BZ_G_SIZE BZ_G_SIZE124,3222
#define BZ_N_ITERS BZ_N_ITERS125,3245
#define BZ_MAX_SELECTORS BZ_MAX_SELECTORS127,3268
#define BZ_RAND_DECLS BZ_RAND_DECLS135,3405
#define BZ_RAND_INIT_MASK BZ_RAND_INIT_MASK139,3553
#define BZ_RAND_MASK BZ_RAND_MASK143,3701
#define BZ_RAND_UPD_MASK BZ_RAND_UPD_MASK145,3750
#define BZ_INITIALISE_CRC(BZ_INITIALISE_CRC159,4132
#define BZ_FINALISE_CRC(BZ_FINALISE_CRC164,4282
#define BZ_UPDATE_CRC(BZ_UPDATE_CRC169,4432
#define BZ_M_IDLE BZ_M_IDLE180,4727
#define BZ_M_RUNNING BZ_M_RUNNING181,4752
#define BZ_M_FLUSHING BZ_M_FLUSHING182,4777
#define BZ_M_FINISHING BZ_M_FINISHING183,4802
#define BZ_S_OUTPUT BZ_S_OUTPUT185,4828
#define BZ_S_INPUT BZ_S_INPUT186,4853
#define BZ_N_RADIX BZ_N_RADIX188,4879
#define BZ_N_QSORT BZ_N_QSORT189,4900
#define BZ_N_SHELL BZ_N_SHELL190,4922
#define BZ_N_OVERSHOOT BZ_N_OVERSHOOT191,4944
      bz_stream* strm;strm201,5144
      Int32    mode;mode205,5257
      Int32    state;state206,5278
      UInt32   avail_in_expect;avail_in_expect209,5360
      UInt32*  arr1;arr1212,5433
      UInt32*  arr2;arr2213,5454
      UInt32*  ftab;ftab214,5475
      Int32    origPtr;origPtr215,5496
      UInt32*  ptr;ptr218,5559
      UChar*   block;block219,5579
      UInt16*  mtfv;mtfv220,5601
      UChar*   zbits;zbits221,5622
      Int32    workFactor;workFactor224,5713
      UInt32   state_in_ch;state_in_ch227,5786
      Int32    state_in_len;state_in_len228,5814
      BZ_RAND_DECLS;BZ_RAND_DECLS229,5843
      Int32    nblock;nblock232,5919
      Int32    nblockMAX;nblockMAX233,5942
      Int32    numZ;numZ234,5968
      Int32    state_out_pos;state_out_pos235,5989
      Int32    nInUse;nInUse238,6059
      Bool     inUse[256];inUse239,6082
      UChar    unseqToSeq[256];unseqToSeq240,6109
      UInt32   bsBuff;bsBuff243,6189
      Int32    bsLive;bsLive244,6212
      UInt32   blockCRC;blockCRC247,6272
      UInt32   combinedCRC;combinedCRC248,6297
      Int32    verbosity;verbosity251,6358
      Int32    blockNo;blockNo252,6384
      Int32    blockSize100k;blockSize100k253,6408
      Int32    nMTF;nMTF256,6483
      Int32    mtfFreq    [BZ_MAX_ALPHA_SIZE];mtfFreq257,6504
      UChar    selector   [BZ_MAX_SELECTORS];selector258,6551
      UChar    selectorMtf[BZ_MAX_SELECTORS];selectorMtf259,6597
      UChar    len     [BZ_N_GROUPS][BZ_MAX_ALPHA_SIZE];len261,6644
      Int32    code    [BZ_N_GROUPS][BZ_MAX_ALPHA_SIZE];code262,6701
      Int32    rfreq   [BZ_N_GROUPS][BZ_MAX_ALPHA_SIZE];rfreq263,6758
      UInt32   len_pack[BZ_MAX_ALPHA_SIZE][4];len_pack265,6894
   EState;EState268,6947
#define BZ_X_IDLE BZ_X_IDLE293,7314
#define BZ_X_OUTPUT BZ_X_OUTPUT294,7341
#define BZ_X_MAGIC_1 BZ_X_MAGIC_1296,7369
#define BZ_X_MAGIC_2 BZ_X_MAGIC_2297,7397
#define BZ_X_MAGIC_3 BZ_X_MAGIC_3298,7425
#define BZ_X_MAGIC_4 BZ_X_MAGIC_4299,7453
#define BZ_X_BLKHDR_1 BZ_X_BLKHDR_1300,7481
#define BZ_X_BLKHDR_2 BZ_X_BLKHDR_2301,7509
#define BZ_X_BLKHDR_3 BZ_X_BLKHDR_3302,7537
#define BZ_X_BLKHDR_4 BZ_X_BLKHDR_4303,7565
#define BZ_X_BLKHDR_5 BZ_X_BLKHDR_5304,7593
#define BZ_X_BLKHDR_6 BZ_X_BLKHDR_6305,7621
#define BZ_X_BCRC_1 BZ_X_BCRC_1306,7649
#define BZ_X_BCRC_2 BZ_X_BCRC_2307,7677
#define BZ_X_BCRC_3 BZ_X_BCRC_3308,7705
#define BZ_X_BCRC_4 BZ_X_BCRC_4309,7733
#define BZ_X_RANDBIT BZ_X_RANDBIT310,7761
#define BZ_X_ORIGPTR_1 BZ_X_ORIGPTR_1311,7789
#define BZ_X_ORIGPTR_2 BZ_X_ORIGPTR_2312,7817
#define BZ_X_ORIGPTR_3 BZ_X_ORIGPTR_3313,7845
#define BZ_X_MAPPING_1 BZ_X_MAPPING_1314,7873
#define BZ_X_MAPPING_2 BZ_X_MAPPING_2315,7901
#define BZ_X_SELECTOR_1 BZ_X_SELECTOR_1316,7929
#define BZ_X_SELECTOR_2 BZ_X_SELECTOR_2317,7957
#define BZ_X_SELECTOR_3 BZ_X_SELECTOR_3318,7985
#define BZ_X_CODING_1 BZ_X_CODING_1319,8013
#define BZ_X_CODING_2 BZ_X_CODING_2320,8041
#define BZ_X_CODING_3 BZ_X_CODING_3321,8069
#define BZ_X_MTF_1 BZ_X_MTF_1322,8097
#define BZ_X_MTF_2 BZ_X_MTF_2323,8125
#define BZ_X_MTF_3 BZ_X_MTF_3324,8153
#define BZ_X_MTF_4 BZ_X_MTF_4325,8181
#define BZ_X_MTF_5 BZ_X_MTF_5326,8209
#define BZ_X_MTF_6 BZ_X_MTF_6327,8237
#define BZ_X_ENDHDR_2 BZ_X_ENDHDR_2328,8265
#define BZ_X_ENDHDR_3 BZ_X_ENDHDR_3329,8293
#define BZ_X_ENDHDR_4 BZ_X_ENDHDR_4330,8321
#define BZ_X_ENDHDR_5 BZ_X_ENDHDR_5331,8349
#define BZ_X_ENDHDR_6 BZ_X_ENDHDR_6332,8377
#define BZ_X_CCRC_1 BZ_X_CCRC_1333,8405
#define BZ_X_CCRC_2 BZ_X_CCRC_2334,8433
#define BZ_X_CCRC_3 BZ_X_CCRC_3335,8461
#define BZ_X_CCRC_4 BZ_X_CCRC_4336,8489
#define MTFA_SIZE MTFA_SIZE342,8567
#define MTFL_SIZE MTFL_SIZE343,8590
      bz_stream* strm;strm352,8746
      Int32    state;state355,8814
      UChar    state_out_ch;state_out_ch358,8889
      Int32    state_out_len;state_out_len359,8918
      Bool     blockRandomised;blockRandomised360,8948
      BZ_RAND_DECLS;BZ_RAND_DECLS361,8980
      UInt32   bsBuff;bsBuff364,9048
      Int32    bsLive;bsLive365,9071
      Int32    blockSize100k;blockSize100k368,9127
      Bool     smallDecompress;smallDecompress369,9157
      Int32    currBlockNo;currBlockNo370,9189
      Int32    verbosity;verbosity371,9217
      Int32    origPtr;origPtr374,9298
      UInt32   tPos;tPos375,9322
      Int32    k0;k0376,9343
      Int32    unzftab[256];unzftab377,9362
      Int32    nblock_used;nblock_used378,9391
      Int32    cftab[257];cftab379,9419
      Int32    cftabCopy[257];cftabCopy380,9446
      UInt32   *tt;tt383,9539
      UInt16   *ll16;ll16386,9622
      UChar    *ll4;ll4387,9644
      UInt32   storedBlockCRC;storedBlockCRC390,9705
      UInt32   storedCombinedCRC;storedCombinedCRC391,9736
      UInt32   calculatedBlockCRC;calculatedBlockCRC392,9770
      UInt32   calculatedCombinedCRC;calculatedCombinedCRC393,9805
      Int32    nInUse;nInUse396,9883
      Bool     inUse[256];inUse397,9906
      Bool     inUse16[16];inUse16398,9933
      UChar    seqToUnseq[256];seqToUnseq399,9961
      UChar    mtfa   [MTFA_SIZE];mtfa402,10034
      Int32    mtfbase[256 / MTFL_SIZE];mtfbase403,10069
      UChar    selector   [BZ_MAX_SELECTORS];selector404,10110
      UChar    selectorMtf[BZ_MAX_SELECTORS];selectorMtf405,10156
      UChar    len  [BZ_N_GROUPS][BZ_MAX_ALPHA_SIZE];len406,10202
      Int32    limit  [BZ_N_GROUPS][BZ_MAX_ALPHA_SIZE];limit408,10257
      Int32    base   [BZ_N_GROUPS][BZ_MAX_ALPHA_SIZE];base409,10313
      Int32    perm   [BZ_N_GROUPS][BZ_MAX_ALPHA_SIZE];perm410,10369
      Int32    minLens[BZ_N_GROUPS];minLens411,10425
      Int32    save_i;save_i414,10525
      Int32    save_j;save_j415,10548
      Int32    save_t;save_t416,10571
      Int32    save_alphaSize;save_alphaSize417,10594
      Int32    save_nGroups;save_nGroups418,10625
      Int32    save_nSelectors;save_nSelectors419,10654
      Int32    save_EOB;save_EOB420,10686
      Int32    save_groupNo;save_groupNo421,10711
      Int32    save_groupPos;save_groupPos422,10740
      Int32    save_nextSym;save_nextSym423,10770
      Int32    save_nblockMAX;save_nblockMAX424,10799
      Int32    save_nblock;save_nblock425,10830
      Int32    save_es;save_es426,10858
      Int32    save_N;save_N427,10882
      Int32    save_curr;save_curr428,10905
      Int32    save_zt;save_zt429,10931
      Int32    save_zn; save_zn430,10955
      Int32    save_zvec;save_zvec431,10980
      Int32    save_zj;save_zj432,11006
      Int32    save_gSel;save_gSel433,11030
      Int32    save_gMinlen;save_gMinlen434,11056
      Int32*   save_gLimit;save_gLimit435,11085
      Int32*   save_gBase;save_gBase436,11113
      Int32*   save_gPerm;save_gPerm437,11140
   DState;DState440,11173
#define BZ_GET_FAST(BZ_GET_FAST446,11224
#define BZ_GET_FAST_C(BZ_GET_FAST_C453,11526
#define SET_LL4(SET_LL4460,11826
#define GET_LL4(GET_LL4466,12100
#define SET_LL(SET_LL469,12214
#define GET_LL(GET_LL474,12361
#define BZ_GET_SMALL(BZ_GET_SMALL477,12429
#define NULL NULL504,13069

src/misc/bzlib/randtable.c,43
Int32 BZ2_rNums[512] = { BZ2_rNums29,920

src/misc/st/st.c,2103
#define st__NUMCMP(st__NUMCMP19,231
#define st__NUMHASH(st__NUMHASH20,268
#define st__PTRHASH(st__PTRHASH22,420
#define EQUAL(EQUAL23,486
#define do_hash(do_hash28,636
 st__init_table_with_params( st__compare_func_type compare, st__hash_func_type hash, int size, int density, double grow_factor, int reorder_flag)st__init_table_with_params41,1073
 st__init_table( st__compare_func_type compare, st__hash_func_type hash)st__init_table72,1875
 st__free_table( st__table *table)st__free_table81,2196
#define PTR_NOT_EQUAL(PTR_NOT_EQUAL98,2506
#define FIND_ENTRY(FIND_ENTRY101,2614
 st__lookup( st__table *table, const char *key, char **value)st__lookup114,3006
 st__lookup_int( st__table *table, char *key, int *value)st__lookup_int134,3353
#define ADD_DIRECT(ADD_DIRECT154,3775
 st__insert( st__table *table, const char *key, char *value)st__insert171,4174
 st__add_direct( st__table *table, char *key, char *value)st__add_direct205,4995
 st__find_or_add( st__table *table, char *key, char ***slot)st__find_or_add230,5630
 st__find( st__table *table, char *key, char ***slot)st__find264,6498
rehash( st__table *table)rehash284,6838
 st__copy( st__table *old_table)st__copy330,8001
 st__delete( st__table *table, const char **keyp, char **value)st__delete375,9241
 st__delete_int( st__table *table, long *keyp, char **value)st__delete_int398,9680
 st__foreach( st__table *table, enum st__retval (*func)(char *, char *, char *), char *arg)st__foreach421,10126
 st__strhash(const char *string, int modulus)st__strhash449,10796
 st__numhash(const char *x, int size)st__numhash461,11065
 st__ptrhash(const char *x, int size)st__ptrhash467,11145
 st__numcmp(const char *x, const char *y)st__numcmp473,11225
 st__ptrcmp(const char *x, const char *y)st__ptrcmp479,11305
 st__init_gen( st__table *table)st__init_gen485,11398
 st__gen( st__generator *gen, const char **key_p, char **value_p)st__gen501,11636
 st__gen_int( st__generator *gen, const char **key_p, long *value_p)st__gen_int528,12222
 st__free_gen( st__generator *gen)st__free_gen555,12818

src/misc/st/st.h,2131
#define ABC__misc__st__st_hABC__misc__st__st_h15,255
#define st__INCLUDEDst__INCLUDED16,283
#           define EXTERN EXTERN27,472
#define ARGS(ARGS37,638
typedef int (* st__compare_func_type)(const char*, const char*);st__compare_func_type41,675
typedef int (* st__hash_func_type)(const char*, int);st__hash_func_type42,740
typedef struct st__table_entry st__table_entry;st__table_entry44,795
struct st__table_entry {st__table_entry45,843
    char *key;key46,868
    char *record;record47,883
    st__table_entry *next;next48,901
typedef struct st__table st__table;st__table51,932
struct st__table {st__table52,968
    st__compare_func_type compare;compare53,987
    st__hash_func_type hash;hash54,1022
    int num_bins;num_bins55,1051
    int num_entries;num_entries56,1069
    int max_density;max_density57,1090
    int reorder_flag;reorder_flag58,1111
    double grow_factor;grow_factor59,1133
    st__table_entry **bins;bins60,1157
typedef struct st__generator st__generator;st__generator63,1189
struct st__generator {st__generator64,1233
    st__table *table;table65,1256
    st__table_entry *entry;entry66,1278
    int index;index67,1306
#define st__is_member(st__is_member70,1325
#define st__count(st__count71,1392
enum st__retval { st__CONTINUE, st__STOP, st__DELETE};st__retval73,1441
enum st__retval { st__CONTINUE, st__STOP, st__DELETE};st__CONTINUE73,1441
enum st__retval { st__CONTINUE, st__STOP, st__DELETE};st__STOP73,1441
enum st__retval { st__CONTINUE, st__STOP, st__DELETE};st__DELETE73,1441
typedef enum st__retval (* st__PFSR)(char *, char *, char *);st__PFSR75,1497
typedef int (* st__PFI)();st__PFI76,1559
#define st__DEFAULT_MAX_DENSITY st__DEFAULT_MAX_DENSITY102,2913
#define st__DEFAULT_INIT_TABLE_SIZE st__DEFAULT_INIT_TABLE_SIZE103,2947
#define st__DEFAULT_GROW_FACTOR st__DEFAULT_GROW_FACTOR104,2986
#define st__DEFAULT_REORDER_FLAG st__DEFAULT_REORDER_FLAG105,3022
#define st__foreach_item(st__foreach_item107,3058
#define st__foreach_item_int(st__foreach_item_int110,3195
#define st__OUT_OF_MEM st__OUT_OF_MEM113,3340

src/misc/st/stmm.c,2181
#define STMM_NUMCMP(STMM_NUMCMP17,222
#define STMM_NUMHASH(STMM_NUMHASH18,260
#define STMM_PTRHASH(STMM_PTRHASH20,414
#define EQUAL(EQUAL21,481
#define do_hash(do_hash26,634
stmm_init_table_with_params (stmm_compare_func_type compare, stmm_hash_func_type hash, int size, int density, double grow_factor, int reorder_flag)stmm_init_table_with_params35,993
stmm_init_table (stmm_compare_func_type compare, stmm_hash_func_type hash)stmm_init_table69,1894
stmm_free_table (stmm_table *table)stmm_free_table79,2224
stmm_clean (stmm_table *table)stmm_clean105,2819
#define PTR_NOT_EQUAL(PTR_NOT_EQUAL118,3114
#define FIND_ENTRY(FIND_ENTRY121,3222
stmm_lookup (stmm_table *table, char *key, char **value)stmm_lookup134,3614
stmm_lookup_int (stmm_table *table, char *key, int *value)stmm_lookup_int156,3962
#define ADD_DIRECT(ADD_DIRECT183,4501
stmm_insert (stmm_table *table, char *key, char *value)stmm_insert200,4950
stmm_add_direct (stmm_table *table, char *key, char *value)stmm_add_direct238,5886
stmm_find_or_add (stmm_table *table, char *key, char ***slot)stmm_find_or_add266,6630
stmm_find (stmm_table *table, char *key, char ***slot)stmm_find306,7633
rehash (stmm_table *table)rehash328,7985
stmm_copy (stmm_table *old_table)stmm_copy374,9141
stmm_delete (stmm_table *table, char **keyp, char **value)stmm_delete430,10853
stmm_delete_int (stmm_table *table, long *keyp, char **value)stmm_delete_int456,11373
stmm_foreach (stmm_table *table, enum stmm_retval (*func) (char *, char *, char *), char *arg)stmm_foreach482,11912
stmm_strhash (const char *string, int modulus)stmm_strhash514,12716
stmm_numhash (const char *x, int size)stmm_numhash527,12918
stmm_ptrhash (const char *x, int size)stmm_ptrhash533,13001
stmm_numcmp (const char *x, const char *y)stmm_numcmp539,13084
stmm_ptrcmp (const char *x, const char *y)stmm_ptrcmp545,13167
stmm_init_gen (stmm_table *table)stmm_init_gen551,13263
stmm_gen (stmm_generator *gen, char **key_p, char **value_p)stmm_gen567,13502
stmm_gen_int (stmm_generator *gen, char **key_p, long *value_p)stmm_gen_int594,14085
stmm_free_gen (stmm_generator *gen)stmm_free_gen622,14683

src/misc/st/stmm.h,2112
#define ABC__misc__st__stmm_hABC__misc__st__stmm_h15,257
#           define EXTERN EXTERN26,455
#define ARGS(ARGS36,621
typedef int (*stmm_compare_func_type)(const char*, const char*);stmm_compare_func_type39,657
typedef int (*stmm_hash_func_type)(const char*, int);stmm_hash_func_type40,722
typedef struct stmm_table_entry stmm_table_entry;stmm_table_entry42,777
typedef struct stmm_table stmm_table;stmm_table43,827
typedef struct stmm_generator stmm_generator;stmm_generator44,865
struct stmm_table_entrystmm_table_entry46,912
    char *key;key48,938
    char *record;record49,953
    stmm_table_entry *next;next50,971
struct stmm_tablestmm_table53,1003
    stmm_compare_func_type compare;compare55,1023
    stmm_hash_func_type hash;hash56,1059
    int num_bins;num_bins57,1089
    int num_entries;num_entries58,1107
    int max_density;max_density59,1128
    int reorder_flag;reorder_flag60,1149
    double grow_factor;grow_factor61,1171
    stmm_table_entry **bins;bins62,1195
    void * pMemMan;pMemMan65,1340
struct stmm_generatorstmm_generator68,1364
    stmm_table *table;table70,1388
    stmm_table_entry *entry;entry71,1411
    int index;index72,1440
#define stmm_is_member(stmm_is_member75,1459
#define stmm_count(stmm_count76,1528
enum stmm_retvalstmm_retval78,1578
{ STMM_CONTINUE, STMM_STOP, STMM_DELETE };STMM_CONTINUE79,1595
{ STMM_CONTINUE, STMM_STOP, STMM_DELETE };STMM_STOP79,1595
{ STMM_CONTINUE, STMM_STOP, STMM_DELETE };STMM_DELETE79,1595
typedef enum stmm_retval (*STMM_PFSR) (char *, char *, char *);STMM_PFSR81,1639
#define STMM_DEFAULT_MAX_DENSITY STMM_DEFAULT_MAX_DENSITY111,3250
#define STMM_DEFAULT_INIT_TABLE_SIZE STMM_DEFAULT_INIT_TABLE_SIZE112,3292
#define STMM_DEFAULT_GROW_FACTOR STMM_DEFAULT_GROW_FACTOR113,3334
#define STMM_DEFAULT_REORDER_FLAG STMM_DEFAULT_REORDER_FLAG114,3376
#define stmm_foreach_item2(stmm_foreach_item2117,3470
#define stmm_foreach_item(stmm_foreach_item121,3633
#define stmm_foreach_item_int(stmm_foreach_item_int124,3772
#define STMM_OUT_OF_MEM STMM_OUT_OF_MEM127,3919

src/misc/extra/extraUtilMisc.c,5047
int Extra_Base2LogDouble( double Num )Extra_Base2LogDouble75,2816
double Extra_Power2( int Degree )Extra_Power299,3301
int Extra_Power3( int Num )Extra_Power3121,3733
int Extra_NumCombinations( int k, int n )Extra_NumCombinations142,4158
int * Extra_DeriveRadixCode( int Number, int Radix, int nDigits )Extra_DeriveRadixCode161,4563
int Extra_CountOnes( unsigned char * pBytes, int nBytes )Extra_CountOnes186,5122
int Extra_Factorial( int n )Extra_Factorial217,6187
char ** Extra_Permutations( int n )Extra_Permutations239,6844
void Extra_Permutations_rec( char ** pRes, int nFact, int n, char Array[] )Extra_Permutations_rec278,7717
void Extra_TruthPermute_int( int * pMints, int nMints, char * pPerm, int nVars, int * pMintsP )Extra_TruthPermute_int330,8963
unsigned Extra_TruthPermute( unsigned Truth, char * pPerms, int nVars, int fReverse )Extra_TruthPermute353,9629
unsigned Extra_TruthPolarize( unsigned uTruth, int Polarity, int nVars )Extra_TruthPolarize401,10719
unsigned Extra_TruthCanonN( unsigned uTruth, int nVars )Extra_TruthCanonN440,11939
unsigned Extra_TruthCanonNN( unsigned uTruth, int nVars )Extra_TruthCanonNN466,12591
unsigned Extra_TruthCanonP( unsigned uTruth, int nVars )Extra_TruthCanonP496,13455
unsigned Extra_TruthCanonNP( unsigned uTruth, int nVars )Extra_TruthCanonNP539,14492
unsigned Extra_TruthCanonNPN( unsigned uTruth, int nVars )Extra_TruthCanonNPN587,15710
void Extra_Truth4VarNPN( unsigned short ** puCanons, char ** puPhases, char ** puPerms, unsigned char ** puMap )Extra_Truth4VarNPN643,17277
void Extra_Truth3VarN( unsigned ** puCanons, char *** puPhases, char ** ppCounters )Extra_Truth3VarN747,20494
void Extra_Truth4VarN( unsigned short ** puCanons, char *** puPhases, char ** ppCounters, int nPhasesMax )Extra_Truth4VarN815,22545
void ** Extra_ArrayAlloc( int nCols, int nRows, int Size )Extra_ArrayAlloc881,24498
unsigned short Extra_TruthPerm4One( unsigned uTruth, int Phase )Extra_TruthPerm4One906,25200
unsigned Extra_TruthPerm5One( unsigned uTruth, int Phase )Extra_TruthPerm5One976,27214
void Extra_TruthPerm6One( unsigned * uTruth, int Phase, unsigned * uTruthRes )Extra_TruthPerm6One1078,30534
void Extra_TruthExpand( int nVars, int nWords, unsigned * puTruth, unsigned uPhase, unsigned * puTruthR )Extra_TruthExpand1280,37260
unsigned short ** Extra_TruthPerm43()Extra_TruthPerm431909,59528
unsigned ** Extra_TruthPerm53()Extra_TruthPerm531935,60175
unsigned ** Extra_TruthPerm54()Extra_TruthPerm541961,60828
unsigned ** Extra_TruthPerm63()Extra_TruthPerm631989,61606
unsigned ** Extra_Truths8()Extra_Truths82016,62296
void Extra_BubbleSort( int Order[], int Costs[], int nSize, int fIncreasing )Extra_BubbleSort2045,63656
void Extra_TruthExpandGeneratePermTable()Extra_TruthExpandGeneratePermTable2104,65411
int * Extra_GreyCodeSchedule( int n )Extra_GreyCodeSchedule2170,67190
int * Extra_PermSchedule( int n )Extra_PermSchedule2206,68076
static inline word Extra_Truth6SwapAdjacent( word t, int v )Extra_Truth6SwapAdjacent2265,69440
static inline word Extra_Truth6ChangePhase( word t, int v )Extra_Truth6ChangePhase2278,70221
word Extra_Truth6MinimumExact( word t, int * pComp, int * pPerm )Extra_Truth6MinimumExact2292,70682
static inline int Extra_Truth6Ones( word t )Extra_Truth6Ones2330,71719
static inline word Extra_Truth6MinimumRoundOne( word t, int v )Extra_Truth6MinimumRoundOne2339,72287
static inline word Extra_Truth6MinimumRoundMany( word t )Extra_Truth6MinimumRoundMany2363,73081
word Extra_Truth6MinimumHeuristic( word t )Extra_Truth6MinimumHeuristic2380,73492
void Extra_Truth6MinimumHeuristicTest()Extra_Truth6MinimumHeuristicTest2392,73883
word * Extra_NpnRead( char * pFileName, int nFuncs )Extra_NpnRead2411,74350
int CompareWords( void * p1, void * p2 )CompareWords2442,75204
void Extra_NpnTest1()Extra_NpnTest12464,75692
void Extra_NpnTest2()Extra_NpnTest22471,75838
void Extra_NpnTest()Extra_NpnTest2484,76258
void Extra_NtkPrintBin( word * pT, int nBits )Extra_NtkPrintBin2552,78433
void Extra_NtkPowerTest()Extra_NtkPowerTest2558,78581
static inline void Extra_Transpose64Simple( word A[64], word B[64] )Extra_Transpose64Simple2587,79297
static inline void Extra_BitMatrixTransposeSimple( Vec_Wrd_t * vSimsIn, int nWordsIn, Vec_Wrd_t * vSimsOut, int nWordsOut )Extra_BitMatrixTransposeSimple2597,79567
void Extra_Transpose32( unsigned a[32] ) Extra_Transpose322610,80249
void Extra_Transpose64( word A[64] )Extra_Transpose642624,80580
void Extra_Transpose64p( word * A[64] )Extra_Transpose64p2638,80925
void Extra_BitMatrixTransposeP( Vec_Wrd_t * vSimsIn, int nWordsIn, Vec_Wrd_t * vSimsOut, int nWordsOut )Extra_BitMatrixTransposeP2652,81291
void Extra_BitMatrixTransposePP( Vec_Ptr_t * vSimsIn, int nWordsIn, Vec_Wrd_t * vSimsOut, int nWordsOut )Extra_BitMatrixTransposePP2668,81894
void Extra_BitMatrixShow( Vec_Wrd_t * vSims, int nWords )Extra_BitMatrixShow2684,82489
void Extra_BitMatrixTransposeTest()Extra_BitMatrixTransposeTest2700,82948

src/misc/extra/extraUtilDsd.c,2902
typedef struct Sdm_Dsd_t_ Sdm_Dsd_t;Sdm_Dsd_t38,964
struct Sdm_Dsd_t_Sdm_Dsd_t_39,1001
    int              nVars;                    // support sizenVars41,1021
    int              nAnds;                    // the number of AND gatesnAnds42,1084
    int              nClauses;                 // the number of CNF clausesnClauses43,1158
    word             uTruth;                   // truth tableuTruth44,1234
    char *           pStr;                     // description pStr45,1296
#define DSD_CLASS_NUM DSD_CLASS_NUM48,1363
static Sdm_Dsd_t s_DsdClass6[DSD_CLASS_NUM] = { s_DsdClass650,1390
struct Sdm_Man_t_Sdm_Man_t_648,47595
    Sdm_Dsd_t *      pDsd6;                    // NPN class informationpDsd6650,47615
    Hsh_IntMan_t *   pHash;                    // maps DSD functions into NPN classespHash651,47687
    Vec_Int_t *      vConfgRes;                // configurationsvConfgRes652,47773
    Vec_Wrd_t *      vPerm6;                   // permutations of DSD classesvPerm6653,47838
    Vec_Int_t *      vMap2Perm;                // maps number into its permutationvMap2Perm654,47916
    char             Perm6[720][6];            // permutationsPerm6655,47999
    int              nCountDsd[DSD_CLASS_NUM];nCountDsd656,48062
    int              nNonDsd;nNonDsd657,48109
    int              nAllDsd;nAllDsd658,48139
void Sdm_ManPrintDsdStats( Sdm_Man_t * p, int fVerbose )Sdm_ManPrintDsdStats676,48627
Hsh_IntMan_t * Sdm_ManBuildHashTable( Vec_Int_t ** pvConfgRes ) Sdm_ManBuildHashTable710,49532
void Sdm_ManPrecomputePerms( Sdm_Man_t * p )Sdm_ManPrecomputePerms747,50610
void Sdm_ManPrintPerm( unsigned s )Sdm_ManPrintPerm876,54515
int Sdm_ManCheckDsd6( Sdm_Man_t * p, word t )Sdm_ManCheckDsd6895,54926
int Sdm_ManComputeFunc( Sdm_Man_t * p, int iDsdLit0, int iDsdLit1, int * pCut, int uMask, int fXor )Sdm_ManComputeFunc920,55505
int Sdm_ManReadDsdVarNum( Sdm_Man_t * p, int iDsd )Sdm_ManReadDsdVarNum997,57891
int Sdm_ManReadDsdAndNum( Sdm_Man_t * p, int iDsd )Sdm_ManReadDsdAndNum1001,57980
int Sdm_ManReadDsdClauseNum( Sdm_Man_t * p, int iDsd )Sdm_ManReadDsdClauseNum1005,58069
word Sdm_ManReadDsdTruth( Sdm_Man_t * p, int iDsd )Sdm_ManReadDsdTruth1009,58164
char * Sdm_ManReadDsdStr( Sdm_Man_t * p, int iDsd )Sdm_ManReadDsdStr1013,58254
void Sdm_ManReadCnfCosts( Sdm_Man_t * p, int * pCosts, int nCosts )Sdm_ManReadCnfCosts1017,58342
Sdm_Man_t * Sdm_ManAlloc()Sdm_ManAlloc1038,58847
void Sdm_ManFree( Sdm_Man_t * p )Sdm_ManFree1045,58980
static Sdm_Man_t * s_SdmMan = NULL;s_SdmMan1066,59436
Sdm_Man_t * Sdm_ManRead()Sdm_ManRead1067,59472
void Sdm_ManQuit()Sdm_ManQuit1074,59653
int Sdm_ManCanRead()Sdm_ManCanRead1080,59758
void Sdm_ManTest()Sdm_ManTest1101,60181
void Sdm_ManDivCollect_rec( word t, Vec_Wrd_t ** pvDivs )Sdm_ManDivCollect_rec1167,61875
void Sdm_ManDivTest()Sdm_ManDivTest1188,62565

src/misc/extra/extraUtilPerm.c,6453
    ABC_ZDD_OPER_NONE,ABC_ZDD_OPER_NONE36,896
    ABC_ZDD_OPER_DIFF,ABC_ZDD_OPER_DIFF37,919
    ABC_ZDD_OPER_UNION,ABC_ZDD_OPER_UNION38,942
    ABC_ZDD_OPER_MIN_UNION,ABC_ZDD_OPER_MIN_UNION39,966
    ABC_ZDD_OPER_INTER,ABC_ZDD_OPER_INTER40,994
    ABC_ZDD_OPER_PERM,ABC_ZDD_OPER_PERM41,1018
    ABC_ZDD_OPER_PERM_PROD,ABC_ZDD_OPER_PERM_PROD42,1041
    ABC_ZDD_OPER_COF0,ABC_ZDD_OPER_COF043,1069
    ABC_ZDD_OPER_COF1,ABC_ZDD_OPER_COF144,1092
    ABC_ZDD_OPER_THRESH,ABC_ZDD_OPER_THRESH45,1115
    ABC_ZDD_OPER_DOT_PROD,ABC_ZDD_OPER_DOT_PROD46,1140
    ABC_ZDD_OPER_DOT_PROD_6,ABC_ZDD_OPER_DOT_PROD_647,1167
    ABC_ZDD_OPER_INSERT,ABC_ZDD_OPER_INSERT48,1196
    ABC_ZDD_OPER_PATHS,ABC_ZDD_OPER_PATHS49,1221
    ABC_ZDD_OPER_NODES,ABC_ZDD_OPER_NODES50,1245
    ABC_ZDD_OPER_ITEABC_ZDD_OPER_ITE51,1269
} Abc_ZddOper;Abc_ZddOper52,1290
typedef struct Abc_ZddObj_ Abc_ZddObj;Abc_ZddObj54,1306
struct Abc_ZddObj_ Abc_ZddObj_55,1345
    unsigned     Var  : 31;Var57,1367
    unsigned     Mark :  1;Mark58,1395
    unsigned     True;True59,1423
    unsigned     False;False60,1446
typedef struct Abc_ZddEnt_ Abc_ZddEnt;Abc_ZddEnt63,1476
struct Abc_ZddEnt_ Abc_ZddEnt_64,1515
    int          Arg0;Arg066,1537
    int          Arg1;Arg167,1560
    int          Arg2;Arg268,1583
    int          Res;Res69,1606
typedef struct Abc_ZddMan_ Abc_ZddMan;Abc_ZddMan72,1632
struct Abc_ZddMan_ Abc_ZddMan_73,1671
    int          nVars;nVars75,1693
    int          nObjs;nObjs76,1717
    int          nObjsAlloc;nObjsAlloc77,1741
    int          nPermSize;nPermSize78,1770
    unsigned     nUniqueMask;nUniqueMask79,1798
    unsigned     nCacheMask;nCacheMask80,1828
    int *        pUnique;pUnique81,1857
    int *        pNexts;pNexts82,1883
    Abc_ZddEnt * pCache;pCache83,1908
    Abc_ZddObj * pObjs;pObjs84,1933
    int          nCacheLookups;nCacheLookups85,1957
    int          nCacheMisses;nCacheMisses86,1989
    word         nMemory;nMemory87,2020
    int *        pV2TI;pV2TI88,2046
    int *        pV2TJ;pV2TJ89,2070
    int *        pT2V;pT2V90,2094
static inline int          Abc_ZddIthVar( int i )                                  { return i + 2;                                            }Abc_ZddIthVar93,2121
static inline unsigned     Abc_ZddHash( int Arg0, int Arg1, int Arg2 )             { return 12582917 * Arg0 + 4256249 * Arg1 + 741457 * Arg2; }Abc_ZddHash94,2265
static inline Abc_ZddObj * Abc_ZddNode( Abc_ZddMan * p, int i )                    { return p->pObjs + i;                                     }Abc_ZddNode96,2410
static inline int          Abc_ZddObjId( Abc_ZddMan * p, Abc_ZddObj * pObj )       { return pObj - p->pObjs;                                  }Abc_ZddObjId97,2554
static inline int          Abc_ZddObjVar( Abc_ZddMan * p, int i )                  { return Abc_ZddNode(p, i)->Var;                           }Abc_ZddObjVar98,2698
static inline void         Abc_ZddSetVarIJ( Abc_ZddMan * p, int i, int j, int v )  { assert( i < j ); p->pT2V[i * p->nPermSize + j] = v;      }Abc_ZddSetVarIJ100,2843
static inline int          Abc_ZddVarIJ( Abc_ZddMan * p, int i, int j )            { assert( i < j ); return p->pT2V[i * p->nPermSize + j];   }Abc_ZddVarIJ101,2987
static inline int          Abc_ZddVarsClash( Abc_ZddMan * p, int v0, int v1 )      { return p->pV2TI[v0] == p->pV2TI[v1] || p->pV2TJ[v0] == p->pV2TJ[v1] || p->pV2TI[v0] == p->pV2TJ[v1] || p->pV2TJ[v0] == p->pV2TI[v1];  }Abc_ZddVarsClash102,3131
static inline int Abc_ZddCacheLookup( Abc_ZddMan * p, int Arg0, int Arg1, int Arg2 )Abc_ZddCacheLookup119,3807
static inline int Abc_ZddCacheInsert( Abc_ZddMan * p, int Arg0, int Arg1, int Arg2, int Res )Abc_ZddCacheInsert125,4099
static inline int Abc_ZddUniqueLookup( Abc_ZddMan * p, int Var, int True, int False )Abc_ZddUniqueLookup133,4426
static inline int Abc_ZddUniqueCreate( Abc_ZddMan * p, int Var, int True, int False )Abc_ZddUniqueCreate141,4795
int Abc_ZddBuildSet( Abc_ZddMan * p, int * pSet, int Size )Abc_ZddBuildSet164,5796
Abc_ZddMan * Abc_ZddManAlloc( int nVars, int nObjs )Abc_ZddManAlloc184,6263
void Abc_ZddManCreatePerms( Abc_ZddMan * p, int nPermSize )Abc_ZddManCreatePerms209,7240
void Abc_ZddManFree( Abc_ZddMan * p )Abc_ZddManFree227,7834
int Abc_ZddDiff( Abc_ZddMan * p, int a, int b )Abc_ZddDiff253,8556
int Abc_ZddUnion( Abc_ZddMan * p, int a, int b )Abc_ZddUnion275,9316
int Abc_ZddMinUnion( Abc_ZddMan * p, int a, int b )Abc_ZddMinUnion299,10136
int Abc_ZddIntersect( Abc_ZddMan * p, int a, int b )Abc_ZddIntersect324,11044
int Abc_ZddCof0( Abc_ZddMan * p, int a, int Var )Abc_ZddCof0348,11888
int Abc_ZddCof1( Abc_ZddMan * p, int a, int Var )Abc_ZddCof1366,12469
int Abc_ZddCountPaths( Abc_ZddMan * p, int a )Abc_ZddCountPaths385,13061
int Abc_ZddCount_rec( Abc_ZddMan * p, int i )Abc_ZddCount_rec409,13809
void Abc_ZddUnmark_rec( Abc_ZddMan * p, int i )Abc_ZddUnmark_rec420,14074
int Abc_ZddCountNodes( Abc_ZddMan * p, int i )Abc_ZddCountNodes432,14336
int Abc_ZddCountNodesArray( Abc_ZddMan * p, Vec_Int_t * vNodes )Abc_ZddCountNodesArray438,14478
int Abc_ZddThresh( Abc_ZddMan * p, int a, int b )Abc_ZddThresh459,14988
int Abc_ZddDotProduct( Abc_ZddMan * p, int a, int b )Abc_ZddDotProduct473,15459
int Abc_ZddDotMinProduct6( Abc_ZddMan * p, int a, int b )Abc_ZddDotMinProduct6501,16554
int Abc_ZddPerm( Abc_ZddMan * p, int a, int Var )Abc_ZddPerm543,18002
int Abc_ZddPermProduct( Abc_ZddMan * p, int a, int b )Abc_ZddPermProduct590,19715
void Abc_ZddPermPrint( int * pPerm, int Size )Abc_ZddPermPrint619,20563
void Abc_ZddCombPrint( int * pComb, int nTrans )Abc_ZddCombPrint627,20735
int Abc_ZddPerm2Comb( int * pPerm, int Size, int * pComb )Abc_ZddPerm2Comb636,20972
void Abc_ZddComb2Perm( int * pComb, int nTrans, int * pPerm, int Size )Abc_ZddComb2Perm651,21400
void Abc_ZddPermCombTest()Abc_ZddPermCombTest659,21654
void Abc_ZddPrint_rec( Abc_ZddMan * p, int a, int * pPath, int Size )Abc_ZddPrint_rec683,22266
void Abc_ZddPrint( Abc_ZddMan * p, int a )Abc_ZddPrint704,22996
void Abc_ZddPrintTest( Abc_ZddMan * p )Abc_ZddPrintTest710,23153
void Abc_ZddGiaTest( Gia_Man_t * pGia )Abc_ZddGiaTest743,24052
void Abc_ZddPermTestInt( Abc_ZddMan * p )Abc_ZddPermTestInt789,25620
void Abc_ZddPermTest()Abc_ZddPermTest824,26910
void Abc_EnumerateCubeStatesZdd()Abc_EnumerateCubeStatesZdd845,27322

src/misc/extra/extraUtilSupp.c,1912
static inline int Abc_SuppCountOnes( unsigned i )Abc_SuppCountOnes53,1466
Vec_Wrd_t * Abc_SuppGen( int m, int n )Abc_SuppGen60,1681
void Abc_SuppVerify( Vec_Wrd_t * p, word * pMatrix, int nVars, int nVarsMin )Abc_SuppVerify81,2181
Vec_Wrd_t * Abc_SuppGenPairs( Vec_Wrd_t * p, int nBits )Abc_SuppGenPairs127,3546
Vec_Wrd_t * Abc_SuppGenPairs2( int nOnes, int nBits )Abc_SuppGenPairs2146,4172
void Abc_SuppPrintMask( word uMask, int nBits )Abc_SuppPrintMask173,4824
void Abc_SuppGenProfile( Vec_Wrd_t * p, int nBits, int * pCounts )Abc_SuppGenProfile180,4990
void Abc_SuppPrintProfile( Vec_Wrd_t * p, int nBits )Abc_SuppPrintProfile188,5241
int Abc_SuppGenFindBest( Vec_Wrd_t * p, int nBits, int * pMerit )Abc_SuppGenFindBest195,5499
void Abc_SuppGenSelectVar( Vec_Wrd_t * p, int nBits, int iVar )Abc_SuppGenSelectVar205,5798
void Abc_SuppGenFilter( Vec_Wrd_t * p, int nBits )Abc_SuppGenFilter213,6062
word Abc_SuppFindOne( Vec_Wrd_t * p, int nBits )Abc_SuppFindOne222,6300
int Abc_SuppMinimize( word * pMatrix, Vec_Wrd_t * p, int nBits, int fVerbose )Abc_SuppMinimize237,6655
void Abc_SuppTest( int nOnes, int nVars, int fUseSimple, int fCheck, int fVerbose )Abc_SuppTest267,7429
Vec_Wrd_t * Abc_SuppReadMin( char * pFileName, int * pnVars )Abc_SuppReadMin304,8760
Vec_Wrd_t * Abc_SuppDiffMatrix( Vec_Wrd_t * vCubes )Abc_SuppDiffMatrix363,11124
static inline int Abc_SuppCountOnes64( word i )Abc_SuppCountOnes64396,12311
int Abc_SuppFindVar( Vec_Wec_t * pS, Vec_Wec_t * pD, int nVars )Abc_SuppFindVar403,12564
void Abc_SuppRemove( Vec_Wrd_t * p, int * pCounts, Vec_Wec_t * pS, Vec_Wec_t * pD, int iVar, int nVars )Abc_SuppRemove415,12911
void Abc_SuppProfile( Vec_Wec_t * pS, Vec_Wec_t * pD, int nVars )Abc_SuppProfile442,13740
int Abc_SuppSolve( Vec_Wrd_t * p, int nVars )Abc_SuppSolve448,13954
void Abc_SuppReadMinTest( char * pFileName )Abc_SuppReadMinTest504,15673

src/misc/extra/extraZddTrunc.c,1383
#define inline inline28,623
#define TEST_VAR_MAX TEST_VAR_MAX34,711
#define TEST_SET_MAX TEST_SET_MAX35,735
typedef struct Vec_Int_t_       Vec_Int_t;Vec_Int_t66,2320
struct Vec_Int_t_ Vec_Int_t_67,2363
    int              nCap;nCap69,2384
    int              nSize;nSize70,2411
    int *            pArray;pArray71,2439
static inline Vec_Int_t * Vec_IntAlloc( int nCap )Vec_IntAlloc73,2471
static inline void Vec_IntFree( Vec_Int_t * p )Vec_IntFree84,2746
static inline int * Vec_IntReleaseArray( Vec_Int_t * p )Vec_IntReleaseArray89,2844
static inline int Vec_IntAddToEntry( Vec_Int_t * p, int i, int Addition )Vec_IntAddToEntry97,3011
static inline void Vec_IntGrow( Vec_Int_t * p, int nCapMin )Vec_IntGrow102,3164
static inline int Vec_IntPop( Vec_Int_t * p )Vec_IntPop110,3382
static inline void Vec_IntPush( Vec_Int_t * p, int Entry )Vec_IntPush115,3494
static inline void Vec_IntAppend( Vec_Int_t * vVec1, Vec_Int_t * vVec2 )Vec_IntAppend126,3753
void Extra_zddTruncate_rec(Extra_zddTruncate_rec155,4855
int * Extra_zddTruncate( Extra_zddTruncate185,6260
DdNode * Extra_zddVariable( DdManager * dd, int iVar )Extra_zddVariable220,7565
DdNode * Extra_zddCreateSubsets(Extra_zddCreateSubsets241,8093
void Extra_zddPrintSubsets( int * pSubsets )Extra_zddPrintSubsets277,9160
void Extra_zddTruncateTest()Extra_zddTruncateTest302,9808

src/misc/extra/extraUtilPath.c,1876
int Abc_NodeVarX( int nSize, int y, int x )Abc_NodeVarX56,1520
int Abc_NodeVarY( int nSize, int y, int x )Abc_NodeVarY60,1612
Gia_Man_t * Abc_EnumeratePaths( int nSize )Abc_EnumeratePaths65,1727
void Abc_EnumeratePathsTest()Abc_EnumeratePathsTest97,2841
Vec_Int_t * Abc_GraphGrid( int n )Abc_GraphGrid117,3278
Vec_Int_t * Abc_GraphNodeLife( Vec_Int_t * vEdges, int n )Abc_GraphNodeLife132,3705
Vec_Wec_t * Abc_GraphFrontiers( Vec_Int_t * vEdges, Vec_Int_t * vLife )Abc_GraphFrontiers148,4267
void Abc_GraphPathPrint4( int * pBuffer, Vec_Int_t * vEdges )Abc_GraphPathPrint4180,5322
void Abc_GraphPathPrint5( int * pBuffer, Vec_Int_t * vEdges )Abc_GraphPathPrint5217,6364
double Abc_GraphCountPaths_rec( int Lev, int Node, Vec_Wec_t * vNodes, double ** pCache, int * pBuffer, Vec_Int_t * vEdges )Abc_GraphCountPaths_rec266,7653
double Abc_GraphCountPaths( Vec_Wec_t * vNodes, Vec_Int_t * vEdges )Abc_GraphCountPaths282,8372
int Abc_GraphDeriveGia_rec( Gia_Man_t * p, int Lev, int Node, Vec_Wec_t * vNodes, int ** pCache, int * pBuffer, Vec_Int_t * vEdges )Abc_GraphDeriveGia_rec311,9245
Gia_Man_t * Abc_GraphDeriveGia( Vec_Wec_t * vNodes, Vec_Int_t * vEdges )Abc_GraphDeriveGia326,9962
void Abc_GraphDeriveGiaDump( Vec_Wec_t * vNodes, Vec_Int_t * vEdges, int Size )Abc_GraphDeriveGiaDump351,10820
int Abc_GraphBuildState( Vec_Int_t * vState, int e, int x, Vec_Int_t * vEdges, Vec_Int_t * vLife, Vec_Wec_t * vFronts, int * pFront, Vec_Int_t * vStateNew, int fVerbose )Abc_GraphBuildState372,11467
void Abc_GraphBuildFrontier( int nSize, Vec_Int_t * vEdges, Vec_Int_t * vLife, Vec_Wec_t * vFronts, int fVerbose )Abc_GraphBuildFrontier450,14546
void Abc_EnumerateFrontierTest( int nSize )Abc_EnumerateFrontierTest509,16873
double Abc_Word2Double( word w )Abc_Word2Double536,17565
void Abc_GraphSolve( Gia_Man_t * pGia )Abc_GraphSolve544,17734

src/misc/extra/extraUtilCube.c,1301
static inline void Abc_StatePush( Vec_Int_t * vData, char * pState, int k )  { int i; for ( i = 0; i < 6; i++ ) Vec_IntWriteEntry(vData, 6*k+i, ((int*)pState)[i]);  }Abc_StatePush34,883
static inline void Abc_StatePerm( char * pState, char * pPerm, char * pRes ) { int i; for ( i = 0; i < 24; i++ ) pRes[i] = pState[(int)pPerm[i]];                    }Abc_StatePerm35,1050
static inline void Abc_StatePrint( char * pState )                           { int i; for ( i = 0; i < 24; i++ ) printf(" %2d", pState[i]); printf( "\n" );          }Abc_StatePrint36,1217
void Abc_EnumerateCubeStates2()Abc_EnumerateCubeStates253,1839
static inline int  Abc_DataHasBit( word * p, word i )  { return (p[(i)>>6] & (((word)1)<<((i) & 63))) > 0; }Abc_DataHasBit162,5785
static inline void Abc_DataXorBit( word * p, word i )  { p[(i)>>6] ^= (((word)1)<<((i) & 63));             }Abc_DataXorBit163,5894
static inline int  Abc_DataGetCube( word w, int i )         { return (w >> (5*i)) & 31;            }Abc_DataGetCube164,6003
static inline word Abc_DataXorCube( word w, int i, int c )  { return w ^ (((word)c) << (5*i));     }Abc_DataXorCube165,6104
static inline word Abc_CubeGenerateSign( char * pState )Abc_CubeGenerateSign166,6205
void Abc_EnumerateCubeStates()Abc_EnumerateCubeStates192,7431

src/misc/extra/extra.h,3290
#define ABC__misc__extra__extra_hABC__misc__extra__extra_h30,974
#define inline inline34,1024
typedef unsigned char      uint8;uint871,2665
typedef unsigned short     uint16;uint1672,2699
typedef unsigned int       uint32;uint3273,2734
typedef struct Extra_BitMat_t_ Extra_BitMat_t;Extra_BitMat_t81,3106
typedef struct Extra_FileReader_t_ Extra_FileReader_t;Extra_FileReader_t134,6782
typedef struct Extra_MmFixed_t_    Extra_MmFixed_t;    Extra_MmFixed_t146,7517
typedef struct Extra_MmFlex_t_     Extra_MmFlex_t;     Extra_MmFlex_t147,7573
typedef struct Extra_MmStep_t_     Extra_MmStep_t;     Extra_MmStep_t148,7629
typedef struct Sdm_Man_t_ Sdm_Man_t; Sdm_Man_t224,12086
typedef struct ProgressBarStruct ProgressBar;ProgressBar239,12935
static inline void Extra_ProgressBarUpdate( ProgressBar * p, int nItemsCur, char * pString ) Extra_ProgressBarUpdate245,13220
static inline int   Extra_BitWordNum( int nBits )    { return nBits/(8*sizeof(unsigned)) + ((nBits%(8*sizeof(unsigned))) > 0);  }Extra_BitWordNum250,13506
static inline int   Extra_TruthWordNum( int nVars )  { return nVars <= 5 ? 1 : (1 << (nVars - 5)); }Extra_TruthWordNum251,13636
static inline void  Extra_TruthSetBit( unsigned * p, int Bit )   { p[Bit>>5] |= (unsigned)(1<<(Bit & 31));               }Extra_TruthSetBit253,13738
static inline void  Extra_TruthXorBit( unsigned * p, int Bit )   { p[Bit>>5] ^= (unsigned)(1<<(Bit & 31));               }Extra_TruthXorBit254,13861
static inline int   Extra_TruthHasBit( unsigned * p, int Bit )   { return (p[Bit>>5] & (unsigned)(1<<(Bit & 31))) > 0;   }Extra_TruthHasBit255,13984
static inline int Extra_WordCountOnes( unsigned uWord )Extra_WordCountOnes257,14108
static inline int Extra_TruthCountOnes( unsigned * pIn, int nVars )Extra_TruthCountOnes265,14464
static inline int Extra_TruthIsEqual( unsigned * pIn0, unsigned * pIn1, int nVars )Extra_TruthIsEqual272,14685
static inline int Extra_TruthIsConst0( unsigned * pIn, int nVars )Extra_TruthIsConst0280,14911
static inline int Extra_TruthIsConst1( unsigned * pIn, int nVars )Extra_TruthIsConst1288,15108
static inline int Extra_TruthIsImply( unsigned * pIn1, unsigned * pIn2, int nVars )Extra_TruthIsImply296,15321
static inline void Extra_TruthCopy( unsigned * pOut, unsigned * pIn, int nVars )Extra_TruthCopy304,15547
static inline void Extra_TruthClear( unsigned * pOut, int nVars )Extra_TruthClear310,15726
static inline void Extra_TruthFill( unsigned * pOut, int nVars )Extra_TruthFill316,15885
static inline void Extra_TruthNot( unsigned * pOut, unsigned * pIn, int nVars )Extra_TruthNot322,16054
static inline void Extra_TruthAnd( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Extra_TruthAnd328,16233
static inline void Extra_TruthOr( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Extra_TruthOr334,16440
static inline void Extra_TruthSharp( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Extra_TruthSharp340,16646
static inline void Extra_TruthNand( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars )Extra_TruthNand346,16856
static inline void Extra_TruthAndPhase( unsigned * pOut, unsigned * pIn0, unsigned * pIn1, int nVars, int fCompl0, int fCompl1 )Extra_TruthAndPhase352,17067

src/misc/extra/extraUtilBitMatrix.c,2122
struct Extra_BitMat_t_Extra_BitMat_t_32,994
    unsigned ** ppData;      // bit datappData34,1019
    int         nSize;       // the number of bits in one dimensionnSize35,1060
    int         nWords;      // the number of words in one dimensionnWords36,1128
    int         nBitShift;   // the number of bits to shift to get wordsnBitShift37,1197
    unsigned    uMask;       // the mask to get the number of bits in the worduMask38,1270
    int         nLookups;    // the number of lookups  nLookups39,1349
    int         nInserts;    // the number of insertsnInserts40,1405
    int         nDeletes;    // the number of deletionsnDeletes41,1459
Extra_BitMat_t * Extra_BitMatrixStart( int nSize )Extra_BitMatrixStart81,3144
void Extra_BitMatrixClean( Extra_BitMat_t * p )Extra_BitMatrixClean110,4078
void Extra_BitMatrixStop( Extra_BitMat_t * p )Extra_BitMatrixStop126,4458
void Extra_BitMatrixPrint( Extra_BitMat_t * pMat )Extra_BitMatrixPrint144,4842
int Extra_BitMatrixReadSize( Extra_BitMat_t * p )Extra_BitMatrixReadSize174,5548
void Extra_BitMatrixInsert1( Extra_BitMat_t * p, int i, int k )Extra_BitMatrixInsert1190,5898
int Extra_BitMatrixLookup1( Extra_BitMat_t * p, int i, int k )Extra_BitMatrixLookup1210,6410
void Extra_BitMatrixDelete1( Extra_BitMat_t * p, int i, int k )Extra_BitMatrixDelete1230,6949
void Extra_BitMatrixInsert2( Extra_BitMat_t * p, int i, int k )Extra_BitMatrixInsert2252,7465
int Extra_BitMatrixLookup2( Extra_BitMat_t * p, int i, int k )Extra_BitMatrixLookup2272,7977
void Extra_BitMatrixDelete2( Extra_BitMat_t * p, int i, int k )Extra_BitMatrixDelete2292,8516
void Extra_BitMatrixOr( Extra_BitMat_t * p, int i, unsigned * pInfo )Extra_BitMatrixOr313,9031
void Extra_BitMatrixOrTwo( Extra_BitMat_t * p, int i, int j )Extra_BitMatrixOrTwo331,9466
int Extra_BitMatrixCountOnesUpper( Extra_BitMat_t * p )Extra_BitMatrixCountOnesUpper349,9945
int Extra_BitMatrixIsDisjoint( Extra_BitMat_t * p1, Extra_BitMat_t * p2 )Extra_BitMatrixIsDisjoint369,10487
int Extra_BitMatrixIsClique( Extra_BitMat_t * pMat )Extra_BitMatrixIsClique391,11136

src/misc/extra/extraUtilEnum.c,3332
void Abc_GetFirst( int * pnVars, int * pnMints, int * pnFuncs, unsigned * pVars, unsigned * pMints, unsigned * pFuncs )Abc_GetFirst50,1360
void Abc_GetSecond( int * pnVars, int * pnMints, int * pnFuncs, unsigned * pVars, unsigned * pMints, unsigned * pFuncs )Abc_GetSecond113,2854
void Abc_GetThird( int * pnVars, int * pnMints, int * pnFuncs, unsigned * pVars, unsigned * pMints, unsigned * pFuncs )Abc_GetThird196,4822
void Abc_EnumPrint_rec( Vec_Int_t * vGates, int i, int nVars )Abc_EnumPrint_rec258,6287
void Abc_EnumPrint( Vec_Int_t * vGates, int i, int nVars )Abc_EnumPrint283,6929
static inline int  Abc_DataHasBit( word * p, word i )  { return (p[(i)>>6] & (((word)1)<<((i) & 63))) > 0; }Abc_DataHasBit301,7331
static inline void Abc_DataXorBit( word * p, word i )  { p[(i)>>6] ^= (((word)1)<<((i) & 63));             }Abc_DataXorBit302,7440
void Abc_EnumerateFunctions( int nDecMax )Abc_EnumerateFunctions315,7784
#define ABC_ENUM_MAX ABC_ENUM_MAX429,11822
static word s_Truths6[6] = {s_Truths6430,11846
typedef struct Abc_EnuMan_t_ Abc_EnuMan_t;Abc_EnuMan_t438,12087
struct Abc_EnuMan_t_Abc_EnuMan_t_439,12130
    int              nVars;        // support sizenVars441,12153
    int              nVarsFree;    // number of PIs usednVarsFree442,12204
    int              fVerbose;     // verbose flagfVerbose443,12261
    int              fUseXor;      // using XOR gatefUseXor444,12312
    int              nNodeMax;     // the max number of nodesnNodeMax445,12365
    int              nNodes;       // current number of gatesnNodes446,12427
    int              nTops;        // the number of fanoutless gatesnTops447,12489
    int              pFans0[ABC_ENUM_MAX];   // faninspFans0448,12558
    int              pFans1[ABC_ENUM_MAX];   // fanins pFans1449,12613
    int              fCompl0[ABC_ENUM_MAX];  // complementsfCompl0450,12669
    int              fCompl1[ABC_ENUM_MAX];  // complementsfCompl1451,12729
    int              Polar[ABC_ENUM_MAX];    // polarityPolar452,12789
    int              pRefs[ABC_ENUM_MAX];    // referencespRefs453,12846
    int              pLevel[ABC_ENUM_MAX];   // level pLevel454,12905
    word             pTruths[ABC_ENUM_MAX];  // truth tablespTruths455,12960
    word             nTries;       // attempts to build a gatenTries456,13021
    word             nBuilds;      // actually built gatesnBuilds457,13084
    word             nFinished;    // finished structuresnFinished458,13143
static inline void Abc_EnumRef( Abc_EnuMan_t * p, int i )Abc_EnumRef460,13204
static inline void Abc_EnumDeref( Abc_EnuMan_t * p, int i )Abc_EnumDeref466,13348
static inline void Abc_EnumRefNode( Abc_EnuMan_t * p, int i )Abc_EnumRefNode472,13494
static inline void Abc_EnumDerefNode( Abc_EnuMan_t * p, int i )Abc_EnumDerefNode480,13695
static inline void Abc_EnumPrintOne( Abc_EnuMan_t * p )Abc_EnumPrintOne488,13902
static inline int Abc_EnumEquiv( word a, word b )Abc_EnumEquiv511,14605
static inline int Abc_EnumerateFilter( Abc_EnuMan_t * p )Abc_EnumerateFilter515,14689
void Abc_EnumerateFuncs_rec( Abc_EnuMan_t * p, int fNew, int iNode1st ) // the first node on the last levelAbc_EnumerateFuncs_rec567,16500
void Abc_EnumerateFuncs( int nVars, int nGates, int fVerbose )Abc_EnumerateFuncs644,19547

src/misc/extra/extraUtilPrime.c,3522
void Abc_GenCountDump( Vec_Int_t * vPrimes, int nVars, char * pFileName )Abc_GenCountDump51,1392
void Abc_GenCountHits1( Vec_Bit_t * vMap, Vec_Int_t * vPrimes, int nVars )Abc_GenCountHits178,2251
Vec_Int_t * Abc_GenPrimes( int nVars )Abc_GenPrimes94,2791
void Abc_GenPrimesTest()Abc_GenPrimesTest113,3476
#define ABC_PRIME_MASK ABC_PRIME_MASK128,3828
static unsigned s_256Primes[ABC_PRIME_MASK+1] = s_256Primes129,3856
#define TAB_UNUSED TAB_UNUSED167,6888
typedef struct Tab_Man_t_ Tab_Man_t;Tab_Man_t169,6915
typedef struct Tab_Ent_t_ Tab_Ent_t;Tab_Ent_t170,6952
struct Tab_Man_t_Tab_Man_t_171,6989
    int         nVars;nVars173,7009
    int         nCubes;nCubes174,7032
    int         nLits; nLits175,7056
    int         nTable;nTable176,7080
    int *       pCubes;   // pointers to cubespCubes177,7104
    word *      pValues;  // hash valuespValues178,7151
    Tab_Ent_t * pTable;   // hash table (lits -> cube + lit + lit)pTable179,7192
    int         Degree;   // degree of 2 larger than log2(nCubes)Degree180,7259
    int         Mask;     // table size (2^Degree)Mask181,7325
    int         nEnts;    // number of entriesnEnts182,7376
struct Tab_Ent_t_Tab_Ent_t_184,7426
    int         Table;Table186,7446
    int         Cube;Cube187,7469
    unsigned    VarA : 16;VarA188,7491
    unsigned    VarB : 16;VarB189,7518
    int         Next;Next190,7545
static inline int *       Tab_ManCube( Tab_Man_t * p, int i ) { assert(i >= 0  && i < p->nCubes); return p->pCubes + i * (p->nVars + 1);  }Tab_ManCube193,7571
static inline Tab_Ent_t * Tab_ManEnt( Tab_Man_t * p, int i )  { assert(i >= -1 && i < p->nTable); return i >= 0 ? p->pTable + i : NULL;   }Tab_ManEnt194,7711
static inline int   Tab_ManValue( Tab_Man_t * p, int a )Tab_ManValue196,7852
static inline int   Tab_ManFinal( Tab_Man_t * p, int a )Tab_ManFinal201,7973
static inline word Tab_ManHashValue( Tab_Man_t * p, int * pCube )Tab_ManHashValue205,8058
static inline word Tab_ManHashValueWithoutVar( Tab_Man_t * p, int * pCube, int iVar )Tab_ManHashValueWithoutVar212,8257
static inline unsigned Tab_ManHashValueCube( Tab_Man_t * p, int c, int iVar )Tab_ManHashValueCube220,8505
static inline void  Tab_ManPrintCube( Tab_Man_t * p, int c, int Var )Tab_ManPrintCube226,8764
static inline void  Tab_ManHashAdd( Tab_Man_t * p, int Value, int Cube, int VarA, int VarB )Tab_ManHashAdd235,9047
static inline void  Tab_ManPrintEntry( Tab_Man_t * p, int e )Tab_ManPrintEntry251,9531
static inline void  Tab_ManHashCollectBin( Tab_Man_t * p, int Bin, Vec_Int_t * vBin )Tab_ManHashCollectBin268,10126
#define Tab_ManForEachCube(Tab_ManForEachCube280,10502
#define Tab_ManForEachCubeReverse(Tab_ManForEachCubeReverse284,10696
Tab_Man_t * Tab_ManAlloc( int nVars, int nCubes )Tab_ManAlloc300,11146
void Tab_ManFree( Tab_Man_t * p )Tab_ManFree314,11713
void Tab_ManStart( Tab_Man_t * p, Vec_Int_t * vCubes )Tab_ManStart321,11852
int Tab_ManCubeFree( int * pCube1, int * pCube2, Vec_Int_t * vCubeFree )Tab_ManCubeFree348,12545
int Tab_ManCheckEqual2( int * pCube1, int * pCube2, int Var1, int Var2 )Tab_ManCheckEqual2382,14032
int Tab_ManCheckEqual( int * pCube1, int * pCube2, int Var1, int Var2 )Tab_ManCheckEqual397,14445
int Tab_ManCountItems( Tab_Man_t * p, int Dist2, Vec_Int_t ** pvStarts )Tab_ManCountItems430,15305
Vec_Int_t * Tab_ManCollectDist1( Tab_Man_t * p, int Dist2 )Tab_ManCollectDist1446,15769
void Tab_DecomposeTest()Tab_DecomposeTest578,20759

src/misc/extra/extraUtilMult.c,3963
typedef struct Abc_BddMan_ Abc_BddMan;Abc_BddMan34,873
struct Abc_BddMan_ Abc_BddMan_35,912
    int                nVars;         // the number of variablesnVars37,934
    int                nObjs;         // the number of nodes usednObjs38,999
    int                nObjsAlloc;    // the number of nodes allocatednObjsAlloc39,1065
    int *              pUnique;       // unique table for nodespUnique40,1136
    int *              pNexts;        // next pointer for nodespNexts41,1200
    int *              pCache;        // array of triples <arg0, arg1, AND(arg0, arg1)>pCache42,1264
    int *              pObjs;         // array of pairs <cof0, cof1> for each nodepObjs43,1352
    unsigned char *    pVars;         // array of variables for each nodepVars44,1435
    unsigned char *    pMark;         // array of marks for each BDD nodepMark45,1509
    unsigned           nUniqueMask;   // selection mask for unique tablenUniqueMask46,1583
    unsigned           nCacheMask;    // selection mask for computed tablenCacheMask47,1656
    int                nCacheLookups; // the number of computed table lookupsnCacheLookups48,1731
    int                nCacheMisses;  // the number of computed table missesnCacheMisses49,1809
    word               nMemory;       // total amount of memory used (in bytes)nMemory50,1886
static inline int      Abc_BddIthVar( int i )                        { return Abc_Var2Lit(i + 1, 0);                            }Abc_BddIthVar53,1970
static inline unsigned Abc_BddHash( int Arg0, int Arg1, int Arg2 )   { return 12582917 * Arg0 + 4256249 * Arg1 + 741457 * Arg2; }Abc_BddHash54,2100
static inline int      Abc_BddVar( Abc_BddMan * p, int i )           { return (int)p->pVars[Abc_Lit2Var(i)];                    }Abc_BddVar56,2231
static inline int      Abc_BddThen( Abc_BddMan * p, int i )          { return Abc_LitNotCond(p->pObjs[Abc_LitRegular(i)], Abc_LitIsCompl(i));    }Abc_BddThen57,2361
static inline int      Abc_BddElse( Abc_BddMan * p, int i )          { return Abc_LitNotCond(p->pObjs[Abc_LitRegular(i)+1], Abc_LitIsCompl(i));  }Abc_BddElse58,2508
static inline int      Abc_BddMark( Abc_BddMan * p, int i )          { return (int)p->pMark[Abc_Lit2Var(i)];                    }Abc_BddMark60,2656
static inline void     Abc_BddSetMark( Abc_BddMan * p, int i, int m ){ p->pMark[Abc_Lit2Var(i)] = m;                            }Abc_BddSetMark61,2786
static inline int Abc_BddUniqueCreateInt( Abc_BddMan * p, int Var, int Then, int Else )Abc_BddUniqueCreateInt78,3389
static inline int Abc_BddUniqueCreate( Abc_BddMan * p, int Var, int Then, int Else )Abc_BddUniqueCreate95,4179
static inline int Abc_BddCacheLookup( Abc_BddMan * p, int Arg1, int Arg2 )Abc_BddCacheLookup118,4860
static inline int Abc_BddCacheInsert( Abc_BddMan * p, int Arg1, int Arg2, int Res )Abc_BddCacheInsert124,5104
Abc_BddMan * Abc_BddManAlloc( int nVars, int nObjs )Abc_BddManAlloc145,5621
void Abc_BddManFree( Abc_BddMan * p )Abc_BddManFree170,6629
int Abc_BddAnd( Abc_BddMan * p, int a, int b )Abc_BddAnd194,7312
int Abc_BddOr( Abc_BddMan * p, int a, int b )Abc_BddOr217,8275
int Abc_BddCount_rec( Abc_BddMan * p, int i )Abc_BddCount_rec233,8645
void Abc_BddUnmark_rec( Abc_BddMan * p, int i )Abc_BddUnmark_rec242,8904
int Abc_BddCountNodes( Abc_BddMan * p, int i )Abc_BddCountNodes252,9160
int Abc_BddCountNodesArray( Abc_BddMan * p, Vec_Int_t * vNodes )Abc_BddCountNodesArray258,9302
int Abc_BddCountNodesArray2( Abc_BddMan * p, Vec_Int_t * vNodes )Abc_BddCountNodesArray2267,9572
void Abc_BddPrint_rec( Abc_BddMan * p, int a, int * pPath )Abc_BddPrint_rec291,10065
void Abc_BddPrint( Abc_BddMan * p, int a )Abc_BddPrint310,10608
void Abc_BddPrintTest( Abc_BddMan * p )Abc_BddPrintTest318,10812
void Abc_BddGiaTest2( Gia_Man_t * pGia, int fVerbose )Abc_BddGiaTest2343,11462
void Abc_BddGiaTest( Gia_Man_t * pGia, int fVerbose )Abc_BddGiaTest350,11623

src/misc/extra/extraUtilGen.c,165
Gia_Man_t * Extra_CommandGen( int Algo, int LutSize, int nLuts, int nLevels, int Limit, int nBestTries, int Multi, int fXor, int fVerbose )Extra_CommandGen53,1389

src/misc/extra/extraUtilTruth.c,2224
static unsigned s_VarMasks[5][2] = {s_VarMasks42,1537
unsigned ** Extra_TruthElementary( int nVars )Extra_TruthElementary77,2887
void Extra_TruthSwapAdjacentVars( unsigned * pOut, unsigned * pIn, int nVars, int iVar )Extra_TruthSwapAdjacentVars114,3909
void Extra_TruthSwapAdjacentVars2( unsigned * pIn, unsigned * pOut, int nVars, int Start )Extra_TruthSwapAdjacentVars2171,5785
void Extra_TruthStretch( unsigned * pOut, unsigned * pIn, int nVars, int nVarsAll, unsigned Phase )Extra_TruthStretch234,7990
void Extra_TruthShrink( unsigned * pOut, unsigned * pIn, int nVars, int nVarsAll, unsigned Phase )Extra_TruthShrink268,9137
int Extra_TruthVarInSupport( unsigned * pTruth, int nVars, int iVar )Extra_TruthVarInSupport301,10066
int Extra_TruthSupportSize( unsigned * pTruth, int nVars )Extra_TruthSupportSize358,11692
int Extra_TruthSupport( unsigned * pTruth, int nVars )Extra_TruthSupport377,12164
void Extra_TruthCofactor1( unsigned * pTruth, int nVars, int iVar )Extra_TruthCofactor1399,12673
void Extra_TruthCofactor0( unsigned * pTruth, int nVars, int iVar )Extra_TruthCofactor0450,14151
void Extra_TruthExist( unsigned * pTruth, int nVars, int iVar )Extra_TruthExist502,15625
void Extra_TruthForall( unsigned * pTruth, int nVars, int iVar )Extra_TruthForall556,17217
void Extra_TruthMux( unsigned * pOut, unsigned * pCof0, unsigned * pCof1, int nVars, int iVar )Extra_TruthMux611,18816
int Extra_TruthVarsSymm( unsigned * pTruth, int nVars, int iVar0, int iVar1 )Extra_TruthVarsSymm665,20325
int Extra_TruthVarsAntiSymm( unsigned * pTruth, int nVars, int iVar0, int iVar1 )Extra_TruthVarsAntiSymm692,21154
void Extra_TruthChangePhase( unsigned * pTruth, int nVars, int iVar )Extra_TruthChangePhase719,22000
int Extra_TruthMinCofSuppOverlap( unsigned * pTruth, int nVars, int * pVarMin )Extra_TruthMinCofSuppOverlap775,23643
void Extra_TruthCountOnesInCofs( unsigned * pTruth, int nVars, short * pStore )Extra_TruthCountOnesInCofs828,25479
unsigned Extra_TruthHash( unsigned * pIn, int nWords )Extra_TruthHash902,28511
unsigned Extra_TruthSemiCanonicize( unsigned * pInOut, unsigned * pAux, int nVars, char * pCanonPerm, short * pStore )Extra_TruthSemiCanonicize999,35506

src/misc/extra/extraUtilCanon.c,511
static unsigned s_Truths3[256] = s_Truths343,1556
static char s_Phases3[256][9] = s_Phases379,4795
int Extra_TruthCanonFastN( int nVarsMax, int nVarsReal, unsigned * pt, unsigned ** pptRes, char ** ppfRes )Extra_TruthCanonFastN374,13185
int Extra_TruthCanonN_rec( int nVars, unsigned char * pt, unsigned ** pptRes, char ** ppfRes, int Flag )Extra_TruthCanonN_rec406,14350
void Map_Var3Print()Map_Var3Print585,19345
void Map_Var3Test()Map_Var3Test626,20296
void Map_Var4Test()Map_Var4Test659,21002

src/misc/extra/extraUtilReader.c,2729
#define EXTRA_BUFFER_SIZE EXTRA_BUFFER_SIZE32,818
#define EXTRA_OFFSET_SIZE EXTRA_OFFSET_SIZE33,914
#define EXTRA_MINIMUM(EXTRA_MINIMUM35,1011
struct Extra_FileReader_t_Extra_FileReader_t_37,1070
    char *           pFileName;     // the input file namepFileName40,1121
    FILE *           pFile;         // the input file pointerpFile41,1180
    int              nFileSize;     // the total number of bytes in the filenFileSize42,1242
    int              nFileRead;     // the number of bytes currently read from filenFileRead43,1319
    char             pCharMap[256]; // the character mappCharMap45,1463
    char *           pBuffer;       // the bufferpBuffer47,1555
    int              nBufferSize;   // the size of the buffernBufferSize48,1605
    char *           pBufferCur;    // the current reading positionpBufferCur49,1667
    char *           pBufferEnd;    // the first position not used by currently loaded datapBufferEnd50,1735
    char *           pBufferStop;   // the position where loading new data will be donepBufferStop51,1827
    Vec_Ptr_t *      vTokens;       // the vector of tokens returned to the uservTokens53,1947
    Vec_Int_t *      vLines;        // the vector of line numbers for each tokenvLines54,2028
    int              nLineCounter;  // the counter of lines processednLineCounter55,2109
    int              fStop;         // this flag goes high when the end of file is reachedfStop57,2207
    EXTRA_CHAR_COMMENT,  // a character that begins the commentEXTRA_CHAR_COMMENT62,2337
    EXTRA_CHAR_NORMAL,   // a regular characterEXTRA_CHAR_NORMAL63,2401
    EXTRA_CHAR_STOP,     // a character that delimits a series of tokensEXTRA_CHAR_STOP64,2449
    EXTRA_CHAR_CLEAN     // a character that should be cleanedEXTRA_CHAR_CLEAN65,2522
} Extra_CharType_t;Extra_CharType_t66,2585
Extra_FileReader_t * Extra_FileReaderAlloc( char * pFileName, Extra_FileReaderAlloc87,3241
void Extra_FileReaderFree( Extra_FileReader_t * p )Extra_FileReaderFree149,5484
char * Extra_FileReaderGetFileName( Extra_FileReader_t * p )Extra_FileReaderGetFileName170,5953
int Extra_FileReaderGetFileSize( Extra_FileReader_t * p )Extra_FileReaderGetFileSize186,6300
int Extra_FileReaderGetCurPosition( Extra_FileReader_t * p )Extra_FileReaderGetCurPosition202,6659
int Extra_FileReaderGetLineNumber( Extra_FileReader_t * p, int iToken )Extra_FileReaderGetLineNumber218,7062
void * Extra_FileReaderGetTokens( Extra_FileReader_t * p )Extra_FileReaderGetTokens236,7500
void * Extra_FileReaderGetTokens_int( Extra_FileReader_t * p )Extra_FileReaderGetTokens_int256,8001
void Extra_FileReaderReload( Extra_FileReader_t * p )Extra_FileReaderReload362,11474

src/misc/extra/extraUtilFile.c,2991
char * Extra_FileGetSimilarName( char * pFileNameWrong, char * pS1, char * pS2, char * pS3, char * pS4, char * pS5 )Extra_FileGetSimilarName71,2690
char * Extra_FileNameExtension( char * FileName )Extra_FileNameExtension125,4339
char * Extra_FileNameAppend( char * pBase, char * pSuffix )Extra_FileNameAppend146,4883
char * Extra_FileNameGeneric( char * FileName )Extra_FileNameGeneric165,5315
char * Extra_FileNameGenericAppend( char * pBase, char * pSuffix )Extra_FileNameGenericAppend185,5769
void Extra_FileNameCorrectPath( char * FileName )Extra_FileNameCorrectPath208,6302
char * Extra_FileNameWithoutPath( char * FileName )Extra_FileNameWithoutPath228,6752
char * Extra_FilePathWithoutName( char * FileName )Extra_FilePathWithoutName236,6997
char * Extra_FileDesignName( char * pFileName )Extra_FileDesignName250,7398
int Extra_FileCheck( char * pFileName )Extra_FileCheck281,8308
int Extra_FileSize( char * pFileName )Extra_FileSize308,8988
char * Extra_FileRead( FILE * pFile )Extra_FileRead336,9630
char * Extra_FileRead2( FILE * pFile, FILE * pFile2 )Extra_FileRead2354,10199
char * Extra_FileReadContents( char * pFileName )Extra_FileReadContents388,11201
char * Extra_FileReadContents2( char * pFileName, char * pFileName2 )Extra_FileReadContents2397,11440
int Extra_FileIsType( char * pFileName, char * pS1, char * pS2, char * pS3 )Extra_FileIsType420,12088
char * Extra_TimeStamp()Extra_TimeStamp446,12879
unsigned Extra_ReadBinary( char * Buffer )Extra_ReadBinary470,13389
void Extra_PrintBinary( FILE * pFile, unsigned Sign[], int nBits )Extra_PrintBinary497,13941
void Extra_PrintBinary2( FILE * pFile, unsigned Sign[], int nBits )Extra_PrintBinary2504,14153
int Extra_ReadHex( unsigned Sign[], char * pString, int nDigits )Extra_ReadHex523,14641
int Extra_ReadHexadecimal( unsigned Sign[], char * pString, int nVars )Extra_ReadHexadecimal540,15209
void Extra_PrintHexadecimal( FILE * pFile, unsigned Sign[], int nVars )Extra_PrintHexadecimal565,15857
void Extra_PrintHexadecimalString( char * pString, unsigned Sign[], int nVars )Extra_PrintHexadecimalString592,16569
void Extra_PrintHex( FILE * pFile, unsigned * pTruth, int nVars )Extra_PrintHex624,17633
void Extra_PrintHex2( FILE * pFile, unsigned * pTruth, int nVars )Extra_PrintHex2642,18146
void Extra_PrintHexReverse( FILE * pFile, unsigned * pTruth, int nVars )Extra_PrintHexReverse660,18662
void Extra_PrintSymbols( FILE * pFile, char Char, int nTimes, int fPrintNewLine )Extra_PrintSymbols690,19436
char * Extra_StringAppend( char * pStrGiven, char * pStrAdd )Extra_StringAppend712,20094
void Extra_StringClean( char * pStrGiven, char * pCharKeep )Extra_StringClean737,20716
int Extra_StringCompare( const char * pp1, const char * pp2 )Extra_StringCompare763,21338
void Extra_FileSort( char * pFileName, char * pFileNameOut )Extra_FileSort779,21712
void Extra_FileLineNumAdd( char * pFileName, char * pFileNameOut )Extra_FileLineNumAdd838,23404

src/misc/extra/extraUtilMaj.c,2308
typedef struct Gem_Man_t_  Gem_Man_t;Gem_Man_t38,963
typedef struct Gem_Obj_t_  Gem_Obj_t;Gem_Obj_t39,1001
struct Gem_Man_t_Gem_Man_t_41,1040
    int          nVars;         // max variable countnVars43,1060
    int          nWords;        // truth tabel word countnWords44,1114
    int          nObjsAlloc;    // allocated objectsnObjsAlloc45,1172
    int          nObjs;         // used objectsnObjs46,1225
    Gem_Obj_t *  pObjs;         // function objectspObjs47,1273
    Vec_Mem_t *  vTtMem;        // truth table memory and hash tablevTtMem48,1325
    word **      pTtElems;      // elementary truth tablespTtElems49,1394
    int          fVerbose;fVerbose50,1453
struct Gem_Obj_t_ // 8 bytesGem_Obj_t_53,1484
    unsigned     nVars   :  4;  // variable countnVars55,1515
    unsigned     nNodes  :  4;  // node countnNodes56,1565
    unsigned     History :  8;  // (i < j) ? {vi, vj} : {vi, 0}History57,1611
    unsigned     Groups  : 16;  // mask with last vars in each symmetric groupGroups58,1675
    int          Predec;        // predecessor Predec59,1754
void Gem_PrintNode( Gem_Man_t * p, int f, char * pLabel, int fUpdate )Gem_PrintNode77,2260
Gem_Man_t * Gem_ManAlloc( int nVars, int fVerbose )Gem_ManAlloc87,2742
int Gem_ManFree( Gem_Man_t * p )Gem_ManFree105,3386
void Gem_ManRealloc( Gem_Man_t * p )Gem_ManRealloc114,3575
int Gem_GroupsDerive( word * pTruth, int nVars, word * pCof0, word * pCof1 )Gem_GroupsDerive138,4417
int Gem_GroupVarRemove( int Groups, int i ) // remove i-th varGem_GroupVarRemove158,4977
int Gem_GroupVarsInsert1( int Groups, int i, int fGroup ) // insert one bit after iGem_GroupVarsInsert1165,5195
int Gem_GroupVarsInsert3( int Groups, int i ) // insert group of 3 bits after iGem_GroupVarsInsert3173,5526
int Gem_GroupUnpack( int Groups, int * pVars )Gem_GroupUnpack180,5795
int Gem_FuncFindPlace( word * pTruth, int nWords, int Groups, word * pBest, int fOneVar )Gem_FuncFindPlace188,5995
void Gem_FuncExpand( Gem_Man_t * p, int f, int i )Gem_FuncExpand214,6880
int Gem_FuncCheckMajority( Gem_Man_t * p, int f )Gem_FuncCheckMajority266,8933
int Gem_FuncReduce( Gem_Man_t * p, int f, int i, int j )Gem_FuncReduce287,9646
int Gem_Enumerate( int nVars, int fDump, int fVerbose )Gem_Enumerate345,11843

src/misc/extra/extraUtilUtil.c,1330
#define EXTRA_RLIMIT_DATA_DEFAULT EXTRA_RLIMIT_DATA_DEFAULT31,801
const char * globalUtilOptarg;        // Global argument pointer (util_optarg)globalUtilOptarg44,1144
int    globalUtilOptind = 0;    // Global argv index (util_optind)globalUtilOptind45,1223
static const char *pScanStr;pScanStr47,1291
int Extra_GetSoftDataLimit()Extra_GetSoftDataLimit64,1793
void Extra_UtilGetoptReset()Extra_UtilGetoptReset80,2118
int Extra_UtilGetopt( int argc, char *argv[], const char *optstring )Extra_UtilGetopt98,2469
char * Extra_UtilPrintTime( long t )Extra_UtilPrintTime159,4004
char * Extra_UtilStrsav( const char *s )Extra_UtilStrsav179,4398
char * Extra_UtilTildeExpand( char *fname )Extra_UtilTildeExpand200,4890
int Extra_UtilCheckFile(char *filename, const char *mode)Extra_UtilCheckFile242,5861
char * Extra_UtilFileSearch(char *file, char *path, char *mode)Extra_UtilFileSearch269,6392
void Extra_UtilMMout_Of_Memory( long size ) Extra_UtilMMout_Of_Memory326,7881
void (*Extra_UtilMMoutOfMemory)( long size ) = (void (*)( long size ))Extra_UtilMMout_Of_Memory;Extra_UtilMMoutOfMemory346,8334
abctime Extra_CpuTime()Extra_CpuTime360,8682
double Extra_CpuTimeDouble()Extra_CpuTimeDouble377,9035
double Extra_CpuTimeDouble()Extra_CpuTimeDouble391,9237
void Extra_MemTest()Extra_MemTest410,9668

src/misc/extra/extraUtilCfs.c,194
void Extra_CommandCfs( Gia_Man_t * pGia, int Limit, int Reps, int UnseenUse, int RareUse, int fReplaceRare, int fConstSim, int fDagNodes, float FlipProb, int fVerbose )Extra_CommandCfs51,1359

src/misc/extra/extraUtilMacc.c,952
void Macc_ConstMultSpecOne2( FILE * pFile, int n, int nBits, int nWidth )Macc_ConstMultSpecOne252,1411
void Macc_ConstMultSpecOne( FILE * pFile, int n, int nBits, int nWidth )Macc_ConstMultSpecOne68,2285
void Macc_ConstMultSpecTest()Macc_ConstMultSpecTest85,3281
unsigned * Macc_ConstMultGenerate( int nBits )Macc_ConstMultGenerate113,3919
void Macc_ConstMultGenTest0()Macc_ConstMultGenTest0204,7018
void Macc_ConstMultGenOne_rec( FILE * pFile, unsigned * p, int n, int nBits, int nWidth )Macc_ConstMultGenOne_rec211,7145
void Macc_ConstMultGenMult( FILE * pFile, unsigned * p, int n, int nBits, int nWidth )Macc_ConstMultGenMult247,8575
void Macc_ConstMultGenMacc( FILE * pFile, unsigned * p, int n, int nBits, int nWidth )Macc_ConstMultGenMacc268,9541
void Macc_ConstMultGenMacc2( FILE * pFile, unsigned * p, int n, int nBits, int nWidth )Macc_ConstMultGenMacc2291,10633
void Macc_ConstMultGenTest()Macc_ConstMultGenTest313,11617

src/misc/extra/extraUtilMemory.c,4068
struct Extra_MmFixed_t_Extra_MmFixed_t_34,1028
    int           nEntrySize;    // the size of one entrynEntrySize37,1098
    int           nEntriesAlloc; // the total number of entries allocatednEntriesAlloc38,1156
    int           nEntriesUsed;  // the number of entries in usenEntriesUsed39,1230
    int           nEntriesMax;   // the max number of entries in usenEntriesMax40,1295
    char *        pEntriesFree;  // the linked list of free entriespEntriesFree41,1364
    int           nChunkSize;    // the size of one chunknChunkSize44,1475
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc45,1533
    int           nChunks;       // the current number of memory chunks nChunks46,1606
    char **       pChunks;       // the allocated memorypChunks47,1679
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed50,1755
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc51,1828
struct Extra_MmFlex_t_Extra_MmFlex_t_54,1885
    int           nEntriesUsed;  // the number of entries allocatednEntriesUsed57,1954
    char *        pCurrent;      // the current pointer to free memorypCurrent58,2022
    char *        pEnd;          // the first entry outside the free memorypEnd59,2093
    int           nChunkSize;    // the size of one chunknChunkSize62,2212
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc63,2270
    int           nChunks;       // the current number of memory chunks nChunks64,2343
    char **       pChunks;       // the allocated memorypChunks65,2416
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed68,2492
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc69,2565
struct Extra_MmStep_t_Extra_MmStep_t_73,2623
    int                nMems;    // the number of fixed memory managers employednMems75,2648
    Extra_MmFixed_t ** pMems;    // memory managers: 2^1 words, 2^2 words, etcpMems76,2729
    int                nMapSize; // the size of the memory arraynMapSize77,2808
    Extra_MmFixed_t ** pMap;     // maps the number of bytes into its memory managerpMap78,2873
    int                nLargeChunksAlloc;  // the maximum number of large memory chunks nLargeChunksAlloc79,2958
    int                nLargeChunks;       // the current number of large memory chunks nLargeChunks80,3047
    void **            pLargeChunks;       // the allocated large memory chunkspLargeChunks81,3136
Extra_MmFixed_t * Extra_MmFixedStart( int nEntrySize )Extra_MmFixedStart122,4988
void Extra_MmFixedPrint( Extra_MmFixed_t * p )Extra_MmFixedPrint161,5884
void Extra_MmFixedStop( Extra_MmFixed_t * p )Extra_MmFixedStop180,6498
char * Extra_MmFixedEntryFetch( Extra_MmFixed_t * p )Extra_MmFixedEntryFetch202,6952
void Extra_MmFixedEntryRecycle( Extra_MmFixed_t * p, char * pEntry )Extra_MmFixedEntryRecycle253,8561
void Extra_MmFixedRestart( Extra_MmFixed_t * p )Extra_MmFixedRestart273,9113
int Extra_MmFixedReadMemUsage( Extra_MmFixed_t * p )Extra_MmFixedReadMemUsage311,10091
int Extra_MmFixedReadMaxEntriesUsed( Extra_MmFixed_t * p )Extra_MmFixedReadMaxEntriesUsed327,10411
Extra_MmFlex_t * Extra_MmFlexStart()Extra_MmFlexStart344,10823
void Extra_MmFlexPrint( Extra_MmFlex_t * p )Extra_MmFlexPrint376,11540
void Extra_MmFlexStop( Extra_MmFlex_t * p )Extra_MmFlexStop395,12074
char * Extra_MmFlexEntryFetch( Extra_MmFlex_t * p, int nBytes )Extra_MmFlexEntryFetch418,12557
int Extra_MmFlexReadMemUsage( Extra_MmFlex_t * p )Extra_MmFlexReadMemUsage463,13967
Extra_MmStep_t * Extra_MmStepStart( int nSteps )Extra_MmStepStart492,14988
void Extra_MmStepStop( Extra_MmStep_t * p )Extra_MmStepStop528,16127
char * Extra_MmStepEntryFetch( Extra_MmStep_t * p, int nBytes )Extra_MmStepEntryFetch555,16751
void Extra_MmStepEntryRecycle( Extra_MmStep_t * p, char * pEntry, int nBytes )Extra_MmStepEntryRecycle588,17746
int Extra_MmStepReadMemUsage( Extra_MmStep_t * p )Extra_MmStepReadMemUsage611,18251

src/misc/extra/extraUtilProgress.c,948
struct ProgressBarStructProgressBarStruct32,813
    int              nItemsNext;   // the number of items for the next update of the progress barnItemsNext34,840
    int              nItemsTotal;  // the total number of itemsnItemsTotal35,938
    int              posTotal;     // the total number of positionsposTotal36,1002
    int              posCur;       // the current positionposCur37,1070
    FILE *           pFile;        // the output stream pFile38,1129
ProgressBar * Extra_ProgressBarStart( FILE * pFile, int nItemsTotal )Extra_ProgressBarStart62,2058
void Extra_ProgressBarUpdate_int( ProgressBar * p, int nItemsCur, char * pString )Extra_ProgressBarUpdate_int88,2800
void Extra_ProgressBarStop( ProgressBar * p )Extra_ProgressBarStop118,3500
void Extra_ProgressBarShow( ProgressBar * p, char * pString )Extra_ProgressBarShow136,3908
void Extra_ProgressBarClean( ProgressBar * p )Extra_ProgressBarClean166,4705

src/misc/parse/parseEqn.c,1271
#define PARSE_EQN_SYM_OPEN PARSE_EQN_SYM_OPEN29,801
#define PARSE_EQN_SYM_CLOSE PARSE_EQN_SYM_CLOSE30,860
#define PARSE_EQN_SYM_CONST0 PARSE_EQN_SYM_CONST031,919
#define PARSE_EQN_SYM_CONST1 PARSE_EQN_SYM_CONST132,969
#define PARSE_EQN_SYM_NEG PARSE_EQN_SYM_NEG33,1019
#define PARSE_EQN_SYM_AND PARSE_EQN_SYM_AND34,1087
#define PARSE_EQN_SYM_XOR PARSE_EQN_SYM_XOR35,1136
#define PARSE_EQN_SYM_OR PARSE_EQN_SYM_OR36,1185
#define PARSE_EQN_OPER_NEG PARSE_EQN_OPER_NEG39,1296
#define PARSE_EQN_OPER_AND PARSE_EQN_OPER_AND40,1344
#define PARSE_EQN_OPER_XOR PARSE_EQN_OPER_XOR41,1393
#define PARSE_EQN_OPER_OR PARSE_EQN_OPER_OR42,1442
#define PARSE_EQN_OPER_MARK PARSE_EQN_OPER_MARK43,1490
#define PARSE_EQN_FLAG_START PARSE_EQN_FLAG_START46,1621
#define PARSE_EQN_FLAG_VAR PARSE_EQN_FLAG_VAR47,1691
#define PARSE_EQN_FLAG_OPER PARSE_EQN_FLAG_OPER48,1758
#define PARSE_EQN_FLAG_ERROR PARSE_EQN_FLAG_ERROR49,1832
#define PARSE_EQN_STACKSIZE PARSE_EQN_STACKSIZE51,1895
Hop_Obj_t * Parse_FormulaParserEqn( FILE * pOutput, char * pFormInit, Vec_Ptr_t * vVarNames, Hop_Man_t * pMan )Parse_FormulaParserEqn71,2634
Hop_Obj_t * Parse_ParserPerformTopOp( Hop_Man_t * pMan, Parse_StackFn_t * pStackFn, int Oper )Parse_ParserPerformTopOp336,13202

src/misc/parse/parseInt.h,278
#define ABC__bdd__parse__parseInt_hABC__bdd__parse__parseInt_h20,527
typedef struct ParseStackFnStruct    Parse_StackFn_t;    // the function stackParse_StackFn_t41,1306
typedef struct ParseStackOpStruct    Parse_StackOp_t;    // the operation stackParse_StackOp_t42,1385

src/misc/parse/parseCore.c,2008
#define PARSE_SYM_OPEN PARSE_SYM_OPEN50,1768
#define PARSE_SYM_CLOSE PARSE_SYM_CLOSE51,1823
#define PARSE_SYM_LOWER PARSE_SYM_LOWER52,1878
#define PARSE_SYM_RAISE PARSE_SYM_RAISE53,1935
#define PARSE_SYM_CONST0 PARSE_SYM_CONST054,1989
#define PARSE_SYM_CONST1 PARSE_SYM_CONST155,2035
#define PARSE_SYM_NEGBEF1 PARSE_SYM_NEGBEF156,2081
#define PARSE_SYM_NEGBEF2 PARSE_SYM_NEGBEF257,2145
#define PARSE_SYM_NEGAFT PARSE_SYM_NEGAFT58,2209
#define PARSE_SYM_AND1 PARSE_SYM_AND159,2272
#define PARSE_SYM_AND2 PARSE_SYM_AND260,2317
#define PARSE_SYM_XOR1 PARSE_SYM_XOR161,2362
#define PARSE_SYM_XOR2 PARSE_SYM_XOR262,2428
#define PARSE_SYM_XOR3 PARSE_SYM_XOR363,2493
#define PARSE_SYM_XOR PARSE_SYM_XOR64,2558
#define PARSE_SYM_OR1 PARSE_SYM_OR165,2603
#define PARSE_SYM_OR2 PARSE_SYM_OR266,2647
#define PARSE_SYM_EQU1 PARSE_SYM_EQU167,2691
#define PARSE_SYM_EQU2 PARSE_SYM_EQU268,2756
#define PARSE_SYM_EQU3 PARSE_SYM_EQU369,2821
#define PARSE_SYM_FLR1 PARSE_SYM_FLR170,2886
#define PARSE_SYM_FLR2 PARSE_SYM_FLR271,2951
#define PARSE_SYM_FLL1 PARSE_SYM_FLL172,3016
#define PARSE_SYM_FLL2 PARSE_SYM_FLL273,3081
#define PARSE_OPER_NEG PARSE_OPER_NEG77,3303
#define PARSE_OPER_AND PARSE_OPER_AND78,3342
#define PARSE_OPER_XOR PARSE_OPER_XOR79,3382
#define PARSE_OPER_OR PARSE_OPER_OR80,3440
#define PARSE_OPER_EQU PARSE_OPER_EQU81,3479
#define PARSE_OPER_FLR PARSE_OPER_FLR82,3534
#define PARSE_OPER_FLL PARSE_OPER_FLL83,3588
#define PARSE_OPER_MARK PARSE_OPER_MARK84,3642
#define PARSE_FLAG_START PARSE_FLAG_START87,3764
#define PARSE_FLAG_VAR PARSE_FLAG_VAR88,3826
#define PARSE_FLAG_OPER PARSE_FLAG_OPER89,3885
#define PARSE_FLAG_ERROR PARSE_FLAG_ERROR90,3951
#define STACKSIZE STACKSIZE92,4006
DdNode * Parse_FormulaParser( FILE * pOutput, char * pFormulaInit, int nVars, int nRanks, Parse_FormulaParser116,5035
DdNode * Parse_ParserPerformTopOp( DdManager * dd, Parse_StackFn_t * pStackFn, int Oper )Parse_ParserPerformTopOp504,19413

src/misc/parse/parse.h,65
#define ABC__bdd__parse__parse_hABC__bdd__parse__parse_h20,518

src/misc/parse/parseStack.c,1250
struct ParseStackFnStructParseStackFnStruct28,753
    void **     pData;        // the array of elementspData30,781
    int           Top;          // the indexTop31,836
    int           Size;         // the stack sizeSize32,881
struct ParseStackOpStructParseStackOpStruct35,935
    int *         pData;        // the array of elementspData37,963
    int           Top;          // the indexTop38,1020
    int           Size;         // the stack sizeSize39,1065
Parse_StackFn_t * Parse_StackFnStart( int nDepth )Parse_StackFnStart57,1590
int Parse_StackFnIsEmpty( Parse_StackFn_t * p )Parse_StackFnIsEmpty78,2105
void Parse_StackFnPush( Parse_StackFn_t * p, void * bFunc )Parse_StackFnPush94,2454
void * Parse_StackFnPop( Parse_StackFn_t * p )Parse_StackFnPop115,2944
void Parse_StackFnFree( Parse_StackFn_t * p )Parse_StackFnFree136,3426
Parse_StackOp_t * Parse_StackOpStart( int nDepth )Parse_StackOpStart156,3776
int Parse_StackOpIsEmpty( Parse_StackOp_t * p )Parse_StackOpIsEmpty177,4288
void Parse_StackOpPush( Parse_StackOp_t * p, int Oper )Parse_StackOpPush193,4637
int Parse_StackOpPop( Parse_StackOp_t * p )Parse_StackOpPop214,5122
void Parse_StackOpFree( Parse_StackOp_t * p )Parse_StackOpFree235,5599

src/misc/vec/vecBit.h,2761
#define ABC__misc__vec__vecBit_hABC__misc__vec__vecBit_h22,536
typedef struct Vec_Bit_t_       Vec_Bit_t;Vec_Bit_t42,1280
struct Vec_Bit_t_ Vec_Bit_t_43,1323
    int              nCap;nCap45,1344
    int              nSize;nSize46,1371
    int *            pArray;pArray47,1399
#define Vec_BitForEachEntry(Vec_BitForEachEntry54,1652
#define Vec_BitForEachEntryStart(Vec_BitForEachEntryStart56,1836
#define Vec_BitForEachEntryStop(Vec_BitForEachEntryStop58,2024
#define Vec_BitForEachEntryStartStop(Vec_BitForEachEntryStartStop60,2193
#define Vec_BitForEachEntryReverse(Vec_BitForEachEntryReverse62,2368
static inline Vec_Bit_t * Vec_BitAlloc( int nCap )Vec_BitAlloc80,3056
static inline Vec_Bit_t * Vec_BitStart( int nSize )Vec_BitStart102,3610
static inline Vec_Bit_t * Vec_BitStartFull( int nSize )Vec_BitStartFull123,4154
static inline Vec_Bit_t * Vec_BitDup( Vec_Bit_t * pVec )Vec_BitDup144,4681
static inline void Vec_BitFree( Vec_Bit_t * p )Vec_BitFree167,5283
static inline void Vec_BitFreeP( Vec_Bit_t ** p )Vec_BitFreeP184,5616
static inline int * Vec_BitReleaseArray( Vec_Bit_t * p )Vec_BitReleaseArray203,5995
static inline int * Vec_BitArray( Vec_Bit_t * p )Vec_BitArray223,6397
static inline int Vec_BitSize( Vec_Bit_t * p )Vec_BitSize239,6708
static inline int Vec_BitCap( Vec_Bit_t * p )Vec_BitCap255,7015
static inline double Vec_BitMemory( Vec_Bit_t * p )Vec_BitMemory271,7320
static inline int Vec_BitEntry( Vec_Bit_t * p, int i )Vec_BitEntry287,7682
static inline void Vec_BitWriteEntry( Vec_Bit_t * p, int i, int Entry )Vec_BitWriteEntry304,8062
static inline int Vec_BitAddEntry( Vec_Bit_t * p, int i )Vec_BitAddEntry313,8339
static inline int Vec_BitEntryLast( Vec_Bit_t * p )Vec_BitEntryLast332,8732
static inline void Vec_BitGrow( Vec_Bit_t * p, int nCapMin )Vec_BitGrow349,9134
static inline void Vec_BitFill( Vec_Bit_t * p, int nSize, int Fill )Vec_BitFill370,9691
static inline void Vec_BitFillExtra( Vec_Bit_t * p, int nSize, int Fill )Vec_BitFillExtra400,10389
static inline int Vec_BitGetEntry( Vec_Bit_t * p, int i )Vec_BitGetEntry456,11932
static inline void Vec_BitSetEntry( Vec_Bit_t * p, int i, int Entry )Vec_BitSetEntry473,12350
static inline void Vec_BitShrink( Vec_Bit_t * p, int nSizeNew )Vec_BitShrink490,12734
static inline void Vec_BitClear( Vec_Bit_t * p )Vec_BitClear507,13098
static inline void Vec_BitPush( Vec_Bit_t * p, int Entry )Vec_BitPush523,13404
static inline int Vec_BitPop( Vec_Bit_t * p )Vec_BitPop551,14124
static inline int Vec_BitCountWord( unsigned uWord )Vec_BitCountWord571,14521
static inline int Vec_BitCount( Vec_Bit_t * p ) Vec_BitCount591,15109
static inline void Vec_BitReset( Vec_Bit_t * p ) Vec_BitReset622,15899

src/misc/vec/vecWec.h,5286
#define ABC__misc__vec__vecWec_hABC__misc__vec__vecWec_h22,549
typedef struct Vec_Wec_t_       Vec_Wec_t;Vec_Wec_t42,1293
struct Vec_Wec_t_ Vec_Wec_t_43,1336
    int              nCap;nCap45,1357
    int              nSize;nSize46,1384
    Vec_Int_t *      pArray;pArray47,1412
#define Vec_WecForEachLevel(Vec_WecForEachLevel55,1694
#define Vec_WecForEachLevelVec(Vec_WecForEachLevelVec57,1878
#define Vec_WecForEachLevelStart(Vec_WecForEachLevelStart59,2087
#define Vec_WecForEachLevelStop(Vec_WecForEachLevelStop61,2280
#define Vec_WecForEachLevelStartStop(Vec_WecForEachLevelStartStop63,2455
#define Vec_WecForEachLevelReverse(Vec_WecForEachLevelReverse65,2639
#define Vec_WecForEachLevelReverseStartStop(Vec_WecForEachLevelReverseStartStop67,2826
#define Vec_WecForEachLevelTwo(Vec_WecForEachLevelTwo69,3013
#define Vec_WecForEachLevelDouble(Vec_WecForEachLevelDouble71,3244
static inline Vec_Wec_t * Vec_WecAlloc( int nCap )Vec_WecAlloc89,3975
static inline Vec_Wec_t * Vec_WecAllocExact( int nCap )Vec_WecAllocExact100,4255
static inline Vec_Wec_t * Vec_WecStart( int nSize )Vec_WecStart110,4515
static inline void Vec_WecGrow( Vec_Wec_t * p, int nCapMin )Vec_WecGrow129,4933
static inline void Vec_WecInit( Vec_Wec_t * p, int nSize )Vec_WecInit137,5219
static inline Vec_Int_t * Vec_WecEntry( Vec_Wec_t * p, int i )Vec_WecEntry154,5568
static inline Vec_Int_t * Vec_WecEntryLast( Vec_Wec_t * p )Vec_WecEntryLast159,5699
static inline int Vec_WecEntryEntry( Vec_Wec_t * p, int i, int k )Vec_WecEntryEntry164,5828
static inline Vec_Int_t * Vec_WecArray( Vec_Wec_t * p )Vec_WecArray180,6184
static inline int Vec_WecLevelId( Vec_Wec_t * p, Vec_Int_t * vLevel )Vec_WecLevelId184,6266
static inline int Vec_WecCap( Vec_Wec_t * p )Vec_WecCap201,6674
static inline int Vec_WecSize( Vec_Wec_t * p )Vec_WecSize205,6744
static inline int Vec_WecLevelSize( Vec_Wec_t * p, int i )Vec_WecLevelSize209,6816
static inline int Vec_WecSizeSize( Vec_Wec_t * p )Vec_WecSizeSize214,6958
static inline int Vec_WecSizeUsed( Vec_Wec_t * p )Vec_WecSizeUsed222,7155
static inline int Vec_WecSizeUsedLimits( Vec_Wec_t * p, int iStart, int iStop )Vec_WecSizeUsedLimits230,7363
static inline void Vec_WecShrink( Vec_Wec_t * p, int nSizeNew )Vec_WecShrink250,7859
static inline void Vec_WecClear( Vec_Wec_t * p )Vec_WecClear270,8339
static inline void Vec_WecPush( Vec_Wec_t * p, int Level, int Entry )Vec_WecPush290,8746
static inline Vec_Int_t * Vec_WecPushLevel( Vec_Wec_t * p )Vec_WecPushLevel299,9005
static inline Vec_Int_t * Vec_WecInsertLevel( Vec_Wec_t * p, int i )Vec_WecInsertLevel311,9280
static inline double Vec_WecMemory( Vec_Wec_t * p )Vec_WecMemory340,9993
static inline void Vec_WecZero( Vec_Wec_t * p )Vec_WecZero362,10531
static inline void Vec_WecErase( Vec_Wec_t * p )Vec_WecErase368,10640
static inline void Vec_WecFree( Vec_Wec_t * p )Vec_WecFree377,10843
static inline void Vec_WecFreeP( Vec_Wec_t ** p )Vec_WecFreeP382,10937
static inline void Vec_WecPushUnique( Vec_Wec_t * p, int Level, int Entry )Vec_WecPushUnique401,11302
static inline Vec_Wec_t * Vec_WecDup( Vec_Wec_t * p )Vec_WecDup420,11775
static int Vec_WecSortCompare1( Vec_Int_t * p1, Vec_Int_t * p2 )Vec_WecSortCompare1443,12342
static int Vec_WecSortCompare2( Vec_Int_t * p1, Vec_Int_t * p2 )Vec_WecSortCompare2451,12554
static inline void Vec_WecSort( Vec_Wec_t * p, int fReverse )Vec_WecSort459,12766
static int Vec_WecSortCompare3( Vec_Int_t * p1, Vec_Int_t * p2 )Vec_WecSortCompare3481,13423
static int Vec_WecSortCompare4( Vec_Int_t * p1, Vec_Int_t * p2 )Vec_WecSortCompare4489,13647
static inline void Vec_WecSortByFirstInt( Vec_Wec_t * p, int fReverse )Vec_WecSortByFirstInt497,13871
static int Vec_WecSortCompare5( Vec_Int_t * p1, Vec_Int_t * p2 )Vec_WecSortCompare5518,14536
static int Vec_WecSortCompare6( Vec_Int_t * p1, Vec_Int_t * p2 )Vec_WecSortCompare6526,14768
static inline void Vec_WecSortByLastInt( Vec_Wec_t * p, int fReverse )Vec_WecSortByLastInt534,15000
static inline void Vec_WecPrint( Vec_Wec_t * p, int fSkipSingles )Vec_WecPrint555,15625
static inline void Vec_WecPrintLits( Vec_Wec_t * p )Vec_WecPrintLits569,16006
static inline Vec_Wec_t * Vec_WecCreateClasses( Vec_Int_t * vMap )Vec_WecCreateClasses593,16628
static inline int Vec_WecCountNonTrivial( Vec_Wec_t * p, int * pnUsed )Vec_WecCountNonTrivial614,17141
static inline Vec_Int_t * Vec_WecCollectFirsts( Vec_Wec_t * p )Vec_WecCollectFirsts640,17714
static inline Vec_Ptr_t * Vec_WecConvertToVecPtr( Vec_Wec_t * p )Vec_WecConvertToVecPtr662,18269
static inline int  Vec_WecIntHasMark( Vec_Int_t * vVec ) { return (vVec->nCap >> 30) & 1; }Vec_WecIntHasMark685,18863
static inline void Vec_WecIntSetMark( Vec_Int_t * vVec ) { vVec->nCap |= (1<<30);         }Vec_WecIntSetMark686,18955
static inline void Vec_WecIntXorMark( Vec_Int_t * vVec ) { vVec->nCap ^= (1<<30);         }Vec_WecIntXorMark687,19047
static inline void Vec_WecMarkLevels( Vec_Wec_t * vCubes, Vec_Int_t * vLevels )Vec_WecMarkLevels688,19139
static inline void Vec_WecUnmarkLevels( Vec_Wec_t * vCubes, Vec_Int_t * vLevels )Vec_WecUnmarkLevels698,19408
static inline void Vec_WecRemoveEmpty( Vec_Wec_t * vCubes )Vec_WecRemoveEmpty720,19936

src/misc/vec/vecWrd.h,6316
#define ABC__misc__vec__vecWrd_hABC__misc__vec__vecWrd_h22,554
typedef struct Vec_Wrd_t_       Vec_Wrd_t;Vec_Wrd_t42,1298
struct Vec_Wrd_t_ Vec_Wrd_t_43,1341
    int              nCap;nCap45,1362
    int              nSize;nSize46,1389
    word *           pArray;pArray47,1417
#define Vec_WrdForEachEntry(Vec_WrdForEachEntry54,1670
#define Vec_WrdForEachEntryStart(Vec_WrdForEachEntryStart56,1854
#define Vec_WrdForEachEntryStop(Vec_WrdForEachEntryStop58,2042
#define Vec_WrdForEachEntryStartStop(Vec_WrdForEachEntryStartStop60,2211
#define Vec_WrdForEachEntryReverse(Vec_WrdForEachEntryReverse62,2386
static inline Vec_Wrd_t * Vec_WrdAlloc( int nCap )Vec_WrdAlloc80,3074
static inline Vec_Wrd_t * Vec_WrdAllocExact( int nCap )Vec_WrdAllocExact91,3350
static inline Vec_Wrd_t * Vec_WrdStart( int nSize )Vec_WrdStart113,3892
static inline Vec_Wrd_t * Vec_WrdStartFull( int nSize )Vec_WrdStartFull133,4380
static inline Vec_Wrd_t * Vec_WrdStartNatural( int nSize )Vec_WrdStartNatural153,4875
static inline Vec_Wrd_t * Vec_WrdStartRandom( int nSize )Vec_WrdStartRandom163,5095
static inline Vec_Wrd_t * Vec_WrdStartTruthTables( int nVars )Vec_WrdStartTruthTables170,5306
static inline Vec_Wrd_t * Vec_WrdAllocArray( word * pArray, int nSize )Vec_WrdAllocArray208,6356
static inline Vec_Wrd_t * Vec_WrdAllocArrayCopy( word * pArray, int nSize )Vec_WrdAllocArrayCopy229,6864
static inline Vec_Wrd_t * Vec_WrdDup( Vec_Wrd_t * pVec )Vec_WrdDup251,7427
static inline Vec_Wrd_t * Vec_WrdDupArray( Vec_Wrd_t * pVec )Vec_WrdDupArray273,8024
static inline void Vec_WrdErase( Vec_Wrd_t * p )Vec_WrdErase297,8549
static inline void Vec_WrdFree( Vec_Wrd_t * p )Vec_WrdFree303,8664
static inline void Vec_WrdFreeP( Vec_Wrd_t ** p )Vec_WrdFreeP320,8997
static inline word * Vec_WrdReleaseArray( Vec_Wrd_t * p )Vec_WrdReleaseArray339,9376
static inline word * Vec_WrdArray( Vec_Wrd_t * p )Vec_WrdArray359,9780
static inline word * Vec_WrdLimit( Vec_Wrd_t * p )Vec_WrdLimit363,9857
static inline int Vec_WrdSize( Vec_Wrd_t * p )Vec_WrdSize379,10180
static inline int Vec_WrdCap( Vec_Wrd_t * p )Vec_WrdCap395,10487
static inline double Vec_WrdMemory( Vec_Wrd_t * p )Vec_WrdMemory411,10792
static inline word Vec_WrdEntry( Vec_Wrd_t * p, int i )Vec_WrdEntry427,11163
static inline word * Vec_WrdEntryP( Vec_Wrd_t * p, int i )Vec_WrdEntryP444,11521
static inline void Vec_WrdWriteEntry( Vec_Wrd_t * p, int i, word Entry )Vec_WrdWriteEntry461,11883
static inline word Vec_WrdAddToEntry( Vec_Wrd_t * p, int i, word Addition )Vec_WrdAddToEntry478,12259
static inline word Vec_WrdEntryLast( Vec_Wrd_t * p )Vec_WrdEntryLast495,12649
static inline void Vec_WrdGrow( Vec_Wrd_t * p, int nCapMin )Vec_WrdGrow512,13044
static inline void Vec_WrdFill( Vec_Wrd_t * p, int nSize, word Fill )Vec_WrdFill532,13544
static inline void Vec_WrdFillExtra( Vec_Wrd_t * p, int nSize, word Fill )Vec_WrdFillExtra552,14024
static inline word Vec_WrdGetEntry( Vec_Wrd_t * p, int i )Vec_WrdGetEntry577,14667
static inline word * Vec_WrdGetEntryP( Vec_Wrd_t * p, int i )Vec_WrdGetEntryP594,15081
static inline void Vec_WrdSetEntry( Vec_Wrd_t * p, int i, word Entry )Vec_WrdSetEntry611,15504
static inline void Vec_WrdShrink( Vec_Wrd_t * p, int nSizeNew )Vec_WrdShrink628,15889
static inline void Vec_WrdClear( Vec_Wrd_t * p )Vec_WrdClear645,16253
static inline void Vec_WrdPush( Vec_Wrd_t * p, word Entry )Vec_WrdPush661,16559
static inline void Vec_WrdPushFirst( Vec_Wrd_t * p, word Entry )Vec_WrdPushFirst684,17054
static inline void Vec_WrdPushOrder( Vec_Wrd_t * p, word Entry )Vec_WrdPushOrder711,17709
static inline int Vec_WrdPushUniqueOrder( Vec_Wrd_t * p, word Entry )Vec_WrdPushUniqueOrder741,18436
static inline int Vec_WrdPushUnique( Vec_Wrd_t * p, word Entry )Vec_WrdPushUnique762,18900
static inline word * Vec_WrdFetch( Vec_Wrd_t * p, int nWords )Vec_WrdFetch783,19415
static inline word Vec_WrdPop( Vec_Wrd_t * p )Vec_WrdPop808,20011
static inline int Vec_WrdFind( Vec_Wrd_t * p, word Entry )Vec_WrdFind825,20370
static inline int Vec_WrdRemove( Vec_Wrd_t * p, word Entry )Vec_WrdRemove845,20790
static inline void Vec_WrdInsert( Vec_Wrd_t * p, int iHere, word Entry )Vec_WrdInsert871,21424
static inline word Vec_WrdFindMax( Vec_Wrd_t * p )Vec_WrdFindMax892,21939
static inline word Vec_WrdFindMin( Vec_Wrd_t * p )Vec_WrdFindMin916,22456
static inline void Vec_WrdReverseOrder( Vec_Wrd_t * p )Vec_WrdReverseOrder940,22992
static inline Vec_Wrd_t * Vec_WrdInvert( Vec_Wrd_t * p, word Fill ) Vec_WrdInvert963,23481
static inline word Vec_WrdSum( Vec_Wrd_t * p ) Vec_WrdSum986,24046
static inline int Vec_WrdCountZero( Vec_Wrd_t * p ) Vec_WrdCountZero1006,24456
static inline int Vec_WrdEqual( Vec_Wrd_t * p1, Vec_Wrd_t * p2 ) Vec_WrdEqual1025,24901
static inline int Vec_WrdCountCommon( Vec_Wrd_t * p1, Vec_Wrd_t * p2 ) Vec_WrdCountCommon1047,25425
static int Vec_WrdSortCompare1( word * pp1, word * pp2 )Vec_WrdSortCompare11075,26242
static int Vec_WrdSortCompare2( word * pp1, word * pp2 )Vec_WrdSortCompare21096,26773
static inline void Vec_WrdSort( Vec_Wrd_t * p, int fReverse )Vec_WrdSort1117,27309
static inline void Vec_WrdUniqify( Vec_Wrd_t * p )Vec_WrdUniqify1138,27955
static inline int Vec_WrdUniqueCount( Vec_Wrd_t * vData, int nWordSize, Vec_Int_t ** pvMap )Vec_WrdUniqueCount1149,28237
static inline Vec_Wrd_t * Vec_WrdUniqifyHash( Vec_Wrd_t * vData, int nWordSize )Vec_WrdUniqifyHash1160,28585
static int Vec_WrdSortCompareUnsigned( word * pp1, word * pp2 )Vec_WrdSortCompareUnsigned1185,29260
static inline void Vec_WrdSortUnsigned( Vec_Wrd_t * p )Vec_WrdSortUnsigned1205,29703
static inline void Vec_WrdAppend( Vec_Wrd_t * vVec1, Vec_Wrd_t * vVec2 )Vec_WrdAppend1223,30184
static inline void Gia_ManSimPatWriteOne( FILE * pFile, word * pSim, int nWords )Gia_ManSimPatWriteOne1241,30599
static inline void Vec_WrdPrintHex( Vec_Wrd_t * p, int nWords )Vec_WrdPrintHex1254,30992
static inline void Vec_WrdDumpHex( char * pFileName, Vec_Wrd_t * p, int nWords, int fVerbose )Vec_WrdDumpHex1261,31261
static inline int Vec_WrdReadHexOne( char c )Vec_WrdReadHexOne1277,31904
static inline Vec_Wrd_t * Vec_WrdReadHex( char * pFileName, int * pnWords, int fVerbose )Vec_WrdReadHex1290,32244

src/misc/vec/vecQue.h,1886
#define ABC__misc__vec__Queue_hABC__misc__vec__Queue_h22,525
typedef struct Vec_Que_t_  Vec_Que_t;Vec_Que_t40,1266
struct Vec_Que_t_ Vec_Que_t_41,1304
    int             nCap;nCap43,1325
    int             nSize;nSize44,1351
    int *           pHeap;pHeap45,1378
    int *           pOrder;pOrder46,1405
    float **        pCostsFlt;  // owned by the callerpCostsFlt47,1433
static inline float Vec_QuePrio( Vec_Que_t * p, int v ) { return *p->pCostsFlt ? (*p->pCostsFlt)[v] : v; }Vec_QuePrio50,1492
static inline Vec_Que_t * Vec_QueAlloc( int nCap )Vec_QueAlloc71,2274
static inline void Vec_QueFree( Vec_Que_t * p )Vec_QueFree83,2571
static inline void Vec_QueFreeP( Vec_Que_t ** p )Vec_QueFreeP89,2695
static inline void Vec_QueSetPriority( Vec_Que_t * p, float ** pCosts )Vec_QueSetPriority95,2805
static inline void Vec_QueGrow( Vec_Que_t * p, int nCapMin )Vec_QueGrow100,2944
static inline void Vec_QueClear( Vec_Que_t * p )Vec_QueClear110,3361
static inline int Vec_QueSize( Vec_Que_t * p )Vec_QueSize134,3890
static inline int Vec_QueTop( Vec_Que_t * p )Vec_QueTop139,3994
static inline float Vec_QueTopPriority( Vec_Que_t * p )Vec_QueTopPriority143,4094
static inline int Vec_QueMoveUp( Vec_Que_t * p, int v )Vec_QueMoveUp159,4466
static inline void Vec_QueMoveDown( Vec_Que_t * p, int v )Vec_QueMoveDown179,5047
static inline void Vec_QueUpdate( Vec_Que_t * p, int v )Vec_QueUpdate199,5697
static inline int Vec_QueIsMember( Vec_Que_t * p, int v )Vec_QueIsMember216,6060
static inline void Vec_QuePush( Vec_Que_t * p, int v )Vec_QuePush221,6198
static inline int Vec_QuePop( Vec_Que_t * p )Vec_QuePop234,6621
static inline void Vec_QuePrint( Vec_Que_t * p )Vec_QuePrint261,7228
static inline void Vec_QueCheck( Vec_Que_t * p )Vec_QueCheck289,7921
static inline void Vec_QueTest( Vec_Flt_t * vCosts )Vec_QueTest328,9016

src/misc/vec/vecMem.h,3726
#define ABC__misc__vec__vecMem_hABC__misc__vec__vecMem_h22,544
typedef struct Vec_Mem_t_       Vec_Mem_t;Vec_Mem_t50,1697
struct Vec_Mem_t_ Vec_Mem_t_51,1740
    int              nEntrySize;  // entry size (in terms of 8-byte words)nEntrySize53,1761
    int              nEntries;    // number of entries currently usednEntries54,1836
    int              LogPageSze;  // log2 of page size (in terms of entries)LogPageSze55,1906
    int              PageMask;    // page maskPageMask56,1983
    int              nPageAlloc;  // number of pages currently allocatednPageAlloc57,2030
    int              iPage;       // the number of a page currently used   iPage58,2103
    word **          ppPages;     // memory pagesppPages59,2179
    Vec_Int_t *      vTable;      // hash tablevTable60,2229
    Vec_Int_t *      vNexts;      // next pointersvNexts61,2277
#define Vec_MemForEachEntry(Vec_MemForEachEntry68,2552
static inline void Vec_MemAlloc_( Vec_Mem_t * p, int nEntrySize, int LogPageSze )Vec_MemAlloc_87,3309
static inline Vec_Mem_t * Vec_MemAlloc( int nEntrySize, int LogPageSze )Vec_MemAlloc95,3568
static inline void Vec_MemFree( Vec_Mem_t * p )Vec_MemFree105,3848
static inline void Vec_MemFreeP( Vec_Mem_t ** p )Vec_MemFreeP113,4031
static inline Vec_Mem_t * Vec_MemDup( Vec_Mem_t * pVec )Vec_MemDup120,4161
static inline void Vec_MemFill( Vec_Mem_t * pVec, int nEntries )Vec_MemFill137,4526
static inline void Vec_MemClean( Vec_Mem_t * pVec, int nEntries )Vec_MemClean140,4595
static inline int Vec_MemEntrySize( Vec_Mem_t * p )Vec_MemEntrySize155,4900
static inline int Vec_MemEntryNum( Vec_Mem_t * p )Vec_MemEntryNum159,4982
static inline int Vec_MemPageSize( Vec_Mem_t * p )Vec_MemPageSize163,5061
static inline int Vec_MemPageNum( Vec_Mem_t * p )Vec_MemPageNum167,5142
static inline double Vec_MemMemory( Vec_Mem_t * p )Vec_MemMemory183,5454
static inline word * Vec_MemReadEntry( Vec_Mem_t * p, int i )Vec_MemReadEntry199,5903
static inline word * Vec_MemReadEntryLast( Vec_Mem_t * p )Vec_MemReadEntryLast204,6089
static inline void Vec_MemWriteEntry( Vec_Mem_t * p, int i, word * pEntry )Vec_MemWriteEntry209,6232
static inline word * Vec_MemGetEntry( Vec_Mem_t * p, int i )Vec_MemGetEntry214,6419
static inline void Vec_MemSetEntry( Vec_Mem_t * p, int i, word * pEntry )Vec_MemSetEntry236,7230
static inline void Vec_MemPush( Vec_Mem_t * p, word * pEntry )Vec_MemPush241,7422
static inline void Vec_MemShrink( Vec_Mem_t * p, int nEntriesNew )Vec_MemShrink258,7848
static inline void Vec_MemDumpDigit( FILE * pFile, int HexDigit )Vec_MemDumpDigit279,8390
static inline void Vec_MemDump( FILE * pFile, Vec_Mem_t * pVec )Vec_MemDump287,8633
static inline void Vec_MemHashAlloc( Vec_Mem_t * p, int nTableSize )Vec_MemHashAlloc313,9371
static inline void Vec_MemHashFree( Vec_Mem_t * p )Vec_MemHashFree319,9605
static inline unsigned Vec_MemHashKey( Vec_Mem_t * p, word * pEntry )Vec_MemHashKey326,9762
static int * Vec_MemHashLookup( Vec_Mem_t * p, word * pEntry )Vec_MemHashLookup336,10146
static void Vec_MemHashProfile( Vec_Mem_t * p )Vec_MemHashProfile344,10500
static void Vec_MemHashResize( Vec_Mem_t * p )Vec_MemHashResize357,10830
static int Vec_MemHashInsert( Vec_Mem_t * p, word * pEntry )Vec_MemHashInsert373,11323
static inline Vec_Mem_t * Vec_MemAllocForTTSimple( int nVars )Vec_MemAllocForTTSimple400,12054
static inline Vec_Mem_t * Vec_MemAllocForTT( int nVars, int fCompl )Vec_MemAllocForTT407,12288
static inline void Vec_MemAddMuxTT( Vec_Mem_t * p, int nVars )Vec_MemAddMuxTT423,12937
static inline void Vec_MemDumpTruthTables( Vec_Mem_t * p, char * pName, int nLutSize )Vec_MemDumpTruthTables431,13256

src/misc/vec/vecStr.h,6064
#define ABC__misc__vec__vecStr_hABC__misc__vec__vecStr_h22,542
typedef struct Vec_Str_t_       Vec_Str_t;Vec_Str_t42,1286
struct Vec_Str_t_ Vec_Str_t_43,1329
    int              nCap;nCap45,1350
    int              nSize;nSize46,1377
    char *           pArray;pArray47,1405
#define Vec_StrForEachEntry(Vec_StrForEachEntry54,1658
static inline Vec_Str_t * Vec_StrAlloc( int nCap )Vec_StrAlloc72,2343
static inline Vec_Str_t * Vec_StrAllocExact( int nCap )Vec_StrAllocExact83,2619
static inline Vec_Str_t * Vec_StrStart( int nSize )Vec_StrStart105,3161
static inline Vec_Str_t * Vec_StrAllocArray( char * pArray, int nSize )Vec_StrAllocArray125,3655
static inline Vec_Str_t * Vec_StrAllocArrayCopy( char * pArray, int nSize )Vec_StrAllocArrayCopy146,4163
static inline Vec_Str_t * Vec_StrDup( Vec_Str_t * pVec )Vec_StrDup168,4726
static inline Vec_Str_t * Vec_StrDupArray( Vec_Str_t * pVec )Vec_StrDupArray190,5322
static inline void Vec_StrZero( Vec_Str_t * p )Vec_StrZero214,5847
static inline void Vec_StrErase( Vec_Str_t * p )Vec_StrErase220,5956
static inline void Vec_StrFree( Vec_Str_t * p )Vec_StrFree226,6071
static inline void Vec_StrFreeP( Vec_Str_t ** p )Vec_StrFreeP243,6404
static inline char * Vec_StrReleaseArray( Vec_Str_t * p )Vec_StrReleaseArray262,6783
static inline char * Vec_StrArray( Vec_Str_t * p )Vec_StrArray282,7187
static inline char * Vec_StrLimit( Vec_Str_t * p )Vec_StrLimit286,7264
static inline int Vec_StrSize( Vec_Str_t * p )Vec_StrSize302,7587
static inline void Vec_StrSetSize( Vec_Str_t * p, int nSize )Vec_StrSetSize306,7659
static inline int Vec_StrCap( Vec_Str_t * p )Vec_StrCap322,7982
static inline double Vec_StrMemory( Vec_Str_t * p )Vec_StrMemory338,8287
static inline char Vec_StrEntry( Vec_Str_t * p, int i )Vec_StrEntry354,8658
static inline char * Vec_StrEntryP( Vec_Str_t * p, int i )Vec_StrEntryP371,9016
static inline void Vec_StrWriteEntry( Vec_Str_t * p, int i, char Entry )Vec_StrWriteEntry388,9378
static inline char Vec_StrEntryLast( Vec_Str_t * p )Vec_StrEntryLast405,9754
static inline void Vec_StrGrow( Vec_Str_t * p, int nCapMin )Vec_StrGrow422,10149
static inline void Vec_StrFill( Vec_Str_t * p, int nSize, char Fill )Vec_StrFill441,10624
static inline void Vec_StrFillExtra( Vec_Str_t * p, int nSize, char Fill )Vec_StrFillExtra461,11107
static inline char Vec_StrGetEntry( Vec_Str_t * p, int i )Vec_StrGetEntry486,11750
static inline void Vec_StrSetEntry( Vec_Str_t * p, int i, char Entry )Vec_StrSetEntry503,12169
static inline void Vec_StrShrink( Vec_Str_t * p, int nSizeNew )Vec_StrShrink520,12554
static inline void Vec_StrClear( Vec_Str_t * p )Vec_StrClear537,12918
static inline void Vec_StrPush( Vec_Str_t * p, char Entry )Vec_StrPush553,13224
static inline void Vec_StrPushBuffer( Vec_Str_t * p, char * pBuffer, int nSize )Vec_StrPushBuffer564,13484
static inline char Vec_StrPop( Vec_Str_t * p )Vec_StrPop583,14027
static inline void Vec_StrIntPrint( Vec_Str_t * p )Vec_StrIntPrint600,14375
static inline void Vec_StrPrintNum( Vec_Str_t * p, int Num )Vec_StrPrintNum620,14850
static inline void Vec_StrPrintNumStar( Vec_Str_t * p, int Num, int nDigits )Vec_StrPrintNumStar639,15258
static inline void Vec_StrPrintStr( Vec_Str_t * p, const char * pStr )Vec_StrPrintStr672,16012
#define vsnprintf vsnprintf692,16445
static inline char * Vec_StrPrintF( Vec_Str_t * p, const char * format, ... )Vec_StrPrintF695,16482
static inline void Vec_StrAppend( Vec_Str_t * p, const char * pString )Vec_StrAppend723,17304
static inline void Vec_StrCopy( Vec_Str_t * p, const char * pString )Vec_StrCopy727,17415
static inline void Vec_StrReverseOrder( Vec_Str_t * p )Vec_StrReverseOrder745,17838
static inline int Vec_StrSum( Vec_Str_t * p ) Vec_StrSum767,18318
static inline int Vec_StrCountEntry( Vec_Str_t * p, char Entry ) Vec_StrCountEntry786,18723
static inline int Vec_StrCountLarger( Vec_Str_t * p, char Entry ) Vec_StrCountLarger793,18918
static inline int Vec_StrCountSmaller( Vec_Str_t * p, char Entry ) Vec_StrCountSmaller800,19113
static inline int Vec_StrCountEntryLit( Vec_Str_t * p, char Entry ) Vec_StrCountEntryLit819,19544
static inline int Vec_StrCountLargerLit( Vec_Str_t * p, char Entry ) Vec_StrCountLargerLit826,19760
static inline int Vec_StrCountSmallerLit( Vec_Str_t * p, char Entry ) Vec_StrCountSmallerLit833,19976
static inline int Vec_StrEqual( Vec_Str_t * p1, Vec_Str_t * p2 ) Vec_StrEqual852,20449
static int Vec_StrSortCompare1( char * pp1, char * pp2 )Vec_StrSortCompare1874,20974
static int Vec_StrSortCompare2( char * pp1, char * pp2 )Vec_StrSortCompare2895,21504
static inline void Vec_StrSort( Vec_Str_t * p, int fReverse )Vec_StrSort916,22040
static inline int Vec_StrCompareVec( Vec_Str_t * p1, Vec_Str_t * p2 )Vec_StrCompareVec937,22659
static inline void Vec_StrPutI_ne( Vec_Str_t * vOut, int Val )Vec_StrPutI_ne958,23287
static inline int Vec_StrGetI_ne( Vec_Str_t * vOut, int * pPos )Vec_StrGetI_ne965,23479
static inline void Vec_StrPutI( Vec_Str_t * vOut, int Val )Vec_StrPutI975,23733
static inline int Vec_StrGetI( Vec_Str_t * vOut, int * pPos )Vec_StrGetI981,23937
static inline void Vec_StrPutW( Vec_Str_t * vOut, word Val )Vec_StrPutW990,24185
static inline word Vec_StrGetW( Vec_Str_t * vOut, int * pPos )Vec_StrGetW996,24342
static inline void Vec_StrPutF( Vec_Str_t * vOut, float Val )Vec_StrPutF1005,24563
static inline float Vec_StrGetF( Vec_Str_t * vOut, int * pPos )Vec_StrGetF1014,24853
static inline void Vec_StrPutD( Vec_Str_t * vOut, double Val )Vec_StrPutD1024,25199
static inline double Vec_StrGetD( Vec_Str_t * vOut, int * pPos )Vec_StrGetD1032,25446
static inline void Vec_StrPutS( Vec_Str_t * vOut, char * pStr )Vec_StrPutS1041,25710
static inline char * Vec_StrGetS( Vec_Str_t * vOut, int * pPos )Vec_StrGetS1047,25870
static inline void Vec_StrPutC( Vec_Str_t * vOut, char c )Vec_StrPutC1054,26066
static inline char Vec_StrGetC( Vec_Str_t * vOut, int * pPos )Vec_StrGetC1058,26157

src/misc/vec/vec.h,59
#define ABC__misc__vec__vec_hABC__misc__vec__vec_h22,524

src/misc/vec/vecVec.h,5051
#define ABC__misc__vec__vecVec_hABC__misc__vec__vecVec_h22,549
typedef struct Vec_Vec_t_       Vec_Vec_t;Vec_Vec_t42,1293
struct Vec_Vec_t_ Vec_Vec_t_43,1336
    int              nCap;nCap45,1357
    int              nSize;nSize46,1384
    void **          pArray;pArray47,1412
#define Vec_VecForEachLevel(Vec_VecForEachLevel55,1694
#define Vec_VecForEachLevelStart(Vec_VecForEachLevelStart57,1881
#define Vec_VecForEachLevelStop(Vec_VecForEachLevelStop59,2077
#define Vec_VecForEachLevelStartStop(Vec_VecForEachLevelStartStop61,2255
#define Vec_VecForEachLevelReverse(Vec_VecForEachLevelReverse63,2442
#define Vec_VecForEachLevelReverseStartStop(Vec_VecForEachLevelReverseStartStop65,2632
#define Vec_VecForEachLevelTwo(Vec_VecForEachLevelTwo67,2822
#define Vec_VecForEachLevelInt(Vec_VecForEachLevelInt71,3106
#define Vec_VecForEachLevelIntStart(Vec_VecForEachLevelIntStart73,3296
#define Vec_VecForEachLevelIntStop(Vec_VecForEachLevelIntStop75,3495
#define Vec_VecForEachLevelIntStartStop(Vec_VecForEachLevelIntStartStop77,3676
#define Vec_VecForEachLevelIntReverse(Vec_VecForEachLevelIntReverse79,3866
#define Vec_VecForEachLevelIntReverseStartStop(Vec_VecForEachLevelIntReverseStartStop81,4059
#define Vec_VecForEachLevelIntTwo(Vec_VecForEachLevelIntTwo83,4252
#define Vec_VecForEachEntry(Vec_VecForEachEntry87,4523
#define Vec_VecForEachEntryLevel(Vec_VecForEachEntryLevel90,4787
#define Vec_VecForEachEntryStart(Vec_VecForEachEntryStart92,4959
#define Vec_VecForEachEntryStartStop(Vec_VecForEachEntryStartStop95,5223
#define Vec_VecForEachEntryReverse(Vec_VecForEachEntryReverse98,5487
#define Vec_VecForEachEntryReverseReverse(Vec_VecForEachEntryReverseReverse101,5758
#define Vec_VecForEachEntryReverseStart(Vec_VecForEachEntryReverseStart104,6029
#define Vec_VecForEachEntryInt(Vec_VecForEachEntryInt109,6324
#define Vec_VecForEachEntryIntLevel(Vec_VecForEachEntryIntLevel112,6584
#define Vec_VecForEachEntryIntStart(Vec_VecForEachEntryIntStart114,6752
#define Vec_VecForEachEntryIntStartStop(Vec_VecForEachEntryIntStartStop117,7012
#define Vec_VecForEachEntryIntReverse(Vec_VecForEachEntryIntReverse120,7272
#define Vec_VecForEachEntryIntReverseReverse(Vec_VecForEachEntryIntReverseReverse123,7539
#define Vec_VecForEachEntryIntReverseStart(Vec_VecForEachEntryIntReverseStart126,7806
static inline Vec_Vec_t * Vec_VecAlloc( int nCap )Vec_VecAlloc145,8564
static inline Vec_Vec_t * Vec_VecStart( int nSize )Vec_VecStart168,9118
static inline void Vec_VecExpand( Vec_Vec_t * p, int Level )Vec_VecExpand190,9625
static inline void Vec_VecExpandInt( Vec_Vec_t * p, int Level )Vec_VecExpandInt200,9906
static inline int Vec_VecSize( Vec_Vec_t * p )Vec_VecSize222,10425
static inline int Vec_VecCap( Vec_Vec_t * p )Vec_VecCap238,10732
static inline int Vec_VecLevelSize( Vec_Vec_t * p, int i )Vec_VecLevelSize254,11037
static inline Vec_Ptr_t * Vec_VecEntry( Vec_Vec_t * p, int i )Vec_VecEntry271,11426
static inline Vec_Int_t * Vec_VecEntryInt( Vec_Vec_t * p, int i )Vec_VecEntryInt276,11569
static inline double Vec_VecMemory( Vec_Vec_t * p )Vec_VecMemory293,11950
static inline double Vec_VecMemoryInt( Vec_Vec_t * p )Vec_VecMemoryInt304,12253
static inline void * Vec_VecEntryEntry( Vec_Vec_t * p, int i, int k )Vec_VecEntryEntry327,12797
static inline int Vec_VecEntryEntryInt( Vec_Vec_t * p, int i, int k )Vec_VecEntryEntryInt331,12921
static inline void Vec_VecFree( Vec_Vec_t * p )Vec_VecFree347,13300
static inline void Vec_VecErase( Vec_Vec_t * p )Vec_VecErase355,13499
static inline void Vec_VecFreeP( Vec_Vec_t ** p )Vec_VecFreeP375,13935
static inline Vec_Vec_t * Vec_VecDup( Vec_Vec_t * p )Vec_VecDup394,14317
static inline Vec_Vec_t * Vec_VecDupInt( Vec_Vec_t * p )Vec_VecDupInt403,14574
static inline int Vec_VecSizeSize( Vec_Vec_t * p )Vec_VecSizeSize425,15114
static inline void Vec_VecClear( Vec_Vec_t * p )Vec_VecClear445,15540
static inline void Vec_VecPush( Vec_Vec_t * p, int Level, void * Entry )Vec_VecPush464,15929
static inline void Vec_VecPushInt( Vec_Vec_t * p, int Level, int Entry )Vec_VecPushInt476,16290
static inline void Vec_VecPushUnique( Vec_Vec_t * p, int Level, void * Entry )Vec_VecPushUnique500,16889
static inline void Vec_VecPushUniqueInt( Vec_Vec_t * p, int Level, int Entry )Vec_VecPushUniqueInt507,17113
static int Vec_VecSortCompare1( Vec_Ptr_t ** pp1, Vec_Ptr_t ** pp2 )Vec_VecSortCompare1526,17614
static int Vec_VecSortCompare2( Vec_Ptr_t ** pp1, Vec_Ptr_t ** pp2 )Vec_VecSortCompare2534,17838
static inline void Vec_VecSort( Vec_Vec_t * p, int fReverse )Vec_VecSort554,18340
static int Vec_VecSortCompare3( Vec_Int_t ** pp1, Vec_Int_t ** pp2 )Vec_VecSortCompare3575,19001
static int Vec_VecSortCompare4( Vec_Int_t ** pp1, Vec_Int_t ** pp2 )Vec_VecSortCompare4583,19237
static inline void Vec_VecSortByFirstInt( Vec_Vec_t * p, int fReverse )Vec_VecSortByFirstInt603,19751
static inline void Vec_VecPrintInt( Vec_Vec_t * p, int fSkipSingles )Vec_VecPrintInt624,20371

src/misc/vec/vecHsh.h,5189
#define ABC__misc__vec__vecHsh_hABC__misc__vec__vecHsh_h22,534
typedef struct Hsh_Int1Man_t_ Hsh_Int1Man_t;Hsh_Int1Man_t42,1278
struct Hsh_Int1Man_t_Hsh_Int1Man_t_43,1323
    Vec_Int_t *  vData;       // stored datavData45,1347
    Vec_Int_t *  vNext;       // next itemsvNext46,1392
    Vec_Int_t *  vTable;      // hash tablevTable47,1436
typedef struct Hsh_IntObj_t_ Hsh_IntObj_t;Hsh_IntObj_t52,1486
struct Hsh_IntObj_t_Hsh_IntObj_t_53,1529
    int          iData;iData55,1552
    int          iNext;iNext56,1576
typedef union Hsh_IntObjWord_t_ Hsh_IntObjWord_t;Hsh_IntObjWord_t59,1604
union Hsh_IntObjWord_t_Hsh_IntObjWord_t_60,1654
    Hsh_IntObj_t wObj;wObj62,1680
    word         wWord;wWord63,1703
typedef struct Hsh_IntMan_t_ Hsh_IntMan_t;Hsh_IntMan_t66,1731
struct Hsh_IntMan_t_Hsh_IntMan_t_67,1774
    int          nSize;       // data sizenSize69,1797
    Vec_Int_t *  vData;       // data storagevData70,1840
    Vec_Int_t *  vTable;      // hash tablevTable71,1886
    Vec_Wrd_t *  vObjs;       // hash objectsvObjs72,1930
typedef struct Hsh_VecObj_t_ Hsh_VecObj_t;Hsh_VecObj_t77,1982
struct Hsh_VecObj_t_Hsh_VecObj_t_78,2025
    int          nSize;nSize80,2048
    int          iNext;iNext81,2072
    int          pArray[0];pArray82,2096
typedef struct Hsh_VecMan_t_ Hsh_VecMan_t;Hsh_VecMan_t85,2128
struct Hsh_VecMan_t_Hsh_VecMan_t_86,2171
    Vec_Int_t *  vTable;      // hash tablevTable88,2194
    Vec_Int_t *  vData;       // data storagevData89,2238
    Vec_Int_t *  vMap;        // mapping entries into data;vMap90,2284
    Vec_Int_t    vTemp;       // temporary arrayvTemp91,2344
    Vec_Int_t    vTemp1;      // temporary arrayvTemp192,2393
    Vec_Int_t    vTemp2;      // temporary arrayvTemp293,2442
static inline unsigned *      Hsh_IntData( Hsh_IntMan_t * p, int iData )  { return (unsigned *)Vec_IntEntryP( p->vData, p->nSize * iData );             }Hsh_IntData100,2715
static inline Hsh_IntObj_t *  Hsh_IntObj( Hsh_IntMan_t * p, int iObj )    { return iObj == -1 ? NULL : (Hsh_IntObj_t *)Vec_WrdEntryP( p->vObjs, iObj ); }Hsh_IntObj101,2869
static inline word            Hsh_IntWord( int iData, int iNext )         { Hsh_IntObjWord_t Obj = { {iData, iNext} }; return Obj.wWord;                }Hsh_IntWord102,3023
static inline Hsh_VecObj_t *  Hsh_VecObj( Hsh_VecMan_t * p, int i )  { return i == -1 ? NULL : (Hsh_VecObj_t *)Vec_IntEntryP(p->vData, Vec_IntEntry(p->vMap, i));  }Hsh_VecObj104,3178
static inline Hsh_Int1Man_t * Hsh_Int1ManStart( int nEntries )Hsh_Int1ManStart121,3846
static inline void Hsh_Int1ManStop( Hsh_Int1Man_t * p )Hsh_Int1ManStop130,4135
static inline int Hsh_Int1ManEntryNum( Hsh_Int1Man_t * p )Hsh_Int1ManEntryNum137,4302
static inline int Hsh_Int1ManHash( int Data, int nTableSize ) Hsh_Int1ManHash155,4718
static inline int * Hsh_Int1ManLookupInt( Hsh_Int1Man_t * p, int Data )Hsh_Int1ManLookupInt170,5096
static inline int Hsh_Int1ManLookup( Hsh_Int1Man_t * p, int Data )Hsh_Int1ManLookup179,5476
static inline int Hsh_Int1ManAdd( Hsh_Int1Man_t * p, int Data )Hsh_Int1ManAdd183,5590
static inline void Hsh_Int1ManHashArrayTest()Hsh_Int1ManHashArrayTest216,6540
static inline Hsh_IntMan_t * Hsh_IntManStart( Vec_Int_t * vData, int nSize, int nEntries )Hsh_IntManStart246,7581
static inline void Hsh_IntManStop( Hsh_IntMan_t * p )Hsh_IntManStop256,7900
static inline int Hsh_IntManEntryNum( Hsh_IntMan_t * p )Hsh_IntManEntryNum262,8036
static inline int Hsh_IntManHash( unsigned * pData, int nSize, int nTableSize ) Hsh_IntManHash279,8421
static inline int Hsh_IntManHash2( unsigned * pData, int nSize, int nTableSize )Hsh_IntManHash2295,8840
static inline int * Hsh_IntManLookup( Hsh_IntMan_t * p, unsigned * pData )Hsh_IntManLookup305,9221
static inline int Hsh_IntManAdd( Hsh_IntMan_t * p, int iData )Hsh_IntManAdd315,9666
static inline Vec_Int_t * Hsh_IntManHashArray( Vec_Int_t * vData, int nSize )Hsh_IntManHashArray349,10865
static inline Vec_Int_t * Hsh_WrdManHashArray( Vec_Wrd_t * vDataW, int nSize )Hsh_WrdManHashArray361,11290
static inline Hsh_IntMan_t * Hsh_WrdManHashArrayStart( Vec_Wrd_t * vDataW, int nSize )Hsh_WrdManHashArrayStart375,11858
static inline void Hsh_IntManHashArrayTest()Hsh_IntManHashArrayTest409,13030
static inline Hsh_VecMan_t * Hsh_VecManStart( int nEntries )Hsh_VecManStart450,13917
static inline void Hsh_VecManStop( Hsh_VecMan_t * p )Hsh_VecManStop459,14206
static inline int * Hsh_VecReadArray( Hsh_VecMan_t * p, int i )Hsh_VecReadArray466,14370
static inline Vec_Int_t * Hsh_VecReadEntry( Hsh_VecMan_t * p, int i )Hsh_VecReadEntry470,14477
static inline Vec_Int_t * Hsh_VecReadEntry1( Hsh_VecMan_t * p, int i )Hsh_VecReadEntry1477,14707
static inline Vec_Int_t * Hsh_VecReadEntry2( Hsh_VecMan_t * p, int i )Hsh_VecReadEntry2484,14942
static inline int Hsh_VecSize( Hsh_VecMan_t * p )Hsh_VecSize491,15177
static inline int Hsh_VecManHash( Vec_Int_t * vVec, int nTableSize )Hsh_VecManHash507,15499
static inline int Hsh_VecManAdd( Hsh_VecMan_t * p, Vec_Int_t * vVec )Hsh_VecManAdd516,15818
static inline void Hsh_VecManHashTest()Hsh_VecManHashTest556,17300

src/misc/vec/vecPtr.h,6008
#define ABC__misc__vec__vecPtr_hABC__misc__vec__vecPtr_h22,548
typedef struct Vec_Ptr_t_       Vec_Ptr_t;Vec_Ptr_t42,1292
struct Vec_Ptr_t_ Vec_Ptr_t_43,1335
    int              nCap;nCap45,1356
    int              nSize;nSize46,1383
    void **          pArray;pArray47,1411
#define Vec_PtrForEachEntry(Vec_PtrForEachEntry55,1693
#define Vec_PtrForEachEntryStart(Vec_PtrForEachEntryStart57,1891
#define Vec_PtrForEachEntryStop(Vec_PtrForEachEntryStop59,2093
#define Vec_PtrForEachEntryStartStop(Vec_PtrForEachEntryStartStop61,2278
#define Vec_PtrForEachEntryReverse(Vec_PtrForEachEntryReverse63,2467
#define Vec_PtrForEachEntryTwo(Vec_PtrForEachEntryTwo65,2670
#define Vec_PtrForEachEntryDouble(Vec_PtrForEachEntryDouble67,2924
static inline Vec_Ptr_t * Vec_PtrAlloc( int nCap )Vec_PtrAlloc85,3685
static inline Vec_Ptr_t * Vec_PtrAllocExact( int nCap )Vec_PtrAllocExact96,3961
static inline Vec_Ptr_t * Vec_PtrStart( int nSize )Vec_PtrStart118,4505
static inline Vec_Ptr_t * Vec_PtrAllocArray( void ** pArray, int nSize )Vec_PtrAllocArray138,5001
static inline Vec_Ptr_t * Vec_PtrAllocArrayCopy( void ** pArray, int nSize )Vec_PtrAllocArrayCopy159,5510
static inline Vec_Ptr_t * Vec_PtrDup( Vec_Ptr_t * pVec )Vec_PtrDup181,6078
static inline Vec_Ptr_t * Vec_PtrDupStr( Vec_Ptr_t * pVec )Vec_PtrDupStr191,6403
static inline Vec_Ptr_t * Vec_PtrDupArray( Vec_Ptr_t * pVec )Vec_PtrDupArray211,6907
static inline void Vec_PtrZero( Vec_Ptr_t * p )Vec_PtrZero235,7449
static inline void Vec_PtrErase( Vec_Ptr_t * p )Vec_PtrErase241,7558
static inline void Vec_PtrFree( Vec_Ptr_t * p )Vec_PtrFree247,7673
static inline void Vec_PtrFreeP( Vec_Ptr_t ** p )Vec_PtrFreeP264,8006
static inline void ** Vec_PtrReleaseArray( Vec_Ptr_t * p )Vec_PtrReleaseArray283,8385
static inline void ** Vec_PtrArray( Vec_Ptr_t * p )Vec_PtrArray303,8791
static inline int Vec_PtrSize( Vec_Ptr_t * p )Vec_PtrSize319,9104
static inline int Vec_PtrCap( Vec_Ptr_t * p )Vec_PtrCap335,9411
static inline double Vec_PtrMemory( Vec_Ptr_t * p )Vec_PtrMemory351,9716
static inline int Vec_PtrCountZero( Vec_Ptr_t * p ) Vec_PtrCountZero367,10089
static inline void * Vec_PtrEntry( Vec_Ptr_t * p, int i )Vec_PtrEntry386,10505
static inline void ** Vec_PtrEntryP( Vec_Ptr_t * p, int i )Vec_PtrEntryP403,10865
static inline void Vec_PtrWriteEntry( Vec_Ptr_t * p, int i, void * Entry )Vec_PtrWriteEntry420,11228
static inline void * Vec_PtrEntryLast( Vec_Ptr_t * p )Vec_PtrEntryLast437,11606
static inline void Vec_PtrGrow( Vec_Ptr_t * p, int nCapMin )Vec_PtrGrow454,12003
static inline void Vec_PtrFill( Vec_Ptr_t * p, int nSize, void * Entry )Vec_PtrFill473,12480
static inline void Vec_PtrFillTwo( Vec_Ptr_t * p, int nSize, void * EntryEven, void * EntryOdd )Vec_PtrFillTwo481,12683
static inline void Vec_PtrFillExtra( Vec_Ptr_t * p, int nSize, void * Fill )Vec_PtrFillExtra501,13216
static inline void * Vec_PtrGetEntry( Vec_Ptr_t * p, int i )Vec_PtrGetEntry526,13861
static inline void Vec_PtrSetEntry( Vec_Ptr_t * p, int i, void * Entry )Vec_PtrSetEntry543,14285
static inline void Vec_PtrShrink( Vec_Ptr_t * p, int nSizeNew )Vec_PtrShrink560,14675
static inline void Vec_PtrClear( Vec_Ptr_t * p )Vec_PtrClear577,15039
static inline void Vec_PtrFreeData( Vec_Ptr_t * p )Vec_PtrFreeData593,15382
static inline void Vec_PtrFreeFree( Vec_Ptr_t * p )Vec_PtrFreeFree601,15654
static inline void Vec_PtrCopy( Vec_Ptr_t * pDest, Vec_Ptr_t * pSour )Vec_PtrCopy619,16048
static inline void Vec_PtrPrintNames( Vec_Ptr_t * p )Vec_PtrPrintNames638,16568
static inline void Vec_PtrPush( Vec_Ptr_t * p, void * Entry )Vec_PtrPush658,17045
static inline void Vec_PtrPushTwo( Vec_Ptr_t * p, void * Entry1, void * Entry2 )Vec_PtrPushTwo669,17307
static inline void Vec_PtrAppend( Vec_Ptr_t * vVec1, Vec_Ptr_t * vVec2 )Vec_PtrAppend674,17452
static inline void Vec_PtrPushFirst( Vec_Ptr_t * p, void * Entry )Vec_PtrPushFirst692,17877
static inline int Vec_PtrPushUnique( Vec_Ptr_t * p, void * Entry )Vec_PtrPushUnique719,18478
static inline void * Vec_PtrPop( Vec_Ptr_t * p )Vec_PtrPop740,18986
static inline int Vec_PtrFind( Vec_Ptr_t * p, void * Entry )Vec_PtrFind757,19347
static inline int Vec_PtrFindStr( Vec_Ptr_t * p, char * Entry )Vec_PtrFindStr765,19534
static inline void Vec_PtrRemove( Vec_Ptr_t * p, void * Entry )Vec_PtrRemove785,19990
static inline void Vec_PtrDrop( Vec_Ptr_t * p, int i )Vec_PtrDrop816,20751
static inline void Vec_PtrInsert( Vec_Ptr_t * p, int iHere, void * Entry )Vec_PtrInsert836,21247
static inline void Vec_PtrReorder( Vec_Ptr_t * p, int nItems )Vec_PtrReorder857,21787
static inline void Vec_PtrReverseOrder( Vec_Ptr_t * p )Vec_PtrReverseOrder876,22371
static inline int Vec_PtrEqual( Vec_Ptr_t * p1, Vec_Ptr_t * p2 ) Vec_PtrEqual899,22894
static int Vec_PtrSortComparePtr( void ** pp1, void ** pp2 )Vec_PtrSortComparePtr921,23420
static void Vec_PtrSort( Vec_Ptr_t * p, int (*Vec_PtrSortCompare)() )Vec_PtrSort942,23943
static void Vec_PtrUniqify( Vec_Ptr_t * p, int (*Vec_PtrSortCompare)() )Vec_PtrUniqify966,24759
static void Vec_PtrUniqify2( Vec_Ptr_t * p, int (*Vec_PtrSortCompare)(void**, void**), void (*Vec_PtrObjFree)(void*), Vec_Int_t * vCounts )Vec_PtrUniqify2978,25231
static inline Vec_Ptr_t * Vec_PtrAllocSimInfo( int nEntries, int nWords )Vec_PtrAllocSimInfo1020,26645
static inline int Vec_PtrReadWordsSimInfo( Vec_Ptr_t * p )Vec_PtrReadWordsSimInfo1043,27352
static inline void Vec_PtrCleanSimInfo( Vec_Ptr_t * vInfo, int iWord, int nWords )Vec_PtrCleanSimInfo1059,27782
static inline void Vec_PtrFillSimInfo( Vec_Ptr_t * vInfo, int iWord, int nWords )Vec_PtrFillSimInfo1077,28303
static inline void Vec_PtrDoubleSimInfo( Vec_Ptr_t * vInfo )Vec_PtrDoubleSimInfo1095,28866
static inline void Vec_PtrReallocSimInfo( Vec_Ptr_t * vInfo )Vec_PtrReallocSimInfo1126,29883
static inline Vec_Ptr_t * Vec_PtrAllocTruthTables( int nVars )Vec_PtrAllocTruthTables1156,30846

src/misc/vec/vecFlt.h,4051
#define ABC__misc__vec__vecFlt_hABC__misc__vec__vecFlt_h22,537
typedef struct Vec_Flt_t_       Vec_Flt_t;Vec_Flt_t42,1281
struct Vec_Flt_t_ Vec_Flt_t_43,1324
    int              nCap;nCap45,1345
    int              nSize;nSize46,1372
    float *          pArray;pArray47,1400
#define Vec_FltForEachEntry(Vec_FltForEachEntry54,1653
#define Vec_FltForEachEntryStart(Vec_FltForEachEntryStart56,1837
#define Vec_FltForEachEntryStartStop(Vec_FltForEachEntryStartStop58,2025
#define Vec_FltForEachEntryReverse(Vec_FltForEachEntryReverse60,2200
static inline Vec_Flt_t * Vec_FltAlloc( int nCap )Vec_FltAlloc78,2888
static inline Vec_Flt_t * Vec_FltAllocExact( int nCap )Vec_FltAllocExact89,3165
static inline Vec_Flt_t * Vec_FltStart( int nSize )Vec_FltStart111,3708
static inline Vec_Flt_t * Vec_FltStartFull( int nSize )Vec_FltStartFull119,3909
static inline Vec_Flt_t * Vec_FltAllocArray( float * pArray, int nSize )Vec_FltAllocArray139,4408
static inline Vec_Flt_t * Vec_FltAllocArrayCopy( float * pArray, int nSize )Vec_FltAllocArrayCopy160,4914
static inline Vec_Flt_t * Vec_FltDup( Vec_Flt_t * pVec )Vec_FltDup182,5478
static inline Vec_Flt_t * Vec_FltDupArray( Vec_Flt_t * pVec )Vec_FltDupArray204,6076
static inline void Vec_FltZero( Vec_Flt_t * p )Vec_FltZero228,6601
static inline void Vec_FltErase( Vec_Flt_t * p )Vec_FltErase234,6710
static inline void Vec_FltFree( Vec_Flt_t * p )Vec_FltFree240,6825
static inline void Vec_FltFreeP( Vec_Flt_t ** p )Vec_FltFreeP257,7158
static inline float * Vec_FltReleaseArray( Vec_Flt_t * p )Vec_FltReleaseArray276,7537
static inline float * Vec_FltArray( Vec_Flt_t * p )Vec_FltArray296,7943
static inline float ** Vec_FltArrayP( Vec_Flt_t * p )Vec_FltArrayP300,8021
static inline int Vec_FltSize( Vec_Flt_t * p )Vec_FltSize316,8337
static inline int Vec_FltCap( Vec_Flt_t * p )Vec_FltCap332,8644
static inline double Vec_FltMemory( Vec_Flt_t * p )Vec_FltMemory348,8949
static inline float Vec_FltEntry( Vec_Flt_t * p, int i )Vec_FltEntry364,9321
static inline float * Vec_FltEntryP( Vec_Flt_t * p, int i )Vec_FltEntryP369,9445
static inline void Vec_FltWriteEntry( Vec_Flt_t * p, int i, float Entry )Vec_FltWriteEntry386,9808
static inline void Vec_FltAddToEntry( Vec_Flt_t * p, int i, float Addition )Vec_FltAddToEntry403,10185
static inline void Vec_FltUpdateEntry( Vec_Flt_t * p, int i, float Value )Vec_FltUpdateEntry420,10569
static inline float Vec_FltEntryLast( Vec_Flt_t * p )Vec_FltEntryLast437,10965
static inline void Vec_FltGrow( Vec_Flt_t * p, int nCapMin )Vec_FltGrow453,11333
static inline void Vec_FltFill( Vec_Flt_t * p, int nSize, float Entry )Vec_FltFill472,11809
static inline void Vec_FltFillExtra( Vec_Flt_t * p, int nSize, float Fill )Vec_FltFillExtra492,12292
static inline void Vec_FltShrink( Vec_Flt_t * p, int nSizeNew )Vec_FltShrink517,12890
static inline void Vec_FltClear( Vec_Flt_t * p )Vec_FltClear534,13254
static inline void Vec_FltPush( Vec_Flt_t * p, float Entry )Vec_FltPush550,13560
static inline void Vec_FltPushOrder( Vec_Flt_t * p, float Entry )Vec_FltPushOrder573,14056
static inline int Vec_FltPushUnique( Vec_Flt_t * p, float Entry )Vec_FltPushUnique603,14728
static inline float Vec_FltPop( Vec_Flt_t * p )Vec_FltPop624,15235
static inline int Vec_FltFind( Vec_Flt_t * p, float Entry )Vec_FltFind641,15595
static inline int Vec_FltRemove( Vec_Flt_t * p, float Entry )Vec_FltRemove661,16016
static inline float Vec_FltFindMax( Vec_Flt_t * p )Vec_FltFindMax687,16607
static inline float Vec_FltFindMin( Vec_Flt_t * p )Vec_FltFindMin699,16880
static inline int Vec_FltEqual( Vec_Flt_t * p1, Vec_Flt_t * p2 ) Vec_FltEqual723,17420
static inline void Vec_FltPrint( Vec_Flt_t * vVec )Vec_FltPrint745,17908
static int Vec_FltSortCompare1( float * pp1, float * pp2 )Vec_FltSortCompare1765,18416
static int Vec_FltSortCompare2( float * pp1, float * pp2 )Vec_FltSortCompare2786,18947
static inline void Vec_FltSort( Vec_Flt_t * p, int fReverse )Vec_FltSort807,19477

src/misc/vec/vecSet.h,4475
#define ABC__sat__bsat__vecSet_hABC__sat__bsat__vecSet_h22,528
typedef struct Vec_Set_t_ Vec_Set_t;Vec_Set_t49,1627
struct Vec_Set_t_Vec_Set_t_50,1664
    int               nPageSize;    // page sizenPageSize52,1684
    unsigned          uPageMask;    // page maskuPageMask53,1733
    int               nEntries;     // entry countnEntries54,1782
    int               iPage;        // current pageiPage55,1833
    int               iPageS;       // shadow pageiPageS56,1885
    int               nPagesAlloc;  // page count allocatednPagesAlloc57,1936
    word **           pPages;       // page pointerspPages58,1996
static inline int     Vec_SetHandPage( Vec_Set_t * p, int h )    { return h >> p->nPageSize;      }Vec_SetHandPage65,2274
static inline int     Vec_SetHandShift( Vec_Set_t * p, int h )   { return h & p->uPageMask;       }Vec_SetHandShift66,2374
static inline int     Vec_SetWordNum( int nSize )                { return (nSize + 1) >> 1;       }Vec_SetWordNum67,2474
static inline word *  Vec_SetEntry( Vec_Set_t * p, int h )       { return p->pPages[Vec_SetHandPage(p, h)] + Vec_SetHandShift(p, h);                     }Vec_SetEntry70,2874
static inline int     Vec_SetEntryNum( Vec_Set_t * p )           { return p->nEntries;            }Vec_SetEntryNum71,3029
static inline void    Vec_SetWriteEntryNum( Vec_Set_t * p, int i){ p->nEntries = i;               }Vec_SetWriteEntryNum72,3129
static inline int     Vec_SetLimit( word * p )                   { return p[0];                   }Vec_SetLimit74,3230
static inline int     Vec_SetLimitS( word * p )                  { return p[1];                   }Vec_SetLimitS75,3330
static inline int     Vec_SetIncLimit( word * p, int nWords )    { return p[0] += nWords;         }Vec_SetIncLimit77,3431
static inline int     Vec_SetIncLimitS( word * p, int nWords )   { return p[1] += nWords;         }Vec_SetIncLimitS78,3531
static inline void    Vec_SetWriteLimit( word * p, int nWords )  { p[0] = nWords;                 }Vec_SetWriteLimit80,3632
static inline void    Vec_SetWriteLimitS( word * p, int nWords ) { p[1] = nWords;                 }Vec_SetWriteLimitS81,3732
static inline int     Vec_SetHandCurrent( Vec_Set_t * p )        { return (p->iPage << p->nPageSize)  + Vec_SetLimit(p->pPages[p->iPage]);               }Vec_SetHandCurrent83,3833
static inline int     Vec_SetHandCurrentS( Vec_Set_t * p )       { return (p->iPageS << p->nPageSize) + Vec_SetLimitS(p->pPages[p->iPageS]);             }Vec_SetHandCurrentS84,3988
static inline int     Vec_SetHandMemory( Vec_Set_t * p, int h )  { return Vec_SetHandPage(p, h) * (1 << (p->nPageSize+3)) + Vec_SetHandShift(p, h) * 8;  }Vec_SetHandMemory86,4144
static inline int     Vec_SetMemory( Vec_Set_t * p )             { return Vec_SetHandMemory(p, Vec_SetHandCurrent(p));                                   }Vec_SetMemory87,4299
static inline int     Vec_SetMemoryS( Vec_Set_t * p )            { return Vec_SetHandMemory(p, Vec_SetHandCurrentS(p));                                  }Vec_SetMemoryS88,4454
static inline int     Vec_SetMemoryAll( Vec_Set_t * p )          { return (p->iPage+1) * (1 << (p->nPageSize+3));                                        }Vec_SetMemoryAll89,4609
#define Vec_SetForEachEntry(Vec_SetForEachEntry96,4935
static inline void Vec_SetAlloc_( Vec_Set_t * p, int nPageSize )Vec_SetAlloc_115,5636
static inline Vec_Set_t * Vec_SetAlloc( int nPageSize )Vec_SetAlloc128,6118
static inline void Vec_SetRestart( Vec_Set_t * p )Vec_SetRestart147,6519
static inline void Vec_SetFree_( Vec_Set_t * p )Vec_SetFree_168,6978
static inline void Vec_SetFree( Vec_Set_t * p )Vec_SetFree176,7175
static inline double Vec_ReportMemory( Vec_Set_t * p )Vec_ReportMemory194,7565
static inline int Vec_SetAppend( Vec_Set_t * p, int * pArray, int nSize )Vec_SetAppend213,8056
static inline int Vec_SetAppendS( Vec_Set_t * p, int nSize )Vec_SetAppendS236,9044
static inline int Vec_SetFetchH( Vec_Set_t * p, int nBytes )Vec_SetFetchH245,9431
static inline void * Vec_SetFetch( Vec_Set_t * p, int nBytes )Vec_SetFetch249,9550
static inline char * Vec_SetStrsav( Vec_Set_t * p, char * pName )Vec_SetStrsav253,9681
static inline void Vec_SetShrink( Vec_Set_t * p, int h )Vec_SetShrink271,10159
static inline void Vec_SetShrinkS( Vec_Set_t * p, int h )Vec_SetShrinkS277,10370
static inline void Vec_SetShrinkLimits( Vec_Set_t * p )Vec_SetShrinkLimits284,10586

src/misc/vec/vecHash.h,3156
#define ABC__misc__vec__vecHash_hABC__misc__vec__vecHash_h22,560
typedef struct Hash_IntObj_t_ Hash_IntObj_t;Hash_IntObj_t42,1305
struct Hash_IntObj_t_Hash_IntObj_t_43,1350
    int          iData0;iData045,1374
    int          iData1;iData146,1399
    int          iData2;iData247,1424
    int          iNext;iNext48,1449
typedef struct Hash_IntMan_t_ Hash_IntMan_t;Hash_IntMan_t51,1477
struct Hash_IntMan_t_Hash_IntMan_t_52,1522
    Vec_Int_t *  vTable;      // hash tablevTable54,1546
    Vec_Int_t *  vObjs;       // hash objectsvObjs55,1590
    int          nRefs;       // reference counter for the managernRefs56,1636
static inline Hash_IntObj_t * Hash_IntObj( Hash_IntMan_t * p, int i )           { return i ? (Hash_IntObj_t *)Vec_IntEntryP(p->vObjs, 4*i) : NULL;  }Hash_IntObj63,1927
static inline int             Hash_IntObjData0( Hash_IntMan_t * p, int i )      { return Hash_IntObj(p, i)->iData0;                                 }Hash_IntObjData064,2077
static inline int             Hash_IntObjData1( Hash_IntMan_t * p, int i )      { return Hash_IntObj(p, i)->iData1;                                 }Hash_IntObjData165,2227
static inline int             Hash_IntObjData2( Hash_IntMan_t * p, int i )      { return Hash_IntObj(p, i)->iData2;                                 }Hash_IntObjData266,2377
static inline int             Hash_Int2ObjInc( Hash_IntMan_t * p, int i )             { return Hash_IntObj(p, i)->iData2++;                         }Hash_Int2ObjInc68,2528
static inline int             Hash_Int2ObjDec( Hash_IntMan_t * p, int i )             { return --Hash_IntObj(p, i)->iData2;                         }Hash_Int2ObjDec69,2678
static inline void            Hash_Int2ObjSetData2( Hash_IntMan_t * p, int i, int d ) { Hash_IntObj(p, i)->iData2 = d;                              }Hash_Int2ObjSetData270,2828
static inline Hash_IntMan_t * Hash_IntManStart( int nSize )Hash_IntManStart87,3459
static inline void Hash_IntManStop( Hash_IntMan_t * p )Hash_IntManStop97,3764
static inline Hash_IntMan_t * Hash_IntManRef( Hash_IntMan_t * p )Hash_IntManRef103,3902
static inline void Hash_IntManDeref( Hash_IntMan_t * p )Hash_IntManDeref108,4002
static inline int Hash_IntManEntryNum( Hash_IntMan_t * p )Hash_IntManEntryNum115,4157
static inline void Hash_IntManProfile( Hash_IntMan_t * p )Hash_IntManProfile119,4260
static inline int Hash_Int2ManHash( int iData0, int iData1, int nTableSize )Hash_Int2ManHash144,4851
static inline int * Hash_Int2ManLookup( Hash_IntMan_t * p, int iData0, int iData1 )Hash_Int2ManLookup148,5019
static inline int Hash_Int2ManInsert( Hash_IntMan_t * p, int iData0, int iData1, int iData2 )Hash_Int2ManInsert158,5446
static inline int Hsh_Int3ManHash( int iData0, int iData1, int iData2, int nTableSize )Hsh_Int3ManHash198,6608
static inline int * Hsh_Int3ManLookup( Hash_IntMan_t * p, int iData0, int iData1, int iData2 )Hsh_Int3ManLookup202,6813
static inline int Hsh_Int3ManInsert( Hash_IntMan_t * p, int iData0, int iData1, int iData2 )Hsh_Int3ManInsert212,7284
static inline void Hash_IntManHashArrayTest()Hash_IntManHashArrayTest252,8452

src/misc/vec/vecAtt.h,2414
#define ABC__misc__vec__vecAtt_hABC__misc__vec__vecAtt_h22,547
    VEC_ATTR_NONE = 0,     // 0VEC_ATTR_NONE40,1109
    VEC_ATTR_COPY,         // 1VEC_ATTR_COPY41,1141
    VEC_ATTR_LOCAL_AIG,    // 2VEC_ATTR_LOCAL_AIG42,1173
    VEC_ATTR_LOCAL_SOP,    // 3VEC_ATTR_LOCAL_SOP43,1205
    VEC_ATTR_LOCAL_BDD,    // 4VEC_ATTR_LOCAL_BDD44,1237
    VEC_ATTR_GLOBAL_AIG,   // 5VEC_ATTR_GLOBAL_AIG45,1269
    VEC_ATTR_GLOBAL_SOP,   // 6VEC_ATTR_GLOBAL_SOP46,1301
    VEC_ATTR_GLOBAL_BDD,   // 7VEC_ATTR_GLOBAL_BDD47,1333
    VEC_ATTR_LEVEL,        // 8VEC_ATTR_LEVEL48,1365
    VEC_ATTR_LEVEL_REV,    // 9VEC_ATTR_LEVEL_REV49,1397
    VEC_ATTR_RETIME_LAG,   // 10VEC_ATTR_RETIME_LAG50,1429
    VEC_ATTR_FRAIG,        // 11VEC_ATTR_FRAIG51,1462
    VEC_ATTR_MVVAR,        // 12VEC_ATTR_MVVAR52,1495
    VEC_ATTR_DATA1,        // 13VEC_ATTR_DATA153,1528
    VEC_ATTR_DATA2,        // 14VEC_ATTR_DATA254,1561
    VEC_ATTR_TOTAL_NUM     // 15VEC_ATTR_TOTAL_NUM55,1594
} Vec_AttrType_t;Vec_AttrType_t56,1627
typedef struct Vec_Att_t_  Vec_Att_t;Vec_Att_t62,1866
struct Vec_Att_t_ Vec_Att_t_63,1904
    int              nCap;                 // the size of array allocatednCap66,1955
    void **          pArrayPtr;            // the pointer attribute arraypArrayPtr69,2135
    void *           pMan;                 // the manager for this attributepMan71,2240
    void (*pFuncFreeMan) (void *);         // the procedure to free the managerpFuncFreeMan72,2317
    void*(*pFuncStartObj)(void *);         // the procedure to start one attributepFuncStartObj73,2397
    void (*pFuncFreeObj) (void *, void *); // the procedure to free one attributepFuncFreeObj74,2480
static inline Vec_Att_t * Vec_AttAlloc( Vec_AttAlloc96,3283
static inline void * Vec_AttFree( Vec_Att_t * p, int fFreeMan )Vec_AttFree126,4120
static inline void Vec_AttClear( Vec_Att_t * p )Vec_AttClear159,4931
static inline void Vec_AttFreeEntry( Vec_Att_t * p, int i )Vec_AttFreeEntry184,5600
static inline void Vec_AttGrow( Vec_Att_t * p, int nCapMin )Vec_AttGrow207,6154
static inline void Vec_AttWriteEntry( Vec_Att_t * p, int i, void * pEntry )Vec_AttWriteEntry227,6748
static inline void * Vec_AttEntry( Vec_Att_t * p, int i )Vec_AttEntry247,7270
static inline void * Vec_AttMan( Vec_Att_t * p )Vec_AttMan268,7842
static inline void ** Vec_AttArray( Vec_Att_t * p )Vec_AttArray284,8182

src/misc/vec/vecInt.h,12523
#define ABC__misc__vec__vecInt_hABC__misc__vec__vecInt_h22,540
typedef struct Vec_Int_t_       Vec_Int_t;Vec_Int_t42,1284
struct Vec_Int_t_ Vec_Int_t_43,1327
    int              nCap;nCap45,1348
    int              nSize;nSize46,1375
    int *            pArray;pArray47,1403
#define Vec_IntForEachEntry(Vec_IntForEachEntry54,1656
#define Vec_IntForEachEntryStart(Vec_IntForEachEntryStart56,1840
#define Vec_IntForEachEntryStop(Vec_IntForEachEntryStop58,2028
#define Vec_IntForEachEntryStartStop(Vec_IntForEachEntryStartStop60,2199
#define Vec_IntForEachEntryReverse(Vec_IntForEachEntryReverse62,2374
#define Vec_IntForEachEntryTwo(Vec_IntForEachEntryTwo64,2564
#define Vec_IntForEachEntryTwoStart(Vec_IntForEachEntryTwoStart66,2795
#define Vec_IntForEachEntryDouble(Vec_IntForEachEntryDouble68,3030
#define Vec_IntForEachEntryDoubleStart(Vec_IntForEachEntryDoubleStart70,3265
#define Vec_IntForEachEntryTriple(Vec_IntForEachEntryTriple72,3504
#define Vec_IntForEachEntryThisNext(Vec_IntForEachEntryThisNext74,3784
#define Vec_IntForEachEntryInVec(Vec_IntForEachEntryInVec76,4059
static inline Vec_Int_t * Vec_IntAlloc( int nCap )Vec_IntAlloc94,4762
static inline Vec_Int_t * Vec_IntAllocExact( int nCap )Vec_IntAllocExact105,5037
static inline Vec_Int_t * Vec_IntStart( int nSize )Vec_IntStart127,5578
static inline Vec_Int_t * Vec_IntStartFull( int nSize )Vec_IntStartFull135,5794
static inline Vec_Int_t * Vec_IntStartRange( int First, int Range )Vec_IntStartRange143,6017
static inline Vec_Int_t * Vec_IntStartNatural( int nSize )Vec_IntStartNatural165,6542
static inline Vec_Int_t * Vec_IntAllocArray( int * pArray, int nSize )Vec_IntAllocArray187,7056
static inline Vec_Int_t * Vec_IntAllocArrayCopy( int * pArray, int nSize )Vec_IntAllocArrayCopy208,7563
static inline Vec_Int_t * Vec_IntDup( Vec_Int_t * pVec )Vec_IntDup230,8123
static inline Vec_Int_t * Vec_IntDupArray( Vec_Int_t * pVec )Vec_IntDupArray252,8718
static inline void Vec_IntZero( Vec_Int_t * p )Vec_IntZero276,9243
static inline void Vec_IntErase( Vec_Int_t * p )Vec_IntErase282,9352
static inline void Vec_IntFree( Vec_Int_t * p )Vec_IntFree288,9467
static inline void Vec_IntFreeP( Vec_Int_t ** p )Vec_IntFreeP305,9800
static inline int * Vec_IntReleaseArray( Vec_Int_t * p )Vec_IntReleaseArray324,10179
static inline int * Vec_IntReleaseNewArray( Vec_Int_t * p )Vec_IntReleaseNewArray332,10346
static inline int * Vec_IntArray( Vec_Int_t * p )Vec_IntArray351,10806
static inline int ** Vec_IntArrayP( Vec_Int_t * p )Vec_IntArrayP355,10882
static inline int * Vec_IntLimit( Vec_Int_t * p )Vec_IntLimit359,10961
static inline int Vec_IntSize( Vec_Int_t * p )Vec_IntSize375,11283
static inline int Vec_IntCap( Vec_Int_t * p )Vec_IntCap391,11590
static inline double Vec_IntMemory( Vec_Int_t * p )Vec_IntMemory407,11895
static inline int Vec_IntEntry( Vec_Int_t * p, int i )Vec_IntEntry423,12266
static inline int * Vec_IntEntryP( Vec_Int_t * p, int i )Vec_IntEntryP440,12623
static inline void Vec_IntWriteEntry( Vec_Int_t * p, int i, int Entry )Vec_IntWriteEntry457,12984
static inline int Vec_IntAddToEntry( Vec_Int_t * p, int i, int Addition )Vec_IntAddToEntry474,13359
static inline void Vec_IntUpdateEntry( Vec_Int_t * p, int i, int Value )Vec_IntUpdateEntry491,13747
static inline void Vec_IntDowndateEntry( Vec_Int_t * p, int i, int Value )Vec_IntDowndateEntry496,13906
static inline int Vec_IntEntryLast( Vec_Int_t * p )Vec_IntEntryLast513,14302
static inline void Vec_IntGrow( Vec_Int_t * p, int nCapMin )Vec_IntGrow530,14696
static inline void Vec_IntGrowResize( Vec_Int_t * p, int nCapMin )Vec_IntGrowResize550,15190
static inline void Vec_IntFill( Vec_Int_t * p, int nSize, int Fill )Vec_IntFill571,15720
static inline void Vec_IntFillTwo( Vec_Int_t * p, int nSize, int FillEven, int FillOdd )Vec_IntFillTwo579,15918
static inline void Vec_IntFillNatural( Vec_Int_t * p, int nSize )Vec_IntFillNatural587,16160
static inline void Vec_IntFillExtra( Vec_Int_t * p, int nSize, int Fill )Vec_IntFillExtra607,16633
static inline int Vec_IntGetEntry( Vec_Int_t * p, int i )Vec_IntGetEntry632,17275
static inline int Vec_IntGetEntryFull( Vec_Int_t * p, int i )Vec_IntGetEntryFull637,17407
static inline int * Vec_IntGetEntryP( Vec_Int_t * p, int i )Vec_IntGetEntryP654,17825
static inline void Vec_IntSetEntry( Vec_Int_t * p, int i, int Entry )Vec_IntSetEntry671,18247
static inline void Vec_IntSetEntryFull( Vec_Int_t * p, int i, int Entry )Vec_IntSetEntryFull676,18396
static inline void Vec_IntShrink( Vec_Int_t * p, int nSizeNew )Vec_IntShrink693,18785
static inline void Vec_IntClear( Vec_Int_t * p )Vec_IntClear710,19149
static inline void Vec_IntPush( Vec_Int_t * p, int Entry )Vec_IntPush726,19455
static inline void Vec_IntPushTwo( Vec_Int_t * p, int Entry1, int Entry2 )Vec_IntPushTwo737,19714
static inline void Vec_IntPushThree( Vec_Int_t * p, int Entry1, int Entry2, int Entry3 )Vec_IntPushThree742,19853
static inline void Vec_IntPushFour( Vec_Int_t * p, int Entry1, int Entry2, int Entry3, int Entry4 )Vec_IntPushFour748,20036
static inline void Vec_IntPushArray( Vec_Int_t * p, int * pEntries, int nEntries )Vec_IntPushArray755,20260
static inline void Vec_IntPushFirst( Vec_Int_t * p, int Entry )Vec_IntPushFirst773,20669
static inline void Vec_IntPushOrder( Vec_Int_t * p, int Entry )Vec_IntPushOrder800,21323
static inline void Vec_IntPushOrderCost( Vec_Int_t * p, int Entry, Vec_Int_t * vCost )Vec_IntPushOrderCost818,21758
static inline void Vec_IntPushOrderReverse( Vec_Int_t * p, int Entry )Vec_IntPushOrderReverse848,22549
static inline int Vec_IntPushUniqueOrder( Vec_Int_t * p, int Entry )Vec_IntPushUniqueOrder878,23282
static inline int Vec_IntPushUniqueOrderCost( Vec_Int_t * p, int Entry, Vec_Int_t * vCost )Vec_IntPushUniqueOrderCost887,23510
static inline int Vec_IntPushUnique( Vec_Int_t * p, int Entry )Vec_IntPushUnique908,24007
static inline unsigned * Vec_IntFetch( Vec_Int_t * p, int nWords )Vec_IntFetch929,24521
static inline int Vec_IntPop( Vec_Int_t * p )Vec_IntPop954,25135
static inline int Vec_IntFind( Vec_Int_t * p, int Entry )Vec_IntFind971,25493
static inline int Vec_IntRemove( Vec_Int_t * p, int Entry )Vec_IntRemove991,25912
static inline int Vec_IntRemove1( Vec_Int_t * p, int Entry )Vec_IntRemove11005,26255
static inline void Vec_IntDrop( Vec_Int_t * p, int i )Vec_IntDrop1031,26834
static inline void Vec_IntInsert( Vec_Int_t * p, int iHere, int Entry )Vec_IntInsert1051,27330
static inline int Vec_IntFindMax( Vec_Int_t * p )Vec_IntFindMax1072,27845
static inline int Vec_IntFindMin( Vec_Int_t * p )Vec_IntFindMin1095,28352
static inline void Vec_IntReverseOrder( Vec_Int_t * p )Vec_IntReverseOrder1118,28878
static inline void Vec_IntRemoveOdd( Vec_Int_t * p )Vec_IntRemoveOdd1140,29378
static inline void Vec_IntRemoveEven( Vec_Int_t * p )Vec_IntRemoveEven1148,29577
static inline Vec_Int_t * Vec_IntInvert( Vec_Int_t * p, int Fill ) Vec_IntInvert1168,30014
static inline Vec_Int_t * Vec_IntCondense( Vec_Int_t * p, int Fill ) Vec_IntCondense1192,30621
static inline int Vec_IntSum( Vec_Int_t * p ) Vec_IntSum1213,31128
static inline int Vec_IntCountEntry( Vec_Int_t * p, int Entry ) Vec_IntCountEntry1232,31528
static inline int Vec_IntCountLarger( Vec_Int_t * p, int Entry ) Vec_IntCountLarger1239,31722
static inline int Vec_IntCountSmaller( Vec_Int_t * p, int Entry ) Vec_IntCountSmaller1246,31916
static inline int Vec_IntCountPositive( Vec_Int_t * p ) Vec_IntCountPositive1265,32346
static inline int Vec_IntCountZero( Vec_Int_t * p ) Vec_IntCountZero1272,32527
static inline int Vec_IntAddPositive( Vec_Int_t * p ) Vec_IntAddPositive1291,32940
static inline int Vec_IntEqual( Vec_Int_t * p1, Vec_Int_t * p2 ) Vec_IntEqual1311,33416
static inline int Vec_IntCountCommon( Vec_Int_t * p1, Vec_Int_t * p2 ) Vec_IntCountCommon1334,34061
static int Vec_IntSortCompare1( int * pp1, int * pp2 )Vec_IntSortCompare11361,34852
static int Vec_IntSortCompare2( int * pp1, int * pp2 )Vec_IntSortCompare21382,35381
static inline void Vec_IntSort( Vec_Int_t * p, int fReverse )Vec_IntSort1403,35915
static inline void Vec_IntSortMulti( Vec_Int_t * p, int nMulti, int fReverse )Vec_IntSortMulti1412,36297
static inline int Vec_IntIsSorted( Vec_Int_t * p, int fReverse )Vec_IntIsSorted1422,36772
static inline int Vec_IntUniqify( Vec_Int_t * p )Vec_IntUniqify1442,37338
static inline int Vec_IntCountDuplicates( Vec_Int_t * p )Vec_IntCountDuplicates1455,37681
static inline int Vec_IntCheckUniqueSmall( Vec_Int_t * p )Vec_IntCheckUniqueSmall1464,37926
static inline int Vec_IntCountUnique( Vec_Int_t * p )Vec_IntCountUnique1473,38171
static inline int Vec_IntUniqifyPairs( Vec_Int_t * p )Vec_IntUniqifyPairs1495,38774
static inline unsigned Vec_IntUniqueHashKeyDebug( unsigned char * pStr, int nChars, int TableMask )Vec_IntUniqueHashKeyDebug1525,39581
static inline void Vec_IntUniqueProfile( Vec_Int_t * vData, int * pTable, int * pNexts, int TableMask, int nIntSize )Vec_IntUniqueProfile1540,40076
static inline unsigned Vec_IntUniqueHashKey2( unsigned char * pStr, int nChars )Vec_IntUniqueHashKey21560,40797
static inline unsigned Vec_IntUniqueHashKey( unsigned char * pStr, int nChars )Vec_IntUniqueHashKey1569,41098
static inline int * Vec_IntUniqueLookup( Vec_Int_t * vData, int i, int nIntSize, int * pNexts, int * pStart )Vec_IntUniqueLookup1587,41912
static inline int Vec_IntUniqueCount( Vec_Int_t * vData, int nIntSize, Vec_Int_t ** pvMap )Vec_IntUniqueCount1595,42285
static inline Vec_Int_t * Vec_IntUniqifyHash( Vec_Int_t * vData, int nIntSize )Vec_IntUniqifyHash1622,43337
static inline int Vec_IntSortCompareUnsigned( unsigned * pp1, unsigned * pp2 )Vec_IntSortCompareUnsigned1649,44146
static inline void Vec_IntSortUnsigned( Vec_Int_t * p )Vec_IntSortUnsigned1669,44604
static inline int Vec_IntTwoCountCommon( Vec_Int_t * vArr1, Vec_Int_t * vArr2 )Vec_IntTwoCountCommon1686,45138
static inline int Vec_IntTwoFindCommon( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vArr )Vec_IntTwoFindCommon1716,45966
static inline int Vec_IntTwoFindCommonReverse( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vArr )Vec_IntTwoFindCommonReverse1734,46525
static inline int Vec_IntTwoRemoveCommon( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vArr )Vec_IntTwoRemoveCommon1764,47421
static inline int Vec_IntTwoRemove( Vec_Int_t * vArr1, Vec_Int_t * vArr2 )Vec_IntTwoRemove1802,48660
static inline void Vec_IntTwoMerge2Int( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vArr )Vec_IntTwoMerge2Int1835,49649
static inline Vec_Int_t * Vec_IntTwoMerge( Vec_Int_t * vArr1, Vec_Int_t * vArr2 )Vec_IntTwoMerge1860,50466
static inline void Vec_IntTwoMerge2( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vArr )Vec_IntTwoMerge21866,50685
static inline void Vec_IntTwoSplit( Vec_Int_t * vArr1, Vec_Int_t * vArr2, Vec_Int_t * vArr, Vec_Int_t * vArr1n, Vec_Int_t * vArr2n )Vec_IntTwoSplit1883,51242
static inline void Vec_IntSelectSort( int * pArray, int nSize )Vec_IntSelectSort1916,52196
static inline void Vec_IntSelectSortReverse( int * pArray, int nSize )Vec_IntSelectSortReverse1930,52569
static inline void Vec_IntSelectSortCost( int * pArray, int nSize, Vec_Int_t * vCosts )Vec_IntSelectSortCost1956,53184
static inline void Vec_IntSelectSortCostReverse( int * pArray, int nSize, Vec_Int_t * vCosts )Vec_IntSelectSortCostReverse1968,53576
static inline void Vec_IntSelectSortCost2( int * pArray, int nSize, int * pCosts )Vec_IntSelectSortCost21981,53976
static inline void Vec_IntSelectSortCost2Reverse( int * pArray, int nSize, int * pCosts )Vec_IntSelectSortCost2Reverse1994,54371
static inline void Vec_IntPrint( Vec_Int_t * vVec )Vec_IntPrint2019,55008
static inline void Vec_IntPrintBinary( Vec_Int_t * vVec )Vec_IntPrintBinary2027,55239
static inline int Vec_IntCompareVec( Vec_Int_t * p1, Vec_Int_t * p2 )Vec_IntCompareVec2045,55639
static inline void Vec_IntAppend( Vec_Int_t * vVec1, Vec_Int_t * vVec2 )Vec_IntAppend2065,56260
static inline void Vec_IntAppendSkip( Vec_Int_t * vVec1, Vec_Int_t * vVec2, int iVar )Vec_IntAppendSkip2071,56435
static inline void Vec_IntAppendMinus( Vec_Int_t * vVec1, Vec_Int_t * vVec2, int fMinus )Vec_IntAppendMinus2078,56653
static inline void Vec_IntRemapArray( Vec_Int_t * vOld2New, Vec_Int_t * vOld, Vec_Int_t * vNew, int nNew )Vec_IntRemapArray2097,57176

src/misc/nm/nmInt.h,1296
#define ABC__misc__nm__nmInt_hABC__misc__nm__nmInt_h22,525
typedef struct Nm_Entry_t_ Nm_Entry_t;Nm_Entry_t46,1322
struct Nm_Entry_t_Nm_Entry_t_47,1361
    unsigned         Type;          // object typeType49,1382
    unsigned         ObjId;         // object IDObjId50,1433
    Nm_Entry_t *     pNextI2N;      // the next entry in the ID hash tablepNextI2N51,1482
    Nm_Entry_t *     pNextN2I;      // the next entry in the name hash tablepNextN2I52,1557
    Nm_Entry_t *     pNameSake;     // the next entry with the same namepNameSake53,1634
    char             Name[0];       // name of the objectName54,1707
struct Nm_Man_t_Nm_Man_t_57,1769
    Nm_Entry_t **    pBinsI2N;      // mapping IDs into namespBinsI2N59,1788
    Nm_Entry_t **    pBinsN2I;      // mapping names into IDs pBinsN2I60,1850
    int              nBins;         // the number of bins in tablesnBins61,1913
    int              nEntries;      // the number of entriesnEntries62,1981
    int              nSizeFactor;   // determined how much larger the table should benSizeFactor63,2042
    int              nGrowthFactor; // determined how much the table grows after resizingnGrowthFactor64,2128
    Extra_MmFlex_t * pMem;          // memory manager for entries (and names)pMem65,2218

src/misc/nm/nmApi.c,826
Nm_Man_t * Nm_ManCreate( int nSize )Nm_ManCreate45,1244
void Nm_ManFree( Nm_Man_t * p )Nm_ManFree76,2255
int Nm_ManNumEntries( Nm_Man_t * p )Nm_ManNumEntries95,2677
char * Nm_ManStoreIdName( Nm_Man_t * p, int ObjId, int Type, char * pName, char * pSuffix )Nm_ManStoreIdName112,3102
void Nm_ManDeleteIdName( Nm_Man_t * p, int ObjId )Nm_ManDeleteIdName149,4551
char * Nm_ManCreateUniqueName( Nm_Man_t * p, int ObjId )Nm_ManCreateUniqueName175,5258
char * Nm_ManFindNameById( Nm_Man_t * p, int ObjId )Nm_ManFindNameById199,5916
int Nm_ManFindIdByName( Nm_Man_t * p, char * pName, int Type )Nm_ManFindIdByName219,6505
int Nm_ManFindIdByNameTwoTypes( Nm_Man_t * p, char * pName, int Type1, int Type2 )Nm_ManFindIdByNameTwoTypes239,7111
Vec_Int_t * Nm_ManReturnNameIds( Nm_Man_t * p )Nm_ManReturnNameIds261,7686

src/misc/nm/nmTable.c,626
static unsigned Nm_HashNumber( int Num, int TableSize ) Nm_HashNumber31,798
static unsigned Nm_HashString( char * pName, int TableSize ) Nm_HashString42,1091
int Nm_ManTableAdd( Nm_Man_t * p, Nm_Entry_t * pEntry )Nm_ManTableAdd71,1947
int Nm_ManTableDelete( Nm_Man_t * p, int ObjId )Nm_ManTableDelete112,3272
Nm_Entry_t * Nm_ManTableLookupId( Nm_Man_t * p, int ObjId )Nm_ManTableLookupId171,5150
Nm_Entry_t * Nm_ManTableLookupName( Nm_Man_t * p, char * pName, int Type )Nm_ManTableLookupName191,5704
void Nm_ManProfile( Nm_Man_t * p )Nm_ManProfile221,6718
void Nm_ManResize( Nm_Man_t * p )Nm_ManResize256,7557

src/misc/nm/nm.h,107
#define ABC__misc__nm__nm_hABC__misc__nm__nm_h22,523
typedef struct Nm_Man_t_ Nm_Man_t;Nm_Man_t63,2232

src/misc/bar/bar.h,336
#define ABC__aig__bar__bar_hABC__aig__bar__bar_h22,519
#define inline inline26,564
#define BAR_PROGRESS_USE BAR_PROGRESS_USE42,1096
typedef struct Bar_Progress_t_ Bar_Progress_t;Bar_Progress_t48,1347
static inline void       Bar_ProgressUpdate( Bar_Progress_t * p, int nItemsCur, char * pString ) {  Bar_ProgressUpdate63,2153

src/misc/bar/bar.c,909
struct Bar_Progress_t_Bar_Progress_t_36,858
    int              nItemsNext;   // the number of items for the next update of the progress barnItemsNext38,883
    int              nItemsTotal;  // the total number of itemsnItemsTotal39,981
    int              posTotal;     // the total number of positionsposTotal40,1045
    int              posCur;       // the current positionposCur41,1113
    FILE *           pFile;        // the output stream pFile42,1172
Bar_Progress_t * Bar_ProgressStart( FILE * pFile, int nItemsTotal )Bar_ProgressStart66,2097
void Bar_ProgressUpdate_int( Bar_Progress_t * p, int nItemsCur, char * pString )Bar_ProgressUpdate_int96,2936
void Bar_ProgressStop( Bar_Progress_t * p )Bar_ProgressStop126,3629
void Bar_ProgressShow( Bar_Progress_t * p, char * pString )Bar_ProgressShow144,4030
void Bar_ProgressClean( Bar_Progress_t * p )Bar_ProgressClean174,4825

src/misc/zlib/trees.h,416
local const ct_data static_ltree[L_CODES+2] = {static_ltree5,83
local const ct_data static_dtree[D_CODES] = {static_dtree66,4454
const uch ZLIB_INTERNAL _dist_code[DIST_CODE_LEN] = {_dist_code75,4893
const uch ZLIB_INTERNAL _length_code[MAX_MATCH-MIN_MATCH+1]= {_length_code104,6998
local const int base_length[LENGTH_CODES] = {base_length120,8088
local const int base_dist[D_CODES] = {base_dist125,8248

src/misc/zlib/inftrees.h,481
    unsigned char op;           /* operation, extra bits, table bits */op27,1267
    unsigned char bits;         /* bits in this part of the code */bits28,1339
    unsigned short val;         /* offset in table or code value */val29,1407
} code;code30,1475
#define ENOUGH_LENS ENOUGH_LENS51,2535
#define ENOUGH_DISTS ENOUGH_DISTS52,2559
#define ENOUGH ENOUGH53,2584
    CODES,CODES57,2690
    LENS,LENS58,2701
    DISTSDISTS59,2711
} codetype;codetype60,2721

src/misc/zlib/inffast.c,191
#  define OFF OFF32,707
#  define PUP(PUP33,723
void ZLIB_INTERNAL inflate_fast(z_streamp strm, unsigned start)  /* inflate()'s starting value for strm->avail_out */inflate_fast74,2249

src/misc/zlib/inffast.h,0

src/misc/zlib/gzread.c,845
local int gz_load(gz_statep state, unsigned char *buf, unsigned len, unsigned *have)gz_load28,970
local int gz_avail(gz_statep state)gz_avail53,1754
#define NEXT(NEXT69,2145
local int gz_next4(gz_statep state, unsigned long *ret)gz_next475,2468
local int gz_head(gz_statep state)gz_head104,3689
local int gz_decomp(gz_statep state)gz_decomp232,8283
local int gz_make(gz_statep state)gz_make302,10936
local int gz_skip(gz_statep state, z_off64_t len)gz_skip327,11741
int ZEXPORT gzread(gzFile file, voidp buf, unsigned len)gzread357,12630
int ZEXPORT gzgetc(gzFile file)gzgetc445,15387
int ZEXPORT gzungetc(int c, gzFile file)gzungetc473,16025
char * ZEXPORT gzgets(gzFile file, char *buf, int len)gzgets528,17464
int ZEXPORT gzdirect(gzFile file)gzdirect589,19395
int ZEXPORT gzclose_r(gzFile file)gzclose_r612,19977

src/misc/zlib/gzclose.c,48
int ZEXPORT gzclose(gzFile file)gzclose18,512

src/misc/zlib/zutil.h,2589
#define ZUTIL_HZUTIL_H14,429
#  define ZLIB_INTERNAL ZLIB_INTERNAL17,515
#  define ZLIB_INTERNALZLIB_INTERNAL19,584
#  define local local35,824
typedef unsigned char  uch;uch39,925
typedef uch FAR uchf;uchf40,953
typedef unsigned short ush;ush41,975
typedef ush FAR ushf;ushf42,1003
typedef unsigned long  ulg;ulg43,1025
#define ERR_MSG(ERR_MSG48,1184
#define ERR_RETURN(ERR_RETURN50,1234
#  define DEF_WBITS DEF_WBITS57,1424
#  define DEF_MEM_LEVEL DEF_MEM_LEVEL62,1563
#  define DEF_MEM_LEVEL DEF_MEM_LEVEL64,1595
#define STORED_BLOCK STORED_BLOCK68,1665
#define STATIC_TREES STATIC_TREES69,1688
#define DYN_TREES DYN_TREES70,1711
#define MIN_MATCH MIN_MATCH73,1771
#define MAX_MATCH MAX_MATCH74,1792
#define PRESET_DICT PRESET_DICT77,1860
#  define OS_CODE OS_CODE82,2025
#  define OS_CODE OS_CODE101,2564
#  define OS_CODE OS_CODE105,2630
#  define F_OPEN(F_OPEN106,2654
#  define OS_CODE OS_CODE111,2802
#  define OS_CODE OS_CODE115,2845
#  define OS_CODE OS_CODE124,3022
#  define OS_CODE OS_CODE137,3336
#    define OS_CODE OS_CODE142,3435
#  define OS_CODE OS_CODE147,3515
#  define fdopen(fdopen151,3586
#    define fdopen(fdopen156,3735
       typedef int ptrdiff_t;ptrdiff_t158,3817
#      define _PTRDIFF_T_DEFINED_PTRDIFF_T_DEFINED159,3847
#  define OS_CODE OS_CODE181,4385
#  define F_OPEN(F_OPEN185,4451
#    define HAVE_VSNPRINTFHAVE_VSNPRINTF192,4629
#    define HAVE_VSNPRINTFHAVE_VSNPRINTF197,4721
#    define NO_vsnprintfNO_vsnprintf204,4915
#    define NO_vsnprintfNO_vsnprintf207,4969
#         define vsnprintf vsnprintf213,5219
#    define NO_vsnprintfNO_vsnprintf218,5306
#  define NO_vsnprintfNO_vsnprintf222,5358
#  define NO_MEMCPYNO_MEMCPY226,5406
#  define NO_MEMCPYNO_MEMCPY233,5682
#  define HAVE_MEMCPYHAVE_MEMCPY236,5775
#    define zmemcpy zmemcpy240,5879
#    define zmemcmp zmemcmp241,5908
#    define zmemzero(zmemzero242,5937
#    define zmemcpy zmemcpy244,6008
#    define zmemcmp zmemcmp245,6035
#    define zmemzero(zmemzero246,6062
#  define Assert(Assert261,6572
#  define Trace(Trace262,6627
#  define Tracev(Tracev263,6678
#  define Tracevv(Tracevv264,6729
#  define Tracec(Tracec265,6781
#  define Tracecv(Tracecv266,6841
#  define Assert(Assert268,6908
#  define Trace(Trace269,6935
#  define Tracev(Tracev270,6954
#  define Tracevv(Tracevv271,6974
#  define Tracec(Tracec272,6995
#  define Tracecv(Tracecv273,7017
#define ZALLOC(ZALLOC281,7215
#define ZFREE(ZFREE283,7315
#define TRY_FREE(TRY_FREE284,7393

src/misc/zlib/zutil.c,1723
struct internal_state      {int dummy;}; /* for buggy compilers */internal_state20,388
struct internal_state      {int dummy;}; /* for buggy compilers */dummy20,388
const char * const z_errmsg[10] = {z_errmsg23,463
const char * ZEXPORT zlibVersion()zlibVersion36,956
uLong ZEXPORT zlibCompileFlags()zlibCompileFlags41,1021
#    define verbose verbose127,2796
int ZLIB_INTERNAL z_verbose = verbose;z_verbose129,2827
void ZLIB_INTERNAL z_error (m)z_error131,2867
const char * ZEXPORT zError(int err)zError142,3063
    int errno = 0;errno152,3353
void ZLIB_INTERNAL zmemcpy(Bytef* dest, const Bytef* source, uInt  len)zmemcpy157,3401
int ZLIB_INTERNAL zmemcmp(const Bytef* s1, const Bytef* s2, uInt  len)zmemcmp165,3593
void ZLIB_INTERNAL zmemzero(Bytef* dest, uInt  len)zmemzero175,3790
#  define MY_ZCALLOCMY_ZCALLOC190,4028
#define MAX_PTR MAX_PTR198,4311
local int next_ptr = 0;next_ptr201,4351
typedef struct ptr_table_s {ptr_table_s203,4376
    voidpf org_ptr;org_ptr204,4405
    voidpf new_ptr;new_ptr205,4425
} ptr_table;ptr_table206,4445
local ptr_table table[MAX_PTR];table208,4459
voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, unsigned items, unsigned size)zcalloc216,4834
void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)zcfree240,5585
#  define MY_ZCALLOCMY_ZCALLOC268,6193
#  define _halloc _halloc271,6261
#  define _hfree _hfree272,6287
voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, uInt items, uInt size)zcalloc275,6320
void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)zcfree281,6489
voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, unsigned items, unsigned size)zcalloc300,6884
void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)zcfree307,7149

src/misc/zlib/infback.c,747
int ZEXPORT inflateBackInit_(z_streamp strm, int windowBits, unsigned char FAR *window, const char *version, int stream_size)inflateBackInit_35,1023
local void fixedtables(struct inflate_state FAR *state)fixedtables75,2728
#define LOAD(LOAD120,3977
#define RESTORE(RESTORE131,4263
#define INITBITS(INITBITS142,4540
#define PULL(PULL150,4757
#define PULLBYTE(PULLBYTE164,5163
#define NEEDBITS(NEEDBITS175,5493
#define BITS(BITS182,5668
#define DROPBITS(DROPBITS186,5773
#define BYTEBITS(BYTEBITS193,5947
#define ROOM(ROOM202,6216
int ZEXPORT inflateBack(z_streamp strm, in_func in, void FAR *in_desc, out_func out, void FAR *out_desc)inflateBack242,8097
int ZEXPORT inflateBackEnd(z_streamp strm)inflateBackEnd619,22376

src/misc/zlib/uncompr.c,154
#define ZLIB_INTERNALZLIB_INTERNAL13,284
int ZEXPORT uncompress (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)uncompress31,1153

src/misc/zlib/inflate.h,5547
#  define GUNZIPGUNZIP18,660
    HEAD,       /* i: waiting for magic header */HEAD23,753
    FLAGS,      /* i: waiting for method and flags (gzip) */FLAGS24,803
    TIME,       /* i: waiting for modification time (gzip) */TIME25,864
    OS,         /* i: waiting for extra flags and operating system (gzip) */OS26,926
    EXLEN,      /* i: waiting for extra length (gzip) */EXLEN27,1003
    EXTRA,      /* i: waiting for extra bytes (gzip) */EXTRA28,1060
    NAME,       /* i: waiting for end of file name (gzip) */NAME29,1116
    COMMENT,    /* i: waiting for end of comment (gzip) */COMMENT30,1177
    HCRC,       /* i: waiting for header crc (gzip) */HCRC31,1236
    DICTID,     /* i: waiting for dictionary check value */DICTID32,1291
    DICT,       /* waiting for inflateSetDictionary() call */DICT33,1351
        TYPE,       /* i: waiting for type bits, including last-flag bit */TYPE34,1413
        TYPEDO,     /* i: same, but skip check to exit inflate on new block */TYPEDO35,1489
        STORED,     /* i: waiting for stored size (length and complement) */STORED36,1568
        COPY_,      /* i/o: same as COPY below, but only first time in */COPY_37,1645
        COPY,       /* i/o: waiting for input or output to copy stored block */COPY38,1719
        TABLE,      /* i: waiting for dynamic block table lengths */TABLE39,1799
        LENLENS,    /* i: waiting for code length code lengths */LENLENS40,1868
        CODELENS,   /* i: waiting for length/lit and distance code lengths */CODELENS41,1934
            LEN_,       /* i: same as LEN below, but only first time in */LEN_42,2012
            LEN,        /* i: waiting for length/lit/eob code */LEN43,2087
            LENEXT,     /* i: waiting for length extra bits */LENEXT44,2152
            DIST,       /* i: waiting for distance code */DIST45,2215
            DISTEXT,    /* i: waiting for distance extra bits */DISTEXT46,2274
            MATCH,      /* o: waiting for output space to copy string */MATCH47,2339
            LIT,        /* o: waiting for output space to write literal */LIT48,2412
    CHECK,      /* i: waiting for 32-bit check value */CHECK49,2487
    LENGTH,     /* i: waiting for 32-bit length (gzip) */LENGTH50,2543
    DONE,       /* finished check, done -- remain here until reset */DONE51,2601
    BAD,        /* got a data error -- remain here until reset */BAD52,2671
    MEM,        /* got an inflate() memory error -- remain here until reset */MEM53,2737
    SYNC        /* looking for synchronization bytes to restart inflate() */SYNC54,2816
} inflate_mode;inflate_mode55,2893
struct inflate_state {inflate_state83,3807
    inflate_mode mode;          /* current inflate mode */mode84,3830
    int last;                   /* true if processing last block */last85,3889
    int wrap;                   /* bit 0 true for zlib, bit 1 true for gzip */wrap86,3957
    int havedict;               /* true if dictionary provided */havedict87,4036
    int flags;                  /* gzip header method and flags (0 if zlib) */flags88,4102
    unsigned dmax;              /* zlib header max distance (INFLATE_STRICT) */dmax89,4181
    unsigned long check;        /* protected copy of check value */check90,4261
    unsigned long total;        /* protected copy of output count */total91,4329
    gz_headerp head;            /* where to save gzip header information */head92,4398
    unsigned wbits;             /* log base 2 of requested window size */wbits94,4503
    unsigned wsize;             /* window size or zero if not using window */wsize95,4577
    unsigned whave;             /* valid bytes in the window */whave96,4655
    unsigned wnext;             /* window write index */wnext97,4719
    unsigned char FAR *window;  /* allocated sliding window, if needed */window98,4776
    unsigned long hold;         /* input bit accumulator */hold100,4880
    unsigned bits;              /* number of bits in "in" */bits101,4940
    unsigned length;            /* literal or length of data to copy */length103,5051
    unsigned offset;            /* distance back to copy string from */offset104,5123
    unsigned extra;             /* extra bits needed */extra106,5237
    code const FAR *lencode;    /* starting table for length/literal codes */lencode108,5337
    code const FAR *distcode;   /* starting table for distance codes */distcode109,5415
    unsigned lenbits;           /* index bits for lencode */lenbits110,5487
    unsigned distbits;          /* index bits for distcode */distbits111,5548
    unsigned ncode;             /* number of code length code lengths */ncode113,5647
    unsigned nlen;              /* number of length code lengths */nlen114,5720
    unsigned ndist;             /* number of distance code lengths */ndist115,5788
    unsigned have;              /* number of code lengths in lens[] */have116,5858
    code FAR *next;             /* next available space in codes[] */next117,5929
    unsigned short lens[320];   /* temporary storage for code lengths */lens118,5999
    unsigned short work[288];   /* work area for code table building */work119,6072
    code codes[ENOUGH];         /* space for code tables */codes120,6144
    int sane;                   /* if false, allow invalid distance too far */sane121,6204
    int back;                   /* bits back of last unprocessed length/lit */back122,6283
    unsigned was;               /* initial length of match */was123,6362

src/misc/zlib/crc32.h,69
local const unsigned long FAR crc_table[TBLS][256] =crc_table7,118

src/misc/zlib/zconf.h,7087
#define ZCONF_HZCONF_H9,217
#  define _dist_code _dist_code20,625
#  define _length_code _length_code21,670
#  define _tr_align _tr_align22,717
#  define _tr_flush_block _tr_flush_block23,761
#  define _tr_init _tr_init24,811
#  define _tr_stored_block _tr_stored_block25,854
#  define _tr_tally _tr_tally26,905
#  define adler32 adler3227,949
#  define adler32_combine adler32_combine28,991
#  define adler32_combine64 adler32_combine6429,1041
#  define compress compress30,1093
#  define compress2 compress231,1136
#  define compressBound compressBound32,1180
#  define crc32 crc3233,1228
#  define crc32_combine crc32_combine34,1268
#  define crc32_combine64 crc32_combine6435,1316
#  define deflate deflate36,1366
#  define deflateBound deflateBound37,1408
#  define deflateCopy deflateCopy38,1455
#  define deflateEnd deflateEnd39,1501
#  define deflateInit2_ deflateInit2_40,1546
#  define deflateInit_ deflateInit_41,1594
#  define deflateParams deflateParams42,1641
#  define deflatePrime deflatePrime43,1689
#  define deflateReset deflateReset44,1736
#  define deflateSetDictionary deflateSetDictionary45,1783
#  define deflateSetHeader deflateSetHeader46,1838
#  define deflateTune deflateTune47,1889
#  define deflate_copyright deflate_copyright48,1935
#  define get_crc_table get_crc_table49,1987
#  define gz_error gz_error50,2035
#  define gz_intmax gz_intmax51,2078
#  define gz_strwinerror gz_strwinerror52,2122
#  define gzbuffer gzbuffer53,2171
#  define gzclearerr gzclearerr54,2214
#  define gzclose gzclose55,2259
#  define gzclose_r gzclose_r56,2301
#  define gzclose_w gzclose_w57,2345
#  define gzdirect gzdirect58,2389
#  define gzdopen gzdopen59,2432
#  define gzeof gzeof60,2474
#  define gzerror gzerror61,2514
#  define gzflush gzflush62,2556
#  define gzgetc gzgetc63,2598
#  define gzgets gzgets64,2639
#  define gzoffset gzoffset65,2680
#  define gzoffset64 gzoffset6466,2723
#  define gzopen gzopen67,2768
#  define gzopen64 gzopen6468,2809
#  define gzprintf gzprintf69,2852
#  define gzputc gzputc70,2895
#  define gzputs gzputs71,2936
#  define gzread gzread72,2977
#  define gzrewind gzrewind73,3018
#  define gzseek gzseek74,3061
#  define gzseek64 gzseek6475,3102
#  define gzsetparams gzsetparams76,3145
#  define gztell gztell77,3191
#  define gztell64 gztell6478,3232
#  define gzungetc gzungetc79,3275
#  define gzwrite gzwrite80,3318
#  define inflate inflate81,3360
#  define inflateBack inflateBack82,3402
#  define inflateBackEnd inflateBackEnd83,3448
#  define inflateBackInit_ inflateBackInit_84,3497
#  define inflateCopy inflateCopy85,3548
#  define inflateEnd inflateEnd86,3594
#  define inflateGetHeader inflateGetHeader87,3639
#  define inflateInit2_ inflateInit2_88,3690
#  define inflateInit_ inflateInit_89,3738
#  define inflateMark inflateMark90,3785
#  define inflatePrime inflatePrime91,3831
#  define inflateReset inflateReset92,3878
#  define inflateReset2 inflateReset293,3925
#  define inflateSetDictionary inflateSetDictionary94,3973
#  define inflateSync inflateSync95,4028
#  define inflateSyncPoint inflateSyncPoint96,4074
#  define inflateUndermine inflateUndermine97,4125
#  define inflate_copyright inflate_copyright98,4176
#  define inflate_fast inflate_fast99,4228
#  define inflate_table inflate_table100,4275
#  define uncompress uncompress101,4323
#  define zError zError102,4368
#  define zcalloc zcalloc103,4409
#  define zcfree zcfree104,4451
#  define zlibCompileFlags zlibCompileFlags105,4492
#  define zlibVersion zlibVersion106,4543
#  define Byte Byte109,4636
#  define Bytef Bytef110,4675
#  define alloc_func alloc_func111,4715
#  define charf charf112,4760
#  define free_func free_func113,4800
#  define gzFile gzFile114,4844
#  define gz_header gz_header115,4885
#  define gz_headerp gz_headerp116,4929
#  define in_func in_func117,4974
#  define intf intf118,5016
#  define out_func out_func119,5055
#  define uInt uInt120,5098
#  define uIntf uIntf121,5137
#  define uLong uLong122,5177
#  define uLongf uLongf123,5217
#  define voidp voidp124,5258
#  define voidpc voidpc125,5298
#  define voidpf voidpf126,5339
#  define gz_header_s gz_header_s129,5426
#  define internal_state internal_state130,5472
#  define MSDOSMSDOS135,5572
#  define OS2OS2138,5652
#  define WINDOWSWINDOWS141,5716
#    define WIN32WIN32145,5822
#      define SYS16BITSYS16BIT151,6021
#  define MAXSEG_64KMAXSEG_64K161,6232
#  define UNALIGNED_OKUNALIGNED_OK164,6273
#    define STDCSTDC169,6343
#      define STDC99STDC99173,6422
#  define STDCSTDC178,6536
#  define STDCSTDC181,6625
#  define STDCSTDC184,6724
#  define STDCSTDC187,6807
#  define STDCSTDC191,6907
#    define const const196,7017
#  define NO_DUMMY_DECLNO_DUMMY_DECL202,7236
#    define MAX_MEM_LEVEL MAX_MEM_LEVEL208,7359
#    define MAX_MEM_LEVEL MAX_MEM_LEVEL210,7395
#  define MAX_WBITS MAX_WBITS220,7685
#    define OF(OF240,8465
#    define OF(OF242,8500
#    define SMALL_MEDIUMSMALL_MEDIUM255,8959
#      define FAR FAR257,9004
#      define FAR FAR259,9037
#    define SMALL_MEDIUMSMALL_MEDIUM264,9170
#      define FAR FAR266,9219
#      define FAR FAR268,9252
#        define ZEXTERN ZEXTERN280,9604
#        define ZEXTERN ZEXTERN282,9669
#      undef FARFAR292,9989
#    define ZEXPORT ZEXPORT297,10170
#      define ZEXPORTVA ZEXPORTVA299,10214
#      define ZEXPORTVA ZEXPORTVA301,10256
#      define ZEXPORT ZEXPORT309,10384
#      define ZEXPORTVA ZEXPORTVA310,10430
#      define ZEXPORT ZEXPORT312,10486
#      define ZEXPORTVA ZEXPORTVA313,10532
#  define ZEXTERN ZEXTERN319,10622
#  define ZEXPORTZEXPORT322,10670
#  define ZEXPORTVAZEXPORTVA325,10713
#  define FARFAR329,10753
typedef unsigned char  Byte;  /* 8 bits */Byte333,10802
typedef unsigned int   uInt;  /* 16 bits or more */uInt335,10852
typedef unsigned long  uLong; /* 32 bits or more */uLong336,10904
#  define Bytef Bytef340,11052
   typedef Byte  FAR Bytef;Bytef342,11083
typedef char  FAR charf;charf344,11118
typedef int   FAR intf;intf345,11143
typedef uInt  FAR uIntf;uIntf346,11167
typedef uLong FAR uLongf;uLongf347,11192
   typedef void const *voidpc;voidpc350,11231
   typedef void FAR   *voidpf;voidpf351,11262
   typedef void       *voidp;voidp352,11293
   typedef Byte const *voidpc;voidpc354,11329
   typedef Byte FAR   *voidpf;voidpf355,11360
   typedef Byte       *voidp;voidp356,11391
#  define Z_HAVE_UNISTD_HZ_HAVE_UNISTD_H360,11494
#  undef _LARGEFILE64_SOURCE_LARGEFILE64_SOURCE374,11977
#    define z_off_t z_off_t383,12214
#  define SEEK_SET SEEK_SET390,12302
#  define SEEK_CUR SEEK_CUR391,12372
#  define SEEK_END SEEK_END392,12441
#  define z_off_t z_off_t396,12543
#  define z_off64_t z_off64_t400,12629
#  define NO_vsnprintfNO_vsnprintf406,12722
#  define NO_vsnprintfNO_vsnprintf410,12774

src/misc/zlib/inffixed.h,106
    static const code lenfix[512] = {lenfix12,348
    static const code distfix[32] = {distfix89,5935

src/misc/zlib/deflate.h,6513
#define DEFLATE_HDEFLATE_H14,395
#  define GZIPGZIP25,733
#define LENGTH_CODES LENGTH_CODES32,871
#define LITERALS LITERALS35,966
#define L_CODES L_CODES38,1026
#define D_CODES D_CODES41,1139
#define BL_CODES BL_CODES44,1192
#define HEAP_SIZE HEAP_SIZE47,1269
#define MAX_BITS MAX_BITS50,1326
#define INIT_STATE INIT_STATE53,1393
#define EXTRA_STATE EXTRA_STATE54,1418
#define NAME_STATE NAME_STATE55,1443
#define COMMENT_STATE COMMENT_STATE56,1468
#define HCRC_STATE HCRC_STATE57,1493
#define BUSY_STATE BUSY_STATE58,1518
#define FINISH_STATE FINISH_STATE59,1543
typedef struct ct_data_s {ct_data_s64,1658
        ush  freq;       /* frequency count */freq66,1697
        ush  code;       /* bit string */code67,1744
    } fc;fc68,1786
        ush  dad;        /* father node in Huffman tree */dad70,1808
        ush  len;        /* length of bit string */len71,1867
    } dl;dl72,1919
} FAR ct_data;ct_data73,1929
#define Freq Freq75,1945
#define Code Code76,1966
#define Dad Dad77,1987
#define Len Len78,2007
typedef struct static_tree_desc_s  static_tree_desc;static_tree_desc80,2028
typedef struct tree_desc_s {tree_desc_s82,2082
    ct_data *dyn_tree;           /* the dynamic tree */dyn_tree83,2111
    int     max_code;            /* largest code with non zero frequency */max_code84,2167
    static_tree_desc *stat_desc; /* the corresponding static tree */stat_desc85,2243
} FAR tree_desc;tree_desc86,2312
typedef ush Pos;Pos88,2330
typedef Pos FAR Posf;Posf89,2347
typedef unsigned IPos;IPos90,2369
typedef struct internal_state {internal_state96,2553
    z_streamp strm;      /* pointer back to this zlib stream */strm97,2585
    int   status;        /* as the name implies */status98,2649
    Bytef *pending_buf;  /* output still pending */pending_buf99,2700
    ulg   pending_buf_size; /* size of pending_buf */pending_buf_size100,2752
    Bytef *pending_out;  /* next pending byte to output to the stream */pending_out101,2806
    uInt   pending;      /* nb of bytes in the pending buffer */pending102,2879
    int   wrap;          /* bit 0 true for zlib, bit 1 true for gzip */wrap103,2944
    gz_headerp  gzhead;  /* gzip header information to write */gzhead104,3016
    uInt   gzindex;      /* where in extra, name, or comment */gzindex105,3080
    Byte  method;        /* STORED (for zip only) or DEFLATED */method106,3144
    int   last_flush;    /* value of flush param for previous deflate call */last_flush107,3209
    uInt  w_size;        /* LZ77 window size (32K by default) */w_size111,3330
    uInt  w_bits;        /* log2(w_size)  (8..16) */w_bits112,3395
    uInt  w_mask;        /* w_size - 1 */w_mask113,3448
    Bytef *window;window115,3491
    ulg window_size;window_size125,4015
    Posf *prev;prev130,4161
    Posf *head; /* Heads of the hash chains or NIL. */head136,4403
    uInt  ins_h;          /* hash index of string to be inserted */ins_h138,4459
    uInt  hash_size;      /* number of elements in hash table */hash_size139,4527
    uInt  hash_bits;      /* log2(hash_size) */hash_bits140,4592
    uInt  hash_mask;      /* hash_size-1 */hash_mask141,4640
    uInt  hash_shift;hash_shift143,4685
    long block_start;block_start150,4955
    uInt match_length;           /* length of best match */match_length155,5112
    IPos prev_match;             /* previous match */prev_match156,5172
    int match_available;         /* set if previous match exists */match_available157,5226
    uInt strstart;               /* start of string to insert */strstart158,5294
    uInt match_start;            /* start of matching string */match_start159,5359
    uInt lookahead;              /* number of valid bytes ahead in window */lookahead160,5423
    uInt prev_length;prev_length162,5501
    uInt max_chain_length;max_chain_length167,5677
    uInt max_lazy_match;max_lazy_match173,5875
#   define max_insert_length max_insert_length178,6082
    int level;    /* compression level (1..9) */level184,6354
    int strategy; /* favor or force Huffman coding*/strategy185,6403
    uInt good_match;good_match187,6457
    int nice_match; /* Stop searching when current match exceeds this */nice_match190,6553
    struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */dyn_ltree194,6737
    struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */dyn_dtree195,6812
    struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */bl_tree196,6877
    struct tree_desc_s l_desc;               /* desc. for literal tree */l_desc198,6958
    struct tree_desc_s d_desc;               /* desc. for distance tree */d_desc199,7032
    struct tree_desc_s bl_desc;              /* desc. for bit length tree */bl_desc200,7107
    ush bl_count[MAX_BITS+1];bl_count202,7185
    int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */heap205,7281
    int heap_len;               /* number of elements in the heap */heap_len206,7356
    int heap_max;               /* element of largest frequency */heap_max207,7425
    uch depth[2*L_CODES+1];depth212,7635
    uchf *l_buf;          /* buffer for literals or lengths */l_buf216,7750
    uInt  lit_bufsize;lit_bufsize218,7814
    uInt last_lit;      /* running index in l_buf */last_lit238,8967
    ushf *d_buf;d_buf240,9021
    ulg opt_len;        /* bit length of current block with optimal trees */opt_len246,9228
    ulg static_len;     /* bit length of current block with static trees */static_len247,9305
    uInt matches;       /* number of string matches in current block */matches248,9381
    int last_eob_len;   /* bit length of EOB code for last block */last_eob_len249,9453
    ulg compressed_len; /* total bit length of compressed file mod 2^32 */compressed_len252,9535
    ulg bits_sent;      /* bit length of compressed data sent mod 2^32 */bits_sent253,9610
    ush bi_buf;bi_buf256,9692
    int bi_valid;bi_valid260,9812
    ulg high_water;high_water265,9937
} FAR deflate_state;deflate_state272,10232
#define put_byte(put_byte277,10344
#define MIN_LOOKAHEAD MIN_LOOKAHEAD280,10407
#define MAX_DIST(MAX_DIST285,10580
#define WIN_INIT WIN_INIT290,10762
#define d_code(d_code303,11379
# define _tr_tally_lit(_tr_tally_lit321,11934
# define _tr_tally_dist(_tr_tally_dist328,12146
# define _tr_tally_lit(_tr_tally_lit339,12499
# define _tr_tally_dist(_tr_tally_dist340,12562

src/misc/zlib/crc32.c,1621
#    define DYNAMIC_CRC_TABLEDYNAMIC_CRC_TABLE25,989
#define local local38,1256
#    define BYFOURBYFOUR46,1509
       typedef unsigned int u4;u448,1563
#  define REV(REV65,2013
#  define TBLS TBLS71,2354
#  define TBLS TBLS73,2377
local volatile int crc_table_empty = 1;crc_table_empty85,2756
local unsigned long FAR crc_table[TBLS][256];crc_table86,2796
local void make_crc_table()make_crc_table117,4520
local void write_table(FILE *out, const unsigned long FAR *table)write_table194,7069
const unsigned long FAR * ZEXPORT get_crc_table()get_crc_table216,7758
#define DO1 DO1226,8049
#define DO8 DO8227,8123
unsigned long ZEXPORT crc32(unsigned long crc, const unsigned char FAR *buf, uInt len)crc32230,8255
#define DOLIT4 DOLIT4264,9035
#define DOLIT32 DOLIT32267,9204
local unsigned long crc32_little(unsigned long crc, const unsigned char FAR *buf, unsigned len)crc32_little270,9364
#define DOBIG4 DOBIG4301,10110
#define DOBIG32 DOBIG32304,10279
local unsigned long crc32_big(unsigned long crc, const unsigned char FAR *buf, unsigned len)crc32_big307,10439
#define GF2_DIM GF2_DIM341,11157
local unsigned long gf2_matrix_times(unsigned long *mat, unsigned long vec)gf2_matrix_times344,11311
local void gf2_matrix_square(unsigned long *square, unsigned long *mat)gf2_matrix_square359,11629
local uLong crc32_combine_(uLong crc1, uLong crc2, z_off64_t len2)crc32_combine_368,11883
uLong ZEXPORT crc32_combine(uLong crc1, uLong crc2, z_off_t len2)crc32_combine421,13432
uLong ZEXPORT crc32_combine64(uLong crc1, uLong crc2, z_off64_t len2)crc32_combine64426,13548

src/misc/zlib/deflate.c,3841
const char deflate_copyright[] =deflate_copyright61,2497
    need_more,      /* block not completed, need more input or more output */need_more74,3004
    block_done,     /* block flush performed */block_done75,3082
    finish_started, /* finish started, need only more output at next deflate */finish_started76,3130
    finish_done     /* finish done, accept no more input or output */finish_done77,3210
} block_state;block_state78,3280
typedef block_state (*compress_func) OF((deflate_state *s, int flush));compress_func80,3296
#define NIL NIL111,4534
#  define TOO_FAR TOO_FAR115,4591
typedef struct config_s {config_s124,4960
   ush good_length; /* reduce lazy search above this match length */good_length125,4986
   ush max_lazy;    /* do not perform lazy search above this match length */max_lazy126,5055
   ush nice_length; /* quit search above this match length */nice_length127,5132
   ush max_chain;max_chain128,5194
   compress_func func;func129,5212
} config;config130,5235
local const config configuration_table[2] = {configuration_table133,5261
local const config configuration_table[10] = {configuration_table138,5485
#define EQUAL EQUAL158,6273
struct static_tree_desc_s {int dummy;}; /* for buggy compilers */static_tree_desc_s162,6353
struct static_tree_desc_s {int dummy;}; /* for buggy compilers */dummy162,6353
#define UPDATE_HASH(UPDATE_HASH171,6771
#define INSERT_STRING(INSERT_STRING185,7471
#define INSERT_STRING(INSERT_STRING190,7661
#define CLEAR_HASH(CLEAR_HASH200,8080
int ZEXPORT deflateInit_(z_streamp strm, int level, const char *version, int stream_size)deflateInit_205,8299
int ZEXPORT deflateInit2_(z_streamp strm, int  level, int  method, int  windowBits, int  memLevel, int  strategy,deflateInit2_213,8679
int ZEXPORT deflateSetDictionary (z_streamp strm, const Bytef *dictionary, uInt  dictLength)deflateSetDictionary306,11732
int ZEXPORT deflateReset (z_streamp strm)deflateReset345,13045
int ZEXPORT deflateSetHeader (z_streamp strm, gz_headerp head)deflateSetHeader380,13962
int ZEXPORT deflatePrime (z_streamp strm, int bits, int value)deflatePrime389,14286
int ZEXPORT deflateParams(z_streamp strm, int level, int strategy)deflateParams398,14617
int ZEXPORT deflateTune(z_streamp strm, int good_length, int max_lazy, int nice_length, int max_chain)deflateTune434,15769
uLong ZEXPORT deflateBound(z_streamp strm, uLong sourceLen)deflateBound464,17137
local void putShortMSB (deflate_state *s, uInt b)putShortMSB524,19195
local void flush_pending(z_streamp strm)flush_pending536,19638
int ZEXPORT deflate (z_streamp strm, int flush)deflate555,20207
int ZEXPORT deflateEnd (z_streamp strm)deflateEnd866,32047
int ZEXPORT deflateCopy (z_streamp dest, z_streamp source)deflateCopy900,33090
local int read_buf(z_streamp strm, Bytef *buf, unsigned size)read_buf960,35242
local void lm_init (deflate_state *s)lm_init987,35927
local uInt longest_match(deflate_state *s, IPos cur_match)longest_match1027,37317
local uInt longest_match(deflate_state *s, IPos cur_match)longest_match1174,43435
local void check_match(deflate_state *s, IPos start, IPos match, int length)check_match1231,45558
#  define check_match(check_match1249,46215
local void fill_window(deflate_state *s)fill_window1262,46742
#define FLUSH_BLOCK_ONLY(FLUSH_BLOCK_ONLY1392,52023
#define FLUSH_BLOCK(FLUSH_BLOCK1404,52455
local block_state deflate_stored(deflate_state *s, int flush)deflate_stored1418,53069
local block_state deflate_fast(deflate_state *s, int flush)deflate_fast1474,55169
local block_state deflate_slow(deflate_state *s, int flush)deflate_slow1568,58962
local block_state deflate_rle(deflate_state *s, int flush)deflate_rle1691,63869
local block_state deflate_huff(deflate_state *s, int flush)deflate_huff1755,66508

src/misc/zlib/gzlib.c,1294
#  define LSEEK LSEEK16,384
char ZLIB_INTERNAL *gz_strwinerror (DWORD error)gz_strwinerror36,985
local void gz_reset(gz_statep state)gz_reset77,1941
local gzFile gz_open(const char *path, int fd, const char *mode)gz_open92,2608
gzFile ZEXPORT gzopen(const char *path, const char *mode)gzopen198,5615
gzFile ZEXPORT gzopen64(const char *path, const char *mode)gzopen64204,5737
gzFile ZEXPORT gzdopen(int fd, const char *mode)gzdopen210,5861
int ZEXPORT gzbuffer(gzFile file, unsigned size)gzbuffer224,6230
int ZEXPORT gzrewind(gzFile file)gzrewind247,6748
z_off64_t ZEXPORT gzseek64(gzFile file, z_off64_t offset, int whence)gzseek64268,7214
z_off_t ZEXPORT gzseek(gzFile file, z_off_t offset, int whence)gzseek341,9379
z_off64_t ZEXPORT gztell64(gzFile file)gztell64350,9596
z_off_t ZEXPORT gztell(gzFile file)gztell366,9971
z_off64_t ZEXPORT gzoffset64(gzFile file)gzoffset64375,10133
z_off_t ZEXPORT gzoffset(gzFile file)gzoffset397,10742
int ZEXPORT gzeof(gzFile file)gzeof406,10908
const char * ZEXPORT gzerror(gzFile file, int *errnum)gzerror423,11335
void ZEXPORT gzclearerr(gzFile file)gzclearerr441,11784
void ZLIB_INTERNAL gz_error(gz_statep state, int err, const char *msg)gz_error464,12573
unsigned ZLIB_INTERNAL gz_intmax()gz_intmax501,13737

src/misc/zlib/adler32.c,691
#define local local17,337
#define BASE BASE21,434
#define NMAX NMAX22,497
#define DO1(DO125,592
#define DO2(DO226,648
#define DO4(DO427,694
#define DO8(DO828,740
#define DO16(DO1629,786
#  define MOD(MOD33,919
#  define MOD4(MOD453,1815
#  define MOD(MOD62,2104
#  define MOD4(MOD463,2131
uLong ZEXPORT adler32(uLong adler, const Bytef *buf, uInt len)adler3267,2247
local uLong adler32_combine_(uLong adler1, uLong adler2, z_off64_t len2)adler32_combine_135,4061
uLong ZEXPORT adler32_combine(uLong adler1, uLong adler2, z_off_t len2)adler32_combine156,4778
uLong ZEXPORT adler32_combine64(uLong adler1, uLong adler2, z_off64_t len2)adler32_combine64161,4906

src/misc/zlib/inftrees.c,270
#define MAXBITS MAXBITS16,342
const char inflate_copyright[] =inflate_copyright18,362
int ZLIB_INTERNAL inflate_table(codetype type, unsigned short FAR *lens, unsigned codes, code FAR * FAR *table, unsigned FAR *bits, unsigned short FAR *work)inflate_table39,1437

src/misc/zlib/inflate.c,1937
#    define BUILDFIXEDBUILDFIXED97,4188
int ZEXPORT inflateReset(z_streamp strm)inflateReset110,4551
int ZEXPORT inflateReset2(z_streamp strm, int windowBits)inflateReset2136,5315
int ZEXPORT inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)inflateInit2_172,6303
int ZEXPORT inflateInit_(z_streamp strm, const char *version, int stream_size)inflateInit_201,7308
int ZEXPORT inflatePrime(z_streamp strm, int bits, int value)inflatePrime206,7457
local void fixedtables(struct inflate_state FAR *state)fixedtables234,8534
void makefixed()makefixed297,10225
local int updatewindow(z_streamp strm, unsigned out)updatewindow351,12303
#  define UPDATE(UPDATE403,13941
#  define UPDATE(UPDATE406,14054
#  define CRC2(CRC2411,14169
#  define CRC4(CRC4418,14361
#define LOAD(LOAD429,14717
#define RESTORE(RESTORE440,15001
#define INITBITS(INITBITS451,15278
#define PULLBYTE(PULLBYTE459,15479
#define NEEDBITS(NEEDBITS469,15811
#define BITS(BITS476,15986
#define DROPBITS(DROPBITS480,16091
#define BYTEBITS(BYTEBITS487,16265
#define REVERSE(REVERSE494,16413
int ZEXPORT inflate(z_streamp strm, int flush)inflate580,20294
int ZEXPORT inflateEnd(z_streamp strm)inflateEnd1227,45016
int ZEXPORT inflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength)inflateSetDictionary1240,45435
int ZEXPORT inflateGetHeader(z_streamp strm, gz_headerp head)inflateGetHeader1279,46624
local unsigned syncsearch(unsigned FAR *have, unsigned char FAR *buf, unsigned len)syncsearch1305,47672
int ZEXPORT inflateSync(z_streamp strm)inflateSync1325,48084
int ZEXPORT inflateSyncPoint(z_streamp strm)inflateSyncPoint1375,49940
int ZEXPORT inflateCopy(z_streamp dest, z_streamp source)inflateCopy1384,50207
int ZEXPORT inflateUndermine(z_streamp strm, int subvert)inflateUndermine1429,51749
long ZEXPORT inflateMark(z_streamp strm)inflateMark1444,52129

src/misc/zlib/zlib.h,5223
#define ZLIB_HZLIB_H32,1351
#define ZLIB_VERSION ZLIB_VERSION48,1552
#define ZLIB_VERNUM ZLIB_VERNUM49,1581
#define ZLIB_VER_MAJOR ZLIB_VER_MAJOR50,1608
#define ZLIB_VER_MINOR ZLIB_VER_MINOR51,1633
#define ZLIB_VER_REVISION ZLIB_VER_REVISION52,1658
#define ZLIB_VER_SUBREVISION ZLIB_VER_SUBREVISION53,1686
typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));alloc_func88,3417
typedef void   (*free_func)  OF((voidpf opaque, voidpf address));free_func89,3490
typedef struct z_stream_s {z_stream_s93,3581
    Bytef    *next_in;  /* next input byte */next_in94,3609
    uInt     avail_in;  /* number of bytes available at next_in */avail_in95,3655
    uLong    total_in;  /* total nb of input bytes read so far */total_in96,3722
    Bytef    *next_out; /* next output byte should be put there */next_out98,3789
    uInt     avail_out; /* remaining free space at next_out */avail_out99,3856
    uLong    total_out; /* total nb of bytes output so far */total_out100,3919
    char     *msg;      /* last error message, NULL if no error */msg102,3982
    struct internal_state FAR *state; /* not visible by applications */state103,4049
    alloc_func zalloc;  /* used to allocate the internal state */zalloc105,4122
    free_func  zfree;   /* used to free the internal state */zfree106,4188
    voidpf     opaque;  /* private data object passed to zalloc and zfree */opaque107,4250
    int     data_type;  /* best guess about the data type: binary or text */data_type109,4328
    uLong   adler;      /* adler32 value of the uncompressed data */adler110,4405
    uLong   reserved;   /* reserved for future use */reserved111,4474
} z_stream;z_stream112,4528
typedef z_stream FAR *z_streamp;z_streamp114,4541
typedef struct gz_header_s {gz_header_s120,4710
    int     text;       /* true if compressed data believed to be text */text121,4739
    uLong   time;       /* modification time */time122,4813
    int     xflags;     /* extra flags (not used when writing a gzip file) */xflags123,4861
    int     os;         /* operating system */os124,4939
    Bytef   *extra;     /* pointer to extra field or Z_NULL if none */extra125,4986
    uInt    extra_len;  /* extra field length (valid if extra != Z_NULL) */extra_len126,5057
    uInt    extra_max;  /* space at extra (only when reading header) */extra_max127,5133
    Bytef   *name;      /* pointer to zero-terminated file name or Z_NULL */name128,5205
    uInt    name_max;   /* space at name (only when reading header) */name_max129,5282
    Bytef   *comment;   /* pointer to zero-terminated comment or Z_NULL */comment130,5353
    uInt    comm_max;   /* space at comment (only when reading header) */comm_max131,5428
    int     hcrc;       /* true if there was or will be a header crc */hcrc132,5502
    int     done;       /* true when done reading gzip header (not useddone133,5574
} gz_header;gz_header135,5702
typedef gz_header FAR *gz_headerp;gz_headerp137,5716
#define Z_NO_FLUSH Z_NO_FLUSH172,7486
#define Z_PARTIAL_FLUSH Z_PARTIAL_FLUSH173,7512
#define Z_SYNC_FLUSH Z_SYNC_FLUSH174,7538
#define Z_FULL_FLUSH Z_FULL_FLUSH175,7564
#define Z_FINISH Z_FINISH176,7590
#define Z_BLOCK Z_BLOCK177,7616
#define Z_TREES Z_TREES178,7642
#define Z_OK Z_OK181,7743
#define Z_STREAM_END Z_STREAM_END182,7769
#define Z_NEED_DICT Z_NEED_DICT183,7795
#define Z_ERRNO Z_ERRNO184,7821
#define Z_STREAM_ERROR Z_STREAM_ERROR185,7849
#define Z_DATA_ERROR Z_DATA_ERROR186,7877
#define Z_MEM_ERROR Z_MEM_ERROR187,7905
#define Z_BUF_ERROR Z_BUF_ERROR188,7933
#define Z_VERSION_ERROR Z_VERSION_ERROR189,7961
#define Z_NO_COMPRESSION Z_NO_COMPRESSION194,8143
#define Z_BEST_SPEED Z_BEST_SPEED195,8178
#define Z_BEST_COMPRESSION Z_BEST_COMPRESSION196,8213
#define Z_DEFAULT_COMPRESSION Z_DEFAULT_COMPRESSION197,8248
#define Z_FILTERED Z_FILTERED200,8310
#define Z_HUFFMAN_ONLY Z_HUFFMAN_ONLY201,8342
#define Z_RLE Z_RLE202,8374
#define Z_FIXED Z_FIXED203,8406
#define Z_DEFAULT_STRATEGY Z_DEFAULT_STRATEGY204,8438
#define Z_BINARY Z_BINARY207,8536
#define Z_TEXT Z_TEXT208,8557
#define Z_ASCII Z_ASCII209,8578
#define Z_UNKNOWN Z_UNKNOWN210,8653
#define Z_DEFLATED Z_DEFLATED213,8743
#define Z_NULL Z_NULL216,8845
#define zlib_version zlib_version218,8910
typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));in_func978,49922
typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));out_func979,49995
typedef voidp gzFile;       /* opaque gzip file descriptor */gzFile1173,59662
#define deflateInit(deflateInit1554,76590
#define inflateInit(inflateInit1556,76701
#define deflateInit2(deflateInit21558,76805
#define inflateInit2(inflateInit21561,77029
#define inflateBackInit(inflateBackInit1563,77146
#  define gzopen gzopen1583,78230
#  define gzseek gzseek1584,78256
#  define gztell gztell1585,78282
#  define gzoffset gzoffset1586,78308
#  define adler32_combine adler32_combine1587,78338
#  define crc32_combine crc32_combine1588,78382
    struct internal_state {int dummy;};internal_state1608,79308
    struct internal_state {int dummy;};dummy1608,79308

src/misc/zlib/gzwrite.c,812
local int gz_init(gz_statep state)gz_init22,610
local int gz_comp(gz_statep state, int flush)gz_comp65,2007
local int gz_zero(gz_statep state, z_off64_t len)gz_zero115,3681
int ZEXPORT gzwrite(gzFile file, voidpc buf, unsigned len)gzwrite145,4446
int ZEXPORT gzputc(gzFile file, int c)gzputc220,6648
int ZEXPORT gzputs(gzFile file, const char *str)gzputs261,7660
int ZEXPORTVA gzprintf (gzFile file, const char *format, ...)gzprintf276,7937
int ZEXPORTVA gzprintf (gzFile file, const char *format, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10,gzprintf347,9748
int ZEXPORT gzflush(gzFile file, int flush)gzflush417,12008
int ZEXPORT gzsetparams(gzFile file, int level, int strategy)gzsetparams447,12720
int ZEXPORT gzclose_w(gzFile file)gzclose_w486,13825

src/misc/zlib/compress_.c,336
#define ZLIB_INTERNALZLIB_INTERNAL8,183
int ZEXPORT compress2 (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level)compress224,917
int ZEXPORT compress (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)compress59,1899
uLong ZEXPORT compressBound (uLong sourceLen)compressBound68,2272

src/misc/zlib/trees.c,3804
#define MAX_BL_BITS MAX_BL_BITS54,1473
#define END_BLOCK END_BLOCK57,1552
#define REP_3_6 REP_3_660,1607
#define REPZ_3_10 REPZ_3_1063,1700
#define REPZ_11_138 REPZ_11_13866,1789
local const int extra_lbits[LENGTH_CODES] /* extra bits for each length code */extra_lbits69,1880
local const int extra_dbits[D_CODES] /* extra bits for each distance code */extra_dbits72,2027
local const int extra_blbits[BL_CODES]/* extra bits for each bit length code */extra_blbits75,2181
local const uch bl_order[BL_CODES]bl_order78,2308
#define Buf_size Buf_size84,2553
#define DIST_CODE_LEN DIST_CODE_LEN93,2837
local ct_data static_ltree[L_CODES+2];static_ltree98,3003
local ct_data static_dtree[D_CODES];static_dtree105,3284
uch _dist_code[DIST_CODE_LEN];_dist_code110,3412
uch _length_code[MAX_MATCH-MIN_MATCH+1];_length_code116,3606
local int base_length[LENGTH_CODES];base_length119,3716
local int base_dist[D_CODES];base_dist122,3814
struct static_tree_desc_s {static_tree_desc_s131,4012
    const ct_data *static_tree;  /* static tree or NULL */static_tree132,4040
    const intf *extra_bits;      /* extra bits for each code or NULL */extra_bits133,4099
    int     extra_base;          /* base index for extra_bits */extra_base134,4171
    int     elems;               /* max number of elements in the tree */elems135,4236
    int     max_length;          /* max bit length for the codes */max_length136,4310
local static_tree_desc  static_l_desc =static_l_desc139,4382
local static_tree_desc  static_d_desc =static_d_desc142,4483
local static_tree_desc  static_bl_desc =static_bl_desc145,4584
#  define send_code(send_code177,6035
#  define send_code(send_code181,6204
#define put_short(put_short190,6534
local void send_bits(deflate_state *s, int value, int length)send_bits202,6918
#define send_bits(send_bits224,7658
local void tr_static_init()tr_static_init245,8235
#  define SEPARATOR(SEPARATOR337,11464
void gen_trees_header()gen_trees_header341,11595
void ZLIB_INTERNAL _tr_init(deflate_state *s)_tr_init394,13420
local void init_block(deflate_state *s)init_block422,14098
#define SMALLEST SMALLEST436,14512
#define pqremove(pqremove444,14813
#define smaller(smaller455,15195
local void pqdownheap(deflate_state *s, ct_data *tree, int k)pqdownheap465,15651
local void gen_bitlen(deflate_state *s, tree_desc *desc)gen_bitlen497,16857
local void gen_codes (ct_data *tree, int max_code, ushf *bl_count)gen_codes582,20228
local void build_tree(deflate_state *s, tree_desc *desc)build_tree624,22038
local void scan_tree (deflate_state *s, ct_data *tree, int max_code)scan_tree710,25251
local void send_tree (deflate_state *s, ct_data *tree, int max_code)send_tree752,26825
local int build_bl_tree(deflate_state *s)build_bl_tree800,28681
local void send_all_trees(deflate_state *s, int lcodes, int dcodes, int blcodes)send_all_trees834,30123
void ZLIB_INTERNAL _tr_stored_block(deflate_state *s, charf *buf, ulg stored_len, int last)_tr_stored_block861,31269
void ZLIB_INTERNAL _tr_align(deflate_state *s)_tr_align882,32314
void ZLIB_INTERNAL _tr_flush_block(deflate_state *s, charf *buf, ulg stored_len, int last)_tr_flush_block910,33316
int ZLIB_INTERNAL _tr_tally (deflate_state *s, unsigned dist, unsigned lc)_tr_tally1007,36988
local void compress_block(deflate_state *s, ct_data *ltree, ct_data *dtree)compress_block1054,38830
local int detect_data_type(deflate_state *s)detect_data_type1112,41312
local unsigned bi_reverse(unsigned code, int len)bi_reverse1145,42455
local void bi_flush(deflate_state *s)bi_flush1158,42790
local void bi_windup(deflate_state *s)bi_windup1174,43220
local void copy_block(deflate_state *s, charf    *buf, unsigned len, int      header)copy_block1192,43678

src/misc/zlib/gzguts.h,2727
#    define _LARGEFILE_SOURCE _LARGEFILE_SOURCE8,246
#    undef _FILE_OFFSET_BITS_FILE_OFFSET_BITS11,314
#  define ZLIB_INTERNAL ZLIB_INTERNAL16,429
#  define ZLIB_INTERNALZLIB_INTERNAL18,498
#  define NO_GZCOMPRESSNO_GZCOMPRESS31,740
#  define vsnprintf vsnprintf36,806
#  define local local40,859
#  define zstrerror(zstrerror53,1206
#    define zstrerror(zstrerror57,1309
#    define zstrerror(zstrerror59,1357
#define open open69,1524
#define close close70,1544
#define lseek lseek71,1565
#define read read72,1586
#define write write73,1606
#define GZBUFSIZE GZBUFSIZE85,2086
#define GZ_NONE GZ_NONE88,2190
#define GZ_READ GZ_READ89,2208
#define GZ_WRITE GZ_WRITE90,2229
#define GZ_APPEND GZ_APPEND91,2252
#define LOOK LOOK94,2359
#define COPY COPY95,2408
#define GZIP GZIP96,2454
    int mode;               /* see gzip modes above */mode101,2617
    int fd;                 /* file descriptor */fd102,2672
    char *path;             /* path or fd for error messages */path103,2722
    z_off64_t pos;          /* current position in uncompressed data */pos104,2786
    unsigned size;          /* buffer size, zero if not allocated yet */size105,2858
    unsigned want;          /* requested buffer size, default is GZBUFSIZE */want106,2931
    unsigned char *in;      /* input buffer */in107,3009
    unsigned char *out;     /* output buffer (double-sized when reading) */out108,3056
    unsigned char *next;    /* next output data to deliver or write */next109,3132
    unsigned have;          /* amount of output data unused at next */have111,3234
    int eof;                /* true if end of input file reached */eof112,3305
    z_off64_t start;        /* where the gzip data started, for rewinding */start113,3373
    z_off64_t raw;          /* where the raw data started, for seeking */raw114,3450
    int how;                /* 0: get header, 1: copy, 2: decompress */how115,3524
    int direct;             /* true if last read direct, false if gzip */direct116,3596
    int level;              /* compression level */level118,3701
    int strategy;           /* compression strategy */strategy119,3753
    z_off64_t skip;         /* amount to skip (already rewound if backwards) */skip121,3835
    int seek;               /* true if seek request pending */seek122,3915
    int err;                /* error code */err124,4010
    char *msg;              /* error message */msg125,4055
    z_stream strm;          /* stream structure in-place (not a pointer) */strm127,4148
} gz_state;gz_state128,4224
typedef gz_state FAR *gz_statep;gz_statep129,4236
#  define GT_OFF(GT_OFF141,4678
#  define GT_OFF(GT_OFF144,4801

src/misc/espresso/cubestr.c,183
void cube_setup()cube_setup27,525
void setdown_cube()setdown_cube95,2805
void save_cube_struct()save_cube_struct134,3812
void restore_cube_struct()restore_cube_struct151,4372

src/misc/espresso/sparse_int.h,325
#define ABC__misc__espresso__sparse_int_hABC__misc__espresso__sparse_int_h33,624
#define dll_unlink(dll_unlink76,1512
#define sm_element_alloc(sm_element_alloc96,1921
#define sm_element_free(sm_element_free105,2201
#define sm_element_alloc(sm_element_alloc110,2303
#define sm_element_free(sm_element_free113,2416

src/misc/espresso/cofactor.c,436
pcube *cofactor(T, c)cofactor44,1201
pcube *scofactor(T, c, var)scofactor93,2712
void massive_count(T)massive_count131,3786
int binate_split_select(T, cleft, cright, debug_flag)binate_split_select258,8242
pcube *cube1list(A)cube1list289,9206
pcube *cube2list(A, B)cube2list306,9528
pcube *cube3list(A, B, C)cube3list326,9887
pcover cubeunlist(A1)cubeunlist350,10328
void simplify_cubelist(T)simplify_cubelist366,10647

src/misc/espresso/cvrout.c,924
void fprint_pla(fp, PLA, output_type)fprint_pla20,215
void fpr_header(fp, PLA, output_type)fpr_header86,1872
void pls_output(PLA)pls_output169,4418
void pls_group(PLA, fp)pls_group186,4771
void pls_label(PLA, fp)pls_label210,5364
void eqn_output(PLA)eqn_output234,5885
char *fmt_cube(c, out_map, s)fmt_cube284,7371
void print_cube(fp, c, out_map)print_cube311,8058
void print_expanded_cube(fp, c, phase)print_expanded_cube342,8794
char *pc1(c) pcube c;pc1379,9725
char *pc2(c) pcube c;pc2381,9799
void debug_print(T, name, level)debug_print385,9875
void debug1_print(T, name, num)debug1_print407,10406
void cprint(T)cprint424,10755
void makeup_labels(PLA)makeup_labels434,10878
void kiss_output(fp, PLA)kiss_output459,11520
void kiss_print_cube(fp, PLA, p, out_string)kiss_print_cube474,11760
void output_symbolic_constraints(fp, PLA, output_symbolic)output_symbolic_constraints521,12856

src/misc/espresso/util_old.h,1278
#define ABC__misc__espresso__util_old_hABC__misc__espresso__util_old_h11,230
#define _POSIX_SOURCE _POSIX_SOURCE15,313
#define _ALL_SOURCE _ALL_SOURCE18,403
#define _ANSI_C_SOURCE _ANSI_C_SOURCE21,496
#define _BSD_BSD30,724
#define NIL(NIL42,1177
#define ALLOC(ALLOC51,1440
#define REALLOC(REALLOC53,1514
#define FREE(FREE56,1670
#define ALLOC(ALLOC63,1872
#define REALLOC(REALLOC65,1961
#define FREE(FREE67,2075
#define VOID_HACK VOID_HACK74,2354
#define VOID_HACK VOID_HACK76,2383
#define ultrix4ultrix4102,2978
#define ultrix3ultrix3105,3021
#define ultrix2ultrix2107,3043
#define SIGNAL_FN SIGNAL_FN140,3825
#define SIGNAL_FN SIGNAL_FN143,3909
#define random(random173,4720
#define srandom(srandom174,4747
#define bzero(bzero175,4777
#    define assert(assert211,5634
#    define assert(assert213,5671
#define fail(fail225,5899
#undef putc putc234,6076
#undef ALLOC ALLOC235,6132
#undef REALLOCREALLOC236,6185
#define ALLOC(ALLOC237,6200
#define REALLOC(REALLOC238,6251
#define ABS(ABS250,6428
#define MAX(MAX253,6496
#define MIN(MIN256,6563
#define ptime(ptime283,7507
#define print_time(print_time284,7547
#define HUGE HUGE293,7735
#define HUGE_VAL HUGE_VAL295,7780
#define MAXINT MAXINT298,7824

src/misc/espresso/solution.c,353
solution_alloc()solution_alloc17,159
solution_free(sol)solution_free29,307
solution_dup(sol)solution_dup38,404
solution_add(sol, weight, col)solution_add51,605
solution_accept(sol, A, weight, col)solution_accept62,766
solution_reject(sol, A, weight, col)solution_reject84,1204
solution_choose_best(best1, best2)solution_choose_best95,1336

src/misc/espresso/essen.c,198
pcover essential(Fp, Dp)essential39,1181
bool essen_cube(F, D, c)essen_cube83,2261
pcover cb_consensus(T, c)cb_consensus109,2754
pcover cb_consensus_dist0(R, p, c)cb_consensus_dist0143,3489

src/misc/espresso/cvrm.c,1115
static void cb_unravel(c, start, end, startbase, B1)cb_unravel24,353
pcover unravel_range(B, start, end)unravel_range77,1813
pcover unravel(B, start)unravel113,2904
pcover lex_sort(T)lex_sort121,3074
pcover size_sort(T)size_sort131,3259
pcover mini_sort(F, compare)mini_sort141,3466
pcover sort_reduce(T)sort_reduce173,4247
pcover random_order(F)random_order199,4882
int cubelist_partition(T, A, B, comp_debug)cubelist_partition234,5786
pcover cof_output(T, i)cof_output312,7702
pcover uncof_output(T, i)uncof_output335,8139
void foreach_output_function(PLA, func, func1)foreach_output_function363,8723
static pcover Fmin;Fmin404,9826
static pcube phase;phase405,9846
void so_espresso(PLA, strategy)so_espresso410,9921
void so_both_espresso(PLA, strategy)so_both_espresso429,10343
int so_do_espresso(PLA, i)so_do_espresso446,10726
int so_do_exact(PLA, i)so_do_exact460,11009
int so_save(PLA, i)so_save475,11308
int so_both_do_espresso(PLA, i)so_both_do_espresso485,11448
int so_both_do_exact(PLA, i)so_both_do_exact505,11938
int so_both_save(PLA, i)so_both_save525,12437

src/misc/espresso/dominate.c,97
sm_row_dominance(A)sm_row_dominance17,151
sm_col_dominance(A, weight)sm_col_dominance58,1278

src/misc/espresso/equiv.c,99
void find_equiv_outputs(PLA)find_equiv_outputs16,144
int check_equiv(f1, f2)check_equiv74,1872

src/misc/espresso/gimpel.c,85
gimpel_reduce(A, select, weight, lb, bound, depth, stats, best)gimpel_reduce30,445

src/misc/espresso/unate.c,549
pcover map_cover_to_unate(T)map_cover_to_unate23,318
pcover map_unate_to_cover(A)map_unate_to_cover64,1219
pset_family unate_compl(A)unate_compl117,2344
pset_family unate_complement(A)unate_complement141,2816
pset_family exact_minimum_cover(T)exact_minimum_cover226,5151
#define MAGIC MAGIC303,7396
pset_family unate_intersect(A, B, largest_only)unate_intersect305,7469
abs_covered(A, pick)abs_covered371,9148
abs_covered_many(A, pick_set)abs_covered_many395,9699
abs_select_restricted(A, restrict)abs_select_restricted420,10285

src/misc/espresso/sparse.h,3483
#define ABC__misc__espresso__sparse_hABC__misc__espresso__sparse_h11,131
typedef struct sm_element_struct sm_element;sm_element21,258
typedef struct sm_row_struct sm_row;sm_row22,303
typedef struct sm_col_struct sm_col;sm_col23,340
typedef struct sm_matrix_struct sm_matrix;sm_matrix24,377
struct sm_element_struct {sm_element_struct30,455
    int row_num;        /* row number of this element */row_num31,482
    int col_num;        /* column number of this element */col_num32,539
    sm_element *next_row;    /* next row in this column */next_row33,599
    sm_element *prev_row;    /* previous row in this column */prev_row34,658
    sm_element *next_col;    /* next column in this row */next_col35,721
    sm_element *prev_col;    /* previous column in this row */prev_col36,780
    char *user_word;        /* user-defined word */user_word37,843
struct sm_row_struct {sm_row_struct44,922
    int row_num;        /* the row number */row_num45,945
    int length;            /* number of elements in this row */length46,990
    int flag;            /* user-defined word */flag47,1054
    sm_element *first_col;    /* first element in this row */first_col48,1103
    sm_element *last_col;    /* last element in this row */last_col49,1165
    sm_row *next_row;        /* next row (in sm_matrix linked list) */next_row50,1225
    sm_row *prev_row;        /* previous row (in sm_matrix linked list) */prev_row51,1296
    char *user_word;        /* user-defined word */user_word52,1371
struct sm_col_struct {sm_col_struct59,1453
    int col_num;        /* the column number */col_num60,1476
    int length;            /* number of elements in this column */length61,1524
    int flag;            /* user-defined word */flag62,1591
    sm_element *first_row;    /* first element in this column */first_row63,1640
    sm_element *last_row;    /* last element in this column */last_row64,1705
    sm_col *next_col;        /* next column (in sm_matrix linked list) */next_col65,1768
    sm_col *prev_col;        /* prev column (in sm_matrix linked list) */prev_col66,1842
    char *user_word;        /* user-defined word */user_word67,1916
struct sm_matrix_struct {sm_matrix_struct74,2000
    sm_row **rows;        /* pointer to row headers (by row #) */rows75,2026
    int rows_size;        /* alloc'ed size of above array */rows_size76,2092
    sm_col **cols;        /* pointer to column headers (by col #) */cols77,2153
    int cols_size;        /* alloc'ed size of above array */cols_size78,2222
    sm_row *first_row;        /* first row (linked list of all rows) */first_row79,2283
    sm_row *last_row;        /* last row (linked list of all rows) */last_row80,2355
    int nrows;            /* number of rows */nrows81,2425
    sm_col *first_col;        /* first column (linked list of columns) */first_col82,2472
    sm_col *last_col;        /* last column (linked list of columns) */last_col83,2546
    int ncols;            /* number of columns */ncols84,2618
    char *user_word;        /* user-defined word */user_word85,2668
#define sm_get_col(sm_get_col89,2725
#define sm_get_row(sm_get_row93,2853
#define sm_foreach_row(sm_foreach_row97,2981
#define sm_foreach_col(sm_foreach_col100,3082
#define sm_foreach_row_element(sm_foreach_row_element103,3183
#define sm_foreach_col_element(sm_foreach_col_element106,3283
#define sm_put(sm_put109,3383
#define sm_get(sm_get112,3443

src/misc/espresso/sharp.c,503
long start_time;start_time19,213
pcover cv_sharp(A, B)cv_sharp23,292
pcover cb_sharp(c, T)cb_sharp37,536
pcover cb_recur_sharp(c, T, first, last, level)cb_recur_sharp52,807
pcover sharp(a, b)sharp81,1574
pcover make_disjoint(A)make_disjoint102,2083
pcover cv_dsharp(A, B)cv_dsharp118,2357
pcover cb1_dsharp(T, c)cb1_dsharp133,2622
pcover cb_dsharp(c, T)cb_dsharp149,2888
pcover dsharp(a, b)dsharp172,3308
#define MAGIC MAGIC214,4454
pcover cv_intersect(A, B)cv_intersect216,4527

src/misc/espresso/cvrmisc.c,331
void cover_cost(F, cost)cover_cost17,186
char *fmt_cost(cost)fmt_cost59,1490
char *print_cost(F)print_cost76,1917
void copy_cost(s, d)copy_cost86,2079
void size_stamp(T, name)size_stamp99,2319
void print_trace(T, name, time)print_trace109,2542
void totals(time, i, T, cost)totals121,2800
void fatal(s)fatal140,3196

src/misc/espresso/indep.c,136
sm_maximal_independent_set(A, weight)sm_maximal_independent_set44,729
build_intersection_matrix(A)build_intersection_matrix102,2250

src/misc/espresso/sparse.c,81
pcover make_sparse(F, D, R)make_sparse26,471
mv_reduce(F, D)mv_reduce63,1480

src/misc/espresso/mincov.h,0

src/misc/espresso/espresso.h,11900
#define ABC__misc__espresso__espresso_hABC__misc__espresso__espresso_h21,264
#define print_time(print_time22,304
#define void void25,365
#define NO_INLINENO_INLINE30,466
#define BPI BPI31,484
#define BPIBPI59,1425
#define LOGBPI LOGBPI67,1542
typedef unsigned int *pset;pset73,1706
typedef struct set_family {set_family76,1788
    int wsize;                  /* Size of each set in 'ints' */wsize77,1816
    int sf_size;                /* User declared set size */sf_size78,1881
    int capacity;               /* Number of sets allocated */capacity79,1942
    int count;                  /* The number of sets in the family */count80,2005
    int active_count;           /* Number of "active" sets */active_count81,2076
    pset data;                  /* Pointer to the set data */data82,2138
    struct set_family *next;    /* For garbage collection */next83,2200
} set_family_t, *pset_family;set_family_t84,2261
} set_family_t, *pset_family;pset_family84,2261
#define WHICH_WORD(WHICH_WORD87,2337
#define WHICH_BIT(WHICH_BIT88,2397
#define SET_SIZE(SET_SIZE92,2528
#define SET_SIZE(SET_SIZE94,2615
#define LOOP(LOOP104,3027
#define PUTLOOP(PUTLOOP105,3077
#define LOOPCOPY(LOOPCOPY107,3158
#define SIZE(SIZE108,3200
#define PUTSIZE(PUTSIZE109,3247
#define LOOPCOPY(LOOPCOPY111,3330
#define SIZE(SIZE112,3378
#define PUTSIZE(PUTSIZE113,3429
#define NELEM(NELEM116,3499
#define LOOPINIT(LOOPINIT117,3543
#define SET(SET122,3678
#define RESET(RESET123,3729
#define TESTP(TESTP124,3782
#define PRIME PRIME127,3864
#define NONESSEN NONESSEN128,3924
#define ACTIVE ACTIVE129,4001
#define REDUND REDUND130,4068
#define COVERED COVERED131,4147
#define RELESSEN RELESSEN132,4215
#define foreach_set(foreach_set135,4355
#define foreach_remaining_set(foreach_remaining_set137,4451
#define foreach_active_set(foreach_active_set139,4579
#define foreachi_set(foreachi_set143,4743
#define foreachi_active_set(foreachi_active_set145,4824
#define foreach_set_element(foreach_set_element155,5067
#define GETSET(GETSET161,5322
#define set_new(set_new164,5435
#define set_full(set_full165,5513
#define set_save(set_save166,5591
#define set_free(set_free167,5667
#define is_in_set(is_in_set170,5773
#define set_remove(set_remove171,5848
#define set_insert(set_insert172,5926
#define INLINEset_copy(INLINEset_copy176,6095
#define INLINEset_clear(INLINEset_clear177,6152
#define INLINEset_fill(INLINEset_fill178,6214
#define INLINEset_and(INLINEset_and179,6278
#define INLINEset_or(INLINEset_or180,6340
#define INLINEset_diff(INLINEset_diff181,6400
#define INLINEset_ndiff(INLINEset_ndiff182,6464
#define INLINEset_xor(INLINEset_xor183,6532
#define INLINEset_xnor(INLINEset_xnor184,6594
#define INLINEset_merge(INLINEset_merge185,6660
#define INLINEsetp_implies(INLINEsetp_implies186,6734
#define INLINEsetp_disjoint(INLINEsetp_disjoint188,6824
#define INLINEsetp_equal(INLINEsetp_equal190,6916
#define INLINEset_copy(INLINEset_copy195,7010
#define INLINEset_clear(INLINEset_clear197,7108
#define INLINEset_fill(INLINEset_fill199,7219
#define INLINEset_and(INLINEset_and202,7370
#define INLINEset_or(INLINEset_or205,7495
#define INLINEset_diff(INLINEset_diff208,7619
#define INLINEset_ndiff(INLINEset_ndiff211,7747
#define INLINEset_xor(INLINEset_xor215,7917
#define INLINEset_xnor(INLINEset_xnor216,7979
#define INLINEset_xor(INLINEset_xor218,8051
#define INLINEset_xnor(INLINEset_xnor221,8176
#define INLINEset_merge(INLINEset_merge225,8336
#define INLINEsetp_implies(INLINEsetp_implies228,8492
#define INLINEsetp_disjoint(INLINEsetp_disjoint231,8643
#define INLINEsetp_equal(INLINEsetp_equal234,8794
#define count_ones(count_ones241,8966
#define count_ones(count_ones245,9111
#define bool bool254,9318
#define FALSE FALSE255,9338
#define TRUE TRUE256,9357
#define MAYBE MAYBE257,9376
#define print_bool(print_bool258,9395
#define pcube pcube261,9547
#define new_cube(new_cube262,9584
#define free_cube(free_cube263,9635
#define pcover pcover264,9679
#define new_cover(new_cover265,9723
#define free_cover(free_cover266,9776
#define free_cubelist(free_cubelist267,9819
typedef struct cost_struct {cost_struct271,9917
    int cubes;            /* number of cubes in the cover */cubes272,9946
    int in;            /* transistor count, binary-valued variables */in273,10007
    int out;            /* transistor count, output part */out274,10078
    int mv;            /* transistor count, multiple-valued vars */mv275,10138
    int total;            /* total number of transistors */total276,10206
    int primes;            /* number of prime cubes */primes277,10266
} cost_t, *pcost;cost_t278,10321
} cost_t, *pcost;pcost278,10321
typedef struct pair_struct {pair_struct282,10385
    int cnt;cnt283,10414
    int *var1;var1284,10427
    int *var2;var2285,10442
} pair_t, *ppair;pair_t286,10457
} pair_t, *ppair;ppair286,10457
typedef struct symbolic_list_struct {symbolic_list_struct290,10535
    int variable;variable291,10573
    int pos;pos292,10591
    struct symbolic_list_struct *next;next293,10604
} symbolic_list_t;symbolic_list_t294,10643
typedef struct symbolic_label_struct {symbolic_label_struct298,10722
    char *label;label299,10761
    struct symbolic_label_struct *next;next300,10778
} symbolic_label_t;symbolic_label_t301,10818
typedef struct symbolic_struct {symbolic_struct305,10902
    symbolic_list_t *symbolic_list;    /* linked list of items */symbolic_list306,10935
    int symbolic_list_length;        /* length of symbolic_list list */symbolic_list_length307,11001
    symbolic_label_t *symbolic_label;    /* linked list of new names */symbolic_label308,11073
    int symbolic_label_length;        /* length of symbolic_label list */symbolic_label_length309,11145
    struct symbolic_struct *next;next310,11219
} symbolic_t;symbolic_t311,11253
    pcover F, D, R;        /* on-set, off-set and dc-set */F316,11341
    pcover F, D, R;        /* on-set, off-set and dc-set */D316,11341
    pcover F, D, R;        /* on-set, off-set and dc-set */R316,11341
    char *filename;             /* filename */filename317,11401
    int pla_type;               /* logical PLA format */pla_type318,11448
    pcube phase;                /* phase to split into on-set and off-set */phase319,11505
    ppair pair;                 /* how to pair variables */pair320,11582
    char **label;        /* labels for the columns */label321,11642
    symbolic_t *symbolic;    /* allow binary->symbolic mapping */symbolic322,11696
    symbolic_t *symbolic_output;/* allow symbolic output mapping */symbolic_output323,11762
} PLA_t, *pPLA;PLA_t324,11830
} PLA_t, *pPLA;pPLA324,11830
#define equal(equal326,11847
#define CUBELISTSIZE(CUBELISTSIZE329,11966
#define ININ332,12059
#define OUTOUT333,12070
#define INOUTINOUT334,12082
#define F_type F_type337,12171
#define D_type D_type338,12197
#define R_type R_type339,12223
#define PLEASURE_type PLEASURE_type340,12249
#define EQNTOTT_type EQNTOTT_type341,12309
#define KISS_type KISS_type342,12384
#define CONSTRAINTS_type CONSTRAINTS_type343,12441
#define SYMBOLIC_CONSTRAINTS_type SYMBOLIC_CONSTRAINTS_type344,12515
#define FD_type FD_type345,12596
#define FR_type FR_type346,12630
#define DR_type DR_type347,12664
#define FDR_type FDR_type348,12698
#define COMPL COMPL351,12784
#define ESSEN ESSEN352,12815
#define EXPAND EXPAND353,12846
#define EXPAND1 EXPAND1354,12877
#define GASP GASP355,12908
#define IRRED IRRED356,12939
#define REDUCE REDUCE357,12970
#define REDUCE1 REDUCE1358,13001
#define SPARSE SPARSE359,13032
#define TAUT TAUT360,13063
#define EXACT EXACT361,13094
#define MINCOV MINCOV362,13125
#define MINCOV1 MINCOV1363,13156
#define SHARP SHARP364,13187
#define IRRED1 IRRED1365,13218
#define VERSION\VERSION367,13248
#define TIME_COUNT TIME_COUNT371,13391
#define READ_TIME READ_TIME372,13418
#define COMPL_TIME COMPL_TIME373,13444
#define ONSET_TIME ONSET_TIME374,13470
#define ESSEN_TIME ESSEN_TIME375,13494
#define EXPAND_TIME EXPAND_TIME376,13520
#define IRRED_TIME IRRED_TIME377,13546
#define REDUCE_TIME REDUCE_TIME378,13572
#define GEXPAND_TIME GEXPAND_TIME379,13598
#define GIRRED_TIME GIRRED_TIME380,13624
#define GREDUCE_TIME GREDUCE_TIME381,13650
#define PRIMES_TIME PRIMES_TIME382,13676
#define MINCOV_TIME MINCOV_TIME383,13703
#define MV_REDUCE_TIME MV_REDUCE_TIME384,13729
#define RAISE_IN_TIME RAISE_IN_TIME385,13756
#define VERIFY_TIME VERIFY_TIME386,13783
#define WRITE_TIME WRITE_TIME387,13810
#define NUMINPUTS NUMINPUTS391,13915
#define NUMOUTPUTS NUMOUTPUTS392,13960
#define POSITIVE_PHASE(POSITIVE_PHASE394,14019
#define INLABEL(INLABEL397,14116
#define OUTLABEL(OUTLABEL398,14177
#define GETINPUT(GETINPUT400,14249
#define GETOUTPUT(GETOUTPUT402,14328
#define PUTINPUT(PUTINPUT405,14416
#define PUTOUTPUT(PUTOUTPUT408,14565
#define TWO TWO412,14708
#define DASH DASH413,14726
#define ONE ONE414,14744
#define ZERO ZERO415,14762
#define EXEC(EXEC418,14782
#define EXEC_S(EXEC_S420,14875
#define EXECUTE(EXECUTE422,14972
struct pla_types_struct {pla_types_struct457,16664
    char *key;key458,16690
    int value;value459,16705
#define CUBE_TEMP CUBE_TEMP469,16989
struct cube_struct {cube_struct471,17017
    int size;                   /* set size of a cube */size472,17038
    int num_vars;               /* number of variables in a cube */num_vars473,17095
    int num_binary_vars;        /* number of binary variables */num_binary_vars474,17163
    int *first_part;            /* first element of each variable */first_part475,17228
    int *last_part;             /* first element of each variable */last_part476,17297
    int *part_size;             /* number of elements in each variable */part_size477,17366
    int *first_word;            /* first word for each variable */first_word478,17440
    int *last_word;             /* last word for each variable */last_word479,17507
    pset binary_mask;           /* Mask to extract binary variables */binary_mask480,17573
    pset mv_mask;               /* mask to get mv parts */mv_mask481,17644
    pset *var_mask;             /* mask to extract a variable */var_mask482,17703
    pset *temp;                 /* an array of temporary sets */temp483,17768
    pset fullset;               /* a full cube */fullset484,17833
    pset emptyset;              /* an empty cube */emptyset485,17883
    unsigned int inmask;        /* mask to get odd word of binary part */inmask486,17935
    int inword;                 /* which word number for above */inword487,18009
    int *sparse;                /* should this variable be sparse? */sparse488,18075
    int num_mv_vars;            /* number of multiple-valued variables */num_mv_vars489,18145
    int output;                 /* which variable is "output" (-1 if none) */output490,18219
struct cdata_struct {cdata_struct493,18301
    int *part_zeros;            /* count of zeros for each element */part_zeros494,18323
    int *var_zeros;             /* count of zeros for each variable */var_zeros495,18393
    int *parts_active;          /* number of "active" parts for each var */parts_active496,18464
    bool *is_unate;             /* indicates given var is unate */is_unate497,18540
    int vars_active;            /* number of "active" variables */vars_active498,18607
    int vars_unate;             /* number of unate variables */vars_unate499,18674
    int best;                   /* best "binate" variable */best500,18738
#define DISJOINT DISJOINT509,18960
#define DISJOINT DISJOINT512,19004
#define DISJOINT DISJOINT514,19038

src/misc/espresso/set.c,2321
static pset_family set_family_garbage = NULL;set_family_garbage20,231
static void intcpy(d, s, n)intcpy22,278
int bit_index(a)bit_index34,509
int set_ord(a)set_ord47,722
int set_dist(a, b)set_dist59,994
pset set_clear(r, size)set_clear71,1274
pset set_fill(r, size)set_fill81,1487
pset set_copy(r, a)set_copy95,1757
pset set_and(r, a, b)set_and104,1946
pset set_or(r, a, b)set_or113,2148
pset set_diff(r, a, b)set_diff122,2356
pset set_xor(r, a, b)set_xor131,2568
pset set_merge(r, a, b, mask)set_merge144,2880
bool set_andp(r, a, b)set_andp153,3145
bool set_orp(r, a, b)set_orp163,3419
bool setp_empty(a)setp_empty173,3672
bool setp_full(a, size)setp_full182,3883
bool setp_equal(a, b)setp_equal199,4254
bool setp_disjoint(a, b)setp_disjoint208,4473
bool setp_implies(a, b)setp_implies217,4691
pset sf_or(A)sf_or226,4901
pset sf_and(A)sf_and238,5128
pset_family sf_active(A)sf_active250,5386
pset_family sf_inactive(A)sf_inactive263,5624
pset_family sf_copy(R, A)sf_copy284,5977
pset_family sf_join(A, B)sf_join299,6377
pset_family sf_append(A, B)sf_append317,6905
pset_family sf_new(num, size)sf_new335,7423
pset_family sf_save(A)sf_save356,7901
void sf_free(A)sf_free364,8068
void sf_cleanup()sf_cleanup374,8257
pset_family sf_addset(A, s)sf_addset386,8527
void sf_delset(A, i)sf_delset402,8895
void sf_print(A)sf_print408,9070
void sf_bm_print(A)sf_bm_print419,9286
void sf_write(fp, A)sf_write431,9528
pset_family sf_read(fp)sf_read444,9792
void set_write(fp, a)set_write464,10189
pset_family sf_bm_read(fp)sf_bm_read480,10530
#define largest_string largest_string513,11241
static char s1[largest_string];s1514,11268
char *ps1(a)ps1515,11300
char *pbv1(s, n)pbv1544,12012
set_adjcnt(a, count, weight)set_adjcnt558,12235
int *sf_count(A)sf_count577,12613
int *sf_count_restricted(A, r)sf_count_restricted606,13290
pset_family sf_delc(A, first, last)sf_delc639,13949
pset_family sf_addcol(A, firstcol, n)sf_addcol651,14221
pset_family sf_delcol(A, firstcol, n)sf_delcol679,14974
pset_family sf_copy_col(dst, dstcol, src, srccol)sf_copy_col706,15624
pset_family sf_compress(A, c)sf_compress738,16372
pset_family sf_transpose(A)sf_transpose771,17067
pset_family sf_permute(A, permute, npermute)sf_permute801,17665

src/misc/espresso/irred.c,528
static int Rp_current;Rp_current20,238
irredundant(F, D)irredundant27,327
mark_irredundant(F, D)mark_irredundant40,504
irred_split_cover(F, D, E, Rt, Rp)irred_split_cover92,1790
irred_derive_table(D, E, Rp)irred_derive_table155,3296
cube_is_covered(T, c)cube_is_covered207,4799
tautology(T)tautology217,4938
taut_special_cases(T)taut_special_cases250,5672
fcube_is_covered(T, c, table)fcube_is_covered335,8117
ftautology(T, table)ftautology345,8284
ftaut_special_cases(T, table)ftaut_special_cases377,9010

src/misc/espresso/globals.c,2035
unsigned int debug;              /* debug parameter */debug19,186
bool verbose_debug;              /* -v:  whether to print a lot */verbose_debug20,241
char *total_name[TIME_COUNT];    /* basic function names */total_name21,308
long total_time[TIME_COUNT];     /* time spent in basic fcts */total_time22,368
int total_calls[TIME_COUNT];     /* # calls to each fct */total_calls23,432
bool echo_comments;         /* turned off by -eat option */echo_comments25,492
bool echo_unknown_commands;     /* always true ?? */echo_unknown_commands26,552
bool force_irredundant;          /* -nirr command line option */force_irredundant27,605
bool skip_make_sparse;skip_make_sparse28,670
bool kiss;                       /* -kiss command line option */kiss29,693
bool pos;                        /* -pos command line option */pos30,758
bool print_solution;             /* -x command line option */print_solution31,822
bool recompute_onset;            /* -onset command line option */recompute_onset32,884
bool remove_essential;           /* -ness command line option */remove_essential33,950
bool single_expand;              /* -fast command line option */single_expand34,1015
bool summary;                    /* -s command line option */summary35,1080
bool trace;                      /* -t command line option */trace36,1142
bool unwrap_onset;               /* -nunwrap command line option */unwrap_onset37,1204
bool use_random_order;         /* -random command line option */use_random_order38,1272
bool use_super_gasp;         /* -strong command line option */use_super_gasp39,1337
char *filename;             /* filename PLA was read from */filename40,1400
struct pla_types_struct pla_types[] = {pla_types42,1462
struct cube_struct cube, temp_cube_save;cube67,2154
struct cube_struct cube, temp_cube_save;temp_cube_save67,2154
struct cdata_struct cdata, temp_cdata_save;cdata68,2195
struct cdata_struct cdata, temp_cdata_save;temp_cdata_save68,2195
int bit_count[256] = {bit_count70,2240

src/misc/espresso/pair.c,1293
void set_pair(PLA)set_pair15,143
void set_pair1(PLA, adjust_labels)set_pair121,203
pcover pairvar(A, pair)pairvar124,4210
pcover delvar(A, paired)delvar164,5281
void find_optimal_pairing(PLA, strategy)find_optimal_pairing226,7339
int **find_pairing_cost(PLA, strategy)find_pairing_cost263,8217
static int best_cost;best_cost366,11521
static int **cost_array;cost_array367,11543
static ppair best_pair;best_pair368,11568
static pset best_phase;best_phase369,11592
static pPLA global_PLA;global_PLA370,11616
static pcover best_F, best_D, best_R;best_F371,11640
static pcover best_F, best_D, best_R;best_D371,11640
static pcover best_F, best_D, best_R;best_R371,11640
static int pair_minim_strategy;pair_minim_strategy372,11678
void print_pair(pair)print_pair375,11712
int greedy_best_cost(cost_array_local, pair_p)greedy_best_cost387,11895
ppair pair_best_cost(cost_array_local)pair_best_cost429,12879
void find_best_cost(pair)find_best_cost448,13301
void pair_all(PLA, pair_strategy)pair_all475,13854
void minimize_pair(pair)minimize_pair518,14781
void generate_all_pairs(pair, n, candidate, action)generate_all_pairs593,17062
ppair pair_new(n)pair_new647,18508
ppair pair_save(pair, n)pair_save660,18709
void pair_free(pair)pair_free677,19010

src/misc/espresso/main.c,502
static FILE *last_fp;last_fp22,313
static int input_type = FD_type;input_type23,335
main(argc, argv)main26,370
getPLA(opt, argc, argv, option, PLA, out_type)getPLA524,14470
runtime()runtime568,15561
init_runtime()init_runtime587,15984
subcommands()subcommands607,16710
usage()usage626,17117
backward_compatibility_hack(argc, argv, option, out_type)backward_compatibility_hack659,18739
delete_arg(argc, argv, num)delete_arg724,20586
bool check_arg(argc, argv, s)check_arg737,20831

src/misc/espresso/part.c,217
copy_row(A, prow)copy_row18,182
visit_row(A, prow, rows_visited, cols_visited)visit_row31,403
visit_col(A, pcol, rows_visited, cols_visited)visit_col60,955
sm_block_partition(A, L, R)sm_block_partition88,1500

src/misc/espresso/matrix.c,1043
sm_element *sm_element_freelist;sm_element_freelist24,454
sm_row *sm_row_freelist;sm_row_freelist25,487
sm_col *sm_col_freelist;sm_col_freelist26,512
sm_alloc()sm_alloc31,558
sm_alloc_size(row, col)sm_alloc_size48,934
sm_free(A)sm_free60,1073
sm_dup(A)sm_dup104,2222
sm_resize(A, row, col)sm_resize125,2666
sm_insert(A, row, col)sm_insert155,3327
sm_find(A, rownum, colnum)sm_find205,4765
sm_remove(A, rownum, colnum)sm_remove230,5231
sm_remove_element(A, p)sm_remove_element240,5360
sm_delrow(A, i)sm_delrow273,6213
sm_delcol(A, i)sm_delcol307,7082
sm_copy_row(dest, dest_row, prow)sm_copy_row341,7951
sm_copy_col(dest, dest_col, pcol)sm_copy_col355,8191
sm_longest_row(A)sm_longest_row369,8435
sm_longest_col(A)sm_longest_col388,8797
sm_num_elements(A)sm_num_elements406,9154
sm_read(fp, A)sm_read420,9338
sm_read_compressed(fp, A)sm_read_compressed441,9637
sm_write(fp, A)sm_write474,10232
sm_print(fp, A)sm_print489,10536
sm_dump(A, s, max)sm_dump538,11726
sm_cleanup()sm_cleanup552,11939

src/misc/espresso/rows.c,591
sm_row_alloc()sm_row_alloc21,213
sm_row_free(prow)sm_row_free53,988
sm_row_dup(prow)sm_row_dup82,1620
sm_row_insert(prow, col)sm_row_insert100,1933
sm_row_remove(prow, col)sm_row_remove126,2498
sm_row_find(prow, col)sm_row_find146,2920
sm_row_contains(p1, p2)sm_row_contains165,3245
sm_row_intersects(p1, p2)sm_row_intersects190,3701
sm_row_compare(p1, p2)sm_row_compare218,4196
sm_row_and(p1, p2)sm_row_and247,4647
sm_row_hash(prow, modulus)sm_row_hash279,5341
sm_row_remove_element(prow, p)sm_row_remove_element297,5672
sm_row_print(fp, prow)sm_row_print308,5884

src/misc/espresso/opo.c,797
static int opo_no_make_sparse;opo_no_make_sparse62,2233
static int opo_repeated;opo_repeated63,2264
static int opo_exact;opo_exact64,2289
void phase_assignment(PLA, opo_strategy)phase_assignment67,2336
void repeated_phase_assignment(PLA)repeated_phase_assignment99,3134
pcube find_phase(PLA, first_output, phase1)find_phase129,3895
pcover opo(phase, T, D, R, first_output)opo173,4994
pset_family opo_recur(T, D, select, offset, first, last)opo_recur240,6884
pset_family opo_leaf(T, select, out1, out2)opo_leaf278,7835
void output_phase_setup(PLA, first_output)output_phase_setup417,11297
pPLA set_phase(PLA)set_phase507,13838
#define POW2(POW2539,14892
void opoall(PLA, first_output, last_output, opo_strategy)opoall541,14927
static void minimize(PLA)minimize619,16788

src/misc/espresso/cvrin.c,631
static bool line_length_error;line_length_error21,232
static int lineno;lineno22,263
void skip_line(fpin, fpout, echo)skip_line24,283
char *get_word(fp, word)get_word37,531
void read_cube(fp, PLA)read_cube54,863
void parse_pla(fp, PLA)parse_pla208,5423
int read_pla(fp, needs_dcset, needs_offset, pla_type, PLA_return)read_pla493,15508
void PLA_summary(PLA)PLA_summary597,18493
pPLA new_PLA()new_PLA648,20132
void PLA_labels(PLA)PLA_labels665,20490
void free_PLA(PLA)free_PLA676,20652
int read_symbolic(fp, PLA, word, retval)read_symbolic727,21908
int label_index(PLA, word, varp, ip)label_index789,23514

src/misc/espresso/contain.c,917
pset_family sf_contain(A)sf_contain37,1005
pset_family sf_rev_contain(A)sf_rev_contain58,1671
pset_family sf_ind_contain(A, row_indices)sf_ind_contain81,2459
pset_family sf_dupl(A)sf_dupl99,3029
pset_family sf_union(A, B)sf_union121,3730
pset_family dist_merge(A, mask)dist_merge141,4260
pset_family d1merge(A, var)d1merge161,4717
int d1_rm_equal(A1, compare)d1_rm_equal171,4943
int rm_equal(A1, compare)rm_equal196,5647
int rm_contain(A1)rm_contain214,6104
int rm_rev_contain(A1)rm_rev_contain244,6942
int rm2_equal(A1, B1, E1, compare)rm2_equal274,7778
int rm2_contain(A1, B1)rm2_contain304,8617
pset *sf_sort(A, compare)sf_sort330,9437
pset *sf_list(A)sf_list351,10066
pset_family sf_unlist(A1, totcnt, size)sf_unlist366,10488
pset_family sf_ind_unlist(A1, totcnt, size, row_indices, pfirst)sf_ind_unlist382,10862
pset_family sf_merge(A1, B1, E1, totcnt, size)sf_merge407,11553

src/misc/espresso/map.c,243
static pcube Gcube;Gcube15,143
static pset Gminterm;Gminterm16,163
pset minterms(T)minterms18,186
void explode(var, z)explode36,474
static int mapindex[16][16] = {mapindex51,765
#define POWER2(POWER274,2084
void map(T)map75,2111

src/misc/espresso/cols.c,591
sm_col_alloc()sm_col_alloc21,213
sm_col_free(pcol)sm_col_free53,988
sm_col_dup(pcol)sm_col_dup82,1620
sm_col_insert(pcol, row)sm_col_insert100,1933
sm_col_remove(pcol, row)sm_col_remove126,2498
sm_col_find(pcol, row)sm_col_find146,2920
sm_col_contains(p1, p2)sm_col_contains165,3245
sm_col_intersects(p1, p2)sm_col_intersects190,3701
sm_col_compare(p1, p2)sm_col_compare218,4196
sm_col_and(p1, p2)sm_col_and247,4647
sm_col_hash(pcol, modulus)sm_col_hash279,5341
sm_col_remove_element(pcol, p)sm_col_remove_element297,5672
sm_col_print(fp, pcol)sm_col_print308,5884

src/misc/espresso/setc.c,486
bool full_row(p, cof)full_row56,1473
bool cdist0(a, b)cdist068,1717
int cdist01(a, b)cdist01109,2916
int cdist(a, b)cdist154,4068
pset force_lower(xlower, a, b)force_lower195,5067
void consensus(r, a, b)consensus246,6601
int cactive(a)cactive293,7911
bool ccommon(a, b, cof)ccommon346,9292
int descend(a, b)descend407,11042
int ascend(a, b)ascend423,11418
int lex_order(a, b)lex_order440,11798
int d1_order(a, b)d1_order453,12072
int desc1(a, b)desc1470,12522

src/misc/espresso/reduce.c,317
static bool toggle = TRUE;toggle24,426
pcover reduce(F, D)reduce59,1850
pcube reduce_cube(FD, p)reduce_cube101,3129
pcube sccc(T)sccc112,3341
pcube sccc_merge(left, right, cl, cr)sccc_merge139,3957
pcube sccc_cube(result, p)sccc_cube166,4897
bool sccc_special_cases(T, result)sccc_special_cases184,5248

src/misc/espresso/main.h,4138
enum keys {keys10,93
    KEY_ESPRESSO, KEY_PLA_verify, KEY_check, KEY_contain, KEY_d1merge,KEY_ESPRESSO11,105
    KEY_ESPRESSO, KEY_PLA_verify, KEY_check, KEY_contain, KEY_d1merge,KEY_PLA_verify11,105
    KEY_ESPRESSO, KEY_PLA_verify, KEY_check, KEY_contain, KEY_d1merge,KEY_check11,105
    KEY_ESPRESSO, KEY_PLA_verify, KEY_check, KEY_contain, KEY_d1merge,KEY_contain11,105
    KEY_ESPRESSO, KEY_PLA_verify, KEY_check, KEY_contain, KEY_d1merge,KEY_d1merge11,105
    KEY_disjoint, KEY_dsharp, KEY_echo, KEY_essen, KEY_exact, KEY_expand,KEY_disjoint12,176
    KEY_disjoint, KEY_dsharp, KEY_echo, KEY_essen, KEY_exact, KEY_expand,KEY_dsharp12,176
    KEY_disjoint, KEY_dsharp, KEY_echo, KEY_essen, KEY_exact, KEY_expand,KEY_echo12,176
    KEY_disjoint, KEY_dsharp, KEY_echo, KEY_essen, KEY_exact, KEY_expand,KEY_essen12,176
    KEY_disjoint, KEY_dsharp, KEY_echo, KEY_essen, KEY_exact, KEY_expand,KEY_exact12,176
    KEY_disjoint, KEY_dsharp, KEY_echo, KEY_essen, KEY_exact, KEY_expand,KEY_expand12,176
    KEY_gasp, KEY_intersect, KEY_irred, KEY_lexsort, KEY_make_sparse,KEY_gasp13,250
    KEY_gasp, KEY_intersect, KEY_irred, KEY_lexsort, KEY_make_sparse,KEY_intersect13,250
    KEY_gasp, KEY_intersect, KEY_irred, KEY_lexsort, KEY_make_sparse,KEY_irred13,250
    KEY_gasp, KEY_intersect, KEY_irred, KEY_lexsort, KEY_make_sparse,KEY_lexsort13,250
    KEY_gasp, KEY_intersect, KEY_irred, KEY_lexsort, KEY_make_sparse,KEY_make_sparse13,250
    KEY_map, KEY_mapdc, KEY_minterms, KEY_opo, KEY_opoall,KEY_map14,320
    KEY_map, KEY_mapdc, KEY_minterms, KEY_opo, KEY_opoall,KEY_mapdc14,320
    KEY_map, KEY_mapdc, KEY_minterms, KEY_opo, KEY_opoall,KEY_minterms14,320
    KEY_map, KEY_mapdc, KEY_minterms, KEY_opo, KEY_opoall,KEY_opo14,320
    KEY_map, KEY_mapdc, KEY_minterms, KEY_opo, KEY_opoall,KEY_opoall14,320
    KEY_pair, KEY_pairall, KEY_primes, KEY_qm, KEY_reduce, KEY_sharp,KEY_pair15,379
    KEY_pair, KEY_pairall, KEY_primes, KEY_qm, KEY_reduce, KEY_sharp,KEY_pairall15,379
    KEY_pair, KEY_pairall, KEY_primes, KEY_qm, KEY_reduce, KEY_sharp,KEY_primes15,379
    KEY_pair, KEY_pairall, KEY_primes, KEY_qm, KEY_reduce, KEY_sharp,KEY_qm15,379
    KEY_pair, KEY_pairall, KEY_primes, KEY_qm, KEY_reduce, KEY_sharp,KEY_reduce15,379
    KEY_pair, KEY_pairall, KEY_primes, KEY_qm, KEY_reduce, KEY_sharp,KEY_sharp15,379
    KEY_simplify, KEY_so, KEY_so_both, KEY_stats, KEY_super_gasp, KEY_taut,KEY_simplify16,449
    KEY_simplify, KEY_so, KEY_so_both, KEY_stats, KEY_super_gasp, KEY_taut,KEY_so16,449
    KEY_simplify, KEY_so, KEY_so_both, KEY_stats, KEY_super_gasp, KEY_taut,KEY_so_both16,449
    KEY_simplify, KEY_so, KEY_so_both, KEY_stats, KEY_super_gasp, KEY_taut,KEY_stats16,449
    KEY_simplify, KEY_so, KEY_so_both, KEY_stats, KEY_super_gasp, KEY_taut,KEY_super_gasp16,449
    KEY_simplify, KEY_so, KEY_so_both, KEY_stats, KEY_super_gasp, KEY_taut,KEY_taut16,449
    KEY_test, KEY_equiv, KEY_union, KEY_verify, KEY_MANY_ESPRESSO,KEY_test17,525
    KEY_test, KEY_equiv, KEY_union, KEY_verify, KEY_MANY_ESPRESSO,KEY_equiv17,525
    KEY_test, KEY_equiv, KEY_union, KEY_verify, KEY_MANY_ESPRESSO,KEY_union17,525
    KEY_test, KEY_equiv, KEY_union, KEY_verify, KEY_MANY_ESPRESSO,KEY_verify17,525
    KEY_test, KEY_equiv, KEY_union, KEY_verify, KEY_MANY_ESPRESSO,KEY_MANY_ESPRESSO17,525
    KEY_separate, KEY_xor, KEY_d1merge_in, KEY_fsm,KEY_separate18,592
    KEY_separate, KEY_xor, KEY_d1merge_in, KEY_fsm,KEY_xor18,592
    KEY_separate, KEY_xor, KEY_d1merge_in, KEY_fsm,KEY_d1merge_in18,592
    KEY_separate, KEY_xor, KEY_d1merge_in, KEY_fsm,KEY_fsm18,592
    KEY_unknownKEY_unknown19,644
    char *name;name24,712
    enum keys key;key25,728
    int num_plas;num_plas26,747
    bool needs_offset;needs_offset27,765
    bool needs_dcset;needs_dcset28,788
} option_table [] = {option_table29,810
    char *name;name89,3023
    int value;value90,3039
} debug_table[] = {debug_table91,3054
    char *name;name106,3539
    int *variable;variable107,3555
    int value;value108,3574
} esp_opt_table[] = {esp_opt_table109,3589

src/misc/espresso/mincov.c,425
#define USE_GIMPELUSE_GIMPEL19,166
#define USE_INDEP_SETUSE_INDEP_SET20,185
#define fail(fail26,296
sm_minimum_cover(A, weight, heuristic, debug_level)sm_minimum_cover34,469
sm_mincov(A, select, weight, lb, bound, depth, stats)sm_mincov119,3085
select_column(A, weight, indep)select_column271,7683
select_essential(A, select, weight, bound)select_essential328,9176
verify_cover(A, cover)verify_cover369,10236

src/misc/espresso/primes.c,253
pcover primes_consensus(T)primes_consensus21,325
primes_consensus_special_cases(T, Tnew)primes_consensus_special_cases46,888
primes_consensus_merge(Tl, Tr, cl, cr)primes_consensus_merge121,2790
and_with_cofactor(A, cof)and_with_cofactor158,3586

src/misc/espresso/espresso.c,43
pcover espresso(F, D1, R)espresso53,1172

src/misc/espresso/cubehack.c,204
cautious_define_cube_size(n)cautious_define_cube_size35,529
define_cube_size(n)define_cube_size51,825
undefine_cube_size()undefine_cube_size111,2346
set_espresso_flags()set_espresso_flags129,2661

src/misc/espresso/gasp.c,334
static pcover reduce_gasp(F, D)reduce_gasp44,1221
pcover expand_gasp(F, D, R, Foriginal)expand_gasp83,2305
void expand1_gasp(F, D, R, Foriginal, c1index, G)expand1_gasp107,2830
pcover irred_gasp(F, D, G)irred_gasp192,5501
pcover last_gasp(F, D, R, cost)last_gasp204,5711
pcover super_gasp(F, D, R, cost)super_gasp219,6038

src/misc/espresso/hack.c,583
void map_dcset(PLA)map_dcset15,143
void map_output_symbolic(PLA)map_output_symbolic89,2470
void find_inputs(A, PLA, list, base, value, newF, newD)find_inputs193,5741
void map_symbolic(PLA)map_symbolic288,8043
pcover map_symbolic_cover(T, list, base)map_symbolic_cover370,11149
void form_bitvector(p, base, value, list)form_bitvector383,11345
void symbolic_hack_labels(PLA, list, compress, new_size, old_size, size_added)symbolic_hack_labels410,12166
static pcover fsm_simplify(F)fsm_simplify469,13781
void disassemble_fsm(PLA, verbose_mode)disassemble_fsm482,13979

src/misc/espresso/mincov_int.h,1159
typedef struct stats_struct stats_t;stats_t18,211
struct stats_struct {stats_struct19,248
    int debug;            /* 1 if debugging is enabled */debug20,270
    int max_print_depth;    /* dump stats for levels up to this level */max_print_depth21,328
    int max_depth;        /* deepest the recursion has gone */max_depth22,401
    int nodes;            /* total nodes visited */nodes23,464
    int component;        /* currently solving a component */component24,516
    int comp_count;        /* number of components detected */comp_count25,578
    int gimpel_count;        /* number of times Gimpel reduction applied */gimpel_count26,641
    int gimpel;            /* currently inside Gimpel reduction */gimpel27,717
    long start_time;        /* cpu time when the covering started */start_time28,784
    int no_branching;no_branching29,853
    int lower_bound;lower_bound30,875
typedef struct solution_struct solution_t;solution_t35,902
struct solution_struct {solution_struct36,945
    sm_row *row;row37,970
    int cost;cost38,987
#define ABC__misc__espresso__mincov_int_hABC__misc__espresso__mincov_int_h55,1352

src/misc/espresso/exact.c,260
minimize_exact(F, D, R, exact_cover)minimize_exact30,377
minimize_exact_literals(F, D, R, exact_cover)minimize_exact_literals39,522
do_minimize(F, D, R, exact_cover, weighted)do_minimize49,684
dump_irredundant(E, Rt, Rp, table)dump_irredundant132,2865

src/misc/espresso/verify.c,192
bool verify(F, Fold, Dold)verify22,295
bool PLA_verify(PLA1, PLA2)PLA_verify60,1296
void PLA_permute(PLA1, PLA2)PLA_permute89,2096
bool check_consistency(PLA)check_consistency142,3376

src/misc/espresso/expand.c,782
pcover expand(F, R, nonsparse)expand53,1546
void expand1(BB, CC, RAISE, FREESET, OVEREXPANDED_CUBE, SUPER_CUBE,expand1135,3882
void essen_parts(BB, CC, RAISE, FREESET)essen_parts210,6687
void essen_raising(BB, RAISE, FREESET)essen_raising259,8267
void elim_lowering(BB, CC, RAISE, FREESET)elim_lowering288,9229
int most_frequent(CC, FREESET)most_frequent338,10935
void setup_BB_CC(BB, CC)setup_BB_CC375,11960
void select_feasible(BB, CC, RAISE, FREESET, SUPER_CUBE, num_covered)select_feasible404,12777
#define NEWNEW483,15309
bool feasibly_covered(BB, c, RAISE, new_lower)feasibly_covered521,16402
void mincov(BB, RAISE, FREESET)mincov560,17699
pcover find_all_primes(BB, RAISE, FREESET)find_all_primes634,19851
pcover all_primes(F, R)all_primes669,20706

src/misc/espresso/sminterf.c,50
do_sm_minimum_cover(A)do_sm_minimum_cover17,149

src/misc/espresso/compl.c,981
#define USE_COMPL_LIFT USE_COMPL_LIFT32,834
#define USE_COMPL_LIFT_ONSET USE_COMPL_LIFT_ONSET33,870
#define USE_COMPL_LIFT_ONSET_COMPLEX USE_COMPL_LIFT_ONSET_COMPLEX34,908
#define NO_LIFTING NO_LIFTING35,950
pcover complement(T)complement49,1329
static bool compl_special_cases(T, Tbar)compl_special_cases89,2322
static pcover compl_merge(T1, L, R, cl, cr, var, lifting)compl_merge172,4774
static void compl_lift(A1, B1, bcube, var)compl_lift266,7378
static void compl_lift_onset(A1, T, bcube, var)compl_lift_onset303,8431
static void compl_lift_onset_complex(A1, T, var)compl_lift_onset_complex338,9417
static void compl_d1merge(L1, R1)compl_d1merge376,10422
static pcover compl_cube(p)compl_cube400,11038
void simp_comp(T, Tnew, Tbar)simp_comp425,11717
static bool simp_comp_special_cases(T, Tnew, Tbar)simp_comp_special_cases474,12996
pcover simplify(T)simplify566,15511
static bool simplify_special_cases(T, Tnew)simplify_special_cases611,16550

src/misc/hash/hash.h,169
#define ABC__misc__hash__hash_hABC__misc__hash__hash_h22,517
#define inline inline26,565
int Hash_DefaultHashFunc(int key, int nBins) {Hash_DefaultHashFunc57,1853

src/misc/hash/hashFlt.h,1345
#define ABC__misc__hash__hashFlt_hABC__misc__hash__hashFlt_h22,515
typedef struct Hash_Flt_t_       Hash_Flt_t;Hash_Flt_t45,1345
typedef struct Hash_Flt_Entry_t_ Hash_Flt_Entry_t;Hash_Flt_Entry_t46,1390
struct Hash_Flt_Entry_t_Hash_Flt_Entry_t_48,1442
  int                              key;key50,1469
  float                            data;data51,1509
  struct Hash_Flt_Entry_t_ *       pNext;pNext52,1550
struct Hash_Flt_t_ Hash_Flt_t_55,1596
  int                             nSize;nSize57,1618
  int                             nBins;nBins58,1659
  int (* fHash)(int key, int nBins);fHash59,1700
  Hash_Flt_Entry_t **             pArray;pArray60,1737
#define Hash_FltForEachEntry(Hash_FltForEachEntry69,2005
static inline Hash_Flt_t * Hash_FltAlloc( int nBins )Hash_FltAlloc88,2694
static inline int Hash_FltExists( Hash_Flt_t *p, int key )Hash_FltExists115,3291
static inline void Hash_FltWriteEntry( Hash_Flt_t *p, int key, float data )Hash_FltWriteEntry148,3996
static inline float Hash_FltEntry( Hash_Flt_t *p, int key, int fCreate )Hash_FltEntry191,4998
static inline float* Hash_FltEntryPtr( Hash_Flt_t *p, int key )Hash_FltEntryPtr235,6010
static inline void Hash_FltRemove( Hash_Flt_t *p, int key )Hash_FltRemove275,6919
static inline void Hash_FltFree( Hash_Flt_t *p ) {Hash_FltFree312,7687

src/misc/hash/hashInt.h,1252
#define ABC__misc__hash__hashInt_hABC__misc__hash__hashInt_h22,515
typedef struct Hash_Int_t_       Hash_Int_t;Hash_Int_t45,1345
typedef struct Hash_Int_Entry_t_ Hash_Int_Entry_t;Hash_Int_Entry_t46,1390
struct Hash_Int_Entry_t_Hash_Int_Entry_t_48,1442
  int                              key;key50,1469
  int                            data;data51,1509
  struct Hash_Int_Entry_t_ *       pNext;pNext52,1548
struct Hash_Int_t_ Hash_Int_t_55,1594
  int                             nSize;nSize57,1616
  int                             nBins;nBins58,1657
  int (* fHash)(int key, int nBins);fHash59,1698
  Hash_Int_Entry_t **             pArray;pArray60,1735
#define Hash_IntForEachEntry(Hash_IntForEachEntry69,2003
static inline Hash_Int_t * Hash_IntAlloc( int nBins )Hash_IntAlloc88,2692
static inline int Hash_IntExists( Hash_Int_t *p, int key)Hash_IntExists115,3291
static inline void Hash_IntWriteEntry( Hash_Int_t *p, int key, int data )Hash_IntWriteEntry148,3995
static inline int Hash_IntEntry( Hash_Int_t *p, int key, int fCreate )Hash_IntEntry191,4993
static inline int* Hash_IntEntryPtr( Hash_Int_t *p, int key )Hash_IntEntryPtr235,5999
static inline void Hash_IntFree( Hash_Int_t *p ) {Hash_IntFree275,6902

src/misc/hash/hashPtr.h,1347
#define ABC__misc__hash__hashPtr_hABC__misc__hash__hashPtr_h22,515
typedef struct Hash_Ptr_t_       Hash_Ptr_t;Hash_Ptr_t45,1345
typedef struct Hash_Ptr_Entry_t_ Hash_Ptr_Entry_t;Hash_Ptr_Entry_t46,1390
struct Hash_Ptr_Entry_t_Hash_Ptr_Entry_t_48,1442
  int                              key;key50,1469
  void *                           data;data51,1509
  struct Hash_Ptr_Entry_t_ *       pNext;pNext52,1550
struct Hash_Ptr_t_ Hash_Ptr_t_55,1596
  int                             nSize;nSize57,1618
  int                             nBins;nBins58,1659
  int (* fHash)(int key, int nBins);fHash59,1700
  Hash_Ptr_Entry_t **             pArray;pArray60,1737
#define Hash_PtrForEachEntry(Hash_PtrForEachEntry69,2005
static inline Hash_Ptr_t * Hash_PtrAlloc( int nBins )Hash_PtrAlloc88,2695
static inline int Hash_PtrExists( Hash_Ptr_t *p, int key )Hash_PtrExists115,3292
static inline void Hash_PtrWriteEntry( Hash_Ptr_t *p, int key, void * data )Hash_PtrWriteEntry146,3929
static inline void * Hash_PtrEntry( Hash_Ptr_t *p, int key, int fCreate )Hash_PtrEntry189,4932
static inline void** Hash_PtrEntryPtr( Hash_Ptr_t *p, int key )Hash_PtrEntryPtr233,5947
static inline void* Hash_PtrRemove( Hash_Ptr_t *p, int key )Hash_PtrRemove273,6888
static inline void Hash_PtrFree( Hash_Ptr_t *p ) Hash_PtrFree311,7683

src/misc/hash/hashGen.h,1944
#define ABC__misc__hash__hashGen_hABC__misc__hash__hashGen_h22,531
typedef struct Hash_Gen_t_       Hash_Gen_t;Hash_Gen_t43,1307
typedef struct Hash_Gen_Entry_t_ Hash_Gen_Entry_t;Hash_Gen_Entry_t44,1352
struct Hash_Gen_Entry_t_Hash_Gen_Entry_t_46,1404
  char *                          key;key48,1431
  void *                          data;data49,1470
  struct Hash_Gen_Entry_t_ *     pNext;pNext50,1510
typedef int (*Hash_GenHashFunction_t)(void* key, int nBins);Hash_GenHashFunction_t53,1554
typedef int (*Hash_GenCompFunction_t)(void* key, void* data);Hash_GenCompFunction_t54,1615
struct Hash_Gen_t_ Hash_Gen_t_56,1678
  int                             nSize;nSize58,1700
  int                             nBins;nBins59,1741
  Hash_GenHashFunction_t          fHash;fHash60,1782
  Hash_GenCompFunction_t          fComp;fComp61,1823
  int                             fFreeKey;fFreeKey62,1864
  Hash_Gen_Entry_t **             pArray;pArray63,1908
#define Hash_GenForEachEntry(Hash_GenForEachEntry72,2176
static int Hash_DefaultHashFuncStr( void * key, int nBins )Hash_DefaultHashFuncStr91,2849
static int Hash_DefaultCmpFuncStr( void * key1, void * key2 )Hash_DefaultCmpFuncStr102,3047
static int Hash_DefaultHashFuncInt( void * key, int nBins )Hash_DefaultHashFuncInt118,3448
static int Hash_DefaultCmpFuncInt( void * key1, void* key2 )Hash_DefaultCmpFuncInt134,3825
static inline Hash_Gen_t * Hash_GenAlloc( Hash_GenAlloc150,4212
static inline int Hash_GenExists( Hash_Gen_t *p, void * key )Hash_GenExists179,5026
static inline void Hash_GenWriteEntry( Hash_Gen_t *p, void * key, void * data )Hash_GenWriteEntry210,5676
static inline Hash_Gen_Entry_t * Hash_GenEntry( Hash_Gen_t *p, void * key, int fCreate )Hash_GenEntry253,6701
static inline void* Hash_GenRemove( Hash_Gen_t *p, void * key )Hash_GenRemove296,7718
static inline void Hash_GenFree( Hash_Gen_t *p ) Hash_GenFree337,8604

src/misc/bbl/bblif.c,9998
typedef struct Vec_Int_t_ Vec_Int_t;Vec_Int_t37,938
struct Vec_Int_t_ Vec_Int_t_38,975
    int         nCap;nCap40,996
    int         nSize;nSize41,1018
    int *       pArray;pArray42,1041
typedef struct Vec_Str_t_ Vec_Str_t;Vec_Str_t46,1093
struct Vec_Str_t_ Vec_Str_t_47,1130
    int         nCap;nCap49,1151
    int         nSize;nSize50,1173
    char *      pArray;pArray51,1196
struct Bbl_Obj_t_Bbl_Obj_t_55,1242
    int         Id;              // user IDId57,1262
    int         Fnc;             // functionalityFnc58,1306
    unsigned    fCi     :  1;    // combinational inputfCi59,1356
    unsigned    fCo     :  1;    // combinational outputfCo60,1412
    unsigned    fBox    :  1;    // subcircuitfBox61,1469
    unsigned    fMark   :  1;    // temporary markfMark62,1516
    unsigned    nFanins : 28;    // fanin numbernFanins63,1567
    int         pFanins[0];      // fanin arraypFanins64,1616
typedef struct Bbl_Fnc_t_ Bbl_Fnc_t;Bbl_Fnc_t68,1687
struct Bbl_Fnc_t_Bbl_Fnc_t_69,1724
    int         nWords;          // word numbernWords71,1744
    int         pWords[0];       // word arraypWords72,1792
typedef struct Bbl_Ent_t_ Bbl_Ent_t;Bbl_Ent_t76,1862
struct Bbl_Ent_t_Bbl_Ent_t_77,1899
    int         iFunc;           // function handleiFunc79,1919
    int         iNext;           // next entry handleiNext80,1971
struct Bbl_Man_t_Bbl_Man_t_84,2045
    Vec_Str_t * pName;           // design namepName87,2082
    Vec_Str_t * pObjs;           // vector of objectspObjs88,2130
    Vec_Str_t * pFncs;           // vector of functionspFncs89,2184
    Vec_Int_t * vId2Obj;         // mapping user IDs into objectsvId2Obj91,2260
    Vec_Int_t * vObj2Id;         // mapping objects into user IDsvObj2Id92,2326
    Vec_Int_t * vFaninNums;      // mapping user IDs into fanin numbervFaninNums93,2392
    int         nFileSize;       // file sizenFileSize95,2484
    char *      pFileData;       // file contentspFileData96,2530
    Vec_Str_t * pEnts;           // vector of entriespEnts98,2598
    int         SopMap[17][17];  // mapping vars x cubes into entry handlesSopMap99,2652
static inline int         Bbl_ObjIsCi( Bbl_Obj_t * pObj )          { return pObj->fCi;                                        } Bbl_ObjIsCi102,2732
static inline int         Bbl_ObjIsCo( Bbl_Obj_t * pObj )          { return pObj->fCo;                                        } Bbl_ObjIsCo103,2861
static inline int         Bbl_ObjIsNode( Bbl_Obj_t * pObj )        { return!pObj->fCi && !pObj->fCo;                          } Bbl_ObjIsNode104,2990
static inline int         Bbl_ObjFaninNum( Bbl_Obj_t * pObj )      { return pObj->nFanins;                                    } Bbl_ObjFaninNum106,3120
static inline Bbl_Obj_t * Bbl_ObjFanin( Bbl_Obj_t * pObj, int i )  { return (Bbl_Obj_t *)(((char *)pObj) - pObj->pFanins[i]); } Bbl_ObjFanin107,3249
static inline int         Bbl_ObjSize( Bbl_Obj_t * pObj )          { return sizeof(Bbl_Obj_t) + sizeof(int) * pObj->nFanins;  } Bbl_ObjSize109,3379
static inline int         Bbl_FncSize( Bbl_Fnc_t * pFnc )          { return sizeof(Bbl_Fnc_t) + sizeof(int) * pFnc->nWords;   } Bbl_FncSize110,3508
static inline Bbl_Obj_t * Bbl_VecObj( Vec_Str_t * p, int h )       { return (Bbl_Obj_t *)(p->pArray + h);                     } Bbl_VecObj112,3638
static inline Bbl_Fnc_t * Bbl_VecFnc( Vec_Str_t * p, int h )       { return (Bbl_Fnc_t *)(p->pArray + h);                     } Bbl_VecFnc113,3767
static inline Bbl_Ent_t * Bbl_VecEnt( Vec_Str_t * p, int h )       { return (Bbl_Ent_t *)(p->pArray + h);                     } Bbl_VecEnt114,3896
static inline char *      Bbl_ManSop( Bbl_Man_t * p, int h )       { return (char *)Bbl_VecFnc(p->pFncs, h)->pWords;          } Bbl_ManSop116,4026
static inline Bbl_Obj_t * Bbl_ManObj( Bbl_Man_t * p, int Id )      { return Bbl_VecObj(p->pObjs, p->vId2Obj->pArray[Id]);     } Bbl_ManObj117,4155
#define Bbl_ManForEachObj_int(Bbl_ManForEachObj_int119,4285
#define Bbl_ManForEachFnc_int(Bbl_ManForEachFnc_int121,4432
#define Bbl_ObjForEachFanin_int(Bbl_ObjForEachFanin_int123,4579
#define BBLIF_ALLOC(BBLIF_ALLOC126,4725
#define BBLIF_CALLOC(BBLIF_CALLOC127,4800
#define BBLIF_FALLOC(BBLIF_FALLOC128,4875
#define BBLIF_FREE(BBLIF_FREE129,4987
#define BBLIF_REALLOC(BBLIF_REALLOC130,5071
static inline Vec_Int_t * Vec_IntAlloc( int nCap )Vec_IntAlloc149,5739
static inline Vec_Int_t * Vec_IntStart( int nSize )Vec_IntStart172,6306
static inline Vec_Int_t * Vec_IntStartNatural( int nSize )Vec_IntStartNatural192,6785
static inline Vec_Int_t * Vec_IntAllocArray( int * pArray, int nSize )Vec_IntAllocArray214,7299
static inline void Vec_IntFree( Vec_Int_t * p )Vec_IntFree235,7749
static inline int Vec_IntSize( Vec_Int_t * p )Vec_IntSize252,8086
static inline int Vec_IntEntry( Vec_Int_t * p, int i )Vec_IntEntry268,8393
static inline void Vec_IntWriteEntry( Vec_Int_t * p, int i, int Entry )Vec_IntWriteEntry285,8750
static inline void Vec_IntAddToEntry( Vec_Int_t * p, int i, int Addition )Vec_IntAddToEntry302,9125
static inline int Vec_IntEntryLast( Vec_Int_t * p )Vec_IntEntryLast319,9507
static inline void Vec_IntGrow( Vec_Int_t * p, int nCapMin )Vec_IntGrow336,9901
static inline void Vec_IntFill( Vec_Int_t * p, int nSize, int Fill )Vec_IntFill356,10402
static inline void Vec_IntFillExtra( Vec_Int_t * p, int nSize, int Fill )Vec_IntFillExtra376,10881
static inline int Vec_IntGetEntry( Vec_Int_t * p, int i )Vec_IntGetEntry401,11523
static inline void Vec_IntSetEntry( Vec_Int_t * p, int i, int Entry )Vec_IntSetEntry418,11941
static inline void Vec_IntShrink( Vec_Int_t * p, int nSizeNew )Vec_IntShrink435,12325
static inline void Vec_IntClear( Vec_Int_t * p )Vec_IntClear452,12689
static inline void Vec_IntPush( Vec_Int_t * p, int Entry )Vec_IntPush468,12995
static inline Vec_Str_t * Vec_StrAlloc( int nCap )Vec_StrAlloc495,13536
static inline Vec_Str_t * Vec_StrAllocArray( char * pArray, int nSize )Vec_StrAllocArray518,14102
char * Vec_StrFetch( Vec_Str_t * p, int nBytes )Vec_StrFetch539,14578
void Vec_StrWrite( FILE * pFile, Vec_Str_t * p )Vec_StrWrite561,15097
Vec_Str_t * Vec_StrRead( char ** ppStr )Vec_StrRead578,15511
static inline int Vec_StrSize( Vec_Str_t * p )Vec_StrSize600,16001
static inline void Vec_StrFree( Vec_Str_t * p )Vec_StrFree616,16308
int Bbl_ManFileSize( char * pFileName )Bbl_ManFileSize637,16681
char * Bbl_ManFileRead( char * pFileName )Bbl_ManFileRead664,17303
void Bbl_ManDumpBinaryBlif( Bbl_Man_t * p, char * pFileName )Bbl_ManDumpBinaryBlif691,17916
Bbl_Man_t * Bbl_ManReadBinaryBlif( char * pFileName )Bbl_ManReadBinaryBlif712,18434
void Bbl_ManPrintStats( Bbl_Man_t * p )Bbl_ManPrintStats749,19482
void Bbl_ManStop( Bbl_Man_t * p )Bbl_ManStop775,20377
Bbl_Man_t * Bbl_ManStart( char * pName )Bbl_ManStart806,21152
void Bbl_ManSortCubes( char ** pCubes, int nCubes, int nVars )Bbl_ManSortCubes839,22034
char * Bbl_ManSortSop( char * pSop, int nVars )Bbl_ManSortSop864,22723
int Bbl_ManCreateEntry( Bbl_Man_t * p, int iFunc, int iNext )Bbl_ManCreateEntry901,23792
int Bbl_ManSopCheckUnique( Bbl_Man_t * p, char * pSop, int nVars, int nCubes, int iFunc )Bbl_ManSopCheckUnique921,24334
int Bbl_ManSaveSop( Bbl_Man_t * p, char * pSop, int nVars )Bbl_ManSaveSop954,25416
void Bbl_ManCreateObject( Bbl_Man_t * p, Bbl_Type_t Type, int ObjId, int nFanins, char * pSop )Bbl_ManCreateObject988,26511
void Bbl_ManAddFanin( Bbl_Man_t * p, int ObjId, int FaninId )Bbl_ManAddFanin1023,27727
int Bbl_ManCheck( Bbl_Man_t * p )Bbl_ManCheck1062,28935
int         Bbl_ObjIsInput( Bbl_Obj_t * p )                      { return Bbl_ObjIsCi(p);                      }Bbl_ObjIsInput1093,30080
int         Bbl_ObjIsOutput( Bbl_Obj_t * p )                     { return Bbl_ObjIsCo(p);                      }Bbl_ObjIsOutput1094,30193
int         Bbl_ObjIsLut( Bbl_Obj_t * p )                        { return Bbl_ObjIsNode(p);                    }Bbl_ObjIsLut1095,30306
int         Bbl_ObjId( Bbl_Obj_t * p )                           { return p->Id;                               }Bbl_ObjId1096,30419
int         Bbl_ObjIdOriginal( Bbl_Man_t * pMan, Bbl_Obj_t * p ) { assert(0); return Vec_IntEntry(pMan->vObj2Id, p->Id);  }Bbl_ObjIdOriginal1097,30532
int         Bbl_ObjFaninNumber( Bbl_Obj_t * p )                  { return Bbl_ObjFaninNum(p);                  }Bbl_ObjFaninNumber1098,30656
char *      Bbl_ObjSop( Bbl_Man_t * pMan, Bbl_Obj_t * p )        { return Bbl_ManSop(pMan, p->Fnc);            }Bbl_ObjSop1099,30769
int         Bbl_ObjIsMarked( Bbl_Obj_t * p )                     { return p->fMark;                            }Bbl_ObjIsMarked1100,30882
void        Bbl_ObjMark( Bbl_Obj_t * p )                         { p->fMark = 1;                               }Bbl_ObjMark1101,30995
int         Bbl_ObjFncHandle( Bbl_Obj_t * p )                    { return p->Fnc;                              }Bbl_ObjFncHandle1102,31108
char * Bbl_ManName( Bbl_Man_t * p )Bbl_ManName1115,31486
int Bbl_ManFncSize( Bbl_Man_t * p )Bbl_ManFncSize1131,31827
Bbl_Obj_t * Bbl_ManObjFirst( Bbl_Man_t * p )Bbl_ManObjFirst1147,32154
Bbl_Obj_t * Bbl_ManObjNext( Bbl_Man_t * p, Bbl_Obj_t * pObj )Bbl_ManObjNext1163,32499
Bbl_Obj_t * Bbl_ObjFaninFirst( Bbl_Obj_t * p )Bbl_ObjFaninFirst1181,32987
Bbl_Obj_t * Bbl_ObjFaninNext( Bbl_Obj_t * p, Bbl_Obj_t * pPrev )Bbl_ObjFaninNext1197,33356
void Bbl_ManDumpBlif( Bbl_Man_t * p, char * pFileName )Bbl_ManDumpBlif1218,33895
char * Bbl_ManTruthToSop( unsigned * pTruth, int nVars )Bbl_ManTruthToSop1273,35794
static inline void Bbl_ManSopToTruthElem( int nVars, unsigned ** pVars )Bbl_ManSopToTruthElem1323,37254
unsigned * Bbl_ManSopToTruth( char * pSop, int nVars )Bbl_ManSopToTruth1362,38535
void Bbl_ManTestTruth( char * pSop, int nVars )Bbl_ManTestTruth1422,40559
void Bbl_ManSimpleDemo()Bbl_ManSimpleDemo1446,41266

src/misc/bbl/bblif.h,738
#define ABC__aig__bbl__bblif_hABC__aig__bbl__bblif_h22,562
#define inline inline196,10264
    BBL_OBJ_NONE,                // 0: non-existent objectBBL_OBJ_NONE205,10548
    BBL_OBJ_CI,                  // 1: primary inputBBL_OBJ_CI206,10607
    BBL_OBJ_CO,                  // 2: primary outputBBL_OBJ_CO207,10660
    BBL_OBJ_NODE,                // 3: buffer nodeBBL_OBJ_NODE208,10714
    BBL_OBJ_VOID                 // 4: unused objectBBL_OBJ_VOID209,10765
} Bbl_Type_t;Bbl_Type_t210,10818
typedef struct Bbl_Man_t_ Bbl_Man_t;Bbl_Man_t213,10849
typedef struct Bbl_Obj_t_ Bbl_Obj_t;Bbl_Obj_t216,10902
#define Bbl_ManForEachObj(Bbl_ManForEachObj257,12896
#define Bbl_ObjForEachFanin(Bbl_ObjForEachFanin260,13074

src/misc/mem/mem.c,3821
struct Mem_Fixed_t_Mem_Fixed_t_35,850
    int           nEntrySize;    // the size of one entrynEntrySize38,916
    int           nEntriesAlloc; // the total number of entries allocatednEntriesAlloc39,974
    int           nEntriesUsed;  // the number of entries in usenEntriesUsed40,1048
    int           nEntriesMax;   // the max number of entries in usenEntriesMax41,1113
    char *        pEntriesFree;  // the linked list of free entriespEntriesFree42,1182
    int           nChunkSize;    // the size of one chunknChunkSize45,1293
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc46,1351
    int           nChunks;       // the current number of memory chunks nChunks47,1424
    char **       pChunks;       // the allocated memorypChunks48,1497
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed51,1573
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc52,1646
struct Mem_Flex_t_Mem_Flex_t_55,1703
    int           nEntriesUsed;  // the number of entries allocatednEntriesUsed58,1768
    char *        pCurrent;      // the current pointer to free memorypCurrent59,1836
    char *        pEnd;          // the first entry outside the free memorypEnd60,1907
    int           nChunkSize;    // the size of one chunknChunkSize63,2026
    int           nChunksAlloc;  // the maximum number of memory chunks nChunksAlloc64,2084
    int           nChunks;       // the current number of memory chunks nChunks65,2157
    char **       pChunks;       // the allocated memorypChunks66,2230
    int           nMemoryUsed;   // memory used in the allocated entriesnMemoryUsed69,2306
    int           nMemoryAlloc;  // memory allocatednMemoryAlloc70,2379
struct Mem_Step_t_Mem_Step_t_73,2436
    int             nMems;              // the number of fixed memory managers employednMems75,2457
    Mem_Fixed_t **  pMems;              // memory managers: 2^1 words, 2^2 words, etcpMems76,2545
    int             nMapSize;           // the size of the memory arraynMapSize77,2631
    Mem_Fixed_t **  pMap;               // maps the number of bytes into its memory managerpMap78,2703
    int             nLargeChunksAlloc;  // the maximum number of large memory chunksnLargeChunksAlloc79,2795
    int             nLargeChunks;       // the current number of large memory chunksnLargeChunks80,2880
    void **         pLargeChunks;       // the allocated large memory chunkspLargeChunks81,2965
Mem_Fixed_t * Mem_FixedStart( int nEntrySize )Mem_FixedStart100,3665
void Mem_FixedStop( Mem_Fixed_t * p, int fVerbose )Mem_FixedStop139,4541
char * Mem_FixedEntryFetch( Mem_Fixed_t * p )Mem_FixedEntryFetch168,5377
void Mem_FixedEntryRecycle( Mem_Fixed_t * p, char * pEntry )Mem_FixedEntryRecycle219,6978
void Mem_FixedRestart( Mem_Fixed_t * p )Mem_FixedRestart239,7522
int Mem_FixedReadMemUsage( Mem_Fixed_t * p )Mem_FixedReadMemUsage277,8492
int Mem_FixedReadMaxEntriesUsed( Mem_Fixed_t * p )Mem_FixedReadMaxEntriesUsed293,8804
Mem_Flex_t * Mem_FlexStart()Mem_FlexStart311,9209
void Mem_FlexStop( Mem_Flex_t * p, int fVerbose )Mem_FlexStop343,9875
char * Mem_FlexEntryFetch( Mem_Flex_t * p, int nBytes )Mem_FlexEntryFetch372,10631
void Mem_FlexRestart( Mem_Flex_t * p )Mem_FlexRestart417,12081
int Mem_FlexReadMemUsage( Mem_Flex_t * p )Mem_FlexReadMemUsage445,12774
Mem_Step_t * Mem_StepStart( int nSteps )Mem_StepStart474,13786
void Mem_StepStop( Mem_Step_t * p, int fVerbose )Mem_StepStop510,14893
char * Mem_StepEntryFetch( Mem_Step_t * p, int nBytes )Mem_StepEntryFetch537,15535
void Mem_StepEntryRecycle( Mem_Step_t * p, char * pEntry, int nBytes )Mem_StepEntryRecycle570,16528
int Mem_StepReadMemUsage( Mem_Step_t * p )Mem_StepReadMemUsage593,17021

src/misc/mem/mem2.h,3316
#define ABC__aig__mem__mem2_hABC__aig__mem__mem2_h22,526
typedef struct Mmr_Flex_t_     Mmr_Flex_t;     Mmr_Flex_t33,833
typedef struct Mmr_Fixed_t_    Mmr_Fixed_t;    Mmr_Fixed_t34,881
typedef struct Mmr_Step_t_     Mmr_Step_t;     Mmr_Step_t35,929
struct Mmr_Flex_t_Mmr_Flex_t_37,978
    int           nPageBase;     // log2 page size in wordsnPageBase39,999
    int           PageMask;      // page maskPageMask40,1059
    int           nEntries;      // entries allocatednEntries41,1105
    int           nEntriesMax;   // max number of enries usednEntriesMax42,1159
    int           iNext;         // next word to be usediNext43,1221
    Vec_Ptr_t     vPages;        // memory pagesvPages44,1278
struct Mmr_Fixed_t_Mmr_Fixed_t_47,1331
    int           nPageBase;     // log2 page size in wordsnPageBase49,1353
    int           PageMask;      // page maskPageMask50,1413
    int           nEntryWords;   // entry size in wordsnEntryWords51,1459
    int           nEntries;      // entries allocatednEntries52,1515
    int           nEntriesMax;   // max number of enries usednEntriesMax53,1569
    Vec_Ptr_t     vPages;        // memory pagesvPages54,1631
    Vec_Int_t     vFrees;        // free entriesvFrees55,1680
struct Mmr_Step_t_Mmr_Step_t_58,1733
    int           nBits;         // the number of bitsnBits60,1754
    int           uMask;         // the number of managers minus 1uMask61,1809
    int           nEntries;      // the number of entriesnEntries62,1876
    int           nEntriesMax;   // the max number of entriesnEntriesMax63,1934
    int           nEntriesAll;   // the total number of entriesnEntriesAll64,1996
    Mmr_Fixed_t   pMems[0];      // memory managers: 2^0 words, 2^1 words, etcpMems65,2060
static inline Mmr_Flex_t * Mmr_FlexStart( int nPageBase )Mmr_FlexStart83,2598
static inline void Mmr_FlexStop( Mmr_Flex_t * p )Mmr_FlexStop92,2839
static inline word * Mmr_FlexEntry( Mmr_Flex_t * p, int h )Mmr_FlexEntry105,3397
static inline int Mmr_FlexFetch( Mmr_Flex_t * p, int nWords )Mmr_FlexFetch110,3584
static inline void Mmr_FlexRelease( Mmr_Flex_t * p, int h )Mmr_FlexRelease125,4065
static inline void Mmr_FixedCreate( Mmr_Fixed_t * p, int nPageBase, int nEntryWords )Mmr_FixedCreate148,4680
static inline Mmr_Fixed_t * Mmr_FixedStart( int nPageBase, int nEntryWords )Mmr_FixedStart155,4944
static inline void Mmr_FixedStop( Mmr_Fixed_t * p, int fFreeLast )Mmr_FixedStop161,5141
static inline word * Mmr_FixedEntry( Mmr_Fixed_t * p, int h )Mmr_FixedEntry176,5801
static inline int Mmr_FixedFetch( Mmr_Fixed_t * p )Mmr_FixedFetch181,6023
static inline void Mmr_FixedRecycle( Mmr_Fixed_t * p, int h )Mmr_FixedRecycle195,6560
static inline int Mmr_FixedMemory( Mmr_Fixed_t * p )Mmr_FixedMemory201,6752
static inline Mmr_Step_t * Mmr_StepStart( int nPageBase, int nWordBase )Mmr_StepStart218,7102
static inline void Mmr_StepStop( Mmr_Step_t * p )Mmr_StepStop229,7506
static inline word * Mmr_StepEntry( Mmr_Step_t * p, int h )Mmr_StepEntry236,7670
static inline int Mmr_StepFetch( Mmr_Step_t * p, int nWords )Mmr_StepFetch241,7841
static inline void Mmr_StepRecycle( Mmr_Step_t * p, int h )Mmr_StepRecycle249,8129
static inline int Mmr_StepMemory( Mmr_Step_t * p )Mmr_StepMemory254,8280

src/misc/mem/mem.h,256
#define ABC__aig__mem__mem_hABC__aig__mem__mem_h22,523
typedef struct Mem_Fixed_t_    Mem_Fixed_t;    Mem_Fixed_t33,837
typedef struct Mem_Flex_t_     Mem_Flex_t;     Mem_Flex_t34,885
typedef struct Mem_Step_t_     Mem_Step_t;     Mem_Step_t35,933

src/misc/util/utilSort.c,2122
void Abc_SortMerge( int * p1Beg, int * p1End, int * p2Beg, int * p2End, int * pOut )Abc_SortMerge49,1374
void Abc_Sort_rec( int * pInBeg, int * pInEnd, int * pOutBeg )Abc_Sort_rec80,2234
void Abc_MergeSort( int * pInput, int nSize )Abc_MergeSort129,3600
void Abc_MergeSortCostMerge( int * p1Beg, int * p1End, int * p2Beg, int * p2End, int * pOut )Abc_MergeSortCostMerge152,4099
void Abc_MergeSortCost_rec( int * pInBeg, int * pInEnd, int * pOutBeg )Abc_MergeSortCost_rec183,5100
int * Abc_MergeSortCost( int * pCosts, int nSize )Abc_MergeSortCost238,6771
int Abc_SortNumCompare( int * pNum1, int * pNum2 )Abc_SortNumCompare382,10743
void Abc_SortTest()Abc_SortTest398,11091
int Abc_QuickSort1CompareInc( word * p1, word * p2 )Abc_QuickSort1CompareInc461,12708
int Abc_QuickSort1CompareDec( word * p1, word * p2 )Abc_QuickSort1CompareDec469,12906
void Abc_QuickSort1( word * pData, int nSize, int fDecrease )Abc_QuickSort1477,13104
static inline void Abc_SelectSortInc( word * pData, int nSize )Abc_SelectSortInc513,14439
static inline void Abc_SelectSortDec( word * pData, int nSize )Abc_SelectSortDec525,14780
void Abc_QuickSort2Inc_rec( word * pData, int l, int r )Abc_QuickSort2Inc_rec538,15122
void Abc_QuickSort2Dec_rec( word * pData, int l, int r )Abc_QuickSort2Dec_rec564,15788
void Abc_QuickSort3Inc_rec( word * pData, int l, int r )Abc_QuickSort3Inc_rec591,16455
void Abc_QuickSort3Dec_rec( word * pData, int l, int r )Abc_QuickSort3Dec_rec626,17542
void Abc_QuickSort2( word * pData, int nSize, int fDecrease )Abc_QuickSort2662,18630
void Abc_QuickSort3( word * pData, int nSize, int fDecrease )Abc_QuickSort3680,19152
void Abc_QuickSortCostData( int * pCosts, int nSize, int fDecrease, word * pData, int * pResult )Abc_QuickSortCostData710,19964
int * Abc_QuickSortCost( int * pCosts, int nSize, int fDecrease )Abc_QuickSortCost719,20284
void Abc_QuickSortTest()Abc_QuickSortTest742,20868
#define NUMBER1 NUMBER1797,22334
#define NUMBER2 NUMBER2798,22363
unsigned Abc_Random( int fReset )Abc_Random800,22393
word Abc_RandomW( int fReset )Abc_RandomW813,22709

src/misc/util/utilBridge.c,2092
#define BRIDGE_TEXT_MESSAGE BRIDGE_TEXT_MESSAGE40,918
#define BRIDGE_ABORT BRIDGE_ABORT42,954
#define BRIDGE_PROGRESS BRIDGE_PROGRESS43,984
#define BRIDGE_RESULTS BRIDGE_RESULTS44,1014
#define BRIDGE_BAD_ABS BRIDGE_BAD_ABS45,1046
#define BRIDGE_VALUE_X BRIDGE_VALUE_X49,1147
#define BRIDGE_VALUE_0 BRIDGE_VALUE_050,1172
#define BRIDGE_VALUE_1 BRIDGE_VALUE_151,1197
Vec_Str_t * Gia_ManToBridgeVec( Gia_Man_t * p )Gia_ManToBridgeVec69,1678
void Gia_CreateHeader( FILE * pFile, int Type, int Size, unsigned char * pBuffer )Gia_CreateHeader130,3392
int Gia_ManToBridgeText( FILE * pFile, int Size, unsigned char * pBuffer )Gia_ManToBridgeText171,4408
int Gia_ManToBridgeAbort( FILE * pFile, int Size, unsigned char * pBuffer )Gia_ManToBridgeAbort178,4570
int Gia_ManToBridgeProgress( FILE * pFile, int Size, unsigned char * pBuffer )Gia_ManToBridgeProgress185,4726
int Gia_ManToBridgeAbsNetlist( FILE * pFile, void * p, int pkg_type )Gia_ManToBridgeAbsNetlist192,4888
int Gia_ManToBridgeBadAbs( FILE * pFile )Gia_ManToBridgeBadAbs202,5186
static int aigerNumSize( unsigned x )aigerNumSize209,5304
void Gia_ManFromBridgeHolds( FILE * pFile, int iPoProved )Gia_ManFromBridgeHolds232,5678
void Gia_ManFromBridgeUnknown( FILE * pFile, int iPoUnknown )Gia_ManFromBridgeUnknown245,6210
void Gia_ManFromBridgeCex( FILE * pFile, Abc_Cex_t * pCex )Gia_ManFromBridgeCex257,6703
int Gia_ManToBridgeResult( FILE * pFile, int Result, Abc_Cex_t * pCex, int iPoProved )Gia_ManToBridgeResult287,8180
Gia_Man_t *  Gia_ManFromBridgeReadBody( int Size, unsigned char * pBuffer, Vec_Int_t ** pvInits )Gia_ManFromBridgeReadBody311,8784
int Gia_ManFromBridgeReadPackage( FILE * pFile, int * pType, int * pSize, unsigned char ** ppBuffer )Gia_ManFromBridgeReadPackage433,12313
Gia_Man_t * Gia_ManFromBridge( FILE * pFile, Vec_Int_t ** pvInit )Gia_ManFromBridge471,13259
void Gia_ManToBridgeAbsNetlistTest( char * pFileName, Gia_Man_t * p, int msg_type )Gia_ManToBridgeAbsNetlistTest517,14354
void Gia_ManFromBridgeTest( char * pFileName )Gia_ManFromBridgeTest540,14901

src/misc/util/utilMem.c,1497
typedef struct Vec_Mem_t_       Vec_Mem_t;Vec_Mem_t35,869
struct Vec_Mem_t_ Vec_Mem_t_36,912
    int              nCap;nCap38,933
    int              nSize;nSize39,960
    void **          pArray;pArray40,988
void * s_vAllocs = NULL;s_vAllocs43,1021
void * s_vFrees  = NULL;s_vFrees44,1046
int    s_fInterrupt = 0;s_fInterrupt45,1071
#define ABC_MEM_ALLOC(ABC_MEM_ALLOC47,1097
#define ABC_MEM_CALLOC(ABC_MEM_CALLOC48,1174
#define ABC_MEM_FALLOC(ABC_MEM_FALLOC49,1251
#define ABC_MEM_FREE(ABC_MEM_FREE50,1365
#define ABC_MEM_REALLOC(ABC_MEM_REALLOC51,1451
static inline Vec_Mem_t * Vec_MemAlloc( int nCap )Vec_MemAlloc70,2121
static inline void Vec_MemFree( Vec_Mem_t * p )Vec_MemFree93,2657
static inline void Vec_MemGrow( Vec_Mem_t * p, int nCapMin )Vec_MemGrow110,3039
static inline void Vec_MemPush( Vec_Mem_t * p, void * Entry )Vec_MemPush129,3474
static void Vec_MemSort( Vec_Mem_t * p, int (*Vec_MemSortCompare)() )Vec_MemSort152,4014
void * Util_MemRecAlloc( void * pMem )Util_MemRecAlloc172,4532
void * Util_MemRecFree( void * pMem )Util_MemRecFree190,4933
int Util_ComparePointers( void ** pp1, void ** pp2 )Util_ComparePointers208,5366
static inline Vec_Mem_t * Vec_MemTwoMerge( Vec_Mem_t * vArr1, Vec_Mem_t * vArr2 )Vec_MemTwoMerge228,5864
void Util_MemRecRecycle()Util_MemRecRecycle272,7127
void Util_MemRecStart()Util_MemRecStart294,7776
void Util_MemRecQuit()Util_MemRecQuit312,8191
int Util_MemRecIsSet()Util_MemRecIsSet330,8616

src/misc/util/util_hack.h,235
#define ABC__misc__util__util_hack_hABC__misc__util__util_hack_h22,580
#define NIL(NIL34,769
#define util_cpu_time util_cpu_time36,811
#define getSoftDataLimit getSoftDataLimit37,865
#define MMoutOfMemory MMoutOfMemory38,919

src/misc/util/utilSignal.c,296
#define unlink unlink29,594
int Util_SignalSystem(const char* cmd)Util_SignalSystem44,1117
int Util_SignalTmpFile(const char* prefix, const char* suffix, char** out_name)Util_SignalTmpFile51,1256
void Util_SignalTmpFileRemove(const char* fname, int fLeave)Util_SignalTmpFileRemove56,1387

src/misc/util/utilNam.h,193
#define ABC__misc__util__utilNam_hABC__misc__util__utilNam_h22,547
typedef struct Abc_Nam_t_           Abc_Nam_t;Abc_Nam_t39,1272
#define Abc_NamManForEachObj(Abc_NamManForEachObj45,1540

src/misc/util/utilFloat.h,3036
#define ABC__sat__xSAT__xsatFloat_hABC__sat__xSAT__xsatFloat_h21,506
typedef struct xFloat_t_ xFloat_t;xFloat_t48,1542
struct xFloat_t_xFloat_t_49,1577
    unsigned  Mnt : 16;Mnt51,1596
    unsigned  Exp : 16;Exp52,1620
static inline unsigned   xSat_Float2Uint( xFloat_t f )                   { union { xFloat_t f; unsigned u; } temp; temp.f = f; return temp.u; }xSat_Float2Uint55,1648
static inline xFloat_t   xSat_Uint2Float( unsigned u )                   { union { xFloat_t f; unsigned u; } temp; temp.u = u; return temp.f; }xSat_Uint2Float56,1792
static inline int        xSat_LessThan( xFloat_t a, xFloat_t b )         { return a.Exp < b.Exp || (a.Exp == b.Exp && a.Mnt < b.Mnt);         }xSat_LessThan57,1936
static inline int        xSat_Equal( xFloat_t a, xFloat_t b )            { return a.Exp == b.Exp && a.Mnt == b.Mnt;                           }xSat_Equal58,2080
static inline xFloat_t   xSat_FloatCreate( unsigned Exp, unsigned Mnt )  { xFloat_t res; res.Exp = Exp; res.Mnt = Mnt; return res;            }xSat_FloatCreate60,2225
static inline xFloat_t   xSat_FloatCreateConst1()                        { return xSat_FloatCreate( 0, 1 << 15 );                             }xSat_FloatCreateConst162,2370
static inline xFloat_t   xSat_FloatCreateConst2()                        { return xSat_FloatCreate( 1, 1 << 15 );                             }xSat_FloatCreateConst263,2514
static inline xFloat_t   xSat_FloatCreateConst3()                        { return xSat_FloatCreate( 1, 3 << 14 );                             }xSat_FloatCreateConst364,2658
static inline xFloat_t   xSat_FloatCreateConst12()                       { return xSat_FloatCreate( 3, 3 << 14 );                             }xSat_FloatCreateConst1265,2802
static inline xFloat_t   xSat_FloatCreateConst1point5()                  { return xSat_FloatCreate( 0, 3 << 14 );                             }xSat_FloatCreateConst1point566,2946
static inline xFloat_t   xSat_FloatCreateConst2point5()                  { return xSat_FloatCreate( 1, 5 << 13 );                             }xSat_FloatCreateConst2point567,3090
static inline xFloat_t   xSat_FloatCreateMaximum()                       { return xSat_Uint2Float( 0xFFFFFFFF );                              }xSat_FloatCreateMaximum68,3234
static inline float      xSat_Float2Float( xFloat_t a )                  { assert(a.Exp < 127); return Abc_Int2Float(((a.Exp + 127) << 23) | ((a.Mnt & 0x7FFF) << 8)); }xSat_Float2Float70,3379
static inline xFloat_t   xSat_FloatFromFloat( float a )                  { int A = Abc_Float2Int(a); assert(a >= 1.0); return xSat_FloatCreate((A >> 23)-127, 0x8000 | ((A >> 8) & 0x7FFF)); }xSat_FloatFromFloat71,3548
static inline xFloat_t xSat_FloatAdd( xFloat_t a, xFloat_t b )xSat_FloatAdd88,4213
static inline xFloat_t xSat_FloatMul( xFloat_t a, xFloat_t b )xSat_FloatMul121,5169
static inline xFloat_t xSat_FloatDiv( xFloat_t a, unsigned Deg2 )xSat_FloatDiv154,6129
static inline void xSat_FloatTest()xSat_FloatTest173,6663

src/misc/util/utilColor.c,43
void Abc_ColorTest()Abc_ColorTest52,1359

src/misc/util/abc_global.h,10927
#define ABC__misc__util__abc_global_hABC__misc__util__abc_global_h22,545
#define ABC_USE_BRIDGEABC_USE_BRIDGE29,827
#define inline inline34,892
    #define ABC_DLLEXPORTABC_DLLEXPORT46,1583
    #define ABC_DLLIMPORTABC_DLLIMPORT47,1609
    #define ABC_DLLEXPORT ABC_DLLEXPORT49,1643
    #define ABC_DLLIMPORT ABC_DLLIMPORT50,1691
#define ABC_DLLIMPORTABC_DLLIMPORT53,1776
#define ABC_DLL ABC_DLL57,1843
#define ___unused ___unused62,1927
#define ___unused___unused64,1980
    #define _CRTDBG_MAP_ALLOC_CRTDBG_MAP_ALLOC86,2272
#define SIZEOF_VOID_P SIZEOF_VOID_P111,3078
#define NT64NT64113,3116
#define SIZEOF_LONG SIZEOF_LONG129,3343
#define SIZEOF_INT SIZEOF_INT137,3497
typedef platform_dependent_type ABC_PTRDIFF_T;ABC_PTRDIFF_T152,3849
typedef platform_dependent_type ABC_PTRUINT_T;ABC_PTRUINT_T171,4453
typedef uintptr_t ABC_PTRUINT_T;ABC_PTRUINT_T173,4536
typedef unsigned long ABC_PTRUINT_T;ABC_PTRUINT_T175,4594
typedef unsigned long long ABC_PTRUINT_T;ABC_PTRUINT_T177,4655
typedef unsigned int ABC_PTRUINT_T;ABC_PTRUINT_T179,4753
typedef platform_dependent_type ABC_PTRINT_T;ABC_PTRINT_T190,5079
typedef intptr_t ABC_PTRINT_T;ABC_PTRINT_T192,5161
typedef long ABC_PTRINT_T;ABC_PTRINT_T194,5217
typedef long long ABC_PTRINT_T;ABC_PTRINT_T196,5268
typedef int ABC_PTRINT_T;ABC_PTRINT_T198,5356
typedef platform_dependent_type ABC_INT64_T;ABC_INT64_T207,5516
typedef int64_t ABC_INT64_T;ABC_INT64_T209,5597
typedef long ABC_INT64_T;ABC_INT64_T211,5651
typedef long long ABC_INT64_T;ABC_INT64_T213,5717
typedef signed __int64 ABC_INT64_T;ABC_INT64_T215,5788
typedef platform_dependent_type ABC_UINT64_T;ABC_UINT64_T224,5960
typedef uint64_t ABC_UINT64_T;ABC_UINT64_T226,6042
typedef unsigned long ABC_UINT64_T;ABC_UINT64_T228,6098
typedef unsigned long long ABC_UINT64_T;ABC_UINT64_T230,6174
typedef unsigned __int64 ABC_UINT64_T;ABC_UINT64_T232,6255
  #define ABC_CONST(ABC_CONST238,6370
  #define ABC_CONST(ABC_CONST240,6440
typedef ABC_UINT64_T word;word243,6483
typedef ABC_INT64_T iword;iword244,6510
#define ABC_INFINITY ABC_INFINITY250,6758
#define ABC_SWAP(ABC_SWAP252,6796
#define ABC_PRT(ABC_PRT254,6857
#define ABC_PRTr(ABC_PRTr255,6982
#define ABC_PRTn(ABC_PRTn256,7107
#define ABC_PRTP(ABC_PRTP257,7232
#define ABC_PRM(ABC_PRM258,7424
#define ABC_PRMr(ABC_PRMr259,7535
#define ABC_PRMn(ABC_PRMn260,7646
#define ABC_PRMP(ABC_PRMP261,7757
#define ABC_ALLOC(ABC_ALLOC263,7940
#define ABC_CALLOC(ABC_CALLOC264,8021
#define ABC_FALLOC(ABC_FALLOC265,8101
#define ABC_FREE(ABC_FREE266,8226
#define ABC_REALLOC(ABC_REALLOC267,8307
static inline int      Abc_AbsInt( int a        )             { return a < 0 ? -a : a; }Abc_AbsInt271,8489
static inline int      Abc_MaxInt( int a, int b )             { return a > b ?  a : b; }Abc_MaxInt272,8578
static inline int      Abc_MinInt( int a, int b )             { return a < b ?  a : b; }Abc_MinInt273,8667
static inline word     Abc_MaxWord( word a, word b )          { return a > b ?  a : b; }Abc_MaxWord274,8756
static inline word     Abc_MinWord( word a, word b )          { return a < b ?  a : b; }Abc_MinWord275,8845
static inline float    Abc_AbsFloat( float a          )       { return a < 0 ? -a : a; }Abc_AbsFloat276,8934
static inline float    Abc_MaxFloat( float a, float b )       { return a > b ?  a : b; }Abc_MaxFloat277,9023
static inline float    Abc_MinFloat( float a, float b )       { return a < b ?  a : b; }Abc_MinFloat278,9112
static inline double   Abc_AbsDouble( double a           )    { return a < 0 ? -a : a; }Abc_AbsDouble279,9201
static inline double   Abc_MaxDouble( double a, double b )    { return a > b ?  a : b; }Abc_MaxDouble280,9290
static inline double   Abc_MinDouble( double a, double b )    { return a < b ?  a : b; }Abc_MinDouble281,9379
static inline int      Abc_Float2Int( float Val )             { union { int x; float y; } v; v.y = Val; return v.x;         }Abc_Float2Int283,9469
static inline float    Abc_Int2Float( int Num )               { union { int x; float y; } v; v.x = Num; return v.y;         }Abc_Int2Float284,9595
static inline word     Abc_Dbl2Word( double Dbl )             { union { word x; double y; } v; v.y = Dbl; return v.x;       }Abc_Dbl2Word285,9721
static inline double   Abc_Word2Dbl( word Num )               { union { word x; double y; } v; v.x = Num; return v.y;       }Abc_Word2Dbl286,9847
static inline int      Abc_Base2Log( unsigned n )             { int r; if ( n < 2 ) return (int)n; for ( r = 0, n--; n; n >>= 1, r++ ) {}; return r; }Abc_Base2Log287,9973
static inline int      Abc_Base10Log( unsigned n )            { int r; if ( n < 2 ) return (int)n; for ( r = 0, n--; n; n /= 10, r++ ) {}; return r; }Abc_Base10Log288,10124
static inline int      Abc_Base16Log( unsigned n )            { int r; if ( n < 2 ) return (int)n; for ( r = 0, n--; n; n /= 16, r++ ) {}; return r; }Abc_Base16Log289,10275
static inline char *   Abc_UtilStrsav( char * s )             { return s ? strcpy(ABC_ALLOC(char, strlen(s)+1), s) : NULL;  }Abc_UtilStrsav290,10426
static inline int      Abc_BitByteNum( int nBits )            { return (nBits>>3) + ((nBits&7)  > 0);                       }Abc_BitByteNum291,10552
static inline int      Abc_BitWordNum( int nBits )            { return (nBits>>5) + ((nBits&31) > 0);                       }Abc_BitWordNum292,10678
static inline int      Abc_Bit6WordNum( int nBits )           { return (nBits>>6) + ((nBits&63) > 0);                       }Abc_Bit6WordNum293,10804
static inline int      Abc_TruthByteNum( int nVars )          { return nVars <= 3 ? 1 : (1 << (nVars - 3));                 }Abc_TruthByteNum294,10930
static inline int      Abc_TruthWordNum( int nVars )          { return nVars <= 5 ? 1 : (1 << (nVars - 5));                 }Abc_TruthWordNum295,11056
static inline int      Abc_Truth6WordNum( int nVars )         { return nVars <= 6 ? 1 : (1 << (nVars - 6));                 }Abc_Truth6WordNum296,11182
static inline int      Abc_InfoHasBit( unsigned * p, int i )  { return (p[(i)>>5] & (unsigned)(1<<((i) & 31))) > 0;         }Abc_InfoHasBit297,11308
static inline void     Abc_InfoSetBit( unsigned * p, int i )  { p[(i)>>5] |= (unsigned)(1<<((i) & 31));                     }Abc_InfoSetBit298,11434
static inline void     Abc_InfoXorBit( unsigned * p, int i )  { p[(i)>>5] ^= (unsigned)(1<<((i) & 31));                     }Abc_InfoXorBit299,11560
static inline unsigned Abc_InfoMask( int nVar )               { return (~(unsigned)0) >> (32-nVar);                         }Abc_InfoMask300,11686
static inline int      Abc_Var2Lit( int Var, int c )          { assert(Var >= 0 && !(c >> 1)); return Var + Var + c;        }Abc_Var2Lit302,11813
static inline int      Abc_Lit2Var( int Lit )                 { assert(Lit >= 0); return Lit >> 1;                          }Abc_Lit2Var303,11939
static inline int      Abc_LitIsCompl( int Lit )              { assert(Lit >= 0); return Lit & 1;                           }Abc_LitIsCompl304,12065
static inline int      Abc_LitNot( int Lit )                  { assert(Lit >= 0); return Lit ^ 1;                           }Abc_LitNot305,12191
static inline int      Abc_LitNotCond( int Lit, int c )       { assert(Lit >= 0); return Lit ^ (int)(c > 0);                }Abc_LitNotCond306,12317
static inline int      Abc_LitRegular( int Lit )              { assert(Lit >= 0); return Lit & ~01;                         }Abc_LitRegular307,12443
static inline int      Abc_Lit2LitV( int * pMap, int Lit )    { assert(Lit >= 0); return Abc_Var2Lit( pMap[Abc_Lit2Var(Lit)], Abc_LitIsCompl(Lit) );      }Abc_Lit2LitV308,12569
static inline int      Abc_Lit2LitL( int * pMap, int Lit )    { assert(Lit >= 0); return Abc_LitNotCond( pMap[Abc_Lit2Var(Lit)], Abc_LitIsCompl(Lit) );   }Abc_Lit2LitL309,12725
static inline int      Abc_Ptr2Int( void * p )                { return (int)(ABC_PTRINT_T)p;      }Abc_Ptr2Int311,12882
static inline void *   Abc_Int2Ptr( int i )                   { return (void *)(ABC_PTRINT_T)i;   }Abc_Int2Ptr312,12982
static inline word     Abc_Ptr2Wrd( void * p )                { return (word)(ABC_PTRUINT_T)p;    }Abc_Ptr2Wrd313,13082
static inline void *   Abc_Wrd2Ptr( word i )                  { return (void *)(ABC_PTRUINT_T)i;  }Abc_Wrd2Ptr314,13182
static inline int      Abc_Var2Lit2( int Var, int Att )       { assert(!(Att >> 2)); return (Var << 2) + Att; }Abc_Var2Lit2316,13283
static inline int      Abc_Lit2Var2( int Lit )                { assert(Lit >= 0);    return Lit >> 2;         }Abc_Lit2Var2317,13395
static inline int      Abc_Lit2Att2( int Lit )                { assert(Lit >= 0);    return Lit & 3;          }Abc_Lit2Att2318,13507
static inline int      Abc_Var2Lit3( int Var, int Att )       { assert(!(Att >> 3)); return (Var << 3) + Att; }Abc_Var2Lit3319,13619
static inline int      Abc_Lit2Var3( int Lit )                { assert(Lit >= 0);    return Lit >> 3;         }Abc_Lit2Var3320,13731
static inline int      Abc_Lit2Att3( int Lit )                { assert(Lit >= 0);    return Lit & 7;          }Abc_Lit2Att3321,13843
static inline int      Abc_Var2Lit4( int Var, int Att )       { assert(!(Att >> 4)); return (Var << 4) + Att; }Abc_Var2Lit4322,13955
static inline int      Abc_Lit2Var4( int Lit )                { assert(Lit >= 0);    return Lit >> 4;         }Abc_Lit2Var4323,14067
static inline int      Abc_Lit2Att4( int Lit )                { assert(Lit >= 0);    return Lit & 15;         }Abc_Lit2Att4324,14179
typedef ABC_INT64_T abctime;abctime327,14309
static inline abctime Abc_Clock()Abc_Clock328,14338
enum Abc_VerbLevelAbc_VerbLevel344,14791
    ABC_PROMPT   = -2,ABC_PROMPT346,14812
    ABC_ERROR    = -1,ABC_ERROR347,14835
    ABC_WARNING  =  0,ABC_WARNING348,14858
    ABC_STANDARD =  1,ABC_STANDARD349,14881
    ABC_VERBOSE  =  2ABC_VERBOSE350,14904
#define BRIDGE_NETLIST BRIDGE_NETLIST357,14978
#define BRIDGE_ABS_NETLIST BRIDGE_ABS_NETLIST358,15015
static inline void Abc_Print( int level, const char * format, ... )Abc_Print366,15342
static inline void Abc_Print( int level, const char * format, ... )Abc_Print400,16324
static inline void Abc_PrintInt( int i )Abc_PrintInt415,16630
static inline void Abc_PrintTime( int level, const char * pStr, abctime time )Abc_PrintTime441,17323
static inline void Abc_PrintTimeP( int level, const char * pStr, abctime time, abctime Time )Abc_PrintTimeP446,17434
static inline void Abc_PrintMemoryP( int level, const char * pStr, int mem, int Mem )Abc_PrintMemoryP451,17567
static inline int Abc_PrimeCudd( unsigned int p )Abc_PrimeCudd457,17721
static inline void * Abc_FileReadContents( char * pFileName, int * pnFileSize )Abc_FileReadContents484,18279
static inline void Abc_ReverseOrder( int * pA, int nA )Abc_ReverseOrder505,18959

src/misc/util/utilDouble.h,2141
#define ABC__sat__Xdbl__Xdbl_hABC__sat__Xdbl__Xdbl_h22,511
typedef word xdbl;xdbl49,1538
static inline word   Xdbl_Exp( xdbl a )                 { return a >> 48;           }Xdbl_Exp51,1558
static inline word   Xdbl_Mnt( xdbl a )                 { return (a << 16) >> 16;   }Xdbl_Mnt52,1644
static inline xdbl   Xdbl_Create( word Exp, word Mnt )  { assert(!(Exp>>16) && (Mnt>>47)==(word)1); return (Exp<<48) | Mnt;  }Xdbl_Create54,1731
static inline xdbl   Xdbl_Const1()                      { return Xdbl_Create( (word)0, (word)1 << 47 );                      }Xdbl_Const156,1859
static inline xdbl   Xdbl_Const2()                      { return Xdbl_Create( (word)1, (word)1 << 47 );                      }Xdbl_Const257,1986
static inline xdbl   Xdbl_Const3()                      { return Xdbl_Create( (word)1, (word)3 << 46 );                      }Xdbl_Const358,2113
static inline xdbl   Xdbl_Const12()                     { return Xdbl_Create( (word)3, (word)3 << 46 );                      }Xdbl_Const1259,2240
static inline xdbl   Xdbl_Const1point5()                { return Xdbl_Create( (word)0, (word)3 << 46 );                      }Xdbl_Const1point560,2367
static inline xdbl   Xdbl_Const2point5()                { return Xdbl_Create( (word)1, (word)5 << 45 );                      }Xdbl_Const2point561,2494
static inline xdbl   Xdbl_Maximum()                     { return ~(word)0;                                                   }Xdbl_Maximum62,2621
static inline double Xdbl_ToDouble( xdbl a )            { assert(Xdbl_Exp(a) < 1023); return Abc_Word2Dbl(((Xdbl_Exp(a) + 1023) << 52) | (((a<<17)>>17) << 5));                  }Xdbl_ToDouble64,2749
static inline xdbl   Xdbl_FromDouble( double a )        { word A = Abc_Dbl2Word(a); assert(a >= 1.0); return Xdbl_Create((A >> 52)-1023, (((word)1) << 47) | ((A << 12) >> 17)); }Xdbl_FromDouble65,2928
static inline xdbl Xdbl_Add( xdbl a, xdbl b )Xdbl_Add82,3581
static inline xdbl Xdbl_Mul( xdbl a, xdbl b )Xdbl_Mul107,4234
static inline xdbl Xdbl_Div( xdbl a, unsigned Deg2 )Xdbl_Div138,5143
static inline void Xdbl_Test()Xdbl_Test156,5643

src/misc/util/utilIsop.c,4754
#define ABC_ISOP_MAX_VAR ABC_ISOP_MAX_VAR35,886
#define ABC_ISOP_MAX_WORD ABC_ISOP_MAX_WORD36,915
#define ABC_ISOP_MAX_CUBE ABC_ISOP_MAX_CUBE37,998
typedef word FUNC_ISOP( word *, word *, word *, word, int * );FUNC_ISOP39,1033
static FUNC_ISOP Abc_Isop7Cover; Abc_Isop7Cover41,1097
static FUNC_ISOP Abc_Isop8Cover;Abc_Isop8Cover42,1131
static FUNC_ISOP Abc_Isop9Cover; Abc_Isop9Cover43,1164
static FUNC_ISOP Abc_Isop10Cover;Abc_Isop10Cover44,1198
static FUNC_ISOP Abc_Isop11Cover;Abc_Isop11Cover45,1232
static FUNC_ISOP Abc_Isop12Cover;Abc_Isop12Cover46,1266
static FUNC_ISOP Abc_Isop13Cover;Abc_Isop13Cover47,1300
static FUNC_ISOP Abc_Isop14Cover;Abc_Isop14Cover48,1334
static FUNC_ISOP Abc_Isop15Cover;Abc_Isop15Cover49,1368
static FUNC_ISOP Abc_Isop16Cover;Abc_Isop16Cover50,1402
static FUNC_ISOP * s_pFuncIsopCover[17] =s_pFuncIsopCover52,1437
static inline word Abc_Cube2Cost( int nCubes )    { return (word)nCubes << 32;       }Abc_Cube2Cost76,2072
static inline int  Abc_CostCubes( word Cost )     { return (int)(Cost >> 32);        }Abc_CostCubes77,2159
static inline int  Abc_CostLits( word Cost )      { return (int)(Cost & 0xFFFFFFFF); }Abc_CostLits78,2246
static inline void Abc_IsopAddLits( int * pCover, word Cost0, word Cost1, int Var )Abc_IsopAddLits95,2844
word Abc_Isop6Cover( word uOn, word uOnDc, word * pRes, int nVars, word CostLim, int * pCover )Abc_Isop6Cover108,3272
word Abc_Isop7Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop7Cover149,5016
word Abc_Isop8Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop8Cover175,6338
word Abc_Isop9Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop9Cover204,7967
word Abc_Isop10Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop10Cover232,9464
word Abc_Isop11Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop11Cover260,10962
word Abc_Isop12Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop12Cover288,12467
word Abc_Isop13Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop13Cover316,13972
word Abc_Isop14Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop14Cover344,15477
word Abc_Isop15Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop15Cover372,16988
word Abc_Isop16Cover( word * pOn, word * pOnDc, word * pRes, word CostLim, int * pCover )Abc_Isop16Cover400,18499
word Abc_IsopCheck( word * pOn, word * pOnDc, word * pRes, int nVars, word CostLim, int * pCover )Abc_IsopCheck428,20010
static inline word ** Abc_IsopTtElems()Abc_IsopTtElems455,20943
void Abc_IsopBuildTruth( Vec_Int_t * vCover, int nVars, word * pRes, int fXor, int fCompl )Abc_IsopBuildTruth467,21313
static inline void Abc_IsopVerify( word * pFunc, int nVars, word * pRes, Vec_Int_t * vCover, int fXor, int fCompl )Abc_IsopVerify491,22179
int Abc_Isop( word * pFunc, int nVars, int nCubeLim, Vec_Int_t * vCover, int fTryBoth )Abc_Isop511,22815
int Abc_IsopCnf( word * pFunc, int nVars, int nCubeLim, int * pCover )Abc_IsopCnf562,24588
int Abc_IsopCountLits( Vec_Int_t * vCover, int nVars )Abc_IsopCountLits607,26117
void Abc_IsopPrintCover( Vec_Int_t * vCover, int nVars, int fCompl )Abc_IsopPrintCover627,26729
void Abc_IsopPrint( word * t, int nVars, Vec_Int_t * vCover, int fTryBoth )Abc_IsopPrint651,27472
static inline int Abc_EsopAddLits( int * pCover, word r0, word r1, word r2, word Max, int Var )Abc_EsopAddLits669,27969
word Abc_Esop6Cover( word t, int nVars, word CostLim, int * pCover )Abc_Esop6Cover713,29184
word Abc_EsopCover( word * pOn, int nVars, word CostLim, int * pCover )Abc_EsopCover746,30366
word Abc_EsopCheck( word * pOn, int nVars, word CostLim, int * pCover )Abc_EsopCheck766,31314
static inline int Abc_TtIntersect2( word * pIn1, word * pIn2, int nWords )Abc_TtIntersect2793,32095
static inline int Abc_TtCheckWithCubePos2Neg( word * t, word * c, int nWords, int iVar )Abc_TtCheckWithCubePos2Neg801,32289
static inline int Abc_TtCheckWithCubeNeg2Pos( word * t, word * c, int nWords, int iVar )Abc_TtCheckWithCubeNeg2Pos822,32844
static inline void Abc_TtExpandCubePos2Neg( word * t, int nWords, int iVar )Abc_TtExpandCubePos2Neg843,33399
static inline void Abc_TtExpandCubeNeg2Pos( word * t, int nWords, int iVar )Abc_TtExpandCubeNeg2Pos860,33839
word Abc_IsopNew( word * pOn, word * pOnDc, word * pRes, int nVars, word CostLim, int * pCover )Abc_IsopNew877,34279
void Abc_IsopTestNew()Abc_IsopTestNew993,38900
int Abc_IsopTest( word * pFunc, int nVars, Vec_Int_t * vCover )Abc_IsopTest1022,40118

src/misc/util/utilFile.c,303
static ABC_UINT64_T realTimeAbs()  // -- absolute time in nano-secondsrealTimeAbs59,1498
int tmpFile(const char* prefix, const char* suffix, char** out_name)tmpFile89,2445
char* vnsprintf(const char* format, va_list args)vnsprintf168,4393
char* nsprintf(const char* format, ...)nsprintf205,5158

src/misc/util/utilMem.h,69
#define ABC__misc__util__utilMem_hABC__misc__util__utilMem_h22,547

src/misc/util/utilTruth.h,22429
#define ABC__misc__util__utilTruth_hABC__misc__util__utilTruth_h22,557
static word s_Truths6[6] = {s_Truths638,1283
static word s_Truths6Neg[6] = {s_Truths6Neg47,1525
static word s_TruthXors[6] = {s_TruthXors56,1770
static word s_PMasks[5][3] = {s_PMasks65,2014
static word s_PPMasks[5][6][3] = {s_PPMasks73,2553
static int Abc_TtBitCount8[256] = {Abc_TtBitCount8117,6112
static inline int Abc_TtBitCount16( int i ) { return Abc_TtBitCount8[i & 0xFF] + Abc_TtBitCount8[i >> 8]; }Abc_TtBitCount16127,6702
static inline int     Abc_TtGetBit( word * p, int i )         { return (int)(p[i>>6] >> (word)(i & 63)) & 1;        }Abc_TtGetBit149,7536
static inline void    Abc_TtSetBit( word * p, int i )         { p[i>>6] |= (word)(((word)1)<<(i & 63));             }Abc_TtSetBit150,7654
static inline void    Abc_TtXorBit( word * p, int i )         { p[i>>6] ^= (word)(((word)1)<<(i & 63));             }Abc_TtXorBit151,7772
static inline int     Abc_TtGetQua( word * p, int k )         { return (int)(p[k>>5] >> (word)((k<<1) & 63)) & 3;   }Abc_TtGetQua154,7942
static inline void    Abc_TtSetQua( word * p, int k, int d )  { p[k>>5] |= (word)(((word)d)<<((k<<1) & 63));        }Abc_TtSetQua155,8060
static inline void    Abc_TtXorQua( word * p, int k, int d )  { p[k>>5] ^= (word)(((word)d)<<((k<<1) & 63));        }Abc_TtXorQua156,8178
static inline int     Abc_TtGetHex( word * p, int k )         { return (int)(p[k>>4] >> (word)((k<<2) & 63)) & 15;  }Abc_TtGetHex159,8349
static inline void    Abc_TtSetHex( word * p, int k, int d )  { p[k>>4] |= (word)(((word)d)<<((k<<2) & 63));        }Abc_TtSetHex160,8467
static inline void    Abc_TtXorHex( word * p, int k, int d )  { p[k>>4] ^= (word)(((word)d)<<((k<<2) & 63));        }Abc_TtXorHex161,8585
static inline int     Abc_TtGet256( word * p, int k )         { return (int)(p[k>>3] >> (word)((k<<3) & 63)) & 255; }Abc_TtGet256164,8753
static inline void    Abc_TtSet256( word * p, int k, int d )  { p[k>>3] |= (word)(((word)d)<<((k<<3) & 63));        }Abc_TtSet256165,8871
static inline void    Abc_TtXor256( word * p, int k, int d )  { p[k>>3] ^= (word)(((word)d)<<((k<<3) & 63));        }Abc_TtXor256166,8989
static inline int  Abc_TtWordNum( int nVars )     { return nVars <= 6 ? 1 : 1 << (nVars-6); }Abc_TtWordNum179,9342
static inline int  Abc_TtByteNum( int nVars )     { return nVars <= 3 ? 1 : 1 << (nVars-3); }Abc_TtByteNum180,9436
static inline int  Abc_TtHexDigitNum( int nVars ) { return nVars <= 2 ? 1 : 1 << (nVars-2); }Abc_TtHexDigitNum181,9530
static inline word Abc_Tt6Mask( int nBits )       { assert( nBits >= 0 && nBits <= 64 ); return (~(word)0) >> (64-nBits);        }Abc_Tt6Mask194,9868
static inline void Abc_TtMask( word * pTruth, int nWords, int nBits )Abc_TtMask195,9999
static inline void Abc_TtConst( word * pOut, int nWords, int fConst1 )Abc_TtConst219,10606
static inline void Abc_TtClear( word * pOut, int nWords )Abc_TtClear225,10769
static inline void Abc_TtFill( word * pOut, int nWords )Abc_TtFill231,10898
static inline void Abc_TtUnit( word * pOut, int nWords, int fCompl )Abc_TtUnit237,11033
static inline void Abc_TtNot( word * pOut, int nWords )Abc_TtNot243,11209
static inline void Abc_TtCopy( word * pOut, word * pIn, int nWords, int fCompl )Abc_TtCopy249,11343
static inline void Abc_TtAnd( word * pOut, word * pIn1, word * pIn2, int nWords, int fCompl )Abc_TtAnd259,11605
static inline void Abc_TtAndCompl( word * pOut, word * pIn1, int fCompl1, word * pIn2, int fCompl2, int nWords )Abc_TtAndCompl269,11904
static inline void Abc_TtAndSharp( word * pOut, word * pIn1, word * pIn2, int nWords, int fCompl )Abc_TtAndSharp291,12512
static inline void Abc_TtSharp( word * pOut, word * pIn1, word * pIn2, int nWords )Abc_TtSharp301,12814
static inline void Abc_TtOr( word * pOut, word * pIn1, word * pIn2, int nWords )Abc_TtOr307,12986
static inline void Abc_TtOrXor( word * pOut, word * pIn1, word * pIn2, int nWords )Abc_TtOrXor313,13154
static inline void Abc_TtXor( word * pOut, word * pIn1, word * pIn2, int nWords, int fCompl )Abc_TtXor319,13326
static inline void Abc_TtXorMask( word * pOut, word * pIn1, word * pIn2, word * pMask, int nWords, int fCompl )Abc_TtXorMask329,13623
static inline void Abc_TtMux( word * pOut, word * pCtrl, word * pIn1, word * pIn0, int nWords )Abc_TtMux339,13964
static inline void Abc_TtMaj( word * pOut, word * pIn0, word * pIn1, word * pIn2, int nWords )Abc_TtMaj345,14174
static inline int Abc_TtIntersect( word * pIn1, word * pIn2, int nWords, int fCompl )Abc_TtIntersect351,14402
static inline int Abc_TtIntersectOne( word * pOut, int fComp, word * pIn, int fComp0, int nWords )Abc_TtIntersectOne368,14773
static inline int Abc_TtIntersectTwo( word * pOut, int fComp, word * pIn0, int fComp0, word * pIn1, int fComp1, int nWords )Abc_TtIntersectTwo403,15556
static inline int Abc_TtIntersectXor( word * pOut, int fComp, word * pIn0, word * pIn1, int fComp01, int nWords )Abc_TtIntersectXor468,17142
static inline int Abc_TtEqual( word * pIn1, word * pIn2, int nWords )Abc_TtEqual503,17995
static inline int Abc_TtOpposite( word * pIn1, word * pIn2, int nWords )Abc_TtOpposite511,18185
static inline int Abc_TtImply( word * pIn1, word * pIn2, int nWords )Abc_TtImply519,18379
static inline int Abc_TtCompare( word * pIn1, word * pIn2, int nWords )Abc_TtCompare527,18581
static inline int Abc_TtCompareRev( word * pIn1, word * pIn2, int nWords )Abc_TtCompareRev535,18800
static inline int Abc_TtIsConst0( word * pIn1, int nWords )Abc_TtIsConst0543,19027
static inline int Abc_TtIsConst1( word * pIn1, int nWords )Abc_TtIsConst1551,19196
static inline void Abc_TtConst0( word * pIn1, int nWords )Abc_TtConst0559,19366
static inline void Abc_TtConst1( word * pIn1, int nWords )Abc_TtConst1565,19496
static inline void Abc_TtIthVar( word * pOut, int iVar, int nVars )Abc_TtIthVar571,19633
static inline int Abc_TtIsAndCompl( word * pOut, int fCompl, word * pIn1, int fCompl1, word * pIn2, int fCompl2, word * pCare, int nWords )Abc_TtIsAndCompl600,20260
static inline int Abc_TtIsXorCompl( word * pOut, int fCompl, word * pIn1, word * pIn2, word * pCare, int nWords )Abc_TtIsXorCompl672,22349
static inline int Abc_TtCompare1VarCofs( word * pTruth, int nWords, int iVar )Abc_TtCompare1VarCofs702,23086
static inline int Abc_TtCompare1VarCofsRev( word * pTruth, int nWords, int iVar )Abc_TtCompare1VarCofsRev737,24162
static inline void Abc_TtElemInit( word ** pTtElems, int nVars )Abc_TtElemInit784,25536
static inline void Abc_TtElemInit2( word * pTtElems, int nVars )Abc_TtElemInit2795,25921
static inline word Abc_Tt6Cofactor0( word t, int iVar )Abc_Tt6Cofactor0821,26590
static inline word Abc_Tt6Cofactor1( word t, int iVar )Abc_Tt6Cofactor1826,26764
static inline void Abc_TtCofactor0p( word * pOut, word * pIn, int nWords, int iVar )Abc_TtCofactor0p832,26935
static inline void Abc_TtCofactor1p( word * pOut, word * pIn, int nWords, int iVar )Abc_TtCofactor1p854,27698
static inline void Abc_TtCofactor0( word * pTruth, int nWords, int iVar )Abc_TtCofactor0876,28465
static inline void Abc_TtCofactor1( word * pTruth, int nWords, int iVar )Abc_TtCofactor1895,29156
static inline int Abc_TtCheckEqualCofs( word * pTruth, int nWords, int iVar, int jVar, int Num1, int Num2 )Abc_TtCheckEqualCofs926,30117
static inline int Abc_Tt6Cof0IsConst0( word t, int iVar ) { return (t & s_Truths6Neg[iVar]) == 0;                                          }Abc_Tt6Cof0IsConst0989,32426
static inline int Abc_Tt6Cof0IsConst1( word t, int iVar ) { return (t & s_Truths6Neg[iVar]) == s_Truths6Neg[iVar];                         }Abc_Tt6Cof0IsConst1990,32567
static inline int Abc_Tt6Cof1IsConst0( word t, int iVar ) { return (t & s_Truths6[iVar]) == 0;                                             }Abc_Tt6Cof1IsConst0991,32708
static inline int Abc_Tt6Cof1IsConst1( word t, int iVar ) { return (t & s_Truths6[iVar]) == s_Truths6[iVar];                               }Abc_Tt6Cof1IsConst1992,32849
static inline int Abc_Tt6CofsOpposite( word t, int iVar ) { return (~t & s_Truths6Neg[iVar]) == ((t >> (1 << iVar)) & s_Truths6Neg[iVar]); } Abc_Tt6CofsOpposite993,32990
static inline int Abc_Tt6Cof0EqualCof1( word t1, word t2, int iVar ) { return (t1 & s_Truths6Neg[iVar]) == ((t2 >> (1 << iVar)) & s_Truths6Neg[iVar]); } Abc_Tt6Cof0EqualCof1994,33132
static inline int Abc_Tt6Cof0EqualCof0( word t1, word t2, int iVar ) { return (t1 & s_Truths6Neg[iVar]) == (t2 & s_Truths6Neg[iVar]); } Abc_Tt6Cof0EqualCof0995,33286
static inline int Abc_Tt6Cof1EqualCof1( word t1, word t2, int iVar ) { return (t1 & s_Truths6[iVar])    == (t2 & s_Truths6[iVar]); } Abc_Tt6Cof1EqualCof1996,33423
static inline int Abc_TtTruthIsConst0( word * p, int nWords ) { int w; for ( w = 0; w < nWords; w++ ) if ( p[w] != 0        ) return 0; return 1; }Abc_TtTruthIsConst01009,33792
static inline int Abc_TtTruthIsConst1( word * p, int nWords ) { int w; for ( w = 0; w < nWords; w++ ) if ( p[w] != ~(word)0 ) return 0; return 1; }Abc_TtTruthIsConst11010,33940
static inline int Abc_TtCof0IsConst0( word * t, int nWords, int iVar ) Abc_TtCof0IsConst01012,34089
static inline int Abc_TtCof0IsConst1( word * t, int nWords, int iVar ) Abc_TtCof0IsConst11033,34598
static inline int Abc_TtCof1IsConst0( word * t, int nWords, int iVar ) Abc_TtCof1IsConst01054,35132
static inline int Abc_TtCof1IsConst1( word * t, int nWords, int iVar ) Abc_TtCof1IsConst11075,35643
static inline int Abc_TtCofsOpposite( word * t, int nWords, int iVar ) Abc_TtCofsOpposite1096,36176
static inline void Abc_TtStretch5( unsigned * pInOut, int nVarS, int nVarB )Abc_TtStretch51129,37042
static inline void Abc_TtStretch6( word * pInOut, int nVarS, int nVarB )Abc_TtStretch61144,37498
static inline word Abc_Tt6Stretch( word t, int nVars )Abc_Tt6Stretch1159,37952
static inline int Abc_TtIsHexDigit( char HexChar )Abc_TtIsHexDigit1189,38774
static inline char Abc_TtPrintDigit( int Digit )Abc_TtPrintDigit1193,38952
static inline char Abc_TtPrintDigitLower( int Digit )Abc_TtPrintDigitLower1200,39122
static inline int Abc_TtReadHexDigit( char HexChar )Abc_TtReadHexDigit1207,39297
static inline void Abc_TtPrintHex( word * pTruth, int nVars )Abc_TtPrintHex1230,39918
static inline void Abc_TtPrintHexRev( FILE * pFile, word * pTruth, int nVars )Abc_TtPrintHexRev1240,40268
static inline void Abc_TtPrintHexSpecial( word * pTruth, int nVars )Abc_TtPrintHexSpecial1250,40687
static inline int Abc_TtWriteHexRev( char * pStr, word * pTruth, int nVars )Abc_TtWriteHexRev1260,41030
static inline void Abc_TtPrintHexArrayRev( FILE * pFile, word * pTruth, int nDigits )Abc_TtPrintHexArrayRev1271,41469
static inline int Abc_TtReadHex( word * pTruth, char * pString )Abc_TtReadHex1289,41964
static inline int Abc_TtReadHexNumber( word * pTruth, char * pString )Abc_TtReadHexNumber1329,43295
static inline void Abc_TtPrintBinary( word * pTruth, int nVars )Abc_TtPrintBinary1358,44087
static inline int Abc_TtSuppFindFirst( int Supp )Abc_TtSuppFindFirst1380,44706
static inline int Abc_TtSuppOnlyOne( int Supp )Abc_TtSuppOnlyOne1389,44894
static inline int Abc_TtSuppIsMinBase( int Supp )Abc_TtSuppIsMinBase1395,45020
static inline int Abc_Tt6HasVar( word t, int iVar )Abc_Tt6HasVar1400,45133
static inline int Abc_Tt6XorVar( word t, int iVar )Abc_Tt6XorVar1404,45269
static inline int Abc_TtHasVar( word * t, int nVars, int iVar )Abc_TtHasVar1408,45406
static inline int Abc_TtSupport( word * t, int nVars )Abc_TtSupport1433,46139
static inline int Abc_TtSupportSize( word * t, int nVars )Abc_TtSupportSize1441,46343
static inline int Abc_TtSupportAndSize( word * t, int nVars, int * pSuppSize )Abc_TtSupportAndSize1449,46553
static inline int Abc_Tt6SupportAndSize( word t, int nVars, int * pSuppSize )Abc_Tt6SupportAndSize1458,46817
static inline int Abc_TtCheckCondDep2( word * pTruth, int nVars, int nSuppLim )Abc_TtCheckCondDep21480,47398
static inline int Abc_TtCheckCondDep( word * pTruth, int nVars, int nSuppLim )Abc_TtCheckCondDep1510,48339
static inline int Abc_TtOnlyOneOne( word t )Abc_TtOnlyOneOne1550,49443
static inline int Abc_Tt6IsAndType( word t, int nVars )Abc_Tt6IsAndType1556,49557
static inline int Abc_Tt6IsOrType( word t, int nVars )Abc_Tt6IsOrType1560,49677
static inline int Abc_Tt6IsXorType( word t, int nVars )Abc_Tt6IsXorType1564,49797
static inline word Abc_Tt6Flip( word Truth, int iVar )Abc_Tt6Flip1581,50180
static inline void Abc_TtFlip( word * pTruth, int nWords, int iVar )Abc_TtFlip1585,50347
static inline word Abc_Tt6Permute_rec( word t, int * pPerm, int nVars )Abc_Tt6Permute_rec1616,51305
static inline word Abc_Tt6SwapAdjacent( word Truth, int iVar )Abc_Tt6SwapAdjacent1641,52064
static inline void Abc_TtSwapAdjacent( word * pTruth, int nWords, int iVar )Abc_TtSwapAdjacent1645,52265
static inline word Abc_Tt6SwapVars( word t, int iVar, int jVar )Abc_Tt6SwapVars1669,53149
static inline void Abc_TtSwapVars( word * pTruth, int nVars, int iVar, int jVar )Abc_TtSwapVars1676,53425
static inline void Abc_TtMoveVar( word * pF, int nVars, int * V2P, int * P2V, int v, int p )Abc_TtMoveVar1725,55221
static inline word Abc_Tt6RemoveVar( word t, int iVar )Abc_Tt6RemoveVar1737,55574
static inline void Abc_TtShrink( word * pF, int nVars, int nVarsAll, unsigned Phase )Abc_TtShrink1756,56012
static inline int Abc_TtMinimumBase( word * t, int * pSupp, int nVarsAll, int * pnVars )Abc_TtMinimumBase1769,56404
static inline int Abc_TtSimplify( word * t, int * pLits, int nVarsAll, int * pnVars )Abc_TtSimplify1788,56952
static inline word Abc_Tt6Expand( word t, int * pCut0, int nCutSize0, int * pCut, int nCutSize )Abc_Tt6Expand1830,58379
static inline void Abc_TtExpand( word * pTruth0, int nVars, int * pCut0, int nCutSize0, int * pCut, int nCutSize )Abc_TtExpand1845,58787
static inline int Abc_Tt6MinBase( word * pTruth, int * pVars, int nVars ) Abc_Tt6MinBase1859,59207
static inline int Abc_TtMinBase( word * pTruth, int * pVars, int nVars, int nVarsAll ) Abc_TtMinBase1880,59672
static inline void Abc_TtImplementNpnConfig( word * pTruth, int nVars, char * pCanonPerm, unsigned uCanonPhase )Abc_TtImplementNpnConfig1913,60487
static inline int Abc_TtCountOnesSlow( word t )Abc_TtCountOnesSlow1946,61420
static inline int Abc_TtCountOnes( word x )Abc_TtCountOnes1955,61991
static inline int Abc_TtCountOnesVec( word * x, int nWords )Abc_TtCountOnesVec1965,62349
static inline int Abc_TtCountOnesVecMask( word * x, word * pMask, int nWords, int fCompl )Abc_TtCountOnesVecMask1972,62531
static inline int Abc_TtCountOnesVecMask2( word * x0, word * x1, int fComp0, int fComp1, word * pMask, int nWords )Abc_TtCountOnesVecMask21983,62886
static inline int Abc_TtCountOnesVecXor( word * x, word * y, int nWords )Abc_TtCountOnesVecXor2000,63584
static inline int Abc_TtCountOnesVecXorMask( word * x, word * y, int fCompl, word * pMask, int nWords )Abc_TtCountOnesVecXorMask2007,63786
static inline int Abc_TtAndXorSum( word * pOut, word * pIn1, word * pIn2, int nWords )Abc_TtAndXorSum2018,64172
static inline int Abc_Tt6FirstBit( word t )Abc_Tt6FirstBit2040,64668
static inline int Abc_Tt6LastBit( word t )Abc_Tt6LastBit2052,65210
static inline int Abc_TtFindFirstBit( word * pIn, int nVars )Abc_TtFindFirstBit2064,65754
static inline int Abc_TtFindFirstBit2( word * pIn, int nWords )Abc_TtFindFirstBit22072,65985
static inline int Abc_TtFindLastBit( word * pIn, int nVars )Abc_TtFindLastBit2080,66187
static inline int Abc_TtFindLastBit2( word * pIn, int nWords )Abc_TtFindLastBit22088,66421
static inline int Abc_TtFindFirstDiffBit( word * pIn1, word * pIn2, int nVars )Abc_TtFindFirstDiffBit2096,66626
static inline int Abc_TtFindFirstDiffBit2( word * pIn1, word * pIn2, int nWords )Abc_TtFindFirstDiffBit22104,66897
static inline int Abc_TtFindLastDiffBit( word * pIn1, word * pIn2, int nVars )Abc_TtFindLastDiffBit2112,67139
static inline int Abc_TtFindLastDiffBit2( word * pIn1, word * pIn2, int nWords )Abc_TtFindLastDiffBit22120,67413
static inline int Abc_TtFindFirstZero( word * pIn, int nVars )Abc_TtFindFirstZero2128,67658
static inline int Abc_TtFindLastZero( word * pIn, int nVars )Abc_TtFindLastZero2136,67892
static inline void Abc_TtReverseVars( word * pTruth, int nVars )Abc_TtReverseVars2157,68365
static inline void Abc_TtReverseBits( word * pTruth, int nVars )Abc_TtReverseBits2163,68541
static inline int Abc_Tt6PosVar( word t, int iVar )Abc_Tt6PosVar2205,70624
static inline int Abc_Tt6NegVar( word t, int iVar )Abc_Tt6NegVar2209,70764
static inline int Abc_TtPosVar( word * t, int nVars, int iVar )Abc_TtPosVar2213,70898
static inline int Abc_TtNegVar( word * t, int nVars, int iVar )Abc_TtNegVar2238,71647
static inline int Abc_TtIsUnate( word * t, int nVars )Abc_TtIsUnate2263,72395
static inline int Abc_TtIsPosUnate( word * t, int nVars )Abc_TtIsPosUnate2271,72607
static inline void Abc_TtMakePosUnate( word * t, int nVars )Abc_TtMakePosUnate2279,72792
static inline word Abc_Tt6Isop( word uOn, word uOnDc, int nVars, int * pnCubes )Abc_Tt6Isop2300,73338
static inline int Abc_Tt7Isop( word uOn[2], word uOnDc[2], int nVars, word uRes[2] )Abc_Tt7Isop2334,74534
static inline int Abc_Tt8Isop( word uOn[4], word uOnDc[4], int nVars, word uRes[4] )Abc_Tt8Isop2355,75437
static inline int Abc_Tt6CnfSize( word t, int nVars )Abc_Tt6CnfSize2405,77342
static inline int Abc_Tt8CnfSize( word t[4], int nVars )Abc_Tt8CnfSize2413,77553
static inline word Abc_Tt6IsopCover( word uOn, word uOnDc, int nVars, int * pCover, int * pnCubes )Abc_Tt6IsopCover2434,78109
static inline void Abc_Tt7IsopCover( word uOn[2], word uOnDc[2], int nVars, word uRes[2], int * pCover, int * pnCubes )Abc_Tt7IsopCover2475,79620
static inline void Abc_Tt8IsopCover( word uOn[4], word uOnDc[4], int nVars, word uRes[4], int * pCover, int * pnCubes )Abc_Tt8IsopCover2502,80858
static inline int Abc_Tt6Cnf( word t, int nVars, int * pCover )Abc_Tt6Cnf2558,83114
static inline int Abc_Tt8Cnf( word t[4], int nVars, int * pCover )Abc_Tt8Cnf2570,83509
static inline int Abc_Tt6Esop( word t, int nVars, int * pCover )Abc_Tt6Esop2596,84252
static inline word Abc_Tt6EsopBuild( int nVars, int * pCover, int nCubes )Abc_Tt6EsopBuild2647,85742
static inline int Abc_Tt6EsopVerify( word t, int nVars )Abc_Tt6EsopVerify2662,86171
static inline int Abc_Tt6CheckOutDec( word t, int i, word * pOut )Abc_Tt6CheckOutDec2683,86725
static inline int Abc_TtCheckOutDec( word * pTruth, int nVars, int v, word * pOut )Abc_TtCheckOutDec2715,87396
static inline word Abc_TtCheckDecOutOne7( word * t, int * piVar, int * pType )Abc_TtCheckDecOutOne72750,88610
static inline word Abc_TtCheckDecOutOne8( word * t, int * piVar1, int * piVar2, int * pType1, int * pType2 )Abc_TtCheckDecOutOne82765,89070
static inline int Abc_TtCheckDsdAnd( word t, int i, int j, word * pOut )Abc_TtCheckDsdAnd2805,90330
static inline int Abc_TtCheckDsdMux( word t, int i, word * pOut )Abc_TtCheckDsdMux2840,91414
static inline void Unm_ManCheckTest2()Unm_ManCheckTest22882,92744
static inline void Unm_ManCheckTest()Unm_ManCheckTest2932,94206
static inline word Abc_TtEvalLut6( word Ins[6], word Lut, int nVars )Abc_TtEvalLut63001,96370
static inline unsigned Abc_TtEvalLut5( unsigned Ins[5], int Lut, int nVars )Abc_TtEvalLut53015,96743
static inline int Abc_TtEvalLut4( int Ins[4], int Lut, int nVars )Abc_TtEvalLut43029,97131
static inline void Abc_TtComputeGraph( word * pTruth, int v, int nVars, int * pGraph )Abc_TtComputeGraph3056,97794
static inline void Abc_TtPrintVarSet( int Mask, int nVars )Abc_TtPrintVarSet3091,99028
static inline void Abc_TtPrintBiDec( word * pTruth, int nVars )Abc_TtPrintBiDec3100,99235
static inline int Abc_TtVerifyBiDec( word * pTruth, int nVars, int This, int That, int nSuppLim, word wThis, word wThat )Abc_TtVerifyBiDec3113,99611
static inline void Abc_TtExist( word * pTruth, int iVar, int nWords )Abc_TtExist3140,100650
static inline int Abc_TtCheckBiDec( word * pTruth, int nVars, int This, int That )Abc_TtCheckBiDec3147,100902
static inline word Abc_TtDeriveBiDecOne( word * pTruth, int nVars, int This )Abc_TtDeriveBiDecOne3164,101465
static inline void Abc_TtDeriveBiDec( word * pTruth, int nVars, int This, int That, int nSuppLim, word * pThis, word * pThat )Abc_TtDeriveBiDec3176,101900
static inline int Abc_TtCheckBiDecSimple( word * pTruth, int nVars, int nSuppLim )Abc_TtCheckBiDecSimple3186,102461
static inline int Abc_TtProcessBiDecInt( word * pTruth, int nVars, int nSuppLim )Abc_TtProcessBiDecInt3203,103062
static inline int Abc_TtProcessBiDec( word * pTruth, int nVars, int nSuppLim )Abc_TtProcessBiDec3240,104425
static inline void Abc_TtProcessBiDecTest( word * pTruth, int nVars, int nSuppLim )Abc_TtProcessBiDecTest3266,105141
static inline void Abc_TtProcessBiDecExperiment()Abc_TtProcessBiDecExperiment3304,106262
static inline int Abc_Tt4Equal3( int c0, int c1, int c2, int c3 )Abc_Tt4Equal33335,107360
static inline int Abc_Tt4Check2( int t, int i, int j, int * f, int * r )Abc_Tt4Check23343,107613
static inline int Abc_Tt4CheckTwoLevel( int t )Abc_Tt4CheckTwoLevel3353,107931
static inline int Abc_Tt4CountOnes( int t )Abc_Tt4CountOnes3363,108548
static inline int Abc_Tt4FirstBit( int t )Abc_Tt4FirstBit3371,108802
static inline int Abc_Tt4Check( int t )Abc_Tt4Check3381,109101
static inline int Abc_Tt6VarsAreSymmetric( word t, int iVar, int jVar )Abc_Tt6VarsAreSymmetric3405,109779
static inline int Abc_Tt6VarsAreAntiSymmetric( word t, int iVar, int jVar )Abc_Tt6VarsAreAntiSymmetric3412,110032
static inline int Abc_TtVarsAreSymmetric( word * pTruth, int nVars, int i, int j, word * pCof0, word * pCof1 )Abc_TtVarsAreSymmetric3419,110323
static inline int Abc_TtVarsAreAntiSymmetric( word * pTruth, int nVars, int i, int j, word * pCof0, word * pCof1 )Abc_TtVarsAreAntiSymmetric3429,110747
static inline int Abc_TtIsFullySymmetric( word * pTruth, int nVars )Abc_TtIsFullySymmetric3439,111175
static inline void Abc_TtGenFullySymmetric( word * pTruth, int nVars, int Polar )Abc_TtGenFullySymmetric3462,111791
static inline void Abc_TtTestFullySymmetric()Abc_TtTestFullySymmetric3475,112183
static inline word * Abc_TtSymFunGenerate( char * pOnes, int nVars )Abc_TtSymFunGenerate3497,112759

src/misc/util/utilSignal.h,75
#define ABC__misc__util__utilSignal_hABC__misc__util__utilSignal_h22,560

src/misc/util/abc_namespaces.h,1819
#define ABC__misc__util__abc_namespaces_hABC__misc__util__abc_namespaces_h22,470
#    define ABC_NAMESPACE_HEADER_START ABC_NAMESPACE_HEADER_START31,776
#    define ABC_NAMESPACE_HEADER_END ABC_NAMESPACE_HEADER_END32,841
#    define ABC_NAMESPACE_CXX_HEADER_START ABC_NAMESPACE_CXX_HEADER_START33,880
#    define ABC_NAMESPACE_CXX_HEADER_END ABC_NAMESPACE_CXX_HEADER_END34,950
#    define ABC_NAMESPACE_IMPL_START ABC_NAMESPACE_IMPL_START35,1016
#    define ABC_NAMESPACE_IMPL_END ABC_NAMESPACE_IMPL_END36,1079
#    define ABC_NAMESPACE_PREFIX ABC_NAMESPACE_PREFIX37,1116
#    define ABC_NAMESPACE_USING_NAMESPACE ABC_NAMESPACE_USING_NAMESPACE38,1165
#    define ABC_NAMESPACE_HEADER_START ABC_NAMESPACE_HEADER_START40,1246
#    define ABC_NAMESPACE_HEADER_END ABC_NAMESPACE_HEADER_END41,1298
#    define ABC_NAMESPACE_CXX_HEADER_STARTABC_NAMESPACE_CXX_HEADER_START42,1337
#    define ABC_NAMESPACE_CXX_HEADER_ENDABC_NAMESPACE_CXX_HEADER_END43,1380
#    define ABC_NAMESPACE_IMPL_STARTABC_NAMESPACE_IMPL_START44,1421
#    define ABC_NAMESPACE_IMPL_ENDABC_NAMESPACE_IMPL_END45,1458
#    define ABC_NAMESPACE_PREFIXABC_NAMESPACE_PREFIX46,1493
#    define ABC_NAMESPACE_USING_NAMESPACEABC_NAMESPACE_USING_NAMESPACE47,1526
#  define ABC_NAMESPACE_HEADER_STARTABC_NAMESPACE_HEADER_START50,1607
#  define ABC_NAMESPACE_HEADER_ENDABC_NAMESPACE_HEADER_END51,1644
#  define ABC_NAMESPACE_CXX_HEADER_STARTABC_NAMESPACE_CXX_HEADER_START52,1679
#  define ABC_NAMESPACE_CXX_HEADER_ENDABC_NAMESPACE_CXX_HEADER_END53,1720
#  define ABC_NAMESPACE_IMPL_STARTABC_NAMESPACE_IMPL_START54,1759
#  define ABC_NAMESPACE_IMPL_ENDABC_NAMESPACE_IMPL_END55,1794
#  define ABC_NAMESPACE_PREFIXABC_NAMESPACE_PREFIX56,1827
#  define ABC_NAMESPACE_USING_NAMESPACEABC_NAMESPACE_USING_NAMESPACE57,1858

src/misc/util/utilCex.c,1739
Abc_Cex_t * Abc_CexAlloc( int nRegs, int nRealPis, int nFrames )Abc_CexAlloc51,1375
Abc_Cex_t * Abc_CexAllocFull( int nRegs, int nRealPis, int nFrames )Abc_CexAllocFull62,1808
Abc_Cex_t * Abc_CexMakeTriv( int nRegs, int nTruePis, int nTruePos, int iFrameOut )Abc_CexMakeTriv85,2550
Abc_Cex_t * Abc_CexCreate( int nRegs, int nPis, int * pArray, int iFrame, int iPo, int fSkipRegs )Abc_CexCreate110,3199
Abc_Cex_t * Abc_CexDup( Abc_Cex_t * p, int nRegsNew )Abc_CexDup145,4112
Abc_Cex_t * Abc_CexDeriveFromCombModel( int * pModel, int nPis, int nRegs, int iPo )Abc_CexDeriveFromCombModel173,4875
Abc_Cex_t * Abc_CexMerge( Abc_Cex_t * pCex, Abc_Cex_t * pPart, int iFrBeg, int iFrEnd )Abc_CexMerge197,5474
void Abc_CexPrintStats( Abc_Cex_t * p )Abc_CexPrintStats256,7861
void Abc_CexPrintStatsInputs( Abc_Cex_t * p, int nRealPis )Abc_CexPrintStatsInputs275,8495
void Abc_CexPrint( Abc_Cex_t * p )Abc_CexPrint322,10018
void Abc_CexFreeP( Abc_Cex_t ** p )Abc_CexFreeP361,11015
void Abc_CexFree( Abc_Cex_t * p )Abc_CexFree382,11452
Abc_Cex_t * Abc_CexTransformPhase( Abc_Cex_t * p, int nPisOld, int nPosOld, int nRegsOld )Abc_CexTransformPhase401,11864
Abc_Cex_t * Abc_CexTransformTempor( Abc_Cex_t * p, int nPisOld, int nPosOld, int nRegsOld )Abc_CexTransformTempor427,12614
Abc_Cex_t * Abc_CexTransformUndc( Abc_Cex_t * p, char * pInit )Abc_CexTransformUndc459,13823
Abc_Cex_t * Abc_CexPermute( Abc_Cex_t * p, Vec_Int_t * vMapOld2New )Abc_CexPermute498,15207
Abc_Cex_t * Abc_CexPermuteTwo( Abc_Cex_t * p, Vec_Int_t * vPermOld, Vec_Int_t * vPermNew )Abc_CexPermuteTwo526,16072
static inline int Abc_CexOnes32( unsigned i )Abc_CexOnes32552,16835
int Abc_CexCountOnes( Abc_Cex_t * p )Abc_CexCountOnes559,17046

src/misc/util/utilCex.h,765
#define ABC__misc__util__utilCex_hABC__misc__util__utilCex_h22,576
typedef struct Abc_Cex_t_ Abc_Cex_t;Abc_Cex_t39,1330
struct Abc_Cex_t_Abc_Cex_t_40,1367
    int              iPo;       // the zero-based number of PO, for which verification failediPo42,1387
    int              iFrame;    // the zero-based number of the time-frame, for which verificaiton failediFrame43,1481
    int              nRegs;     // the number of registers in the miter nRegs44,1587
    int              nPis;      // the number of primary inputs in the miternPis45,1660
    int              nBits;     // the number of words of bit data usednBits46,1737
    unsigned         pData[0];  // the cex bit data (the number of bits: nRegs + (iFrame+1) * nPis)pData47,1809

src/misc/util/utilNam.c,3455
struct Abc_Nam_t_Abc_Nam_t_41,1018
    int              nStore;       // the size of allocated storagenStore44,1068
    int              iHandle;      // the current free handleiHandle45,1136
    char *           pStore;       // storage for name objectspStore46,1198
    Vec_Int_t        vInt2Handle;  // mapping integers into handlesvInt2Handle48,1293
    Vec_Int_t        vInt2Next;    // mapping integers into nextsvInt2Next49,1361
    int *            pBins;        // the hash table bins pBins51,1455
    int              nBins;        // the number of bins nBins52,1514
    int              nRefs;        // reference counter for the managernRefs54,1597
    Vec_Str_t        vBuffer;      vBuffer56,1692
static inline char * Abc_NamHandleToStr( Abc_Nam_t * p, int h )        { return (char *)(p->pStore + h);                         }Abc_NamHandleToStr59,1732
static inline int    Abc_NamIntToHandle( Abc_Nam_t * p, int i )        { return Vec_IntEntry(&p->vInt2Handle, i);                }Abc_NamIntToHandle60,1863
static inline char * Abc_NamIntToStr( Abc_Nam_t * p, int i )           { return Abc_NamHandleToStr(p, Abc_NamIntToHandle(p,i));  }Abc_NamIntToStr61,1994
static inline int    Abc_NamIntToNext( Abc_Nam_t * p, int i )          { return Vec_IntEntry(&p->vInt2Next, i);                  }Abc_NamIntToNext62,2125
static inline int *  Abc_NamIntToNextP( Abc_Nam_t * p, int i )         { return Vec_IntEntryP(&p->vInt2Next, i);                 }Abc_NamIntToNextP63,2256
Abc_Nam_t * Abc_NamStart( int nObjs, int nAveSize )Abc_NamStart80,2858
void Abc_NamStop( Abc_Nam_t * p )Abc_NamStop112,3843
void Abc_NamPrint( Abc_Nam_t * p, char * pFileName )Abc_NamPrint134,4368
Abc_Nam_t * Abc_NamRef( Abc_Nam_t * p )Abc_NamRef156,5026
void Abc_NamDeref( Abc_Nam_t * p )Abc_NamDeref173,5360
int Abc_NamObjNumMax( Abc_Nam_t * p )Abc_NamObjNumMax192,5759
int Abc_NamMemUsed( Abc_Nam_t * p )Abc_NamMemUsed208,6113
int Abc_NamMemAlloc( Abc_Nam_t * p )Abc_NamMemAlloc227,6600
int Abc_NamStrHash( const char * pStr, const char * pLim, int nTableSize )Abc_NamStrHash246,7085
int Abc_NamStrHash2( const char * pStr, const char * pLim, int nTableSize ) Abc_NamStrHash2283,8657
static inline int Abc_NamStrcmp( char * pStr, char * pLim, char * pThis )Abc_NamStrcmp310,9336
static inline int * Abc_NamStrHashFind( Abc_Nam_t * p, const char * pStr, const char * pLim )Abc_NamStrHashFind327,9709
void Abc_NamStrHashResize( Abc_Nam_t * p )Abc_NamStrHashResize351,10493
int Abc_NamStrFind( Abc_Nam_t * p, char * pStr )Abc_NamStrFind394,12098
int Abc_NamStrFindLim( Abc_Nam_t * p, char * pStr, char * pLim )Abc_NamStrFindLim398,12200
int Abc_NamStrFindOrAdd( Abc_Nam_t * p, char * pStr, int * pfFound )Abc_NamStrFindOrAdd414,12593
int Abc_NamStrFindOrAddLim( Abc_Nam_t * p, char * pStr, char * pLim, int * pfFound )Abc_NamStrFindOrAddLim453,13779
int Abc_NamStrFindOrAddF( Abc_Nam_t * p, const char * format, ...  )Abc_NamStrFindOrAddF489,14870
char * Abc_NamStr( Abc_Nam_t * p, int NameId )Abc_NamStr516,15779
Vec_Str_t * Abc_NamBuffer( Abc_Nam_t * p )Abc_NamBuffer532,16148
Vec_Int_t * Abc_NamComputeIdMap( Abc_Nam_t * p1, Abc_Nam_t * p2 )Abc_NamComputeIdMap549,16546
int Abc_NamReportCommon( Vec_Int_t * vNameIds1, Abc_Nam_t * p1, Abc_Nam_t * p2 )Abc_NamReportCommon580,17580
char * Abc_NamReportUnique( Vec_Int_t * vNameIds1, Abc_Nam_t * p1, Abc_Nam_t * p2 )Abc_NamReportUnique604,18336

src/misc/mvc/mvcCompare.c,635
int Mvc_CubeCompareInt( Mvc_Cube_t * pC1, Mvc_Cube_t * pC2, Mvc_Cube_t * pMask )Mvc_CubeCompareInt43,1240
int Mvc_CubeCompareSizeAndInt( Mvc_Cube_t * pC1, Mvc_Cube_t * pC2, Mvc_Cube_t * pMask )Mvc_CubeCompareSizeAndInt91,2435
int Mvc_CubeCompareIntUnderMask( Mvc_Cube_t * pC1, Mvc_Cube_t * pC2, Mvc_Cube_t * pMask )Mvc_CubeCompareIntUnderMask146,3889
int Mvc_CubeCompareIntOutsideMask( Mvc_Cube_t * pC1, Mvc_Cube_t * pC2, Mvc_Cube_t * pMask )Mvc_CubeCompareIntOutsideMask205,5466
int Mvc_CubeCompareIntOutsideAndUnderMask( Mvc_Cube_t * pC1, Mvc_Cube_t * pC2, Mvc_Cube_t * pMask )Mvc_CubeCompareIntOutsideAndUnderMask265,7072

src/misc/mvc/mvcOpAlg.c,357
Mvc_Cover_t * Mvc_CoverAlgebraicMultiply( Mvc_Cover_t * pCover1, Mvc_Cover_t * pCover2 )Mvc_CoverAlgebraicMultiply43,1241
Mvc_Cover_t * Mvc_CoverAlgebraicSubtract( Mvc_Cover_t * pCover1, Mvc_Cover_t * pCover2 )Mvc_CoverAlgebraicSubtract88,2736
int Mvc_CoverAlgebraicEqual( Mvc_Cover_t * pCover1, Mvc_Cover_t * pCover2 )Mvc_CoverAlgebraicEqual134,3898

src/misc/mvc/mvcLits.c,673
int Mvc_CoverAnyLiteral( Mvc_Cover_t * pCover, Mvc_Cube_t * pMask )Mvc_CoverAnyLiteral43,1248
int Mvc_CoverBestLiteral( Mvc_Cover_t * pCover, Mvc_Cube_t * pMask )Mvc_CoverBestLiteral104,3115
int Mvc_CoverWorstLiteral( Mvc_Cover_t * pCover, Mvc_Cube_t * pMask )Mvc_CoverWorstLiteral162,4675
Mvc_Cover_t * Mvc_CoverBestLiteralCover( Mvc_Cover_t * pCover, Mvc_Cover_t * pSimple )Mvc_CoverBestLiteralCover223,6257
int Mvc_CoverFirstCubeFirstLit( Mvc_Cover_t * pCover )Mvc_CoverFirstCubeFirstLit261,7308
int Mvc_CoverCountLiterals( Mvc_Cover_t * pCover )Mvc_CoverCountLiterals287,7993
int Mvc_CoverIsOneLiteral( Mvc_Cover_t * pCover )Mvc_CoverIsOneLiteral324,9034

src/misc/mvc/mvcCover.c,742
Mvc_Cover_t * Mvc_CoverAlloc( Mvc_Manager_t * pMem, int nBits )Mvc_CoverAlloc43,1214
Mvc_Cover_t * Mvc_CoverClone( Mvc_Cover_t * p )Mvc_CoverClone79,2238
Mvc_Cover_t * Mvc_CoverDup( Mvc_Cover_t * p )Mvc_CoverDup112,3174
void Mvc_CoverFree( Mvc_Cover_t * p )Mvc_CoverFree138,3769
void Mvc_CoverAllocateMask( Mvc_Cover_t * pCover ) Mvc_CoverAllocateMask168,4513
void Mvc_CoverAllocateArrayLits( Mvc_Cover_t * pCover ) Mvc_CoverAllocateArrayLits185,4887
void Mvc_CoverAllocateArrayCubes( Mvc_Cover_t * pCover ) Mvc_CoverAllocateArrayCubes202,5288
void Mvc_CoverDeallocateMask( Mvc_Cover_t * pCover ) Mvc_CoverDeallocateMask224,5921
void Mvc_CoverDeallocateArrayLits( Mvc_Cover_t * pCover ) Mvc_CoverDeallocateArrayLits241,6284

src/misc/mvc/mvcDivide.c,871
int s_fVerbose = 0;s_fVerbose30,869
void Mvc_CoverDivide( Mvc_Cover_t * pCover, Mvc_Cover_t * pDiv, Mvc_Cover_t ** ppQuo, Mvc_Cover_t ** ppRem )Mvc_CoverDivide47,1344
void Mvc_CoverDivideInternal( Mvc_Cover_t * pCover, Mvc_Cover_t * pDiv, Mvc_Cover_t ** ppQuo, Mvc_Cover_t ** ppRem )Mvc_CoverDivideInternal81,2198
void Mvc_CoverDivideByCube( Mvc_Cover_t * pCover, Mvc_Cover_t * pDiv, Mvc_Cover_t ** ppQuo, Mvc_Cover_t ** ppRem )Mvc_CoverDivideByCube269,8512
void Mvc_CoverDivideByLiteral( Mvc_Cover_t * pCover, Mvc_Cover_t * pDiv, Mvc_Cover_t ** ppQuo, Mvc_Cover_t ** ppRem )Mvc_CoverDivideByLiteral323,10191
void Mvc_CoverDivideByLiteralQuo( Mvc_Cover_t * pCover, int iLit )Mvc_CoverDivideByLiteralQuo374,11808
void Mvc_CoverVerifyDivision( Mvc_Cover_t * pCover, Mvc_Cover_t * pDiv, Mvc_Cover_t * pQuo, Mvc_Cover_t * pRem )Mvc_CoverVerifyDivision409,12835

src/misc/mvc/mvcOpBool.c,108
Mvc_Cover_t * Mvc_CoverBooleanOr( Mvc_Cover_t * pCover1, Mvc_Cover_t * pCover2 )Mvc_CoverBooleanOr43,1212

src/misc/mvc/mvc.h,9381
#define ABC__misc__mvc__mvc_hABC__misc__mvc__mvc_h20,513
#define BITS_PER_WORD BITS_PER_WORD41,1259
#define BITS_PER_WORD_MINUS BITS_PER_WORD_MINUS42,1344
#define BITS_PER_WORD_LOG BITS_PER_WORD_LOG43,1418
#define BITS_DISJOINT BITS_DISJOINT44,1508
#define BITS_FULL BITS_FULL45,1603
typedef unsigned int               Mvc_CubeWord_t;Mvc_CubeWord_t55,2048
typedef struct MvcCubeStruct       Mvc_Cube_t;Mvc_Cube_t56,2099
typedef struct MvcListStruct       Mvc_List_t;Mvc_List_t57,2146
typedef struct MvcCoverStruct      Mvc_Cover_t;Mvc_Cover_t58,2193
typedef struct MvcDataStruct       Mvc_Data_t;Mvc_Data_t59,2241
typedef struct MvcManagerStruct    Mvc_Manager_t;Mvc_Manager_t60,2288
struct MvcCubeStructMvcCubeStruct63,2366
    Mvc_Cube_t *    pNext;        // the next cube in the linked listpNext65,2389
    unsigned        iLast   : 24; // the index of the last wordiLast66,2459
    unsigned        nUnused :  6; // the number of unused bits in the last wordnUnused67,2523
    unsigned        fPrime  :  1; // marks the prime cubefPrime68,2603
    unsigned        fEssen  :  1; // marks the essential cubefEssen69,2661
    unsigned        nOnes;        // the number of 1's in the bit datanOnes70,2723
    Mvc_CubeWord_t  pData[1];     // the first Mvc_CubeWord_t filled with bit datapData71,2794
struct MvcListStructMvcListStruct75,2929
    Mvc_Cube_t *    pHead;        // the first cube in the listpHead77,2952
    Mvc_Cube_t *    pTail;        // the last cube in the listpTail78,3016
    int             nItems;       // the number of cubes in the listnItems79,3079
struct MvcCoverStructMvcCoverStruct83,3180
    int             nWords;       // the number of machine wordsnWords85,3204
    int             nUnused;      // the number of unused bits in the last wordnUnused86,3269
    int             nBits;        // the number of used data bits in the cubenBits87,3349
    Mvc_List_t      lCubes;       // the single-linked list of cubeslCubes88,3427
    Mvc_Cube_t **   pCubes;       // the array of cubes (for sorting)pCubes89,3496
    int             nCubesAlloc;  // the size of allocated storagenCubesAlloc90,3566
    int *           pLits;        // the counter of lit occurrances in cubespLits91,3633
    Mvc_Cube_t *    pMask;        // the multipurpose maskpMask92,3710
    Mvc_Manager_t * pMem;         // the memory managerpMem93,3769
struct MvcDataStructMvcDataStruct97,3887
    Mvc_Manager_t * pMan;         // the memory managerpMan99,3910
    int             nBinVars;     // the number of binary variablesnBinVars101,4026
    Mvc_Cube_t *    pMaskBin;     // the mask to select the binary bits onlypMaskBin102,4094
    Mvc_Cube_t **   ppMasks;      // the mask to select each MV variableppMasks103,4171
    Mvc_Cube_t *    ppTemp[3];    // the temporary cubesppTemp104,4244
struct MvcManagerStructMvcManagerStruct108,4376
    Extra_MmFixed_t * pManC;        // the manager for coverspManC110,4402
    Extra_MmFixed_t * pMan1;        // the manager for 1-word cubespMan1111,4464
    Extra_MmFixed_t * pMan2;        // the manager for 2-word cubespMan2112,4532
    Extra_MmFixed_t * pMan4;        // the manager for 3-word cubespMan4113,4600
#define Mvc_CubeReadNext(Mvc_CubeReadNext121,4936
#define Mvc_CubeReadNextP(Mvc_CubeReadNextP122,4989
#define Mvc_CubeReadLast(Mvc_CubeReadLast123,5043
#define Mvc_CubeReadSize(Mvc_CubeReadSize124,5096
#define Mvc_CubeSetNext(Mvc_CubeSetNext126,5191
#define Mvc_CubeSetLast(Mvc_CubeSetLast127,5253
#define Mvc_CubeSetSize(Mvc_CubeSetSize128,5315
#define Mvc_Cube1Words(Mvc_Cube1Words131,5410
#define Mvc_Cube2Words(Mvc_Cube2Words132,5469
#define Mvc_CubeNWords(Mvc_CubeNWords133,5528
#define Mvc_CubeWhichWord(Mvc_CubeWhichWord135,5611
#define Mvc_CubeWhichBit(Mvc_CubeWhichBit136,5677
#define Mvc_CubeBitValue(Mvc_CubeBitValue138,5774
#define Mvc_CubeBitInsert(Mvc_CubeBitInsert139,5907
#define Mvc_CubeBitRemove(Mvc_CubeBitRemove140,6035
#define Mvc_CubeVarValue(Mvc_CubeVarValue142,6207
#define Mvc_Cube1BitClean(Mvc_Cube1BitClean147,6400
#define Mvc_Cube2BitClean(Mvc_Cube2BitClean149,6468
#define Mvc_CubeNBitClean(Mvc_CubeNBitClean152,6572
#define Mvc_CubeBitCleanUnused(Mvc_CubeBitCleanUnused160,6756
#define Mvc_Cube1BitFill(Mvc_Cube1BitFill164,6905
#define Mvc_Cube2BitFill(Mvc_Cube2BitFill166,7001
#define Mvc_CubeNBitFill(Mvc_CubeNBitFill169,7143
#define Mvc_Cube1BitNot(Mvc_Cube1BitNot178,7391
#define Mvc_Cube2BitNot(Mvc_Cube2BitNot180,7487
#define Mvc_CubeNBitNot(Mvc_CubeNBitNot183,7629
#define Mvc_Cube1BitCopy(Mvc_Cube1BitCopy191,7847
#define Mvc_Cube2BitCopy(Mvc_Cube2BitCopy193,7942
#define Mvc_CubeNBitCopy(Mvc_CubeNBitCopy196,8093
#define Mvc_Cube1BitOr(Mvc_Cube1BitOr203,8260
#define Mvc_Cube2BitOr(Mvc_Cube2BitOr205,8380
#define Mvc_CubeNBitOr(Mvc_CubeNBitOr208,8576
#define Mvc_Cube1BitExor(Mvc_Cube1BitExor215,8772
#define Mvc_Cube2BitExor(Mvc_Cube2BitExor217,8894
#define Mvc_CubeNBitExor(Mvc_CubeNBitExor220,9092
#define Mvc_Cube1BitAnd(Mvc_Cube1BitAnd227,9290
#define Mvc_Cube2BitAnd(Mvc_Cube2BitAnd229,9411
#define Mvc_CubeNBitAnd(Mvc_CubeNBitAnd232,9608
#define Mvc_Cube1BitSharp(Mvc_Cube1BitSharp239,9806
#define Mvc_Cube2BitSharp(Mvc_Cube2BitSharp241,9932
#define Mvc_CubeNBitSharp(Mvc_CubeNBitSharp244,10137
#define Mvc_Cube1BitEmpty(Mvc_Cube1BitEmpty251,10339
#define Mvc_Cube2BitEmpty(Mvc_Cube2BitEmpty253,10413
#define Mvc_CubeNBitEmpty(Mvc_CubeNBitEmpty255,10512
#define Mvc_Cube1BitEqual(Mvc_Cube1BitEqual263,10696
#define Mvc_Cube2BitEqual(Mvc_Cube2BitEqual265,10799
#define Mvc_CubeNBitEqual(Mvc_CubeNBitEqual268,10961
#define Mvc_Cube1BitLess(Mvc_Cube1BitLess276,11184
#define Mvc_Cube2BitLess(Mvc_Cube2BitLess278,11286
#define Mvc_CubeNBitLess(Mvc_CubeNBitLess281,11496
#define Mvc_Cube1BitMore(Mvc_Cube1BitMore289,11725
#define Mvc_Cube2BitMore(Mvc_Cube2BitMore291,11827
#define Mvc_CubeNBitMore(Mvc_CubeNBitMore294,12037
#define Mvc_Cube1BitNotImpl(Mvc_Cube1BitNotImpl302,12266
#define Mvc_Cube2BitNotImpl(Mvc_Cube2BitNotImpl304,12372
#define Mvc_CubeNBitNotImpl(Mvc_CubeNBitNotImpl307,12536
#define Mvc_Cube1BitDisjoint(Mvc_Cube1BitDisjoint315,12767
#define Mvc_Cube2BitDisjoint(Mvc_Cube2BitDisjoint317,12881
#define Mvc_CubeNBitDisjoint(Mvc_CubeNBitDisjoint320,13062
#define Mvc_Cube1BitEqualUnderMask(Mvc_Cube1BitEqualUnderMask328,13298
#define Mvc_Cube2BitEqualUnderMask(Mvc_Cube2BitEqualUnderMask330,13462
#define Mvc_CubeNBitEqualUnderMask(Mvc_CubeNBitEqualUnderMask333,13732
#define Mvc_Cube1BitEqualOutsideMask(Mvc_Cube1BitEqualOutsideMask341,14032
#define Mvc_Cube2BitEqualOutsideMask(Mvc_Cube2BitEqualOutsideMask343,14198
#define Mvc_CubeNBitEqualOutsideMask(Mvc_CubeNBitEqualOutsideMask346,14470
#define Mvc_Cube1BitIntersectUnderMask(Mvc_Cube1BitIntersectUnderMask354,14771
#define Mvc_Cube2BitIntersectUnderMask(Mvc_Cube2BitIntersectUnderMask356,14918
#define Mvc_CubeNBitIntersectUnderMask(Mvc_CubeNBitIntersectUnderMask359,15150
#define Mvc_Cube1BitNotImplUnderMask(Mvc_Cube1BitNotImplUnderMask367,15416
#define Mvc_Cube2BitNotImplUnderMask(Mvc_Cube2BitNotImplUnderMask369,15558
#define Mvc_CubeNBitNotImplUnderMask(Mvc_CubeNBitNotImplUnderMask372,15779
#define Mvc_CubeBitClean(Mvc_CubeBitClean381,16120
#define Mvc_CubeBitFill(Mvc_CubeBitFill385,16360
#define Mvc_CubeBitNot(Mvc_CubeBitNot389,16596
#define Mvc_CubeBitCopy(Mvc_CubeBitCopy393,16828
#define Mvc_CubeBitOr(Mvc_CubeBitOr397,17096
#define Mvc_CubeBitExor(Mvc_CubeBitExor401,17384
#define Mvc_CubeBitAnd(Mvc_CubeBitAnd405,17680
#define Mvc_CubeBitSharp(Mvc_CubeBitSharp409,17972
#define Mvc_CubeBitEmpty(Mvc_CubeBitEmpty413,18272
#define Mvc_CubeBitEqual(Mvc_CubeBitEqual417,18532
#define Mvc_CubeBitLess(Mvc_CubeBitLess421,18824
#define Mvc_CubeBitMore(Mvc_CubeBitMore425,19112
#define Mvc_CubeBitNotImpl(Mvc_CubeBitNotImpl429,19400
#define Mvc_CubeBitDisjoint(Mvc_CubeBitDisjoint433,19700
#define Mvc_CubeBitEqualUnderMask(Mvc_CubeBitEqualUnderMask437,20004
#define Mvc_CubeBitEqualOutsideMask(Mvc_CubeBitEqualOutsideMask441,20356
#define Mvc_CubeBitIntersectUnderMask(Mvc_CubeBitIntersectUnderMask445,20716
#define Mvc_CubeBitNotImplUnderMask(Mvc_CubeBitNotImplUnderMask449,21084
#define Mvc_ListAddCubeHead(Mvc_ListAddCubeHead456,21471
#define Mvc_ListAddCubeTail(Mvc_ListAddCubeTail471,21853
#define Mvc_ListDeleteCube(Mvc_ListDeleteCube481,22151
#define Mvc_CoverAddCubeHead(Mvc_CoverAddCubeHead496,22504
#define Mvc_CoverAddCubeTail(Mvc_CoverAddCubeTail501,22641
#define Mvc_CoverDeleteCube(Mvc_CoverDeleteCube506,22778
#define Mvc_ListForEachCube(Mvc_ListForEachCube518,22980
#define Mvc_ListForEachCubeSafe(Mvc_ListForEachCubeSafe522,23102
#define Mvc_CoverForEachCube(Mvc_CoverForEachCube528,23339
#define Mvc_CoverForEachCubeWithIndex(Mvc_CoverForEachCubeWithIndex532,23473
#define Mvc_CoverForEachCubeSafe(Mvc_CoverForEachCubeSafe536,23643
#define Mvc_CoverForEachCubeStart(Mvc_CoverForEachCubeStart542,23898
#define Mvc_CoverForEachCubeStartSafe(Mvc_CoverForEachCubeStartSafe546,24021
#define Mvc_CubeForEachBit(Mvc_CubeForEachBit553,24262
#define Mvc_CubeForEachVarValue(Mvc_CubeForEachVarValue558,24483
#define MEM_ALLOC(MEM_ALLOC567,24863
#define MEM_FREE(MEM_FREE568,24964

src/misc/mvc/mvcUtils.c,2041
static int bit_count[256] = {bit_count28,744
void Mvc_CoverSupport( Mvc_Cover_t * pCover, Mvc_Cube_t * pSupp )Mvc_CoverSupport58,1881
void Mvc_CoverSupportAnd( Mvc_Cover_t * pCover, Mvc_Cube_t * pSupp )Mvc_CoverSupportAnd79,2381
int Mvc_CoverSupportSizeBinary( Mvc_Cover_t * pCover )Mvc_CoverSupportSizeBinary100,2884
int Mvc_CoverSupportVarBelongs( Mvc_Cover_t * pCover, int iVar )Mvc_CoverSupportVarBelongs130,3619
void Mvc_CoverCommonCube( Mvc_Cover_t * pCover, Mvc_Cube_t * pComCube )Mvc_CoverCommonCube155,4263
int Mvc_CoverIsCubeFree( Mvc_Cover_t * pCover )Mvc_CoverIsCubeFree176,4778
void Mvc_CoverMakeCubeFree( Mvc_Cover_t * pCover )Mvc_CoverMakeCubeFree198,5307
Mvc_Cover_t * Mvc_CoverCommonCubeCover( Mvc_Cover_t * pCover )Mvc_CoverCommonCubeCover220,5886
int Mvc_CoverCheckSuppContainment( Mvc_Cover_t * pCover1, Mvc_Cover_t * pCover2 )Mvc_CoverCheckSuppContainment247,6594
int Mvc_CoverSetCubeSizes( Mvc_Cover_t * pCover )Mvc_CoverSetCubeSizes272,7314
int Mvc_CoverGetCubeSize( Mvc_Cube_t * pCube )Mvc_CoverGetCubeSize308,8420
int Mvc_CoverCountCubePairDiffs( Mvc_Cover_t * pCover, unsigned char pDiffs[] )Mvc_CoverCountCubePairDiffs342,9779
Mvc_Cover_t * Mvc_CoverRemap( Mvc_Cover_t * p, int * pVarsRem, int nVarsRem )Mvc_CoverRemap400,12042
void Mvc_CoverCopyColumn( Mvc_Cover_t * pCoverOld, Mvc_Cover_t * pCoverNew, Mvc_CoverCopyColumn440,13415
void Mvc_CoverInverse( Mvc_Cover_t * pCover )Mvc_CoverInverse477,14572
Mvc_Cover_t * Mvc_CoverRemoveDontCareLits( Mvc_Cover_t * pCover )Mvc_CoverRemoveDontCareLits496,15048
Mvc_Cover_t * Mvc_CoverCofactor( Mvc_Cover_t * p, int iValue, int iValueOther )Mvc_CoverCofactor518,15597
Mvc_Cover_t * Mvc_CoverFlipVar( Mvc_Cover_t * p, int iValue0, int iValue1 )Mvc_CoverFlipVar546,16412
Mvc_Cover_t * Mvc_CoverUnivQuantify( Mvc_Cover_t * p, Mvc_CoverUnivQuantify606,18248
Mvc_Cover_t * Mvc_CoverTranspose( Mvc_Cover_t * pCover )Mvc_CoverTranspose804,25027
int Mvc_UtilsCheckUnusedZeros( Mvc_Cover_t * pCover )Mvc_UtilsCheckUnusedZeros842,26116

src/misc/mvc/mvcMan.c,126
Mvc_Manager_t * Mvc_ManagerStart()Mvc_ManagerStart44,1228
void Mvc_ManagerFree( Mvc_Manager_t * p )Mvc_ManagerFree67,1937

src/misc/mvc/mvcDivisor.c,171
Mvc_Cover_t * Mvc_CoverDivisor( Mvc_Cover_t * pCover )Mvc_CoverDivisor46,1374
void Mvc_CoverDivisorZeroKernel( Mvc_Cover_t * pCover )Mvc_CoverDivisorZeroKernel73,2169

src/misc/mvc/mvcSort.c,512
void Mvc_CoverSort( Mvc_Cover_t * pCover, Mvc_Cube_t * pMask, int (* pCompareFunc)(Mvc_Cube_t *, Mvc_Cube_t *, Mvc_Cube_t *) )Mvc_CoverSort47,1559
Mvc_Cube_t * Mvc_CoverSort_rec( Mvc_Cube_t * pList, int nItems, Mvc_Cube_t * pMask, int (* pCompareFunc)(Mvc_Cube_t *, Mvc_Cube_t *, Mvc_Cube_t *) )Mvc_CoverSort_rec75,2560
Mvc_Cube_t * Mvc_CoverSortMerge( Mvc_Cube_t * pList1, Mvc_Cube_t * pList2, Mvc_Cube_t * pMask, int (* pCompareFunc)(Mvc_Cube_t *, Mvc_Cube_t *, Mvc_Cube_t *) )Mvc_CoverSortMerge116,3651

src/misc/mvc/mvcPrint.c,330
void Mvc_CoverPrint( Mvc_Cover_t * pCover )Mvc_CoverPrint47,1308
void Mvc_CubePrint( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CubePrint79,2105
void Mvc_CoverPrintBinary( Mvc_Cover_t * pCover )Mvc_CoverPrintBinary101,2633
void Mvc_CubePrintBinary( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CubePrintBinary133,3442

src/misc/mvc/mvcList.c,1323
void Mvc_ListAddCubeHead_( Mvc_List_t * pList, Mvc_Cube_t * pCube )Mvc_ListAddCubeHead_43,1203
void Mvc_ListAddCubeTail_( Mvc_List_t * pList, Mvc_Cube_t * pCube )Mvc_ListAddCubeTail_71,1775
void Mvc_ListDeleteCube_( Mvc_List_t * pList, Mvc_Cube_t * pPrev, Mvc_Cube_t * pCube )Mvc_ListDeleteCube_94,2288
void Mvc_CoverAddCubeHead_( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CoverAddCubeHead_121,2934
void Mvc_CoverAddCubeTail_( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CoverAddCubeTail_149,3550
void Mvc_CoverDeleteCube_( Mvc_Cover_t * pCover, Mvc_Cube_t * pPrev, Mvc_Cube_t * pCube )Mvc_CoverDeleteCube_173,4108
void Mvc_CoverAddDupCubeHead( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CoverAddDupCubeHead202,4801
void Mvc_CoverAddDupCubeTail( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CoverAddDupCubeTail221,5266
void Mvc_CoverAddLiteralsOfCube( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CoverAddLiteralsOfCube245,5925
void Mvc_CoverDeleteLiteralsOfCube( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CoverDeleteLiteralsOfCube265,6416
void Mvc_CoverList2Array( Mvc_Cover_t * pCover )Mvc_CoverList2Array286,6960
void Mvc_CoverArray2List( Mvc_Cover_t * pCover )Mvc_CoverArray2List310,7604
Mvc_Cube_t * Mvc_ListGetTailFromHead( Mvc_Cube_t * pHead )Mvc_ListGetTailFromHead351,8647

src/misc/mvc/mvcCube.c,324
Mvc_Cube_t * Mvc_CubeAlloc( Mvc_Cover_t * pCover )Mvc_CubeAlloc43,1188
Mvc_Cube_t * Mvc_CubeDup( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CubeDup94,2596
void Mvc_CubeFree( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube )Mvc_CubeFree114,3037
void Mvc_CubeBitRemoveDcs( Mvc_Cube_t * pCube )Mvc_CubeBitRemoveDcs159,4133

src/misc/mvc/mvcContain.c,248
int  Mvc_CoverContain( Mvc_Cover_t * pCover )Mvc_CoverContain47,1414
void Mvc_CoverRemoveDuplicates( Mvc_Cover_t * pCover )Mvc_CoverRemoveDuplicates72,2110
void Mvc_CoverRemoveContained( Mvc_Cover_t * pCover )Mvc_CoverRemoveContained108,3183

src/misc/mvc/mvc.c,0

src/misc/mvc/mvcApi.c,2229
int          Mvc_CoverReadWordNum( Mvc_Cover_t * pCover )   { return pCover->nWords;         }Mvc_CoverReadWordNum43,1161
int          Mvc_CoverReadBitNum( Mvc_Cover_t * pCover )    { return pCover->nBits;          }Mvc_CoverReadBitNum44,1256
int          Mvc_CoverReadCubeNum( Mvc_Cover_t * pCover )   { return pCover->lCubes.nItems; }Mvc_CoverReadCubeNum45,1351
Mvc_Cube_t * Mvc_CoverReadCubeHead( Mvc_Cover_t * pCover )  { return pCover->lCubes.pHead;  }Mvc_CoverReadCubeHead46,1445
Mvc_Cube_t * Mvc_CoverReadCubeTail( Mvc_Cover_t * pCover )  { return pCover->lCubes.pTail;  }Mvc_CoverReadCubeTail47,1539
Mvc_List_t * Mvc_CoverReadCubeList( Mvc_Cover_t * pCover )  { return &pCover->lCubes;        }Mvc_CoverReadCubeList48,1633
int          Mvc_ListReadCubeNum( Mvc_List_t * pList )   { return pList->nItems; }Mvc_ListReadCubeNum62,1964
Mvc_Cube_t * Mvc_ListReadCubeHead( Mvc_List_t * pList )  { return pList->pHead;  }Mvc_ListReadCubeHead63,2047
Mvc_Cube_t * Mvc_ListReadCubeTail( Mvc_List_t * pList )  { return pList->pTail;  }Mvc_ListReadCubeTail64,2130
void         Mvc_CoverSetCubeNum( Mvc_Cover_t * pCover,int nItems )           { pCover->lCubes.nItems = nItems; }Mvc_CoverSetCubeNum77,2448
void         Mvc_CoverSetCubeHead( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube ) { pCover->lCubes.pHead = pCube;   }Mvc_CoverSetCubeHead78,2562
void         Mvc_CoverSetCubeTail( Mvc_Cover_t * pCover, Mvc_Cube_t * pCube ) { pCover->lCubes.pTail = pCube;   }Mvc_CoverSetCubeTail79,2676
void         Mvc_CoverSetCubeList( Mvc_Cover_t * pCover, Mvc_List_t * pList ) { pCover->lCubes = *pList;        }Mvc_CoverSetCubeList80,2790
int Mvc_CoverIsEmpty( Mvc_Cover_t * pCover )Mvc_CoverIsEmpty93,3139
int Mvc_CoverIsTautology( Mvc_Cover_t * pCover )Mvc_CoverIsTautology109,3469
int Mvc_CoverIsBinaryBuffer( Mvc_Cover_t * pCover )Mvc_CoverIsBinaryBuffer135,4069
void Mvc_CoverMakeEmpty( Mvc_Cover_t * pCover )Mvc_CoverMakeEmpty160,4640
void Mvc_CoverMakeTautology( Mvc_Cover_t * pCover )Mvc_CoverMakeTautology181,5151
Mvc_Cover_t * Mvc_CoverCreateEmpty( Mvc_Cover_t * pCover )Mvc_CoverCreateEmpty202,5623
Mvc_Cover_t * Mvc_CoverCreateTautology( Mvc_Cover_t * pCover )Mvc_CoverCreateTautology220,6035

src/misc/avl/avl.c,1532
#define HEIGHT(HEIGHT23,295
#define BALANCE(BALANCE24,362
#define compute_height(compute_height26,432
#define COMPARE(COMPARE31,589
#define STACK_SIZE STACK_SIZE37,769
avl_init_table (compar)avl_init_table47,978
avl_lookup (tree, key, value_p)avl_lookup61,1185
avl_first (tree, key_p, value_p)avl_first85,1725
avl_last (tree, key_p, value_p)avl_last111,2255
avl_insert (tree, key, value)avl_insert136,2786
avl_find_or_add (tree, key, slot_p)avl_find_or_add170,3612
avl_delete (tree, key_p, value_p)avl_delete207,4634
avl_record_gen_forward (node, gen)avl_record_gen_forward259,6045
avl_record_gen_backward (node, gen)avl_record_gen_backward273,6325
avl_init_gen (tree, dir)avl_init_gen287,6612
avl_gen (gen, key_p, value_p)avl_gen314,7141
avl_free_gen (gen)avl_free_gen338,7557
find_rightmost (node_p)find_rightmost346,7662
do_rebalance (stack_nodep, stack_n)do_rebalance368,8088
rotate_left (node_p)rotate_left402,8885
rotate_right (node_p)rotate_right429,9549
avl_walk_forward (node, func)avl_walk_forward455,10202
avl_walk_backward (node, func)avl_walk_backward469,10462
avl_foreach (tree, func, direction)avl_foreach483,10718
free_entry (node, key_free, value_free)free_entry500,10981
avl_free_table (tree, key_free, value_free)avl_free_table519,11405
avl_count (tree)avl_count530,11590
new_node (key, value)new_node537,11677
avl_numcmp (x, y)avl_numcmp553,11921
avl_check_tree (tree)avl_check_tree560,11992
do_check_tree (node, compar, error)do_check_tree570,12146

src/misc/avl/avl.h,1181
#define ABC__misc__avl__avl_hABC__misc__avl__avl_h11,218
#define EXTERNEXTERN17,279
#define ARGS(ARGS20,308
#define MAX(MAX23,344
#define NIL(NIL25,389
#define ALLOC(ALLOC27,433
#define REALLOC(REALLOC29,507
#define FREE(FREE31,603
typedef struct avl_node_struct avl_node;avl_node36,658
struct avl_node_struct {avl_node_struct37,699
    avl_node *left, *right;left38,724
    avl_node *left, *right;right38,724
    char *key;key39,752
    char *value;value40,767
    int height;height41,784
typedef struct avl_tree_struct avl_tree;avl_tree45,805
struct avl_tree_struct {avl_tree_struct46,846
    avl_node *root;root47,871
    int (*compar)();compar48,891
    int num_entries;num_entries49,912
    int modified;modified50,933
typedef struct avl_generator_struct avl_generator;avl_generator54,956
struct avl_generator_struct {avl_generator_struct55,1007
    avl_tree *tree;tree56,1037
    avl_node **nodelist;nodelist57,1057
    int count;count58,1082
#define AVL_FORWARD AVL_FORWARD62,1102
#define AVL_BACKWARD AVL_BACKWARD63,1128
#define avl_is_member(avl_is_member81,1959
#define avl_foreach_item(avl_foreach_item83,2031

src/generic.c,0

arch_flags.c,21
int main()main3,20

lib/semaphore.h,870
#define SEMAPHORE_HSEMAPHORE_H40,1639
#undef PTW32_LEVELPTW32_LEVEL42,1660
#define PTW32_LEVEL PTW32_LEVEL45,1707
#undef PTW32_LEVELPTW32_LEVEL50,1813
#define PTW32_LEVEL PTW32_LEVEL51,1832
#undef PTW32_LEVELPTW32_LEVEL56,1914
#define PTW32_LEVEL PTW32_LEVEL57,1933
#define PTW32_LEVEL_MAX PTW32_LEVEL_MAX61,2001
#define PTW32_LEVEL PTW32_LEVEL64,2054
#    define PTW32_DLLPORT PTW32_DLLPORT80,2531
#    define PTW32_DLLPORT PTW32_DLLPORT82,2588
#  define PTW32_DLLPORTPTW32_DLLPORT85,2652
#    define NEED_ERRNONEED_ERRNO95,2861
#    define NEED_SEMNEED_SEM96,2884
#    define HAVE_MODE_THAVE_MODE_T99,2959
#define _POSIX_SEMAPHORES_POSIX_SEMAPHORES115,3165
typedef unsigned int mode_t;mode_t123,3285
typedef struct sem_t_ * sem_t;sem_t127,3323
#undef PTW32_LEVELPTW32_LEVEL163,4323
#undef PTW32_LEVEL_MAXPTW32_LEVEL_MAX164,4342

lib/pthread.h,11017
#define PTHREAD_HPTHREAD_H34,1511
#define PTW32_VERSION PTW32_VERSION40,1659
#define PTW32_VERSION_STRING PTW32_VERSION_STRING41,1689
# define __CLEANUP_C__CLEANUP_C74,2953
#undef PTW32_LEVELPTW32_LEVEL86,3243
#define PTW32_LEVEL PTW32_LEVEL89,3290
#undef PTW32_LEVELPTW32_LEVEL94,3396
#define PTW32_LEVEL PTW32_LEVEL95,3415
#undef PTW32_LEVELPTW32_LEVEL100,3497
#define PTW32_LEVEL PTW32_LEVEL101,3516
#define PTW32_LEVEL_MAX PTW32_LEVEL_MAX105,3584
#define PTW32_LEVEL PTW32_LEVEL108,3637
#   define HAVE_STRUCT_TIMESPEC HAVE_STRUCT_TIMESPEC113,3719
#   define HAVE_SIGNAL_H HAVE_SIGNAL_H114,3753
#   undef HAVE_CONFIG_HHAVE_CONFIG_H115,3787
#define PTW32_INCLUDE_WINDOWS_HPTW32_INCLUDE_WINDOWS_H194,6621
typedef unsigned long DWORD_PTR;DWORD_PTR205,6850
  PTW32_FALSE = 0,PTW32_FALSE234,7326
  PTW32_TRUE = (! PTW32_FALSE)PTW32_TRUE235,7345
#    define NEED_ERRNONEED_ERRNO245,7557
#    define NEED_SEMNEED_SEM246,7580
#    define HAVE_MODE_THAVE_MODE_T249,7655
#  define ENOTSUP ENOTSUP269,7936
#  define ETIMEDOUT ETIMEDOUT273,8021
#  define ENOSYS ENOSYS277,8112
#    define EDEADLK EDEADLK282,8207
#    define EDEADLK EDEADLK284,8245
# define PTW32__HANDLE_DEFPTW32__HANDLE_DEF297,8534
# define HANDLE HANDLE298,8561
# define PTW32__DWORD_DEFPTW32__DWORD_DEF301,8605
# define DWORD DWORD302,8631
#define HAVE_STRUCT_TIMESPEC HAVE_STRUCT_TIMESPEC307,8704
struct timespec {timespec308,8735
        long tv_sec;tv_sec309,8753
        long tv_nsec;tv_nsec310,8774
#define SIG_BLOCK SIG_BLOCK315,8852
#define SIG_UNBLOCK SIG_UNBLOCK319,8917
#define SIG_SETMASK SIG_SETMASK323,8985
#undef _POSIX_THREADS_POSIX_THREADS421,13010
#define _POSIX_THREADS _POSIX_THREADS422,13032
#undef _POSIX_READER_WRITER_LOCKS_POSIX_READER_WRITER_LOCKS424,13064
#define _POSIX_READER_WRITER_LOCKS _POSIX_READER_WRITER_LOCKS425,13098
#undef _POSIX_SPIN_LOCKS_POSIX_SPIN_LOCKS427,13142
#define _POSIX_SPIN_LOCKS _POSIX_SPIN_LOCKS428,13167
#undef _POSIX_BARRIERS_POSIX_BARRIERS430,13202
#define _POSIX_BARRIERS _POSIX_BARRIERS431,13225
#undef _POSIX_THREAD_SAFE_FUNCTIONS_POSIX_THREAD_SAFE_FUNCTIONS433,13258
#define _POSIX_THREAD_SAFE_FUNCTIONS _POSIX_THREAD_SAFE_FUNCTIONS434,13294
#undef _POSIX_THREAD_ATTR_STACKSIZE_POSIX_THREAD_ATTR_STACKSIZE436,13340
#define _POSIX_THREAD_ATTR_STACKSIZE _POSIX_THREAD_ATTR_STACKSIZE437,13376
#undef _POSIX_THREAD_ATTR_STACKADDR_POSIX_THREAD_ATTR_STACKADDR442,13472
#define _POSIX_THREAD_ATTR_STACKADDR _POSIX_THREAD_ATTR_STACKADDR443,13508
#undef _POSIX_THREAD_PRIO_INHERIT_POSIX_THREAD_PRIO_INHERIT445,13549
#define _POSIX_THREAD_PRIO_INHERIT _POSIX_THREAD_PRIO_INHERIT446,13583
#undef _POSIX_THREAD_PRIO_PROTECT_POSIX_THREAD_PRIO_PROTECT448,13622
#define _POSIX_THREAD_PRIO_PROTECT _POSIX_THREAD_PRIO_PROTECT449,13656
#undef _POSIX_THREAD_PRIORITY_SCHEDULING_POSIX_THREAD_PRIORITY_SCHEDULING452,13730
#define _POSIX_THREAD_PRIORITY_SCHEDULING _POSIX_THREAD_PRIORITY_SCHEDULING453,13771
#undef _POSIX_THREAD_PROCESS_SHARED_POSIX_THREAD_PROCESS_SHARED455,13817
#define _POSIX_THREAD_PROCESS_SHARED _POSIX_THREAD_PROCESS_SHARED456,13853
#undef _POSIX_THREAD_DESTRUCTOR_ITERATIONS_POSIX_THREAD_DESTRUCTOR_ITERATIONS491,14947
#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS _POSIX_THREAD_DESTRUCTOR_ITERATIONS492,14990
#undef PTHREAD_DESTRUCTOR_ITERATIONSPTHREAD_DESTRUCTOR_ITERATIONS494,15041
#define PTHREAD_DESTRUCTOR_ITERATIONS PTHREAD_DESTRUCTOR_ITERATIONS495,15078
#undef _POSIX_THREAD_KEYS_MAX_POSIX_THREAD_KEYS_MAX497,15163
#define _POSIX_THREAD_KEYS_MAX _POSIX_THREAD_KEYS_MAX498,15193
#undef PTHREAD_KEYS_MAXPTHREAD_KEYS_MAX500,15246
#define PTHREAD_KEYS_MAX PTHREAD_KEYS_MAX501,15270
#undef PTHREAD_STACK_MINPTHREAD_STACK_MIN503,15342
#define PTHREAD_STACK_MIN PTHREAD_STACK_MIN504,15367
#undef _POSIX_THREAD_THREADS_MAX_POSIX_THREAD_THREADS_MAX506,15418
#define _POSIX_THREAD_THREADS_MAX _POSIX_THREAD_THREADS_MAX507,15451
#undef PTHREAD_THREADS_MAXPTHREAD_THREADS_MAX510,15527
#define PTHREAD_THREADS_MAX PTHREAD_THREADS_MAX511,15554
#undef _POSIX_SEM_NSEMS_MAX_POSIX_SEM_NSEMS_MAX513,15608
#define _POSIX_SEM_NSEMS_MAX _POSIX_SEM_NSEMS_MAX514,15636
#undef SEM_NSEMS_MAXSEM_NSEMS_MAX517,15713
#define SEM_NSEMS_MAX SEM_NSEMS_MAX518,15734
#undef _POSIX_SEM_VALUE_MAX_POSIX_SEM_VALUE_MAX520,15788
#define _POSIX_SEM_VALUE_MAX _POSIX_SEM_VALUE_MAX521,15816
#undef SEM_VALUE_MAXSEM_VALUE_MAX523,15871
#define SEM_VALUE_MAX SEM_VALUE_MAX524,15892
#    define PTW32_DLLPORT PTW32_DLLPORT539,16358
#    define PTW32_DLLPORT PTW32_DLLPORT541,16415
#  define PTW32_DLLPORTPTW32_DLLPORT544,16479
#define PTW32_CDECL PTW32_CDECL557,17031
    void * p;                   /* Pointer to actual object */p568,17322
    unsigned int x;             /* Extra information - reuse count etc */x569,17385
} ptw32_handle_t;ptw32_handle_t570,17459
typedef ptw32_handle_t pthread_t;pthread_t572,17478
typedef struct pthread_attr_t_ * pthread_attr_t;pthread_attr_t573,17512
typedef struct pthread_once_t_ pthread_once_t;pthread_once_t574,17561
typedef struct pthread_key_t_ * pthread_key_t;pthread_key_t575,17608
typedef struct pthread_mutex_t_ * pthread_mutex_t;pthread_mutex_t576,17655
typedef struct pthread_mutexattr_t_ * pthread_mutexattr_t;pthread_mutexattr_t577,17706
typedef struct pthread_cond_t_ * pthread_cond_t;pthread_cond_t578,17765
typedef struct pthread_condattr_t_ * pthread_condattr_t;pthread_condattr_t579,17814
typedef struct pthread_rwlock_t_ * pthread_rwlock_t;pthread_rwlock_t581,17878
typedef struct pthread_rwlockattr_t_ * pthread_rwlockattr_t;pthread_rwlockattr_t582,17931
typedef struct pthread_spinlock_t_ * pthread_spinlock_t;pthread_spinlock_t583,17992
typedef struct pthread_barrier_t_ * pthread_barrier_t;pthread_barrier_t584,18049
typedef struct pthread_barrierattr_t_ * pthread_barrierattr_t;pthread_barrierattr_t585,18104
  PTHREAD_CREATE_JOINABLE       = 0,  /* Default */PTHREAD_CREATE_JOINABLE599,18340
  PTHREAD_CREATE_DETACHED       = 1,PTHREAD_CREATE_DETACHED600,18392
  PTHREAD_INHERIT_SCHED         = 0,PTHREAD_INHERIT_SCHED605,18475
  PTHREAD_EXPLICIT_SCHED        = 1,  /* Default */PTHREAD_EXPLICIT_SCHED606,18512
  PTHREAD_SCOPE_PROCESS         = 0,PTHREAD_SCOPE_PROCESS611,18598
  PTHREAD_SCOPE_SYSTEM          = 1,  /* Default */PTHREAD_SCOPE_SYSTEM612,18635
  PTHREAD_CANCEL_ENABLE         = 0,  /* Default */PTHREAD_CANCEL_ENABLE617,18731
  PTHREAD_CANCEL_DISABLE        = 1,PTHREAD_CANCEL_DISABLE618,18783
  PTHREAD_CANCEL_ASYNCHRONOUS   = 0,PTHREAD_CANCEL_ASYNCHRONOUS623,18864
  PTHREAD_CANCEL_DEFERRED       = 1,  /* Default */PTHREAD_CANCEL_DEFERRED624,18901
  PTHREAD_PROCESS_PRIVATE       = 0,PTHREAD_PROCESS_PRIVATE630,19036
  PTHREAD_PROCESS_SHARED        = 1,PTHREAD_PROCESS_SHARED631,19073
  PTHREAD_BARRIER_SERIAL_THREAD = -1PTHREAD_BARRIER_SERIAL_THREAD636,19142
#define PTHREAD_CANCELED PTHREAD_CANCELED646,19301
#define PTHREAD_ONCE_INIT PTHREAD_ONCE_INIT656,19463
struct pthread_once_t_pthread_once_t_658,19520
  int          done;        /* indicates if user function has been executed */done660,19545
  void *       lock;lock661,19624
  int          reserved1;reserved1662,19645
  int          reserved2;reserved2663,19671
#define PTHREAD_MUTEX_INITIALIZER PTHREAD_MUTEX_INITIALIZER674,19828
#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER PTHREAD_RECURSIVE_MUTEX_INITIALIZER675,19885
#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER PTHREAD_ERRORCHECK_MUTEX_INITIALIZER676,19952
#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP681,20063
#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP682,20146
#define PTHREAD_COND_INITIALIZER PTHREAD_COND_INITIALIZER684,20232
#define PTHREAD_RWLOCK_INITIALIZER PTHREAD_RWLOCK_INITIALIZER686,20288
#define PTHREAD_SPINLOCK_INITIALIZER PTHREAD_SPINLOCK_INITIALIZER688,20348
  PTHREAD_MUTEX_FAST_NP,PTHREAD_MUTEX_FAST_NP697,20483
  PTHREAD_MUTEX_RECURSIVE_NP,PTHREAD_MUTEX_RECURSIVE_NP698,20508
  PTHREAD_MUTEX_ERRORCHECK_NP,PTHREAD_MUTEX_ERRORCHECK_NP699,20538
  PTHREAD_MUTEX_TIMED_NP = PTHREAD_MUTEX_FAST_NP,PTHREAD_MUTEX_TIMED_NP700,20569
  PTHREAD_MUTEX_ADAPTIVE_NP = PTHREAD_MUTEX_FAST_NP,PTHREAD_MUTEX_ADAPTIVE_NP701,20619
  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_FAST_NP,PTHREAD_MUTEX_NORMAL703,20709
  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,PTHREAD_MUTEX_RECURSIVE704,20757
  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,PTHREAD_MUTEX_ERRORCHECK705,20813
  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMALPTHREAD_MUTEX_DEFAULT706,20871
typedef struct ptw32_cleanup_t ptw32_cleanup_t;ptw32_cleanup_t710,20923
typedef void (* PTW32_CDECL ptw32_cleanup_callback_t)(void *);ptw32_cleanup_callback_t717,21082
struct ptw32_cleanup_tptw32_cleanup_t723,21210
  ptw32_cleanup_callback_t routine;routine725,21235
  void *arg;arg726,21271
  struct ptw32_cleanup_t *prev;prev727,21284
#define pthread_cleanup_push(pthread_cleanup_push735,21413
#define pthread_cleanup_pop(pthread_cleanup_pop744,21683
#define pthread_cleanup_push(pthread_cleanup_push763,22124
#define pthread_cleanup_pop(pthread_cleanup_pop769,22332
        class PThreadCleanup {PThreadCleanup782,22579
      ptw32_cleanup_callback_t cleanUpRout;cleanUpRout795,23076
          void    *       obj;obj796,23120
          int             executeIt;executeIt797,23151
          PThreadCleanup() :PThreadCleanup800,23205
          PThreadCleanup(PThreadCleanup810,23409
          ~PThreadCleanup()~PThreadCleanup822,23731
          void execute( int exec )execute830,23943
#define pthread_cleanup_push(pthread_cleanup_push842,24304
#define pthread_cleanup_pop(pthread_cleanup_pop847,24491
enum ptw32_features {ptw32_features1165,36182
  PTW32_SYSTEM_INTERLOCKED_COMPARE_EXCHANGE = 0x0001, /* System provides it. */PTW32_SYSTEM_INTERLOCKED_COMPARE_EXCHANGE1166,36204
  PTW32_ALERTABLE_ASYNC_CANCEL              = 0x0002  /* Can cancel blocked threads. */PTW32_ALERTABLE_ASYNC_CANCEL1167,36284
#        define errno errno1221,37980
#define strtok_r(strtok_r1237,38365
#define asctime_r(asctime_r1241,38478
#define ctime_r(ctime_r1245,38579
#define gmtime_r(gmtime_r1249,38683
#define localtime_r(localtime_r1253,38790
#define rand_r(rand_r1257,38903
#  define _ftime _ftime1265,39064
#  define _timeb _timeb1266,39087
class ptw32_exception {};ptw32_exception1274,39168
class ptw32_exception_cancel : public ptw32_exception {};ptw32_exception_cancel1275,39194
class ptw32_exception_exit   : public ptw32_exception {};ptw32_exception_exit1276,39252
#define __except(__except1298,39766
#define PtW32CatchAll PtW32CatchAll1337,41242
#define catch(catch1343,41358
# undef HANDLEHANDLE1358,41677
# undef DWORDDWORD1361,41723
#undef PTW32_LEVELPTW32_LEVEL1364,41745
#undef PTW32_LEVEL_MAXPTW32_LEVEL_MAX1365,41764

lib/sched.h,1101
#define _SCHED_H_SCHED_H40,1609
#undef PTW32_LEVELPTW32_LEVEL42,1627
#define PTW32_LEVEL PTW32_LEVEL45,1674
#undef PTW32_LEVELPTW32_LEVEL50,1780
#define PTW32_LEVEL PTW32_LEVEL51,1799
#undef PTW32_LEVELPTW32_LEVEL56,1881
#define PTW32_LEVEL PTW32_LEVEL57,1900
#define PTW32_LEVEL_MAX PTW32_LEVEL_MAX61,1968
#define PTW32_LEVEL PTW32_LEVEL64,2021
#    define PTW32_DLLPORT PTW32_DLLPORT81,2499
#    define PTW32_DLLPORT PTW32_DLLPORT83,2556
#  define PTW32_DLLPORTPTW32_DLLPORT86,2620
#    define NEED_ERRNONEED_ERRNO96,2829
#    define NEED_SEMNEED_SEM97,2852
#    define HAVE_MODE_THAVE_MODE_T100,2927
typedef int pid_t;pid_t124,3348
  SCHED_OTHER = 0,SCHED_OTHER130,3416
  SCHED_FIFO,SCHED_FIFO131,3435
  SCHED_RR,SCHED_RR132,3449
  SCHED_MIN   = SCHED_OTHER,SCHED_MIN133,3461
  SCHED_MAX   = SCHED_RRSCHED_MAX134,3490
struct sched_param {sched_param137,3519
  int sched_priority;sched_priority138,3540
#define sched_rr_get_interval(sched_rr_get_interval166,4365
#undef PTW32_LEVELPTW32_LEVEL174,4574
#undef PTW32_LEVEL_MAXPTW32_LEVEL_MAX175,4593
