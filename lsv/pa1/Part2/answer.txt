In ABC there are different ways to represent Boolean functions.
(a) Compare the following differences with the four-bit adder example.

    1. logic network in AIG (by command aig) vs. structurally hashed AIG (by command strash)

        The command "strash" transforms the current network into an AIG by one-level structural hashing, so the gate with the same fanins will be merged.
        On the other hand, the command "aig" simply converts local functions of the nodes to AIGs.

    2. logic network in BDD (by command bdd) vs. collapsed BDD (by command collapse)

        The command "collapse" recursively composes the fanin nodes into the fanout nodes resulting in a network, in which each CO is produced by a node, whose fanins are CIs. 
        Collapsing is performed by building global functions using BDDs and is, therefore, limited to relatively small circuits. 
        After collapsing, the node functions are represented using BDDs.
        The commadn "bdd" just converts local functions of the nodes to BDDs.

(b) Given a structurally hashed AIG, find a sequence of ABC command(s) to covert it to a logic network with node function expressed in sum-of-products (SOP).

    The command of ABC to convert it to a logic network with node function expressed in sum-of-products is "logic".

    Command:
        abc 01> logic